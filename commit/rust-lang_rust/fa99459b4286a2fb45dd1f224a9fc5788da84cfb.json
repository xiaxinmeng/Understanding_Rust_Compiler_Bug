{"sha": "fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "node_id": "C_kwDOAAsO6NoAKGZhOTk0NTliNDI4NmEyZmI0NWRkMWYyMjRhOWZjNTc4OGRhODRjZmI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-15T16:24:52Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-06T18:59:46Z"}, "message": "Reintroduce the span printing in miri (plus point to spans where possible)", "tree": {"sha": "c0b15afd1f6014fde1221d8b993bed43f3001321", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0b15afd1f6014fde1221d8b993bed43f3001321"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "html_url": "https://github.com/rust-lang/rust/commit/fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7782a2b70d89bbf7d918e00f6723b62234c57ff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7782a2b70d89bbf7d918e00f6723b62234c57ff4", "html_url": "https://github.com/rust-lang/rust/commit/7782a2b70d89bbf7d918e00f6723b62234c57ff4"}], "stats": {"total": 843, "additions": 423, "deletions": 420}, "files": [{"sha": "e354287453bad604fbe5c7f9cd8b9f701de3bfab", "filename": "src/tools/miri/src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fdiagnostics.rs?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -364,7 +364,10 @@ fn report_msg<'tcx>(\n         if is_local && idx > 0 {\n             err.span_note(frame_info.span, &frame_info.to_string());\n         } else {\n-            err.note(&frame_info.to_string());\n+            let sm = sess.source_map();\n+            let lo = sm.lookup_char_pos(frame_info.span.lo());\n+            let filename = sm.filename_for_diagnostics(&lo.file.name);\n+            err.note(format!(\"{frame_info} at {}:{}:{}\", filename, lo.line, lo.col.0 + 1));\n         }\n     }\n "}, {"sha": "f649f0ae43e30992634235fd3f6b160d6e857ec1", "filename": "src/tools/miri/tests/extern-so/fail/function_not_in_so.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Fextern-so%2Ffail%2Ffunction_not_in_so.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Fextern-so%2Ffail%2Ffunction_not_in_so.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fextern-so%2Ffail%2Ffunction_not_in_so.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         foo();\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/function_not_in_so.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2d3275f6b19011eda917967475e5cf9d3c77cc1c", "filename": "src/tools/miri/tests/fail/abort-terminator.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fabort-terminator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fabort-terminator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fabort-terminator.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -9,7 +9,7 @@ LL | |     panic!()\n LL | | }\n    | |_^ the program aborted execution\n    |\n-   = note: inside `panic_abort`\n+   = note: inside `panic_abort` at $DIR/abort-terminator.rs:LL:CC\n note: inside `main`\n   --> $DIR/abort-terminator.rs:LL:CC\n    |"}, {"sha": "095eeeb79de7b2d4e58ec72f945f85fbee7d4cd5", "filename": "src/tools/miri/tests/fail/alloc/deallocate-bad-alignment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-bad-alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-bad-alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-bad-alignment.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { __rust_dealloc(ptr, layout.size(), layout.align()) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::dealloc`\n+   = note: inside `std::alloc::dealloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n note: inside `main`\n   --> $DIR/deallocate-bad-alignment.rs:LL:CC\n    |"}, {"sha": "5fe93c841b22c80c963456a3f77fe230a29ee89b", "filename": "src/tools/miri/tests/fail/alloc/deallocate-bad-size.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-bad-size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-bad-size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-bad-size.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { __rust_dealloc(ptr, layout.size(), layout.align()) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::dealloc`\n+   = note: inside `std::alloc::dealloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n note: inside `main`\n   --> $DIR/deallocate-bad-size.rs:LL:CC\n    |"}, {"sha": "fa7a74ee13cfe64cb12d27181463715ef1c92767", "filename": "src/tools/miri/tests/fail/alloc/deallocate-twice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fdeallocate-twice.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { __rust_dealloc(ptr, layout.size(), layout.align()) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::dealloc`\n+   = note: inside `std::alloc::dealloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n note: inside `main`\n   --> $DIR/deallocate-twice.rs:LL:CC\n    |"}, {"sha": "62ffb8142a3fb36c971153894af5f7734c4cbd8f", "filename": "src/tools/miri/tests/fail/alloc/global_system_mixup.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fglobal_system_mixup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fglobal_system_mixup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fglobal_system_mixup.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,8 +7,8 @@ LL |         FREE();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::sys::PLATFORM::alloc::<impl std::alloc::GlobalAlloc for std::alloc::System>::dealloc`\n-   = note: inside `<std::alloc::System as std::alloc::Allocator>::deallocate`\n+   = note: inside `std::sys::PLATFORM::alloc::<impl std::alloc::GlobalAlloc for std::alloc::System>::dealloc` at RUSTLIB/std/src/sys/PLATFORM/alloc.rs:LL:CC\n+   = note: inside `<std::alloc::System as std::alloc::Allocator>::deallocate` at RUSTLIB/std/src/alloc.rs:LL:CC\n note: inside `main`\n   --> $DIR/global_system_mixup.rs:LL:CC\n    |"}, {"sha": "ea70970ae0fefbf499318cf12de8a12d68fb35dc", "filename": "src/tools/miri/tests/fail/alloc/no_global_allocator.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fno_global_allocator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fno_global_allocator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fno_global_allocator.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         __rust_alloc(1, 1);\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `start`\n+   = note: inside `start` at $DIR/no_global_allocator.rs:LL:CC\n \n error: aborting due to previous error\n "}, {"sha": "24cabb395649c21766fd4234f7a89826ff9a846e", "filename": "src/tools/miri/tests/fail/alloc/reallocate-bad-size.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-bad-size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-bad-size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-bad-size.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { __rust_realloc(ptr, layout.size(), layout.align(), new_size) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::realloc`\n+   = note: inside `std::alloc::realloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n note: inside `main`\n   --> $DIR/reallocate-bad-size.rs:LL:CC\n    |"}, {"sha": "5631dcb4cc084f50c73dfe5e88bf0d842c23d4e7", "filename": "src/tools/miri/tests/fail/alloc/reallocate-change-alloc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-change-alloc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-change-alloc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-change-alloc.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _z = *x;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/reallocate-change-alloc.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b1460bfb763eed3d219accd982bdfbef528c11b8", "filename": "src/tools/miri/tests/fail/alloc/reallocate-dangling.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-dangling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-dangling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Freallocate-dangling.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { __rust_realloc(ptr, layout.size(), layout.align(), new_size) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::realloc`\n+   = note: inside `std::alloc::realloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n note: inside `main`\n   --> $DIR/reallocate-dangling.rs:LL:CC\n    |"}, {"sha": "b1636050a78ca70972762891a49342f57d66049c", "filename": "src/tools/miri/tests/fail/alloc/stack_free.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fstack_free.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fstack_free.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Falloc%2Fstack_free.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,11 +7,11 @@ LL |     unsafe { __rust_dealloc(ptr, layout.size(), layout.align()) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::dealloc`\n-   = note: inside `<std::alloc::Global as std::alloc::Allocator>::deallocate`\n-   = note: inside `alloc::alloc::box_free::<i32, std::alloc::Global>`\n-   = note: inside `std::ptr::drop_in_place::<std::boxed::Box<i32>> - shim(Some(std::boxed::Box<i32>))`\n-   = note: inside `std::mem::drop::<std::boxed::Box<i32>>`\n+   = note: inside `std::alloc::dealloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `<std::alloc::Global as std::alloc::Allocator>::deallocate` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `alloc::alloc::box_free::<i32, std::alloc::Global>` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `std::ptr::drop_in_place::<std::boxed::Box<i32>> - shim(Some(std::boxed::Box<i32>))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n+   = note: inside `std::mem::drop::<std::boxed::Box<i32>>` at RUSTLIB/core/src/mem/mod.rs:LL:CC\n note: inside `main`\n   --> $DIR/stack_free.rs:LL:CC\n    |"}, {"sha": "f57b52c4bda7a14943ba15cc87f305851f85c4d6", "filename": "src/tools/miri/tests/fail/box-cell-alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbox-cell-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbox-cell-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbox-cell-alias.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x1] by a Unique retag\n LL |     let res = helper(val, ptr);\n    |                      ^^^\n    = note: BACKTRACE:\n-   = note: inside `helper`\n+   = note: inside `helper` at $DIR/box-cell-alias.rs:LL:CC\n note: inside `main`\n   --> $DIR/box-cell-alias.rs:LL:CC\n    |"}, {"sha": "96f2ff3282c82a4955ec44bd1e30abb3eea32433", "filename": "src/tools/miri/tests/fail/branchless-select-i128-pointer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbranchless-select-i128-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbranchless-select-i128-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbranchless-select-i128-pointer.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -11,7 +11,7 @@ LL | |             )\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/branchless-select-i128-pointer.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "7b9bbdb382895a75b589e37b65e279571458db02", "filename": "src/tools/miri/tests/fail/breakpoint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbreakpoint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbreakpoint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fbreakpoint.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: abnormal termination: Trace/breakpoint trap\n LL |         core::intrinsics::breakpoint()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Trace/breakpoint trap\n    |\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/breakpoint.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "94463bef8f0fe9731cfda7ae7e4699655b0799da", "filename": "src/tools/miri/tests/fail/concurrency/libc_pthread_create_too_few_args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_create_too_few_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_create_too_few_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_create_too_few_args.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     panic!()\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `thread_start`\n+   = note: inside `thread_start` at RUSTLIB/std/src/panic.rs:LL:CC\n    = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "fdbe91cc8a803986f08fd32c29bde95d92ecf788", "filename": "src/tools/miri/tests/fail/concurrency/libc_pthread_create_too_many_args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_create_too_many_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_create_too_many_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_create_too_many_args.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     panic!()\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `thread_start`\n+   = note: inside `thread_start` at RUSTLIB/std/src/panic.rs:LL:CC\n    = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "763e0d3665d8f6bae4c27a7bb03878a518db5ca0", "filename": "src/tools/miri/tests/fail/concurrency/libc_pthread_join_detached.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_join_detached.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a3253e2ef933bf712b0acfea7a9ca409007b6d4f", "filename": "src/tools/miri/tests/fail/concurrency/libc_pthread_join_joined.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_join_joined.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "09e14d46a967f708fae5a1dabbb51fce7e8fe837", "filename": "src/tools/miri/tests/fail/concurrency/libc_pthread_join_main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             assert_eq!(libc::pthread_join(thread_id, ptr::null_mut()), 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_join_main.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "db5d7bfd5daef9d80d1b8b5438fa31766ba0c000", "filename": "src/tools/miri/tests/fail/concurrency/libc_pthread_join_multiple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...   assert_eq!(libc::pthread_join(native_copy, ptr::null_mut()), 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_join_multiple.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "8db4a83f9cebb3d71f41df2aaab37c16d55eed01", "filename": "src/tools/miri/tests/fail/concurrency/libc_pthread_join_self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_join_self.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d51fdee0b256fca3acdad3ccd756965a1007f49a", "filename": "src/tools/miri/tests/fail/concurrency/read_only_atomic_cmpxchg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fread_only_atomic_cmpxchg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fread_only_atomic_cmpxchg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fread_only_atomic_cmpxchg.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -13,7 +13,7 @@ please report an issue at <https://github.com/rust-lang/miri/issues> if this is\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/read_only_atomic_cmpxchg.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "17851d6b470b4883fd68a62b22db08c8789d9cac", "filename": "src/tools/miri/tests/fail/concurrency/read_only_atomic_load.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fread_only_atomic_load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fread_only_atomic_load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fread_only_atomic_load.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -13,7 +13,7 @@ please report an issue at <https://github.com/rust-lang/miri/issues> if this is\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/read_only_atomic_load.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "cc3e56398781bf6e59e5df80538f2199ef945b5c", "filename": "src/tools/miri/tests/fail/concurrency/thread_local_static_dealloc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _val = *dangling_ptr.0;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/thread_local_static_dealloc.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "98db33e3206bd11bde8beb13550bd410a0235f36", "filename": "src/tools/miri/tests/fail/concurrency/unwind_top_of_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -12,7 +12,7 @@ LL | | }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `thread_start`\n+   = note: inside `thread_start` at $DIR/unwind_top_of_stack.rs:LL:CC\n \n error: aborting due to previous error\n "}, {"sha": "7b297b260d87ab2ce141265147188e8a195132ce", "filename": "src/tools/miri/tests/fail/concurrency/windows_join_detached.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fwindows_join_detached.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fwindows_join_detached.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fconcurrency%2Fwindows_join_detached.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -10,7 +10,7 @@ LL |         let rc = unsafe { c::WaitForSingleObject(self.handle.as_raw_handle(\n    = note: inside `std::sys::PLATFORM::thread::Thread::join` at RUSTLIB/std/src/sys/PLATFORM/thread.rs:LL:CC\n    = note: inside `std::thread::JoinInner::<'_, ()>::join` at RUSTLIB/std/src/thread/mod.rs:LL:CC\n    = note: inside `std::thread::JoinHandle::<()>::join` at RUSTLIB/std/src/thread/mod.rs:LL:CC\n-note: inside `main` at $DIR/windows_join_detached.rs:LL:CC\n+note: inside `main`\n   --> $DIR/windows_join_detached.rs:LL:CC\n    |\n LL |     thread.join().unwrap();"}, {"sha": "5f081afe68af89458165ed1dcd244c7eea7ef428", "filename": "src/tools/miri/tests/fail/dangling_pointers/dangling_pointer_addr_of.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_pointer_addr_of.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_pointer_addr_of.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_pointer_addr_of.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { ptr::addr_of!(*p) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n    = note: this error originates in the macro `ptr::addr_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "cb323818845df248cf36e34b025a8b18355b9d62", "filename": "src/tools/miri/tests/fail/dangling_pointers/dangling_pointer_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_pointer_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_pointer_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_pointer_deref.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { *p };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/dangling_pointer_deref.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "02db6302a0a1ea671efd1587af94fb6e64dc4f21", "filename": "src/tools/miri/tests/fail/dangling_pointers/dangling_zst_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_zst_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_zst_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdangling_zst_deref.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _x = unsafe { *p };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/dangling_zst_deref.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "3e2c3903b7e47fc572412a6a870b89a8564b3325", "filename": "src/tools/miri/tests/fail/dangling_pointers/deref-invalid-ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _y = unsafe { &*x as *const u32 };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/deref-invalid-ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "fe039ef3adaf96d5cf1ac6fb95d61afa10882693", "filename": "src/tools/miri/tests/fail/dangling_pointers/deref-partially-dangling.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fderef-partially-dangling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fderef-partially-dangling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fderef-partially-dangling.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let val = unsafe { (*xptr).1 };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/deref-partially-dangling.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "33aa6c844101775e30cda9ceff6d33ad1ae8e93e", "filename": "src/tools/miri/tests/fail/dangling_pointers/dyn_size.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdyn_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdyn_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fdyn_size.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _ptr = unsafe { &*ptr };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/dyn_size.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "3e492a170c8b14270f8bd12a3927380280433042", "filename": "src/tools/miri/tests/fail/dangling_pointers/maybe_null_pointer_deref_zst.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_deref_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_deref_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_deref_zst.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _x: () = unsafe { *ptr };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/maybe_null_pointer_deref_zst.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c41c20aaf4a7bb7665295de821a6b7780b5f5fe1", "filename": "src/tools/miri/tests/fail/dangling_pointers/maybe_null_pointer_write_zst.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { *ptr = zst_val };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/maybe_null_pointer_write_zst.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "64dcaa4548476876afd2e252fff55c5e93ab7a7c", "filename": "src/tools/miri/tests/fail/dangling_pointers/null_pointer_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x: i32 = unsafe { *std::ptr::null() };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/null_pointer_deref.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "301578a4f5fb411bb4c19099080820d4c7c51de3", "filename": "src/tools/miri/tests/fail/dangling_pointers/null_pointer_deref_zst.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x: () = unsafe { *std::ptr::null() };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/null_pointer_deref_zst.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "0e5858a96f9d78cc59b599c27917843d6f29ebeb", "filename": "src/tools/miri/tests/fail/dangling_pointers/null_pointer_write.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { *std::ptr::null_mut() = 0i32 };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/null_pointer_write.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2953d85c25f3f96b631fac89066963ede32c4963", "filename": "src/tools/miri/tests/fail/dangling_pointers/null_pointer_write_zst.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { std::ptr::null_mut::<[u8; 0]>().write(zst_val) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/null_pointer_write_zst.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b2461ce4230ad79f94604d25cc1890fa3883d3c2", "filename": "src/tools/miri/tests/fail/dangling_pointers/out_of_bounds_read1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fout_of_bounds_read1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fout_of_bounds_read1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fout_of_bounds_read1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { *v.as_ptr().wrapping_offset(5) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/out_of_bounds_read1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b17058b406298a649fe5cf50505755f84c1540b1", "filename": "src/tools/miri/tests/fail/dangling_pointers/out_of_bounds_read2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fout_of_bounds_read2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fout_of_bounds_read2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fout_of_bounds_read2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { *v.as_ptr().wrapping_offset(5) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/out_of_bounds_read2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "679e4809ca663bc2dbfdfcb3db2bcc2272834f02", "filename": "src/tools/miri/tests/fail/dangling_pointers/stack_temporary.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fstack_temporary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fstack_temporary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fstack_temporary.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let val = *x;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/stack_temporary.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2ba8116cadc247ca710e303e2a2b2fd529c2cfd7", "filename": "src/tools/miri/tests/fail/dangling_pointers/storage_dead_dangling.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { &mut *(LEAK as *mut i32) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `evil`\n+   = note: inside `evil` at $DIR/storage_dead_dangling.rs:LL:CC\n note: inside `main`\n   --> $DIR/storage_dead_dangling.rs:LL:CC\n    |"}, {"sha": "658fb228174e56bf17380408c7282bd1dc08288a", "filename": "src/tools/miri/tests/fail/dangling_pointers/wild_pointer_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { *p };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/wild_pointer_deref.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c6bfd12b241101d7f1c0fdc4710c2f0e8807f4fe", "filename": "src/tools/miri/tests/fail/data_race/alloc_read_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_read_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *pointer.load(Ordering::Relaxed)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/alloc_read_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c4efc175c207764bb8404bc3ba9956b05c6a7081", "filename": "src/tools/miri/tests/fail/data_race/alloc_write_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Falloc_write_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *pointer.load(Ordering::Relaxed) = 2;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/alloc_write_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "04adf0a98b6c55d32bacdc7b3d1c84c892178a15", "filename": "src/tools/miri/tests/fail/data_race/atomic_read_na_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             (&*c.0).load(Ordering::SeqCst)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/atomic_read_na_write_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b48f927b8fcae501556bf93bf230f44bfe997686", "filename": "src/tools/miri/tests/fail/data_race/atomic_read_na_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *atomic_ref.get_mut() = 32;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/atomic_read_na_write_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "fdb9b353a67bf42f4268a63ec11068ddf6245fee", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_read_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *atomic_ref.get_mut()\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/atomic_write_na_read_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ec581e322b7d1da928d6c0da30bdf7a9c73a8edf", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_read_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             (&*c.0).store(32, Ordering::SeqCst);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/atomic_write_na_read_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "4c75f94d71cf55a0a4f6daf7808a7b34c7e485d4", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             (&*c.0).store(64, Ordering::SeqCst);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/atomic_write_na_write_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "8c7f14081c87b2634d705cc9770d4c347b76a495", "filename": "src/tools/miri/tests/fail/data_race/atomic_write_na_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *atomic_ref.get_mut() = 32;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/atomic_write_na_write_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "663bb8d4af5122e24f171cfc9d21637209ff8392", "filename": "src/tools/miri/tests/fail/data_race/dangling_thread_async_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *c.0 = 64;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/dangling_thread_async_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ad3e1735378f37711f4f54bc2d10ed709d56d35f", "filename": "src/tools/miri/tests/fail/data_race/dangling_thread_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         *c.0 = 64;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/dangling_thread_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "194c2260baaab478d8ac78d05fa5ca9cd5bceebb", "filename": "src/tools/miri/tests/fail/data_race/dealloc_read_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -12,7 +12,7 @@ LL | |             );\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/dealloc_read_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f303d57c8bd9caa78af3eb2ec5e2823cd969099f", "filename": "src/tools/miri/tests/fail/data_race/dealloc_read_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *ptr.0\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/dealloc_read_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c986e912f03baa3a3afa50fed8daae10bde0136c", "filename": "src/tools/miri/tests/fail/data_race/dealloc_read_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/dealloc_read_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "56eb0b519c484dcd6bdd62479df5254d20b8791b", "filename": "src/tools/miri/tests/fail/data_race/dealloc_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -12,7 +12,7 @@ LL | |             );\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/dealloc_write_race1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "23b8e9ade0e0efe929a60ebbccaecb87117537cd", "filename": "src/tools/miri/tests/fail/data_race/dealloc_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *ptr.0 = 2;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/dealloc_write_race2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "7b77e2470a1ab597ce20866ab09bb0bd6728548d", "filename": "src/tools/miri/tests/fail/data_race/dealloc_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/dealloc_write_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "26c07ae6962b56b87ca26405e70102c6176de97b", "filename": "src/tools/miri/tests/fail/data_race/enable_after_join_to_main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *c.0 = 64;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/enable_after_join_to_main.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "0abfe213db17dbf559f7c8e3983a93733e7d7f93", "filename": "src/tools/miri/tests/fail/data_race/fence_after_load.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Ffence_after_load.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { V = 2 }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/fence_after_load.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "08a19537312cf957c5dc5f2f11317ccc0bf4e341", "filename": "src/tools/miri/tests/fail/data_race/read_write_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *c.0 = 64;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/read_write_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "20f137afe732996661cd82566d05c63968e8f7e7", "filename": "src/tools/miri/tests/fail/data_race/read_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             stack_var\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/read_write_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6121c25db22d7c809b97700775ab912b4456ed19", "filename": "src/tools/miri/tests/fail/data_race/relax_acquire_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |                 *c.0\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/relax_acquire_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "777bc4adadc6d20f3039a9c48c9f208bf7013f1b", "filename": "src/tools/miri/tests/fail/data_race/release_seq_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |                 *c.0\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/release_seq_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "0fcb192d920fd03293f0b61864de7dbd054ce366", "filename": "src/tools/miri/tests/fail/data_race/release_seq_race_same_thread.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |                 *c.0\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/release_seq_race_same_thread.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "3ae6f3b84fe12449cd0b0ea731e47dba8e2d13ba", "filename": "src/tools/miri/tests/fail/data_race/rmw_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frmw_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frmw_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Frmw_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |                 *c.0\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/rmw_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "0075f877b29dc9b12fb6afceaaaaad85a6e91938", "filename": "src/tools/miri/tests/fail/data_race/stack_pop_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `race`\n+   = note: inside `race` at $DIR/stack_pop_race.rs:LL:CC\n note: inside `main`\n   --> $DIR/stack_pop_race.rs:LL:CC\n    |"}, {"sha": "ee7072ccf5d17dc47d865f024ea731b7a9441429", "filename": "src/tools/miri/tests/fail/data_race/write_write_race.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             *c.0 = 64;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/write_write_race.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ceb473c2a4a41c7aa99e4c0c8b33ebe98df1be90", "filename": "src/tools/miri/tests/fail/data_race/write_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             stack_var = 1usize;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/write_write_race_stack.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "03272105c4146fa84096bc832627697e418dcca5", "filename": "src/tools/miri/tests/fail/dyn-call-trait-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdyn-call-trait-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdyn-call-trait-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdyn-call-trait-mismatch.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     r2.method2();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/dyn-call-trait-mismatch.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "21870ef3733e82cbda3d74f8bb54620b5792d71d", "filename": "src/tools/miri/tests/fail/dyn-upcast-trait-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdyn-upcast-trait-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdyn-upcast-trait-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdyn-upcast-trait-mismatch.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _err = baz_fake as &dyn Foo;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/dyn-upcast-trait-mismatch.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a2d343bf8651c92dafd1000135ca9d40f8774354", "filename": "src/tools/miri/tests/fail/environ-gets-deallocated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fenviron-gets-deallocated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fenviron-gets-deallocated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fenviron-gets-deallocated.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _y = unsafe { *pointer };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/environ-gets-deallocated.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "fa0d55e5f6781f51fbe071a6907ba18e63eaf32f", "filename": "src/tools/miri/tests/fail/extern_static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |     let _val = unsafe { std::ptr::addr_of!(FOO) };\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/extern_static.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "e4ee8f1acba29fd40e5e62a1ec51d9fc7b71644d", "filename": "src/tools/miri/tests/fail/extern_static_in_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static_in_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static_in_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static_in_const.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |     let _val = X;\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/extern_static_in_const.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a56eba09df98fcdcbf88d415873c6015c23ba8a9", "filename": "src/tools/miri/tests/fail/extern_static_wrong_size.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static_wrong_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static_wrong_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fextern_static_wrong_size.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |     let _val = unsafe { environ };\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/extern_static_wrong_size.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2a0759f8a3ba79720746173017a878c65bf7701c", "filename": "src/tools/miri/tests/fail/fast_math_both.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_both.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_both.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_both.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...: f32 = core::intrinsics::fsub_fast(f32::NAN, f32::NAN);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/fast_math_both.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "766662ca14ba93452f658fc76c34a0351b347cd5", "filename": "src/tools/miri/tests/fail/fast_math_first.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_first.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_first.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_first.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...   let _x: f32 = core::intrinsics::frem_fast(f32::NAN, 3.2);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/fast_math_first.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ce93f9398f2cdbaf0594b1c071d81d720b5310dd", "filename": "src/tools/miri/tests/fail/fast_math_second.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_second.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_second.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffast_math_second.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...f32 = core::intrinsics::fmul_fast(3.4f32, f32::INFINITY);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/fast_math_second.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "406ccb070bab5d6c57cbd99c7b92a61e4adddc60", "filename": "src/tools/miri/tests/fail/function_calls/check_arg_abi.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_abi.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _ = malloc(0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/check_arg_abi.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d90a7e31d6ee9df09ce08fbbb95a31234087a41b", "filename": "src/tools/miri/tests/fail/function_calls/check_arg_count_abort.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_abort.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_abort.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_abort.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         abort(1);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/check_arg_count_abort.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9e2751a216bcb99bce6679d086c66414ebe88934", "filename": "src/tools/miri/tests/fail/function_calls/check_arg_count_too_few_args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_too_few_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_too_few_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_too_few_args.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _ = malloc();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/check_arg_count_too_few_args.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "e9a38b5ae421853ba47bff5b39414e07e0e1015d", "filename": "src/tools/miri/tests/fail/function_calls/check_arg_count_too_many_args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_too_many_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_too_many_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_arg_count_too_many_args.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _ = malloc(1, 2);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/check_arg_count_too_many_args.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "50afc1097974902ad8cd4e13ddea8fa056444596", "filename": "src/tools/miri/tests/fail/function_calls/check_callback_abi.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_callback_abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_callback_abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fcheck_callback_abi.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -12,7 +12,7 @@ LL | |         );\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/check_callback_abi.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ae5c6cb72b3c9b741bdbd4b7a9b2b4c0e31f83ef", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_abi_mismatch.cache.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.cache.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.cache.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.cache.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             foo();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_abi_mismatch.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "17d56793ac5c64d8e810f8639ba01eeaef19ef5c", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_abi_mismatch.fn_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.fn_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         std::mem::transmute::<unsafe fn(), unsafe extern \"C\" fn()>(foo)();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_abi_mismatch.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ae5c6cb72b3c9b741bdbd4b7a9b2b4c0e31f83ef", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_abi_mismatch.no_cache.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.no_cache.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.no_cache.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.no_cache.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             foo();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_abi_mismatch.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "7f87ec6f3bb693a0b397416f0fc540721076708a", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_bad_unwind1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -9,7 +9,7 @@ LL |     unsafe { unwind() }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_bad_unwind1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "484f703f9c1b52dba2f20f664a4a73eb45174e99", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_bad_unwind2.both.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.both.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.both.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.both.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -10,7 +10,7 @@ LL | |     panic!();\n LL | | }\n    | |_^ the program aborted execution\n    |\n-   = note: inside `nounwind`\n+   = note: inside `nounwind` at $DIR/exported_symbol_bad_unwind2.rs:LL:CC\n note: inside `main`\n   --> $DIR/exported_symbol_bad_unwind2.rs:LL:CC\n    |"}, {"sha": "484f703f9c1b52dba2f20f664a4a73eb45174e99", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_bad_unwind2.definition.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.definition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.definition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.definition.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -10,7 +10,7 @@ LL | |     panic!();\n LL | | }\n    | |_^ the program aborted execution\n    |\n-   = note: inside `nounwind`\n+   = note: inside `nounwind` at $DIR/exported_symbol_bad_unwind2.rs:LL:CC\n note: inside `main`\n   --> $DIR/exported_symbol_bad_unwind2.rs:LL:CC\n    |"}, {"sha": "b23c05a530357e101b5cd557c9a2f75f62d1621e", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_bad_unwind2.extern_block.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.extern_block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.extern_block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.extern_block.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -9,7 +9,7 @@ LL |     unsafe { nounwind() }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_bad_unwind2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "8eb9fa4ff5c27d02828f11e6502355e012eebfac", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_clashing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_clashing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_clashing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_clashing.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -15,7 +15,7 @@ help: then it's defined here again, in crate `exported_symbol_clashing`\n LL | fn bar() {}\n    | ^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_clashing.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "58a996e64530e73fa8b38df66f175fce008e4367", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_shim_clashing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_shim_clashing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_shim_clashing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_shim_clashing.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -13,7 +13,7 @@ LL | |     unreachable!()\n LL | | }\n    | |_^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_shim_clashing.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "1aa13ce4389538f5f3cd602515b8e455871a2f36", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_wrong_arguments.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_wrong_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_wrong_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_wrong_arguments.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { foo(1) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_wrong_arguments.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "abfd7a9a6c4d9858e5fa3bad14dd74cb3de5183f", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_wrong_type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_wrong_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_wrong_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_wrong_type.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { FOO() }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exported_symbol_wrong_type.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ad43c2c9d3fe7a045943204074e4e9620af696c0", "filename": "src/tools/miri/tests/fail/function_pointers/cast_box_int_to_fn_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_box_int_to_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_box_int_to_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_box_int_to_fn_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     (*g)(42)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cast_box_int_to_fn_ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "bb2a263795980a9473e5e336290ce15967ed4ad1", "filename": "src/tools/miri/tests/fail/function_pointers/cast_fn_ptr1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     g(42)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cast_fn_ptr1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "086712e0d13bd0abf235196731924e9a4d1ba3c5", "filename": "src/tools/miri/tests/fail/function_pointers/cast_fn_ptr2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     g(42)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cast_fn_ptr2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "55fd7d6072089eda01e6ecad8bc532df0af4d9c8", "filename": "src/tools/miri/tests/fail/function_pointers/cast_fn_ptr3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     g()\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cast_fn_ptr3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "610425658fe1f2c8cc5f4ec6beced4982c35254a", "filename": "src/tools/miri/tests/fail/function_pointers/cast_fn_ptr4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr4.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     g(&42 as *const i32)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cast_fn_ptr4.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c4e08b58430a27a689bc5537cc9377a6e3bf5126", "filename": "src/tools/miri/tests/fail/function_pointers/cast_fn_ptr5.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_fn_ptr5.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     g()\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cast_fn_ptr5.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "81fc9716a4156378a0f0c48c2c20db00f2601c2b", "filename": "src/tools/miri/tests/fail/function_pointers/cast_int_to_fn_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     g(42)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cast_int_to_fn_ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "7ce0b08695ebb877882df05783a8b9e4dd463481", "filename": "src/tools/miri/tests/fail/function_pointers/deref_fn_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fderef_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fderef_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fderef_fn_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         *std::mem::transmute::<fn(), *const u8>(f)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/deref_fn_ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "10c53ca2beaee4ffcfd1f79f0fb7bc7ba4ab399a", "filename": "src/tools/miri/tests/fail/function_pointers/execute_memory.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fexecute_memory.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fexecute_memory.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Fexecute_memory.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         f()\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/execute_memory.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f8c519c1b54b0c703575dcaca823b50fe18522bd", "filename": "src/tools/miri/tests/fail/function_pointers/fn_ptr_offset.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Ffn_ptr_offset.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Ffn_ptr_offset.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_pointers%2Ffn_ptr_offset.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     x();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/fn_ptr_offset.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "80c5794736a9f9b1bcc309e3262cd4482bf8902d", "filename": "src/tools/miri/tests/fail/generator-pinned-moved.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fgenerator-pinned-moved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fgenerator-pinned-moved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fgenerator-pinned-moved.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,13 +7,13 @@ LL |         *num += 1;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/generator-pinned-moved.rs:LL:CC\n note: inside `<GeneratorIteratorAdapter<[static generator@$DIR/generator-pinned-moved.rs:LL:CC]> as std::iter::Iterator>::next`\n   --> $DIR/generator-pinned-moved.rs:LL:CC\n    |\n LL |         match me.resume(()) {\n    |               ^^^^^^^^^^^^^\n-   = note: inside `<std::boxed::Box<GeneratorIteratorAdapter<[static generator@$DIR/generator-pinned-moved.rs:LL:CC]>> as std::iter::Iterator>::next`\n+   = note: inside `<std::boxed::Box<GeneratorIteratorAdapter<[static generator@$DIR/generator-pinned-moved.rs:LL:CC]>> as std::iter::Iterator>::next` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n note: inside `main`\n   --> $DIR/generator-pinned-moved.rs:LL:CC\n    |"}, {"sha": "c1909570d99f28d112be71027ad88f91acb86ea8", "filename": "src/tools/miri/tests/fail/intrinsics/assume.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fassume.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fassume.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fassume.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         std::intrinsics::assume(x > 42);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/assume.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6e3215d9f1c9cd8b5f00c1dae4df61712d83bb05", "filename": "src/tools/miri/tests/fail/intrinsics/copy_null.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_null.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         copy_nonoverlapping(std::ptr::null(), ptr, 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/copy_null.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "23a4adbd0ed6f0034e78aaf2fef4b8ae6b483a77", "filename": "src/tools/miri/tests/fail/intrinsics/copy_overflow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_overflow.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         (&mut y as *mut i32).copy_from(&x, 1usize << (mem::size_of::<usize>\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/copy_overflow.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "cdb3da74ca954ebc7d120bf92f857e6caa102f60", "filename": "src/tools/miri/tests/fail/intrinsics/copy_overlapping.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_overlapping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_overlapping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_overlapping.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         copy_nonoverlapping(a, b, 2);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/copy_overlapping.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a275979e6be13d75e8dd08c740556b969d92a620", "filename": "src/tools/miri/tests/fail/intrinsics/copy_unaligned.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_unaligned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_unaligned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcopy_unaligned.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         copy_nonoverlapping(&data[5], ptr, 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/copy_unaligned.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5ae14472a8a63672da68dad00066e8a6e33bcb55", "filename": "src/tools/miri/tests/fail/intrinsics/ctlz_nonzero.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fctlz_nonzero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fctlz_nonzero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fctlz_nonzero.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         ctlz_nonzero(0u8);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ctlz_nonzero.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ae013fb3d97940d8a7ce9791ae706ce61d4480f6", "filename": "src/tools/miri/tests/fail/intrinsics/cttz_nonzero.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcttz_nonzero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcttz_nonzero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fcttz_nonzero.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         cttz_nonzero(0u8);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/cttz_nonzero.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "8c2910de3eef43b48b20aa180c67cf153f33f2fe", "filename": "src/tools/miri/tests/fail/intrinsics/div-by-zero.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fdiv-by-zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fdiv-by-zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fdiv-by-zero.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _n = unchecked_div(1i64, 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/div-by-zero.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2c7bbc00e1b1bce5cd850ccf58fee8cb2e9a39a2", "filename": "src/tools/miri/tests/fail/intrinsics/exact_div1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { std::intrinsics::exact_div(2, 0) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exact_div1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6a264b8b4476f2d6c86a729c9748f034197e9d99", "filename": "src/tools/miri/tests/fail/intrinsics/exact_div2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { std::intrinsics::exact_div(2u16, 3) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exact_div2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "1a73822c300f3babbcb8316b909c72c33c088f4c", "filename": "src/tools/miri/tests/fail/intrinsics/exact_div3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { std::intrinsics::exact_div(-19i8, 2) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exact_div3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "27201d9c7cf65a79b613138fc2696980f1cd9f3c", "filename": "src/tools/miri/tests/fail/intrinsics/exact_div4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fexact_div4.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { std::intrinsics::exact_div(i64::MIN, -1) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exact_div4.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c82d6b30224fca09abe53588c89366b0a702054f", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_inf1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_inf1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_inf1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_inf1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, i32>(f32::INFINITY);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_inf1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "4ca41b676e9c366ac42d8a50d57c958cb6b75844", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_infneg1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_infneg1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_infneg1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_infneg1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, i32>(f32::NEG_INFINITY);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_infneg1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "88b8948b0c29e967be0f94e30a09be01d2fba821", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_nan.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nan.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, u32>(f32::NAN);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_nan.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ca798dd391aa9edce3df6348a6c88451af473474", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_nanneg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nanneg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nanneg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_nanneg.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, u32>(-f32::NAN);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_nanneg.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "4ff6eb809854040112afabf5373c104338221c45", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_neg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_neg.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, u32>(-1.000000001f32);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_neg.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "fd17709d164b1c84e0023c819ef818cd6c7c6859", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_too_big1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, i32>(2147483648.0f32);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_too_big1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "fdc1f65dc148562f6ec0b44319323914c65ebcaf", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_too_big2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_big2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, u32>((u32::MAX - 127) as f32);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_too_big2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9e743a321444998c8a3658d96a183358600953ed", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_32_too_small1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_small1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_small1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_32_too_small1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f32, i32>(-2147483904.0f32);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_32_too_small1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ee01143dc8dfc518e0d836f314b9176abcecab58", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_inf1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_inf1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_inf1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_inf1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, u128>(f64::INFINITY);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_inf1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f37b8ae550643a82b4f2a2f86e559475f66071e3", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_infneg1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, u128>(f64::NEG_INFINITY);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_infneg1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "05dcd5ebcf69aca82b9e3a2cbf584cc4fe0ba75b", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_infneg2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_infneg2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i128>(f64::NEG_INFINITY);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_infneg2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "0a914abb2ce78f61edbe1c991f0dee43d6c198e8", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_nan.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_nan.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, u32>(f64::NAN);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_nan.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "7e24f45f653d1e0e771931cda266d3d8f36099f7", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_neg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_neg.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, u128>(-1.0000000000001f64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_neg.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "42da33321f371be55ce6bb78b77302c791f547cd", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_big1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i32>(2147483648.0f64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_big1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "af4c4ceb3f73f8c6ebcb2e686090777476919177", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_big2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i64>(9223372036854775808.0f64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_big2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6e384a6fbc7cba6c45c9839d905c15bb0159732b", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_big3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, u64>(18446744073709551616.0f64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_big3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "77f05ff91e3b59009e6d3143f8036ddf326b40a5", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_big4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big4.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, u128>(u128::MAX as f64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_big4.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "cb5eba490b447dd66e1aa5596100345c3e2474d2", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_big5.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big5.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i128>(2402823669209384634633746074317\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_big5.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d899d2f808a5d20daba082fc657f81e33401da4c", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_big6.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big6.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, u128>(f64::MAX);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_big6.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "443b2759c260667ee7daae03c671c0687e3d4e52", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_big7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_big7.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i128>(f64::MIN);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_big7.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f8d88c44aa80d40fa9c287e7437994b4697dcd90", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_small1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i32>(-2147483649.0f64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_small1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d94e57b1e67c22f337590f3bd119d9ba42867d9f", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_small2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i64>(-9223372036854777856.0f64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_small2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "59b74f5f51f377a964f057db3cf4ab08ba2f5683", "filename": "src/tools/miri/tests/fail/intrinsics/float_to_int_64_too_small3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Ffloat_to_int_64_too_small3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         float_to_int_unchecked::<f64, i128>(-240282366920938463463374607431\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/float_to_int_64_too_small3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "4422310870a6416f0eff7d5b6a48d7147adc1e77", "filename": "src/tools/miri/tests/fail/intrinsics/out_of_bounds_ptr_1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { x.offset(5) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/out_of_bounds_ptr_1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6a11ebae108f0be392873e0d9394d327bafd89e9", "filename": "src/tools/miri/tests/fail/intrinsics/out_of_bounds_ptr_2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { x.offset(isize::MIN) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/out_of_bounds_ptr_2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "1364e0f9009d8e30190f642cec2285c9b0588b6a", "filename": "src/tools/miri/tests/fail/intrinsics/out_of_bounds_ptr_3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = unsafe { x.offset(-1) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/out_of_bounds_ptr_3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9c5d0d13108cef7b068346c85c38438c4f09ab6d", "filename": "src/tools/miri/tests/fail/intrinsics/overflowing-unchecked-rsh.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Foverflowing-unchecked-rsh.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Foverflowing-unchecked-rsh.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Foverflowing-unchecked-rsh.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _n = 1i64.unchecked_shr(64);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/overflowing-unchecked-rsh.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9c1c387d5499128090df1f01c8fe23a2cb31a669", "filename": "src/tools/miri/tests/fail/intrinsics/ptr_offset_0_plus_0.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _x = unsafe { x.offset(0) }; // UB despite offset 0, NULL is never\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_offset_0_plus_0.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a31b929d7a7aeeafa9978bc3e28458a52ffaa96c", "filename": "src/tools/miri/tests/fail/intrinsics/ptr_offset_from_oob.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_from_oob.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_from_oob.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_from_oob.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { end_ptr.offset_from(end_ptr) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_offset_from_oob.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "803aaaa55c21ecbda30405070f9a5c1c94926c40", "filename": "src/tools/miri/tests/fail/intrinsics/ptr_offset_from_unsigned_neg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_from_unsigned_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_from_unsigned_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_from_unsigned_neg.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { ptr1.sub_ptr(ptr2) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_offset_from_unsigned_neg.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f76881011d0791584df8e3b68091c26465718e3e", "filename": "src/tools/miri/tests/fail/intrinsics/ptr_offset_int_plus_int.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _val = (1 as *mut u8).offset(1);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_offset_int_plus_int.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6e0744b7d5c395678eff21288f3c1dff25ad21eb", "filename": "src/tools/miri/tests/fail/intrinsics/ptr_offset_int_plus_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _val = (1 as *mut u8).offset(ptr as isize);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_offset_int_plus_ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6fb94cf5f8122e80c235a376ed672425852acb5b", "filename": "src/tools/miri/tests/fail/intrinsics/ptr_offset_overflow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_overflow.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { x.offset(isize::MIN) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_offset_overflow.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b18147ce379d73e204b286595dc36b227a8bcbf5", "filename": "src/tools/miri/tests/fail/intrinsics/ptr_offset_ptr_plus_0.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_ptr_plus_0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_ptr_plus_0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fptr_offset_ptr_plus_0.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _x = unsafe { x.offset(0) }; // UB despite offset 0, the pointer is\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_offset_ptr_plus_0.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2236ad9839c5e8c3e2b6a024171743b6a3299c72", "filename": "src/tools/miri/tests/fail/intrinsics/raw_eq_on_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fraw_eq_on_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fraw_eq_on_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fraw_eq_on_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { raw_eq(&x, &x) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/raw_eq_on_ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "1fc39188e5a9449f0ff44bce1c359cb17d902424", "filename": "src/tools/miri/tests/fail/intrinsics/rem-by-zero.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Frem-by-zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Frem-by-zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Frem-by-zero.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _n = unchecked_rem(3u32, 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/rem-by-zero.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ddab24d0c1639e6d0faabdfe3720177d9f4b4a40", "filename": "src/tools/miri/tests/fail/intrinsics/simd-div-by-zero.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-div-by-zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-div-by-zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-div-by-zero.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_div(x, y);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-div-by-zero.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "27d4dd9e3e73f11d2ead9576eb0f7f5d4900cb05", "filename": "src/tools/miri/tests/fail/intrinsics/simd-div-overflow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-div-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-div-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-div-overflow.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_div(x, y);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-div-overflow.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5c73c76a1613d3119ca8eae60cf92dcc880d6d1b", "filename": "src/tools/miri/tests/fail/intrinsics/simd-float-to-int.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         unsafe { intrinsics::simd_cast(self) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::simd::Simd::<f32, 2>::to_int_unchecked::<i32>`\n+   = note: inside `std::simd::Simd::<f32, 2>::to_int_unchecked::<i32>` at RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n note: inside `main`\n   --> $DIR/simd-float-to-int.rs:LL:CC\n    |"}, {"sha": "7512d57f6720e3836a21d8044882923fe665169f", "filename": "src/tools/miri/tests/fail/intrinsics/simd-gather.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         unsafe { intrinsics::simd_gather(or, ptrs, enable.to_int()) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::simd::Simd::<i8, 4>::gather_select_unchecked`\n+   = note: inside `std::simd::Simd::<i8, 4>::gather_select_unchecked` at RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n note: inside `main`\n   --> $DIR/simd-gather.rs:LL:CC\n    |"}, {"sha": "1e5ac5277e6dcfae8d6f0fe7d344d208ef05fafe", "filename": "src/tools/miri/tests/fail/intrinsics/simd-reduce-invalid-bool.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-reduce-invalid-bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-reduce-invalid-bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-reduce-invalid-bool.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_reduce_any(x);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-reduce-invalid-bool.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "96248e7e599ccb17c1e423c8e96d49f2ee07a9c3", "filename": "src/tools/miri/tests/fail/intrinsics/simd-rem-by-zero.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-rem-by-zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-rem-by-zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-rem-by-zero.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_rem(x, y);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-rem-by-zero.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a9ad60a0e5be2218a57b1a29b5b5cf5afbfccd1f", "filename": "src/tools/miri/tests/fail/intrinsics/simd-scatter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             intrinsics::simd_scatter(self, ptrs, enable.to_int())\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::simd::Simd::<i8, 4>::scatter_select_unchecked`\n+   = note: inside `std::simd::Simd::<i8, 4>::scatter_select_unchecked` at RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n note: inside `main`\n   --> $DIR/simd-scatter.rs:LL:CC\n    |"}, {"sha": "e72cce998d0ed25b7c26c78383ef832bfd187710", "filename": "src/tools/miri/tests/fail/intrinsics/simd-select-bitmask-invalid.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-select-bitmask-invalid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-select-bitmask-invalid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-select-bitmask-invalid.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_select_bitmask(0b11111111u8, x, x);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-select-bitmask-invalid.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "277ceb54ec71e5dc5d6050ce0f5eb1d840c5c9a9", "filename": "src/tools/miri/tests/fail/intrinsics/simd-select-invalid-bool.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-select-invalid-bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-select-invalid-bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-select-invalid-bool.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_select(x, x, x);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-select-invalid-bool.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c8445bb3cdc7566032bacf3e49eeb0ca7c8e65ef", "filename": "src/tools/miri/tests/fail/intrinsics/simd-shl-too-far.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-shl-too-far.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-shl-too-far.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-shl-too-far.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_shl(x, y);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-shl-too-far.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "8eec30c5a52f203ef18fd56e500f92bed95c2b69", "filename": "src/tools/miri/tests/fail/intrinsics/simd-shr-too-far.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-shr-too-far.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-shr-too-far.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-shr-too-far.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         simd_shr(x, y);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/simd-shr-too-far.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f5e96198ee4c9fc439fbf2749a953f6185a4056a", "filename": "src/tools/miri/tests/fail/intrinsics/unchecked_add1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_add1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_add1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_add1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { 40000u16.unchecked_add(30000) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unchecked_add1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5a5c7070ae0b4dc298358040ebb623b5ee604973", "filename": "src/tools/miri/tests/fail/intrinsics/unchecked_add2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_add2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_add2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_add2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { (-30000i16).unchecked_add(-8000) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unchecked_add2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9267e0c49473145334053dc1d6bf2643005deeec", "filename": "src/tools/miri/tests/fail/intrinsics/unchecked_div1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_div1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_div1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_div1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         std::intrinsics::unchecked_div(i16::MIN, -1);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unchecked_div1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9a5a585e1cce48b0a8229fd49da49dc6b8fb6840", "filename": "src/tools/miri/tests/fail/intrinsics/unchecked_mul1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_mul1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_mul1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_mul1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { 300u16.unchecked_mul(250u16) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unchecked_mul1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "46b9f6182172828b2cf7991668f987ed441d586d", "filename": "src/tools/miri/tests/fail/intrinsics/unchecked_mul2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_mul2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_mul2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_mul2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { 1_000_000_000i32.unchecked_mul(-4) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unchecked_mul2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "01e569767bac09634757451a9548298974379583", "filename": "src/tools/miri/tests/fail/intrinsics/unchecked_sub1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_sub1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_sub1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_sub1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { 14u32.unchecked_sub(22) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unchecked_sub1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "38c1647b4f49f44536091907a391b31e039cb359", "filename": "src/tools/miri/tests/fail/intrinsics/unchecked_sub2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_sub2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_sub2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funchecked_sub2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { 30000i16.unchecked_sub(-7000) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unchecked_sub2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "150128ba2a41c1d4665fd5f57c8f2ff62e189e49", "filename": "src/tools/miri/tests/fail/intrinsics/uninit_uninhabited_type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funinit_uninhabited_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funinit_uninhabited_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Funinit_uninhabited_type.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: abnormal termination: aborted execution: attempted to instantiate uninhab\n LL |     unsafe { std::mem::uninitialized::<!>() };\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ aborted execution: attempted to instantiate uninhabited type `!`\n    |\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/uninit_uninhabited_type.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b2969ca3b59296f4289a7047f10e8c12daf0d485", "filename": "src/tools/miri/tests/fail/intrinsics/write_bytes_null.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { write_bytes::<u8>(std::ptr::null_mut(), 0, 0) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/write_bytes_null.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f88afde879acf1863784ab3634da54fedd5c8334", "filename": "src/tools/miri/tests/fail/intrinsics/write_bytes_overflow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fwrite_bytes_overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fwrite_bytes_overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fwrite_bytes_overflow.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         (&mut y as *mut i32).write_bytes(0u8, 1usize << (mem::size_of::<usi\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/write_bytes_overflow.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9d44ba9f746adb2a7440afd1967a93850855d0a7", "filename": "src/tools/miri/tests/fail/intrinsics/zero_fn_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fzero_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fzero_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fzero_fn_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: abnormal termination: aborted execution: attempted to zero-initialize typ\n LL |     unsafe { std::mem::zeroed::<fn()>() };\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ aborted execution: attempted to zero-initialize type `fn()`, which is invalid\n    |\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/zero_fn_ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a522f6cd4fffedfcdc99c7c148d99dcf32960e8f", "filename": "src/tools/miri/tests/fail/invalid_bool.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_bool.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _x = b == std::hint::black_box(true);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/invalid_bool.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d49d753d9e185b0d81bd9a598c87a2ddc39645b4", "filename": "src/tools/miri/tests/fail/invalid_char.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_char.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_char.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_char.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _x = c == 'x';\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/invalid_char.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "01d931de919a47ab4a90db4a6c6ed964defde0bf", "filename": "src/tools/miri/tests/fail/invalid_enum_tag.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_enum_tag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_enum_tag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_enum_tag.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = mem::discriminant(&f);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/invalid_enum_tag.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "eccdbff604574a15e2b014c127f76b0702a013c8", "filename": "src/tools/miri/tests/fail/invalid_int.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Finvalid_int.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let i = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/invalid_int.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f1cb50ab9be788b384ed98693b0812f7baa2142c", "filename": "src/tools/miri/tests/fail/issue-miri-1112.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fissue-miri-1112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fissue-miri-1112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fissue-miri-1112.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let obj = std::mem::transmute::<FatPointer, *mut FunnyPointer>(obj)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `FunnyPointer::from_data_ptr`\n+   = note: inside `FunnyPointer::from_data_ptr` at $DIR/issue-miri-1112.rs:LL:CC\n note: inside `main`\n   --> $DIR/issue-miri-1112.rs:LL:CC\n    |"}, {"sha": "b8e13b61ceb60c5191f291b61de5ff41b229899c", "filename": "src/tools/miri/tests/fail/issue-miri-2432.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fissue-miri-2432.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fissue-miri-2432.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fissue-miri-2432.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     <dyn X as X>::foo(&());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/issue-miri-2432.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "6425a5d7a0ad40c42d1f6e350818c4c8c05cd1bd", "filename": "src/tools/miri/tests/fail/modifying_constants.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fmodifying_constants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fmodifying_constants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fmodifying_constants.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     *y = 42;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/modifying_constants.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a2a63b8baf5945480051dfa486ac029dd09249cb", "filename": "src/tools/miri/tests/fail/never_say_never.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_say_never.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         *(y as *const _ as *const !)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/never_say_never.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "e8df4739f9bcb4faca7e5767a3038e6743bb5a95", "filename": "src/tools/miri/tests/fail/never_transmute_humans.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_transmute_humans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_transmute_humans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_transmute_humans.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         std::mem::transmute::<Human, !>(Human)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/never_transmute_humans.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "413172b25464a683451b6652cced69565b029d4c", "filename": "src/tools/miri/tests/fail/never_transmute_void.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_transmute_void.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_transmute_void.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fnever_transmute_void.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         match v.0 {}\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `m::f`\n+   = note: inside `m::f` at $DIR/never_transmute_void.rs:LL:CC\n note: inside `main`\n   --> $DIR/never_transmute_void.rs:LL:CC\n    |"}, {"sha": "3bd2be03ea1ff2aff213a232e6f6e1277a164db2", "filename": "src/tools/miri/tests/fail/panic/bad_miri_start_panic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fbad_miri_start_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fbad_miri_start_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fbad_miri_start_panic.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     unsafe { miri_start_panic(&mut 0) }\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/bad_miri_start_panic.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5d7f01f4786561ffe5700a2927c47672d56f867a", "filename": "src/tools/miri/tests/fail/panic/bad_unwind.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fbad_unwind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fbad_unwind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fbad_unwind.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -9,10 +9,10 @@ LL |     std::panic::catch_unwind(|| unwind()).unwrap_err();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n-   = note: inside `std::panicking::r#try::do_call::<[closure@$DIR/bad_unwind.rs:LL:CC], ()>`\n-   = note: inside `std::panicking::r#try::<(), [closure@$DIR/bad_unwind.rs:LL:CC]>`\n-   = note: inside `std::panic::catch_unwind::<[closure@$DIR/bad_unwind.rs:LL:CC], ()>`\n+   = note: inside closure at $DIR/bad_unwind.rs:LL:CC\n+   = note: inside `std::panicking::r#try::do_call::<[closure@$DIR/bad_unwind.rs:LL:CC], ()>` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::panicking::r#try::<(), [closure@$DIR/bad_unwind.rs:LL:CC]>` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::panic::catch_unwind::<[closure@$DIR/bad_unwind.rs:LL:CC], ()>` at RUSTLIB/std/src/panic.rs:LL:CC\n note: inside `main`\n   --> $DIR/bad_unwind.rs:LL:CC\n    |"}, {"sha": "6bf13f21601503766daadfb984df0585078d9511", "filename": "src/tools/miri/tests/fail/panic/double_panic.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -71,16 +71,16 @@ error: abnormal termination: the program aborted execution\n LL |     ABORT();\n    | ^ the program aborted execution\n    |\n-   = note: inside `std::sys::PLATFORM::abort_internal`\n-   = note: inside `std::panicking::rust_panic_with_hook`\n-   = note: inside closure\n-   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::rt::begin_panic<&str>::{closure#0}], !>`\n+   = note: inside `std::sys::PLATFORM::abort_internal` at RUSTLIB/std/src/sys/PLATFORM/mod.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic_with_hook` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside closure at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::rt::begin_panic<&str>::{closure#0}], !>` at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n note: inside `<Foo as std::ops::Drop>::drop`\n   --> $DIR/double_panic.rs:LL:CC\n    |\n LL |         panic!(\"second\");\n    | ^\n-   = note: inside `std::ptr::drop_in_place::<Foo> - shim(Some(Foo))`\n+   = note: inside `std::ptr::drop_in_place::<Foo> - shim(Some(Foo))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n note: inside `main`\n   --> $DIR/double_panic.rs:LL:CC\n    |"}, {"sha": "39ad0d268b94ea9b9e58f515a1b3e467abf32efe", "filename": "src/tools/miri/tests/fail/panic/no_std.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fno_std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fno_std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fno_std.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -5,7 +5,7 @@ error: abnormal termination: the program aborted execution\n LL |     core::intrinsics::abort();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ the program aborted execution\n    |\n-   = note: inside `panic_handler`\n+   = note: inside `panic_handler` at $DIR/no_std.rs:LL:CC\n note: inside `start`\n   --> $DIR/no_std.rs:LL:CC\n    |"}, {"sha": "d25dd7be63596e3761edc033cef1df496d65cfac", "filename": "src/tools/miri/tests/fail/panic/panic_abort1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,12 +6,12 @@ error: abnormal termination: the program aborted execution\n LL |                 ABORT();\n    | ^ the program aborted execution\n    |\n-   = note: inside `panic_abort::__rust_start_panic::abort`\n-   = note: inside `panic_abort::__rust_start_panic`\n-   = note: inside `std::panicking::rust_panic`\n-   = note: inside `std::panicking::rust_panic_with_hook`\n-   = note: inside closure\n-   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::rt::begin_panic<&str>::{closure#0}], !>`\n+   = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic_with_hook` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside closure at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::rt::begin_panic<&str>::{closure#0}], !>` at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n note: inside `main`\n   --> $DIR/panic_abort1.rs:LL:CC\n    |"}, {"sha": "f56d509a697b4661f22c9e9bf092adf87a05bdcc", "filename": "src/tools/miri/tests/fail/panic/panic_abort2.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,13 +6,13 @@ error: abnormal termination: the program aborted execution\n LL |                 ABORT();\n    | ^ the program aborted execution\n    |\n-   = note: inside `panic_abort::__rust_start_panic::abort`\n-   = note: inside `panic_abort::__rust_start_panic`\n-   = note: inside `std::panicking::rust_panic`\n-   = note: inside `std::panicking::rust_panic_with_hook`\n-   = note: inside closure\n-   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::panicking::begin_panic_handler::{closure#0}], !>`\n-   = note: inside `std::panicking::begin_panic_handler`\n+   = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic_with_hook` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside closure at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::panicking::begin_panic_handler::{closure#0}], !>` at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n+   = note: inside `std::panicking::begin_panic_handler` at RUSTLIB/std/src/panicking.rs:LL:CC\n note: inside `main`\n   --> $DIR/panic_abort2.rs:LL:CC\n    |"}, {"sha": "43792f769930b6a7964dce2220018619d03cfccc", "filename": "src/tools/miri/tests/fail/panic/panic_abort3.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,13 +6,13 @@ error: abnormal termination: the program aborted execution\n LL |                 ABORT();\n    | ^ the program aborted execution\n    |\n-   = note: inside `panic_abort::__rust_start_panic::abort`\n-   = note: inside `panic_abort::__rust_start_panic`\n-   = note: inside `std::panicking::rust_panic`\n-   = note: inside `std::panicking::rust_panic_with_hook`\n-   = note: inside closure\n-   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::panicking::begin_panic_handler::{closure#0}], !>`\n-   = note: inside `std::panicking::begin_panic_handler`\n+   = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic_with_hook` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside closure at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::panicking::begin_panic_handler::{closure#0}], !>` at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n+   = note: inside `std::panicking::begin_panic_handler` at RUSTLIB/std/src/panicking.rs:LL:CC\n note: inside `main`\n   --> $DIR/panic_abort3.rs:LL:CC\n    |"}, {"sha": "89e181bfb276c984a5deb2bb9eee286fbe09d8d5", "filename": "src/tools/miri/tests/fail/panic/panic_abort4.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fpanic_abort4.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,13 +6,13 @@ error: abnormal termination: the program aborted execution\n LL |                 ABORT();\n    | ^ the program aborted execution\n    |\n-   = note: inside `panic_abort::__rust_start_panic::abort`\n-   = note: inside `panic_abort::__rust_start_panic`\n-   = note: inside `std::panicking::rust_panic`\n-   = note: inside `std::panicking::rust_panic_with_hook`\n-   = note: inside closure\n-   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::panicking::begin_panic_handler::{closure#0}], !>`\n-   = note: inside `std::panicking::begin_panic_handler`\n+   = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::panicking::rust_panic_with_hook` at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside closure at RUSTLIB/std/src/panicking.rs:LL:CC\n+   = note: inside `std::sys_common::backtrace::__rust_end_short_backtrace::<[closure@std::panicking::begin_panic_handler::{closure#0}], !>` at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n+   = note: inside `std::panicking::begin_panic_handler` at RUSTLIB/std/src/panicking.rs:LL:CC\n note: inside `main`\n   --> $DIR/panic_abort4.rs:LL:CC\n    |"}, {"sha": "363e69ba41db94e03843fd2e55a23b4d4275b8b1", "filename": "src/tools/miri/tests/fail/panic/unwind_panic_abort.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Funwind_panic_abort.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Funwind_panic_abort.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Funwind_panic_abort.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         miri_start_panic(&mut 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/unwind_panic_abort.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "06e5ede8c7788447bb204c9df009d115331d1027", "filename": "src/tools/miri/tests/fail/provenance/pointer_partial_overwrite.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fpointer_partial_overwrite.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fpointer_partial_overwrite.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fpointer_partial_overwrite.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let x = *p;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/pointer_partial_overwrite.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "042d8cd4afe79a99d13573491d3925a3b85c5f46", "filename": "src/tools/miri/tests/fail/provenance/provenance_transmute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fprovenance_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fprovenance_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fprovenance_transmute.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _val = *left_ptr;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `deref`\n+   = note: inside `deref` at $DIR/provenance_transmute.rs:LL:CC\n note: inside `main`\n   --> $DIR/provenance_transmute.rs:LL:CC\n    |"}, {"sha": "4ad885ddabdc05d6d76cc5d1dadaa0a3d6a32217", "filename": "src/tools/miri/tests/fail/provenance/ptr_int_unexposed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_int_unexposed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_int_unexposed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_int_unexposed.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     assert_eq!(unsafe { *ptr }, 3);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_int_unexposed.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ef9dcad97cbdc10608eef46a47fc5926d5c2993a", "filename": "src/tools/miri/tests/fail/provenance/ptr_invalid.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_invalid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_invalid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_invalid.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _val = unsafe { *xptr_invalid };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_invalid.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "3607635c8fbe5be2f98f52e7f1258a31a5583b39", "filename": "src/tools/miri/tests/fail/provenance/ptr_invalid_offset.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_invalid_offset.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_invalid_offset.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fptr_invalid_offset.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _ = unsafe { roundtrip.offset(1) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/ptr_invalid_offset.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "998ccc8bb49c683f9c2455059b902b4438b4f54e", "filename": "src/tools/miri/tests/fail/provenance/strict_provenance_cast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fstrict_provenance_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fstrict_provenance_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fprovenance%2Fstrict_provenance_cast.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |     let _ptr = std::ptr::from_exposed_addr::<i32>(addr);\n    |\n    = help: use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/strict_provenance_cast.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "70bdd157bdc34719b3859df543f55e8b0f7eebc6", "filename": "src/tools/miri/tests/fail/rc_as_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Frc_as_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Frc_as_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Frc_as_ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     assert_eq!(42, **unsafe { &*Weak::as_ptr(&weak) });\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at RUSTLIB/core/src/macros/mod.rs:LL:CC\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "61a7161a98bb3c9880f5901eb3f52c5f8d338c73", "filename": "src/tools/miri/tests/fail/reading_half_a_pointer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Freading_half_a_pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Freading_half_a_pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Freading_half_a_pointer.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         let _val = *x;\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/reading_half_a_pointer.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "200f5f56213d609816e720fccdd9c2de14c00f46", "filename": "src/tools/miri/tests/fail/shims/backtrace/bad-backtrace-decl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-decl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-decl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-decl.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...   miri_resolve_frame(*frame, 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/bad-backtrace-decl.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5d51790f8a5c105e0105a8d76122d0973381c22c", "filename": "src/tools/miri/tests/fail/shims/backtrace/bad-backtrace-flags.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-flags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-flags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-flags.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         miri_get_backtrace(2, std::ptr::null_mut());\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/bad-backtrace-flags.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f23f834000aa1a69663c83a0c0cfa4ee26314617", "filename": "src/tools/miri/tests/fail/shims/backtrace/bad-backtrace-ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-ptr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         miri_resolve_frame(std::ptr::null_mut(), 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/bad-backtrace-ptr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "fe123c2352f0af3b4814dc9ed8143ac4c15ae560", "filename": "src/tools/miri/tests/fail/shims/backtrace/bad-backtrace-resolve-flags.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-resolve-flags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-resolve-flags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-resolve-flags.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         miri_resolve_frame(buf[0], 2);\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/bad-backtrace-resolve-flags.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a3003c9093f728573dfd49d470c95df44cd0d209", "filename": "src/tools/miri/tests/fail/shims/backtrace/bad-backtrace-resolve-names-flags.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-resolve-names-flags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-resolve-names-flags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-resolve-names-flags.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL | ...   miri_resolve_frame_names(buf[0], 2, std::ptr::null_mut(), std::ptr::n\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/bad-backtrace-resolve-names-flags.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b4a02c0e363ed6ba8f4ede3c08394f1ed8c7ecdd", "filename": "src/tools/miri/tests/fail/shims/backtrace/bad-backtrace-size-flags.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-size-flags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-size-flags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fbacktrace%2Fbad-backtrace-size-flags.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         miri_backtrace_size(2);\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/bad-backtrace-size-flags.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "02f1eee97fc044737ea5cc9ebba80823f37ec15e", "filename": "src/tools/miri/tests/fail/shims/fs/close_stdout.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fclose_stdout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fclose_stdout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fclose_stdout.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         libc::close(1);\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/close_stdout.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2385439c8a5f7f85ae007287cfeb6e08313cf33b", "filename": "src/tools/miri/tests/fail/shims/fs/isolated_file.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fisolated_file.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fisolated_file.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fisolated_file.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,16 +7,16 @@ LL |         let fd = cvt_r(|| unsafe { open64(path.as_ptr(), flags, opts.mode a\n    = help: pass the flag `-Zmiri-disable-isolation` to disable isolation;\n    = help: or pass `-Zmiri-isolation-error=warn` to configure Miri to return an error code from isolated operations (if supported for that operation) and continue with a warning\n    = note: BACKTRACE:\n-   = note: inside closure\n-   = note: inside `std::sys::PLATFORM::cvt_r::<i32, [closure@std::sys::PLATFORM::fs::File::open_c::{closure#0}]>`\n-   = note: inside `std::sys::PLATFORM::fs::File::open_c`\n-   = note: inside closure\n-   = note: inside `std::sys::PLATFORM::small_c_string::run_with_cstr::<std::sys::PLATFORM::fs::File, [closure@std::sys::PLATFORM::fs::File::open::{closure#0}]>`\n-   = note: inside `std::sys::PLATFORM::small_c_string::run_path_with_cstr::<std::sys::PLATFORM::fs::File, [closure@std::sys::PLATFORM::fs::File::open::{closure#0}]>`\n-   = note: inside `std::sys::PLATFORM::fs::File::open`\n-   = note: inside `std::fs::OpenOptions::_open`\n-   = note: inside `std::fs::OpenOptions::open::<&std::path::Path>`\n-   = note: inside `std::fs::File::open::<&str>`\n+   = note: inside closure at RUSTLIB/std/src/sys/PLATFORM/fs.rs:LL:CC\n+   = note: inside `std::sys::PLATFORM::cvt_r::<i32, [closure@std::sys::PLATFORM::fs::File::open_c::{closure#0}]>` at RUSTLIB/std/src/sys/PLATFORM/mod.rs:LL:CC\n+   = note: inside `std::sys::PLATFORM::fs::File::open_c` at RUSTLIB/std/src/sys/PLATFORM/fs.rs:LL:CC\n+   = note: inside closure at RUSTLIB/std/src/sys/PLATFORM/fs.rs:LL:CC\n+   = note: inside `std::sys::PLATFORM::small_c_string::run_with_cstr::<std::sys::PLATFORM::fs::File, [closure@std::sys::PLATFORM::fs::File::open::{closure#0}]>` at RUSTLIB/std/src/sys/PLATFORM/small_c_string.rs:LL:CC\n+   = note: inside `std::sys::PLATFORM::small_c_string::run_path_with_cstr::<std::sys::PLATFORM::fs::File, [closure@std::sys::PLATFORM::fs::File::open::{closure#0}]>` at RUSTLIB/std/src/sys/PLATFORM/small_c_string.rs:LL:CC\n+   = note: inside `std::sys::PLATFORM::fs::File::open` at RUSTLIB/std/src/sys/PLATFORM/fs.rs:LL:CC\n+   = note: inside `std::fs::OpenOptions::_open` at RUSTLIB/std/src/fs.rs:LL:CC\n+   = note: inside `std::fs::OpenOptions::open::<&std::path::Path>` at RUSTLIB/std/src/fs.rs:LL:CC\n+   = note: inside `std::fs::File::open::<&str>` at RUSTLIB/std/src/fs.rs:LL:CC\n note: inside `main`\n   --> $DIR/isolated_file.rs:LL:CC\n    |"}, {"sha": "ed826147e3bdbb13fb73dcc587c3789cc8f08e74", "filename": "src/tools/miri/tests/fail/shims/fs/isolated_stdin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fisolated_stdin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fisolated_stdin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fisolated_stdin.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::read(0, bytes.as_mut_ptr() as *mut libc::c_void, 512);\n    = help: pass the flag `-Zmiri-disable-isolation` to disable isolation;\n    = help: or pass `-Zmiri-isolation-error=warn` to configure Miri to return an error code from isolated operations (if supported for that operation) and continue with a warning\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/isolated_stdin.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "35ff1926b065740d35e30966228e67c0af9d4e78", "filename": "src/tools/miri/tests/fail/shims/fs/mkstemp_immutable_arg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fmkstemp_immutable_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fmkstemp_immutable_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fmkstemp_immutable_arg.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |     let _fd = unsafe { libc::mkstemp(s) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `test_mkstemp_immutable_arg`\n+   = note: inside `test_mkstemp_immutable_arg` at $DIR/mkstemp_immutable_arg.rs:LL:CC\n note: inside `main`\n   --> $DIR/mkstemp_immutable_arg.rs:LL:CC\n    |"}, {"sha": "bcece7ad4e55d4257e4f37e9448d140a50672b67", "filename": "src/tools/miri/tests/fail/shims/fs/read_from_stdout.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fread_from_stdout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fread_from_stdout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fread_from_stdout.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         libc::read(1, bytes.as_mut_ptr() as *mut libc::c_void, 512);\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/read_from_stdout.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5a8e7352c768618f53b3cc47ef3b9b95481fc494", "filename": "src/tools/miri/tests/fail/shims/fs/unix_open_missing_required_mode.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Funix_open_missing_required_mode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Funix_open_missing_required_mode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Funix_open_missing_required_mode.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...safe { libc::open(name_ptr, libc::O_CREAT) };\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `test_file_open_missing_needed_mode`\n+   = note: inside `test_file_open_missing_needed_mode` at $DIR/unix_open_missing_required_mode.rs:LL:CC\n note: inside `main`\n   --> $DIR/unix_open_missing_required_mode.rs:LL:CC\n    |"}, {"sha": "d4a38e1ca9615f4dad28e0b3f635cad1b2ff6d5f", "filename": "src/tools/miri/tests/fail/shims/fs/write_to_stdin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fwrite_to_stdin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fwrite_to_stdin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Ffs%2Fwrite_to_stdin.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -6,7 +6,7 @@ LL |         libc::write(0, bytes.as_ptr() as *const libc::c_void, 5);\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/write_to_stdin.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d951f81810ef63e8e9c8eae71bd4117c3d0c3ce9", "filename": "src/tools/miri/tests/fail/shims/shim_arg_size.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fshim_arg_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fshim_arg_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fshim_arg_size.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         memchr(std::ptr::null(), 0, 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/shim_arg_size.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ecfedf753703dc3576a405aa6cddd0a101345c22", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_cond_double_destroy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_cond_double_destroy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_cond_double_destroy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_cond_double_destroy.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_cond_destroy(cond.as_mut_ptr());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_cond_double_destroy.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f39d909adbd64c76fd1bcadb58bea7cb3f6fb072", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_condattr_double_destroy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_condattr_double_destroy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_condattr_double_destroy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_condattr_double_destroy.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_condattr_destroy(attr.as_mut_ptr());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_condattr_double_destroy.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "4a138e6f8a25cc4f07cc3541c33f0efb596580c1", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_NULL_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_NULL_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_NULL_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_NULL_deadlock.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_mutex_lock(&mut mutex as *mut _);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_mutex_NULL_deadlock.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "599655a8692b1b334fa92b1fca60eb257ecba496", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_deadlock.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: deadlock: the evaluated program deadlocked\n LL |             assert_eq!(libc::pthread_mutex_lock(lock_copy.0.get() as *mut _), 0);\n    |                                                                            ^ the evaluated program deadlocked\n    |\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_mutex_deadlock.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "8aea3f5c6932ffb22940280f72a9a829d73a9e3b", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_default_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_default_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_default_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_default_deadlock.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_mutex_lock(&mut mutex as *mut _);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_mutex_default_deadlock.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a8ab948116e14ba3b4b3c222bf85a7642c1d63d9", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_destroy_locked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_destroy_locked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_destroy_locked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_destroy_locked.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_mutex_destroy(&mut mutex as *mut _);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_mutex_destroy_locked.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "9620fdbd18b2ff1d7f3722efda8b6e225c7a588f", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_double_destroy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_double_destroy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_double_destroy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_double_destroy.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_mutex_destroy(mutex.as_mut_ptr());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_mutex_double_destroy.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "b7877d3aa397d71c8051e317cf9c33adcb10f5b0", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_normal_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_deadlock.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: deadlock: the evaluated program deadlocked\n LL |         libc::pthread_mutex_lock(&mut mutex as *mut _);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program deadlocked\n    |\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_mutex_normal_deadlock.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "754137b85b9af0581c42aa423e755c13d2f6ad4f", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_normal_unlock_unlocked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_unlock_unlocked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_unlock_unlocked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_unlock_unlocked.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_mutex_unlock(&mut mutex as *mut _);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_mutex_normal_unlock_unlocked.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "aa81b06fc80af6c4fcb145269a441c1e83a343a6", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutex_wrong_owner.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...t_eq!(libc::pthread_mutex_unlock(lock_copy.0.get() as *mut _), 0);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_mutex_wrong_owner.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "82949047d2aab0a4e870b07e492aed77789b42ae", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_mutexattr_double_destroy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutexattr_double_destroy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutexattr_double_destroy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutexattr_double_destroy.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_mutexattr_destroy(attr.as_mut_ptr());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_mutexattr_double_destroy.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "be73e7f1e2ad44d53ccba3c234780e2a7197d04c", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_destroy_read_locked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_read_locked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_read_locked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_read_locked.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_rwlock_destroy(rw.get());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_rwlock_destroy_read_locked.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "bc2713a5ffbfad68a36646b1076a4119d8009b6d", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_destroy_write_locked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_write_locked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_write_locked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_write_locked.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_rwlock_destroy(rw.get());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_rwlock_destroy_write_locked.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5004f84358da80ee7ca50c2a121cbb27e7fb3be8", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_double_destroy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_double_destroy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_double_destroy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_double_destroy.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_rwlock_destroy(&mut lock);\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_rwlock_double_destroy.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "075c8f0ef529cbbe6caced928c2834b212040e34", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_read_write_deadlock_single_thread.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_write_deadlock_single_thread.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_write_deadlock_single_thread.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_write_deadlock_single_thread.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: deadlock: the evaluated program deadlocked\n LL |         libc::pthread_rwlock_wrlock(rw.get());\n    |                                             ^ the evaluated program deadlocked\n    |\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_rwlock_read_write_deadlock_single_thread.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "7dfa27b43d073a6e05fbeffaed3c6587d5c5d6a2", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_read_wrong_owner.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...   assert_eq!(libc::pthread_rwlock_unlock(lock_copy.0.get() as *mut _),\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_rwlock_read_wrong_owner.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "1c25ac2c048fb7e50bf88c6626697718f23a7f4f", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_unlock_unlocked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_unlock_unlocked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_unlock_unlocked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_unlock_unlocked.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         libc::pthread_rwlock_unlock(rw.get());\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_rwlock_unlock_unlocked.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "333fb1afb91b7a6bf7ae5e32ab7c90193ef82b24", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_write_read_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: deadlock: the evaluated program deadlocked\n LL |             assert_eq!(libc::pthread_rwlock_wrlock(lock_copy.0.get() as *mut _), 0);\n    |                                                                               ^ the evaluated program deadlocked\n    |\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_rwlock_write_read_deadlock.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "caab19a782f97fbdbc04b97e2ebd15dd0873c463", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_write_read_deadlock_single_thread.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock_single_thread.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock_single_thread.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock_single_thread.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: deadlock: the evaluated program deadlocked\n LL |         libc::pthread_rwlock_rdlock(rw.get());\n    |                                             ^ the evaluated program deadlocked\n    |\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_rwlock_write_read_deadlock_single_thread.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "93bede54fcf1838df52a48f154bdeccba268e2b7", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_write_write_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: deadlock: the evaluated program deadlocked\n LL |             assert_eq!(libc::pthread_rwlock_wrlock(lock_copy.0.get() as *mut _), 0);\n    |                                                                               ^ the evaluated program deadlocked\n    |\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_rwlock_write_write_deadlock.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "30f5f447c717c9d4fc70ac4d9ea1f938781aa84f", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_write_write_deadlock_single_thread.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock_single_thread.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock_single_thread.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock_single_thread.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -4,7 +4,7 @@ error: deadlock: the evaluated program deadlocked\n LL |         libc::pthread_rwlock_wrlock(rw.get());\n    |                                             ^ the evaluated program deadlocked\n    |\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/libc_pthread_rwlock_write_write_deadlock_single_thread.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5bf402c775ae53860c8b6e63394a14c8076a897d", "filename": "src/tools/miri/tests/fail/shims/sync/libc_pthread_rwlock_write_wrong_owner.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL | ...   assert_eq!(libc::pthread_rwlock_unlock(lock_copy.0.get() as *mut _),\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside closure\n+   = note: inside closure at $DIR/libc_pthread_rwlock_write_wrong_owner.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "325565fa1e786aa327cd337838c91979fa9aa080", "filename": "src/tools/miri/tests/fail/should-pass/cpp20_rwc_syncs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |             std::hint::unreachable_unchecked();\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `test_cpp20_rwc_syncs`\n+   = note: inside `test_cpp20_rwc_syncs` at $DIR/cpp20_rwc_syncs.rs:LL:CC\n note: inside `main`\n   --> $DIR/cpp20_rwc_syncs.rs:LL:CC\n    |"}, {"sha": "461275c3fa346a872a8f9b9d86f9657011b340e4", "filename": "src/tools/miri/tests/fail/stacked_borrows/alias_through_mutation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Falias_through_mutation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Falias_through_mutation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Falias_through_mutation.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |     *target = 13;\n    |     ^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/alias_through_mutation.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "4514abb4ab2e47900200bc4dde0ababfa159fe4a", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,7 +17,7 @@ help: <TAG> is this argument\n LL | pub fn safe(_x: &mut i32, _y: &mut i32) {}\n    |             ^^\n    = note: BACKTRACE:\n-   = note: inside `safe`\n+   = note: inside `safe` at $DIR/aliasing_mut1.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut1.rs:LL:CC\n    |"}, {"sha": "9ca9743cbd929be46fb3418a504316321bb3cc9c", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,7 +17,7 @@ help: <TAG> is this argument\n LL | pub fn safe(_x: &i32, _y: &mut i32) {}\n    |             ^^\n    = note: BACKTRACE:\n-   = note: inside `safe`\n+   = note: inside `safe` at $DIR/aliasing_mut2.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut2.rs:LL:CC\n    |"}, {"sha": "b504097a3c91f2541339f527e04e3edf93c545af", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique FnEntry reta\n LL |     safe_raw(xraw, xshr);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `safe`\n+   = note: inside `safe` at $DIR/aliasing_mut3.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut3.rs:LL:CC\n    |"}, {"sha": "6fe0d70902930fe864390ec1e7c0f9914d77dc21", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut4.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,7 +17,7 @@ help: <TAG> is this argument\n LL | pub fn safe(_x: &i32, _y: &mut Cell<i32>) {}\n    |             ^^\n    = note: BACKTRACE:\n-   = note: inside `safe`\n+   = note: inside `safe` at $DIR/aliasing_mut4.rs:LL:CC\n note: inside `main`\n   --> $DIR/aliasing_mut4.rs:LL:CC\n    |"}, {"sha": "f114130f6fafdabece908fc8999b7a357ffc0d0e", "filename": "src/tools/miri/tests/fail/stacked_borrows/box_exclusive_violation1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_exclusive_violation1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_exclusive_violation1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbox_exclusive_violation1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |     *our = 5;\n    |     ^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `unknown_code_2`\n+   = note: inside `unknown_code_2` at $DIR/box_exclusive_violation1.rs:LL:CC\n note: inside `demo_box_advanced_unique`\n   --> $DIR/box_exclusive_violation1.rs:LL:CC\n    |"}, {"sha": "6aa14361287e3824d15ee21e9683529cb968d34e", "filename": "src/tools/miri/tests/fail/stacked_borrows/buggy_as_mut_slice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_as_mut_slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_as_mut_slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_as_mut_slice.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0xc] by a Unique retag\n LL |         unsafe { from_raw_parts_mut(self_.as_ptr() as *mut T, self_.len()) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/buggy_as_mut_slice.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "cdeccc0855a959c428bc8d7916e20e0644a8ce98", "filename": "src/tools/miri/tests/fail/stacked_borrows/buggy_split_at_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_split_at_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_split_at_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fbuggy_split_at_mut.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x10] by a Unique retag\n LL |                 from_raw_parts_mut(ptr.offset(mid as isize), len - mid),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/buggy_split_at_mut.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "516964b9a4e6f11a95cc3195d2af7da83ab5ef86", "filename": "src/tools/miri/tests/fail/stacked_borrows/deallocate_against_protector1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdeallocate_against_protector1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdeallocate_against_protector1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdeallocate_against_protector1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,17 +7,17 @@ LL |     unsafe { __rust_dealloc(ptr, layout.size(), layout.align()) }\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::dealloc`\n-   = note: inside `<std::alloc::Global as std::alloc::Allocator>::deallocate`\n-   = note: inside `alloc::alloc::box_free::<i32, std::alloc::Global>`\n-   = note: inside `std::ptr::drop_in_place::<std::boxed::Box<i32>> - shim(Some(std::boxed::Box<i32>))`\n-   = note: inside `std::mem::drop::<std::boxed::Box<i32>>`\n+   = note: inside `std::alloc::dealloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `<std::alloc::Global as std::alloc::Allocator>::deallocate` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `alloc::alloc::box_free::<i32, std::alloc::Global>` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `std::ptr::drop_in_place::<std::boxed::Box<i32>> - shim(Some(std::boxed::Box<i32>))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n+   = note: inside `std::mem::drop::<std::boxed::Box<i32>>` at RUSTLIB/core/src/mem/mod.rs:LL:CC\n note: inside closure\n   --> $DIR/deallocate_against_protector1.rs:LL:CC\n    |\n LL |         drop(unsafe { Box::from_raw(raw) });\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: inside `<[closure@$DIR/deallocate_against_protector1.rs:LL:CC] as std::ops::FnOnce<(&mut i32,)>>::call_once - shim`\n+   = note: inside `<[closure@$DIR/deallocate_against_protector1.rs:LL:CC] as std::ops::FnOnce<(&mut i32,)>>::call_once - shim` at RUSTLIB/core/src/ops/function.rs:LL:CC\n note: inside `inner`\n   --> $DIR/deallocate_against_protector1.rs:LL:CC\n    |"}, {"sha": "47cfa0de7258c1fe0263442c8387a6d7b3d7a7d9", "filename": "src/tools/miri/tests/fail/stacked_borrows/deallocate_against_protector2.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdeallocate_against_protector2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdeallocate_against_protector2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdeallocate_against_protector2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,17 +7,17 @@ LL |     unsafe { __rust_dealloc(ptr, layout.size(), layout.align()) }\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE:\n-   = note: inside `std::alloc::dealloc`\n-   = note: inside `<std::alloc::Global as std::alloc::Allocator>::deallocate`\n-   = note: inside `alloc::alloc::box_free::<NotUnpin, std::alloc::Global>`\n-   = note: inside `std::ptr::drop_in_place::<std::boxed::Box<NotUnpin>> - shim(Some(std::boxed::Box<NotUnpin>))`\n-   = note: inside `std::mem::drop::<std::boxed::Box<NotUnpin>>`\n+   = note: inside `std::alloc::dealloc` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `<std::alloc::Global as std::alloc::Allocator>::deallocate` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `alloc::alloc::box_free::<NotUnpin, std::alloc::Global>` at RUSTLIB/alloc/src/alloc.rs:LL:CC\n+   = note: inside `std::ptr::drop_in_place::<std::boxed::Box<NotUnpin>> - shim(Some(std::boxed::Box<NotUnpin>))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n+   = note: inside `std::mem::drop::<std::boxed::Box<NotUnpin>>` at RUSTLIB/core/src/mem/mod.rs:LL:CC\n note: inside closure\n   --> $DIR/deallocate_against_protector2.rs:LL:CC\n    |\n LL |         drop(unsafe { Box::from_raw(raw) });\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: inside `<[closure@$DIR/deallocate_against_protector2.rs:LL:CC] as std::ops::FnOnce<(&mut NotUnpin,)>>::call_once - shim`\n+   = note: inside `<[closure@$DIR/deallocate_against_protector2.rs:LL:CC] as std::ops::FnOnce<(&mut NotUnpin,)>>::call_once - shim` at RUSTLIB/core/src/ops/function.rs:LL:CC\n note: inside `inner`\n   --> $DIR/deallocate_against_protector2.rs:LL:CC\n    |"}, {"sha": "e05f44fac9d2fff578aba7d142a8700e00d20f8e", "filename": "src/tools/miri/tests/fail/stacked_borrows/disable_mut_does_not_merge_srw.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |         *base = 1;\n    |         ^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/disable_mut_does_not_merge_srw.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "cb5e7bffde480d2e148bc7ad6090368551f90cac", "filename": "src/tools/miri/tests/fail/stacked_borrows/exposed_only_ro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fexposed_only_ro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fexposed_only_ro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fexposed_only_ro.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -10,7 +10,7 @@ LL |     unsafe { *ptr = 0 };\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/exposed_only_ro.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "e81411bbdd86cf86122907b831d9bf7fa4bedfff", "filename": "src/tools/miri/tests/fail/stacked_borrows/fnentry_invalidation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique FnEntry reta\n LL |     x.do_bad();\n    |     ^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/fnentry_invalidation.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d6d0084fa2a77cf49dd6dad50fa703b9fa7aebb8", "filename": "src/tools/miri/tests/fail/stacked_borrows/fnentry_invalidation2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0xc] by a Unique FnEntry reta\n LL |     let _ = t.sli.as_mut_ptr();\n    |             ^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/fnentry_invalidation2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "95ff05d70c30ec5a5fa77a0e828c030eb926cd9f", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n LL |     let _val = unsafe { *xraw };\n    |                         ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5cfdf77dee402f3190df136ae4c679e92877afc7", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a SharedReadOnly reta\n LL |     let shr = unsafe { &*xraw };\n    |                        ^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "dacf71fa3ee39a1da6d83727ad37ebae27337762", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n LL |     let _val = unsafe { *xref1.r };\n    |                         ^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "5ce0cba617914d5d1d364c085e8d0498f2bea8d9", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read4.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n LL |     let _val = unsafe { *xraw }; // use the raw again, this invalidates xref2 *even* with the special read except for uniq refs\n    |                         ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read4.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "63532f87944eb7ab50ce406bdb543a55acbefc86", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read5.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read5.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [$HEX..$HEX] by a read access\n LL |     mem::forget(unsafe { ptr::read(xshr) }); // but after reading through the shared ref\n    |                          ^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read5.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "93a96ab601ea3e5f39431714c26c85cacce1679b", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read6.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read6.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n LL |         let x = &mut *x; // kill `raw`\n    |                 ^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read6.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2e8ac207beafb486a8512a4fe9567d9bdcef1563", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read7.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n LL |         let _val = ptr::read(raw);\n    |                    ^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read7.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c34fa2d8955ddd6daf81eb781a4946ca7b7b7c63", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read8.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read8.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |         *y2 += 1;\n    |         ^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read8.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "43b4ec2ba652b3b73e7aebbb580f9353f063b712", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read_despite_exposed1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |         *exposed_ptr = 0;\n    |         ^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read_despite_exposed1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "832320fc202e126558318553453d5bb538c8fa5f", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_read_despite_exposed2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_read_despite_exposed2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n LL |         let _val = *exposed_ptr;\n    |                    ^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_read_despite_exposed2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "3bf27f4815e9a1da5aa60005614323b266fbf6c5", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -15,7 +15,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]\n LL |         let x: *mut u32 = xref as *const _ as *mut _;\n    |                           ^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_write1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a9fe8cb6ccc026efaf556d703f079436335528ae", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n LL |     drop(&mut *target); // reborrow\n    |          ^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_write2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d64f2ddd87670b9b83db185973620de1e35b1245", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -15,7 +15,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]\n LL |     let ptr = r#ref as *const _ as *mut _; // raw ptr, with raw tag\n    |               ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_write3.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "e3b8621eb74f2daab17b197ca3448135abad0240", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write4.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n LL |     let _mut_ref: &mut i32 = unsafe { mem::transmute(raw) }; // &mut, with raw tag\n    |                                       ^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_write4.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "bbeb81258bde6a0483fded5d174843e72b561e0e", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write5.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write5.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |     unsafe { *xraw = 15 };\n    |              ^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_write5.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "49d9050f3094771d1f44672fec01770dc6b0c89c", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write6.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write6.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,7 +17,7 @@ help: <TAG> is this argument\n LL | fn foo(a: &mut u32, y: *mut u32) -> u32 {\n    |        ^\n    = note: BACKTRACE:\n-   = note: inside `foo`\n+   = note: inside `foo` at $DIR/illegal_write6.rs:LL:CC\n note: inside `main`\n   --> $DIR/illegal_write6.rs:LL:CC\n    |"}, {"sha": "87ddf61d7586cfdd8d0ad68aac873412b1b4af6d", "filename": "src/tools/miri/tests/fail/stacked_borrows/illegal_write_despite_exposed1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write_despite_exposed1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write_despite_exposed1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fillegal_write_despite_exposed1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |         *exposed_ptr = 0;\n    |         ^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/illegal_write_despite_exposed1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "1d68727c82af4176c72d7d01f2e587a262dc3c3c", "filename": "src/tools/miri/tests/fail/stacked_borrows/interior_mut1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |         *c.get() = UnsafeCell::new(1); // invalidates inner_shr\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/interior_mut1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "8a3357142261b07a783ee6bfb82e03ec11c07854", "filename": "src/tools/miri/tests/fail/stacked_borrows/interior_mut2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finterior_mut2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |         *c.get() = UnsafeCell::new(0); // now inner_shr gets invalidated\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/interior_mut2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "a53c633c3813076df0bc1a336970017d5430fc5a", "filename": "src/tools/miri/tests/fail/stacked_borrows/invalidate_against_protector1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,7 +17,7 @@ help: <TAG> is this argument\n LL | fn inner(x: *mut i32, _y: &mut i32) {\n    |                       ^^\n    = note: BACKTRACE:\n-   = note: inside `inner`\n+   = note: inside `inner` at $DIR/invalidate_against_protector1.rs:LL:CC\n note: inside `main`\n   --> $DIR/invalidate_against_protector1.rs:LL:CC\n    |"}, {"sha": "6ee78d1aac682fd9c79e4286525f627dcf37e269", "filename": "src/tools/miri/tests/fail/stacked_borrows/invalidate_against_protector2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,7 +17,7 @@ help: <TAG> is this argument\n LL | fn inner(x: *mut i32, _y: &i32) {\n    |                       ^^\n    = note: BACKTRACE:\n-   = note: inside `inner`\n+   = note: inside `inner` at $DIR/invalidate_against_protector2.rs:LL:CC\n note: inside `main`\n   --> $DIR/invalidate_against_protector2.rs:LL:CC\n    |"}, {"sha": "2b38dea9dbb719221b89285fd97ba785fd53fa6a", "filename": "src/tools/miri/tests/fail/stacked_borrows/invalidate_against_protector3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Finvalidate_against_protector3.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,7 +17,7 @@ help: <TAG> is this argument\n LL | fn inner(x: *mut i32, _y: &i32) {\n    |                       ^^\n    = note: BACKTRACE:\n-   = note: inside `inner`\n+   = note: inside `inner` at $DIR/invalidate_against_protector3.rs:LL:CC\n note: inside `main`\n   --> $DIR/invalidate_against_protector3.rs:LL:CC\n    |"}, {"sha": "c69a3af293c13b1e6b59556a00cf6b64088cb780", "filename": "src/tools/miri/tests/fail/stacked_borrows/issue-miri-1050-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,8 +7,8 @@ LL |         Box(unsafe { Unique::new_unchecked(raw) }, alloc)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::boxed::Box::<u32>::from_raw_in`\n-   = note: inside `std::boxed::Box::<u32>::from_raw`\n+   = note: inside `std::boxed::Box::<u32>::from_raw_in` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n+   = note: inside `std::boxed::Box::<u32>::from_raw` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n note: inside `main`\n   --> $DIR/issue-miri-1050-1.rs:LL:CC\n    |"}, {"sha": "23d7fdcd03bc5a3333d409cf0242696b66557ae5", "filename": "src/tools/miri/tests/fail/stacked_borrows/issue-miri-1050-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,8 +7,8 @@ LL |         Box(unsafe { Unique::new_unchecked(raw) }, alloc)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::boxed::Box::<i32>::from_raw_in`\n-   = note: inside `std::boxed::Box::<i32>::from_raw`\n+   = note: inside `std::boxed::Box::<i32>::from_raw_in` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n+   = note: inside `std::boxed::Box::<i32>::from_raw` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n note: inside `main`\n   --> $DIR/issue-miri-1050-2.rs:LL:CC\n    |"}, {"sha": "08dc171c9eef0150ef401b090d8672c857751bd7", "filename": "src/tools/miri/tests/fail/stacked_borrows/load_invalid_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_mut.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/load_invalid_mut.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "50bbed2b295c925685fb7e14d9670eadc0ddb920", "filename": "src/tools/miri/tests/fail/stacked_borrows/load_invalid_shr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_shr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_shr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fload_invalid_shr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |     unsafe { *xraw = 42 }; // unfreeze\n    |              ^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/load_invalid_shr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "2f3900c40d7261fd8f342e6ecc94d2eacc6e3f07", "filename": "src/tools/miri/tests/fail/stacked_borrows/mut_exclusive_violation1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |     *our = 5;\n    |     ^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `unknown_code_2`\n+   = note: inside `unknown_code_2` at $DIR/mut_exclusive_violation1.rs:LL:CC\n note: inside `demo_mut_advanced_unique`\n   --> $DIR/mut_exclusive_violation1.rs:LL:CC\n    |"}, {"sha": "43b5325fc541a77d18a8699a0e381503ad2e7635", "filename": "src/tools/miri/tests/fail/stacked_borrows/mut_exclusive_violation2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fmut_exclusive_violation2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n LL |         let _raw2 = ptr2.as_mut();\n    |                     ^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/mut_exclusive_violation2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "90677dfaf555e4c8226919cb89f3d08cca536384", "filename": "src/tools/miri/tests/fail/stacked_borrows/newtype_pair_retagging.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_pair_retagging.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_pair_retagging.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_pair_retagging.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,8 +17,8 @@ help: <TAG> is this argument\n LL | fn dealloc_while_running(_n: Newtype<'_>, dealloc: impl FnOnce()) {\n    |                          ^^\n    = note: BACKTRACE:\n-   = note: inside `std::boxed::Box::<i32>::from_raw_in`\n-   = note: inside `std::boxed::Box::<i32>::from_raw`\n+   = note: inside `std::boxed::Box::<i32>::from_raw_in` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n+   = note: inside `std::boxed::Box::<i32>::from_raw` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n note: inside closure\n   --> $DIR/newtype_pair_retagging.rs:LL:CC\n    |"}, {"sha": "f189d0483d12d9e459ed3862d1259375ff1cc5f6", "filename": "src/tools/miri/tests/fail/stacked_borrows/newtype_retagging.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_retagging.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_retagging.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fnewtype_retagging.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -17,8 +17,8 @@ help: <TAG> is this argument\n LL | fn dealloc_while_running(_n: Newtype<'_>, dealloc: impl FnOnce()) {\n    |                          ^^\n    = note: BACKTRACE:\n-   = note: inside `std::boxed::Box::<i32>::from_raw_in`\n-   = note: inside `std::boxed::Box::<i32>::from_raw`\n+   = note: inside `std::boxed::Box::<i32>::from_raw_in` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n+   = note: inside `std::boxed::Box::<i32>::from_raw` at RUSTLIB/alloc/src/boxed.rs:LL:CC\n note: inside closure\n   --> $DIR/newtype_retagging.rs:LL:CC\n    |"}, {"sha": "8c2bba53918885c1fb7e66772789b6b3d1a9bab2", "filename": "src/tools/miri/tests/fail/stacked_borrows/outdated_local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Foutdated_local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Foutdated_local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Foutdated_local.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |     x = 1; // this invalidates y by reactivating the lowermost uniq borrow for this local\n    |     ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/outdated_local.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "d7ab930aa3785d7c0376b5b8a3991dbfb375788b", "filename": "src/tools/miri/tests/fail/stacked_borrows/pass_invalid_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_mut.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a read access\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/pass_invalid_mut.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "c14b35c75c83df75183032b2f4ecb8915f9865db", "filename": "src/tools/miri/tests/fail/stacked_borrows/pass_invalid_shr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_shr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_shr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpass_invalid_shr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access\n LL |     unsafe { *xraw = 42 }; // unfreeze\n    |              ^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/pass_invalid_shr.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "7d58d1aebbecd6154df1cbb535942b3b4356f735", "filename": "src/tools/miri/tests/fail/stacked_borrows/pointer_smuggling.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpointer_smuggling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpointer_smuggling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fpointer_smuggling.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x1] by a write access\n LL |     *val = 2; // this invalidates any raw ptrs `fun1` might have created.\n    |     ^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `fun2`\n+   = note: inside `fun2` at $DIR/pointer_smuggling.rs:LL:CC\n note: inside `main`\n   --> $DIR/pointer_smuggling.rs:LL:CC\n    |"}, {"sha": "d75934445e6d21de8dc1ea86450adf9b081326ea", "filename": "src/tools/miri/tests/fail/stacked_borrows/raw_tracking.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fraw_tracking.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n LL |     let raw2 = &mut l as *mut _; // invalidates raw1\n    |                ^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/raw_tracking.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "1b28f780c1c544a63f0ca9d9850f4539d77f4c09", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a read access\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `foo`\n+   = note: inside `foo` at $DIR/return_invalid_mut.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_mut.rs:LL:CC\n    |"}, {"sha": "db14dcafa008445530d4629312495cc4629ff18d", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_mut_option.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_option.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a read access\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `foo`\n+   = note: inside `foo` at $DIR/return_invalid_mut_option.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_mut_option.rs:LL:CC\n    |"}, {"sha": "81ed4218aade789d54d5ad5598725c862ec98b04", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_mut_tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a read access\n LL |     let _val = unsafe { *xraw }; // invalidate xref\n    |                         ^^^^^\n    = note: BACKTRACE:\n-   = note: inside `foo`\n+   = note: inside `foo` at $DIR/return_invalid_mut_tuple.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_mut_tuple.rs:LL:CC\n    |"}, {"sha": "9c8cc50b2d7ac7b4c87399b9f1ecd4c99a6b34d0", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_shr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a write access\n LL |     unsafe { *xraw = (42, 23) }; // unfreeze\n    |              ^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `foo`\n+   = note: inside `foo` at $DIR/return_invalid_shr.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_shr.rs:LL:CC\n    |"}, {"sha": "00ce6f6cd5fe129e6f13fe9c26c32b1fcc2440e3", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_shr_option.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_option.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a write access\n LL |     unsafe { *xraw = (42, 23) }; // unfreeze\n    |              ^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `foo`\n+   = note: inside `foo` at $DIR/return_invalid_shr_option.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_shr_option.rs:LL:CC\n    |"}, {"sha": "bbd17b1284c5e6b9508cf5e55de49edd544771a5", "filename": "src/tools/miri/tests/fail/stacked_borrows/return_invalid_shr_tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x8] by a write access\n LL |     unsafe { *xraw = (42, 23) }; // unfreeze\n    |              ^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `foo`\n+   = note: inside `foo` at $DIR/return_invalid_shr_tuple.rs:LL:CC\n note: inside `main`\n   --> $DIR/return_invalid_shr_tuple.rs:LL:CC\n    |"}, {"sha": "3a139c3ab2120ec1b4a6a610537ae592ec19533f", "filename": "src/tools/miri/tests/fail/stacked_borrows/shared_rw_borrows_are_weak1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique retag\n LL |         shr_rw.set(1);\n    |         ^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/shared_rw_borrows_are_weak1.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "0609a73e793157563668915d0c67a57bfbe909be", "filename": "src/tools/miri/tests/fail/stacked_borrows/shared_rw_borrows_are_weak2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshared_rw_borrows_are_weak2.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -20,7 +20,7 @@ help: <TAG> was later invalidated at offsets [$HEX..$HEX] by a Unique retag\n LL |         shr_rw.replace(1);\n    |         ^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/shared_rw_borrows_are_weak2.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "fe0ac211318aac832bd587bf2a4a69fbc3b1fbcf", "filename": "src/tools/miri/tests/fail/stacked_borrows/shr_frozen_violation1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fshr_frozen_violation1.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -15,7 +15,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]\n LL |         *(x as *const i32 as *mut i32) = 7;\n    |           ^\n    = note: BACKTRACE:\n-   = note: inside `unknown_code`\n+   = note: inside `unknown_code` at $DIR/shr_frozen_violation1.rs:LL:CC\n note: inside `foo`\n   --> $DIR/shr_frozen_violation1.rs:LL:CC\n    |"}, {"sha": "ca99a8262b8bd65b40ade72879bc395ef8969fc8", "filename": "src/tools/miri/tests/fail/stacked_borrows/static_memory_modification.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fstatic_memory_modification.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa99459b4286a2fb45dd1f224a9fc5788da84cfb/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fstatic_memory_modification.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Fstatic_memory_modification.stderr?ref=fa99459b4286a2fb45dd1f224a9fc5788da84cfb", "patch": "@@ -7,7 +7,7 @@ LL |         std::mem::transmute::<&usize, &mut usize>(&X)\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `main`\n+   = note: inside `main` at $DIR/static_memory_modification.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}]}