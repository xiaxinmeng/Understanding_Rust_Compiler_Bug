{"sha": "c040a483bcb522b60865130ea5e94e2ef2915f94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNDBhNDgzYmNiNTIyYjYwODY1MTMwZWE1ZTk0ZTJlZjI5MTVmOTQ=", "commit": {"author": {"name": "Olivier Goffart", "email": "ogoffart@woboq.com", "date": "2018-11-14T17:09:54Z"}, "committer": {"name": "Olivier Goffart", "email": "ogoffart@woboq.com", "date": "2018-11-14T17:09:54Z"}, "message": "Remove extern and some return value as an attempt to make the test pass on more platforms", "tree": {"sha": "98ab85652b38f7ed44dda4d96920a5facf0982bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98ab85652b38f7ed44dda4d96920a5facf0982bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c040a483bcb522b60865130ea5e94e2ef2915f94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c040a483bcb522b60865130ea5e94e2ef2915f94", "html_url": "https://github.com/rust-lang/rust/commit/c040a483bcb522b60865130ea5e94e2ef2915f94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c040a483bcb522b60865130ea5e94e2ef2915f94/comments", "author": {"login": "ogoffart", "id": 959326, "node_id": "MDQ6VXNlcjk1OTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/959326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogoffart", "html_url": "https://github.com/ogoffart", "followers_url": "https://api.github.com/users/ogoffart/followers", "following_url": "https://api.github.com/users/ogoffart/following{/other_user}", "gists_url": "https://api.github.com/users/ogoffart/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogoffart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogoffart/subscriptions", "organizations_url": "https://api.github.com/users/ogoffart/orgs", "repos_url": "https://api.github.com/users/ogoffart/repos", "events_url": "https://api.github.com/users/ogoffart/events{/privacy}", "received_events_url": "https://api.github.com/users/ogoffart/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ogoffart", "id": 959326, "node_id": "MDQ6VXNlcjk1OTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/959326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogoffart", "html_url": "https://github.com/ogoffart", "followers_url": "https://api.github.com/users/ogoffart/followers", "following_url": "https://api.github.com/users/ogoffart/following{/other_user}", "gists_url": "https://api.github.com/users/ogoffart/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogoffart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogoffart/subscriptions", "organizations_url": "https://api.github.com/users/ogoffart/orgs", "repos_url": "https://api.github.com/users/ogoffart/repos", "events_url": "https://api.github.com/users/ogoffart/events{/privacy}", "received_events_url": "https://api.github.com/users/ogoffart/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "562be7e1a1955742d61320d0855550794c4b6c22", "url": "https://api.github.com/repos/rust-lang/rust/commits/562be7e1a1955742d61320d0855550794c4b6c22", "html_url": "https://github.com/rust-lang/rust/commit/562be7e1a1955742d61320d0855550794c4b6c22"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "786968128ec1bbc06c32fc211f9ee018d6dbf1ed", "filename": "src/test/codegen/union-abi.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c040a483bcb522b60865130ea5e94e2ef2915f94/src%2Ftest%2Fcodegen%2Funion-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c040a483bcb522b60865130ea5e94e2ef2915f94/src%2Ftest%2Fcodegen%2Funion-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funion-abi.rs?ref=c040a483bcb522b60865130ea5e94e2ef2915f94", "patch": "@@ -26,15 +26,15 @@ pub struct i64x4(i64, i64, i64, i64);\n #[derive(Copy, Clone)]\n pub union UnionI64x4{ a:(), b: i64x4 }\n \n-// CHECK: define <4 x i64> @test_UnionI64x4(<4 x i64> %arg0)\n+// CHECK: define void @test_UnionI64x4(<4 x i64>* {{.*}} %arg0)\n #[no_mangle]\n-pub extern fn test_UnionI64x4(_: UnionI64x4) -> UnionI64x4 { loop {} }\n+pub fn test_UnionI64x4(_: UnionI64x4) { loop {} }\n \n pub union UnionI64x4_{ a: i64x4, b: (), c:i64x4, d: Unhab, e: ((),()), f: UnionI64x4 }\n \n-// CHECK: define <4 x i64> @test_UnionI64x4_(<4 x i64> %arg0)\n+// CHECK: define void @test_UnionI64x4_(<4 x i64>* {{.*}} %arg0)\n #[no_mangle]\n-pub extern fn test_UnionI64x4_(_: UnionI64x4_) -> UnionI64x4_ { loop {} }\n+pub fn test_UnionI64x4_(_: UnionI64x4_) { loop {} }\n \n pub union UnionI64x4I64{ a: i64x4, b: i64 }\n \n@@ -53,19 +53,19 @@ pub union UnionF32{a:f32}\n \n // CHECK: define float @test_UnionF32(float %arg0)\n #[no_mangle]\n-pub extern fn test_UnionF32(_: UnionF32) -> UnionF32 { loop {} }\n+pub fn test_UnionF32(_: UnionF32) -> UnionF32 { loop {} }\n \n pub union UnionF32F32{a:f32, b:f32}\n \n // CHECK: define float @test_UnionF32F32(float %arg0)\n #[no_mangle]\n-pub extern fn test_UnionF32F32(_: UnionF32F32) -> UnionF32F32 { loop {} }\n+pub fn test_UnionF32F32(_: UnionF32F32) -> UnionF32F32 { loop {} }\n \n pub union UnionF32U32{a:f32, b:u32}\n \n // CHECK: define i32 @test_UnionF32U32(i32)\n #[no_mangle]\n-pub extern fn test_UnionF32U32(_: UnionF32U32) -> UnionF32U32 { loop {} }\n+pub fn test_UnionF32U32(_: UnionF32U32) -> UnionF32U32 { loop {} }\n \n pub union UnionU128{a:u128}\n // CHECK: define i128 @test_UnionU128(i128 %arg0)"}]}