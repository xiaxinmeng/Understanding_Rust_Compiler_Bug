{"sha": "149fc76698318f8f7cdfaa37a818e347721764e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0OWZjNzY2OTgzMThmOGY3Y2RmYWEzN2E4MThlMzQ3NzIxNzY0ZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-15T21:51:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-15T21:51:50Z"}, "message": "auto merge of #11550 : alexcrichton/rust/noinline, r=thestinger\n\nThe failure functions are generic, meaning they're candidates for getting\r\ninlined across crates. This has been happening, leading to monstrosities like\r\nthat found in #11549. I have verified that the codegen is *much* better now that\r\nwe're not inlining the failure path (the slow path).", "tree": {"sha": "670def8626471f07af6948700f044b4cabd344ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/670def8626471f07af6948700f044b4cabd344ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/149fc76698318f8f7cdfaa37a818e347721764e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/149fc76698318f8f7cdfaa37a818e347721764e7", "html_url": "https://github.com/rust-lang/rust/commit/149fc76698318f8f7cdfaa37a818e347721764e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/149fc76698318f8f7cdfaa37a818e347721764e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ce3386511efc7406ed284f75f9722c55948302e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce3386511efc7406ed284f75f9722c55948302e", "html_url": "https://github.com/rust-lang/rust/commit/7ce3386511efc7406ed284f75f9722c55948302e"}, {"sha": "86c60b68f996c45565543370b9fb93f2ce14865d", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c60b68f996c45565543370b9fb93f2ce14865d", "html_url": "https://github.com/rust-lang/rust/commit/86c60b68f996c45565543370b9fb93f2ce14865d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "ffe254574eba3b29d122fa66d5b2e9f847953200", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/149fc76698318f8f7cdfaa37a818e347721764e7/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/149fc76698318f8f7cdfaa37a818e347721764e7/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=149fc76698318f8f7cdfaa37a818e347721764e7", "patch": "@@ -364,6 +364,7 @@ pub mod eabi {\n /// This is the entry point of unwinding for things like lang items and such.\n /// The arguments are normally generated by the compiler, and need to\n /// have static lifetimes.\n+#[inline(never)] #[cold] // this is the slow path, please never inline this\n pub fn begin_unwind_raw(msg: *c_char, file: *c_char, line: size_t) -> ! {\n     #[inline]\n     fn static_char_ptr(p: *c_char) -> &'static str {\n@@ -381,6 +382,7 @@ pub fn begin_unwind_raw(msg: *c_char, file: *c_char, line: size_t) -> ! {\n }\n \n /// This is the entry point of unwinding for fail!() and assert!().\n+#[inline(never)] #[cold] // this is the slow path, please never inline this\n pub fn begin_unwind<M: Any + Send>(msg: M, file: &'static str, line: uint) -> ! {\n     // Note that this should be the only allocation performed in this block.\n     // Currently this means that fail!() on OOM will invoke this code path,"}]}