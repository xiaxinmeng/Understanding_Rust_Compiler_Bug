{"sha": "32aa58c96bf7d61c03838f9ec75f3e4d26974832", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYWE1OGM5NmJmN2Q2MWMwMzgzOGY5ZWM3NWYzZTRkMjY5NzQ4MzI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-23T20:13:54Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-28T17:59:56Z"}, "message": "rustc_metadata: Privatize `CrateMetadata::source`", "tree": {"sha": "219ae6dae310898f0713327c2e1b32070129b2b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/219ae6dae310898f0713327c2e1b32070129b2b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32aa58c96bf7d61c03838f9ec75f3e4d26974832", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32aa58c96bf7d61c03838f9ec75f3e4d26974832", "html_url": "https://github.com/rust-lang/rust/commit/32aa58c96bf7d61c03838f9ec75f3e4d26974832", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32aa58c96bf7d61c03838f9ec75f3e4d26974832/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2414852b1c65bc819869cf9cb5328158d3ff369", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2414852b1c65bc819869cf9cb5328158d3ff369", "html_url": "https://github.com/rust-lang/rust/commit/e2414852b1c65bc819869cf9cb5328158d3ff369"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "31d783f4afc7a68dfd9550d5fe7a548805e5bd35", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/32aa58c96bf7d61c03838f9ec75f3e4d26974832/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32aa58c96bf7d61c03838f9ec75f3e4d26974832/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=32aa58c96bf7d61c03838f9ec75f3e4d26974832", "patch": "@@ -51,10 +51,10 @@ fn dump_crates(cstore: &CStore) {\n         info!(\"  cnum: {}\", cnum);\n         info!(\"  hash: {}\", data.root.hash);\n         info!(\"  reqd: {:?}\", *data.dep_kind.lock());\n-        let CrateSource { dylib, rlib, rmeta } = data.source.clone();\n-        dylib.map(|dl| info!(\"  dylib: {}\", dl.0.display()));\n-        rlib.map(|rl|  info!(\"   rlib: {}\", rl.0.display()));\n-        rmeta.map(|rl| info!(\"   rmeta: {}\", rl.0.display()));\n+        let CrateSource { dylib, rlib, rmeta } = data.source();\n+        dylib.as_ref().map(|dl| info!(\"  dylib: {}\", dl.0.display()));\n+        rlib.as_ref().map(|rl|  info!(\"   rlib: {}\", rl.0.display()));\n+        rmeta.as_ref().map(|rl| info!(\"   rmeta: {}\", rl.0.display()));\n     });\n }\n \n@@ -118,7 +118,7 @@ impl<'a> CrateLoader<'a> {\n             // We're also sure to compare *paths*, not actual byte slices. The\n             // `source` stores paths which are normalized which may be different\n             // from the strings on the command line.\n-            let source = &self.cstore.get_crate_data(cnum).source;\n+            let source = self.cstore.get_crate_data(cnum).source();\n             if let Some(entry) = self.sess.opts.externs.get(&name.as_str()) {\n                 // Only use `--extern crate_name=path` here, not `--extern crate_name`.\n                 let found = entry.locations.iter().filter_map(|l| l.as_ref()).any(|l| {"}, {"sha": "748cfb6a23a59cd2d1372e832dc6939621dbe3c7", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32aa58c96bf7d61c03838f9ec75f3e4d26974832/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32aa58c96bf7d61c03838f9ec75f3e4d26974832/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=32aa58c96bf7d61c03838f9ec75f3e4d26974832", "patch": "@@ -101,7 +101,7 @@ crate struct CrateMetadata {\n     /// How to link (or not link) this crate to the currently compiled crate.\n     crate dep_kind: Lock<DepKind>,\n     /// Filesystem location of this crate.\n-    crate source: CrateSource,\n+    source: CrateSource,\n     /// Whether or not this crate should be consider a private dependency\n     /// for purposes of the 'exported_private_dependencies' lint\n     private_dep: bool,\n@@ -1534,6 +1534,10 @@ impl<'a, 'tcx> CrateMetadata {\n         }\n         update\n     }\n+\n+    crate fn source(&self) -> &CrateSource {\n+        &self.source\n+    }\n }\n \n // Cannot be implemented on 'ProcMacro', as libproc_macro"}]}