{"sha": "0c3290a217c8b92b1a29b79141a2c9118271cf15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMzI5MGEyMTdjOGI5MmIxYTI5Yjc5MTQxYTJjOTExODI3MWNmMTU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-02-21T00:41:21Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-02-21T02:45:50Z"}, "message": "Merge", "tree": {"sha": "02f3d1aa8e65d720feac82626afa50e2da7189b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02f3d1aa8e65d720feac82626afa50e2da7189b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c3290a217c8b92b1a29b79141a2c9118271cf15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3290a217c8b92b1a29b79141a2c9118271cf15", "html_url": "https://github.com/rust-lang/rust/commit/0c3290a217c8b92b1a29b79141a2c9118271cf15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c3290a217c8b92b1a29b79141a2c9118271cf15/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6282e5da674eaf00821a0d131327a7811e413a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/6282e5da674eaf00821a0d131327a7811e413a16", "html_url": "https://github.com/rust-lang/rust/commit/6282e5da674eaf00821a0d131327a7811e413a16"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "667a9c200580fd73dcd71e46cc422fd8b9282533", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=0c3290a217c8b92b1a29b79141a2c9118271cf15", "patch": "@@ -146,7 +146,7 @@ pub fn find_extern_mod_stmt_cnum(cstore: @mut CStore,\n // returns hashes of crates directly used by this crate. Hashes are\n // sorted by crate name.\n pub fn get_dep_hashes(cstore: @mut CStore) -> ~[~str] {\n-    struct crate_hash { name: ~str, hash: ~str }\n+    struct crate_hash { name: @~str, hash: @~str }\n     let mut result = ~[];\n \n     let extern_mod_crate_map = cstore.extern_mod_crate_map;\n@@ -155,7 +155,7 @@ pub fn get_dep_hashes(cstore: @mut CStore) -> ~[~str] {\n         let hash = decoder::get_crate_hash(cdata.data);\n         debug!(\"Add hash[%s]: %s\", *cdata.name, *hash);\n         result.push(crate_hash {\n-            name: /*bad*/copy cdata.name,\n+            name: cdata.name,\n             hash: hash\n         });\n     }"}, {"sha": "da7f3635c0e2425905ebfbec5d9dce8aac570982", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=0c3290a217c8b92b1a29b79141a2c9118271cf15", "patch": "@@ -89,8 +89,8 @@ fn find_library_crate_aux(cx: Context,\n                           filesearch: filesearch::FileSearch) ->\n    Option<(~str, @~[u8])> {\n     let crate_name = crate_name_from_metas(/*bad*/copy cx.metas);\n-    let prefix: ~str = prefix + crate_name + ~\"-\";\n-    let suffix: ~str = /*bad*/copy nn.suffix;\n+    let prefix: ~str = prefix + *crate_name + ~\"-\";\n+    let suffix: ~str = /*bad*/copy suffix;\n \n     let mut matches = ~[];\n     filesearch::search(filesearch, |path| {"}, {"sha": "61eff69d979e0464ea71124e9b04103b08a1dd47", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=0c3290a217c8b92b1a29b79141a2c9118271cf15", "patch": "@@ -113,7 +113,7 @@ struct LintSpec {\n     default: level\n }\n \n-pub type LintDict = HashMap<~str, @LintSpec>;\n+pub type LintDict = HashMap<@~str, @LintSpec>;\n \n /*\n   Pass names should not contain a '-', as the compiler normalizes"}, {"sha": "4eed47ebafcc97e065e1a432421a4a9f5e25d5c3", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=0c3290a217c8b92b1a29b79141a2c9118271cf15", "patch": "@@ -1047,21 +1047,19 @@ pub fn load_if_immediate(cx: block, v: ValueRef, t: ty::t) -> ValueRef {\n     return v;\n }\n \n-pub fn trans_trace(bcx: block, sp_opt: Option<span>, trace_str: ~str) {\n+pub fn trans_trace(bcx: block, sp_opt: Option<span>, trace_str: @~str) {\n     if !bcx.sess().trace() { return; }\n     let _icx = bcx.insn_ctxt(\"trans_trace\");\n-    add_comment(bcx, trace_str);\n+    add_comment(bcx, *trace_str);\n     let V_trace_str = C_cstr(bcx.ccx(), trace_str);\n     let (V_filename, V_line) = match sp_opt {\n       Some(sp) => {\n         let sess = bcx.sess();\n         let loc = sess.parse_sess.cm.lookup_char_pos(sp.lo);\n-        (C_cstr(bcx.ccx(), @/*bad*/copy loc.file.name),\n-         V_line: loc.line as int)\n+        (C_cstr(bcx.ccx(), @/*bad*/copy loc.file.name), loc.line as int)\n       }\n       None => {\n-        (V_filename: C_cstr(bcx.ccx(), @~\"<runtime>\"),\n-         V_line: 0)\n+        (C_cstr(bcx.ccx(), @~\"<runtime>\"), 0)\n       }\n     };\n     let ccx = bcx.ccx();\n@@ -1300,11 +1298,11 @@ pub fn cleanup_and_leave(bcx: block,\n         if bcx.sess().trace() {\n             trans_trace(\n                 bcx, None,\n-                fmt!(\"cleanup_and_leave(%s)\", cur.to_str()));\n+                @fmt!(\"cleanup_and_leave(%s)\", cur.to_str()));\n         }\n \n         match cur.kind {\n-          block_scope(ref inf) if (*inf).cleanups.len() > 0u => {\n+          block_scope(ref inf) if !inf.cleanups.is_empty() => {\n             for vec::find((*inf).cleanup_paths,\n                           |cp| cp.target == leave).each |cp| {\n                 Br(bcx, cp.dest);"}, {"sha": "b5aab1f3ac5e9d162f803dc757aecf8cddfb05ff", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=0c3290a217c8b92b1a29b79141a2c9118271cf15", "patch": "@@ -380,7 +380,7 @@ fn trans_fail_value(bcx: block,\n         let sess = bcx.sess();\n         let loc = sess.parse_sess.cm.lookup_char_pos(sp.lo);\n         (C_cstr(bcx.ccx(), @/*bad*/ copy loc.file.name),\n-         V_line: loc.line as int)\n+         loc.line as int)\n       }\n       None => {\n         (C_cstr(bcx.ccx(), @~\"<runtime>\"), 0)"}, {"sha": "ffeffa5775e9cda31391b5b90f1e055982d9062a", "filename": "src/librustc/middle/trans/datum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=0c3290a217c8b92b1a29b79141a2c9118271cf15", "patch": "@@ -530,7 +530,7 @@ pub impl Datum {\n         if bcx.sess().trace() {\n             trans_trace(\n                 bcx, None,\n-                fmt!(\"preserving until end of scope %d\",\n+                @fmt!(\"preserving until end of scope %d\",\n                      root_info.scope));\n         }\n "}, {"sha": "936c8cf1ce550e9925d8e185a49ebd050d4dc5bb", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3290a217c8b92b1a29b79141a2c9118271cf15/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=0c3290a217c8b92b1a29b79141a2c9118271cf15", "patch": "@@ -409,7 +409,7 @@ fn trans_to_datum_unadjusted(bcx: block, expr: @ast::expr) -> DatumBlock {\n fn trans_rvalue_datum_unadjusted(bcx: block, expr: @ast::expr) -> DatumBlock {\n     let _icx = bcx.insn_ctxt(\"trans_rvalue_datum_unadjusted\");\n \n-    trace_span!(bcx, expr.span, shorten(bcx.expr_to_str(expr)));\n+    trace_span!(bcx, expr.span, @shorten(bcx.expr_to_str(expr)));\n \n     match expr.node {\n         ast::expr_vstore(contents, ast::expr_vstore_box) |\n@@ -456,7 +456,7 @@ fn trans_rvalue_stmt_unadjusted(bcx: block, expr: @ast::expr) -> block {\n     let mut bcx = bcx;\n     let _icx = bcx.insn_ctxt(\"trans_rvalue_stmt\");\n \n-    trace_span!(bcx, expr.span, shorten(bcx.expr_to_str(expr)));\n+    trace_span!(bcx, expr.span, @shorten(bcx.expr_to_str(expr)));\n \n     match expr.node {\n         ast::expr_break(label_opt) => {\n@@ -537,7 +537,7 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n     let _icx = bcx.insn_ctxt(\"trans_rvalue_dps_unadjusted\");\n     let tcx = bcx.tcx();\n \n-    trace_span!(bcx, expr.span, shorten(bcx.expr_to_str(expr)));\n+    trace_span!(bcx, expr.span, @shorten(bcx.expr_to_str(expr)));\n \n     match expr.node {\n         ast::expr_paren(e) => {\n@@ -728,7 +728,7 @@ fn trans_lvalue_unadjusted(bcx: block, expr: @ast::expr) -> DatumBlock {\n     debug!(\"trans_lvalue(expr=%s)\", bcx.expr_to_str(expr));\n     let _indenter = indenter();\n \n-    trace_span!(bcx, expr.span, shorten(bcx.expr_to_str(expr)));\n+    trace_span!(bcx, expr.span, @shorten(bcx.expr_to_str(expr)));\n \n     let unrooted_datum = unpack_datum!(bcx, unrooted(bcx, expr));\n "}]}