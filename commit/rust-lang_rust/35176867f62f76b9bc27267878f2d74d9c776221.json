{"sha": "35176867f62f76b9bc27267878f2d74d9c776221", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MTc2ODY3ZjYyZjc2YjliYzI3MjY3ODc4ZjJkNzRkOWM3NzYyMjE=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-08-23T02:22:52Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-09-22T04:20:23Z"}, "message": "only set non-ADT derive error once per attribute, not per trait\n\nA slight eccentricity of this change is that now non-ADT-derive errors prevent\nderive-macro-not-found errors from surfacing (see changes to the\ngating-of-derive compile-fail tests).\n\nResolves #43927.", "tree": {"sha": "95f178900cce7fab2c22b61a830aa05a2faf569b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95f178900cce7fab2c22b61a830aa05a2faf569b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35176867f62f76b9bc27267878f2d74d9c776221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35176867f62f76b9bc27267878f2d74d9c776221", "html_url": "https://github.com/rust-lang/rust/commit/35176867f62f76b9bc27267878f2d74d9c776221", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35176867f62f76b9bc27267878f2d74d9c776221/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17f56c549c35bb2cb316e5abff116e65277c7bb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/17f56c549c35bb2cb316e5abff116e65277c7bb1", "html_url": "https://github.com/rust-lang/rust/commit/17f56c549c35bb2cb316e5abff116e65277c7bb1"}], "stats": {"total": 82, "additions": 52, "deletions": 30}, "files": [{"sha": "3a1b93425307e18715f77e9d0e88d28bec144a55", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/35176867f62f76b9bc27267878f2d74d9c776221/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35176867f62f76b9bc27267878f2d74d9c776221/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=35176867f62f76b9bc27267878f2d74d9c776221", "patch": "@@ -282,6 +282,24 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                     let expansion = self.expand_invoc(invoc, ext);\n                     self.collect_invocations(expansion, &[])\n                 } else if let InvocationKind::Attr { attr: None, traits, item } = invoc.kind {\n+                    let derive_allowed = match item {\n+                        Annotatable::Item(ref item) => match item.node {\n+                            ast::ItemKind::Struct(..) |\n+                            ast::ItemKind::Enum(..) |\n+                            ast::ItemKind::Union(..) => true,\n+                            _ => false,\n+                        },\n+                        _ => false,\n+                    };\n+                    if !derive_allowed {\n+                        let span = item.attrs().iter()\n+                            .find(|attr| attr.check_name(\"derive\"))\n+                            .expect(\"`derive` attribute should exist\").span;\n+                        self.cx.span_err(span,\n+                                         \"`derive` may only be applied to structs, enums \\\n+                                          and unions\");\n+                    }\n+\n                     let item = item\n                         .map_attrs(|mut attrs| { attrs.retain(|a| a.path != \"derive\"); attrs });\n                     let item_with_markers ="}, {"sha": "5c1ca19d635f7dc865e94d51f98f1df19cda7216", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35176867f62f76b9bc27267878f2d74d9c776221/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35176867f62f76b9bc27267878f2d74d9c776221/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=35176867f62f76b9bc27267878f2d74d9c776221", "patch": "@@ -428,8 +428,9 @@ impl<'a> TraitDef<'a> {\n                         }\n                     }\n                     _ => {\n-                        cx.span_err(mitem.span,\n-                                    \"`derive` may only be applied to structs, enums and unions\");\n+                        // Non-ADT derive is an error, but it should have been\n+                        // set earlier; see\n+                        // libsyntax/ext/expand.rs:MacroExpander::expand()\n                         return;\n                     }\n                 };\n@@ -448,8 +449,10 @@ impl<'a> TraitDef<'a> {\n                 push(Annotatable::Item(P(ast::Item { attrs: attrs, ..(*newitem).clone() })))\n             }\n             _ => {\n-                cx.span_err(mitem.span,\n-                            \"`derive` may only be applied to structs and enums\");\n+                // Non-Item derive is an error, but it should have been\n+                // set earlier; see\n+                // libsyntax/ext/expand.rs:MacroExpander::expand()\n+                return;\n             }\n         }\n     }"}, {"sha": "2dbc6cb140db3f957c01f288516fefdc6f6e72b6", "filename": "src/test/compile-fail/feature-gate/issue-43106-gating-of-derive-2.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-derive-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-derive-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-derive-2.rs?ref=35176867f62f76b9bc27267878f2d74d9c776221", "patch": "@@ -8,23 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// `#![derive]` is interpreted (and raises errors) when it occurs at\n-// contexts other than ADT definitions. This test checks cases where\n-// the derive-macro does not exist.\n+// This test checks cases where the derive-macro does not exist.\n \n-#![derive(x3300)]\n-//~^ ERROR cannot find derive macro `x3300` in this scope\n-\n-#[derive(x3300)]\n-//~^ ERROR cannot find derive macro `x3300` in this scope\n mod derive {\n-    mod inner { #![derive(x3300)] }\n-    //~^ ERROR cannot find derive macro `x3300` in this scope\n-\n-    #[derive(x3300)]\n-    //~^ ERROR cannot find derive macro `x3300` in this scope\n-    fn derive() { }\n-\n     #[derive(x3300)]\n     //~^ ERROR cannot find derive macro `x3300` in this scope\n     union U { f: i32 }\n@@ -36,12 +22,4 @@ mod derive {\n     #[derive(x3300)]\n     //~^ ERROR cannot find derive macro `x3300` in this scope\n     struct S;\n-\n-    #[derive(x3300)]\n-    //~^ ERROR cannot find derive macro `x3300` in this scope\n-    type T = S;\n-\n-    #[derive(x3300)]\n-    //~^ ERROR cannot find derive macro `x3300` in this scope\n-    impl S { }\n }"}, {"sha": "e5293ebb94ddc8c0161a9147737efdd3385e473e", "filename": "src/test/compile-fail/feature-gate/issue-43106-gating-of-derive.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate%2Fissue-43106-gating-of-derive.rs?ref=35176867f62f76b9bc27267878f2d74d9c776221", "patch": "@@ -8,9 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// `#![derive]` is interpreted (and raises errors) when it occurs at\n-// contexts other than ADT definitions. This test checks cases where\n-// the derive-macro exists.\n+// `#![derive]` raises errors when it occurs at contexts other than ADT\n+// definitions.\n \n #![derive(Debug)]\n //~^ ERROR `derive` may only be applied to structs, enums and unions"}, {"sha": "cf2a4b8d037671a96fddcdf93a648ab467329cc3", "filename": "src/test/ui/span/issue-43927-non-ADT-derive.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fui%2Fspan%2Fissue-43927-non-ADT-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fui%2Fspan%2Fissue-43927-non-ADT-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-43927-non-ADT-derive.rs?ref=35176867f62f76b9bc27267878f2d74d9c776221", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(dead_code)]\n+\n+#![derive(Debug, PartialEq, Eq)] // should be an outer attribute!\n+struct DerivedOn;\n+\n+fn main() {}"}, {"sha": "4cfbb6d6af01040764ebbc987cf534539867b376", "filename": "src/test/ui/span/issue-43927-non-ADT-derive.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fui%2Fspan%2Fissue-43927-non-ADT-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35176867f62f76b9bc27267878f2d74d9c776221/src%2Ftest%2Fui%2Fspan%2Fissue-43927-non-ADT-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-43927-non-ADT-derive.stderr?ref=35176867f62f76b9bc27267878f2d74d9c776221", "patch": "@@ -0,0 +1,8 @@\n+error: `derive` may only be applied to structs, enums and unions\n+  --> $DIR/issue-43927-non-ADT-derive.rs:13:1\n+   |\n+13 | #![derive(Debug, PartialEq, Eq)] // should be an outer attribute!\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}