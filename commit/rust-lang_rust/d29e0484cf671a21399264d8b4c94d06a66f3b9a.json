{"sha": "d29e0484cf671a21399264d8b4c94d06a66f3b9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyOWUwNDg0Y2Y2NzFhMjEzOTkyNjRkOGI0Yzk0ZDA2YTY2ZjNiOWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-20T17:58:38Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-20T17:58:38Z"}, "message": "Revert \"Remove unnecessary bailout in clif_pair_type_from_ty\"\n\nThis reverts commit 3b22c3a8ec7cc7a66b472c82edc972a3d1fb4410.\n\nSeems to be necessary after all. At least when compiling regex.", "tree": {"sha": "3d4cce1b42a68a32ef32ad68768f197251f8ae30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d4cce1b42a68a32ef32ad68768f197251f8ae30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d29e0484cf671a21399264d8b4c94d06a66f3b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d29e0484cf671a21399264d8b4c94d06a66f3b9a", "html_url": "https://github.com/rust-lang/rust/commit/d29e0484cf671a21399264d8b4c94d06a66f3b9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d29e0484cf671a21399264d8b4c94d06a66f3b9a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b22c3a8ec7cc7a66b472c82edc972a3d1fb4410", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b22c3a8ec7cc7a66b472c82edc972a3d1fb4410", "html_url": "https://github.com/rust-lang/rust/commit/3b22c3a8ec7cc7a66b472c82edc972a3d1fb4410"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "892ccf27f6df893f713a62e9cf387f951848da98", "filename": "src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d29e0484cf671a21399264d8b4c94d06a66f3b9a/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d29e0484cf671a21399264d8b4c94d06a66f3b9a/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=d29e0484cf671a21399264d8b4c94d06a66f3b9a", "patch": "@@ -90,6 +90,9 @@ fn clif_pair_type_from_ty<'tcx>(\n             let mut types = substs.types();\n             let a = clif_type_from_ty(tcx, types.next().unwrap())?;\n             let b = clif_type_from_ty(tcx, types.next().unwrap())?;\n+            if a.is_vector() || b.is_vector() {\n+                return None;\n+            }\n             (a, b)\n         }\n         ty::RawPtr(TypeAndMut { ty: pointee_ty, mutbl: _ }) | ty::Ref(_, pointee_ty, _) => {"}]}