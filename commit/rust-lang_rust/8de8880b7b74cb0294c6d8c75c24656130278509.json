{"sha": "8de8880b7b74cb0294c6d8c75c24656130278509", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZTg4ODBiN2I3NGNiMDI5NGM2ZDhjNzVjMjQ2NTYxMzAyNzg1MDk=", "commit": {"author": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-12-10T08:10:42Z"}, "committer": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-12-13T09:07:58Z"}, "message": "Update code comments of `c_void` to explain the reasoning for its current implementation\n\nWe need at least two variants of the enum as otherwise the compiler\ncomplains about the #[repr(u8)] attribute and we also need at least one\nvariant as otherwise the enum would be uninhabitated and dereferencing\npointers to it would be UB.\n\nAs such, mark the variants not unstable because they should not actually\nexist but because they are temporary implementation details until\n`extern type` is stable and can be used instead.", "tree": {"sha": "d69d0e8bbf1e0d42146b1930d6fac51e93637378", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d69d0e8bbf1e0d42146b1930d6fac51e93637378"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8de8880b7b74cb0294c6d8c75c24656130278509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8de8880b7b74cb0294c6d8c75c24656130278509", "html_url": "https://github.com/rust-lang/rust/commit/8de8880b7b74cb0294c6d8c75c24656130278509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8de8880b7b74cb0294c6d8c75c24656130278509/comments", "author": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eafae22ceb0e4fae835a5eb7518a55e75061e20", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eafae22ceb0e4fae835a5eb7518a55e75061e20", "html_url": "https://github.com/rust-lang/rust/commit/5eafae22ceb0e4fae835a5eb7518a55e75061e20"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "22e219d51f41f9abb8d50470e62b65d9630b18cc", "filename": "src/libcore/ffi.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8de8880b7b74cb0294c6d8c75c24656130278509/src%2Flibcore%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de8880b7b74cb0294c6d8c75c24656130278509/src%2Flibcore%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fffi.rs?ref=8de8880b7b74cb0294c6d8c75c24656130278509", "patch": "@@ -22,16 +22,18 @@ use ::fmt;\n // N.B., for LLVM to recognize the void pointer type and by extension\n //     functions like malloc(), we need to have it represented as i8* in\n //     LLVM bitcode. The enum used here ensures this and prevents misuse\n-//     of the \"raw\" type by only having private variants.. We need two\n+//     of the \"raw\" type by only having private variants. We need two\n //     variants, because the compiler complains about the repr attribute\n-//     otherwise.\n+//     otherwise and we need at least one variant as otherwise the enum\n+//     would be uninhabited and at least dereferencing such pointers would\n+//     be UB.\n #[repr(u8)]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")]\n pub enum c_void {\n-    #[unstable(feature = \"c_void_variant\", reason = \"should not have to exist\",\n+    #[unstable(feature = \"c_void_variant\", reason = \"temporary implementation detail\",\n                issue = \"0\")]\n     #[doc(hidden)] __variant1,\n-    #[unstable(feature = \"c_void_variant\", reason = \"should not have to exist\",\n+    #[unstable(feature = \"c_void_variant\", reason = \"temporary implementation detail\",\n                issue = \"0\")]\n     #[doc(hidden)] __variant2,\n }"}]}