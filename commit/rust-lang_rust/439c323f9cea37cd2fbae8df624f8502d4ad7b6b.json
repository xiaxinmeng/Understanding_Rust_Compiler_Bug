{"sha": "439c323f9cea37cd2fbae8df624f8502d4ad7b6b", "node_id": "C_kwDOAAsO6NoAKDQzOWMzMjNmOWNlYTM3Y2QyZmJhZThkZjYyNGY4NTAyZDRhZDdiNmI", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-16T13:07:35Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-23T14:06:46Z"}, "message": "Disable DWARF debuginfo on Windows\n\nWindows uses PDB instead of DWARF and using DWARF debuginfo causes the linker to give an error", "tree": {"sha": "39d58ec532384f80b317679a6e48cbc17dd5374b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39d58ec532384f80b317679a6e48cbc17dd5374b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/439c323f9cea37cd2fbae8df624f8502d4ad7b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/439c323f9cea37cd2fbae8df624f8502d4ad7b6b", "html_url": "https://github.com/rust-lang/rust/commit/439c323f9cea37cd2fbae8df624f8502d4ad7b6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/439c323f9cea37cd2fbae8df624f8502d4ad7b6b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c5fbacaf93f3dc8466f0ad5b91efe088af8afea", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c5fbacaf93f3dc8466f0ad5b91efe088af8afea", "html_url": "https://github.com/rust-lang/rust/commit/7c5fbacaf93f3dc8466f0ad5b91efe088af8afea"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "e456aa7a04c59aaea395844aadd4dfc406d5801d", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/439c323f9cea37cd2fbae8df624f8502d4ad7b6b/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439c323f9cea37cd2fbae8df624f8502d4ad7b6b/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=439c323f9cea37cd2fbae8df624f8502d4ad7b6b", "patch": "@@ -141,7 +141,11 @@ impl<'tcx> CodegenCx<'tcx> {\n \n         let unwind_context =\n             UnwindContext::new(isa, matches!(backend_config.codegen_mode, CodegenMode::Aot));\n-        let debug_context = if debug_info { Some(DebugContext::new(tcx, isa)) } else { None };\n+        let debug_context = if debug_info && !tcx.sess.target.options.is_like_windows {\n+            Some(DebugContext::new(tcx, isa))\n+        } else {\n+            None\n+        };\n         CodegenCx {\n             tcx,\n             global_asm: String::new(),"}]}