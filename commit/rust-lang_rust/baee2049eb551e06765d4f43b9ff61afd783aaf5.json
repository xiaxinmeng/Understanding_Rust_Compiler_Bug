{"sha": "baee2049eb551e06765d4f43b9ff61afd783aaf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZWUyMDQ5ZWI1NTFlMDY3NjVkNGY0M2I5ZmY2MWFmZDc4M2FhZjU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:27Z"}, "message": "rollup merge of #20463: amaranth/black_box_output\n\nBy returning the passed value black_box can be used on data being\npassed to a function being benchmarked. This ensures the compiler\ndoes not optimize the function for the input which could result in\nthe entire function being optimized away.", "tree": {"sha": "7f7af333aef8080d133769641c530a4485d84771", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f7af333aef8080d133769641c530a4485d84771"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baee2049eb551e06765d4f43b9ff61afd783aaf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baee2049eb551e06765d4f43b9ff61afd783aaf5", "html_url": "https://github.com/rust-lang/rust/commit/baee2049eb551e06765d4f43b9ff61afd783aaf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baee2049eb551e06765d4f43b9ff61afd783aaf5/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ade482b3bdc7a967ca98f1f1138b596ef45191e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ade482b3bdc7a967ca98f1f1138b596ef45191e", "html_url": "https://github.com/rust-lang/rust/commit/9ade482b3bdc7a967ca98f1f1138b596ef45191e"}, {"sha": "9f5fc563d3d592d5e44ab71759ffa26d326b3daa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f5fc563d3d592d5e44ab71759ffa26d326b3daa", "html_url": "https://github.com/rust-lang/rust/commit/9f5fc563d3d592d5e44ab71759ffa26d326b3daa"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "82e5af67ae31649e8cc0b0693a870c5c5671b3ee", "filename": "src/libcollections/bit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/baee2049eb551e06765d4f43b9ff61afd783aaf5/src%2Flibcollections%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baee2049eb551e06765d4f43b9ff61afd783aaf5/src%2Flibcollections%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbit.rs?ref=baee2049eb551e06765d4f43b9ff61afd783aaf5", "patch": "@@ -2526,7 +2526,7 @@ mod bitv_bench {\n             for _ in range(0u, 100) {\n                 bitv |= 1 << ((r.next_u32() as uint) % u32::BITS);\n             }\n-            black_box(&bitv)\n+            black_box(&bitv);\n         });\n     }\n \n@@ -2538,7 +2538,7 @@ mod bitv_bench {\n             for _ in range(0u, 100) {\n                 bitv.set((r.next_u32() as uint) % BENCH_BITS, true);\n             }\n-            black_box(&bitv)\n+            black_box(&bitv);\n         });\n     }\n "}, {"sha": "f7668930660b0203481894aaeb05ff408d0e8210", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/baee2049eb551e06765d4f43b9ff61afd783aaf5/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baee2049eb551e06765d4f43b9ff61afd783aaf5/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=baee2049eb551e06765d4f43b9ff61afd783aaf5", "patch": "@@ -2841,7 +2841,7 @@ mod bench {\n         let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; Mary had a little lamb, Little lamb\";\n \n         b.iter(|| {\n-            for ch in s.chars() { black_box(ch) }\n+            for ch in s.chars() { black_box(ch); }\n         });\n     }\n \n@@ -2869,7 +2869,7 @@ mod bench {\n         let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; Mary had a little lamb, Little lamb\";\n \n         b.iter(|| {\n-            for ch in s.chars().rev() { black_box(ch) }\n+            for ch in s.chars().rev() { black_box(ch); }\n         });\n     }\n "}, {"sha": "c00246598c303c94bdccd58287bf86b3f30ca02f", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/baee2049eb551e06765d4f43b9ff61afd783aaf5/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baee2049eb551e06765d4f43b9ff61afd783aaf5/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=baee2049eb551e06765d4f43b9ff61afd783aaf5", "patch": "@@ -1332,10 +1332,11 @@ impl MetricMap {\n /// elimination.\n ///\n /// This function is a no-op, and does not even read from `dummy`.\n-pub fn black_box<T>(dummy: T) {\n+pub fn black_box<T>(dummy: T) -> T {\n     // we need to \"use\" the argument in some way LLVM can't\n     // introspect.\n     unsafe {asm!(\"\" : : \"r\"(&dummy))}\n+    dummy\n }\n \n "}]}