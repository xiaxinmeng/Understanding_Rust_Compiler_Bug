{"sha": "f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YWM4ZmRhY2Y2NmIzNTFjNjQ3OWIwYzgzMTNlM2U1N2U1NzFiYTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-01T06:39:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-01T06:39:37Z"}, "message": "Auto merge of #86190 - asquared31415:extern-main-86110-fix, r=varkor\n\nFix ICE when `main` is declared in an `extern` block\n\nChanges in #84401 to implement `imported_main` changed how the crate entry point is found, and a declared `main` in an `extern` block was detected erroneously.  This was causing the ICE described in #86110.\n\nThis PR adds a check for this case and emits an error instead.  Previously a `main` declaration in an `extern` block was not detected as an entry point at all, so emitting an error shouldn't break anything that worked previously.  In 1.52.1 stable this is demonstrated, with a `` `main` function not found`` error.\n\nFixes #86110", "tree": {"sha": "ba4b962696cf978661df684ca89c46ca85e9f8f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba4b962696cf978661df684ca89c46ca85e9f8f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "html_url": "https://github.com/rust-lang/rust/commit/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1034282bca4402b2a9d913c981002c45dc3e2425", "url": "https://api.github.com/repos/rust-lang/rust/commits/1034282bca4402b2a9d913c981002c45dc3e2425", "html_url": "https://github.com/rust-lang/rust/commit/1034282bca4402b2a9d913c981002c45dc3e2425"}, {"sha": "9b2ba6d1a19fb75b66db64ce6ebedc595e894107", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b2ba6d1a19fb75b66db64ce6ebedc595e894107", "html_url": "https://github.com/rust-lang/rust/commit/9b2ba6d1a19fb75b66db64ce6ebedc595e894107"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "c0a837985fd62af0755fd64d73ecb9fdeccaf8cb", "filename": "compiler/rustc_ast/src/entry.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/compiler%2Frustc_ast%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/compiler%2Frustc_ast%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fentry.rs?ref=f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "patch": "@@ -1,3 +1,4 @@\n+#[derive(Debug)]\n pub enum EntryPointType {\n     None,\n     MainNamed,"}, {"sha": "7036c05a593e84e377782f7a32f0165b32156b73", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "patch": "@@ -128,7 +128,7 @@ pub struct ResolverOutputs {\n     pub main_def: Option<MainDefinition>,\n }\n \n-#[derive(Clone, Copy)]\n+#[derive(Clone, Copy, Debug)]\n pub struct MainDefinition {\n     pub res: Res<ast::NodeId>,\n     pub is_import: bool,"}, {"sha": "34ea5e9abd4d522447097f9efee9c43223d60931", "filename": "compiler/rustc_passes/src/entry.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fentry.rs?ref=f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "patch": "@@ -2,7 +2,7 @@ use rustc_ast::entry::EntryPointType;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_hir::{ForeignItem, HirId, ImplItem, Item, ItemKind, TraitItem, CRATE_HIR_ID};\n+use rustc_hir::{ForeignItem, HirId, ImplItem, Item, ItemKind, Node, TraitItem, CRATE_HIR_ID};\n use rustc_middle::hir::map::Map;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n@@ -148,6 +148,20 @@ fn configure_main(tcx: TyCtxt<'_>, visitor: &EntryContext<'_, '_>) -> Option<(De\n     } else if let Some((hir_id, _)) = visitor.attr_main_fn {\n         Some((tcx.hir().local_def_id(hir_id).to_def_id(), EntryFnType::Main))\n     } else if let Some(def_id) = tcx.main_def.and_then(|main_def| main_def.opt_fn_def_id()) {\n+        // non-local main imports are handled below\n+        if def_id.is_local() {\n+            let hir_id = tcx.hir().local_def_id_to_hir_id(def_id.expect_local());\n+            if matches!(tcx.hir().find(hir_id), Some(Node::ForeignItem(_))) {\n+                tcx.sess\n+                    .struct_span_err(\n+                        tcx.hir().span(hir_id),\n+                        \"the `main` function cannot be declared in an `extern` block\",\n+                    )\n+                    .emit();\n+                return None;\n+            }\n+        }\n+\n         if tcx.main_def.unwrap().is_import && !tcx.features().imported_main {\n             let span = tcx.main_def.unwrap().span;\n             feature_err("}, {"sha": "83af7a14ccc7a4236e3255e4c6a7edf21605ecdd", "filename": "src/test/ui/extern/extern-main-issue-86110.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/src%2Ftest%2Fui%2Fextern%2Fextern-main-issue-86110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/src%2Ftest%2Fui%2Fextern%2Fextern-main-issue-86110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-main-issue-86110.rs?ref=f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "patch": "@@ -0,0 +1,7 @@\n+// missing and missing2 exist to make sure that the error only happens on a `main` declaration\n+extern \"C\" {\n+    fn missing();\n+    fn main();\n+    //~^ the `main` function cannot be declared in an `extern` block\n+    fn missing2();\n+}"}, {"sha": "cd3de227dcffe13b17f2afd74d5e053daf31654f", "filename": "src/test/ui/extern/extern-main-issue-86110.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/src%2Ftest%2Fui%2Fextern%2Fextern-main-issue-86110.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4/src%2Ftest%2Fui%2Fextern%2Fextern-main-issue-86110.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-main-issue-86110.stderr?ref=f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "patch": "@@ -0,0 +1,8 @@\n+error: the `main` function cannot be declared in an `extern` block\n+  --> $DIR/extern-main-issue-86110.rs:4:5\n+   |\n+LL |     fn main();\n+   |     ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}