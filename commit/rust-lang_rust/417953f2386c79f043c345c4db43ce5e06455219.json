{"sha": "417953f2386c79f043c345c4db43ce5e06455219", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNzk1M2YyMzg2Yzc5ZjA0M2MzNDVjNGRiNDNjZTVlMDY0NTUyMTk=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-12-29T14:14:30Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2017-01-12T18:33:40Z"}, "message": "Disable jemalloc on s390x as well (closes #38596)\n\nSee also #37320 and #37392", "tree": {"sha": "26789d6a2c057193cc65b0277172dc015c69ef09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26789d6a2c057193cc65b0277172dc015c69ef09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/417953f2386c79f043c345c4db43ce5e06455219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/417953f2386c79f043c345c4db43ce5e06455219", "html_url": "https://github.com/rust-lang/rust/commit/417953f2386c79f043c345c4db43ce5e06455219", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/417953f2386c79f043c345c4db43ce5e06455219/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac5046cf67e51df286e7c8df02d67c302d4c4d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5046cf67e51df286e7c8df02d67c302d4c4d09", "html_url": "https://github.com/rust-lang/rust/commit/ac5046cf67e51df286e7c8df02d67c302d4c4d09"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "671fb4f4319b35f5d1c592aee2ddf4145dac6524", "filename": "src/librustc_back/target/s390x_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/417953f2386c79f043c345c4db43ce5e06455219/src%2Flibrustc_back%2Ftarget%2Fs390x_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417953f2386c79f043c345c4db43ce5e06455219/src%2Flibrustc_back%2Ftarget%2Fs390x_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fs390x_unknown_linux_gnu.rs?ref=417953f2386c79f043c345c4db43ce5e06455219", "patch": "@@ -19,6 +19,8 @@ pub fn target() -> TargetResult {\n     // Pass the -vector feature string to LLVM to respect this assumption.\n     base.features = \"-vector\".to_string();\n     base.max_atomic_width = Some(64);\n+    // see #36994\n+    base.exe_allocation_crate = \"alloc_system\".to_string();\n \n     Ok(Target {\n         llvm_target: \"s390x-unknown-linux-gnu\".to_string(),"}]}