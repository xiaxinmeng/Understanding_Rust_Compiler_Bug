{"sha": "b4ed3e1551f828d44dcd8e0caf08420438e5eb1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0ZWQzZTE1NTFmODI4ZDQ0ZGNkOGUwY2FmMDg0MjA0MzhlNWViMWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-16T13:56:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-16T13:56:53Z"}, "message": "Merge #8052\n\n8052: minor style fixes per feedback on #8036 r=JoshMcguigan a=JoshMcguigan\n\ncc @matklad  - this PR addresses your comments in #8036. \r\n\r\nchangelog fixup #8036\n\nCo-authored-by: Josh Mcguigan <joshmcg88@gmail.com>", "tree": {"sha": "a7a53cb60960d6f83fee09d9333047256e02b08c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7a53cb60960d6f83fee09d9333047256e02b08c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4ed3e1551f828d44dcd8e0caf08420438e5eb1a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgULklCRBK7hj4Ov3rIwAAdHIIABXcb94L52Y6e13yMVqYeNBJ\nT/HQDk9ZRMvIWHj/4AEFL9IhtUVgQ6uvNFdLEjn/oKjGX49aMbI7FT8CFETDHPPQ\nwemWvemunLVeAw0S+K/G04nH2WylSCLkXTzVO/tU7vXlkdGgyIX1MMYtJOtcK6og\nbCwfvTMCYxdQrzA6HnTnIPlQ+/2OP5WBYo0aotkV6rhJPUVi+tfz51FciWhl7EwP\nJzDhEHPVFkGxQH3yF40X1aWkPuujc8nKXcTMErgIBl282KKdC6JiaaVKOmeOfhyA\nQqQpw8E2HlyzvMRH/wLEMv6ybba0lAO1kpIBmDS7Y5L/H1jPggBKKq8+s8eB5cA=\n=MOT4\n-----END PGP SIGNATURE-----\n", "payload": "tree a7a53cb60960d6f83fee09d9333047256e02b08c\nparent da5328a01be27a73378f4c4bac161e8fd43781e3\nparent 81f51fcd654f961af97133c6995fe802e9913f05\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615903013 +0000\ncommitter GitHub <noreply@github.com> 1615903013 +0000\n\nMerge #8052\n\n8052: minor style fixes per feedback on #8036 r=JoshMcguigan a=JoshMcguigan\n\ncc @matklad  - this PR addresses your comments in #8036. \r\n\r\nchangelog fixup #8036\n\nCo-authored-by: Josh Mcguigan <joshmcg88@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4ed3e1551f828d44dcd8e0caf08420438e5eb1a", "html_url": "https://github.com/rust-lang/rust/commit/b4ed3e1551f828d44dcd8e0caf08420438e5eb1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4ed3e1551f828d44dcd8e0caf08420438e5eb1a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da5328a01be27a73378f4c4bac161e8fd43781e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/da5328a01be27a73378f4c4bac161e8fd43781e3", "html_url": "https://github.com/rust-lang/rust/commit/da5328a01be27a73378f4c4bac161e8fd43781e3"}, {"sha": "81f51fcd654f961af97133c6995fe802e9913f05", "url": "https://api.github.com/repos/rust-lang/rust/commits/81f51fcd654f961af97133c6995fe802e9913f05", "html_url": "https://github.com/rust-lang/rust/commit/81f51fcd654f961af97133c6995fe802e9913f05"}], "stats": {"total": 48, "additions": 21, "deletions": 27}, "files": [{"sha": "4e4923e0d8b2ec115ec46e7c5a7faf1f6ccb8d0b", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b4ed3e1551f828d44dcd8e0caf08420438e5eb1a/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ed3e1551f828d44dcd8e0caf08420438e5eb1a/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=b4ed3e1551f828d44dcd8e0caf08420438e5eb1a", "patch": "@@ -307,12 +307,13 @@ impl<'a> Render<'a> {\n }\n \n fn compute_exact_type_match(ctx: &CompletionContext, completion_ty: &hir::Type) -> bool {\n-    if let Some(expected_type) = ctx.expected_type.as_ref() {\n-        // We don't ever consider unit type to be an exact type match, since\n-        // nearly always this is not meaningful to the user.\n-        completion_ty == expected_type && !expected_type.is_unit()\n-    } else {\n-        false\n+    match ctx.expected_type.as_ref() {\n+        Some(expected_type) => {\n+            // We don't ever consider unit type to be an exact type match, since\n+            // nearly always this is not meaningful to the user.\n+            completion_ty == expected_type && !expected_type.is_unit()\n+        }\n+        None => false,\n     }\n }\n \n@@ -323,27 +324,20 @@ fn compute_exact_name_match(ctx: &CompletionContext, completion_name: impl Into<\n }\n \n fn compute_ref_match(ctx: &CompletionContext, completion_ty: &hir::Type) -> Option<Mutability> {\n-    let mut ref_match = None;\n-    if let Some(expected_type) = &ctx.expected_type {\n-        if completion_ty != expected_type {\n-            if let Some(expected_type_without_ref) = expected_type.remove_ref() {\n-                if completion_ty == &expected_type_without_ref\n-                    || completion_ty\n-                        .autoderef(ctx.db)\n-                        .any(|deref_ty| deref_ty == expected_type_without_ref)\n-                {\n-                    cov_mark::hit!(suggest_ref);\n-                    let mutability = if expected_type.is_mutable_reference() {\n-                        Mutability::Mut\n-                    } else {\n-                        Mutability::Shared\n-                    };\n-                    ref_match = Some(mutability);\n-                }\n-            }\n-        }\n-    };\n-    ref_match\n+    let expected_type = ctx.expected_type.as_ref()?;\n+    if completion_ty != expected_type {\n+        let expected_type_without_ref = expected_type.remove_ref()?;\n+        if completion_ty.autoderef(ctx.db).any(|deref_ty| deref_ty == expected_type_without_ref) {\n+            cov_mark::hit!(suggest_ref);\n+            let mutability = if expected_type.is_mutable_reference() {\n+                Mutability::Mut\n+            } else {\n+                Mutability::Shared\n+            };\n+            return Some(mutability);\n+        };\n+    }\n+    None\n }\n \n #[cfg(test)]"}]}