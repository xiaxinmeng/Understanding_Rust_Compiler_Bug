{"sha": "d4da3f51728f38030f41cfa320c80e3ffec6e795", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZGEzZjUxNzI4ZjM4MDMwZjQxY2ZhMzIwYzgwZTNmZmVjNmU3OTU=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T02:06:54Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T06:10:09Z"}, "message": "stdlib: Use if/alt expressions in std::int", "tree": {"sha": "8e3a10fe0320553cd50aea9e4dc87848ea41d40e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e3a10fe0320553cd50aea9e4dc87848ea41d40e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4da3f51728f38030f41cfa320c80e3ffec6e795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4da3f51728f38030f41cfa320c80e3ffec6e795", "html_url": "https://github.com/rust-lang/rust/commit/d4da3f51728f38030f41cfa320c80e3ffec6e795", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4da3f51728f38030f41cfa320c80e3ffec6e795/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d85447c4fb430e26fee5c3f85997aba1448c29ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/d85447c4fb430e26fee5c3f85997aba1448c29ba", "html_url": "https://github.com/rust-lang/rust/commit/d85447c4fb430e26fee5c3f85997aba1448c29ba"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "458c3dad0b96180b24fcd86dc01a84259c4f1b78", "filename": "src/lib/int.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d4da3f51728f38030f41cfa320c80e3ffec6e795/src%2Flib%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4da3f51728f38030f41cfa320c80e3ffec6e795/src%2Flib%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fint.rs?ref=d4da3f51728f38030f41cfa320c80e3ffec6e795", "patch": "@@ -32,28 +32,28 @@ iter range(int lo, int hi) -> int {\n fn to_str(int n, uint radix) -> str\n {\n     assert (0u < radix && radix <= 16u);\n-    if (n < 0) {\n-        ret \"-\" + uint::to_str((-n) as uint, radix);\n+    ret if (n < 0) {\n+        \"-\" + uint::to_str((-n) as uint, radix)\n     } else {\n-        ret uint::to_str(n as uint, radix);\n-    }\n+        uint::to_str(n as uint, radix)\n+    };\n }\n \n fn pow(int base, uint exponent) -> int {\n \n-    if (exponent == 0u) {\n-        ret 1;\n+    ret if (exponent == 0u) {\n+        1\n     } else if (base == 0) {\n-        ret 0;\n+        0\n     } else {\n         auto accum = base;\n         auto count = exponent;\n         while (count > 1u) {\n             accum *= base;\n             count -= 1u;\n         }\n-        ret accum;\n-    }\n+        accum\n+    };\n }\n \n // Local Variables:"}]}