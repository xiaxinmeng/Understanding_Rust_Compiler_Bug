{"sha": "f3f8a736c94bb285c0dfdcd26dde654d00225f55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZjhhNzM2Yzk0YmIyODVjMGRmZGNkMjZkZGU2NTRkMDAyMjVmNTU=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-04-10T13:58:20Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-04-22T14:18:21Z"}, "message": "rustc: de-@ lang_items.", "tree": {"sha": "e9d83461d4d9390c5f083af10c9f839746cc3949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9d83461d4d9390c5f083af10c9f839746cc3949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3f8a736c94bb285c0dfdcd26dde654d00225f55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3f8a736c94bb285c0dfdcd26dde654d00225f55", "html_url": "https://github.com/rust-lang/rust/commit/f3f8a736c94bb285c0dfdcd26dde654d00225f55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3f8a736c94bb285c0dfdcd26dde654d00225f55/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "250ae7923f9b41d826463d21a8187f1b5f0592ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/250ae7923f9b41d826463d21a8187f1b5f0592ab", "html_url": "https://github.com/rust-lang/rust/commit/250ae7923f9b41d826463d21a8187f1b5f0592ab"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "14311cf88fda838849d03d3b65b9edde2beeff7d", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=f3f8a736c94bb285c0dfdcd26dde654d00225f55", "patch": "@@ -299,7 +299,7 @@ pub fn phase_3_run_analysis_passes(sess: Session,\n         last_private_map: last_private_map\n     } =\n         time(time_passes, \"resolution\", (), |_|\n-             middle::resolve::resolve_crate(&sess, lang_items, krate));\n+             middle::resolve::resolve_crate(&sess, &lang_items, krate));\n \n     // Discard MTWT tables that aren't required past resolution.\n     syntax::ext::mtwt::clear_tables();"}, {"sha": "42ef8b9d51b08ce85775024355c245504506130f", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=f3f8a736c94bb285c0dfdcd26dde654d00225f55", "patch": "@@ -195,12 +195,12 @@ pub fn extract(attrs: &[ast::Attribute]) -> Option<InternedString> {\n }\n \n pub fn collect_language_items(krate: &ast::Crate,\n-                              session: &Session) -> @LanguageItems {\n+                              session: &Session) -> LanguageItems {\n     let mut collector = LanguageItemCollector::new(session);\n     collector.collect(krate);\n     let LanguageItemCollector { items, .. } = collector;\n     session.abort_if_errors();\n-    @items\n+    items\n }\n \n // End of the macro"}, {"sha": "5e1f854f6a41dd661951106507e84edc46e0d25c", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=f3f8a736c94bb285c0dfdcd26dde654d00225f55", "patch": "@@ -799,7 +799,7 @@ fn namespace_error_to_str(ns: NamespaceError) -> &'static str {\n }\n \n fn Resolver<'a>(session: &'a Session,\n-                lang_items: @LanguageItems,\n+                lang_items: &'a LanguageItems,\n                 crate_span: Span) -> Resolver<'a> {\n     let graph_root = @NameBindings();\n \n@@ -856,7 +856,7 @@ fn Resolver<'a>(session: &'a Session,\n /// The main resolver class.\n struct Resolver<'a> {\n     session: &'a Session,\n-    lang_items: @LanguageItems,\n+    lang_items: &'a LanguageItems,\n \n     graph_root: @NameBindings,\n \n@@ -5455,7 +5455,7 @@ pub struct CrateMap {\n \n /// Entry point to crate resolution.\n pub fn resolve_crate(session: &Session,\n-                     lang_items: @LanguageItems,\n+                     lang_items: &LanguageItems,\n                      krate: &Crate)\n                   -> CrateMap {\n     let mut resolver = Resolver(session, lang_items, krate.span);"}, {"sha": "b28fd06f9ad9e37c1d7947778cae44fa9ae8d219", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=f3f8a736c94bb285c0dfdcd26dde654d00225f55", "patch": "@@ -299,7 +299,7 @@ pub struct ctxt {\n     pub ty_param_defs: RefCell<NodeMap<TypeParameterDef>>,\n     pub adjustments: RefCell<NodeMap<AutoAdjustment>>,\n     pub normalized_cache: RefCell<HashMap<t, t>>,\n-    pub lang_items: @middle::lang_items::LanguageItems,\n+    pub lang_items: middle::lang_items::LanguageItems,\n     // A mapping of fake provided method def_ids to the default implementation\n     pub provided_method_sources: RefCell<DefIdMap<ast::DefId>>,\n     pub supertraits: RefCell<DefIdMap<@Vec<@TraitRef> >>,\n@@ -1086,7 +1086,7 @@ pub fn mk_ctxt(s: Session,\n                map: ast_map::Map,\n                freevars: freevars::freevar_map,\n                region_maps: middle::region::RegionMaps,\n-               lang_items: @middle::lang_items::LanguageItems)\n+               lang_items: middle::lang_items::LanguageItems)\n             -> ctxt {\n     ctxt {\n         named_region_map: named_region_map,"}, {"sha": "45d6434431bbf82789af256e14d8b4a9c466cd70", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8a736c94bb285c0dfdcd26dde654d00225f55/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=f3f8a736c94bb285c0dfdcd26dde654d00225f55", "patch": "@@ -2100,7 +2100,7 @@ fn check_expr_with_unifier(fcx: &FnCtxt,\n                         op: ast::BinOp,\n                         rhs: @ast::Expr) -> ty::t {\n         let tcx = fcx.ccx.tcx;\n-        let lang = tcx.lang_items;\n+        let lang = &tcx.lang_items;\n         let (name, trait_did) = match op {\n             ast::BiAdd => (\"add\", lang.add_trait()),\n             ast::BiSub => (\"sub\", lang.sub_trait()),"}]}