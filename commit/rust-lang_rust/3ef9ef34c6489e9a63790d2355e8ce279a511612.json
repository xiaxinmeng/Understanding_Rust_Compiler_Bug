{"sha": "3ef9ef34c6489e9a63790d2355e8ce279a511612", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZjllZjM0YzY0ODllOWE2Mzc5MGQyMzU1ZThjZTI3OWE1MTE2MTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-09T07:42:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-09T07:42:01Z"}, "message": "Reduce API", "tree": {"sha": "77d41211cb9c7190cc77c5b0f880d8775d0fbd59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77d41211cb9c7190cc77c5b0f880d8775d0fbd59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ef9ef34c6489e9a63790d2355e8ce279a511612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef9ef34c6489e9a63790d2355e8ce279a511612", "html_url": "https://github.com/rust-lang/rust/commit/3ef9ef34c6489e9a63790d2355e8ce279a511612", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ef9ef34c6489e9a63790d2355e8ce279a511612/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed12bd2791cf19da66bec66c50b95b02c4fe1d87", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed12bd2791cf19da66bec66c50b95b02c4fe1d87", "html_url": "https://github.com/rust-lang/rust/commit/ed12bd2791cf19da66bec66c50b95b02c4fe1d87"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "c326651423845e865d3b18c7a18825d7e29dc48f", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3ef9ef34c6489e9a63790d2355e8ce279a511612/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef9ef34c6489e9a63790d2355e8ce279a511612/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=3ef9ef34c6489e9a63790d2355e8ce279a511612", "patch": "@@ -73,20 +73,6 @@ pub struct HoverResult {\n     pub actions: Vec<HoverAction>,\n }\n \n-impl HoverResult {\n-    pub fn new() -> HoverResult {\n-        Self::default()\n-    }\n-\n-    pub fn is_empty(&self) -> bool {\n-        self.markup.is_empty()\n-    }\n-\n-    fn push_action(&mut self, action: HoverAction) {\n-        self.actions.push(action);\n-    }\n-}\n-\n // Feature: Hover\n //\n // Shows additional information, like type of an expression or documentation for definition when \"focusing\" code.\n@@ -97,7 +83,7 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n     let token = pick_best(file.token_at_offset(position.offset))?;\n     let token = sema.descend_into_macros(token);\n \n-    let mut res = HoverResult::new();\n+    let mut res = HoverResult::default();\n \n     let node = token.parent();\n     let definition = match_ast! {\n@@ -111,17 +97,17 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n         if let Some(text) = hover_for_definition(db, definition) {\n             res.markup.push_section(&text);\n         }\n-        if !res.is_empty() {\n+        if !res.markup.is_empty() {\n             if let Some(action) = show_implementations_action(db, definition) {\n-                res.push_action(action);\n+                res.actions.push(action);\n             }\n \n             if let Some(action) = runnable_action(&sema, definition, position.file_id) {\n-                res.push_action(action);\n+                res.actions.push(action);\n             }\n \n             if let Some(action) = goto_type_action(db, definition) {\n-                res.push_action(action);\n+                res.actions.push(action);\n             }\n \n             let range = sema.original_range(&node).range;"}]}