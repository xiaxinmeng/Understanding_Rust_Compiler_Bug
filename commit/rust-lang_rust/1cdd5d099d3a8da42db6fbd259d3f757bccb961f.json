{"sha": "1cdd5d099d3a8da42db6fbd259d3f757bccb961f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZGQ1ZDA5OWQzYThkYTQyZGI2ZmJkMjU5ZDNmNzU3YmNjYjk2MWY=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-10T14:25:54Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-10T14:25:54Z"}, "message": "Improve docs for InstanceDef::ReifyShim.", "tree": {"sha": "83f009b7fb07ee201a440cd590be2cdb9c63bc50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83f009b7fb07ee201a440cd590be2cdb9c63bc50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cdd5d099d3a8da42db6fbd259d3f757bccb961f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cdd5d099d3a8da42db6fbd259d3f757bccb961f", "html_url": "https://github.com/rust-lang/rust/commit/1cdd5d099d3a8da42db6fbd259d3f757bccb961f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cdd5d099d3a8da42db6fbd259d3f757bccb961f/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea3ecf22ae911b7e32b889b636bce86c165908c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea3ecf22ae911b7e32b889b636bce86c165908c4", "html_url": "https://github.com/rust-lang/rust/commit/ea3ecf22ae911b7e32b889b636bce86c165908c4"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "b35b577ddf716e894a8272c6e721f29b3b42f012", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1cdd5d099d3a8da42db6fbd259d3f757bccb961f/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdd5d099d3a8da42db6fbd259d3f757bccb961f/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=1cdd5d099d3a8da42db6fbd259d3f757bccb961f", "patch": "@@ -28,7 +28,10 @@ pub enum InstanceDef<'tcx> {\n \n     /// `fn()` pointer where the function itself cannot be turned into a pointer.\n     ///\n-    /// One example in the compiler today is functions annotated with `#[track_caller]`.\n+    /// One example in the compiler today is functions annotated with `#[track_caller]`, which\n+    /// must have their implicit caller location argument populated for a call. Because this is a\n+    /// required part of the function's ABI but can't be tracked as a property of the function\n+    /// pointer, we create a single \"caller location\" at the site where the function is reified.\n     ReifyShim(DefId),\n \n     /// `<fn() as FnTrait>::call_*`"}]}