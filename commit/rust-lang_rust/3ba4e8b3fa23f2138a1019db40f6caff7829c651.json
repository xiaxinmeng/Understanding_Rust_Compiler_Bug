{"sha": "3ba4e8b3fa23f2138a1019db40f6caff7829c651", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYTRlOGIzZmEyM2YyMTM4YTEwMTlkYjQwZjZjYWZmNzgyOWM2NTE=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2017-05-26T07:20:03Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2017-05-26T16:02:43Z"}, "message": "Demote the never_loop lint to Allow for now.\n\nAlso add \"known problem\" to the description, with link to #1586.", "tree": {"sha": "7e2f1eda5bcae20659a3a60dfe26ed3fb64cfec9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e2f1eda5bcae20659a3a60dfe26ed3fb64cfec9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ba4e8b3fa23f2138a1019db40f6caff7829c651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ba4e8b3fa23f2138a1019db40f6caff7829c651", "html_url": "https://github.com/rust-lang/rust/commit/3ba4e8b3fa23f2138a1019db40f6caff7829c651", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ba4e8b3fa23f2138a1019db40f6caff7829c651/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06472ca651b9b896357b686b31ef8c3a9403914e", "url": "https://api.github.com/repos/rust-lang/rust/commits/06472ca651b9b896357b686b31ef8c3a9403914e", "html_url": "https://github.com/rust-lang/rust/commit/06472ca651b9b896357b686b31ef8c3a9403914e"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "c5b28812e944be39110bc259037265b252c4a34f", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ba4e8b3fa23f2138a1019db40f6caff7829c651/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ba4e8b3fa23f2138a1019db40f6caff7829c651/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=3ba4e8b3fa23f2138a1019db40f6caff7829c651", "patch": "@@ -295,7 +295,7 @@ name\n [needless_return](https://github.com/Manishearth/rust-clippy/wiki#needless_return)                                     | warn    | using a return statement like `return expr;` where an expression would suffice\n [needless_update](https://github.com/Manishearth/rust-clippy/wiki#needless_update)                                     | warn    | using `Foo { ..base }` when there are no missing fields\n [neg_multiply](https://github.com/Manishearth/rust-clippy/wiki#neg_multiply)                                           | warn    | multiplying integers with -1\n-[never_loop](https://github.com/Manishearth/rust-clippy/wiki#never_loop)                                               | warn    | any loop with an unconditional `break` statement\n+[never_loop](https://github.com/Manishearth/rust-clippy/wiki#never_loop)                                               | allow   | any loop with an unconditional `break` or `return` statement\n [new_ret_no_self](https://github.com/Manishearth/rust-clippy/wiki#new_ret_no_self)                                     | warn    | not returning `Self` in a `new` method\n [new_without_default](https://github.com/Manishearth/rust-clippy/wiki#new_without_default)                             | warn    | `fn new() -> Self` method without `Default` implementation\n [new_without_default_derive](https://github.com/Manishearth/rust-clippy/wiki#new_without_default_derive)               | warn    | `fn new() -> Self` without `#[derive]`able `Default` implementation"}, {"sha": "e212aaeaf7b8678c5b3fb3af4116a2ad48132167", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ba4e8b3fa23f2138a1019db40f6caff7829c651/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba4e8b3fa23f2138a1019db40f6caff7829c651/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=3ba4e8b3fa23f2138a1019db40f6caff7829c651", "patch": "@@ -324,6 +324,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         enum_variants::STUTTER,\n         if_not_else::IF_NOT_ELSE,\n         items_after_statements::ITEMS_AFTER_STATEMENTS,\n+        loops::NEVER_LOOP,\n         matches::SINGLE_MATCH_ELSE,\n         mem_forget::MEM_FORGET,\n         methods::FILTER_MAP,\n@@ -419,7 +420,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         loops::FOR_LOOP_OVER_RESULT,\n         loops::ITER_NEXT_LOOP,\n         loops::NEEDLESS_RANGE_LOOP,\n-        loops::NEVER_LOOP,\n         loops::REVERSE_RANGE_LOOP,\n         loops::UNUSED_COLLECT,\n         loops::WHILE_LET_LOOP,"}, {"sha": "70e7e99a66dfb20e3dcdc05f7272cd9f72620072", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3ba4e8b3fa23f2138a1019db40f6caff7829c651/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba4e8b3fa23f2138a1019db40f6caff7829c651/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=3ba4e8b3fa23f2138a1019db40f6caff7829c651", "patch": "@@ -285,21 +285,24 @@ declare_lint! {\n     \"looping on a map using `iter` when `keys` or `values` would do\"\n }\n \n-/// **What it does:** Checks for loops that contain an unconditional `break`.\n+/// **What it does:** Checks for loops that contain an unconditional `break`\n+/// or `return`.\n ///\n /// **Why is this bad?** This loop never loops, all it does is obfuscating the\n /// code.\n ///\n-/// **Known problems:** None.\n+/// **Known problems:** Ignores `continue` statements in the loop that create\n+/// nontrivial control flow. Therefore set to `Allow` by default.\n+/// See https://github.com/Manishearth/rust-clippy/issues/1586\n ///\n /// **Example:**\n /// ```rust\n /// loop { ..; break; }\n /// ```\n declare_lint! {\n     pub NEVER_LOOP,\n-    Warn,\n-    \"any loop with an unconditional `break` statement\"\n+    Allow,\n+    \"any loop with an unconditional `break` or `return` statement\"\n }\n \n #[derive(Copy, Clone)]"}]}