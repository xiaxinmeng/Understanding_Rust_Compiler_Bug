{"sha": "a813c057d538dc271638b54e305473d095c54dfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MTNjMDU3ZDUzOGRjMjcxNjM4YjU0ZTMwNTQ3M2QwOTVjNTRkZmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-05T15:54:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-05T15:54:44Z"}, "message": "Auto merge of #4203 - Urriel:feat/333_calling_main, r=flip1995\n\nAdd recursion check on main function\n\nChanges:\n- Add MainRecursion lint to Clippy\n- Check for no-std setup\n\nfixes #333\n\nchangelog: Add `main_recursion` lint", "tree": {"sha": "a5859bf10a9772e15f8f27ca468010bed6add737", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5859bf10a9772e15f8f27ca468010bed6add737"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a813c057d538dc271638b54e305473d095c54dfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a813c057d538dc271638b54e305473d095c54dfb", "html_url": "https://github.com/rust-lang/rust/commit/a813c057d538dc271638b54e305473d095c54dfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a813c057d538dc271638b54e305473d095c54dfb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "html_url": "https://github.com/rust-lang/rust/commit/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83"}, {"sha": "dabf599c90485c79420ed9cbb2ec342afb5b265a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dabf599c90485c79420ed9cbb2ec342afb5b265a", "html_url": "https://github.com/rust-lang/rust/commit/dabf599c90485c79420ed9cbb2ec342afb5b265a"}], "stats": {"total": 151, "additions": 149, "deletions": 2}, "files": [{"sha": "e4a1a602c4393292907cd474d050403094e0b351", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -1000,6 +1000,7 @@ Released 2018-09-13\n [`let_unit_value`]: https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n [`linkedlist`]: https://rust-lang.github.io/rust-clippy/master/index.html#linkedlist\n [`logic_bug`]: https://rust-lang.github.io/rust-clippy/master/index.html#logic_bug\n+[`main_recursion`]: https://rust-lang.github.io/rust-clippy/master/index.html#main_recursion\n [`manual_memcpy`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n [`manual_swap`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_swap\n [`many_single_char_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names"}, {"sha": "ff64fc93788259870dcb6ae8c322fcdeeffe984c", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -6,7 +6,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 309 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 310 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "258be38e48b16c79f80206359466bd304e6e695b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -208,6 +208,7 @@ pub mod let_if_seq;\n pub mod lifetimes;\n pub mod literal_representation;\n pub mod loops;\n+pub mod main_recursion;\n pub mod map_clone;\n pub mod map_unit_fn;\n pub mod matches;\n@@ -473,6 +474,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box types::LetUnitValue);\n     reg.register_late_lint_pass(box types::UnitCmp);\n     reg.register_late_lint_pass(box loops::Loops);\n+    reg.register_late_lint_pass(box main_recursion::MainRecursion::default());\n     reg.register_late_lint_pass(box lifetimes::Lifetimes);\n     reg.register_late_lint_pass(box entry::HashMapPass);\n     reg.register_late_lint_pass(box ranges::Ranges);\n@@ -760,6 +762,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         loops::WHILE_IMMUTABLE_CONDITION,\n         loops::WHILE_LET_LOOP,\n         loops::WHILE_LET_ON_ITERATOR,\n+        main_recursion::MAIN_RECURSION,\n         map_clone::MAP_CLONE,\n         map_unit_fn::OPTION_MAP_UNIT_FN,\n         map_unit_fn::RESULT_MAP_UNIT_FN,\n@@ -933,6 +936,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         loops::FOR_KV_MAP,\n         loops::NEEDLESS_RANGE_LOOP,\n         loops::WHILE_LET_ON_ITERATOR,\n+        main_recursion::MAIN_RECURSION,\n         map_clone::MAP_CLONE,\n         matches::MATCH_BOOL,\n         matches::MATCH_OVERLAPPING_ARM,"}, {"sha": "88f1e685ced3b3e4726f09d2efc9a68cc73effe3", "filename": "clippy_lints/src/main_recursion.rs", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/clippy_lints%2Fsrc%2Fmain_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/clippy_lints%2Fsrc%2Fmain_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmain_recursion.rs?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -0,0 +1,62 @@\n+use rustc::hir::{Crate, Expr, ExprKind, QPath};\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::{declare_tool_lint, impl_lint_pass};\n+use syntax::symbol::sym;\n+\n+use crate::utils::{is_entrypoint_fn, snippet, span_help_and_lint};\n+use if_chain::if_chain;\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for recursion using the entrypoint.\n+    ///\n+    /// **Why is this bad?** Apart from special setups (which we could detect following attributes like #![no_std]),\n+    /// recursing into main() seems like an unintuitive antipattern we should be able to detect.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    /// ```no_run\n+    /// fn main() {\n+    ///     main();\n+    /// }\n+    /// ```\n+    pub MAIN_RECURSION,\n+    style,\n+    \"recursion using the entrypoint\"\n+}\n+\n+#[derive(Default)]\n+pub struct MainRecursion {\n+    has_no_std_attr: bool,\n+}\n+\n+impl_lint_pass!(MainRecursion => [MAIN_RECURSION]);\n+\n+impl LateLintPass<'_, '_> for MainRecursion {\n+    fn check_crate(&mut self, _: &LateContext<'_, '_>, krate: &Crate) {\n+        self.has_no_std_attr = krate.attrs.iter().any(|attr| attr.path == sym::no_std);\n+    }\n+\n+    fn check_expr_post(&mut self, cx: &LateContext<'_, '_>, expr: &Expr) {\n+        if self.has_no_std_attr {\n+            return;\n+        }\n+\n+        if_chain! {\n+            if let ExprKind::Call(func, _) = &expr.node;\n+            if let ExprKind::Path(path) = &func.node;\n+            if let QPath::Resolved(_, path) = &path;\n+            if let Some(def_id) = path.res.opt_def_id();\n+            if is_entrypoint_fn(cx, def_id);\n+            then {\n+                span_help_and_lint(\n+                    cx,\n+                    MAIN_RECURSION,\n+                    func.span,\n+                    &format!(\"recursing into entrypoint `{}`\", snippet(cx, func.span, \"main\")),\n+                    \"consider using another function for this recursion\"\n+                )\n+            }\n+        }\n+    }\n+}"}, {"sha": "93712e8eb68de0b6481294624912ae92d09d127d", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -6,7 +6,7 @@ pub use lint::Lint;\n pub use lint::LINT_LEVELS;\n \n // begin lint list, do not remove this comment, it\u2019s used in `update_lints`\n-pub const ALL_LINTS: [Lint; 309] = [\n+pub const ALL_LINTS: [Lint; 310] = [\n     Lint {\n         name: \"absurd_extreme_comparisons\",\n         group: \"correctness\",\n@@ -917,6 +917,13 @@ pub const ALL_LINTS: [Lint; 309] = [\n         deprecation: None,\n         module: \"booleans\",\n     },\n+    Lint {\n+        name: \"main_recursion\",\n+        group: \"style\",\n+        desc: \"recursion using the entrypoint\",\n+        deprecation: None,\n+        module: \"main_recursion\",\n+    },\n     Lint {\n         name: \"manual_memcpy\",\n         group: \"perf\","}, {"sha": "995787c5336688d9283fc8e6ca5ff806faf54133", "filename": "tests/ui/crate_level_checks/entrypoint_recursion.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -0,0 +1,12 @@\n+// ignore-macos\n+// ignore-windows\n+\n+#![feature(main)]\n+\n+#[warn(clippy::main_recursion)]\n+#[allow(unconditional_recursion)]\n+#[main]\n+fn a() {\n+    println!(\"Hello, World!\");\n+    a();\n+}"}, {"sha": "f52fc949f6c3e7a4d7e933518969079efac7711d", "filename": "tests/ui/crate_level_checks/entrypoint_recursion.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.stderr?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -0,0 +1,11 @@\n+error: recursing into entrypoint `a`\n+  --> $DIR/entrypoint_recursion.rs:11:5\n+   |\n+LL |     a();\n+   |     ^\n+   |\n+   = note: `-D clippy::main-recursion` implied by `-D warnings`\n+   = help: consider using another function for this recursion\n+\n+error: aborting due to previous error\n+"}, {"sha": "25b1417be9766a312878f5f9c91a7fd365ea2811", "filename": "tests/ui/crate_level_checks/no_std_main_recursion.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fno_std_main_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fno_std_main_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_level_checks%2Fno_std_main_recursion.rs?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -0,0 +1,33 @@\n+// ignore-macos\n+// ignore-windows\n+\n+#![feature(lang_items, link_args, start, libc)]\n+#![link_args = \"-nostartfiles\"]\n+#![no_std]\n+\n+use core::panic::PanicInfo;\n+use core::sync::atomic::{AtomicUsize, Ordering};\n+\n+static N: AtomicUsize = AtomicUsize::new(0);\n+\n+#[warn(clippy::main_recursion)]\n+#[start]\n+fn main(argc: isize, argv: *const *const u8) -> isize {\n+    let x = N.load(Ordering::Relaxed);\n+    N.store(x + 1, Ordering::Relaxed);\n+\n+    if x < 3 {\n+        main(argc, argv);\n+    }\n+\n+    0\n+}\n+\n+#[allow(clippy::empty_loop)]\n+#[panic_handler]\n+fn panic(_info: &PanicInfo) -> ! {\n+    loop {}\n+}\n+\n+#[lang = \"eh_personality\"]\n+extern \"C\" fn eh_personality() {}"}, {"sha": "89ff6609934d2cac98f83f5a4d4ddc6e91b1e6c0", "filename": "tests/ui/crate_level_checks/std_main_recursion.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fstd_main_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fstd_main_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_level_checks%2Fstd_main_recursion.rs?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -0,0 +1,6 @@\n+#[warn(clippy::main_recursion)]\n+#[allow(unconditional_recursion)]\n+fn main() {\n+    println!(\"Hello, World!\");\n+    main();\n+}"}, {"sha": "0a260f9d2309ea9a5cf39e9003a8f580d235f8bb", "filename": "tests/ui/crate_level_checks/std_main_recursion.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fstd_main_recursion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a813c057d538dc271638b54e305473d095c54dfb/tests%2Fui%2Fcrate_level_checks%2Fstd_main_recursion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_level_checks%2Fstd_main_recursion.stderr?ref=a813c057d538dc271638b54e305473d095c54dfb", "patch": "@@ -0,0 +1,11 @@\n+error: recursing into entrypoint `main`\n+  --> $DIR/std_main_recursion.rs:5:5\n+   |\n+LL |     main();\n+   |     ^^^^\n+   |\n+   = note: `-D clippy::main-recursion` implied by `-D warnings`\n+   = help: consider using another function for this recursion\n+\n+error: aborting due to previous error\n+"}]}