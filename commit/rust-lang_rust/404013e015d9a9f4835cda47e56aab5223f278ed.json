{"sha": "404013e015d9a9f4835cda47e56aab5223f278ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNDAxM2UwMTVkOWE5ZjQ4MzVjZGE0N2U1NmFhYjUyMjNmMjc4ZWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-01T11:52:59Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-12T16:54:49Z"}, "message": "Leave a FIXME re. `allow_plus`.", "tree": {"sha": "f0ff398b431298f2fa0a770cde34826c8ef88e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0ff398b431298f2fa0a770cde34826c8ef88e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/404013e015d9a9f4835cda47e56aab5223f278ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/404013e015d9a9f4835cda47e56aab5223f278ed", "html_url": "https://github.com/rust-lang/rust/commit/404013e015d9a9f4835cda47e56aab5223f278ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/404013e015d9a9f4835cda47e56aab5223f278ed/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa828d7a0567cf833a8da9b10cc9936b3e9423dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa828d7a0567cf833a8da9b10cc9936b3e9423dd", "html_url": "https://github.com/rust-lang/rust/commit/fa828d7a0567cf833a8da9b10cc9936b3e9423dd"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "33d7c878e888b4d395eb1fb6b8319e2518aede81", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/404013e015d9a9f4835cda47e56aab5223f278ed/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/404013e015d9a9f4835cda47e56aab5223f278ed/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=404013e015d9a9f4835cda47e56aab5223f278ed", "patch": "@@ -42,11 +42,12 @@ impl<'a> Parser<'a> {\n \n     /// Parses an optional return type `[ -> TY ]` in a function declaration.\n     pub(super) fn parse_ret_ty(&mut self, allow_plus: bool) -> PResult<'a, FunctionRetTy> {\n-        if self.eat(&token::RArrow) {\n-            Ok(FunctionRetTy::Ty(self.parse_ty_common(allow_plus, true, false)?))\n+        Ok(if self.eat(&token::RArrow) {\n+            // FIXME(Centril): Can we unconditionally `allow_plus`?\n+            FunctionRetTy::Ty(self.parse_ty_common(allow_plus, true, false)?)\n         } else {\n-            Ok(FunctionRetTy::Default(self.token.span.shrink_to_lo()))\n-        }\n+            FunctionRetTy::Default(self.token.span.shrink_to_lo())\n+        })\n     }\n \n     pub(super) fn parse_ty_common(&mut self, allow_plus: bool, allow_qpath_recovery: bool,"}]}