{"sha": "fd7314f53480872d3379e853e48a4ca7871f9140", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNzMxNGY1MzQ4MDg3MmQzMzc5ZTg1M2U0OGE0Y2E3ODcxZjkxNDA=", "commit": {"author": {"name": "Keith Yeung", "email": "kungfukeith11@gmail.com", "date": "2016-09-26T20:00:37Z"}, "committer": {"name": "Keith Yeung", "email": "kungfukeith11@gmail.com", "date": "2016-09-26T23:11:05Z"}, "message": "Update E0025 to new error format", "tree": {"sha": "3237b83c1cb1faf447c32b96e43662fdfa0c987a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3237b83c1cb1faf447c32b96e43662fdfa0c987a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd7314f53480872d3379e853e48a4ca7871f9140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd7314f53480872d3379e853e48a4ca7871f9140", "html_url": "https://github.com/rust-lang/rust/commit/fd7314f53480872d3379e853e48a4ca7871f9140", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd7314f53480872d3379e853e48a4ca7871f9140/comments", "author": {"login": "KiChjang", "id": 3248587, "node_id": "MDQ6VXNlcjMyNDg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/3248587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiChjang", "html_url": "https://github.com/KiChjang", "followers_url": "https://api.github.com/users/KiChjang/followers", "following_url": "https://api.github.com/users/KiChjang/following{/other_user}", "gists_url": "https://api.github.com/users/KiChjang/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiChjang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiChjang/subscriptions", "organizations_url": "https://api.github.com/users/KiChjang/orgs", "repos_url": "https://api.github.com/users/KiChjang/repos", "events_url": "https://api.github.com/users/KiChjang/events{/privacy}", "received_events_url": "https://api.github.com/users/KiChjang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "KiChjang", "id": 3248587, "node_id": "MDQ6VXNlcjMyNDg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/3248587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiChjang", "html_url": "https://github.com/KiChjang", "followers_url": "https://api.github.com/users/KiChjang/followers", "following_url": "https://api.github.com/users/KiChjang/following{/other_user}", "gists_url": "https://api.github.com/users/KiChjang/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiChjang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiChjang/subscriptions", "organizations_url": "https://api.github.com/users/KiChjang/orgs", "repos_url": "https://api.github.com/users/KiChjang/repos", "events_url": "https://api.github.com/users/KiChjang/events{/privacy}", "received_events_url": "https://api.github.com/users/KiChjang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2769285ad6d078c9a4499ad9e11278e4b78023c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2769285ad6d078c9a4499ad9e11278e4b78023c", "html_url": "https://github.com/rust-lang/rust/commit/c2769285ad6d078c9a4499ad9e11278e4b78023c"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "5d6d21bb6f8c8bb41402c435990a9d58719c9cc0", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fd7314f53480872d3379e853e48a4ca7871f9140/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7314f53480872d3379e853e48a4ca7871f9140/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=fd7314f53480872d3379e853e48a4ca7871f9140", "patch": "@@ -675,14 +675,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         for &Spanned { node: ref field, span } in fields {\n             let field_ty = match used_fields.entry(field.name) {\n                 Occupied(occupied) => {\n-                    let mut err = struct_span_err!(tcx.sess, span, E0025,\n-                                                   \"field `{}` bound multiple times \\\n-                                                    in the pattern\",\n-                                                   field.name);\n-                    span_note!(&mut err, *occupied.get(),\n-                               \"field `{}` previously bound here\",\n-                               field.name);\n-                    err.emit();\n+                    struct_span_err!(tcx.sess, span, E0025,\n+                                     \"field `{}` bound multiple times \\\n+                                      in the pattern\",\n+                                     field.name)\n+                        .span_label(span,\n+                                    &format!(\"multiple uses of `{}` in pattern\", field.name))\n+                        .span_label(*occupied.get(), &format!(\"first use of `{}`\", field.name))\n+                        .emit();\n                     tcx.types.err\n                 }\n                 Vacant(vacant) => {"}, {"sha": "1d15cef8bc9308d54b0860948e0e88ff6308dc71", "filename": "src/test/compile-fail/E0025.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd7314f53480872d3379e853e48a4ca7871f9140/src%2Ftest%2Fcompile-fail%2FE0025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7314f53480872d3379e853e48a4ca7871f9140/src%2Ftest%2Fcompile-fail%2FE0025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0025.rs?ref=fd7314f53480872d3379e853e48a4ca7871f9140", "patch": "@@ -15,5 +15,8 @@ struct Foo {\n \n fn main() {\n     let x = Foo { a:1, b:2 };\n-    let Foo { a: x, a: y, b: 0 } = x; //~ ERROR E0025\n+    let Foo { a: x, a: y, b: 0 } = x;\n+    //~^ ERROR field `a` bound multiple times in the pattern\n+    //~| NOTE multiple uses of `a` in pattern\n+    //~| NOTE first use of `a`\n }"}, {"sha": "5f816d34c8445fe29541b0c5f5351a296c030810", "filename": "src/test/compile-fail/issue-15260.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fd7314f53480872d3379e853e48a4ca7871f9140/src%2Ftest%2Fcompile-fail%2Fissue-15260.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7314f53480872d3379e853e48a4ca7871f9140/src%2Ftest%2Fcompile-fail%2Fissue-15260.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15260.rs?ref=fd7314f53480872d3379e853e48a4ca7871f9140", "patch": "@@ -14,19 +14,28 @@ struct Foo {\n \n fn main() {\n     let Foo {\n-        a: _, //~ NOTE field `a` previously bound here\n-        a: _ //~ ERROR field `a` bound multiple times in the pattern\n+        a: _, //~ NOTE first use of `a`\n+        a: _\n+        //~^ ERROR field `a` bound multiple times in the pattern\n+        //~| NOTE multiple uses of `a` in pattern\n     } = Foo { a: 29 };\n \n     let Foo {\n-        a, //~ NOTE field `a` previously bound here\n-        a: _ //~ ERROR field `a` bound multiple times in the pattern\n+        a, //~ NOTE first use of `a`\n+        a: _\n+        //~^ ERROR field `a` bound multiple times in the pattern\n+        //~| NOTE multiple uses of `a` in pattern\n     } = Foo { a: 29 };\n \n     let Foo {\n-        a, //~ NOTE field `a` previously bound here\n-        //~^ NOTE field `a` previously bound here\n-        a: _, //~ ERROR field `a` bound multiple times in the pattern\n-        a: x //~ ERROR field `a` bound multiple times in the pattern\n+        a,\n+        //~^ NOTE first use of `a`\n+        //~| NOTE first use of `a`\n+        a: _,\n+        //~^ ERROR field `a` bound multiple times in the pattern\n+        //~| NOTE multiple uses of `a` in pattern\n+        a: x\n+        //~^ ERROR field `a` bound multiple times in the pattern\n+        //~| NOTE multiple uses of `a` in pattern\n     } = Foo { a: 29 };\n }"}]}