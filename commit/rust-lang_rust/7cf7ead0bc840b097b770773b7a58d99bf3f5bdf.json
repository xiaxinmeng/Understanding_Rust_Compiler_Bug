{"sha": "7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "node_id": "C_kwDOAAsO6NoAKDdjZjdlYWQwYmM4NDBiMDk3Yjc3MDc3M2I3YTU4ZDk5YmYzZjViZGY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-07-27T18:42:07Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-07-28T09:59:54Z"}, "message": "Use line numbers relative to function in mir opt tests\n\nThis adds a new option, `-Zmir-pretty-relative-line-numbers`, that\nis then used in compiletest for the mir-opt tests.", "tree": {"sha": "becd6260027a919dbdf48a5580e37d1f0b8fb84d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/becd6260027a919dbdf48a5580e37d1f0b8fb84d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "html_url": "https://github.com/rust-lang/rust/commit/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2643b16468fda787470340890212591d8bc832b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2643b16468fda787470340890212591d8bc832b7", "html_url": "https://github.com/rust-lang/rust/commit/2643b16468fda787470340890212591d8bc832b7"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "57ce4933a3b3f17631b8b7bcea93f8c5bfb7b902", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "patch": "@@ -670,6 +670,7 @@ fn test_unstable_options_tracking_hash() {\n     untracked!(ls, true);\n     untracked!(macro_backtrace, true);\n     untracked!(meta_stats, true);\n+    untracked!(mir_pretty_relative_line_numbers, true);\n     untracked!(nll_facts, true);\n     untracked!(no_analysis, true);\n     untracked!(no_interleave_lints, true);"}, {"sha": "0ce41337b910d0608db93340592d9ad9a11acbba", "filename": "compiler/rustc_middle/src/mir/pretty.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs?ref=7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "patch": "@@ -360,7 +360,7 @@ where\n             \"{:A$} // {}{}\",\n             indented_body,\n             if tcx.sess.verbose() { format!(\"{:?}: \", current_location) } else { String::new() },\n-            comment(tcx, statement.source_info),\n+            comment(tcx, statement.source_info, body.span),\n             A = ALIGN,\n         )?;\n \n@@ -381,7 +381,7 @@ where\n         \"{:A$} // {}{}\",\n         indented_terminator,\n         if tcx.sess.verbose() { format!(\"{:?}: \", current_location) } else { String::new() },\n-        comment(tcx, data.terminator().source_info),\n+        comment(tcx, data.terminator().source_info, body.span),\n         A = ALIGN,\n     )?;\n \n@@ -518,8 +518,14 @@ impl<'tcx> Visitor<'tcx> for ExtraComments<'tcx> {\n     }\n }\n \n-fn comment(tcx: TyCtxt<'_>, SourceInfo { span, scope }: SourceInfo) -> String {\n-    format!(\"scope {} at {}\", scope.index(), tcx.sess.source_map().span_to_embeddable_string(span))\n+fn comment(tcx: TyCtxt<'_>, SourceInfo { span, scope }: SourceInfo, function_span: Span) -> String {\n+    let location = if tcx.sess.opts.unstable_opts.mir_pretty_relative_line_numbers {\n+        tcx.sess.source_map().span_to_relative_line_string(span, function_span)\n+    } else {\n+        tcx.sess.source_map().span_to_embeddable_string(span)\n+    };\n+\n+    format!(\"scope {} at {}\", scope.index(), location,)\n }\n \n /// Prints local variables in a scope tree.\n@@ -550,7 +556,7 @@ fn write_scope_tree(\n             \"{0:1$} // in {2}\",\n             indented_debug_info,\n             ALIGN,\n-            comment(tcx, var_debug_info.source_info),\n+            comment(tcx, var_debug_info.source_info, body.span),\n         )?;\n     }\n \n@@ -585,7 +591,7 @@ fn write_scope_tree(\n             indented_decl,\n             ALIGN,\n             local_name,\n-            comment(tcx, local_decl.source_info),\n+            comment(tcx, local_decl.source_info, body.span),\n         )?;\n     }\n "}, {"sha": "ef314115043b2b71dfe1f1be6e29fae75513cac7", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "patch": "@@ -1379,6 +1379,8 @@ options! {\n         \"use like `-Zmir-enable-passes=+DestProp,-InstCombine`. Forces the specified passes to be \\\n         enabled, overriding all other checks. Passes that are not specified are enabled or \\\n         disabled by other flags as usual.\"),\n+    mir_pretty_relative_line_numbers: bool = (false, parse_bool, [UNTRACKED],\n+        \"use line numbers relative to the function in mir pretty printing\"),\n     #[cfg_attr(not(bootstrap), rustc_lint_opt_deny_field_access(\"use `Session::mir_opt_level` instead of this field\"))]\n     mir_opt_level: Option<usize> = (None, parse_opt_number, [TRACKED],\n         \"MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\"),"}, {"sha": "28381157d50a9752d421a20aab17dcecfd1e49fb", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "patch": "@@ -463,6 +463,33 @@ impl SourceMap {\n         self.span_to_string(sp, FileNameDisplayPreference::Remapped)\n     }\n \n+    /// Format the span location suitable for pretty printing anotations with relative line numbers\n+    pub fn span_to_relative_line_string(&self, sp: Span, relative_to: Span) -> String {\n+        if self.files.borrow().source_files.is_empty() || sp.is_dummy() || relative_to.is_dummy() {\n+            return \"no-location\".to_string();\n+        }\n+\n+        let lo = self.lookup_char_pos(sp.lo());\n+        let hi = self.lookup_char_pos(sp.hi());\n+        let offset = self.lookup_char_pos(relative_to.lo());\n+\n+        if lo.file.name != offset.file.name {\n+            return self.span_to_embeddable_string(sp);\n+        }\n+\n+        let lo_line = lo.line.saturating_sub(offset.line);\n+        let hi_line = hi.line.saturating_sub(offset.line);\n+\n+        format!(\n+            \"{}:+{}:{}: +{}:{}\",\n+            lo.file.name.display(FileNameDisplayPreference::Remapped),\n+            lo_line,\n+            lo.col.to_usize() + 1,\n+            hi_line,\n+            hi.col.to_usize() + 1,\n+        )\n+    }\n+\n     /// Format the span location to be printed in diagnostics. Must not be emitted\n     /// to build artifacts as this may leak local file paths. Use span_to_embeddable_string\n     /// for string suitable for embedding."}, {"sha": "780c0032b6d152dc969b35db8531711c66fb495c", "filename": "src/test/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout?ref=7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "patch": "@@ -76,6 +76,7 @@\n     -Z                              meta-stats=val -- gather metadata statistics (default: no)\n     -Z                          mir-emit-retag=val -- emit Retagging MIR statements, interpreted e.g., by miri; implies -Zmir-opt-level=0 (default: no)\n     -Z                       mir-enable-passes=val -- use like `-Zmir-enable-passes=+DestProp,-InstCombine`. Forces the specified passes to be enabled, overriding all other checks. Passes that are not specified are enabled or disabled by other flags as usual.\n+    -Z        mir-pretty-relative-line-numbers=val -- use line numbers relative to the function in mir pretty printing\n     -Z                           mir-opt-level=val -- MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\n     -Z                         move-size-limit=val -- the size at which the `large_assignments` lint starts to be emitted\n     -Z                         mutable-noalias=val -- emit noalias metadata for mutable references (default: yes)"}, {"sha": "d3e5a2dd644af31eb6f18036a9e01a46af0d1573", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf7ead0bc840b097b770773b7a58d99bf3f5bdf/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=7cf7ead0bc840b097b770773b7a58d99bf3f5bdf", "patch": "@@ -1960,6 +1960,7 @@ impl<'test> TestCx<'test> {\n                     \"-Zdump-mir=all\",\n                     \"-Zvalidate-mir\",\n                     \"-Zdump-mir-exclude-pass-number\",\n+                    \"-Zmir-pretty-relative-line-numbers=yes\",\n                 ]);\n                 if let Some(pass) = &self.props.mir_unit_test {\n                     rustc.args(&[\"-Zmir-opt-level=0\", &format!(\"-Zmir-enable-passes=+{}\", pass)]);"}]}