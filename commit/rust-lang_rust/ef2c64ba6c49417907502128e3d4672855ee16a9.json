{"sha": "ef2c64ba6c49417907502128e3d4672855ee16a9", "node_id": "C_kwDOAAsO6NoAKGVmMmM2NGJhNmM0OTQxNzkwNzUwMjEyOGUzZDQ2NzI4NTVlZTE2YTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-04T17:41:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-04T17:41:14Z"}, "message": "Rollup merge of #112247 - lqd:lld-rpath, r=Mark-Simulacrum\n\nrust-lld: add rpath entry to the correct `lib` folder\n\nAn explanation, for our linux rustup toolchain:\n- `lld` / `rust-lld` is built as a regular LLVM tool, but is not distributed via the `llvm-tools` component. It's distributed by default, like a regular rust binary, like cargo and rustc. The general expected setup is: binaries in `bin` and libraries in `lib`, so the rpath we use for a `bin/$executable` is `$ORIGIN/../lib`.\n- However, `rust-lld` is _not_ in the same location as our other executables (`$root/bin`), it's in `$root/lib/rustlib/$host/bin/`. The current rpath thus expects the LLVM's shared library to be in `$root/lib/rustlib/$host/lib/`.\n- That .so is only present in `$root/lib`, causing #80703. (LLVM's shared library is also copied to `$root/lib/rustlib/$host/lib/` with the `llvm-tools` component, so it also was [a workaround for the issue](https://github.com/rust-lang/rust/issues/80703#issuecomment-1574788504))\n\nrustup's `LD_LIBRARY_PATH` overrides made this discrepancy invisible when we switched to `llvm.link-shared = true`, and this only showed up when running `rustc` or `rust-lld`'s executables directly.\n\nTo fix this we could:\n- copy the .so to this expected location all the time, but that seems wasteful.\n- or, add an rpath entry when building LLD, which seems preferable to me (but I don't know if it could cause issues).\n\nThis PR does the latter, tweaking how bootstrap builds LLD to point to the expected directory, and fixes #80703.\n\n(Since this is related to P-high issues about switching to lld by default, I'll cc `@petrochenkov` to keep them updated.)", "tree": {"sha": "3319af45540bd4984a8c56382d7a35241c8824e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3319af45540bd4984a8c56382d7a35241c8824e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef2c64ba6c49417907502128e3d4672855ee16a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkfMy6CRBK7hj4Ov3rIwAAZhEIACRwOb72ACjT9Wcl7rl1Ipne\nARfP17cXxQnoK7BbmFzoK880/5p1Duyo9UIFPUlCLATS7kNLdEAWVilaEYCXG1Up\ndcSZqK5rSNAMD8MN+Ms20FQtE0dpIKMA6I2qu2ZukQbiivfRSSNaQ5L+xldXPO4h\nho55JH30BtP4nOPOsrqW9vvo4Yh6H1KyB8RE6llEoozj434m62fK9tyQpshYHipm\nnKCP4QUdFp5ccsiBGBEmR8/hb4h2lNR4SfZsARbPmrg1dKCza2YVtf0aVu+vW2rz\nq24MzfTp65johiX8rwY4dM/wT9w/+F8yE+4YuO6KneQbWCCLXJPx6LdpmYeNoZ4=\n=9I5L\n-----END PGP SIGNATURE-----\n", "payload": "tree 3319af45540bd4984a8c56382d7a35241c8824e8\nparent e04e19d2229a48f5b4cb68e832121f9cadbb2fa3\nparent 4117b5e65bdcace7df94fe28a621f252d4a9412d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685900474 +0200\ncommitter GitHub <noreply@github.com> 1685900474 +0200\n\nRollup merge of #112247 - lqd:lld-rpath, r=Mark-Simulacrum\n\nrust-lld: add rpath entry to the correct `lib` folder\n\nAn explanation, for our linux rustup toolchain:\n- `lld` / `rust-lld` is built as a regular LLVM tool, but is not distributed via the `llvm-tools` component. It's distributed by default, like a regular rust binary, like cargo and rustc. The general expected setup is: binaries in `bin` and libraries in `lib`, so the rpath we use for a `bin/$executable` is `$ORIGIN/../lib`.\n- However, `rust-lld` is _not_ in the same location as our other executables (`$root/bin`), it's in `$root/lib/rustlib/$host/bin/`. The current rpath thus expects the LLVM's shared library to be in `$root/lib/rustlib/$host/lib/`.\n- That .so is only present in `$root/lib`, causing #80703. (LLVM's shared library is also copied to `$root/lib/rustlib/$host/lib/` with the `llvm-tools` component, so it also was [a workaround for the issue](https://github.com/rust-lang/rust/issues/80703#issuecomment-1574788504))\n\nrustup's `LD_LIBRARY_PATH` overrides made this discrepancy invisible when we switched to `llvm.link-shared = true`, and this only showed up when running `rustc` or `rust-lld`'s executables directly.\n\nTo fix this we could:\n- copy the .so to this expected location all the time, but that seems wasteful.\n- or, add an rpath entry when building LLD, which seems preferable to me (but I don't know if it could cause issues).\n\nThis PR does the latter, tweaking how bootstrap builds LLD to point to the expected directory, and fixes #80703.\n\n(Since this is related to P-high issues about switching to lld by default, I'll cc `@petrochenkov` to keep them updated.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2c64ba6c49417907502128e3d4672855ee16a9", "html_url": "https://github.com/rust-lang/rust/commit/ef2c64ba6c49417907502128e3d4672855ee16a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef2c64ba6c49417907502128e3d4672855ee16a9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e04e19d2229a48f5b4cb68e832121f9cadbb2fa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e04e19d2229a48f5b4cb68e832121f9cadbb2fa3", "html_url": "https://github.com/rust-lang/rust/commit/e04e19d2229a48f5b4cb68e832121f9cadbb2fa3"}, {"sha": "4117b5e65bdcace7df94fe28a621f252d4a9412d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4117b5e65bdcace7df94fe28a621f252d4a9412d", "html_url": "https://github.com/rust-lang/rust/commit/4117b5e65bdcace7df94fe28a621f252d4a9412d"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "19e595650cf9d5ca43517bf833a9c0e336528d29", "filename": "src/bootstrap/llvm.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ef2c64ba6c49417907502128e3d4672855ee16a9/src%2Fbootstrap%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2c64ba6c49417907502128e3d4672855ee16a9/src%2Fbootstrap%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fllvm.rs?ref=ef2c64ba6c49417907502128e3d4672855ee16a9", "patch": "@@ -834,6 +834,31 @@ impl Step for Lld {\n             }\n         }\n \n+        // LLD is built as an LLVM tool, but is distributed outside of the `llvm-tools` component,\n+        // which impacts where it expects to find LLVM's shared library. This causes #80703.\n+        //\n+        // LLD is distributed at \"$root/lib/rustlib/$host/bin/rust-lld\", but the `libLLVM-*.so` it\n+        // needs is distributed at \"$root/lib\". The default rpath of \"$ORIGIN/../lib\" points at the\n+        // lib path for LLVM tools, not the one for rust binaries.\n+        //\n+        // (The `llvm-tools` component copies the .so there for the other tools, and with that\n+        // component installed, one can successfully invoke `rust-lld` directly without rustup's\n+        // `LD_LIBRARY_PATH` overrides)\n+        //\n+        if builder.config.rpath_enabled(target)\n+            && util::use_host_linker(target)\n+            && builder.config.llvm_link_shared()\n+            && target.contains(\"linux\")\n+        {\n+            // So we inform LLD where it can find LLVM's libraries by adding an rpath entry to the\n+            // expected parent `lib` directory.\n+            //\n+            // Be careful when changing this path, we need to ensure it's quoted or escaped:\n+            // `$ORIGIN` would otherwise be expanded when the `LdFlags` are passed verbatim to\n+            // cmake.\n+            ldflags.push_all(\"-Wl,-rpath,'$ORIGIN/../../../'\");\n+        }\n+\n         configure_cmake(builder, target, &mut cfg, true, ldflags, &[]);\n         configure_llvm(builder, target, &mut cfg);\n "}]}