{"sha": "eb72dc5d40767f9267e0e42dc1139f7976a0abd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNzJkYzVkNDA3NjdmOTI2N2UwZTQyZGMxMTM5Zjc5NzZhMGFiZDE=", "commit": {"author": {"name": "Griffin Smith", "email": "root@gws.fyi", "date": "2020-12-28T16:41:52Z"}, "committer": {"name": "Griffin Smith", "email": "root@gws.fyi", "date": "2021-01-14T02:16:26Z"}, "message": "Add as_ref and as_mut methods for Bound\n\nAdd as_ref and as_mut method for std::ops::range::Bound, patterned off\nof the methods of the same name on Option.", "tree": {"sha": "bac0a483ed83cd6d143bdd3ea896b335ffce2bf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bac0a483ed83cd6d143bdd3ea896b335ffce2bf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb72dc5d40767f9267e0e42dc1139f7976a0abd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb72dc5d40767f9267e0e42dc1139f7976a0abd1", "html_url": "https://github.com/rust-lang/rust/commit/eb72dc5d40767f9267e0e42dc1139f7976a0abd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb72dc5d40767f9267e0e42dc1139f7976a0abd1/comments", "author": {"login": "glittershark", "id": 1481027, "node_id": "MDQ6VXNlcjE0ODEwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1481027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glittershark", "html_url": "https://github.com/glittershark", "followers_url": "https://api.github.com/users/glittershark/followers", "following_url": "https://api.github.com/users/glittershark/following{/other_user}", "gists_url": "https://api.github.com/users/glittershark/gists{/gist_id}", "starred_url": "https://api.github.com/users/glittershark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glittershark/subscriptions", "organizations_url": "https://api.github.com/users/glittershark/orgs", "repos_url": "https://api.github.com/users/glittershark/repos", "events_url": "https://api.github.com/users/glittershark/events{/privacy}", "received_events_url": "https://api.github.com/users/glittershark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glittershark", "id": 1481027, "node_id": "MDQ6VXNlcjE0ODEwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1481027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glittershark", "html_url": "https://github.com/glittershark", "followers_url": "https://api.github.com/users/glittershark/followers", "following_url": "https://api.github.com/users/glittershark/following{/other_user}", "gists_url": "https://api.github.com/users/glittershark/gists{/gist_id}", "starred_url": "https://api.github.com/users/glittershark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glittershark/subscriptions", "organizations_url": "https://api.github.com/users/glittershark/orgs", "repos_url": "https://api.github.com/users/glittershark/repos", "events_url": "https://api.github.com/users/glittershark/events{/privacy}", "received_events_url": "https://api.github.com/users/glittershark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76aca6659a0eb3f5696541d0be518530cabdd963", "url": "https://api.github.com/repos/rust-lang/rust/commits/76aca6659a0eb3f5696541d0be518530cabdd963", "html_url": "https://github.com/rust-lang/rust/commit/76aca6659a0eb3f5696541d0be518530cabdd963"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "0571dc74b9af90aaf78beac4fe6112448698c379", "filename": "library/core/src/ops/range.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/eb72dc5d40767f9267e0e42dc1139f7976a0abd1/library%2Fcore%2Fsrc%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb72dc5d40767f9267e0e42dc1139f7976a0abd1/library%2Fcore%2Fsrc%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Frange.rs?ref=eb72dc5d40767f9267e0e42dc1139f7976a0abd1", "patch": "@@ -678,6 +678,29 @@ pub enum Bound<T> {\n     Unbounded,\n }\n \n+#[unstable(feature = \"bound_as_ref\", issue = \"80996\")]\n+impl<T> Bound<T> {\n+    /// Converts from `&Bound<T>` to `Bound<&T>`.\n+    #[inline]\n+    pub fn as_ref(&self) -> Bound<&T> {\n+        match *self {\n+            Included(ref x) => Included(x),\n+            Excluded(ref x) => Excluded(x),\n+            Unbounded => Unbounded,\n+        }\n+    }\n+\n+    /// Converts from `&mut Bound<T>` to `Bound<&T>`.\n+    #[inline]\n+    pub fn as_mut(&mut self) -> Bound<&mut T> {\n+        match *self {\n+            Included(ref mut x) => Included(x),\n+            Excluded(ref mut x) => Excluded(x),\n+            Unbounded => Unbounded,\n+        }\n+    }\n+}\n+\n impl<T: Clone> Bound<&T> {\n     /// Map a `Bound<&T>` to a `Bound<T>` by cloning the contents of the bound.\n     ///"}]}