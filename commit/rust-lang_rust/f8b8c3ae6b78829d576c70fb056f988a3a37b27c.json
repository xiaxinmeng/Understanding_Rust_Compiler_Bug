{"sha": "f8b8c3ae6b78829d576c70fb056f988a3a37b27c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YjhjM2FlNmI3ODgyOWQ1NzZjNzBmYjA1NmY5ODhhM2EzN2IyN2M=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-01-22T13:50:28Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-03-05T21:11:20Z"}, "message": "Refactor fn Bucket::next", "tree": {"sha": "6b88aa51d6fe96551ba4ecd2724546e6409fb624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b88aa51d6fe96551ba4ecd2724546e6409fb624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b8c3ae6b78829d576c70fb056f988a3a37b27c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b8c3ae6b78829d576c70fb056f988a3a37b27c", "html_url": "https://github.com/rust-lang/rust/commit/f8b8c3ae6b78829d576c70fb056f988a3a37b27c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b8c3ae6b78829d576c70fb056f988a3a37b27c/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a619fdd2ad06c8aea1aa4f5043dfa243d5438b55", "url": "https://api.github.com/repos/rust-lang/rust/commits/a619fdd2ad06c8aea1aa4f5043dfa243d5438b55", "html_url": "https://github.com/rust-lang/rust/commit/a619fdd2ad06c8aea1aa4f5043dfa243d5438b55"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "7db89dcd1283596deadedb124b281ecff72c59f3", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f8b8c3ae6b78829d576c70fb056f988a3a37b27c/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b8c3ae6b78829d576c70fb056f988a3a37b27c/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=f8b8c3ae6b78829d576c70fb056f988a3a37b27c", "patch": "@@ -270,22 +270,14 @@ impl<K, V, M: Deref<Target=RawTable<K, V>>> Bucket<K, V, M> {\n \n     /// Modifies the bucket pointer in place to make it point to the next slot.\n     pub fn next(&mut self) {\n-        // Branchless bucket iteration step.\n-        // As we reach the end of the table...\n-        // We take the current idx:          0111111b\n-        // Xor it by its increment:        ^ 1000000b\n-        //                               ------------\n-        //                                   1111111b\n-        // Then AND with the capacity:     & 1000000b\n-        //                               ------------\n-        // to get the backwards offset:      1000000b\n-        // ... and it's zero at all other times.\n-        let maybe_wraparound_dist = (self.idx ^ (self.idx + 1)) & self.table.capacity();\n-        // Finally, we obtain the offset 1 or the offset -cap + 1.\n-        let dist = 1 - (maybe_wraparound_dist as isize);\n-\n         self.idx += 1;\n-\n+        let range = self.table.capacity();\n+        // This code is branchless thanks to a conditional move.\n+        let dist = if self.idx & (range - 1) == 0 {\n+            1 - range as isize\n+        } else {\n+            1\n+        };\n         unsafe {\n             self.raw = self.raw.offset(dist);\n         }"}]}