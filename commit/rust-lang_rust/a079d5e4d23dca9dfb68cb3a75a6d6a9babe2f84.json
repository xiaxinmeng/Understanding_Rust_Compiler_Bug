{"sha": "a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNzlkNWU0ZDIzZGNhOWRmYjY4Y2IzYTc1YTZkNmE5YmFiZTJmODQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-03-11T16:42:57Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-03-17T02:57:42Z"}, "message": "remove imports", "tree": {"sha": "91b1af183725d7aa47b3851918238da80dc572ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91b1af183725d7aa47b3851918238da80dc572ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "html_url": "https://github.com/rust-lang/rust/commit/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/comments", "author": null, "committer": null, "parents": [{"sha": "6453fcd4ccaa84cf8a21b5991bae23a5923df98b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6453fcd4ccaa84cf8a21b5991bae23a5923df98b", "html_url": "https://github.com/rust-lang/rust/commit/6453fcd4ccaa84cf8a21b5991bae23a5923df98b"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "25c6bda5f394d124bed0e7cbd4f80cdbb1190db1", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -388,7 +388,6 @@ mod imp {\n mod test {\n     extern crate test;\n     use self::test::Bencher;\n-    use core::ptr::PtrExt;\n     use boxed::Box;\n     use heap;\n "}, {"sha": "43182e4fcd6a821b0575798a86c233c7c5ae3c40", "filename": "src/libstd/old_io/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_io%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_io%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fmem.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -398,7 +398,7 @@ impl<'a> Buffer for BufReader<'a> {\n mod test {\n     extern crate \"test\" as test_crate;\n     use old_io::{SeekSet, SeekCur, SeekEnd, Reader, Writer, Seek};\n-    use prelude::v1::{Ok, Err, range,  Vec, Buffer,  AsSlice, SliceExt};\n+    use prelude::v1::{Ok, Err, range,  Vec, Buffer,  AsSlice};\n     use prelude::v1::IteratorExt;\n     use old_io;\n     use iter::repeat;"}, {"sha": "e1341e0e5cfc407b67b68c226fa46bbbef2aaadc", "filename": "src/libstd/old_io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_io%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_io%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fmod.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -1853,7 +1853,7 @@ impl fmt::Display for FilePermission {\n mod tests {\n     use self::BadReaderBehavior::*;\n     use super::{IoResult, Reader, MemReader, NoProgress, InvalidInput, Writer};\n-    use prelude::v1::{Ok, Vec, Buffer, SliceExt};\n+    use prelude::v1::{Ok, Vec, Buffer};\n     use usize;\n \n     #[derive(Clone, PartialEq, Debug)]"}, {"sha": "e5f236433729637ac0b8917136b9170bc3485b8c", "filename": "src/libstd/old_io/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_io%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_io%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fprocess.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -761,7 +761,7 @@ mod tests {\n     use old_io::{Truncate, Write, TimedOut, timer, process, FileNotFound};\n     use prelude::v1::{Ok, Err, range, drop, Some, None, Vec};\n     use prelude::v1::{Path, String, Reader, Writer, Clone};\n-    use prelude::v1::{SliceExt, Str, AsSlice, ToString, GenericPath};\n+    use prelude::v1::{Str, AsSlice, ToString, GenericPath};\n     use old_io::fs::PathExtensions;\n     use old_io::timer::*;\n     use rt::running_on_valgrind;"}, {"sha": "e35623d7b1a66c17ffd397680d5adda2cc6db25d", "filename": "src/libstd/old_path/posix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_path%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_path%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_path%2Fposix.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -453,7 +453,7 @@ mod tests {\n     use iter::IteratorExt;\n     use option::Option::{self, Some, None};\n     use old_path::GenericPath;\n-    use slice::{AsSlice, SliceExt};\n+    use slice::AsSlice;\n     use str::{self, Str};\n     use string::ToString;\n     use vec::Vec;"}, {"sha": "ff4f083333b4e4721764e053b9a3fd75411efddc", "filename": "src/libstd/old_path/windows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_path%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fold_path%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_path%2Fwindows.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -1133,7 +1133,7 @@ mod tests {\n     use iter::IteratorExt;\n     use option::Option::{self, Some, None};\n     use old_path::GenericPath;\n-    use slice::{AsSlice, SliceExt};\n+    use slice::AsSlice;\n     use str::Str;\n     use string::ToString;\n     use vec::Vec;"}, {"sha": "df8a5d27c7fa0be9767784af1d481af23997beeb", "filename": "src/libstd/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -533,7 +533,7 @@ mod tests {\n     use io::prelude::*;\n     use prelude::v1::{Ok, Err, drop, Some, Vec};\n     use prelude::v1::{String, Clone};\n-    use prelude::v1::{SliceExt, Str, AsSlice, ToString, GenericPath};\n+    use prelude::v1::{Str, AsSlice, ToString, GenericPath};\n     use old_path;\n     use old_io::fs::PathExtensions;\n     use rt::running_on_valgrind;"}, {"sha": "1d0c4254eda2eef298b911b57b5634be91499bd2", "filename": "src/test/compile-fail/method-suggestion-no-duplication.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Ftest%2Fcompile-fail%2Fmethod-suggestion-no-duplication.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84/src%2Ftest%2Fcompile-fail%2Fmethod-suggestion-no-duplication.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-suggestion-no-duplication.rs?ref=a079d5e4d23dca9dfb68cb3a75a6d6a9babe2f84", "patch": "@@ -19,5 +19,4 @@ fn main() {\n     //~^ ERROR does not implement any method\n     //~^^ HELP #1: `core::slice::SliceExt`\n     //~^^^ HELP #2: `core::str::StrExt`\n-    //~^^^^ HELP #3: `collections::slice::SliceExt`\n }"}]}