{"sha": "e96342820d0075099d5e3bdf5689c64ad6625a45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NjM0MjgyMGQwMDc1MDk5ZDVlM2JkZjU2ODljNjRhZDY2MjVhNDU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-10T00:02:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-10T00:47:44Z"}, "message": "Add \"stdcall\" as synonym for \"c-stack-stdcall\"", "tree": {"sha": "447eca5eb005ce8e4aa5b61f888ee2c2430c15c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/447eca5eb005ce8e4aa5b61f888ee2c2430c15c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e96342820d0075099d5e3bdf5689c64ad6625a45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e96342820d0075099d5e3bdf5689c64ad6625a45", "html_url": "https://github.com/rust-lang/rust/commit/e96342820d0075099d5e3bdf5689c64ad6625a45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e96342820d0075099d5e3bdf5689c64ad6625a45/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1afc943c9174162888631c2ec02af33370a77115", "url": "https://api.github.com/repos/rust-lang/rust/commits/1afc943c9174162888631c2ec02af33370a77115", "html_url": "https://github.com/rust-lang/rust/commit/1afc943c9174162888631c2ec02af33370a77115"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "693625955f1f917c9260bee7dde74af907d5c86b", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=e96342820d0075099d5e3bdf5689c64ad6625a45", "patch": "@@ -2012,6 +2012,8 @@ fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n             abi = ast::native_abi_cdecl;\n         } else if str::eq(t, \"c-stack-stdcall\") {\n             abi = ast::native_abi_stdcall;\n+        } else if str::eq(t, \"stdcall\") {\n+            abi = ast::native_abi_stdcall;\n         } else {\n             p.fatal(\"unsupported abi: \" + t);\n         }"}, {"sha": "f10d4f47516b574c312324b0fe5372c15d0f79e8", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=e96342820d0075099d5e3bdf5689c64ad6625a45", "patch": "@@ -408,7 +408,7 @@ fn print_item(s: ps, &&item: @ast::item) {\n             word_nbsp(s, \"\\\"c-stack-cdecl\\\"\");\n           }\n           ast::native_abi_stdcall. {\n-            word_nbsp(s, \"\\\"c-stack-stdcall\\\"\");\n+            word_nbsp(s, \"\\\"stdcall\\\"\");\n           }\n         }\n         word_nbsp(s, \"mod\");"}, {"sha": "d32042eaed17ba29e8531fa3fe67e80f1efcf8a7", "filename": "src/test/run-pass/x86stdcall.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall.rs?ref=e96342820d0075099d5e3bdf5689c64ad6625a45", "patch": "@@ -2,7 +2,7 @@\n // xfail-test\n \n #[cfg(target_os = \"win32\")]\n-native \"c-stack-stdcall\" mod kernel32 {\n+native \"stdcall\" mod kernel32 {\n     fn SetLastError(err: uint);\n     fn GetLastError() -> uint;\n }"}, {"sha": "4edb8dc73e03bdeba5dd91ccdbf613a03289d69e", "filename": "src/test/run-pass/x86stdcall2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e96342820d0075099d5e3bdf5689c64ad6625a45/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs?ref=e96342820d0075099d5e3bdf5689c64ad6625a45", "patch": "@@ -5,7 +5,7 @@ type LPVOID = uint;\n type BOOL = u8;\n \n #[cfg(target_os = \"win32\")]\n-native \"c-stack-stdcall\" mod kernel32 {\n+native \"stdcall\" mod kernel32 {\n        fn GetProcessHeap() -> HANDLE;\n        fn HeapAlloc(hHeap: HANDLE, dwFlags: DWORD, dwBytes: SIZE_T) -> LPVOID;\n        fn HeapFree(hHeap: HANDLE, dwFlags: DWORD, lpMem: LPVOID) -> BOOL;"}]}