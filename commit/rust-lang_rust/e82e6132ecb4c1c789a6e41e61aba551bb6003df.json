{"sha": "e82e6132ecb4c1c789a6e41e61aba551bb6003df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MmU2MTMyZWNiNGMxYzc4OWE2ZTQxZTYxYWJhNTUxYmI2MDAzZGY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-21T09:51:24Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-21T09:51:24Z"}, "message": "preemptively change some assertions into errors", "tree": {"sha": "88f59068367f6453a5ec2ea7633cf8ec54a4d1a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88f59068367f6453a5ec2ea7633cf8ec54a4d1a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e82e6132ecb4c1c789a6e41e61aba551bb6003df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYCeUcAAoJEFbW7qD8Z6xGHJMP+gIrZTbHmH26vMHn9rAriCzy\n7W1GJywvIYR9sopPOYFhiF3QFA3EQFR180UM1+jhDYxKAQ/lbpb3IEYUqoda8YvY\nS5qlOsTth9hnyIdzuw95krJ7uWGwNuuhqqjT1IskCYJ7XQiwrJQDDkCBS1cmbzYg\nuFYBNaMHUEnGejGnG3G59N+KyfhyjUlGOjhbqkBeO9KHJE/ho/urk26p46LueLNa\nYnzY2BwMX/x5wiLnjPx5PRmxOrhgffwX7zuS8ZURktor4dS0u2FeravFeIbjElLY\ncgw2R4bvS4DVitVaPaJpQWk9UeuFbKfdgBSUrqh9Nd2CMyYwXDmRhscCXyVxkiLQ\n8GCnMF5BWh09vB6E2BbFNcWlV7oRQFkfIq+PQs5z7hpkQSs8/bms2lGe7iIs6dnq\n8bfgVWd7Dj2neUgG/cojHtZQSeGLRoz1yXngq3jLObYqFvKaVrB6bLMH4emeNHul\n+dGt0hgC/L20VNZAvasnPdEjGI/JNgVJ1E9hfp1cndJNF6oBp/aIvw+qkDDIX0Ja\nyL/QCF30PUQhqZGJF9uWh5Qztm+FAhaGmAC4K4FYEEZ/PEHDjBsE7LLNAK4mSBOa\n6+nhzUIx6du/wwbdsBTb7nY/NJUA9IVYcdV7GbAI3EA5g/Gf8CFC/UTtRqxMW4k5\nLY6tcnFOqyC8NkpGNVn3\n=VxfE\n-----END PGP SIGNATURE-----", "payload": "tree 88f59068367f6453a5ec2ea7633cf8ec54a4d1a8\nparent 2f81729e76e4bbd9acd2b1e5fb9bbc21eed3ba0f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477043484 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477043484 +0200\n\npreemptively change some assertions into errors"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e82e6132ecb4c1c789a6e41e61aba551bb6003df", "html_url": "https://github.com/rust-lang/rust/commit/e82e6132ecb4c1c789a6e41e61aba551bb6003df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e82e6132ecb4c1c789a6e41e61aba551bb6003df/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f81729e76e4bbd9acd2b1e5fb9bbc21eed3ba0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f81729e76e4bbd9acd2b1e5fb9bbc21eed3ba0f", "html_url": "https://github.com/rust-lang/rust/commit/2f81729e76e4bbd9acd2b1e5fb9bbc21eed3ba0f"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "66053e9dd59f7f127aadff33229d79ab529b83bd", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e82e6132ecb4c1c789a6e41e61aba551bb6003df/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e82e6132ecb4c1c789a6e41e61aba551bb6003df/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=e82e6132ecb4c1c789a6e41e61aba551bb6003df", "patch": "@@ -1224,9 +1224,12 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             }\n             Lvalue::Global(cid) => {\n                 let global_val = self.globals.get_mut(&cid).expect(\"global not cached\");\n-                assert!(global_val.mutable);\n-                global_val.data = Some(Value::ByVal(val));\n-                Ok(())\n+                if global_val.mutable {\n+                    global_val.data = Some(Value::ByVal(val));\n+                    Ok(())\n+                } else {\n+                    Err(EvalError::ModifiedConstantMemory)\n+                }\n             }\n         }\n     }\n@@ -1240,7 +1243,9 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         match dest {\n             Lvalue::Global(cid) => {\n                 let dest = *self.globals.get_mut(&cid).expect(\"global should be cached\");\n-                assert!(dest.mutable);\n+                if !dest.mutable {\n+                    return Err(EvalError::ModifiedConstantMemory);\n+                }\n                 self.write_value_possibly_by_val(\n                     src_val,\n                     |this, val| *this.globals.get_mut(&cid).expect(\"already checked\") = Global { data: Some(val), ..dest },"}]}