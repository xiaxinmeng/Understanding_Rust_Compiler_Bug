{"sha": "fab5624eb6373d529f21309380ea467a8b4b5664", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYjU2MjRlYjYzNzNkNTI5ZjIxMzA5MzgwZWE0NjdhOGI0YjU2NjQ=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-12-10T14:26:11Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-12-10T14:43:36Z"}, "message": "Tiny fixes to linked list section.", "tree": {"sha": "087d7ab26484d79af6efb70f805dae4118357b66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/087d7ab26484d79af6efb70f805dae4118357b66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fab5624eb6373d529f21309380ea467a8b4b5664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fab5624eb6373d529f21309380ea467a8b4b5664", "html_url": "https://github.com/rust-lang/rust/commit/fab5624eb6373d529f21309380ea467a8b4b5664", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fab5624eb6373d529f21309380ea467a8b4b5664/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a44852a2d5ac12545a3c1b55dab1c3d4070872a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a44852a2d5ac12545a3c1b55dab1c3d4070872a1", "html_url": "https://github.com/rust-lang/rust/commit/a44852a2d5ac12545a3c1b55dab1c3d4070872a1"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "74a02a12023fa3fee0498ffa6b395e69e56c2a06", "filename": "doc/tutorial.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fab5624eb6373d529f21309380ea467a8b4b5664/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/fab5624eb6373d529f21309380ea467a8b4b5664/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=fab5624eb6373d529f21309380ea467a8b4b5664", "patch": "@@ -1235,8 +1235,9 @@ xs = prepend::<int>(xs, 15);\n xs = prepend::<int>(xs, 20);\n ~~~\n \n-In the type grammar, the language uses `Type<T, U, V>` to describe a list of\n-type parameters, but expressions use `identifier::<T, U, V>`.\n+In declarations, the language uses `Type<T, U, V>` to describe a list of type\n+parameters, but expressions use `identifier::<T, U, V>`, to disambiguate the\n+`<` operator.\n \n ## Defining list equality with generics\n \n@@ -1313,7 +1314,7 @@ provide.\n \n In uncommon cases, the indirection can provide a performance gain or memory\n reduction by making values smaller. However, unboxed values should almost\n-always be preferred.\n+always be preferred when they are usable.\n \n Note that returning large unboxed values via boxes is unnecessary. A large\n value is returned via a hidden output parameter, and the decision on where to\n@@ -1324,7 +1325,7 @@ fn foo() -> (u64, u64, u64, u64, u64, u64) {\n     (5, 5, 5, 5, 5, 5)\n }\n \n-let x = ~foo(); // allocates, and writes the integers directly to it\n+let x = ~foo(); // allocates a ~ box, and writes the integers directly to it\n ~~~~\n \n Beyond the properties granted by the size, an owned box behaves as a regular\n@@ -1403,7 +1404,7 @@ compute_distance(managed_box, owned_box);\n Here the `&` operator is used to take the address of the variable\n `on_the_stack`; this is because `on_the_stack` has the type `Point`\n (that is, a struct value) and we have to take its address to get a\n-value. We also call this _borrowing_ the local variable\n+reference. We also call this _borrowing_ the local variable\n `on_the_stack`, because we are creating an alias: that is, another\n route to the same data.\n "}]}