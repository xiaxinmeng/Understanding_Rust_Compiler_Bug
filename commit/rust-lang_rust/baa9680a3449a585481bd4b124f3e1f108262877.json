{"sha": "baa9680a3449a585481bd4b124f3e1f108262877", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYTk2ODBhMzQ0OWE1ODU0ODFiZDRiMTI0ZjNlMWYxMDgyNjI4Nzc=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2015-12-30T15:42:52Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-05-26T07:59:21Z"}, "message": "Implement `count` for `EscapeDefault` and `EscapeUnicode`\n\nTrivial implementation, as both are `ExactSizeIterator`s.\n\nPart of #24214.", "tree": {"sha": "8db215b5776009dfd0d7c9196397e79cac85ab09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8db215b5776009dfd0d7c9196397e79cac85ab09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baa9680a3449a585481bd4b124f3e1f108262877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baa9680a3449a585481bd4b124f3e1f108262877", "html_url": "https://github.com/rust-lang/rust/commit/baa9680a3449a585481bd4b124f3e1f108262877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baa9680a3449a585481bd4b124f3e1f108262877/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c30fa92a0aac87ba27df261ece44602f027a1800", "url": "https://api.github.com/repos/rust-lang/rust/commits/c30fa92a0aac87ba27df261ece44602f027a1800", "html_url": "https://github.com/rust-lang/rust/commit/c30fa92a0aac87ba27df261ece44602f027a1800"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "f803b36cede961e0c6b8398f0602c11dd83ab6e0", "filename": "src/libcore/char.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/baa9680a3449a585481bd4b124f3e1f108262877/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baa9680a3449a585481bd4b124f3e1f108262877/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=baa9680a3449a585481bd4b124f3e1f108262877", "patch": "@@ -470,6 +470,11 @@ impl Iterator for EscapeUnicode {\n         (n, Some(n))\n     }\n \n+    #[inline]\n+    fn count(self) -> usize {\n+        self.len()\n+    }\n+\n     fn last(self) -> Option<char> {\n         match self.state {\n             EscapeUnicodeState::Done => None,\n@@ -535,13 +540,9 @@ impl Iterator for EscapeDefault {\n         }\n     }\n \n+    #[inline]\n     fn count(self) -> usize {\n-        match self.state {\n-            EscapeDefaultState::Char(_) => 1,\n-            EscapeDefaultState::Unicode(iter) => iter.count(),\n-            EscapeDefaultState::Done => 0,\n-            EscapeDefaultState::Backslash(_) => 2,\n-        }\n+        self.len()\n     }\n \n     fn nth(&mut self, n: usize) -> Option<char> {"}]}