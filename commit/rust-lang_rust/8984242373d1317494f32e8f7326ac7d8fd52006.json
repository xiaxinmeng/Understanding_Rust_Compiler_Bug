{"sha": "8984242373d1317494f32e8f7326ac7d8fd52006", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ODQyNDIzNzNkMTMxNzQ5NGYzMmU4ZjczMjZhYzdkOGZkNTIwMDY=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-01-28T14:18:42Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-01-28T14:18:42Z"}, "message": "Fix `make tidy` and name what is being computed", "tree": {"sha": "b667a24d2e1e8329c33082605962f0719acf6abe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b667a24d2e1e8329c33082605962f0719acf6abe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8984242373d1317494f32e8f7326ac7d8fd52006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8984242373d1317494f32e8f7326ac7d8fd52006", "html_url": "https://github.com/rust-lang/rust/commit/8984242373d1317494f32e8f7326ac7d8fd52006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8984242373d1317494f32e8f7326ac7d8fd52006/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79dfa2590006e50b7c7ba2788a317b56a162175a", "url": "https://api.github.com/repos/rust-lang/rust/commits/79dfa2590006e50b7c7ba2788a317b56a162175a", "html_url": "https://github.com/rust-lang/rust/commit/79dfa2590006e50b7c7ba2788a317b56a162175a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "1b2083929cebcb5e05d6b0d364cfd0be8ef45fdb", "filename": "src/libcore/char.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8984242373d1317494f32e8f7326ac7d8fd52006/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8984242373d1317494f32e8f7326ac7d8fd52006/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=8984242373d1317494f32e8f7326ac7d8fd52006", "patch": "@@ -470,7 +470,8 @@ impl Iterator for EscapeUnicode {\n                 Some('{')\n             }\n             EscapeUnicodeState::Value => {\n-                let c = from_digit(((self.c as u32) >> (self.hex_digit_idx * 4)) & 0xf, 16).unwrap();\n+                let hex_digit = ((self.c as u32) >> (self.hex_digit_idx * 4)) & 0xf;\n+                let c = from_digit(hex_digit, 16).unwrap();\n                 if self.hex_digit_idx == 0 {\n                     self.state = EscapeUnicodeState::RightBrace;\n                 } else {"}]}