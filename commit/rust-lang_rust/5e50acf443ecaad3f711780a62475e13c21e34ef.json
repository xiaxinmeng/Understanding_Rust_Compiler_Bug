{"sha": "5e50acf443ecaad3f711780a62475e13c21e34ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNTBhY2Y0NDNlY2FhZDNmNzExNzgwYTYyNDc1ZTEzYzIxZTM0ZWY=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2018-10-27T10:46:33Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2018-10-27T10:47:12Z"}, "message": "Make the Atomic types repr(C) to ensure newtype", "tree": {"sha": "ddd38b480fceb27f0cde4cea72de511fdfe49533", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddd38b480fceb27f0cde4cea72de511fdfe49533"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e50acf443ecaad3f711780a62475e13c21e34ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e50acf443ecaad3f711780a62475e13c21e34ef", "html_url": "https://github.com/rust-lang/rust/commit/5e50acf443ecaad3f711780a62475e13c21e34ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e50acf443ecaad3f711780a62475e13c21e34ef/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01674fbe06aa2d05f8dafbb8a27ba6bd23fa09e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/01674fbe06aa2d05f8dafbb8a27ba6bd23fa09e1", "html_url": "https://github.com/rust-lang/rust/commit/01674fbe06aa2d05f8dafbb8a27ba6bd23fa09e1"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "82b73a8c4328ce7b08451616502011090c0aedcc", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5e50acf443ecaad3f711780a62475e13c21e34ef/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e50acf443ecaad3f711780a62475e13c21e34ef/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=5e50acf443ecaad3f711780a62475e13c21e34ef", "patch": "@@ -124,7 +124,7 @@ pub fn spin_loop_hint() {\n /// [`bool`]: ../../../std/primitive.bool.html\n #[cfg(target_has_atomic = \"8\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[repr(align(1))]\n+#[repr(C, align(1))]\n pub struct AtomicBool {\n     v: UnsafeCell<u8>,\n }\n@@ -148,9 +148,9 @@ unsafe impl Sync for AtomicBool {}\n /// This type has the same in-memory representation as a `*mut T`.\n #[cfg(target_has_atomic = \"ptr\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(target_pointer_width = \"16\", repr(align(2)))]\n-#[cfg_attr(target_pointer_width = \"32\", repr(align(4)))]\n-#[cfg_attr(target_pointer_width = \"64\", repr(align(8)))]\n+#[cfg_attr(target_pointer_width = \"16\", repr(C, align(2)))]\n+#[cfg_attr(target_pointer_width = \"32\", repr(C, align(4)))]\n+#[cfg_attr(target_pointer_width = \"64\", repr(C, align(8)))]\n pub struct AtomicPtr<T> {\n     p: UnsafeCell<*mut T>,\n }\n@@ -1106,7 +1106,7 @@ macro_rules! atomic_int {\n         ///\n         /// [module-level documentation]: index.html\n         #[$stable]\n-        #[repr(align($align))]\n+        #[repr(C, align($align))]\n         pub struct $atomic_type {\n             v: UnsafeCell<$int_type>,\n         }"}]}