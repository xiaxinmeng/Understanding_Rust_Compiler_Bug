{"sha": "3405725e0026dbea6dd3e8dccbcb44898511fa13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MDU3MjVlMDAyNmRiZWE2ZGQzZThkY2NiY2I0NDg5ODUxMWZhMTM=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-06-04T20:02:48Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-06-07T22:04:19Z"}, "message": "Change concrete opaque type  to be a `VecMap`", "tree": {"sha": "5d4414bf171b25c1bd237a376b47e11eb543725b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d4414bf171b25c1bd237a376b47e11eb543725b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3405725e0026dbea6dd3e8dccbcb44898511fa13", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmC+l+MACgkQgTGiTgx5\n769WCw/+LqizcfEU7siXBUF8vtjj6HmlwEQjKgG/9d3XCmvm8uocy5tXsVNb5j9A\nzJzGg6A0SHwrCYv75ByuRVp1IB32qbC2JrUUXaRq9CRAJ4VwziaueTaK2r1lW623\nSc7ZLNPK2I/w9Vq4j0kJv6ByShv4/DQRdni7hbf1oicQn7W5pbNiJ+m3Ovn2lpTW\nLZLdc5464jbysJ+PXlhyTM/fT0geha+xZDtW9YAEnHQVgSk+4/lwjcAVlkvhlI16\nCGPf5kZ54EbT8nQTqCY4FAXpUtOagqZwuQK3lmw/WDgX+KR2FwML4HhAzUDseVWw\nuDRn6EKBRF7tLgPAN9AHZMtd5/ecoMUAupcgQ3LN5zJEekGXtNCr1Y002BSW/h9n\nf7Wc7FAhOpzh2ZF16MJqZSyoh/SjkkO8dfeG6l7LjKk2gjP508u/aKvp9ydcVi50\nE0SLfiYFnHOAZ/t3AqWKBmAPpzSEI2R9YbWMn1XjtbFTrMCO4sFQXcV6Iy3LBfiA\n172uNsv/csjUUfXESoqwKSHsIM4Vb0a9L9pn0l2pQbVfh1FHUnLnXiHQjAE96e3O\nnkBBaFEwpyP+cDy1NgYQ17vxsz06lMFipamD1eNbYIWduwfzjq4YUonohaMUIeDT\nKQLU7SStUfnojTXHmAtt+GrJy5CFiot4xLXbY0mAvSZ57B/aJXA=\n=JfpH\n-----END PGP SIGNATURE-----", "payload": "tree 5d4414bf171b25c1bd237a376b47e11eb543725b\nparent 2bc723fbcaa1c1136793dd92f1b4307335184007\nauthor Santiago Pastorino <spastorino@gmail.com> 1622836968 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1623103459 -0300\n\nChange concrete opaque type  to be a `VecMap`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3405725e0026dbea6dd3e8dccbcb44898511fa13", "html_url": "https://github.com/rust-lang/rust/commit/3405725e0026dbea6dd3e8dccbcb44898511fa13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3405725e0026dbea6dd3e8dccbcb44898511fa13/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bc723fbcaa1c1136793dd92f1b4307335184007", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bc723fbcaa1c1136793dd92f1b4307335184007", "html_url": "https://github.com/rust-lang/rust/commit/2bc723fbcaa1c1136793dd92f1b4307335184007"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "f6c8ed4cbab70cc941846fc849d90562c8187cfb", "filename": "compiler/rustc_middle/src/mir/query.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3405725e0026dbea6dd3e8dccbcb44898511fa13/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3405725e0026dbea6dd3e8dccbcb44898511fa13/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs?ref=3405725e0026dbea6dd3e8dccbcb44898511fa13", "patch": "@@ -2,8 +2,8 @@\n \n use crate::mir::{abstract_const, Body, Promoted};\n use crate::ty::{self, Ty, TyCtxt};\n-use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n+use rustc_data_structures::vec_map::VecMap;\n use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n@@ -210,7 +210,7 @@ pub struct BorrowCheckResult<'tcx> {\n     /// All the opaque types that are restricted to concrete types\n     /// by this function. Unlike the value in `TypeckResults`, this has\n     /// unerased regions.\n-    pub concrete_opaque_types: FxHashMap<DefId, ty::ResolvedOpaqueTy<'tcx>>,\n+    pub concrete_opaque_types: VecMap<DefId, ty::ResolvedOpaqueTy<'tcx>>,\n     pub closure_requirements: Option<ClosureRegionRequirements<'tcx>>,\n     pub used_mut_upvars: SmallVec<[Field; 8]>,\n }"}, {"sha": "ee8fa4b647a8d7423c22a13a484adf6ba1aa6aee", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3405725e0026dbea6dd3e8dccbcb44898511fa13/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3405725e0026dbea6dd3e8dccbcb44898511fa13/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=3405725e0026dbea6dd3e8dccbcb44898511fa13", "patch": "@@ -34,6 +34,7 @@ use rustc_data_structures::sharded::{IntoPointer, ShardedHashMap};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::steal::Steal;\n use rustc_data_structures::sync::{self, Lock, Lrc, WorkerLocal};\n+use rustc_data_structures::vec_map::VecMap;\n use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n@@ -424,7 +425,7 @@ pub struct TypeckResults<'tcx> {\n \n     /// All the opaque types that are restricted to concrete types\n     /// by this function.\n-    pub concrete_opaque_types: FxHashMap<DefId, ResolvedOpaqueTy<'tcx>>,\n+    pub concrete_opaque_types: VecMap<DefId, ResolvedOpaqueTy<'tcx>>,\n \n     /// Tracks the minimum captures required for a closure;\n     /// see `MinCaptureInformationMap` for more details."}, {"sha": "5b2aaf56921b2111dbe563bab515cafb6cb1d93d", "filename": "compiler/rustc_mir/src/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3405725e0026dbea6dd3e8dccbcb44898511fa13/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3405725e0026dbea6dd3e8dccbcb44898511fa13/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs?ref=3405725e0026dbea6dd3e8dccbcb44898511fa13", "patch": "@@ -2,6 +2,7 @@\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::dominators::Dominators;\n+use rustc_data_structures::vec_map::VecMap;\n use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, ErrorReported};\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n@@ -25,7 +26,7 @@ use either::Either;\n use smallvec::SmallVec;\n use std::cell::RefCell;\n use std::collections::BTreeMap;\n-use std::iter;\n+use std::iter::{self, FromIterator};\n use std::mem;\n use std::rc::Rc;\n \n@@ -441,7 +442,7 @@ fn do_mir_borrowck<'a, 'tcx>(\n     }\n \n     let result = BorrowCheckResult {\n-        concrete_opaque_types: opaque_type_values,\n+        concrete_opaque_types: VecMap::from_iter(opaque_type_values.into_iter()),\n         closure_requirements: opt_closure_req,\n         used_mut_upvars: mbcx.used_mut_upvars,\n     };"}]}