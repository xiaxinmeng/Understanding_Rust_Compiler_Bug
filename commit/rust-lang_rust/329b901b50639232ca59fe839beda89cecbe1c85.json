{"sha": "329b901b50639232ca59fe839beda89cecbe1c85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOWI5MDFiNTA2MzkyMzJjYTU5ZmU4MzliZWRhODljZWNiZTFjODU=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-10-05T03:04:40Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-10-05T03:04:40Z"}, "message": "Remove nacl from libtest", "tree": {"sha": "c48ab30c3ea85ec646efd3226831ff528914555c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c48ab30c3ea85ec646efd3226831ff528914555c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/329b901b50639232ca59fe839beda89cecbe1c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/329b901b50639232ca59fe839beda89cecbe1c85", "html_url": "https://github.com/rust-lang/rust/commit/329b901b50639232ca59fe839beda89cecbe1c85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/329b901b50639232ca59fe839beda89cecbe1c85/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aad1c998c7a08dd06719845dd5b3b962dfcb0be7", "url": "https://api.github.com/repos/rust-lang/rust/commits/aad1c998c7a08dd06719845dd5b3b962dfcb0be7", "html_url": "https://github.com/rust-lang/rust/commit/aad1c998c7a08dd06719845dd5b3b962dfcb0be7"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "e8a1242c8145f64bbac2d30a7369f4ceaeed8f78", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/329b901b50639232ca59fe839beda89cecbe1c85/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/329b901b50639232ca59fe839beda89cecbe1c85/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=329b901b50639232ca59fe839beda89cecbe1c85", "patch": "@@ -1554,16 +1554,14 @@ impl MetricMap {\n /// elimination.\n ///\n /// This function is a no-op, and does not even read from `dummy`.\n-#[cfg(not(any(all(target_os = \"nacl\", target_arch = \"le32\"),\n-              target_arch = \"asmjs\", target_arch = \"wasm32\")))]\n+#[cfg(not(any(target_arch = \"asmjs\", target_arch = \"wasm32\")))]\n pub fn black_box<T>(dummy: T) -> T {\n     // we need to \"use\" the argument in some way LLVM can't\n     // introspect.\n     unsafe { asm!(\"\" : : \"r\"(&dummy)) }\n     dummy\n }\n-#[cfg(any(all(target_os = \"nacl\", target_arch = \"le32\"),\n-          target_arch = \"asmjs\", target_arch = \"wasm32\"))]\n+#[cfg(any(target_arch = \"asmjs\", target_arch = \"wasm32\"))]\n #[inline(never)]\n pub fn black_box<T>(dummy: T) -> T {\n     dummy"}]}