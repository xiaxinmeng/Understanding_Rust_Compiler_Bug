{"sha": "bf92940f72bf4eb0e2881b275dc76772c93b8f47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmOTI5NDBmNzJiZjRlYjBlMjg4MWIyNzVkYzc2NzcyYzkzYjhmNDc=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-24T22:11:25Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-24T22:11:25Z"}, "message": "More test cases for classes with dtors\n\nTests that classes with dtors and multiple fields work correctly.\nCloses #2708", "tree": {"sha": "2261243beacb491d57dcd8168a91866bcd0d353d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2261243beacb491d57dcd8168a91866bcd0d353d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf92940f72bf4eb0e2881b275dc76772c93b8f47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf92940f72bf4eb0e2881b275dc76772c93b8f47", "html_url": "https://github.com/rust-lang/rust/commit/bf92940f72bf4eb0e2881b275dc76772c93b8f47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf92940f72bf4eb0e2881b275dc76772c93b8f47/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "487cbf8e906f73589df9501004abeb570b24f121", "url": "https://api.github.com/repos/rust-lang/rust/commits/487cbf8e906f73589df9501004abeb570b24f121", "html_url": "https://github.com/rust-lang/rust/commit/487cbf8e906f73589df9501004abeb570b24f121"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "8fcc613b09b7306a30c1b0bce77295be7da67bce", "filename": "src/test/run-pass/issue-2708.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bf92940f72bf4eb0e2881b275dc76772c93b8f47/src%2Ftest%2Frun-pass%2Fissue-2708.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf92940f72bf4eb0e2881b275dc76772c93b8f47/src%2Ftest%2Frun-pass%2Fissue-2708.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2708.rs?ref=bf92940f72bf4eb0e2881b275dc76772c93b8f47", "patch": "@@ -0,0 +1,17 @@\n+class Font {\n+    let fontbuf: uint;\n+    let cairo_font: uint;\n+    let font_dtor: uint;\n+\n+    new() {\n+        self.fontbuf = 0;\n+        self.cairo_font = 0;\n+        self.font_dtor = 0;\n+    }\n+\n+    drop { }\n+}\n+\n+fn main() {\n+    let _f = @Font();\n+}"}, {"sha": "f67e0b18ec2954c1a1360f615d5be79d66da03cb", "filename": "src/test/run-pass/resource-cycle3.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/bf92940f72bf4eb0e2881b275dc76772c93b8f47/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf92940f72bf4eb0e2881b275dc76772c93b8f47/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs?ref=bf92940f72bf4eb0e2881b275dc76772c93b8f47", "patch": "@@ -0,0 +1,50 @@\n+// same as resource-cycle2, but be sure to give r multiple fields... \n+\n+// Don't leak the unique pointers\n+\n+type u = {\n+    a: int,\n+    b: int,\n+    c: *int\n+};\n+\n+class r {\n+  let v: u;\n+  let w: int;\n+  let x: *int;\n+  new(v: u, w: int, _x: *int) unsafe { self.v = v; self.w = w; \n+    self.x = unsafe::reinterpret_cast(0);\n+    /* self.x = x; */ }\n+  drop unsafe {\n+    let _v2: ~int = unsafe::reinterpret_cast(self.v.c);\n+    // let _v3: ~int = unsafe::reinterpret_cast(self.x);\n+  }\n+}\n+\n+enum t = {\n+    mut next: option<@t>,\n+    r: r\n+};\n+\n+fn main() unsafe {\n+    let i1 = ~0xA;\n+    let i1p = unsafe::reinterpret_cast(i1);\n+    unsafe::forget(i1);\n+    let i2 = ~0xA;\n+    let i2p = unsafe::reinterpret_cast(i2);\n+    unsafe::forget(i2);\n+\n+    let u1 = {a: 0xB, b: 0xC, c: i1p};\n+    let u2 = {a: 0xB, b: 0xC, c: i2p};\n+\n+    let x1 = @t({\n+        mut next: none,\n+        r: r(u1, 42, i1p)\n+    });\n+    let x2 = @t({\n+        mut next: none,\n+        r: r(u2, 42, i2p)\n+    });\n+    x1.next = some(x2);\n+    x2.next = some(x1);\n+}"}]}