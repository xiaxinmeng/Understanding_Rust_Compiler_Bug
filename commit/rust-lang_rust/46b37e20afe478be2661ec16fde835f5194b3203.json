{"sha": "46b37e20afe478be2661ec16fde835f5194b3203", "node_id": "C_kwDOAAsO6NoAKDQ2YjM3ZTIwYWZlNDc4YmUyNjYxZWMxNmZkZTgzNWY1MTk0YjMyMDM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-23T14:37:13Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-23T14:37:13Z"}, "message": "OpaqueCast projections are always overlapping, they can't possibly be disjoint", "tree": {"sha": "eb59161e6fe48fdc7986675c1261fbaaaf93781c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb59161e6fe48fdc7986675c1261fbaaaf93781c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46b37e20afe478be2661ec16fde835f5194b3203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46b37e20afe478be2661ec16fde835f5194b3203", "html_url": "https://github.com/rust-lang/rust/commit/46b37e20afe478be2661ec16fde835f5194b3203", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46b37e20afe478be2661ec16fde835f5194b3203/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "008bc1d587b4f9d7197eb159922dd2080eea9284", "url": "https://api.github.com/repos/rust-lang/rust/commits/008bc1d587b4f9d7197eb159922dd2080eea9284", "html_url": "https://github.com/rust-lang/rust/commit/008bc1d587b4f9d7197eb159922dd2080eea9284"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "89ac0dfa4d6f51c2e61225b7d27b8fda4895bb57", "filename": "compiler/rustc_borrowck/src/places_conflict.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/46b37e20afe478be2661ec16fde835f5194b3203/compiler%2Frustc_borrowck%2Fsrc%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46b37e20afe478be2661ec16fde835f5194b3203/compiler%2Frustc_borrowck%2Fsrc%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fplaces_conflict.rs?ref=46b37e20afe478be2661ec16fde835f5194b3203", "patch": "@@ -320,16 +320,10 @@ fn place_projection_conflict<'tcx>(\n             debug!(\"place_element_conflict: DISJOINT-OR-EQ-DEREF\");\n             Overlap::EqualOrDisjoint\n         }\n-        (ProjectionElem::OpaqueCast(v1), ProjectionElem::OpaqueCast(v2)) => {\n-            if v1 == v2 {\n-                // same type - recur.\n-                debug!(\"place_element_conflict: DISJOINT-OR-EQ-OPAQUE\");\n-                Overlap::EqualOrDisjoint\n-            } else {\n-                // Different types. Disjoint!\n-                debug!(\"place_element_conflict: DISJOINT-OPAQUE\");\n-                Overlap::Disjoint\n-            }\n+        (ProjectionElem::OpaqueCast(_), ProjectionElem::OpaqueCast(_)) => {\n+            // casts to other types may always conflict irrespective of the type being cast to.\n+            debug!(\"place_element_conflict: DISJOINT-OR-EQ-OPAQUE\");\n+            Overlap::EqualOrDisjoint\n         }\n         (ProjectionElem::Field(f1, _), ProjectionElem::Field(f2, _)) => {\n             if f1 == f2 {"}]}