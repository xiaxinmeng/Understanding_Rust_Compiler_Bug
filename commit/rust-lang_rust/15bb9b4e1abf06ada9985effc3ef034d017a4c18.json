{"sha": "15bb9b4e1abf06ada9985effc3ef034d017a4c18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YmI5YjRlMWFiZjA2YWRhOTk4NWVmZmMzZWYwMzRkMDE3YTRjMTg=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-29T15:11:11Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-29T15:11:11Z"}, "message": "extra::dlist: Fix bug in Eq::ne", "tree": {"sha": "7d54db9ef7c7eb59ff66678f187b5e5f8bd92c2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d54db9ef7c7eb59ff66678f187b5e5f8bd92c2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15bb9b4e1abf06ada9985effc3ef034d017a4c18", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15bb9b4e1abf06ada9985effc3ef034d017a4c18", "html_url": "https://github.com/rust-lang/rust/commit/15bb9b4e1abf06ada9985effc3ef034d017a4c18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15bb9b4e1abf06ada9985effc3ef034d017a4c18/comments", "author": null, "committer": null, "parents": [{"sha": "479aefb6709eaa0ed83253aeab36a553e826c417", "url": "https://api.github.com/repos/rust-lang/rust/commits/479aefb6709eaa0ed83253aeab36a553e826c417", "html_url": "https://github.com/rust-lang/rust/commit/479aefb6709eaa0ed83253aeab36a553e826c417"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "fa8b50fbf672994c71b15571264efe104597557d", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15bb9b4e1abf06ada9985effc3ef034d017a4c18/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15bb9b4e1abf06ada9985effc3ef034d017a4c18/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=15bb9b4e1abf06ada9985effc3ef034d017a4c18", "patch": "@@ -594,7 +594,7 @@ impl<A: Eq> Eq for DList<A> {\n     }\n \n     fn ne(&self, other: &DList<A>) -> bool {\n-        self.len() != other.len() &&\n+        self.len() != other.len() ||\n             iterator::order::ne(self.iter(), other.iter())\n     }\n }\n@@ -978,6 +978,10 @@ mod tests {\n         assert!(n != m);\n         m.push_back(1);\n         assert_eq!(&n, &m);\n+\n+        let n = list_from([2,3,4]);\n+        let m = list_from([1,2,3]);\n+        assert!(n != m);\n     }\n \n     #[test]"}]}