{"sha": "b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MGRiMzRlNGRkMTMyMWI0ZjA3NWVhYTZiYzg4ZmM4Zjk1ZTE3ZmM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-03T06:11:18Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-04T04:23:45Z"}, "message": "Remove `LocalInternedString` uses from `librustc_codegen_llvm/consts.rs`.", "tree": {"sha": "e38b6d38b93ad842846601aa30981252854f5e0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e38b6d38b93ad842846601aa30981252854f5e0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc", "html_url": "https://github.com/rust-lang/rust/commit/b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "html_url": "https://github.com/rust-lang/rust/commit/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "24741542d432c529728454fdffbf92f49bdfc318", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=b50db34e4dd1321b4f075eaa6bc88fc8f95e17fc", "patch": "@@ -11,12 +11,11 @@ use rustc::mir::interpret::{ConstValue, Allocation, read_target_uint,\n     Pointer, ErrorHandled, GlobalId};\n use rustc::mir::mono::MonoItem;\n use rustc::hir::Node;\n-use syntax_pos::Span;\n use rustc_target::abi::HasDataLayout;\n-use syntax::symbol::sym;\n-use syntax_pos::symbol::LocalInternedString;\n use rustc::ty::{self, Ty, Instance};\n use rustc_codegen_ssa::traits::*;\n+use syntax::symbol::{Symbol, sym};\n+use syntax_pos::Span;\n \n use rustc::ty::layout::{self, Size, Align, LayoutOf};\n \n@@ -104,10 +103,11 @@ fn check_and_apply_linkage(\n     cx: &CodegenCx<'ll, 'tcx>,\n     attrs: &CodegenFnAttrs,\n     ty: Ty<'tcx>,\n-    sym: LocalInternedString,\n+    sym: Symbol,\n     span: Span\n ) -> &'ll Value {\n     let llty = cx.layout_of(ty).llvm_type(cx);\n+    let sym = sym.as_str();\n     if let Some(linkage) = attrs.linkage {\n         debug!(\"get_static: sym={} linkage={:?}\", sym, linkage);\n \n@@ -203,7 +203,7 @@ impl CodegenCx<'ll, 'tcx> {\n                  def_id);\n \n         let ty = instance.ty(self.tcx);\n-        let sym = self.tcx.symbol_name(instance).name.as_str();\n+        let sym = self.tcx.symbol_name(instance).name.as_symbol();\n \n         debug!(\"get_static: sym={} instance={:?}\", sym, instance);\n \n@@ -214,11 +214,12 @@ impl CodegenCx<'ll, 'tcx> {\n                 Node::Item(&hir::Item {\n                     ref attrs, span, node: hir::ItemKind::Static(..), ..\n                 }) => {\n-                    if self.get_declared_value(&sym[..]).is_some() {\n+                    let sym_str = sym.as_str();\n+                    if self.get_declared_value(&sym_str).is_some() {\n                         span_bug!(span, \"Conflicting symbol names for static?\");\n                     }\n \n-                    let g = self.define_global(&sym[..], llty).unwrap();\n+                    let g = self.define_global(&sym_str, llty).unwrap();\n \n                     if !self.tcx.is_reachable_non_generic(def_id) {\n                         unsafe {"}]}