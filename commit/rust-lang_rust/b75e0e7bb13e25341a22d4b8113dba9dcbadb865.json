{"sha": "b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NWUwZTdiYjEzZTI1MzQxYTIyZDRiODExM2RiYTlkY2JhZGI4NjU=", "commit": {"author": {"name": "Kevin DeLorey", "email": "kdelorey.dev@gmail.com", "date": "2021-07-22T01:44:16Z"}, "committer": {"name": "Kevin DeLorey", "email": "kdelorey.dev@gmail.com", "date": "2021-07-23T01:35:47Z"}, "message": "Initial commit of highlight related configuration w/ implementation.", "tree": {"sha": "234b352f093ca4631ee5dcfc3f17cb4ce3a66650", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/234b352f093ca4631ee5dcfc3f17cb4ce3a66650"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "html_url": "https://github.com/rust-lang/rust/commit/b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/comments", "author": {"login": "kdelorey", "id": 2295721, "node_id": "MDQ6VXNlcjIyOTU3MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2295721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdelorey", "html_url": "https://github.com/kdelorey", "followers_url": "https://api.github.com/users/kdelorey/followers", "following_url": "https://api.github.com/users/kdelorey/following{/other_user}", "gists_url": "https://api.github.com/users/kdelorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdelorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdelorey/subscriptions", "organizations_url": "https://api.github.com/users/kdelorey/orgs", "repos_url": "https://api.github.com/users/kdelorey/repos", "events_url": "https://api.github.com/users/kdelorey/events{/privacy}", "received_events_url": "https://api.github.com/users/kdelorey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kdelorey", "id": 2295721, "node_id": "MDQ6VXNlcjIyOTU3MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2295721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdelorey", "html_url": "https://github.com/kdelorey", "followers_url": "https://api.github.com/users/kdelorey/followers", "following_url": "https://api.github.com/users/kdelorey/following{/other_user}", "gists_url": "https://api.github.com/users/kdelorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdelorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdelorey/subscriptions", "organizations_url": "https://api.github.com/users/kdelorey/orgs", "repos_url": "https://api.github.com/users/kdelorey/repos", "events_url": "https://api.github.com/users/kdelorey/events{/privacy}", "received_events_url": "https://api.github.com/users/kdelorey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dd1814100b3b2bdc5cc1d1994b16caa613784b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd1814100b3b2bdc5cc1d1994b16caa613784b5", "html_url": "https://github.com/rust-lang/rust/commit/1dd1814100b3b2bdc5cc1d1994b16caa613784b5"}], "stats": {"total": 88, "additions": 78, "deletions": 10}, "files": [{"sha": "f00785154244d9974cfcdb49f442accced1b7eef", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "patch": "@@ -18,6 +18,14 @@ pub struct HighlightedRange {\n     pub access: Option<ReferenceAccess>,\n }\n \n+#[derive(Default, Clone)]\n+pub struct HighlightRelatedConfig {\n+    pub references: bool,\n+    pub exit_points: bool,\n+    pub break_points: bool,\n+    pub yield_points: bool,\n+}\n+\n // Feature: Highlight Related\n //\n // Highlights constructs related to the thing under the cursor:\n@@ -27,6 +35,7 @@ pub struct HighlightedRange {\n // - if on a `break`, `loop`, `while` or `for` token, highlights all break points for that loop or block context\n pub(crate) fn highlight_related(\n     sema: &Semantics<RootDatabase>,\n+    config: HighlightRelatedConfig,\n     position: FilePosition,\n ) -> Option<Vec<HighlightedRange>> {\n     let _p = profile::span(\"highlight_related\");\n@@ -46,10 +55,13 @@ pub(crate) fn highlight_related(\n     })?;\n \n     match token.kind() {\n-        T![return] | T![?] | T![->] => highlight_exit_points(sema, token),\n-        T![await] | T![async] => highlight_yield_points(token),\n-        T![break] | T![loop] | T![for] | T![while] => highlight_break_points(token),\n-        _ => highlight_references(sema, &syntax, position),\n+        T![return] | T![?] | T![->] if config.exit_points => highlight_exit_points(sema, token),\n+        T![await] | T![async] if config.yield_points => highlight_yield_points(token),\n+        T![break] | T![loop] | T![for] | T![while] if config.break_points => {\n+            highlight_break_points(token)\n+        }\n+        _ if config.references => highlight_references(sema, &syntax, position),\n+        _ => None,\n     }\n }\n \n@@ -261,7 +273,14 @@ mod tests {\n \n     fn check(ra_fixture: &str) {\n         let (analysis, pos, annotations) = fixture::annotations(ra_fixture);\n-        let hls = analysis.highlight_related(pos).unwrap().unwrap();\n+        let config = HighlightRelatedConfig {\n+            break_points: true,\n+            exit_points: true,\n+            references: true,\n+            yield_points: true,\n+        };\n+\n+        let hls = analysis.highlight_related(config, pos).unwrap().unwrap();\n \n         let mut expected = annotations\n             .into_iter()"}, {"sha": "83173e1c6b8afc8f3ba768663d731b3ebfcd5714", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "patch": "@@ -76,7 +76,7 @@ pub use crate::{\n     expand_macro::ExpandedMacro,\n     file_structure::{StructureNode, StructureNodeKind},\n     folding_ranges::{Fold, FoldKind},\n-    highlight_related::HighlightedRange,\n+    highlight_related::{HighlightRelatedConfig, HighlightedRange},\n     hover::{HoverAction, HoverConfig, HoverDocFormat, HoverGotoTypeData, HoverResult},\n     inlay_hints::{InlayHint, InlayHintsConfig, InlayKind},\n     join_lines::JoinLinesConfig,\n@@ -496,9 +496,12 @@ impl Analysis {\n     /// Computes all ranges to highlight for a given item in a file.\n     pub fn highlight_related(\n         &self,\n+        config: HighlightRelatedConfig,\n         position: FilePosition,\n     ) -> Cancellable<Option<Vec<HighlightedRange>>> {\n-        self.with_db(|db| highlight_related::highlight_related(&Semantics::new(db), position))\n+        self.with_db(|db| {\n+            highlight_related::highlight_related(&Semantics::new(db), config, position)\n+        })\n     }\n \n     /// Computes syntax highlighting for the given file range."}, {"sha": "4b403300fed562ce5503def400add8a5a39ee238", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "patch": "@@ -11,8 +11,8 @@ use std::{ffi::OsString, iter, path::PathBuf};\n \n use flycheck::FlycheckConfig;\n use ide::{\n-    AssistConfig, CompletionConfig, DiagnosticsConfig, HoverConfig, HoverDocFormat,\n-    InlayHintsConfig, JoinLinesConfig,\n+    AssistConfig, CompletionConfig, DiagnosticsConfig, HighlightRelatedConfig, HoverConfig,\n+    HoverDocFormat, InlayHintsConfig, JoinLinesConfig,\n };\n use ide_db::helpers::{\n     insert_use::{ImportGranularity, InsertUseConfig, PrefixKind},\n@@ -261,6 +261,14 @@ config_data! {\n         workspace_symbol_search_scope: WorskpaceSymbolSearchScopeDef = \"\\\"workspace\\\"\",\n         /// Workspace symbol search kind.\n         workspace_symbol_search_kind: WorskpaceSymbolSearchKindDef = \"\\\"only_types\\\"\",\n+\n+        highlightRelated_references: bool = \"true\",\n+\n+        highlightRelated_exitPoints: bool = \"true\",\n+\n+        highlightRelated_breakPoints: bool = \"true\",\n+\n+        highlightRelated_yieldPoints: bool = \"true\",\n     }\n }\n \n@@ -852,6 +860,15 @@ impl Config {\n             false\n         )\n     }\n+\n+    pub fn highlight_related(&self) -> HighlightRelatedConfig {\n+        HighlightRelatedConfig {\n+            references: self.data.highlightRelated_references,\n+            break_points: self.data.highlightRelated_breakPoints,\n+            exit_points: self.data.highlightRelated_exitPoints,\n+            yield_points: self.data.highlightRelated_yieldPoints,\n+        }\n+    }\n }\n \n #[derive(Deserialize, Debug, Clone)]"}, {"sha": "52b557f156886c2b3cfd7883ca6b67269fa35d11", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "patch": "@@ -1188,7 +1188,7 @@ pub(crate) fn handle_document_highlight(\n     let position = from_proto::file_position(&snap, params.text_document_position_params)?;\n     let line_index = snap.file_line_index(position.file_id)?;\n \n-    let refs = match snap.analysis.highlight_related(position)? {\n+    let refs = match snap.analysis.highlight_related(snap.config.highlight_related(), position)? {\n         None => return Ok(None),\n         Some(refs) => refs,\n     };"}, {"sha": "0f46062f27478b515562b495e90e15de11c8cf48", "filename": "editors/code/package.json", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "patch": "@@ -881,6 +881,26 @@\n                         \"Search for all symbols kinds\"\n                     ]\n                 },\n+                \"rust-analyzer.highlightRelated.references\": {\n+                    \"markdownDescription\": \"Enables highlighting of related references while hovering your mouse above any identifier.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.highlightRelated.exitPoints\": {\n+                    \"markdownDescription\": \"Enables highlighting of all exit points while hovering your mouse above any `return`, `?`, or return type arrow (`->`).\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.highlightRelated.breakPoints\": {\n+                    \"markdownDescription\": \"Enables highlighting of related references while hovering your mouse `break`, `loop`, `while`, or `for` keywords.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.highlightRelated.yieldPoints\": {\n+                    \"markdownDescription\": \"Enables highlighting of all break points for a loop or block context while hovering your mouse above any `async` or `await` keywords.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n                 \"$generated-end\": {}\n             }\n         },"}, {"sha": "413290c290bed2c6309586eb4d6063b3b51f7f8b", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b75e0e7bb13e25341a22d4b8113dba9dcbadb865/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=b75e0e7bb13e25341a22d4b8113dba9dcbadb865", "patch": "@@ -172,6 +172,15 @@ export class Config {\n         };\n     }\n \n+    get highlightRelated() {\n+        return {\n+            references: this.get<boolean>(\"highlightRelated.references\"),\n+            exitPoints: this.get<boolean>(\"highlightRelated.exit_points\"),\n+            breakPoints: this.get<boolean>(\"highlightRelated.exit_points\"),\n+            yieldPoints: this.get<boolean>(\"highlightRelated.yield_points\")\n+        };\n+    }\n+\n     get currentExtensionIsNightly() {\n         return this.package.releaseTag === NIGHTLY_TAG;\n     }"}]}