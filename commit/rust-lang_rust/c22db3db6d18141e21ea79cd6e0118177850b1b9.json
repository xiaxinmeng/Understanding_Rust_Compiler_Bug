{"sha": "c22db3db6d18141e21ea79cd6e0118177850b1b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMmRiM2RiNmQxODE0MWUyMWVhNzljZDZlMDExODE3Nzg1MGIxYjk=", "commit": {"author": {"name": "J. Cliff Dyer", "email": "jcd@sdf.org", "date": "2017-09-07T18:08:58Z"}, "committer": {"name": "J. Cliff Dyer", "email": "jcd@sdf.org", "date": "2017-09-07T18:08:58Z"}, "message": "IP address convenience constructors", "tree": {"sha": "34eaae04bbf1be4582b15eab5a044444b21370ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34eaae04bbf1be4582b15eab5a044444b21370ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22db3db6d18141e21ea79cd6e0118177850b1b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22db3db6d18141e21ea79cd6e0118177850b1b9", "html_url": "https://github.com/rust-lang/rust/commit/c22db3db6d18141e21ea79cd6e0118177850b1b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22db3db6d18141e21ea79cd6e0118177850b1b9/comments", "author": {"login": "jcdyer", "id": 77486, "node_id": "MDQ6VXNlcjc3NDg2", "avatar_url": "https://avatars.githubusercontent.com/u/77486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcdyer", "html_url": "https://github.com/jcdyer", "followers_url": "https://api.github.com/users/jcdyer/followers", "following_url": "https://api.github.com/users/jcdyer/following{/other_user}", "gists_url": "https://api.github.com/users/jcdyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcdyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcdyer/subscriptions", "organizations_url": "https://api.github.com/users/jcdyer/orgs", "repos_url": "https://api.github.com/users/jcdyer/repos", "events_url": "https://api.github.com/users/jcdyer/events{/privacy}", "received_events_url": "https://api.github.com/users/jcdyer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcdyer", "id": 77486, "node_id": "MDQ6VXNlcjc3NDg2", "avatar_url": "https://avatars.githubusercontent.com/u/77486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcdyer", "html_url": "https://github.com/jcdyer", "followers_url": "https://api.github.com/users/jcdyer/followers", "following_url": "https://api.github.com/users/jcdyer/following{/other_user}", "gists_url": "https://api.github.com/users/jcdyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcdyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcdyer/subscriptions", "organizations_url": "https://api.github.com/users/jcdyer/orgs", "repos_url": "https://api.github.com/users/jcdyer/repos", "events_url": "https://api.github.com/users/jcdyer/events{/privacy}", "received_events_url": "https://api.github.com/users/jcdyer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d75eff30ff03f607ff0656a50f4be768cfdbc9", "html_url": "https://github.com/rust-lang/rust/commit/d7d75eff30ff03f607ff0656a50f4be768cfdbc9"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "d6387fdd659a8003aacaa429b0daf1fbadecc756", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/c22db3db6d18141e21ea79cd6e0118177850b1b9/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22db3db6d18141e21ea79cd6e0118177850b1b9/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=c22db3db6d18141e21ea79cd6e0118177850b1b9", "patch": "@@ -342,6 +342,32 @@ impl Ipv4Addr {\n         }\n     }\n \n+    /// Creates a new IPv4 address with the address pointing to localhost: 127.0.0.1.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::Ipv4Addr;\n+    ///\n+    /// let addr = Ipv4Addr::localhost();\n+    /// assert_eq!(addr, Ipv4Addr::new(127, 0, 0, 1));\n+    pub fn localhost() -> Ipv4Addr {\n+        Ipv4Addr::new(127, 0, 0, 1)\n+    }\n+\n+    /// Creates a new IPv4 address representing an unspecified address: 0.0.0.0\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::Ipv4Addr;\n+    ///\n+    /// let addr = Ipv4Addr::unspecified();\n+    /// assert_eq!(addr, Ipv4Addr::new(0, 0, 0, 0));\n+    pub fn unspecified() -> Ipv4Addr {\n+        Ipv4Addr::new(0, 0, 0, 0)\n+    }\n+\n     /// Returns the four eight-bit integers that make up this address.\n     ///\n     /// # Examples\n@@ -788,6 +814,32 @@ impl Ipv6Addr {\n         Ipv6Addr { inner: addr }\n     }\n \n+    /// Creates a new IPv6 address representing localhost: `::1`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::Ipv6Addr;\n+    ///\n+    /// let addr = Ipv6Addr::localhost();\n+    /// assert_eq!(addr, Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1));\n+    pub fn localhost() -> Ipv6Addr {\n+        Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1)\n+    }\n+\n+    /// Creates a new IPv6 address representing the unspecified address: `::`\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::Ipv6Addr;\n+    ///\n+    /// let addr = Ipv6Addr::unspecified();\n+    /// assert_eq!(addr, Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0));\n+    pub fn unspecified() -> Ipv6Addr {\n+        Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0)\n+    }\n+\n     /// Returns the eight 16-bit segments that make up this address.\n     ///\n     /// # Examples\n@@ -1681,6 +1733,22 @@ mod tests {\n         assert_eq!(Ipv6Addr::from(0x112233445566778899aabbccddeeff11u128), a);\n     }\n \n+    #[test]\n+    fn ipv4_from_constructors() {\n+        assert_eq!(Ipv4Addr::localhost(), Ipv4Addr::new(127, 0, 0, 1));\n+        assert!(Ipv4Addr::localhost().is_loopback());\n+        assert_eq!(Ipv4Addr::unspecified(), Ipv4Addr::new(0, 0, 0, 0));\n+        assert!(Ipv4Addr::unspecified().is_unspecified());\n+    }\n+\n+    #[test]\n+    fn ipv6_from_contructors() {\n+        assert_eq!(Ipv6Addr::localhost(), Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1));\n+        assert!(Ipv6Addr::localhost().is_loopback());\n+        assert_eq!(Ipv6Addr::unspecified(), Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0));\n+        assert!(Ipv6Addr::unspecified().is_unspecified());\n+    }\n+        \n     #[test]\n     fn ipv4_from_octets() {\n         assert_eq!(Ipv4Addr::from([127, 0, 0, 1]), Ipv4Addr::new(127, 0, 0, 1))"}]}