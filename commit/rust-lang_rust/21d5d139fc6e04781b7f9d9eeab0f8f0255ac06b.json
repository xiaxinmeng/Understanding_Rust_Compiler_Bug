{"sha": "21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZDVkMTM5ZmM2ZTA0NzgxYjdmOWQ5ZWVhYjBmOGYwMjU1YWMwNmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-25T12:42:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-26T16:42:06Z"}, "message": "Add tests for the parsing of `+` and the error messages if people get it wrong.\n\nFixes #18772.", "tree": {"sha": "66070d9ba7f3540ff44bdd5d33aae4617edfa7a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66070d9ba7f3540ff44bdd5d33aae4617edfa7a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b", "html_url": "https://github.com/rust-lang/rust/commit/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1479a909bbeb6d76a1a0a165518997241e601925", "url": "https://api.github.com/repos/rust-lang/rust/commits/1479a909bbeb6d76a1a0a165518997241e601925", "html_url": "https://github.com/rust-lang/rust/commit/1479a909bbeb6d76a1a0a165518997241e601925"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "a0d81b831f69c71c45f7af70eae02136dbbd7e88", "filename": "src/test/compile-fail/hrtb-precedence-of-plus-error-message.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b/src%2Ftest%2Fcompile-fail%2Fhrtb-precedence-of-plus-error-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b/src%2Ftest%2Fcompile-fail%2Fhrtb-precedence-of-plus-error-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhrtb-precedence-of-plus-error-message.rs?ref=21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+// Test that we suggest the correct parentheses\n+\n+trait Bar {\n+    fn dummy(&self) { }\n+}\n+\n+struct Foo<'a> {\n+    a: &'a Bar+'a,\n+        //~^ ERROR E0171\n+        //~^^ NOTE perhaps you meant `&'a (Bar + 'a)`?\n+\n+    b: &'a mut Bar+'a,\n+        //~^ ERROR E0171\n+        //~^^ NOTE perhaps you meant `&'a mut (Bar + 'a)`?\n+\n+    c: Box<Bar+'a>, // OK, no paren needed in this context\n+\n+    d: fn() -> Bar+'a,\n+        //~^ ERROR E0171\n+        //~^^ NOTE perhaps you forgot parentheses\n+}\n+\n+fn main() { }"}, {"sha": "86ce49f56cb57cd33b4da42e397ae3cd1dc549c6", "filename": "src/test/run-pass/hrtb-precedence-of-plus-where-clause.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b/src%2Ftest%2Frun-pass%2Fhrtb-precedence-of-plus-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b/src%2Ftest%2Frun-pass%2Fhrtb-precedence-of-plus-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhrtb-precedence-of-plus-where-clause.rs?ref=21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+// Test that `F : Fn(int) -> int + Send` is interpreted as two\n+// distinct bounds on `F`.\n+\n+fn foo<F>(f: F)\n+    where F : FnOnce(int) -> int + Send\n+{\n+    bar(f);\n+    baz(f);\n+}\n+\n+fn bar<F:Send>(f: F) { }\n+\n+fn baz<F:FnOnce(int) -> int>(f: F) { }\n+\n+fn main() {}"}, {"sha": "9a43b5b711eb5e0a346544dc28a89bfd3335d8bf", "filename": "src/test/run-pass/hrtb-precedence-of-plus.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b/src%2Ftest%2Frun-pass%2Fhrtb-precedence-of-plus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b/src%2Ftest%2Frun-pass%2Fhrtb-precedence-of-plus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhrtb-precedence-of-plus.rs?ref=21d5d139fc6e04781b7f9d9eeab0f8f0255ac06b", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+// Test that `Fn(int) -> int + 'static` parses as `(Fn(int) -> int) +\n+// 'static` and not `Fn(int) -> (int + 'static)`. The latter would\n+// cause a compilation error. Issue #18772.\n+\n+fn adder(y: int) -> Box<Fn(int) -> int + 'static> {\n+    box move |&: x| y + x\n+}\n+\n+fn main() {}"}]}