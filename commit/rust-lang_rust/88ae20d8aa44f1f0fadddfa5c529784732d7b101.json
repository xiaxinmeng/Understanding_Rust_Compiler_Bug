{"sha": "88ae20d8aa44f1f0fadddfa5c529784732d7b101", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YWUyMGQ4YWE0NGYxZjBmYWRkZGZhNWM1Mjk3ODQ3MzJkN2IxMDE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-28T16:39:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-28T16:39:42Z"}, "message": "Rollup merge of #76711 - davidtwco:issue-51154-param-closure, r=estebank\n\ndiag: improve closure/generic parameter mismatch\n\nFixes #51154.\n\nThis PR improves the diagnostic when a type parameter is expected and a closure is found, noting that each closure has a distinct type and therefore could not always match the caller-chosen type of the parameter.\n\nr? @estebank", "tree": {"sha": "494b12c442bb620d75e3266b871d0ca176ab8819", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/494b12c442bb620d75e3266b871d0ca176ab8819"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88ae20d8aa44f1f0fadddfa5c529784732d7b101", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfchHPCRBK7hj4Ov3rIwAAdHIIALL0c0Yg13tlq4suNOwFeESa\n8iiEe/di45LpeersDWbHccltNzDCNXTIxzViWt07fZ6i4IRHxqf9fFlD2uzVy6fA\nhSep4k96ZE5h3+fa5oazPGV+ltf9AuNs3IfmOcHCE8TaXa4RD0ixyFhoGLNrWfhK\nm0dw7w3vBDfHDuQO5Ce3vTDBLlQhtdmdDtW1FHfOPwHzKg4sOJrUwQ58DYYQkMMM\nQ0WHn3Wo4pKsLPXI9h7a0kQhW82Is6oGLGDV2+JkOxwoR/YwYL2Vp2nLov1KPe5W\nBvpsgRWXgkfSGYJ/85qLKZxqpPrZ5ut/nsJDhfx0btZ3oyER/5Tv3S+C18zIcgM=\n=CN3P\n-----END PGP SIGNATURE-----\n", "payload": "tree 494b12c442bb620d75e3266b871d0ca176ab8819\nparent 6a8cdbd285eca75024809ac12b8badb7f38128b7\nparent 01f65afa4adff6dfbea84621e6851c028aaa7159\nauthor Ralf Jung <post@ralfj.de> 1601311182 +0200\ncommitter GitHub <noreply@github.com> 1601311182 +0200\n\nRollup merge of #76711 - davidtwco:issue-51154-param-closure, r=estebank\n\ndiag: improve closure/generic parameter mismatch\n\nFixes #51154.\n\nThis PR improves the diagnostic when a type parameter is expected and a closure is found, noting that each closure has a distinct type and therefore could not always match the caller-chosen type of the parameter.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88ae20d8aa44f1f0fadddfa5c529784732d7b101", "html_url": "https://github.com/rust-lang/rust/commit/88ae20d8aa44f1f0fadddfa5c529784732d7b101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88ae20d8aa44f1f0fadddfa5c529784732d7b101/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a8cdbd285eca75024809ac12b8badb7f38128b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a8cdbd285eca75024809ac12b8badb7f38128b7", "html_url": "https://github.com/rust-lang/rust/commit/6a8cdbd285eca75024809ac12b8badb7f38128b7"}, {"sha": "01f65afa4adff6dfbea84621e6851c028aaa7159", "url": "https://api.github.com/repos/rust-lang/rust/commits/01f65afa4adff6dfbea84621e6851c028aaa7159", "html_url": "https://github.com/rust-lang/rust/commit/01f65afa4adff6dfbea84621e6851c028aaa7159"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "67c69d69bda81bac7a78ee2f8d0e93da8ddcf409", "filename": "compiler/rustc_middle/src/ty/error.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/88ae20d8aa44f1f0fadddfa5c529784732d7b101/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88ae20d8aa44f1f0fadddfa5c529784732d7b101/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs?ref=88ae20d8aa44f1f0fadddfa5c529784732d7b101", "patch": "@@ -475,6 +475,18 @@ impl<T> Trait<T> for X {\n                                  #traits-as-parameters\",\n                         );\n                     }\n+                    (ty::Param(p), ty::Closure(..) | ty::Generator(..)) => {\n+                        let generics = self.generics_of(body_owner_def_id);\n+                        let p_span = self.def_span(generics.type_param(p, self).def_id);\n+                        if !sp.contains(p_span) {\n+                            db.span_label(p_span, \"this type parameter\");\n+                        }\n+                        db.help(&format!(\n+                            \"every closure has a distinct type and so could not always match the \\\n+                             caller-chosen type of parameter `{}`\",\n+                            p\n+                        ));\n+                    }\n                     (ty::Param(p), _) | (_, ty::Param(p)) => {\n                         let generics = self.generics_of(body_owner_def_id);\n                         let p_span = self.def_span(generics.type_param(p, self).def_id);"}, {"sha": "3e66885448b9aa5f4a1956cb5f29636e0cf95269", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/88ae20d8aa44f1f0fadddfa5c529784732d7b101/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88ae20d8aa44f1f0fadddfa5c529784732d7b101/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=88ae20d8aa44f1f0fadddfa5c529784732d7b101", "patch": "@@ -117,11 +117,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         ty\n     }\n \n-    // Checks that the type of `expr` can be coerced to `expected`.\n-    //\n-    // N.B., this code relies on `self.diverges` to be accurate. In\n-    // particular, assignments to `!` will be permitted if the\n-    // diverges flag is currently \"always\".\n+    /// Checks that the type of `expr` can be coerced to `expected`.\n+    ///\n+    /// N.B., this code relies on `self.diverges` to be accurate. In particular, assignments to `!`\n+    /// will be permitted if the diverges flag is currently \"always\".\n     pub fn demand_coerce_diag(\n         &self,\n         expr: &hir::Expr<'_>,"}, {"sha": "12903f79010cbafd3118ed660301446afcf797a5", "filename": "src/test/ui/issues/issue-51154.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88ae20d8aa44f1f0fadddfa5c529784732d7b101/src%2Ftest%2Fui%2Fissues%2Fissue-51154.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88ae20d8aa44f1f0fadddfa5c529784732d7b101/src%2Ftest%2Fui%2Fissues%2Fissue-51154.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51154.rs?ref=88ae20d8aa44f1f0fadddfa5c529784732d7b101", "patch": "@@ -0,0 +1,6 @@\n+fn foo<F: FnMut()>() {\n+    let _: Box<F> = Box::new(|| ());\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "3c3428f3096a8d282912dc512fe28bd1db9c2646", "filename": "src/test/ui/issues/issue-51154.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/88ae20d8aa44f1f0fadddfa5c529784732d7b101/src%2Ftest%2Fui%2Fissues%2Fissue-51154.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88ae20d8aa44f1f0fadddfa5c529784732d7b101/src%2Ftest%2Fui%2Fissues%2Fissue-51154.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51154.stderr?ref=88ae20d8aa44f1f0fadddfa5c529784732d7b101", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-51154.rs:2:30\n+   |\n+LL | fn foo<F: FnMut()>() {\n+   |        - this type parameter\n+LL |     let _: Box<F> = Box::new(|| ());\n+   |                              ^^^^^ expected type parameter `F`, found closure\n+   |\n+   = note: expected type parameter `F`\n+                     found closure `[closure@$DIR/issue-51154.rs:2:30: 2:35]`\n+   = help: every closure has a distinct type and so could not always match the caller-chosen type of parameter `F`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}