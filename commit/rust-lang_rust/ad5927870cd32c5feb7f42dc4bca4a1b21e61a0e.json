{"sha": "ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNTkyNzg3MGNkMzJjNWZlYjdmNDJkYzRiY2E0YTFiMjFlNjFhMGU=", "commit": {"author": {"name": "Jared Roesch", "email": "roeschinc@gmail.com", "date": "2015-07-26T04:30:35Z"}, "committer": {"name": "Jared Roesch", "email": "roeschinc@gmail.com", "date": "2015-08-04T23:05:06Z"}, "message": "Add a macro invocation to the type AST\n\nReapplied the changes from https://github.com/freebroccolo/rust/commit/dc64b731d7f66c2b43d5e5e8c721be7bd3b59540\nto a clean branch of master", "tree": {"sha": "99b26782437a2cedc1a6cf56fa8c97b926f2bdef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99b26782437a2cedc1a6cf56fa8c97b926f2bdef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "html_url": "https://github.com/rust-lang/rust/commit/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/comments", "author": {"login": "jroesch", "id": 696509, "node_id": "MDQ6VXNlcjY5NjUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/696509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jroesch", "html_url": "https://github.com/jroesch", "followers_url": "https://api.github.com/users/jroesch/followers", "following_url": "https://api.github.com/users/jroesch/following{/other_user}", "gists_url": "https://api.github.com/users/jroesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jroesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jroesch/subscriptions", "organizations_url": "https://api.github.com/users/jroesch/orgs", "repos_url": "https://api.github.com/users/jroesch/repos", "events_url": "https://api.github.com/users/jroesch/events{/privacy}", "received_events_url": "https://api.github.com/users/jroesch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jroesch", "id": 696509, "node_id": "MDQ6VXNlcjY5NjUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/696509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jroesch", "html_url": "https://github.com/jroesch", "followers_url": "https://api.github.com/users/jroesch/followers", "following_url": "https://api.github.com/users/jroesch/following{/other_user}", "gists_url": "https://api.github.com/users/jroesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jroesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jroesch/subscriptions", "organizations_url": "https://api.github.com/users/jroesch/orgs", "repos_url": "https://api.github.com/users/jroesch/repos", "events_url": "https://api.github.com/users/jroesch/events{/privacy}", "received_events_url": "https://api.github.com/users/jroesch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6afb8f58d18311109081cfaff2fa5a02948989c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6afb8f58d18311109081cfaff2fa5a02948989c3", "html_url": "https://github.com/rust-lang/rust/commit/6afb8f58d18311109081cfaff2fa5a02948989c3"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "cfd681e51f4e1c18569468f0f40f41a45e44b2ed", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "patch": "@@ -1662,6 +1662,9 @@ pub fn ast_ty_to_ty<'tcx>(this: &AstConv<'tcx>,\n             // handled specially and will not descend into this routine.\n             this.ty_infer(None, None, None, ast_ty.span)\n         }\n+        ast::TyMac(_) => {\n+            tcx.sess.span_bug(m.span, \"unexpanded type macro found conversion\")\n+        }\n     };\n \n     tcx.ast_ty_to_ty_cache.borrow_mut().insert(ast_ty.id, typ);"}, {"sha": "a79a571f0c7a4685a92abd19467f00bc8bdd3bb6", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "patch": "@@ -1611,6 +1611,9 @@ impl Clean<Type> for ast::Ty {\n             TyTypeof(..) => {\n                 panic!(\"Unimplemented type {:?}\", self.node)\n             },\n+            TyMac(..) => {\n+                cx.tcx().sess.span_bug(m.span, \"unexpanded type macro found during cleaning\")\n+            }\n         }\n     }\n }"}, {"sha": "eefd3da9f4af31734bb9d938efa9bf31844fccea", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "patch": "@@ -1471,6 +1471,8 @@ pub enum Ty_ {\n     /// TyInfer means the type should be inferred instead of it having been\n     /// specified. This can appear anywhere in a type.\n     TyInfer,\n+    // A macro in the type position.\n+    TyMac(Mac)\n }\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]"}, {"sha": "72fe9a7711d993d2de8d8fe99cc995d63dabb4f1", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "patch": "@@ -429,6 +429,9 @@ pub fn noop_fold_ty<T: Folder>(t: P<Ty>, fld: &mut T) -> P<Ty> {\n             TyPolyTraitRef(bounds) => {\n                 TyPolyTraitRef(bounds.move_map(|b| fld.fold_ty_param_bound(b)))\n             }\n+            TyMac(mac) => {\n+                TyMac(fld.fold_mac(mac))\n+            }\n         },\n         span: fld.new_span(span)\n     })"}, {"sha": "17fa0922da9efcfca224936c09872156580d0004", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "patch": "@@ -734,6 +734,9 @@ impl<'a> State<'a> {\n             ast::TyInfer => {\n                 try!(word(&mut self.s, \"_\"));\n             }\n+            ast::TyMac(ref m) => {\n+                try!(self.print_mac(m, token::Paren));\n+            }\n         }\n         self.end()\n     }"}, {"sha": "b32ed15b50f9dc01e5fd838382fd284dcff82ad9", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=ad5927870cd32c5feb7f42dc4bca4a1b21e61a0e", "patch": "@@ -405,6 +405,9 @@ pub fn walk_ty<'v, V: Visitor<'v>>(visitor: &mut V, typ: &'v Ty) {\n             visitor.visit_expr(&**expression)\n         }\n         TyInfer => {}\n+        TyMac(ref mac) => {\n+            visitor.visit_mac(mac)\n+        }\n     }\n }\n "}]}