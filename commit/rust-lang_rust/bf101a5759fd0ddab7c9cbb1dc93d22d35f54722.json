{"sha": "bf101a5759fd0ddab7c9cbb1dc93d22d35f54722", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMTAxYTU3NTlmZDBkZGFiN2M5Y2JiMWRjOTNkMjJkMzVmNTQ3MjI=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-08T08:30:55Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-19T05:39:39Z"}, "message": "Fix trailing whitespace", "tree": {"sha": "68497780c62f4056d0d1151cb01cb0d3faa4e21e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68497780c62f4056d0d1151cb01cb0d3faa4e21e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf101a5759fd0ddab7c9cbb1dc93d22d35f54722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf101a5759fd0ddab7c9cbb1dc93d22d35f54722", "html_url": "https://github.com/rust-lang/rust/commit/bf101a5759fd0ddab7c9cbb1dc93d22d35f54722", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf101a5759fd0ddab7c9cbb1dc93d22d35f54722/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5258af398aced119ad5ac40192fa131a2f2827d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5258af398aced119ad5ac40192fa131a2f2827d4", "html_url": "https://github.com/rust-lang/rust/commit/5258af398aced119ad5ac40192fa131a2f2827d4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "826883fdc3f01de6bf0f3f08ae47f66d6893359a", "filename": "src/libcore/num/wrapping.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf101a5759fd0ddab7c9cbb1dc93d22d35f54722/src%2Flibcore%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf101a5759fd0ddab7c9cbb1dc93d22d35f54722/src%2Flibcore%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fwrapping.rs?ref=bf101a5759fd0ddab7c9cbb1dc93d22d35f54722", "patch": "@@ -525,7 +525,7 @@ macro_rules! wrapping_int_impl {\n             /// use std::num::Wrapping;\n             ///\n             /// let n: Wrapping<i64> = Wrapping(0x0123456789ABCDEF);\n-            /// \n+            ///\n             /// if cfg!(target_endian = \"little\") {\n             ///     assert_eq!(Wrapping::<i64>::from_le(n), n);\n             /// } else {"}]}