{"sha": "bc0439b3880808e1385da4b99964d5d506f76e3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMDQzOWIzODgwODA4ZTEzODVkYTRiOTk5NjRkNWQ1MDZmNzZlM2Y=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-12-14T17:42:40Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-12-17T09:13:09Z"}, "message": "Warn about inference variables behind raw pointers in method lookup", "tree": {"sha": "e952d2c2839c71bb772e2816f18780e4fb7b6cfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e952d2c2839c71bb772e2816f18780e4fb7b6cfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc0439b3880808e1385da4b99964d5d506f76e3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0439b3880808e1385da4b99964d5d506f76e3f", "html_url": "https://github.com/rust-lang/rust/commit/bc0439b3880808e1385da4b99964d5d506f76e3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc0439b3880808e1385da4b99964d5d506f76e3f/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "428b0259b66f4a52b9e61d780a6decc7c049fa64", "url": "https://api.github.com/repos/rust-lang/rust/commits/428b0259b66f4a52b9e61d780a6decc7c049fa64", "html_url": "https://github.com/rust-lang/rust/commit/428b0259b66f4a52b9e61d780a6decc7c049fa64"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "fe30ffb3cfccde1788650231515fdf788f9b2582", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bc0439b3880808e1385da4b99964d5d506f76e3f/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0439b3880808e1385da4b99964d5d506f76e3f/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=bc0439b3880808e1385da4b99964d5d506f76e3f", "patch": "@@ -321,9 +321,16 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 // a real method lookup, this is a hard error (it's an\n                 // ambiguity and we can't make progress).\n                 if !is_suggestion.0 {\n-                    // don't report a type error if we dereferenced a raw pointer,\n-                    // because that would break backwards compatibility in certain cases\n-                    if !reached_raw_pointer {\n+                    if reached_raw_pointer\n+                    && !self.tcx.sess.features.borrow().arbitrary_self_types {\n+                        // only produce a warning in this case, because inference variables used to\n+                        // be allowed here in some cases for raw pointers\n+                        struct_span_warn!(self.tcx.sess, span, E0619,\n+                            \"the type of this value must be known in this context\")\n+                        .note(\"this will be made into a hard error in a future version of \\\n+                               the compiler\")\n+                        .emit();\n+                    } else {\n                         let t = self.structurally_resolved_type(span, final_ty);\n                         assert_eq!(t, self.tcx.types.err);\n                         return None"}]}