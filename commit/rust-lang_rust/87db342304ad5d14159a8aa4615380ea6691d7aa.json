{"sha": "87db342304ad5d14159a8aa4615380ea6691d7aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZGIzNDIzMDRhZDVkMTQxNTlhOGFhNDYxNTM4MGVhNjY5MWQ3YWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-01-10T07:56:13Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-01-10T07:56:13Z"}, "message": "run rustfmt", "tree": {"sha": "6d96c7806658f9bbe54e54e4b05518bdb005b4ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d96c7806658f9bbe54e54e4b05518bdb005b4ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87db342304ad5d14159a8aa4615380ea6691d7aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87db342304ad5d14159a8aa4615380ea6691d7aa", "html_url": "https://github.com/rust-lang/rust/commit/87db342304ad5d14159a8aa4615380ea6691d7aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87db342304ad5d14159a8aa4615380ea6691d7aa/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e066997046378ce9ebb9f1f65fe2ef7fdefcb823", "url": "https://api.github.com/repos/rust-lang/rust/commits/e066997046378ce9ebb9f1f65fe2ef7fdefcb823", "html_url": "https://github.com/rust-lang/rust/commit/e066997046378ce9ebb9f1f65fe2ef7fdefcb823"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "ee80844ae4bd73c1e40990bb32799a171980650e", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/87db342304ad5d14159a8aa4615380ea6691d7aa/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87db342304ad5d14159a8aa4615380ea6691d7aa/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=87db342304ad5d14159a8aa4615380ea6691d7aa", "patch": "@@ -714,10 +714,12 @@ fn check_for_loop_over_map_kv<'a, 'tcx>(\n         if pat.len() == 2 {\n             let arg_span = arg.span;\n             let (new_pat_span, kind, ty, mutbl) = match cx.tcx.tables().expr_ty(arg).sty {\n-                ty::TyRef(_, ref tam) => match (&pat[0].node, &pat[1].node) {\n-                    (key, _) if pat_is_wild(cx, key, body) => (pat[1].span, \"value\", tam.ty, tam.mutbl),\n-                    (_, value) if pat_is_wild(cx, value, body) => (pat[0].span, \"key\", tam.ty, MutImmutable),\n-                    _ => return,\n+                ty::TyRef(_, ref tam) => {\n+                    match (&pat[0].node, &pat[1].node) {\n+                        (key, _) if pat_is_wild(cx, key, body) => (pat[1].span, \"value\", tam.ty, tam.mutbl),\n+                        (_, value) if pat_is_wild(cx, value, body) => (pat[0].span, \"key\", tam.ty, MutImmutable),\n+                        _ => return,\n+                    }\n                 },\n                 _ => return,\n             };"}]}