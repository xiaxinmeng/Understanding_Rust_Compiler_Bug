{"sha": "297ddffff3248c0d60a07a8a96cb2d06d6191a2b", "node_id": "C_kwDOAAsO6NoAKDI5N2RkZmZmZjMyNDhjMGQ2MGEwN2E4YTk2Y2IyZDA2ZDYxOTFhMmI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-15T22:31:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-15T22:32:14Z"}, "message": "add test that we do not merge neighboring SRW", "tree": {"sha": "79b3044804a918126341293bf864fdbf08361e86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79b3044804a918126341293bf864fdbf08361e86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/297ddffff3248c0d60a07a8a96cb2d06d6191a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/297ddffff3248c0d60a07a8a96cb2d06d6191a2b", "html_url": "https://github.com/rust-lang/rust/commit/297ddffff3248c0d60a07a8a96cb2d06d6191a2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/297ddffff3248c0d60a07a8a96cb2d06d6191a2b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a000764fb9a892d00a77207323b856ef07d44d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/a000764fb9a892d00a77207323b856ef07d44d36", "html_url": "https://github.com/rust-lang/rust/commit/a000764fb9a892d00a77207323b856ef07d44d36"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "1dcd7621acd2c919939f5212e587a9902b78b089", "filename": "tests/fail/stacked_borrows/disable_mut_does_not_merge_srw.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/297ddffff3248c0d60a07a8a96cb2d06d6191a2b/tests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/297ddffff3248c0d60a07a8a96cb2d06d6191a2b/tests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.rs?ref=297ddffff3248c0d60a07a8a96cb2d06d6191a2b", "patch": "@@ -0,0 +1,17 @@\n+// This tests demonstrates the effect of 'Disabling' mutable references on reads, rather than\n+// removing them from the stack -- the latter would 'merge' neighboring SRW groups which we would\n+// like to avoid.\n+fn main() {\n+    unsafe {\n+        let mut mem = 0;\n+        let base = &mut mem as *mut i32; // the base pointer we build the rest of the stack on\n+        let mutref = &mut *base;\n+        let raw = mutref as *mut i32;\n+        // in the stack, we now have [base, mutref, raw]\n+        let _val = *base;\n+        // now mutref is disabled\n+        *base = 1;\n+        // this should pop raw from the stack, since it is in a different SRW group\n+        let _val = *raw; //~ERROR: that tag does not exist in the borrow stack\n+    }\n+}"}, {"sha": "b3f0204c09faf136ecb15a6e8f341ce2d2c889b6", "filename": "tests/fail/stacked_borrows/disable_mut_does_not_merge_srw.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/297ddffff3248c0d60a07a8a96cb2d06d6191a2b/tests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/297ddffff3248c0d60a07a8a96cb2d06d6191a2b/tests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fdisable_mut_does_not_merge_srw.stderr?ref=297ddffff3248c0d60a07a8a96cb2d06d6191a2b", "patch": "@@ -0,0 +1,28 @@\n+error: Undefined Behavior: attempting a read access using <TAG> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n+  --> $DIR/disable_mut_does_not_merge_srw.rs:LL:CC\n+   |\n+LL |         let _val = *raw;\n+   |                    ^^^^\n+   |                    |\n+   |                    attempting a read access using <TAG> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n+   |                    this error occurs as part of an access at ALLOC[0x0..0x4]\n+   |\n+   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n+   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n+help: <TAG> was created by a retag at offsets [0x0..0x4]\n+  --> $DIR/disable_mut_does_not_merge_srw.rs:LL:CC\n+   |\n+LL |         let raw = mutref as *mut i32;\n+   |                   ^^^^^^\n+help: <TAG> was later invalidated at offsets [0x0..0x4]\n+  --> $DIR/disable_mut_does_not_merge_srw.rs:LL:CC\n+   |\n+LL |         *base = 1;\n+   |         ^^^^^^^^^\n+   = note: backtrace:\n+   = note: inside `main` at $DIR/disable_mut_does_not_merge_srw.rs:LL:CC\n+\n+note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n+\n+error: aborting due to previous error\n+"}]}