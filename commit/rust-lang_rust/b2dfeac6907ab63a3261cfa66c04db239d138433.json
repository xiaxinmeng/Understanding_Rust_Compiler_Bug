{"sha": "b2dfeac6907ab63a3261cfa66c04db239d138433", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZGZlYWM2OTA3YWI2M2EzMjYxY2ZhNjZjMDRkYjIzOWQxMzg0MzM=", "commit": {"author": {"name": "Ross Schulman", "email": "ross@rbs.io", "date": "2016-09-06T00:00:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-30T21:02:44Z"}, "message": "Adding ignore-emscripten to failing tests.", "tree": {"sha": "e2ebbfed0f4d4917ac7849b394b6a6fec30d529d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2ebbfed0f4d4917ac7849b394b6a6fec30d529d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2dfeac6907ab63a3261cfa66c04db239d138433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2dfeac6907ab63a3261cfa66c04db239d138433", "html_url": "https://github.com/rust-lang/rust/commit/b2dfeac6907ab63a3261cfa66c04db239d138433", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2dfeac6907ab63a3261cfa66c04db239d138433/comments", "author": {"login": "rschulman", "id": 1304536, "node_id": "MDQ6VXNlcjEzMDQ1MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1304536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rschulman", "html_url": "https://github.com/rschulman", "followers_url": "https://api.github.com/users/rschulman/followers", "following_url": "https://api.github.com/users/rschulman/following{/other_user}", "gists_url": "https://api.github.com/users/rschulman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rschulman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rschulman/subscriptions", "organizations_url": "https://api.github.com/users/rschulman/orgs", "repos_url": "https://api.github.com/users/rschulman/repos", "events_url": "https://api.github.com/users/rschulman/events{/privacy}", "received_events_url": "https://api.github.com/users/rschulman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad9184c9bfd47e1be43726c7f68fa8a4f879cb94", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94", "html_url": "https://github.com/rust-lang/rust/commit/ad9184c9bfd47e1be43726c7f68fa8a4f879cb94"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "0097de75f94fc383a2119ce2838f7e43dbf5a35c", "filename": "src/test/compile-fail/allocator-dylib-is-system.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Fcompile-fail%2Fallocator-dylib-is-system.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Fcompile-fail%2Fallocator-dylib-is-system.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fallocator-dylib-is-system.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -18,6 +18,8 @@\n // system allocator. Do this by linking in jemalloc and making sure that we get\n // an error.\n \n+// ignore-emscripten TODO: What \"other allocator\" should we use for emcc?\n+\n #![feature(alloc_jemalloc)]\n \n extern crate allocator_dylib;"}, {"sha": "a6b49ec86cc78e8d651bae9545852cc860488006", "filename": "src/test/compile-fail/allocator-rust-dylib-is-jemalloc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Fcompile-fail%2Fallocator-rust-dylib-is-jemalloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Fcompile-fail%2Fallocator-rust-dylib-is-jemalloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fallocator-rust-dylib-is-jemalloc.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -16,6 +16,8 @@\n // Ensure that rust dynamic libraries use jemalloc as their allocator, verifying\n // by linking in the system allocator here and ensuring that we get a complaint.\n \n+// ignore-emscripten TODO: What \"other allocator\" is correct for emscripten?\n+\n #![feature(alloc_system)]\n \n extern crate allocator_dylib2;"}, {"sha": "36e2a4b86aa3965fa7d6ade6835e392162e58a55", "filename": "src/test/run-fail/panic-task-name-none.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Fpanic-task-name-none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Fpanic-task-name-none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fpanic-task-name-none.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // error-pattern:thread '<unnamed>' panicked at 'test'\n+// ignore-emscripten Needs threads\n \n use std::thread;\n "}, {"sha": "4da40c3158b84c22ef955e8e243d3224b1e1a5cd", "filename": "src/test/run-fail/panic-task-name-owned.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Fpanic-task-name-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Fpanic-task-name-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fpanic-task-name-owned.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // error-pattern:thread 'owned name' panicked at 'test'\n+// ignore-emscripten Needs threads.\n \n use std::thread::Builder;\n "}, {"sha": "bc7b3540d1e999d69676f62260d46ed1d8684263", "filename": "src/test/run-fail/run-unexported-tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -12,6 +12,7 @@\n // compile-flags:--test\n // check-stdout\n // ignore-pretty: does not work well with `--test`\n+// ignore-emscripten Needs threads.\n \n mod m {\n     pub fn exported() {}"}, {"sha": "108430848b9b29673efe9b569fae95650be2bc3b", "filename": "src/test/run-fail/task-spawn-barefn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftask-spawn-barefn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftask-spawn-barefn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-spawn-barefn.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // error-pattern:Ensure that the child thread runs by panicking\n+// ignore-emscripten Needs threads.\n \n use std::thread;\n "}, {"sha": "070095534a4b96a5d28cf19bd63e694897eae00f", "filename": "src/test/run-fail/test-panic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftest-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftest-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftest-panic.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -12,6 +12,7 @@\n // error-pattern:thread 'test_foo' panicked at\n // compile-flags: --test\n // ignore-pretty: does not work well with `--test`\n+// ignore-emscripten \n \n #[test]\n fn test_foo() {"}, {"sha": "bd25df3dabd1d6211612472e07d7412f77036934", "filename": "src/test/run-fail/test-should-fail-bad-message.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftest-should-fail-bad-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftest-should-fail-bad-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftest-should-fail-bad-message.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -12,6 +12,7 @@\n // error-pattern:thread 'test_foo' panicked at\n // compile-flags: --test\n // ignore-pretty: does not work well with `--test`\n+// ignore-emscripten \n \n #[test]\n #[should_panic(expected = \"foobar\")]"}, {"sha": "b5c222764d243ea33060ff3826da71884f908c42", "filename": "src/test/run-fail/test-tasks-invalid-value.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftest-tasks-invalid-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-fail%2Ftest-tasks-invalid-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftest-tasks-invalid-value.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -15,6 +15,7 @@\n // compile-flags: --test\n // exec-env:RUST_TEST_THREADS=foo\n // ignore-pretty: does not work well with `--test`\n+// ignore-emscripten\n \n #[test]\n fn do_nothing() {}"}, {"sha": "ca2dbdf2b3de30a4a3672ecd389dc075889ca29c", "filename": "src/test/run-pass/allocator-override.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fallocator-override.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fallocator-override.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator-override.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -10,6 +10,7 @@\n \n // no-prefer-dynamic\n // aux-build:allocator-dummy.rs\n+// ignore-emscripten\n \n #![feature(test)]\n "}, {"sha": "801a3c40ab47ddb9a2d0dd73248e521da5f0ab07", "filename": "src/test/run-pass/extern-pass-empty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fextern-pass-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fextern-pass-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-empty.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -12,6 +12,7 @@\n \n // pretty-expanded FIXME #23616\n // ignore-msvc\n+// ignore-emscripten\n \n struct TwoU8s {\n     one: u8,"}, {"sha": "77c45545221583fcb5a69b1df0ae6108725cdb1f", "filename": "src/test/run-pass/issue-16597.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16597.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -10,6 +10,7 @@\n \n // compile-flags:--test\n // ignore-pretty turns out the pretty-printer doesn't handle gensym'd things...\n+// ignore-emscripten\n \n mod tests {\n     use super::*;"}, {"sha": "aa5d0151446de9bc842e7cc2003b94bebb0509ef", "filename": "src/test/run-pass/issue-20823.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fissue-20823.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fissue-20823.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20823.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -10,6 +10,7 @@\n \n // compile-flags: --test\n // no-pretty-expanded\n+// ignore-emscripten\n \n #![deny(unstable)]\n "}, {"sha": "88958744fe9169ed6e55613a61c6dac823f8a1c5", "filename": "src/test/run-pass/issue-29663.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29663.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // write_volatile causes an LLVM assert with composite types\n+// ignore-emscripten write_volatile doesn't work on arrays of structs?\n \n #![feature(volatile)]\n use std::ptr::{read_volatile, write_volatile};"}, {"sha": "d1e05e5a0184c3d1c8cac004726b958bf3b0c5c2", "filename": "src/test/run-pass/packed-struct-layout.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -7,6 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+// ignore-emscripten Not sure what's happening here.\n \n \n use std::mem;"}, {"sha": "9873f23137b4c8d592971ec354770e1749db0b70", "filename": "src/test/run-pass/packed-struct-vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpacked-struct-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpacked-struct-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-vec.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -7,6 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+// ignore-emscripten Right side of comparison is screwed up. No idea how.\n \n use std::mem;\n "}, {"sha": "ee4eb86ed0de3d04a6c30d4552810aac53646e26", "filename": "src/test/run-pass/packed-tuple-struct-layout.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -7,6 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+// ignore-emscripten\n \n \n use std::mem;"}, {"sha": "1c273fcba02daf77b148b7c9f44dd9779b4d416e", "filename": "src/test/run-pass/panic-runtime/abort-link-to-unwinding-crates.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -11,6 +11,7 @@\n // compile-flags:-C panic=abort\n // aux-build:exit-success-if-unwind.rs\n // no-prefer-dynamic\n+// ignore-emscripten Function not implemented\n \n extern crate exit_success_if_unwind;\n "}, {"sha": "be38f6ea3643a8857c7c553af3e2df34aa8ac59d", "filename": "src/test/run-pass/panic-runtime/abort.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -10,6 +10,7 @@\n \n // compile-flags:-C panic=abort\n // no-prefer-dynamic\n+// ignore-emscripten Function not implemented.\n \n use std::process::Command;\n use std::env;"}, {"sha": "e4cd4e809a4c6bf7684b9346ea325dbca9335c39", "filename": "src/test/run-pass/panic-runtime/lto-abort.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-abort.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -10,6 +10,7 @@\n \n // compile-flags:-C lto -C panic=abort\n // no-prefer-dynamic\n+// ignore-emscripten Function not implemented.\n \n use std::process::Command;\n use std::env;"}, {"sha": "768b88fd09e0b3fad9c8aaa33c2b3db88e2fca0e", "filename": "src/test/run-pass/panic-runtime/lto-unwind.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-unwind.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -10,6 +10,7 @@\n \n // compile-flags:-C lto -C panic=unwind\n // no-prefer-dynamic\n+// ignore-emscripten Function not implemented.\n \n use std::process::Command;\n use std::env;"}, {"sha": "ff389bec899efba23026791c97f3aaad210e03f6", "filename": "src/test/run-pass/process-status-inherits-stdin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -7,6 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+// ignore-emscripten Function not implemented.\n \n use std::env;\n use std::io;"}, {"sha": "d32fa01c7b9453fb2e3c1d52705b6d070eb108c5", "filename": "src/test/run-pass/simd-intrinsic-generic-cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -7,6 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+// ignore-emscripten linking with emcc failed\n \n #![feature(repr_simd, platform_intrinsics, concat_idents, test)]\n #![allow(non_camel_case_types)]"}, {"sha": "b5f303b8760fb4c42a05ef1b794841095914b0d0", "filename": "src/test/run-pass/test-fn-signature-verification-for-explicit-return-type.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Ftest-fn-signature-verification-for-explicit-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Ftest-fn-signature-verification-for-explicit-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-fn-signature-verification-for-explicit-return-type.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -7,6 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+// ignore-emscripten needs threads?\n \n #![feature(test)]\n "}, {"sha": "95378df41c6800cf2980b7b02f2819653cd52611", "filename": "src/test/run-pass/test-should-fail-good-message.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Ftest-should-fail-good-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2dfeac6907ab63a3261cfa66c04db239d138433/src%2Ftest%2Frun-pass%2Ftest-should-fail-good-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-should-fail-good-message.rs?ref=b2dfeac6907ab63a3261cfa66c04db239d138433", "patch": "@@ -10,6 +10,7 @@\n \n // compile-flags: --test\n // ignore-pretty: does not work well with `--test`\n+// ignore-emscripten needs threads?\n \n #[test]\n #[should_panic(expected = \"foo\")]"}]}