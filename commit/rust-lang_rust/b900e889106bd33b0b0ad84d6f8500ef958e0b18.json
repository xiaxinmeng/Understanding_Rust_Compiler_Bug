{"sha": "b900e889106bd33b0b0ad84d6f8500ef958e0b18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MDBlODg5MTA2YmQzM2IwYjBhZDg0ZDZmODUwMGVmOTU4ZTBiMTg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-17T16:47:32Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-17T16:47:32Z"}, "message": "Merge pull request #494 from sanxiyn/suggestion-2\n\nUse suggestion for needless_return", "tree": {"sha": "e81ed4ac7778783bb5346a7ac3b49bd28de1cdd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e81ed4ac7778783bb5346a7ac3b49bd28de1cdd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b900e889106bd33b0b0ad84d6f8500ef958e0b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b900e889106bd33b0b0ad84d6f8500ef958e0b18", "html_url": "https://github.com/rust-lang/rust/commit/b900e889106bd33b0b0ad84d6f8500ef958e0b18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b900e889106bd33b0b0ad84d6f8500ef958e0b18/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d31f47496c4f3a5d5e0e28ffda089294345b133f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d31f47496c4f3a5d5e0e28ffda089294345b133f", "html_url": "https://github.com/rust-lang/rust/commit/d31f47496c4f3a5d5e0e28ffda089294345b133f"}, {"sha": "974ab43453514d85bc0bb3ffa4ee44f0b0e6204e", "url": "https://api.github.com/repos/rust-lang/rust/commits/974ab43453514d85bc0bb3ffa4ee44f0b0e6204e", "html_url": "https://github.com/rust-lang/rust/commit/974ab43453514d85bc0bb3ffa4ee44f0b0e6204e"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "3ef94a4c92659869e2bb4b2685f4f30ea5d4a549", "filename": "src/returns.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b900e889106bd33b0b0ad84d6f8500ef958e0b18/src%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b900e889106bd33b0b0ad84d6f8500ef958e0b18/src%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freturns.rs?ref=b900e889106bd33b0b0ad84d6f8500ef958e0b18", "patch": "@@ -4,7 +4,7 @@ use syntax::ast::*;\n use syntax::codemap::{Span, Spanned};\n use syntax::visit::FnKind;\n \n-use utils::{span_lint, snippet, match_path_ast, in_external_macro};\n+use utils::{span_lint, span_lint_and_then, snippet_opt, match_path_ast, in_external_macro};\n \n /// **What it does:** This lint checks for return statements at the end of a block. It is `Warn` by default.\n ///\n@@ -37,7 +37,7 @@ impl ReturnPass {\n         } else if let Some(stmt) = block.stmts.last() {\n             if let StmtSemi(ref expr, _) = stmt.node {\n                 if let ExprRet(Some(ref inner)) = expr.node {\n-                    self.emit_return_lint(cx, (expr.span, inner.span));\n+                    self.emit_return_lint(cx, (stmt.span, inner.span));\n                 }\n             }\n         }\n@@ -73,10 +73,15 @@ impl ReturnPass {\n \n     fn emit_return_lint(&mut self, cx: &EarlyContext, spans: (Span, Span)) {\n         if in_external_macro(cx, spans.1) {return;}\n-        span_lint(cx, NEEDLESS_RETURN, spans.0, &format!(\n-            \"unneeded return statement. Consider using `{}` \\\n-             without the return and trailing semicolon\",\n-            snippet(cx, spans.1, \"..\")))\n+        span_lint_and_then(cx, NEEDLESS_RETURN, spans.0,\n+                           \"unneeded return statement\",\n+                           || {\n+            if let Some(snippet) = snippet_opt(cx, spans.1) {\n+                cx.sess().span_suggestion(spans.0,\n+                                          \"remove `return` as shown:\",\n+                                          snippet);\n+            }\n+        });\n     }\n \n     // Check for \"let x = EXPR; x\""}, {"sha": "fe29d991661e5df68dbd9356d56895d3dc400ef2", "filename": "tests/compile-fail/needless_return.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b900e889106bd33b0b0ad84d6f8500ef958e0b18/tests%2Fcompile-fail%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b900e889106bd33b0b0ad84d6f8500ef958e0b18/tests%2Fcompile-fail%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fneedless_return.rs?ref=b900e889106bd33b0b0ad84d6f8500ef958e0b18", "patch": "@@ -8,11 +8,17 @@ fn test_end_of_fn() -> bool {\n         // no error!\n         return true;\n     }\n-    return true;           //~ERROR unneeded return statement\n+    return true;\n+    //~^ ERROR unneeded return statement\n+    //~| HELP remove `return` as shown\n+    //~| SUGGESTION true\n }\n \n fn test_no_semicolon() -> bool {\n-    return true            //~ERROR unneeded return statement\n+    return true\n+    //~^ ERROR unneeded return statement\n+    //~| HELP remove `return` as shown\n+    //~| SUGGESTION true\n }\n \n fn test_if_block() -> bool {\n@@ -29,7 +35,7 @@ fn test_match(x: bool) -> bool {\n             return false;  //~ERROR unneeded return statement\n         }\n         false => {\n-            return true    //~ERROR unneeded return statement\n+            return true;   //~ERROR unneeded return statement\n         }\n     }\n }"}]}