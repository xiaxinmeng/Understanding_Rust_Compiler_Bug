{"sha": "222dd1794452308724bfdf2842d50718a710b22c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMmRkMTc5NDQ1MjMwODcyNGJmZGYyODQyZDUwNzE4YTcxMGIyMmM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-01T06:39:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-01T06:39:30Z"}, "message": "add comment", "tree": {"sha": "b01524ac77c04a86824fc7e97644370da89b2d75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b01524ac77c04a86824fc7e97644370da89b2d75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/222dd1794452308724bfdf2842d50718a710b22c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/222dd1794452308724bfdf2842d50718a710b22c", "html_url": "https://github.com/rust-lang/rust/commit/222dd1794452308724bfdf2842d50718a710b22c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/222dd1794452308724bfdf2842d50718a710b22c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ce5f310cc1d08fd27d16f0335ff74f56ef321c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2", "html_url": "https://github.com/rust-lang/rust/commit/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "cf3a5449b0395f75c3583e519566c8a8a45ce16d", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/222dd1794452308724bfdf2842d50718a710b22c/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/222dd1794452308724bfdf2842d50718a710b22c/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=222dd1794452308724bfdf2842d50718a710b22c", "patch": "@@ -1632,6 +1632,7 @@ fn check_const(cx: &LateContext, body_id: hir::BodyId, what: &str) {\n     let def_id = cx.tcx.hir.body_owner_def_id(body_id);\n     let is_static = cx.tcx.is_static(def_id).is_some();\n     let param_env = if is_static {\n+        // Use the same param_env as `codegen_static_initializer`, to reuse the cache.\n         ty::ParamEnv::reveal_all()\n     } else {\n         cx.tcx.param_env(def_id)"}]}