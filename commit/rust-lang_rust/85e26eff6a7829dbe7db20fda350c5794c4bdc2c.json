{"sha": "85e26eff6a7829dbe7db20fda350c5794c4bdc2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZTI2ZWZmNmE3ODI5ZGJlN2RiMjBmZGEzNTBjNTc5NGM0YmRjMmM=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-03-28T21:00:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-06T22:35:49Z"}, "message": "fixing libuv stuff in win32 (see #2064) .. pass sockaddr_in by-ref, for now", "tree": {"sha": "2f47e97cba181748eb67dc78b68df5119ef47a41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f47e97cba181748eb67dc78b68df5119ef47a41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85e26eff6a7829dbe7db20fda350c5794c4bdc2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85e26eff6a7829dbe7db20fda350c5794c4bdc2c", "html_url": "https://github.com/rust-lang/rust/commit/85e26eff6a7829dbe7db20fda350c5794c4bdc2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85e26eff6a7829dbe7db20fda350c5794c4bdc2c/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab1efb900ec8112932a8c2b5ea1abf29da99bcfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc", "html_url": "https://github.com/rust-lang/rust/commit/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "6f9e5a5186a668f2a71bd6b5722265b18691c5c7", "filename": "src/libstd/uv.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/85e26eff6a7829dbe7db20fda350c5794c4bdc2c/src%2Flibstd%2Fuv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e26eff6a7829dbe7db20fda350c5794c4bdc2c/src%2Flibstd%2Fuv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv.rs?ref=85e26eff6a7829dbe7db20fda350c5794c4bdc2c", "patch": "@@ -340,8 +340,8 @@ native mod rustrt {\n         -> sockaddr_in;\n     fn rust_uv_tcp_connect(connect_ptr: *uv_connect_t,\n                            tcp_handle_ptr: *uv_tcp_t,\n-                           ++addr: sockaddr_in,\n-                           after_cb: *u8) -> libc::c_int;\n+                           ++after_cb: *u8,\n+                           ++addr: *sockaddr_in) -> libc::c_int;\n     fn rust_uv_write(req: *libc::c_void, stream: *libc::c_void,\n              ++buf_in: *uv_buf_t, buf_cnt: libc::c_int,\n              cb: *u8) -> libc::c_int;\n@@ -405,13 +405,14 @@ mod direct {\n     }\n     unsafe fn tcp_connect(connect_ptr: *uv_connect_t,\n                           tcp_handle_ptr: *uv_tcp_t,\n-                          address: sockaddr_in,\n-                          after_connect_cb: *u8)\n+                          addr_ptr: *sockaddr_in,\n+                          ++after_connect_cb: *u8)\n     -> libc::c_int {\n-        io::println(#fmt(\"b4 native tcp_connect--addr port: %u\",\n-                         address.sin_port as uint));\n+        let address = *addr_ptr;\n+        io::println(#fmt(\"b4 native tcp_connect--addr port: %u cb: %u\",\n+                         address.sin_port as uint, after_connect_cb as uint));\n         ret rustrt::rust_uv_tcp_connect(connect_ptr, tcp_handle_ptr,\n-                                    address, after_connect_cb);\n+                                    after_connect_cb, addr_ptr);\n     }\n \n     // TODO github #1402 -- the buf_in is a vector of pointers\n@@ -1185,16 +1186,19 @@ fn impl_uv_tcp_request() unsafe {\n         io::println(\"sucessful tcp_init_result\");\n \n         io::println(\"building addr...\");\n-        let addr = direct::ip4_addr(\"173.194.33.40\", 80);\n+        let addr = direct::ip4_addr(\"74.125.227.16\", 80);\n+        let addr_ptr = ptr::addr_of(addr);\n         io::println(#fmt(\"after build addr in rust. port: %u\",\n                          addr.sin_port as uint));\n         //let addr: *libc::c_void = ptr::addr_of(addr_val) as\n         //                            *libc::c_void;\n \n         // this should set up the connection request..\n+        io::println(#fmt(\"before calling tcp_connect .. connect cb ptr: %u \",\n+                        on_connect_cb as uint));\n         let tcp_connect_result = direct::tcp_connect(\n             connect_req_ptr, tcp_handle_ptr,\n-            addr, on_connect_cb);\n+            addr_ptr, on_connect_cb);\n         if (tcp_connect_result == 0i32) {\n             // not set the data on the connect_req\n             // until its initialized"}, {"sha": "7ed4124a690e196a3a31d5593a91e3f26f4ef525", "filename": "src/rt/rust_uv.cpp", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85e26eff6a7829dbe7db20fda350c5794c4bdc2c/src%2Frt%2Frust_uv.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/85e26eff6a7829dbe7db20fda350c5794c4bdc2c/src%2Frt%2Frust_uv.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_uv.cpp?ref=85e26eff6a7829dbe7db20fda350c5794c4bdc2c", "patch": "@@ -293,17 +293,19 @@ extern \"C\" uv_err_t\n rust_uv_last_error(uv_loop_t* loop) {\n \treturn uv_last_error(loop);\n }\n-\n extern \"C\" int\n rust_uv_tcp_connect(uv_connect_t* connect_ptr,\n \t\t\t\t\tuv_tcp_t* tcp_ptr,\n-\t\t\t\t\tstruct sockaddr_in addr,\n-\t\t\t\t\tuv_connect_cb cb) {\n+\t\t\t\t\tuv_connect_cb cb,\n+\t\t\t\t\tsockaddr_in* addr_ptr) {\n \t//return uv_tcp_connect(connect_ptr, tcp_ptr, addr, cb);\n \tprintf(\"inside rust_uv_tcp_connect\\n\");\n \t//sockaddr_in addr_tmp = *((sockaddr_in*)addr_ptr);\n \t//sockaddr_in addr = addr_tmp;\n+\tsockaddr_in addr = *addr_ptr;\n \tprintf(\"before tcp_connect .. port: %d\\n\", addr.sin_port);\n+\t//int result = uv_tcp_connect(connect_ptr, tcp_ptr, loc_addr, cb);\n+\tprintf(\"before tcp_connect.. tcp stream: %lu cb ptr: %lu\\n\", (unsigned long int)tcp_ptr, (unsigned long int)cb);\n \tint result = uv_tcp_connect(connect_ptr, tcp_ptr, addr, cb);\n \tprintf (\"leaving rust_uv_tcp_connect.. and result: %d\\n\",\n \t\t\tresult);"}]}