{"sha": "96d1712511400be7956e0902e0b4bb32ad7ee34d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZDE3MTI1MTE0MDBiZTc5NTZlMDkwMmUwYjRiYjMyYWQ3ZWUzNGQ=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-06T17:06:37Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-06T17:06:37Z"}, "message": "Use byte literals in libgetopts", "tree": {"sha": "fd7c43ff7efbe3c73934097ed9edea6c095fa7f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd7c43ff7efbe3c73934097ed9edea6c095fa7f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96d1712511400be7956e0902e0b4bb32ad7ee34d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96d1712511400be7956e0902e0b4bb32ad7ee34d", "html_url": "https://github.com/rust-lang/rust/commit/96d1712511400be7956e0902e0b4bb32ad7ee34d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96d1712511400be7956e0902e0b4bb32ad7ee34d/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efdb77b8d44fe2d5041ae3a5a8e0c7ef53715438", "url": "https://api.github.com/repos/rust-lang/rust/commits/efdb77b8d44fe2d5041ae3a5a8e0c7ef53715438", "html_url": "https://github.com/rust-lang/rust/commit/efdb77b8d44fe2d5041ae3a5a8e0c7ef53715438"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "65ae18e8361bcb5623cf8dcf93bfe411c583af06", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96d1712511400be7956e0902e0b4bb32ad7ee34d/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d1712511400be7956e0902e0b4bb32ad7ee34d/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=96d1712511400be7956e0902e0b4bb32ad7ee34d", "patch": "@@ -372,7 +372,7 @@ impl Matches {\n }\n \n fn is_arg(arg: &str) -> bool {\n-    arg.len() > 1 && arg.as_bytes()[0] == '-' as u8\n+    arg.len() > 1 && arg.as_bytes()[0] == b'-'\n }\n \n fn find_opt(opts: &[Opt], nm: Name) -> Option<uint> {\n@@ -555,7 +555,7 @@ pub fn getopts(args: &[String], optgrps: &[OptGroup]) -> Result {\n         } else {\n             let mut names;\n             let mut i_arg = None;\n-            if cur.as_bytes()[1] == '-' as u8 {\n+            if cur.as_bytes()[1] == b'-' {\n                 let tail = cur.as_slice().slice(2, curlen);\n                 let tail_eq: Vec<&str> = tail.split('=').collect();\n                 if tail_eq.len() <= 1 {"}]}