{"sha": "acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYWI0YThjOGUzYWVmNjZhMjc5ZDJkN2Y3YzU1YWNlMmNlY2U5ZmM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-24T03:38:17Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-25T21:27:42Z"}, "message": "rustdoc: Emit purity to function dox for traits\n\nCloses #3804", "tree": {"sha": "ee103da275c0180034a2f720d2c9f85ac57d22b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee103da275c0180034a2f720d2c9f85ac57d22b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "html_url": "https://github.com/rust-lang/rust/commit/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaaf2bd41fa96fdf622f301182694c1a3f47f8cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaaf2bd41fa96fdf622f301182694c1a3f47f8cb", "html_url": "https://github.com/rust-lang/rust/commit/eaaf2bd41fa96fdf622f301182694c1a3f47f8cb"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "0b5c0b8da95b8c2a4bb4553ba941cc269b203b23", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "patch": "@@ -345,6 +345,7 @@ impl Clean<SelfTy> for ast::explicit_self {\n pub struct Function {\n     decl: FnDecl,\n     generics: Generics,\n+    purity: ast::purity,\n }\n \n impl Clean<Item> for doctree::Function {\n@@ -358,6 +359,7 @@ impl Clean<Item> for doctree::Function {\n             inner: FunctionItem(Function {\n                 decl: self.decl.clean(),\n                 generics: self.generics.clean(),\n+                purity: self.purity,\n             }),\n         }\n     }"}, {"sha": "a4e3f79549824bbd49326493d35860e89e446a00", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "patch": "@@ -107,6 +107,7 @@ pub struct Function {\n     id: NodeId,\n     name: Ident,\n     vis: ast::visibility,\n+    purity: ast::purity,\n     where: Span,\n     generics: ast::Generics,\n }"}, {"sha": "75d6cb588e8ec9bfd7c40e9efe85e329ea8c35f8", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "patch": "@@ -18,6 +18,7 @@ use clean;\n use html::render::{cache_key, current_location_key};\n \n pub struct VisSpace(Option<ast::visibility>);\n+pub struct PuritySpace(ast::purity);\n pub struct Method<'self>(&'self clean::SelfTy, &'self clean::FnDecl);\n \n impl fmt::Default for clean::Generics {\n@@ -228,11 +229,7 @@ impl fmt::Default for clean::Type {\n                     None => {}\n                 }\n                 write!(f.buf, \"{}{}fn{}\",\n-                       match decl.purity {\n-                           ast::unsafe_fn => \"unsafe \",\n-                           ast::extern_fn => \"extern \",\n-                           ast::impure_fn => \"\"\n-                       },\n+                       PuritySpace(decl.purity),\n                        match decl.onceness {\n                            ast::Once => \"once \",\n                            ast::Many => \"\",\n@@ -242,11 +239,7 @@ impl fmt::Default for clean::Type {\n             }\n             clean::BareFunction(ref decl) => {\n                 write!(f.buf, \"{}{}fn{}{}\",\n-                       match decl.purity {\n-                           ast::unsafe_fn => \"unsafe \",\n-                           ast::extern_fn => \"extern \",\n-                           ast::impure_fn => \"\"\n-                       },\n+                       PuritySpace(decl.purity),\n                        match decl.abi {\n                            ~\"\" | ~\"\\\"Rust\\\"\" => ~\"\",\n                            ref s => \" \" + *s + \" \",\n@@ -362,3 +355,13 @@ impl fmt::Default for VisSpace {\n         }\n     }\n }\n+\n+impl fmt::Default for PuritySpace {\n+    fn fmt(p: &PuritySpace, f: &mut fmt::Formatter) {\n+        match **p {\n+            ast::unsafe_fn => write!(f.buf, \"unsafe \"),\n+            ast::extern_fn => write!(f.buf, \"extern \"),\n+            ast::impure_fn => {}\n+        }\n+    }\n+}"}, {"sha": "69c01cf8a45a273503b0e06d351156833ca11377", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "patch": "@@ -32,7 +32,7 @@ use syntax::ast;\n use clean;\n use doctree;\n use fold::DocFolder;\n-use html::format::{VisSpace, Method};\n+use html::format::{VisSpace, Method, PuritySpace};\n use html::layout;\n use html::markdown::Markdown;\n \n@@ -717,8 +717,9 @@ fn item_module(w: &mut io::Writer, cx: &Context,\n }\n \n fn item_function(w: &mut io::Writer, it: &clean::Item, f: &clean::Function) {\n-    write!(w, \"<pre class='fn'>{vis}fn {name}{generics}{decl}</pre>\",\n+    write!(w, \"<pre class='fn'>{vis}{purity}fn {name}{generics}{decl}</pre>\",\n            vis = VisSpace(it.visibility),\n+           purity = PuritySpace(f.purity),\n            name = it.name.get_ref().as_slice(),\n            generics = f.generics,\n            decl = f.decl);"}, {"sha": "c4b9b9efe566eb78a6e3c6e6792ae7e6303112bb", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=acab4a8c8e3aef66a279d2d7f7c55ace2cece9fc", "patch": "@@ -75,7 +75,7 @@ impl RustdocVisitor {\n             }\n         }\n \n-        fn visit_fn(item: &ast::item, fd: &ast::fn_decl, _purity: &ast::purity,\n+        fn visit_fn(item: &ast::item, fd: &ast::fn_decl, purity: &ast::purity,\n                      _abi: &AbiSet, gen: &ast::Generics) -> Function {\n             debug!(\"Visiting fn\");\n             Function {\n@@ -86,6 +86,7 @@ impl RustdocVisitor {\n                 name: item.ident,\n                 where: item.span,\n                 generics: gen.clone(),\n+                purity: *purity,\n             }\n         }\n "}]}