{"sha": "8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZmIzMWVlOTcyNWM1OGY1ZGQyZjJiM2UzY2U5NTkyZGI0OTk3NGY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-21T12:39:56Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-21T12:39:56Z"}, "message": "doc nits", "tree": {"sha": "7375349a1671812bfa524ef385512b471afe2ca3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7375349a1671812bfa524ef385512b471afe2ca3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXaTWcAAoJEFbW7qD8Z6xG3vMQAKnMqWAJ2k+6O/GTQyO5yAeg\nNBRWya3NUj/+n4ErbYGik6MVzEZ7PmWwYaHWAdbFF3gjH1Pfnx7WQ30tH59gYGUm\nASjue8SKSnylO5sre8k+UzlXhtqWGLb5ISvr1vFEAGc33IsQKYxFZ//cb2CK8UqV\n2ckVBBgVCy5dSP093ihAIvmUfJyCNDPYngjE79wFiXauMEY+LUTFeycVxnv6GtfH\nAXJkY+RA7urc+UVdwAosgmtlz9nLpalWl4T1U8Nm2mz2psiqSTX3Bco/Qnee6Hc/\n+Apgl0CuRRd3thtvZaugPUJrorLBigdGokTmdRqVmvWf/OiMhbx/wVlFYA8K6BZx\ntziRmjnyvAY91sS+66+YRBPGuUWKiyDgInmKA0qvQ/5PD5RG9uw9q/P1YU976z/B\nZP9s3LFSzKBaN+gElXKHqAB0w4SbSqslMS4T5wuxiac/qUfoEv18LK9dabZX/FC7\nseMn13TfD2lUzgK323bEyW0LQLDZjbXEVAm+Bafu8iTfv38BQYFCYRow3wWfoBut\n88QD89FcmmLnyeUf5YDxe1cEFD3u4ypEt1qXHP7xFELRh0IERqk14or89g48G3C1\ndZZMdEGis5EpFQvT0JEbC8IACmnAyjWOy+q9C0dhluQfJWiWyUSXvVEY2ep52emo\nI0igsSXWvSm0027O4MeX\n=P2Tw\n-----END PGP SIGNATURE-----", "payload": "tree 7375349a1671812bfa524ef385512b471afe2ca3\nparent f5dfcd694bfd9922ee94f59465e31200310a6a39\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466512796 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466512796 +0200\n\ndoc nits"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f", "html_url": "https://github.com/rust-lang/rust/commit/8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5dfcd694bfd9922ee94f59465e31200310a6a39", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5dfcd694bfd9922ee94f59465e31200310a6a39", "html_url": "https://github.com/rust-lang/rust/commit/f5dfcd694bfd9922ee94f59465e31200310a6a39"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f3a073521be57699cbf33f3461d5e28ead515fe4", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=8bfb31ee9725c58f5dd2f2b3e3ce9592db49974f", "patch": "@@ -858,7 +858,7 @@ fn lint_map_unwrap_or_else(cx: &LateContext, expr: &hir::Expr, map_args: &Method\n \n #[allow(ptr_arg)]\n // Type of MethodArgs is potentially a Vec\n-/// lint use of `filter().next() for Iterators`\n+/// lint use of `filter().next()` for `Iterators`\n fn lint_filter_next(cx: &LateContext, expr: &hir::Expr, filter_args: &MethodArgs) {\n     // lint if caller of `.filter().next()` is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {\n@@ -880,7 +880,7 @@ fn lint_filter_next(cx: &LateContext, expr: &hir::Expr, filter_args: &MethodArgs\n }\n \n // Type of MethodArgs is potentially a Vec\n-/// lint use of `filter().map() for Iterators`\n+/// lint use of `filter().map()` for `Iterators`\n fn lint_filter_map(cx: &LateContext, expr: &hir::Expr, _filter_args: &MethodArgs, _map_args: &MethodArgs) {\n     // lint if caller of `.filter().map()` is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {\n@@ -891,7 +891,7 @@ fn lint_filter_map(cx: &LateContext, expr: &hir::Expr, _filter_args: &MethodArgs\n }\n \n // Type of MethodArgs is potentially a Vec\n-/// lint use of `filter().flat_map() for Iterators`\n+/// lint use of `filter().flat_map()` for `Iterators`\n fn lint_filter_flat_map(cx: &LateContext, expr: &hir::Expr, _filter_args: &MethodArgs, _map_args: &MethodArgs) {\n     // lint if caller of `.filter().flat_map()` is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {\n@@ -902,7 +902,7 @@ fn lint_filter_flat_map(cx: &LateContext, expr: &hir::Expr, _filter_args: &Metho\n }\n \n // Type of MethodArgs is potentially a Vec\n-/// lint use of `filter_map().flat_map() for Iterators`\n+/// lint use of `filter_map().flat_map()` for `Iterators`\n fn lint_filter_map_flat_map(cx: &LateContext, expr: &hir::Expr, _filter_args: &MethodArgs, _map_args: &MethodArgs) {\n     // lint if caller of `.filter_map().flat_map()` is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {"}]}