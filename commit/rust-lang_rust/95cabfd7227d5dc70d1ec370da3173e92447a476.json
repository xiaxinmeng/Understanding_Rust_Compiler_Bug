{"sha": "95cabfd7227d5dc70d1ec370da3173e92447a476", "node_id": "C_kwDOAAsO6NoAKDk1Y2FiZmQ3MjI3ZDVkYzcwZDFlYzM3MGRhMzE3M2U5MjQ0N2E0NzY", "commit": {"author": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-04T01:48:08Z"}, "committer": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-04T01:48:08Z"}, "message": "Correctly pass through mutable references when extracting a function", "tree": {"sha": "f2cb60ab5ec0fe4f2b8c0d891ae292b39ce15691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2cb60ab5ec0fe4f2b8c0d891ae292b39ce15691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95cabfd7227d5dc70d1ec370da3173e92447a476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95cabfd7227d5dc70d1ec370da3173e92447a476", "html_url": "https://github.com/rust-lang/rust/commit/95cabfd7227d5dc70d1ec370da3173e92447a476", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95cabfd7227d5dc70d1ec370da3173e92447a476/comments", "author": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7409880a07803c34590ad162d7854061145c6eae", "url": "https://api.github.com/repos/rust-lang/rust/commits/7409880a07803c34590ad162d7854061145c6eae", "html_url": "https://github.com/rust-lang/rust/commit/7409880a07803c34590ad162d7854061145c6eae"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "8c7fb03f7af61b2fd4779fbd542d38a4896b2170", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/95cabfd7227d5dc70d1ec370da3173e92447a476/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cabfd7227d5dc70d1ec370da3173e92447a476/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=95cabfd7227d5dc70d1ec370da3173e92447a476", "patch": "@@ -878,7 +878,7 @@ impl FunctionBody {\n                 // We can move the value into the function call if it's not used after the call,\n                 // if the var is not used but defined outside a loop we are extracting from we can't move it either\n                 // as the function will reuse it in the next iteration.\n-                let move_local = !has_usages && defined_outside_parent_loop;\n+                let move_local = (!has_usages && defined_outside_parent_loop) || ty.is_reference();\n                 Param { var, ty, move_local, requires_mut, is_copy }\n             })\n             .collect()\n@@ -4332,6 +4332,43 @@ fn foo() {\n fn $0fun_name(a: _) -> _ {\n     a\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_jeroen() {\n+        check_assist(\n+            extract_function,\n+            r#\"\n+pub struct Foo {\n+    field: u32,\n+}\n+\n+pub fn testfn(arg: &mut Foo) {\n+    $0arg.field = 8; // write access\n+    println!(\"{}\", arg.field); // read access$0\n+    // Simulating access after the extracted portion\n+    arg.field = 16; // write access\n+    println!(\"{}\", arg.field); // read access\n+}\n+\"#,\n+            r#\"\n+pub struct Foo {\n+    field: u32,\n+}\n+\n+pub fn testfn(arg: &mut Foo) {\n+    fun_name(arg); // read access\n+    // Simulating access after the extracted portion\n+    arg.field = 16; // write access\n+    println!(\"{}\", arg.field); // read access\n+}\n+\n+fn $0fun_name(arg: &mut Foo) {\n+    arg.field = 8;\n+    println!(\"{}\", arg.field);\n+}\n \"#,\n         );\n     }"}]}