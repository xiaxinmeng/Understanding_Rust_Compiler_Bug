{"sha": "d54634bd7cde07b276e431fc167119e13a8aef81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NDYzNGJkN2NkZTA3YjI3NmU0MzFmYzE2NzExOWUxM2E4YWVmODE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-04T09:35:17Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-04T09:44:08Z"}, "message": "Use recover_comment_removed in rewrite_static", "tree": {"sha": "b0ab47bc95c3a0316534dcd2f69fc7506e986a7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0ab47bc95c3a0316534dcd2f69fc7506e986a7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d54634bd7cde07b276e431fc167119e13a8aef81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d54634bd7cde07b276e431fc167119e13a8aef81", "html_url": "https://github.com/rust-lang/rust/commit/d54634bd7cde07b276e431fc167119e13a8aef81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d54634bd7cde07b276e431fc167119e13a8aef81/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "html_url": "https://github.com/rust-lang/rust/commit/6f1cb950d6fc91cf2938fc4aea300ed12d49b735"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "10359f53bdd69c7f82f6ecd509f37907fb1e6e9b", "filename": "src/items.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d54634bd7cde07b276e431fc167119e13a8aef81/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54634bd7cde07b276e431fc167119e13a8aef81/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=d54634bd7cde07b276e431fc167119e13a8aef81", "patch": "@@ -18,7 +18,7 @@ use utils::{format_mutability, format_visibility, contains_skip, end_typaram, wr\n use lists::{write_list, itemize_list, ListItem, ListFormatting, SeparatorTactic, list_helper,\n             DefinitiveListTactic, ListTactic, definitive_tactic, format_item_list};\n use expr::{is_empty_block, is_simple_block_stmt, rewrite_assign_rhs, type_annotation_separator};\n-use comment::{FindUncommented, contains_comment, rewrite_comment};\n+use comment::{FindUncommented, contains_comment, rewrite_comment, recover_comment_removed};\n use visitor::FmtVisitor;\n use rewrite::{Rewrite, RewriteContext};\n use config::{Config, IndentStyle, Density, ReturnIndent, BraceStyle, Style, TypeDensity};\n@@ -1299,6 +1299,7 @@ pub fn rewrite_static(prefix: &str,\n                       mutability: ast::Mutability,\n                       expr_opt: Option<&ptr::P<ast::Expr>>,\n                       offset: Indent,\n+                      span: Span,\n                       context: &RewriteContext)\n                       -> Option<String> {\n     let type_annotation_spacing = type_annotation_spacing(context.config);\n@@ -1325,7 +1326,17 @@ pub fn rewrite_static(prefix: &str,\n                            lhs,\n                            expr,\n                            Shape::legacy(remaining_width, offset.block_only()))\n-            .map(|s| s + \";\")\n+            .and_then(|res| {\n+                recover_comment_removed(res,\n+                                        span,\n+                                        context,\n+                                        Shape {\n+                                            width: context.config.max_width(),\n+                                            indent: offset,\n+                                            offset: offset.alignment,\n+                                        })\n+            })\n+            .map(|s| if s.ends_with(';') { s } else { s + \";\" })\n     } else {\n         let lhs = format!(\"{}{};\", prefix, ty_str);\n         Some(lhs)"}, {"sha": "5f594aad8986a63649c834839dd3f61bccb9f24a", "filename": "src/visitor.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d54634bd7cde07b276e431fc167119e13a8aef81/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54634bd7cde07b276e431fc167119e13a8aef81/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=d54634bd7cde07b276e431fc167119e13a8aef81", "patch": "@@ -322,6 +322,7 @@ impl<'a> FmtVisitor<'a> {\n                                              mutability,\n                                              Some(expr),\n                                              self.block_indent,\n+                                             item.span,\n                                              &self.get_context());\n                 self.push_rewrite(item.span, rewrite);\n             }\n@@ -333,6 +334,7 @@ impl<'a> FmtVisitor<'a> {\n                                              ast::Mutability::Immutable,\n                                              Some(expr),\n                                              self.block_indent,\n+                                             item.span,\n                                              &self.get_context());\n                 self.push_rewrite(item.span, rewrite);\n             }\n@@ -383,6 +385,7 @@ impl<'a> FmtVisitor<'a> {\n                                              ast::Mutability::Immutable,\n                                              expr_opt.as_ref(),\n                                              self.block_indent,\n+                                             ti.span,\n                                              &self.get_context());\n                 self.push_rewrite(ti.span, rewrite);\n             }\n@@ -434,6 +437,7 @@ impl<'a> FmtVisitor<'a> {\n                                              ast::Mutability::Immutable,\n                                              Some(expr),\n                                              self.block_indent,\n+                                             ii.span,\n                                              &self.get_context());\n                 self.push_rewrite(ii.span, rewrite);\n             }"}, {"sha": "f847f2c69def4f9f40d1d48d8b3b4b70ed1e6cd7", "filename": "tests/target/comment-inside-const.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d54634bd7cde07b276e431fc167119e13a8aef81/tests%2Ftarget%2Fcomment-inside-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54634bd7cde07b276e431fc167119e13a8aef81/tests%2Ftarget%2Fcomment-inside-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomment-inside-const.rs?ref=d54634bd7cde07b276e431fc167119e13a8aef81", "patch": "@@ -0,0 +1,9 @@\n+fn issue982() {\n+    const SOME_CONSTANT: u32 =\n+        // Explanation why SOME_CONSTANT needs FLAG_A to be set.\n+        FLAG_A |\n+        // Explanation why SOME_CONSTANT needs FLAG_B to be set.\n+        FLAG_B |\n+        // Explanation why SOME_CONSTANT needs FLAG_C to be set.\n+        FLAG_C;\n+}"}]}