{"sha": "4dbec2d5453dacdc699a5801114fcd7a3fbcc635", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYmVjMmQ1NDUzZGFjZGM2OTlhNTgwMTExNGZjZDdhM2ZiY2M2MzU=", "commit": {"author": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-04-05T18:47:06Z"}, "committer": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-04-05T18:47:06Z"}, "message": "Remove dead legacy macro expansion code", "tree": {"sha": "a623b76c70597db8ff226bec0e3aca14e0a92ff2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a623b76c70597db8ff226bec0e3aca14e0a92ff2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dbec2d5453dacdc699a5801114fcd7a3fbcc635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbec2d5453dacdc699a5801114fcd7a3fbcc635", "html_url": "https://github.com/rust-lang/rust/commit/4dbec2d5453dacdc699a5801114fcd7a3fbcc635", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dbec2d5453dacdc699a5801114fcd7a3fbcc635/comments", "author": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97dbbad482e3382da027f2f151354445d8af029a", "url": "https://api.github.com/repos/rust-lang/rust/commits/97dbbad482e3382da027f2f151354445d8af029a", "html_url": "https://github.com/rust-lang/rust/commit/97dbbad482e3382da027f2f151354445d8af029a"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "f4e2bda86ed3bb5b9e941aa15a45e745933f5751", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4dbec2d5453dacdc699a5801114fcd7a3fbcc635/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dbec2d5453dacdc699a5801114fcd7a3fbcc635/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=4dbec2d5453dacdc699a5801114fcd7a3fbcc635", "patch": "@@ -207,7 +207,7 @@ struct MacroDirective {\n \n #[derive(Clone, Debug, Eq, PartialEq)]\n enum MacroDirectiveKind {\n-    FnLike { ast_id: AstIdWithPath<ast::MacroCall>, legacy: Option<MacroCallId> },\n+    FnLike { ast_id: AstIdWithPath<ast::MacroCall> },\n     Derive { ast_id: AstIdWithPath<ast::Item> },\n }\n \n@@ -783,13 +783,7 @@ impl DefCollector<'_> {\n         let mut res = ReachedFixedPoint::Yes;\n         macros.retain(|directive| {\n             match &directive.kind {\n-                MacroDirectiveKind::FnLike { ast_id, legacy } => {\n-                    if let Some(call_id) = legacy {\n-                        res = ReachedFixedPoint::No;\n-                        resolved.push((directive.module_id, *call_id, directive.depth));\n-                        return false;\n-                    }\n-\n+                MacroDirectiveKind::FnLike { ast_id } => {\n                     match macro_call_as_call_id(\n                         ast_id,\n                         self.db,\n@@ -1493,7 +1487,7 @@ impl ModCollector<'_, '_> {\n         self.def_collector.unexpanded_macros.push(MacroDirective {\n             module_id: self.module_id,\n             depth: self.macro_depth + 1,\n-            kind: MacroDirectiveKind::FnLike { ast_id, legacy: None },\n+            kind: MacroDirectiveKind::FnLike { ast_id },\n         });\n     }\n "}]}