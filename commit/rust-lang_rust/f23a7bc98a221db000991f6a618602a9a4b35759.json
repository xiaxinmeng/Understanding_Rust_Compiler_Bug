{"sha": "f23a7bc98a221db000991f6a618602a9a4b35759", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyM2E3YmM5OGEyMjFkYjAwMDk5MWY2YTYxODYwMmE5YTRiMzU3NTk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-27T17:16:57Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-02T18:01:01Z"}, "message": "move to only def-id passes\n\nthis temporary disables `inline`", "tree": {"sha": "dca399327c1884b00704138a66cb9d48bc28cc53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dca399327c1884b00704138a66cb9d48bc28cc53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f23a7bc98a221db000991f6a618602a9a4b35759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f23a7bc98a221db000991f6a618602a9a4b35759", "html_url": "https://github.com/rust-lang/rust/commit/f23a7bc98a221db000991f6a618602a9a4b35759", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f23a7bc98a221db000991f6a618602a9a4b35759/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "668886a6ccaf294bf0ab3742e693997ce39b716b", "url": "https://api.github.com/repos/rust-lang/rust/commits/668886a6ccaf294bf0ab3742e693997ce39b716b", "html_url": "https://github.com/rust-lang/rust/commit/668886a6ccaf294bf0ab3742e693997ce39b716b"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "8ecfbfdb5c3ef35ab8f41d62979b43d9c81fe679", "filename": "src/librustc/mir/transform.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f23a7bc98a221db000991f6a618602a9a4b35759/src%2Flibrustc%2Fmir%2Ftransform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a7bc98a221db000991f6a618602a9a4b35759/src%2Flibrustc%2Fmir%2Ftransform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftransform.rs?ref=f23a7bc98a221db000991f6a618602a9a4b35759", "patch": "@@ -93,7 +93,7 @@ pub fn default_name<T: ?Sized>() -> Cow<'static, str> {\n pub trait PassHook {\n     fn on_mir_pass<'a, 'tcx>(&self,\n                              tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                             pass: &Pass,\n+                             pass_name: &str,\n                              pass_num: usize,\n                              is_after: bool);\n }\n@@ -173,7 +173,7 @@ pub struct Passes {\n \n #[derive(Clone)]\n struct PassSet {\n-    passes: Vec<Rc<Pass>>,\n+    passes: Vec<Rc<DefIdPass>>,\n }\n \n /// The number of \"pass sets\" that we have:\n@@ -208,19 +208,23 @@ impl<'a, 'tcx> Passes {\n         // NB: passes are numbered from 1, since \"construction\" is zero.\n         for (pass, pass_num) in set.passes.iter().zip(start_num + 1..) {\n             for hook in &self.pass_hooks {\n-                hook.on_mir_pass(tcx, &**pass, pass_num, false);\n+                hook.on_mir_pass(tcx, &pass.name(), pass_num, false);\n             }\n \n-            time(tcx.sess.time_passes(), &*pass.name(), || pass.run_pass(tcx));\n+            time(tcx.sess.time_passes(), &*pass.name(), || {\n+                for &def_id in tcx.mir_keys(LOCAL_CRATE).iter() {\n+                    pass.run_pass(tcx, def_id);\n+                }\n+            });\n \n             for hook in &self.pass_hooks {\n-                hook.on_mir_pass(tcx, &**pass, pass_num, true);\n+                hook.on_mir_pass(tcx, &pass.name(), pass_num, true);\n             }\n         }\n     }\n \n     /// Pushes a built-in pass.\n-    pub fn push_pass<T: Pass + 'static>(&mut self, set: usize, pass: T) {\n+    pub fn push_pass<T: DefIdPass + 'static>(&mut self, set: usize, pass: T) {\n         self.sets[set].passes.push(Rc::new(pass));\n     }\n "}, {"sha": "4c984559428bfdd631482045989b53c39982fa51", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a7bc98a221db000991f6a618602a9a4b35759/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a7bc98a221db000991f6a618602a9a4b35759/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=f23a7bc98a221db000991f6a618602a9a4b35759", "patch": "@@ -929,7 +929,7 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n     passes.push_pass(MIR_OPTIMIZED, mir::transform::simplify::SimplifyCfg::new(\"elaborate-drops\"));\n \n     // No lifetime analysis based on borrowing can be done from here on out.\n-    passes.push_pass(MIR_OPTIMIZED, mir::transform::inline::Inline);\n+    // passes.push_pass(MIR_OPTIMIZED, mir::transform::inline::Inline); // TODO re-enable\n     passes.push_pass(MIR_OPTIMIZED, mir::transform::instcombine::InstCombine);\n     passes.push_pass(MIR_OPTIMIZED, mir::transform::deaggregator::Deaggregator);\n     passes.push_pass(MIR_OPTIMIZED, mir::transform::copy_prop::CopyPropagation);"}, {"sha": "62b480494c3ecc2b3fc601ddf7425593ed2302c2", "filename": "src/librustc_mir/transform/dump_mir.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f23a7bc98a221db000991f6a618602a9a4b35759/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a7bc98a221db000991f6a618602a9a4b35759/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs?ref=f23a7bc98a221db000991f6a618602a9a4b35759", "patch": "@@ -50,7 +50,7 @@ impl PassHook for DumpMir {\n     fn on_mir_pass<'a, 'tcx>(\n         &self,\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-        pass: &Pass,\n+        pass_name: &str,\n         pass_num: usize,\n         is_after: bool)\n     {\n@@ -66,7 +66,7 @@ impl PassHook for DumpMir {\n             mir_util::dump_mir(\n                 tcx,\n                 pass_num,\n-                &*pass.name(),\n+                &pass_name,\n                 &Disambiguator { is_after },\n                 source,\n                 &mir"}]}