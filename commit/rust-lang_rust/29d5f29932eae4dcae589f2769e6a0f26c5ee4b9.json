{"sha": "29d5f29932eae4dcae589f2769e6a0f26c5ee4b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZDVmMjk5MzJlYWU0ZGNhZTU4OWYyNzY5ZTZhMGYyNmM1ZWU0Yjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-12T13:09:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-12T13:19:36Z"}, "message": "fix: don't spam repeated error messages when `cargo check` fails\n\nConceptually, using a *message* here is wrong, because this is a\n\"status\", rather than \"point in time\" thing. But statuses are an LSP\nextension, while messages are stable. As a compromise, send message only\nfor more critical `metadata` failures, and only once per state change.", "tree": {"sha": "59dae2f1ee03ec35ab95f05ea4b5bb2506162652", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59dae2f1ee03ec35ab95f05ea4b5bb2506162652"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29d5f29932eae4dcae589f2769e6a0f26c5ee4b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29d5f29932eae4dcae589f2769e6a0f26c5ee4b9", "html_url": "https://github.com/rust-lang/rust/commit/29d5f29932eae4dcae589f2769e6a0f26c5ee4b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29d5f29932eae4dcae589f2769e6a0f26c5ee4b9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a526d0a4b78b29fec4c2e8d5608ceaeec128f794", "url": "https://api.github.com/repos/rust-lang/rust/commits/a526d0a4b78b29fec4c2e8d5608ceaeec128f794", "html_url": "https://github.com/rust-lang/rust/commit/a526d0a4b78b29fec4c2e8d5608ceaeec128f794"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "e51532d880f9f0190485a7daa5cdde1c61f76198", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/29d5f29932eae4dcae589f2769e6a0f26c5ee4b9/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29d5f29932eae4dcae589f2769e6a0f26c5ee4b9/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=29d5f29932eae4dcae589f2769e6a0f26c5ee4b9", "patch": "@@ -100,10 +100,6 @@ impl GlobalState {\n         }\n     }\n     pub(crate) fn report_new_status_if_needed(&mut self) {\n-        if !self.config.server_status_notification() {\n-            return;\n-        }\n-\n         let mut status = lsp_ext::ServerStatusParams {\n             health: lsp_ext::Health::Ok,\n             quiescent: self.is_quiescent(),\n@@ -129,7 +125,14 @@ impl GlobalState {\n \n         if self.last_reported_status.as_ref() != Some(&status) {\n             self.last_reported_status = Some(status.clone());\n-            self.send_notification::<lsp_ext::ServerStatusNotification>(status);\n+\n+            if let (lsp_ext::Health::Error, Some(message)) = (status.health, &status.message) {\n+                self.show_message(lsp_types::MessageType::Error, message.clone());\n+            }\n+\n+            if self.config.server_status_notification() {\n+                self.send_notification::<lsp_ext::ServerStatusNotification>(status);\n+            }\n         }\n     }\n \n@@ -225,15 +228,13 @@ impl GlobalState {\n \n         if let Some(error_message) = self.fetch_workspace_error() {\n             log::error!(\"failed to switch workspaces: {}\", error_message);\n-            self.show_message(lsp_types::MessageType::Error, error_message);\n             if !self.workspaces.is_empty() {\n                 return;\n             }\n         }\n \n         if let Some(error_message) = self.build_data_error() {\n             log::error!(\"failed to switch build data: {}\", error_message);\n-            self.show_message(lsp_types::MessageType::Error, error_message);\n         }\n \n         let workspaces = self"}]}