{"sha": "9257f5aad02b65665a6e23e5b92938548302e129", "node_id": "C_kwDOAAsO6NoAKDkyNTdmNWFhZDAyYjY1NjY1YTZlMjNlNWI5MjkzODU0ODMwMmUxMjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-21T19:49:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-21T19:49:51Z"}, "message": "Auto merge of #94530 - tmiasko:alignment-impls, r=dtolnay\n\nImplement Copy, Clone, PartialEq and Eq for core::fmt::Alignment\n\nAlignment is a fieldless exhaustive enum, so it is already possible to\nclone and compare it by matching, but it is inconvenient to do so. For\nexample, if one would like to create a struct describing a formatter\nconfiguration and provide a clone implementation:\n\n```rust\npub struct Format {\n    fill: char,\n    width: Option<usize>,\n    align: fmt::Alignment,\n}\n\nimpl Clone for Format {\n    fn clone(&self) -> Self {\n        Format {\n            align: match self.align {\n                fmt::Alignment::Left => fmt::Alignment::Left,\n                fmt::Alignment::Right => fmt::Alignment::Right,\n                fmt::Alignment::Center => fmt::Alignment::Center,\n            },\n            .. *self\n        }\n    }\n}\n```\n\nDerive Copy, Clone, PartialEq, and Eq for Alignment for convenience.", "tree": {"sha": "af052cd62b50d1fb6a39b3146712cb5e2a5f09d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af052cd62b50d1fb6a39b3146712cb5e2a5f09d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9257f5aad02b65665a6e23e5b92938548302e129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9257f5aad02b65665a6e23e5b92938548302e129", "html_url": "https://github.com/rust-lang/rust/commit/9257f5aad02b65665a6e23e5b92938548302e129", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9257f5aad02b65665a6e23e5b92938548302e129/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb4781aa277b6746e6f072252ddad95c59e94fd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4781aa277b6746e6f072252ddad95c59e94fd1", "html_url": "https://github.com/rust-lang/rust/commit/bb4781aa277b6746e6f072252ddad95c59e94fd1"}, {"sha": "a8acfa89864a4c1f479d81e3effa3a7101e7c39a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8acfa89864a4c1f479d81e3effa3a7101e7c39a", "html_url": "https://github.com/rust-lang/rust/commit/a8acfa89864a4c1f479d81e3effa3a7101e7c39a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dde9bc383d23c27cc45886a35b6c42cd39c19b36", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9257f5aad02b65665a6e23e5b92938548302e129/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9257f5aad02b65665a6e23e5b92938548302e129/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=9257f5aad02b65665a6e23e5b92938548302e129", "patch": "@@ -21,7 +21,7 @@ mod num;\n #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"Alignment\")]\n /// Possible alignments returned by `Formatter::align`\n-#[derive(Debug)]\n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum Alignment {\n     #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n     /// Indication that contents should be left-aligned."}]}