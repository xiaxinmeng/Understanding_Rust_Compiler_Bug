{"sha": "6faf1330aaa42f9f524b7f84a881111a536ca10d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYWYxMzMwYWFhNDJmOWY1MjRiN2Y4NGE4ODExMTFhNTM2Y2ExMGQ=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-30T12:11:53Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2019-01-07T13:37:28Z"}, "message": "Move a hint to an error message in cast_ref_to_mut lint\n\nThis matches mem::transmute::<&T, &mut T> lint in rustc.", "tree": {"sha": "c8b7a0a7350a1314f2755d1b45362c5498cdf2e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8b7a0a7350a1314f2755d1b45362c5498cdf2e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6faf1330aaa42f9f524b7f84a881111a536ca10d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6faf1330aaa42f9f524b7f84a881111a536ca10d", "html_url": "https://github.com/rust-lang/rust/commit/6faf1330aaa42f9f524b7f84a881111a536ca10d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6faf1330aaa42f9f524b7f84a881111a536ca10d/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cab4d15a2e95223ad8d812e5f0932e31242f665", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cab4d15a2e95223ad8d812e5f0932e31242f665", "html_url": "https://github.com/rust-lang/rust/commit/1cab4d15a2e95223ad8d812e5f0932e31242f665"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "a9fb595e708cc19650f1f4b56b30a2c1fa79cacf", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6faf1330aaa42f9f524b7f84a881111a536ca10d/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6faf1330aaa42f9f524b7f84a881111a536ca10d/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=6faf1330aaa42f9f524b7f84a881111a536ca10d", "patch": "@@ -16,8 +16,8 @@ use crate::utils::paths;\n use crate::utils::{\n     clip, comparisons, differing_macro_contexts, higher, in_constant, in_macro, int_bits, last_path_segment,\n     match_def_path, match_path, multispan_sugg, opt_def_id, same_tys, sext, snippet, snippet_opt,\n-    snippet_with_applicability, span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then,\n-    span_note_and_lint, unsext, AbsolutePathBuffer,\n+    snippet_with_applicability, span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then, unsext,\n+    AbsolutePathBuffer,\n };\n use if_chain::if_chain;\n use rustc::hir;\n@@ -2291,13 +2291,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RefToMut {\n             if let TyKind::Ptr(MutTy { mutbl: Mutability::MutImmutable, .. }) = t.node;\n             if let Ref(..) = cx.tables.node_id_to_type(e.hir_id).sty;\n             then {\n-                span_note_and_lint(\n+                span_lint(\n                     cx,\n                     CAST_REF_TO_MUT,\n                     expr.span,\n-                    \"casting immutable reference to a mutable reference\",\n-                    expr.span,\n-                    \"consider implementing `UnsafeCell` instead\",\n+                    \"casting &T to &mut T may cause undefined behaviour, consider instead using an UnsafeCell\",\n                 );\n             }\n         }"}, {"sha": "448a66cfcce051702313210d4baab22cef90f6ab", "filename": "tests/ui/cast_ref_to_mut.stderr", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6faf1330aaa42f9f524b7f84a881111a536ca10d/tests%2Fui%2Fcast_ref_to_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6faf1330aaa42f9f524b7f84a881111a536ca10d/tests%2Fui%2Fcast_ref_to_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_ref_to_mut.stderr?ref=6faf1330aaa42f9f524b7f84a881111a536ca10d", "patch": "@@ -1,27 +1,22 @@\n-error: casting immutable reference to a mutable reference\n+error: casting &T to &mut T may cause undefined behaviour, consider instead using an UnsafeCell\n   --> $DIR/cast_ref_to_mut.rs:18:9\n    |\n LL |         (*(a as *const _ as *mut String)).push_str(\" world\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-ref-to-mut` implied by `-D warnings`\n-   = note: consider implementing `UnsafeCell` instead\n \n-error: casting immutable reference to a mutable reference\n+error: casting &T to &mut T may cause undefined behaviour, consider instead using an UnsafeCell\n   --> $DIR/cast_ref_to_mut.rs:19:9\n    |\n LL |         *(a as *const _ as *mut _) = String::from(\"Replaced\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: consider implementing `UnsafeCell` instead\n \n-error: casting immutable reference to a mutable reference\n+error: casting &T to &mut T may cause undefined behaviour, consider instead using an UnsafeCell\n   --> $DIR/cast_ref_to_mut.rs:20:9\n    |\n LL |         *(a as *const _ as *mut String) += \" world\";\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: consider implementing `UnsafeCell` instead\n \n error: aborting due to 3 previous errors\n "}]}