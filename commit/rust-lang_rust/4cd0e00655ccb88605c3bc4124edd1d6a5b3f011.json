{"sha": "4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "node_id": "C_kwDOAAsO6NoAKDRjZDBlMDA2NTVjY2I4ODYwNWMzYmM0MTI0ZWRkMWQ2YTViM2YwMTE", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-04-17T07:42:45Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-04-17T07:42:45Z"}, "message": "avoid including dry run steps in the build metrics\n\nIncluding steps executed during the dry run will result in a duplication\nof all the steps in the build metrics, which just adds noise.", "tree": {"sha": "8d48767d8fd8d9275330e9a5cf495000851e065d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d48767d8fd8d9275330e9a5cf495000851e065d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmQ8+J4ACgkQzXazX3c0\ndp7Flw/7BW/ClsKBDn4d+JeMY5TuxMiPaDyTh1LJuZEDCdk2TjNcxHYiyhPiJsSB\n57eluY6WOftOYi/Rbq1c5l5QNTgAVm4gqMOsa6X/o0AQs/XJMknMzK/OUzjSSU+n\nwTzdxhQuUPrUgUF08beZchc5IpO7fW2BNjRJysP3wRMaUYc6nU5YQAA/aYEJl2XA\npAEWxguRweJ1cQMhrcxtemiW8PCQYbh9M7xxY4bczfv7YPo3IsFf9WZBUXqPLP8N\n7dUySMcoBQ50T61KL1EaFIIH7pHU77PioucesTrwa7bNkOjy0ntasfxImtIqQCR3\nclIkOD6vmOaYTazySxakTgoqI+gsUM8rH6pvDyZvzB3YoYrfNbL0JJV9X+ODCVyg\nc3jt16xjU6F3xtgH4M+mVAZDMPhU3pgrvQ83N17u397Xxg7QXt9YGJewjzh+pgew\nwyvaJt4YGCLOKwFheQym5I4csUYupaHZJblFcyiVhk/cziRui8hjSzjMiamu2/UZ\ne8S49dbStekOpwM4iRfsQgaBnHHbrXafdk04O5Lw9PGxXY4qJ2IHMpNZczsqkZrd\n1zPVeheKYdUSoKCphbExGZvhd8zJqvJ72U8up1nvWY5nvtKmheoc80zkLNk7W7D+\nAgD3VuP/NKAcht/davKy6C7e8D6L3SF5J0T0s8ONxOAmRAT6kAk=\n=iDi4\n-----END PGP SIGNATURE-----", "payload": "tree 8d48767d8fd8d9275330e9a5cf495000851e065d\nparent d37e2f74afd131cda7b08520d37426bfbb622b5c\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1681717365 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1681717365 +0200\n\navoid including dry run steps in the build metrics\n\nIncluding steps executed during the dry run will result in a duplication\nof all the steps in the build metrics, which just adds noise.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "html_url": "https://github.com/rust-lang/rust/commit/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d37e2f74afd131cda7b08520d37426bfbb622b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d37e2f74afd131cda7b08520d37426bfbb622b5c", "html_url": "https://github.com/rust-lang/rust/commit/d37e2f74afd131cda7b08520d37426bfbb622b5c"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "3a50bf5c4dbaf841e62573514b35d65ed2168b67", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "patch": "@@ -2010,7 +2010,7 @@ impl<'a> Builder<'a> {\n         }\n \n         #[cfg(feature = \"build-metrics\")]\n-        self.metrics.enter_step(&step);\n+        self.metrics.enter_step(&step, self);\n \n         let (out, dur) = {\n             let start = Instant::now();\n@@ -2036,7 +2036,7 @@ impl<'a> Builder<'a> {\n         }\n \n         #[cfg(feature = \"build-metrics\")]\n-        self.metrics.exit_step();\n+        self.metrics.exit_step(self);\n \n         {\n             let mut stack = self.stack.borrow_mut();"}, {"sha": "e19d56ccd6adca44558add0c5ac2962118bc5848", "filename": "src/bootstrap/metrics.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011/src%2Fbootstrap%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011/src%2Fbootstrap%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetrics.rs?ref=4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "patch": "@@ -4,7 +4,7 @@\n //! As this module requires additional dependencies not present during local builds, it's cfg'd\n //! away whenever the `build.metrics` config option is not set to `true`.\n \n-use crate::builder::Step;\n+use crate::builder::{Builder, Step};\n use crate::util::t;\n use crate::Build;\n use serde_derive::{Deserialize, Serialize};\n@@ -33,7 +33,12 @@ impl BuildMetrics {\n         BuildMetrics { state }\n     }\n \n-    pub(crate) fn enter_step<S: Step>(&self, step: &S) {\n+    pub(crate) fn enter_step<S: Step>(&self, step: &S, builder: &Builder<'_>) {\n+        // Do not record dry runs, as they'd be duplicates of the actual steps.\n+        if builder.config.dry_run() {\n+            return;\n+        }\n+\n         let mut state = self.state.borrow_mut();\n \n         // Consider all the stats gathered so far as the parent's.\n@@ -56,7 +61,12 @@ impl BuildMetrics {\n         });\n     }\n \n-    pub(crate) fn exit_step(&self) {\n+    pub(crate) fn exit_step(&self, builder: &Builder<'_>) {\n+        // Do not record dry runs, as they'd be duplicates of the actual steps.\n+        if builder.config.dry_run() {\n+            return;\n+        }\n+\n         let mut state = self.state.borrow_mut();\n \n         self.collect_stats(&mut *state);\n@@ -74,7 +84,12 @@ impl BuildMetrics {\n         }\n     }\n \n-    pub(crate) fn record_test(&self, name: &str, outcome: TestOutcome) {\n+    pub(crate) fn record_test(&self, name: &str, outcome: TestOutcome, builder: &Builder<'_>) {\n+        // Do not record dry runs, as they'd be duplicates of the actual steps.\n+        if builder.config.dry_run() {\n+            return;\n+        }\n+\n         let mut state = self.state.borrow_mut();\n         state\n             .running_steps"}, {"sha": "a56db9cccfe5ba254d0d2595b0154a0feccb37fb", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "patch": "@@ -124,6 +124,7 @@ impl<'a> Renderer<'a> {\n                     ignore_reason: reason.map(|s| s.to_string()),\n                 },\n             },\n+            self.builder,\n         );\n \n         if self.builder.config.verbose_tests {"}]}