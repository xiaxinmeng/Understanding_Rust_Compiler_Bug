{"sha": "3dd581b97d051e091037abca62564630d51bfea8", "node_id": "C_kwDOAAsO6NoAKDNkZDU4MWI5N2QwNTFlMDkxMDM3YWJjYTYyNTY0NjMwZDUxYmZlYTg", "commit": {"author": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-12T14:01:53Z"}, "committer": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-12T14:01:53Z"}, "message": "fix: move dir on rename mod", "tree": {"sha": "1756944d38283259d7741f9473d922bc7740aa9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1756944d38283259d7741f9473d922bc7740aa9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dd581b97d051e091037abca62564630d51bfea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dd581b97d051e091037abca62564630d51bfea8", "html_url": "https://github.com/rust-lang/rust/commit/3dd581b97d051e091037abca62564630d51bfea8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dd581b97d051e091037abca62564630d51bfea8/comments", "author": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fe366c649728c4af44ba7c306ba8d1223581a08", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe366c649728c4af44ba7c306ba8d1223581a08", "html_url": "https://github.com/rust-lang/rust/commit/5fe366c649728c4af44ba7c306ba8d1223581a08"}], "stats": {"total": 119, "additions": 106, "deletions": 13}, "files": [{"sha": "b850908ce55e8a9cbc17a37e30699fadea160b84", "filename": "crates/ide/src/rename.rs", "status": "modified", "additions": 71, "deletions": 3, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frename.rs?ref=3dd581b97d051e091037abca62564630d51bfea8", "patch": "@@ -963,15 +963,21 @@ mod fo$0o;\n                         },\n                     },\n                     file_system_edits: [\n-                        MoveFile {\n-                            src: FileId(\n+                        MoveDir {\n+                            src: AnchoredPathBuf {\n+                                anchor: FileId(\n+                                    1,\n+                                ),\n+                                path: \"foo\",\n+                            },\n+                            src_id: FileId(\n                                 1,\n                             ),\n                             dst: AnchoredPathBuf {\n                                 anchor: FileId(\n                                     1,\n                                 ),\n-                                path: \"../foo2/mod.rs\",\n+                                path: \"foo2\",\n                             },\n                         },\n                     ],\n@@ -1108,6 +1114,68 @@ pub mod foo$0;\n         );\n     }\n \n+    #[test]\n+    fn test_rename_mod_recursive() {\n+        check_expect(\n+            \"foo2\",\n+            r#\"\n+//- /lib.rs\n+mod foo$0;\n+\n+//- /foo.rs\n+mod bar;\n+mod corge;\n+\n+//- /foo/bar.rs\n+mod qux;\n+\n+//- /foo/bar/qux.rs\n+mod quux;\n+\n+//- /foo/bar/qux/quux/mod.rs\n+// empty\n+\n+//- /foo/corge.rs\n+// empty\n+\"#,\n+            expect![[r#\"\n+                SourceChange {\n+                    source_file_edits: {\n+                        FileId(\n+                            0,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"foo2\",\n+                                    delete: 4..7,\n+                                },\n+                            ],\n+                        },\n+                    },\n+                    file_system_edits: [\n+                        MoveDir {\n+                            src: AnchoredPathBuf {\n+                                anchor: FileId(\n+                                    1,\n+                                ),\n+                                path: \"foo\",\n+                            },\n+                            src_id: FileId(\n+                                1,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n+                                    1,\n+                                ),\n+                                path: \"foo2\",\n+                            },\n+                        },\n+                    ],\n+                    is_snippet: false,\n+                }\n+            \"#]],\n+        )\n+    }\n     #[test]\n     fn test_rename_mod_ref_by_super() {\n         check("}, {"sha": "b3a0bd277304ed811b5b3d0f864d97250acaab64", "filename": "crates/ide_assists/src/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests.rs?ref=3dd581b97d051e091037abca62564630d51bfea8", "patch": "@@ -162,6 +162,10 @@ fn check(handler: Handler, before: &str, expected: ExpectedResult, assist_label:\n                     FileSystemEdit::MoveFile { src, dst } => {\n                         (dst, db.file_text(src).as_ref().to_owned())\n                     }\n+                    FileSystemEdit::MoveDir { src, src_id, dst } => {\n+                        // temporary placeholder for MoveDir since we are not using MoveDir in ide assists yet.\n+                        (dst, format!(\"{:?}\\n{:?}\", src_id, src))\n+                    }\n                 };\n                 let sr = db.file_source_root(dst.anchor);\n                 let sr = db.source_root(sr);"}, {"sha": "589975406a4ffa2354ad726c3eed365760bf1b22", "filename": "crates/ide_db/src/rename.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide_db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide_db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Frename.rs?ref=3dd581b97d051e091037abca62564630d51bfea8", "patch": "@@ -178,17 +178,23 @@ fn rename_mod(\n     let mut source_change = SourceChange::default();\n \n     let InFile { file_id, value: def_source } = module.definition_source(sema.db);\n-    let file_id = file_id.original_file(sema.db);\n     if let ModuleSource::SourceFile(..) = def_source {\n-        // mod is defined in path/to/dir/mod.rs\n-        let path = if module.is_mod_rs(sema.db) {\n-            format!(\"../{}/mod.rs\", new_name)\n-        } else {\n-            format!(\"{}.rs\", new_name)\n-        };\n-        let dst = AnchoredPathBuf { anchor: file_id, path };\n-        let move_file = FileSystemEdit::MoveFile { src: file_id, dst };\n-        source_change.push_file_system_edit(move_file);\n+        let anchor = file_id.original_file(sema.db);\n+        // not mod.rs and doesn't has children, rename file only\n+        if !module.is_mod_rs(sema.db) && module.children(sema.db).next().is_none() {\n+            let path = format!(\"{}.rs\", new_name);\n+            let dst = AnchoredPathBuf { anchor, path };\n+            source_change.push_file_system_edit(FileSystemEdit::MoveFile { src: anchor, dst })\n+        } else if let Some(mod_name) = module.name(sema.db) {\n+            // is mod.rs or has children, rename dir\n+            let src = AnchoredPathBuf { anchor, path: mod_name.to_string() };\n+            let dst = AnchoredPathBuf { anchor, path: new_name.to_string() };\n+            source_change.push_file_system_edit(FileSystemEdit::MoveDir {\n+                src,\n+                src_id: anchor,\n+                dst,\n+            })\n+        }\n     }\n \n     if let Some(src) = module.declaration_source(sema.db) {"}, {"sha": "8132c73ef26b056becf17018f209828926cc4806", "filename": "crates/ide_db/src/source_change.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd581b97d051e091037abca62564630d51bfea8/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsource_change.rs?ref=3dd581b97d051e091037abca62564630d51bfea8", "patch": "@@ -85,6 +85,7 @@ impl From<FxHashMap<FileId, TextEdit>> for SourceChange {\n pub enum FileSystemEdit {\n     CreateFile { dst: AnchoredPathBuf, initial_contents: String },\n     MoveFile { src: FileId, dst: AnchoredPathBuf },\n+    MoveDir { src: AnchoredPathBuf, src_id: FileId, dst: AnchoredPathBuf },\n }\n \n impl From<FileSystemEdit> for SourceChange {"}, {"sha": "779f7d24ef6da3d75219b12a0cb45fa4d44cf72e", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3dd581b97d051e091037abca62564630d51bfea8/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd581b97d051e091037abca62564630d51bfea8/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=3dd581b97d051e091037abca62564630d51bfea8", "patch": "@@ -864,6 +864,20 @@ pub(crate) fn snippet_text_document_ops(\n                 rename_file,\n             )))\n         }\n+        FileSystemEdit::MoveDir { src, src_id, dst } => {\n+            let old_uri = snap.anchored_path(&src);\n+            let new_uri = snap.anchored_path(&dst);\n+            let mut rename_file =\n+                lsp_types::RenameFile { old_uri, new_uri, options: None, annotation_id: None };\n+            if snap.analysis.is_library_file(src_id).ok() == Some(true)\n+                && snap.config.change_annotation_support()\n+            {\n+                rename_file.annotation_id = Some(outside_workspace_annotation_id())\n+            }\n+            ops.push(lsp_ext::SnippetDocumentChangeOperation::Op(lsp_types::ResourceOp::Rename(\n+                rename_file,\n+            )))\n+        }\n     }\n     Ok(ops)\n }"}]}