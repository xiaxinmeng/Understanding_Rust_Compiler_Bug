{"sha": "422e0d590f2c2879325e00f989d37e8603652c9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMmUwZDU5MGYyYzI4NzkzMjVlMDBmOTg5ZDM3ZTg2MDM2NTJjOWY=", "commit": {"author": {"name": "TheZoq2", "email": "frans.skarman@gmail.com", "date": "2016-08-05T19:00:23Z"}, "committer": {"name": "TheZoq2", "email": "frans.skarman@gmail.com", "date": "2016-08-05T19:07:34Z"}, "message": "Update E0004 to use labels", "tree": {"sha": "8c5f55e2a6fe1391bbc0882df50ff43fa447de24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c5f55e2a6fe1391bbc0882df50ff43fa447de24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/422e0d590f2c2879325e00f989d37e8603652c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/422e0d590f2c2879325e00f989d37e8603652c9f", "html_url": "https://github.com/rust-lang/rust/commit/422e0d590f2c2879325e00f989d37e8603652c9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/422e0d590f2c2879325e00f989d37e8603652c9f/comments", "author": {"login": "TheZoq2", "id": 5312813, "node_id": "MDQ6VXNlcjUzMTI4MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5312813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheZoq2", "html_url": "https://github.com/TheZoq2", "followers_url": "https://api.github.com/users/TheZoq2/followers", "following_url": "https://api.github.com/users/TheZoq2/following{/other_user}", "gists_url": "https://api.github.com/users/TheZoq2/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheZoq2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheZoq2/subscriptions", "organizations_url": "https://api.github.com/users/TheZoq2/orgs", "repos_url": "https://api.github.com/users/TheZoq2/repos", "events_url": "https://api.github.com/users/TheZoq2/events{/privacy}", "received_events_url": "https://api.github.com/users/TheZoq2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TheZoq2", "id": 5312813, "node_id": "MDQ6VXNlcjUzMTI4MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5312813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheZoq2", "html_url": "https://github.com/TheZoq2", "followers_url": "https://api.github.com/users/TheZoq2/followers", "following_url": "https://api.github.com/users/TheZoq2/following{/other_user}", "gists_url": "https://api.github.com/users/TheZoq2/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheZoq2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheZoq2/subscriptions", "organizations_url": "https://api.github.com/users/TheZoq2/orgs", "repos_url": "https://api.github.com/users/TheZoq2/repos", "events_url": "https://api.github.com/users/TheZoq2/events{/privacy}", "received_events_url": "https://api.github.com/users/TheZoq2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cf189701e0a8caacbf106e5bfebfa302570bb81", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf189701e0a8caacbf106e5bfebfa302570bb81", "html_url": "https://github.com/rust-lang/rust/commit/9cf189701e0a8caacbf106e5bfebfa302570bb81"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "07e0cece469a36355dd5fb1c030391d562c7429c", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/422e0d590f2c2879325e00f989d37e8603652c9f/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/422e0d590f2c2879325e00f989d37e8603652c9f/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=422e0d590f2c2879325e00f989d37e8603652c9f", "patch": "@@ -423,10 +423,15 @@ fn check_exhaustive<'a, 'tcx>(cx: &MatchCheckCtxt<'a, 'tcx>,\n                             format!(\"`{}` and {} more\", head.join(\"`, `\"), tail.len())\n                         }\n                     };\n-                    span_err!(cx.tcx.sess, sp, E0004,\n+\n+                    let label_text = match pattern_strings.len(){\n+                        1 => format!(\"pattern {} not covered\", joined_patterns),\n+                        _ => format!(\"patterns {} not covered\", joined_patterns)\n+                    };\n+                    struct_span_err!(cx.tcx.sess, sp, E0004,\n                         \"non-exhaustive patterns: {} not covered\",\n                         joined_patterns\n-                    );\n+                    ).span_label(sp, &label_text).emit();\n                 },\n             }\n         }"}, {"sha": "eba61ede8cb20e673e945fbe6c19e8c6043f0422", "filename": "src/test/compile-fail/non-exhaustive-pattern-witness.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/422e0d590f2c2879325e00f989d37e8603652c9f/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-pattern-witness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/422e0d590f2c2879325e00f989d37e8603652c9f/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-pattern-witness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-pattern-witness.rs?ref=422e0d590f2c2879325e00f989d37e8603652c9f", "patch": "@@ -19,6 +19,7 @@ struct Foo {\n fn struct_with_a_nested_enum_and_vector() {\n     match (Foo { first: true, second: None }) {\n //~^ ERROR non-exhaustive patterns: `Foo { first: false, second: Some([_, _, _, _]) }` not covered\n+//~| NOTE pattern `Foo { first: false, second: Some([_, _, _, _]) }` not covered\n         Foo { first: true, second: None } => (),\n         Foo { first: true, second: Some(_) } => (),\n         Foo { first: false, second: None } => (),\n@@ -35,6 +36,7 @@ enum Color {\n fn enum_with_single_missing_variant() {\n     match Color::Red {\n     //~^ ERROR non-exhaustive patterns: `Red` not covered\n+    //~| NOTE pattern `Red` not covered\n         Color::CustomRGBA { .. } => (),\n         Color::Green => ()\n     }\n@@ -47,6 +49,7 @@ enum Direction {\n fn enum_with_multiple_missing_variants() {\n     match Direction::North {\n     //~^ ERROR non-exhaustive patterns: `East`, `South` and `West` not covered\n+    //~| NOTE patterns `East`, `South` and `West` not covered\n         Direction::North => ()\n     }\n }\n@@ -58,6 +61,7 @@ enum ExcessiveEnum {\n fn enum_with_excessive_missing_variants() {\n     match ExcessiveEnum::First {\n     //~^ ERROR `Second`, `Third`, `Fourth` and 8 more not covered\n+    //~| NOTE patterns `Second`, `Third`, `Fourth` and 8 more not covered\n \n         ExcessiveEnum::First => ()\n     }\n@@ -66,6 +70,7 @@ fn enum_with_excessive_missing_variants() {\n fn enum_struct_variant() {\n     match Color::Red {\n     //~^ ERROR non-exhaustive patterns: `CustomRGBA { a: true, .. }` not covered\n+    //~| NOTE pattern `CustomRGBA { a: true, .. }` not covered\n         Color::Red => (),\n         Color::Green => (),\n         Color::CustomRGBA { a: false, r: _, g: _, b: 0 } => (),\n@@ -82,6 +87,7 @@ fn vectors_with_nested_enums() {\n     let x: &'static [Enum] = &[Enum::First, Enum::Second(false)];\n     match *x {\n     //~^ ERROR non-exhaustive patterns: `[Second(true), Second(false)]` not covered\n+    //~| NOTE pattern `[Second(true), Second(false)]` not covered\n         [] => (),\n         [_] => (),\n         [Enum::First, _] => (),\n@@ -95,6 +101,7 @@ fn vectors_with_nested_enums() {\n fn missing_nil() {\n     match ((), false) {\n     //~^ ERROR non-exhaustive patterns: `((), false)` not covered\n+    //~| NOTE pattern `((), false)` not covered\n         ((), true) => ()\n     }\n }"}]}