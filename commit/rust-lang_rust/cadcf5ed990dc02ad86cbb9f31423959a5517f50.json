{"sha": "cadcf5ed990dc02ad86cbb9f31423959a5517f50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZGNmNWVkOTkwZGMwMmFkODZjYmI5ZjMxNDIzOTU5YTU1MTdmNTA=", "commit": {"author": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2021-02-08T12:21:36Z"}, "committer": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2021-02-08T12:21:36Z"}, "message": "Unify way to flip 6th bit. (Same assembly generated)", "tree": {"sha": "59b8ae7bb4da57abaa0d589ae80b6b47effc193a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b8ae7bb4da57abaa0d589ae80b6b47effc193a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cadcf5ed990dc02ad86cbb9f31423959a5517f50", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEElfpt1fswGixBWxap34UWHa4P82sFAmAhLTMACgkQ34UWHa4P\n82vGuA/6A4Vvoqc1TMSuE+zlSRkyF7GMzOelelcnEzyjhpeOIWXFRKE91vbomKc5\nfz/qfqaJZ0Em+BfbOvzJAP1e+C/sopBjXbyhCpvDgQhXDiB1Ja6rc1JyBpRWCW+J\nKvZ/c0hMiwuQ8okQySuUAvg5RQN3/ZlYhFAvTX1uFU5j3/MyGnG5ILRXRCa4kq2I\n72TIMX5Zq1+39167dq2ll/SKHS4UkplD2bjMztFYkkL8rlCVYIgCbRkY2h+2iJa8\nq53z0LPfvI2UW8lTbSzb64QI0uTQ5raQy4xzUQfxGu8QsdaJn9hHJ/ud0VC5SkTl\nPT7MTqKrxnwvpahg8E20nENoLJm+mdZ6XXBdzxXz8OT+sD/gUrfvuu6iyZ08YMs5\n+084PtU9GT7AFQ9hII6spk6y2QRITeS0lAL3uD04J+t02nxqLQYOUhp+/A5bVNZc\nw9GBoKITfZN9XA0VNiVPRCJwHkUz26pIu0sdjrg4h2V27TenUxXMSWhLih+tynUc\nf5HBuNshW74ROK0IzDBq350Jnau1vGyjWt2r721FBapzycsQ4B0aE/iFv/zAhYo4\nNi/mM53mGoaHSPOwpwU3CoNar8oNVMQgv101KbZ78Aww2Mb2xtAXFzPpweLS7OMT\n9AlPYHK9SuAm/6i/zahSK04AeLuCHhmMsh9u3blzCK9Xg1J1U7w=\n=1WVP\n-----END PGP SIGNATURE-----", "payload": "tree 59b8ae7bb4da57abaa0d589ae80b6b47effc193a\nparent f30c51abe8ce62756f86abbbd6623a9131d3954c\nauthor Giles Cope <gilescope@gmail.com> 1612786896 +0000\ncommitter Giles Cope <gilescope@gmail.com> 1612786896 +0000\n\nUnify way to flip 6th bit. (Same assembly generated)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cadcf5ed990dc02ad86cbb9f31423959a5517f50", "html_url": "https://github.com/rust-lang/rust/commit/cadcf5ed990dc02ad86cbb9f31423959a5517f50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cadcf5ed990dc02ad86cbb9f31423959a5517f50/comments", "author": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30c51abe8ce62756f86abbbd6623a9131d3954c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f30c51abe8ce62756f86abbbd6623a9131d3954c", "html_url": "https://github.com/rust-lang/rust/commit/f30c51abe8ce62756f86abbbd6623a9131d3954c"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "64938745a4a161d5abace6d0511915ef6180d150", "filename": "library/core/benches/ascii.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fbenches%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fbenches%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Fascii.rs?ref=cadcf5ed990dc02ad86cbb9f31423959a5517f50", "patch": "@@ -66,6 +66,8 @@ macro_rules! benches {\n use test::black_box;\n use test::Bencher;\n \n+const ASCII_CASE_MASK: u8 = 0b0010_0000;\n+\n benches! {\n     fn case00_alloc_only(_bytes: &mut [u8]) {}\n \n@@ -204,7 +206,7 @@ benches! {\n             }\n         }\n         for byte in bytes {\n-            *byte &= !((is_ascii_lowercase(*byte) as u8) << 5)\n+            *byte &= !((is_ascii_lowercase(*byte) as u8) * ASCII_CASE_MASK)\n         }\n     }\n \n@@ -216,7 +218,7 @@ benches! {\n             }\n         }\n         for byte in bytes {\n-            *byte -= (is_ascii_lowercase(*byte) as u8) << 5\n+            *byte -= (is_ascii_lowercase(*byte) as u8) * ASCII_CASE_MASK\n         }\n     }\n "}, {"sha": "bbdb2a5d41b99863cf60d8cc39e23ed485453912", "filename": "library/core/src/char/methods.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs?ref=cadcf5ed990dc02ad86cbb9f31423959a5517f50", "patch": "@@ -3,13 +3,10 @@\n use crate::slice;\n use crate::str::from_utf8_unchecked_mut;\n use crate::unicode::printable::is_printable;\n-use crate::unicode::{self, conversions};\n+use crate::unicode::{self, conversions, ASCII_CASE_MASK};\n \n use super::*;\n \n-/// If 6th bit set ascii is upper case.\n-const ASCII_CASE_MASK: u8 = 0b10_0000u8;\n-\n #[lang = \"char\"]\n impl char {\n     /// The highest valid code point a `char` can have."}, {"sha": "7563a742b9a900dcd2fecadd3ef0b455d8bcf175", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=cadcf5ed990dc02ad86cbb9f31423959a5517f50", "patch": "@@ -5,6 +5,7 @@\n use crate::intrinsics;\n use crate::mem;\n use crate::str::FromStr;\n+use crate::unicode::ASCII_CASE_MASK;\n \n // Used because the `?` operator is not allowed in a const context.\n macro_rules! try_opt {\n@@ -195,7 +196,7 @@ impl u8 {\n     #[inline]\n     pub fn to_ascii_uppercase(&self) -> u8 {\n         // Unset the fifth bit if this is a lowercase letter\n-        *self & !((self.is_ascii_lowercase() as u8) << 5)\n+        *self & !((self.is_ascii_lowercase() as u8) * ASCII_CASE_MASK)\n     }\n \n     /// Makes a copy of the value in its ASCII lower case equivalent.\n@@ -218,7 +219,7 @@ impl u8 {\n     #[inline]\n     pub fn to_ascii_lowercase(&self) -> u8 {\n         // Set the fifth bit if this is an uppercase letter\n-        *self | ((self.is_ascii_uppercase() as u8) << 5)\n+        *self | (self.is_ascii_uppercase() as u8 * ASCII_CASE_MASK)\n     }\n \n     /// Checks that two values are an ASCII case-insensitive match."}, {"sha": "b333b4631053261ab2318ba104fe084fe9d74595", "filename": "library/core/src/unicode/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fsrc%2Funicode%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cadcf5ed990dc02ad86cbb9f31423959a5517f50/library%2Fcore%2Fsrc%2Funicode%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Funicode%2Fmod.rs?ref=cadcf5ed990dc02ad86cbb9f31423959a5517f50", "patch": "@@ -17,6 +17,9 @@ mod unicode_data;\n #[stable(feature = \"unicode_version\", since = \"1.45.0\")]\n pub const UNICODE_VERSION: (u8, u8, u8) = unicode_data::UNICODE_VERSION;\n \n+/// If 6th bit set ascii is upper case.\n+pub(crate) const ASCII_CASE_MASK: u8 = 0b0010_0000;\n+\n // For use in liballoc, not re-exported in libstd.\n pub use unicode_data::{\n     case_ignorable::lookup as Case_Ignorable, cased::lookup as Cased, conversions,"}]}