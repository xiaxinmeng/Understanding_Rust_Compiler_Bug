{"sha": "e012b9a78d5cea530dc158a74ecd96e524cca4f7", "node_id": "C_kwDOAAsO6NoAKGUwMTJiOWE3OGQ1Y2VhNTMwZGMxNThhNzRlY2Q5NmU1MjRjY2E0Zjc", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-17T21:07:02Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-17T21:07:02Z"}, "message": "Stabilize vec_spare_capacity\n\nCloses #75017", "tree": {"sha": "784dfb53cf152907c88e6b44f04971d620543215", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/784dfb53cf152907c88e6b44f04971d620543215"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e012b9a78d5cea530dc158a74ecd96e524cca4f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e012b9a78d5cea530dc158a74ecd96e524cca4f7", "html_url": "https://github.com/rust-lang/rust/commit/e012b9a78d5cea530dc158a74ecd96e524cca4f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e012b9a78d5cea530dc158a74ecd96e524cca4f7/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd20513f52b1e6a7799fd291c1a5979dd65678ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd20513f52b1e6a7799fd291c1a5979dd65678ac", "html_url": "https://github.com/rust-lang/rust/commit/fd20513f52b1e6a7799fd291c1a5979dd65678ac"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "d9c69039d7a71b4fbfe24c8406836bdef3ea1434", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=e012b9a78d5cea530dc158a74ecd96e524cca4f7", "patch": "@@ -2043,8 +2043,6 @@ impl<T, A: Allocator> Vec<T, A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(vec_spare_capacity)]\n-    ///\n     /// // Allocate vector big enough for 10 elements.\n     /// let mut v = Vec::with_capacity(10);\n     ///\n@@ -2061,7 +2059,7 @@ impl<T, A: Allocator> Vec<T, A> {\n     ///\n     /// assert_eq!(&v, &[0, 1, 2]);\n     /// ```\n-    #[unstable(feature = \"vec_spare_capacity\", issue = \"75017\")]\n+    #[stable(feature = \"vec_spare_capacity\", since = \"1.60.0\")]\n     #[inline]\n     pub fn spare_capacity_mut(&mut self) -> &mut [MaybeUninit<T>] {\n         // Note:"}, {"sha": "dcf51e3142a617924590b0f19b8739439c7fe10b", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=e012b9a78d5cea530dc158a74ecd96e524cca4f7", "patch": "@@ -31,7 +31,6 @@\n #![feature(iter_advance_by)]\n #![feature(slice_group_by)]\n #![feature(slice_partition_dedup)]\n-#![feature(vec_spare_capacity)]\n #![feature(string_remove_matches)]\n #![feature(const_btree_new)]\n #![feature(const_default_impls)]"}, {"sha": "56bdc6beb902d82363cdf1c3f2aa114f7b8f7994", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=e012b9a78d5cea530dc158a74ecd96e524cca4f7", "patch": "@@ -1038,7 +1038,7 @@ impl<T> MaybeUninit<T> {\n     /// ```\n     ///\n     /// ```\n-    /// #![feature(maybe_uninit_write_slice, vec_spare_capacity)]\n+    /// #![feature(maybe_uninit_write_slice)]\n     /// use std::mem::MaybeUninit;\n     ///\n     /// let mut vec = Vec::with_capacity(32);\n@@ -1098,7 +1098,7 @@ impl<T> MaybeUninit<T> {\n     /// ```\n     ///\n     /// ```\n-    /// #![feature(maybe_uninit_write_slice, vec_spare_capacity)]\n+    /// #![feature(maybe_uninit_write_slice)]\n     /// use std::mem::MaybeUninit;\n     ///\n     /// let mut vec = Vec::with_capacity(32);"}, {"sha": "26519a0ae89670dd2c557eb141f89797fa2ca201", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e012b9a78d5cea530dc158a74ecd96e524cca4f7/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=e012b9a78d5cea530dc158a74ecd96e524cca4f7", "patch": "@@ -341,7 +341,6 @@\n #![feature(unboxed_closures)]\n #![feature(unwrap_infallible)]\n #![feature(vec_into_raw_parts)]\n-#![feature(vec_spare_capacity)]\n // NB: the above list is sorted to minimize merge conflicts.\n #![default_lib_allocator]\n "}, {"sha": "1d5d0e8b0e3134dc781adb98057e38ffdf200df2", "filename": "library/stdarch", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstdarch?ref=e012b9a78d5cea530dc158a74ecd96e524cca4f7", "patch": "@@ -1 +1 @@\n-Subproject commit 2adc17a5442614dbe34626fdd9b32de7c07b8086\n+Subproject commit 1d5d0e8b0e3134dc781adb98057e38ffdf200df2"}]}