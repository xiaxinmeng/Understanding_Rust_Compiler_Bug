{"sha": "e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MjdkZjE3ZjdmOWMxNTBmY2JmZDU2NjkyN2FkMjlmZjVlYjZmMTU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-14T18:54:11Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-20T11:15:09Z"}, "message": "Remove spawn_wrap and main_wrap kludges\n\nThis isn't needed now that our functions are cdecl (and was apparently\nonly still working by accident).\n\nIssue #992", "tree": {"sha": "0811b3951844240012eac5d08a59298474b86334", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0811b3951844240012eac5d08a59298474b86334"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "html_url": "https://github.com/rust-lang/rust/commit/e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "243c5c34790eaba815c2786009b10c31bc04c63d", "url": "https://api.github.com/repos/rust-lang/rust/commits/243c5c34790eaba815c2786009b10c31bc04c63d", "html_url": "https://github.com/rust-lang/rust/commit/243c5c34790eaba815c2786009b10c31bc04c63d"}], "stats": {"total": 51, "additions": 10, "deletions": 41}, "files": [{"sha": "e750b79fda666122e44dbcd824ce9fd5382f67d0", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "patch": "@@ -5662,7 +5662,7 @@ fn create_main_wrapper(ccx: @crate_ctxt, sp: span, main_llfn: ValueRef,\n         let llfty = type_of_fn(ccx, sp, ast::proto_fn, false, false,\n                                [vecarg_ty], nt, 0u);\n         let llfdecl = decl_fn(ccx.llmod, \"_rust_main\",\n-                              lib::llvm::LLVMFastCallConv, llfty);\n+                              lib::llvm::LLVMCCallConv, llfty);\n \n         let fcx = new_fn_ctxt(new_local_ctxt(ccx), sp, llfdecl);\n "}, {"sha": "a953ef9044480909f722d9f9c361e6345e0e9ff1", "filename": "src/rt/main.ll.in", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Fmain.ll.in", "raw_url": "https://github.com/rust-lang/rust/raw/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Fmain.ll.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmain.ll.in?ref=e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "patch": "@@ -16,28 +16,9 @@\n \n declare i32 @rust_start(i32, i32, i32, i32)\n \n-declare external fastcc void @_rust_main(i1* nocapture, %task*, %2* nocapture, %vec*)\n-\n-define void @_rust_main_wrap(i1* nocapture, %task *, %2* nocapture, %vec *)\n-{\n-  tail call fastcc void @_rust_main(i1* %0, %task *%1, %2* nocapture %2, %vec* %3)\n-  ret void\n-}\n-\n-%nullary_fn = type void (i1*, %task*, %2*)\n-\n-define void @_rust_spawn_wrap(\n-       i1* nocapture, %task*, %2* nocapture, %nullary_fn* %f)\n-{\n-  call void %f(i1* %0, %task *%1, %2* nocapture %2)\n-  ret void\n-}\n-\n-declare external void @set_spawn_wrapper(void (i1*, %task*, %2*, %nullary_fn*)*);\n+declare external void @_rust_main(i1* nocapture, %task*, %2* nocapture, %vec*)\n \n define i32 @\"MAIN\"(i32, i32) {\n-  call void @set_spawn_wrapper(void (i1*, %task*, %2*, %nullary_fn*)* @_rust_spawn_wrap)\n-\n-  %result = tail call i32 @rust_start(i32 ptrtoint (void (i1*, %task*, %2*, %vec*)* @_rust_main_wrap to i32), i32 %0, i32 %1, i32 ptrtoint (%0* @_rust_crate_map_toplevel to i32))\n+  %result = tail call i32 @rust_start(i32 ptrtoint (void (i1*, %task*, %2*, %vec*)* @_rust_main to i32), i32 %0, i32 %1, i32 ptrtoint (%0* @_rust_crate_map_toplevel to i32))\n   ret i32 %result\n }"}, {"sha": "bfa598b51520571275593ed2e0f1fab40a71dac2", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "patch": "@@ -472,13 +472,18 @@ struct fn_env_pair {\n     intptr_t env;\n };\n \n-extern \"C\" CDECL uintptr_t get_spawn_wrapper();\n+// FIXME This is probably not needed at all anymore. Have to rearrange some\n+// argument passing to remove it.\n+void rust_spawn_wrapper(void* retptr, rust_task* taskptr, void* envptr,\n+                        void(*func)(void*, rust_task*, void*)) {\n+    func(retptr, taskptr, envptr);\n+}\n \n extern \"C\" CDECL void\n start_task(void *unused_task, rust_task_id id, fn_env_pair *f) {\n     rust_task *task = rust_scheduler::get_task();\n     rust_task *target = task->kernel->get_task_by_id(id);\n-    target->start(get_spawn_wrapper(), f->f, f->env);\n+    target->start((uintptr_t)rust_spawn_wrapper, f->f, f->env);\n     target->deref();\n }\n "}, {"sha": "a764856343b2dfc39583c53f9f8e93aef04f2a07", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "patch": "@@ -180,22 +180,6 @@ void task_start_wrapper(spawn_args *a)\n     }\n }\n \n-/* We spawn a rust (fastcc) function through a CDECL function\n-   defined in main.ll, which is built as part of each crate. These accessors\n-   allow each rust program to install that function at startup */\n-\n-uintptr_t spawn_wrapper;\n-\n-extern \"C\" CDECL void\n-set_spawn_wrapper(uintptr_t f) {\n-    spawn_wrapper = f;\n-}\n-\n-extern \"C\" CDECL uintptr_t\n-get_spawn_wrapper() {\n-    return spawn_wrapper;\n-}\n-\n void\n rust_task::start(uintptr_t spawnee_fn,\n                  uintptr_t args,"}, {"sha": "69dda53b8bf76f2109fe7dfaac1aaeba8aee1e10", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/e927df17f7f9c150fcbfd566927ad29ff5eb6f15/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=e927df17f7f9c150fcbfd566927ad29ff5eb6f15", "patch": "@@ -54,7 +54,6 @@ rust_run_program\n rust_start\n rust_getcwd\n set_min_stack\n-set_spawn_wrapper\n sched_threads\n size_of\n squareroot"}]}