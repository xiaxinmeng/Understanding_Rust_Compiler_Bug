{"sha": "15d6837a16d727a3d37a703eaedf48e62c260290", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZDY4MzdhMTZkNzI3YTNkMzdhNzAzZWFlZGY0OGU2MmMyNjAyOTA=", "commit": {"author": {"name": "William Throwe", "email": "wtt6@cornell.edu", "date": "2015-08-24T01:46:10Z"}, "committer": {"name": "William Throwe", "email": "wtt6@cornell.edu", "date": "2015-08-25T00:28:24Z"}, "message": "Mark main-like functions allow(dead_code) in tests\n\nFixes #12327.", "tree": {"sha": "0d8f217c8b1d17bdbc178e95647aae7a97f7d369", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d8f217c8b1d17bdbc178e95647aae7a97f7d369"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d6837a16d727a3d37a703eaedf48e62c260290", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d6837a16d727a3d37a703eaedf48e62c260290", "html_url": "https://github.com/rust-lang/rust/commit/15d6837a16d727a3d37a703eaedf48e62c260290", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d6837a16d727a3d37a703eaedf48e62c260290/comments", "author": {"login": "wthrowe", "id": 867117, "node_id": "MDQ6VXNlcjg2NzExNw==", "avatar_url": "https://avatars.githubusercontent.com/u/867117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wthrowe", "html_url": "https://github.com/wthrowe", "followers_url": "https://api.github.com/users/wthrowe/followers", "following_url": "https://api.github.com/users/wthrowe/following{/other_user}", "gists_url": "https://api.github.com/users/wthrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/wthrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wthrowe/subscriptions", "organizations_url": "https://api.github.com/users/wthrowe/orgs", "repos_url": "https://api.github.com/users/wthrowe/repos", "events_url": "https://api.github.com/users/wthrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/wthrowe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wthrowe", "id": 867117, "node_id": "MDQ6VXNlcjg2NzExNw==", "avatar_url": "https://avatars.githubusercontent.com/u/867117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wthrowe", "html_url": "https://github.com/wthrowe", "followers_url": "https://api.github.com/users/wthrowe/followers", "following_url": "https://api.github.com/users/wthrowe/following{/other_user}", "gists_url": "https://api.github.com/users/wthrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/wthrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wthrowe/subscriptions", "organizations_url": "https://api.github.com/users/wthrowe/orgs", "repos_url": "https://api.github.com/users/wthrowe/repos", "events_url": "https://api.github.com/users/wthrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/wthrowe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45de9de1e99c3d6a38055835b0fe6c65e1ddac73", "url": "https://api.github.com/repos/rust-lang/rust/commits/45de9de1e99c3d6a38055835b0fe6c65e1ddac73", "html_url": "https://github.com/rust-lang/rust/commit/45de9de1e99c3d6a38055835b0fe6c65e1ddac73"}], "stats": {"total": 99, "additions": 84, "deletions": 15}, "files": [{"sha": "3fbcbd728aabca03bc666d16302b5fa4f4d500e2", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=15d6837a16d727a3d37a703eaedf48e62c260290", "patch": "@@ -14,6 +14,7 @@\n #![allow(unused_imports)]\n use self::HasTestSignature::*;\n \n+use std::iter;\n use std::slice;\n use std::mem;\n use std::vec;\n@@ -24,6 +25,7 @@ use codemap::{DUMMY_SP, Span, ExpnInfo, NameAndSpan, MacroAttribute};\n use codemap;\n use diagnostic;\n use config;\n+use entry::{self, EntryPointType};\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::expand::ExpansionConfig;\n@@ -177,22 +179,39 @@ impl<'a> fold::Folder for TestHarnessGenerator<'a> {\n         // the one we're going to add. Only if compiling an executable.\n \n         mod_folded.items = mem::replace(&mut mod_folded.items, vec![]).move_map(|item| {\n-            item.map(|ast::Item {id, ident, attrs, node, vis, span}| {\n-                ast::Item {\n-                    id: id,\n-                    ident: ident,\n-                    attrs: attrs.into_iter().filter_map(|attr| {\n-                        if !attr.check_name(\"main\") {\n-                            Some(attr)\n-                        } else {\n-                            None\n+            match entry::entry_point_type(&item, self.cx.path.len() + 1) {\n+                EntryPointType::MainNamed |\n+                EntryPointType::MainAttr |\n+                EntryPointType::Start =>\n+                    item.map(|ast::Item {id, ident, attrs, node, vis, span}| {\n+                        let allow_str = InternedString::new(\"allow\");\n+                        let dead_code_str = InternedString::new(\"dead_code\");\n+                        let allow_dead_code_item =\n+                            attr::mk_list_item(allow_str,\n+                                               vec![attr::mk_word_item(dead_code_str)]);\n+                        let allow_dead_code = attr::mk_attr_outer(attr::mk_attr_id(),\n+                                                                  allow_dead_code_item);\n+\n+                        ast::Item {\n+                            id: id,\n+                            ident: ident,\n+                            attrs: attrs.into_iter().filter_map(|attr| {\n+                                if !attr.check_name(\"main\") {\n+                                    Some(attr)\n+                                } else {\n+                                    None\n+                                }\n+                            })\n+                                .chain(iter::once(allow_dead_code))\n+                                .collect(),\n+                            node: node,\n+                            vis: vis,\n+                            span: span\n                         }\n-                    }).collect(),\n-                    node: node,\n-                    vis: vis,\n-                    span: span\n-                }\n-            })\n+                    }),\n+                EntryPointType::None |\n+                EntryPointType::OtherMain => item,\n+            }\n         });\n \n         if !tests.is_empty() || !tested_submods.is_empty() {"}, {"sha": "0e25f1e965ab92543dba248785c5d4918c083937", "filename": "src/test/compile-fail/test-warns-dead-code.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Ftest%2Fcompile-fail%2Ftest-warns-dead-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Ftest%2Fcompile-fail%2Ftest-warns-dead-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftest-warns-dead-code.rs?ref=15d6837a16d727a3d37a703eaedf48e62c260290", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --test\n+\n+#![deny(dead_code)]\n+\n+fn dead() {} //~ error: function is never used: `dead`\n+\n+fn main() {}"}, {"sha": "295559b6ddb6f4f992e881ddaabcf5d105925c56", "filename": "src/test/run-pass/test-main-not-dead-attr.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Ftest%2Frun-pass%2Ftest-main-not-dead-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Ftest%2Frun-pass%2Ftest-main-not-dead-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-main-not-dead-attr.rs?ref=15d6837a16d727a3d37a703eaedf48e62c260290", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --test\n+\n+#![feature(main)]\n+\n+#![deny(dead_code)]\n+\n+#[main]\n+fn foo() { panic!(); }"}, {"sha": "7de3ca7479659e2c9fe93bcfbd8ddc24258034d2", "filename": "src/test/run-pass/test-main-not-dead.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Ftest%2Frun-pass%2Ftest-main-not-dead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d6837a16d727a3d37a703eaedf48e62c260290/src%2Ftest%2Frun-pass%2Ftest-main-not-dead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-main-not-dead.rs?ref=15d6837a16d727a3d37a703eaedf48e62c260290", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --test\n+\n+#![deny(dead_code)]\n+\n+fn main() { panic!(); }"}]}