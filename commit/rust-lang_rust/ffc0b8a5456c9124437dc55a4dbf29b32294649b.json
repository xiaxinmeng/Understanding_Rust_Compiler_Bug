{"sha": "ffc0b8a5456c9124437dc55a4dbf29b32294649b", "node_id": "C_kwDOAAsO6NoAKGZmYzBiOGE1NDU2YzkxMjQ0MzdkYzU1YTRkYmYyOWIzMjI5NDY0OWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-11T14:43:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-11T14:43:12Z"}, "message": "Rollup merge of #106633 - c410-f3r:stabilize-nonzero_bits, r=dtolnay\n\nStabilize `nonzero_min_max`\n\n## Overall\n\nStabilizes `nonzero_min_max` to allow the \"infallible\" construction of ordinary minimum and maximum `NonZero*` instances.\n\nThe feature is fairly straightforward and already matured for some time in stable toolchains.\n\n```rust\nlet _ = NonZeroU8::MIN;\nlet _ = NonZeroI32::MAX;\n```\n\n## History\n\n* On 2022-01-25, implementation was [created](https://github.com/rust-lang/rust/pull/93293).\n\n## Considerations\n\n* This report is fruit of the inanition observed after two unsuccessful attempts at getting feedback.\n* Other constant variants discussed at https://github.com/rust-lang/rust/issues/89065#issuecomment-923238190 are orthogonal to this feature.\n\nFixes https://github.com/rust-lang/rust/issues/89065", "tree": {"sha": "e03bde4f057116d53c66b1bddc2ef9caad8a2276", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e03bde4f057116d53c66b1bddc2ef9caad8a2276"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffc0b8a5456c9124437dc55a4dbf29b32294649b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkDJOACRBK7hj4Ov3rIwAAu1oIAJ7eOXN5RVrOp4f25qsl4JgR\nh+TmrQocShg4sa1r3oDXpp4wktMbRTE9CjGGUq1uL8T5GGQOsV54I2vbEi2W06up\nXlE0vq9lSmU2PXuFHw+xWwCyp+xuFuCTYmNqScnbTNL4R68fgllIGxh1dx5EtaKX\nnvjNtEkEAQCEM2zFM3qpsaV2wP4yk+D+lPF1QrzUsJqDGoVbFCQWJTHPhL5K5bBJ\nM3k6HUhMJbkjkkfk54wNHizuSq7PvbBnRLPom+M0u/3p6oshj8fEuHAkZ37gTrdF\nijgGujh9dmQGR5Gcx11xIu7HCIsANX3V53eJavBOiE5XmlYQImgfrCaJ4RgEjCY=\n=7hBw\n-----END PGP SIGNATURE-----\n", "payload": "tree e03bde4f057116d53c66b1bddc2ef9caad8a2276\nparent fbc121fdfd30daad5b99bae1aac4d6bd4d42ba02\nparent d1b7681e1e9aa43a4b4abc9c04c4e6f62fbdb9c6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678545792 +0100\ncommitter GitHub <noreply@github.com> 1678545792 +0100\n\nRollup merge of #106633 - c410-f3r:stabilize-nonzero_bits, r=dtolnay\n\nStabilize `nonzero_min_max`\n\n## Overall\n\nStabilizes `nonzero_min_max` to allow the \"infallible\" construction of ordinary minimum and maximum `NonZero*` instances.\n\nThe feature is fairly straightforward and already matured for some time in stable toolchains.\n\n```rust\nlet _ = NonZeroU8::MIN;\nlet _ = NonZeroI32::MAX;\n```\n\n## History\n\n* On 2022-01-25, implementation was [created](https://github.com/rust-lang/rust/pull/93293).\n\n## Considerations\n\n* This report is fruit of the inanition observed after two unsuccessful attempts at getting feedback.\n* Other constant variants discussed at https://github.com/rust-lang/rust/issues/89065#issuecomment-923238190 are orthogonal to this feature.\n\nFixes https://github.com/rust-lang/rust/issues/89065\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc0b8a5456c9124437dc55a4dbf29b32294649b", "html_url": "https://github.com/rust-lang/rust/commit/ffc0b8a5456c9124437dc55a4dbf29b32294649b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffc0b8a5456c9124437dc55a4dbf29b32294649b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbc121fdfd30daad5b99bae1aac4d6bd4d42ba02", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc121fdfd30daad5b99bae1aac4d6bd4d42ba02", "html_url": "https://github.com/rust-lang/rust/commit/fbc121fdfd30daad5b99bae1aac4d6bd4d42ba02"}, {"sha": "d1b7681e1e9aa43a4b4abc9c04c4e6f62fbdb9c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b7681e1e9aa43a4b4abc9c04c4e6f62fbdb9c6", "html_url": "https://github.com/rust-lang/rust/commit/d1b7681e1e9aa43a4b4abc9c04c4e6f62fbdb9c6"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "06d22d84aedcca715aeab43f694403ab72529227", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ffc0b8a5456c9124437dc55a4dbf29b32294649b/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc0b8a5456c9124437dc55a4dbf29b32294649b/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=ffc0b8a5456c9124437dc55a4dbf29b32294649b", "patch": "@@ -1147,12 +1147,10 @@ macro_rules! nonzero_min_max_unsigned {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(nonzero_min_max)]\n-                ///\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MIN.get(), 1\", stringify!($Int), \");\")]\n                 /// ```\n-                #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n+                #[stable(feature = \"nonzero_min_max\", since = \"CURRENT_RUSTC_VERSION\")]\n                 pub const MIN: Self = Self::new(1).unwrap();\n \n                 /// The largest value that can be represented by this non-zero\n@@ -1162,12 +1160,10 @@ macro_rules! nonzero_min_max_unsigned {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(nonzero_min_max)]\n-                ///\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MAX.get(), \", stringify!($Int), \"::MAX);\")]\n                 /// ```\n-                #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n+                #[stable(feature = \"nonzero_min_max\", since = \"CURRENT_RUSTC_VERSION\")]\n                 pub const MAX: Self = Self::new(<$Int>::MAX).unwrap();\n             }\n         )+\n@@ -1189,12 +1185,10 @@ macro_rules! nonzero_min_max_signed {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(nonzero_min_max)]\n-                ///\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MIN.get(), \", stringify!($Int), \"::MIN);\")]\n                 /// ```\n-                #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n+                #[stable(feature = \"nonzero_min_max\", since = \"CURRENT_RUSTC_VERSION\")]\n                 pub const MIN: Self = Self::new(<$Int>::MIN).unwrap();\n \n                 /// The largest value that can be represented by this non-zero\n@@ -1208,12 +1202,10 @@ macro_rules! nonzero_min_max_signed {\n                 /// # Examples\n                 ///\n                 /// ```\n-                /// #![feature(nonzero_min_max)]\n-                ///\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MAX.get(), \", stringify!($Int), \"::MAX);\")]\n                 /// ```\n-                #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n+                #[stable(feature = \"nonzero_min_max\", since = \"CURRENT_RUSTC_VERSION\")]\n                 pub const MAX: Self = Self::new(<$Int>::MAX).unwrap();\n             }\n         )+"}]}