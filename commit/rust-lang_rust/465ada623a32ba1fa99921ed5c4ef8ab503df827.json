{"sha": "465ada623a32ba1fa99921ed5c4ef8ab503df827", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NWFkYTYyM2EzMmJhMWZhOTk5MjFlZDVjNGVmOGFiNTAzZGY4Mjc=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-07-16T19:11:46Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-07-16T20:15:07Z"}, "message": "Fix checking for missing stability annotations\n\nRemove couple of unnecessary `#![feature(staged_api)]`.", "tree": {"sha": "756fa669b062b8a26b6017ad11076f0dda87b65d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/756fa669b062b8a26b6017ad11076f0dda87b65d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/465ada623a32ba1fa99921ed5c4ef8ab503df827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/465ada623a32ba1fa99921ed5c4ef8ab503df827", "html_url": "https://github.com/rust-lang/rust/commit/465ada623a32ba1fa99921ed5c4ef8ab503df827", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/465ada623a32ba1fa99921ed5c4ef8ab503df827/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1339af2e5d1b33ec9ee3c8a3c531bcd61770fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1339af2e5d1b33ec9ee3c8a3c531bcd61770fc", "html_url": "https://github.com/rust-lang/rust/commit/8f1339af2e5d1b33ec9ee3c8a3c531bcd61770fc"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "80532bbdda15708ce08e2956e46c14ecb705b6ab", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=465ada623a32ba1fa99921ed5c4ef8ab503df827", "patch": "@@ -244,10 +244,10 @@ mod std {\n pub enum Bound<T> {\n     /// An inclusive bound.\n     #[stable(feature = \"collections_bound\", since = \"1.17.0\")]\n-    Included(T),\n+    Included(#[stable(feature = \"collections_bound\", since = \"1.17.0\")] T),\n     /// An exclusive bound.\n     #[stable(feature = \"collections_bound\", since = \"1.17.0\")]\n-    Excluded(T),\n+    Excluded(#[stable(feature = \"collections_bound\", since = \"1.17.0\")] T),\n     /// An infinite endpoint. Indicates that there is no bound in this direction.\n     #[stable(feature = \"collections_bound\", since = \"1.17.0\")]\n     Unbounded,"}, {"sha": "68c01db544a66bab857e147f0a3bdabc131c1f08", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=465ada623a32ba1fa99921ed5c4ef8ab503df827", "patch": "@@ -313,8 +313,9 @@ struct MissingStabilityAnnotations<'a, 'tcx: 'a> {\n impl<'a, 'tcx: 'a> MissingStabilityAnnotations<'a, 'tcx> {\n     fn check_missing_stability(&self, id: NodeId, span: Span) {\n         let def_id = self.tcx.hir.local_def_id(id);\n+        let stab = self.tcx.stability.borrow().stab_map.get(&def_id).cloned();\n         let is_error = !self.tcx.sess.opts.test &&\n-                        !self.tcx.stability.borrow().stab_map.contains_key(&def_id) &&\n+                        (stab == None || stab == Some(None)) &&\n                         self.access_levels.is_reachable(id);\n         if is_error {\n             self.tcx.sess.span_err(span, \"This node does not have a stability attribute\");\n@@ -420,7 +421,6 @@ impl<'a, 'tcx> Index<'tcx> {\n         let is_staged_api =\n             sess.opts.debugging_opts.force_unstable_if_unmarked ||\n             sess.features.borrow().staged_api;\n-\n         let mut staged_api = FxHashMap();\n         staged_api.insert(LOCAL_CRATE, is_staged_api);\n         Index {"}, {"sha": "4864e4581faab87c033a023409d8958f6c015ff1", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=465ada623a32ba1fa99921ed5c4ef8ab503df827", "patch": "@@ -51,7 +51,6 @@\n #![deny(missing_docs)]\n #![deny(warnings)]\n \n-#![feature(staged_api)]\n #![cfg_attr(windows, feature(libc))]\n // Handle rustfmt skips\n #![feature(custom_attribute)]"}, {"sha": "4b9a5b716182c18cd3264ab893fdb18b0b107c0f", "filename": "src/test/compile-fail-fulldeps/explore-issue-38412.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Ftest%2Fcompile-fail-fulldeps%2Fexplore-issue-38412.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Ftest%2Fcompile-fail-fulldeps%2Fexplore-issue-38412.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fexplore-issue-38412.rs?ref=465ada623a32ba1fa99921ed5c4ef8ab503df827", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:pub_and_stability.rs\n \n-#![feature(staged_api)]\n #![feature(unused_feature)]\n \n // A big point of this test is that we *declare* `unstable_declared`,"}, {"sha": "6a4d17b33de7306419ad4c2fe71ca41cb795b0f7", "filename": "src/test/compile-fail/lint-forbid-cmdline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Ftest%2Fcompile-fail%2Flint-forbid-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Ftest%2Fcompile-fail%2Flint-forbid-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-forbid-cmdline.rs?ref=465ada623a32ba1fa99921ed5c4ef8ab503df827", "patch": "@@ -10,7 +10,6 @@\n \n // compile-flags: -F deprecated\n \n-#![feature(staged_api)]\n #[allow(deprecated)] //~ ERROR allow(deprecated) overruled by outer forbid(deprecated)\n fn main() {\n }"}, {"sha": "dac50db3fd9b2bf394f8016972faea724c882473", "filename": "src/test/compile-fail/stability-attribute-issue-43027.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Ftest%2Fcompile-fail%2Fstability-attribute-issue-43027.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465ada623a32ba1fa99921ed5c4ef8ab503df827/src%2Ftest%2Fcompile-fail%2Fstability-attribute-issue-43027.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-issue-43027.rs?ref=465ada623a32ba1fa99921ed5c4ef8ab503df827", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(staged_api)]\n+#![stable(feature = \"test\", since = \"0\")]\n+\n+#[stable(feature = \"test\", since = \"0\")]\n+pub struct Reverse<T>(pub T); //~ ERROR This node does not have a stability attribute\n+\n+fn main() {\n+    // Make sure the field is used to fill the stability cache\n+    Reverse(0).0;\n+}"}]}