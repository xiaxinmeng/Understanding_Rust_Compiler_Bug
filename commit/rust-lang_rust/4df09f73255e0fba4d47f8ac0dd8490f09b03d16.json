{"sha": "4df09f73255e0fba4d47f8ac0dd8490f09b03d16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZjA5ZjczMjU1ZTBmYmE0ZDQ3ZjhhYzBkZDg0OTBmMDliMDNkMTY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-11T08:58:31Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-11T08:58:31Z"}, "message": "Pass CPlace to codegen_intrinsic_call", "tree": {"sha": "07b83fd5d0bc9233a81d6cec6d6b703467b3fe39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07b83fd5d0bc9233a81d6cec6d6b703467b3fe39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4df09f73255e0fba4d47f8ac0dd8490f09b03d16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4df09f73255e0fba4d47f8ac0dd8490f09b03d16", "html_url": "https://github.com/rust-lang/rust/commit/4df09f73255e0fba4d47f8ac0dd8490f09b03d16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4df09f73255e0fba4d47f8ac0dd8490f09b03d16/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "973f191136cece92374494a7cf99eae1286818a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/973f191136cece92374494a7cf99eae1286818a9", "html_url": "https://github.com/rust-lang/rust/commit/973f191136cece92374494a7cf99eae1286818a9"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "65271974e7266be241119a1a9101d1548ccbc815", "filename": "src/abi.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4df09f73255e0fba4d47f8ac0dd8490f09b03d16/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4df09f73255e0fba4d47f8ac0dd8490f09b03d16/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=4df09f73255e0fba4d47f8ac0dd8490f09b03d16", "patch": "@@ -342,12 +342,16 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n             .collect::<Vec<_>>()\n     };\n \n+    let destination = destination.as_ref().map(|(place, bb)| {\n+        (trans_place(fx, place), *bb)\n+    });\n+\n     if codegen_intrinsic_call(fx, fn_ty, sig, &args, destination) {\n         return;\n     }\n \n     let return_ptr = match destination {\n-        Some((place, _)) => trans_place(fx, place).expect_addr(),\n+        Some((place, _)) => place.expect_addr(),\n         None => fx.bcx.ins().iconst(types::I64, 0),\n     };\n \n@@ -374,7 +378,7 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n             fx.bcx.ins().call_indirect(sig, func, &call_args);\n         }\n     }\n-    if let Some((_, dest)) = *destination {\n+    if let Some((_, dest)) = destination {\n         let ret_ebb = fx.get_ebb(dest);\n         fx.bcx.ins().jump(ret_ebb, &[]);\n     } else {\n@@ -387,15 +391,15 @@ fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n     fn_ty: Ty<'tcx>,\n     sig: FnSig<'tcx>,\n     args: &[CValue<'tcx>],\n-    destination: &Option<(Place<'tcx>, BasicBlock)>,\n+    destination: Option<(CPlace<'tcx>, BasicBlock)>,\n ) -> bool {\n     if let TypeVariants::TyFnDef(def_id, substs) = fn_ty.sty {\n         if sig.abi == Abi::RustIntrinsic {\n             let intrinsic = fx.tcx.item_name(def_id).as_str();\n             let intrinsic = &intrinsic[..];\n \n             let ret = match destination {\n-                Some((place, _)) => trans_place(fx, place),\n+                Some((place, _)) => place,\n                 None => {\n                     println!(\n                         \"codegen_call(fx, _, {:?}, {:?})\",\n@@ -614,7 +618,7 @@ fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n                 _ => unimpl!(\"unsupported intrinsic {}\", intrinsic),\n             }\n \n-            if let Some((_, dest)) = *destination {\n+            if let Some((_, dest)) = destination {\n                 let ret_ebb = fx.get_ebb(dest);\n                 fx.bcx.ins().jump(ret_ebb, &[]);\n             } else {"}]}