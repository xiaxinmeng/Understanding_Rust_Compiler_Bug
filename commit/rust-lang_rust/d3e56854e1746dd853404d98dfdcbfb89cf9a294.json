{"sha": "d3e56854e1746dd853404d98dfdcbfb89cf9a294", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZTU2ODU0ZTE3NDZkZDg1MzQwNGQ5OGRmZGNiZmI4OWNmOWEyOTQ=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-09-09T17:27:05Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-09-09T17:27:05Z"}, "message": "rustdoc: Remove generated blanket impls from trait pages", "tree": {"sha": "cf37cd8f78ce82d1efa5d754a8a02876a0e9738f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf37cd8f78ce82d1efa5d754a8a02876a0e9738f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3e56854e1746dd853404d98dfdcbfb89cf9a294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3e56854e1746dd853404d98dfdcbfb89cf9a294", "html_url": "https://github.com/rust-lang/rust/commit/d3e56854e1746dd853404d98dfdcbfb89cf9a294", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3e56854e1746dd853404d98dfdcbfb89cf9a294/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df6ba0c4acceb5f63090bb20bd23f29c4f439376", "url": "https://api.github.com/repos/rust-lang/rust/commits/df6ba0c4acceb5f63090bb20bd23f29c4f439376", "html_url": "https://github.com/rust-lang/rust/commit/df6ba0c4acceb5f63090bb20bd23f29c4f439376"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "45a5e5115a39b0ed23d77d2bd248722109d3b667", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d3e56854e1746dd853404d98dfdcbfb89cf9a294/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3e56854e1746dd853404d98dfdcbfb89cf9a294/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=d3e56854e1746dd853404d98dfdcbfb89cf9a294", "patch": "@@ -1257,9 +1257,11 @@ impl DocFolder for Cache {\n         // Collect all the implementors of traits.\n         if let clean::ImplItem(ref i) = item.inner {\n             if let Some(did) = i.trait_.def_id() {\n-                self.implementors.entry(did).or_default().push(Impl {\n-                    impl_item: item.clone(),\n-                });\n+                if i.blanket_impl.is_none() {\n+                    self.implementors.entry(did).or_default().push(Impl {\n+                        impl_item: item.clone(),\n+                    });\n+                }\n             }\n         }\n \n@@ -2931,7 +2933,6 @@ fn item_trait(\n \n \n         let (synthetic, concrete): (Vec<&&Impl>, Vec<&&Impl>) = local.iter()\n-            .filter(|i| i.inner_impl().blanket_impl.is_none())\n             .partition(|i| i.inner_impl().synthetic);\n \n         if !foreign.is_empty() {\n@@ -2941,17 +2942,14 @@ fn item_trait(\n                 </h2>\n             \")?;\n \n-            let mut foreign_cache = FxHashSet();\n             for implementor in foreign {\n-                if foreign_cache.insert(implementor.inner_impl().to_string()) {\n-                    let assoc_link = AssocItemLink::GotoSource(\n-                        implementor.impl_item.def_id,\n-                        &implementor.inner_impl().provided_trait_methods\n-                    );\n-                    render_impl(w, cx, &implementor, assoc_link,\n-                                RenderMode::Normal, implementor.impl_item.stable_since(), false,\n-                                None)?;\n-                }\n+                let assoc_link = AssocItemLink::GotoSource(\n+                    implementor.impl_item.def_id,\n+                    &implementor.inner_impl().provided_trait_methods\n+                );\n+                render_impl(w, cx, &implementor, assoc_link,\n+                            RenderMode::Normal, implementor.impl_item.stable_since(), false,\n+                            None)?;\n             }\n         }\n "}, {"sha": "7b7f9013ca3341a29ba95ff71a2f2ad264e90ebb", "filename": "src/test/rustdoc/auxiliary/issue-53689.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d3e56854e1746dd853404d98dfdcbfb89cf9a294/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-53689.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3e56854e1746dd853404d98dfdcbfb89cf9a294/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-53689.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-53689.rs?ref=d3e56854e1746dd853404d98dfdcbfb89cf9a294", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct MyStruct;"}, {"sha": "bfe5adf8888e6c44f6e2e54112e61c767dcb4f16", "filename": "src/test/rustdoc/issue-53689.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d3e56854e1746dd853404d98dfdcbfb89cf9a294/src%2Ftest%2Frustdoc%2Fissue-53689.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3e56854e1746dd853404d98dfdcbfb89cf9a294/src%2Ftest%2Frustdoc%2Fissue-53689.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-53689.rs?ref=d3e56854e1746dd853404d98dfdcbfb89cf9a294", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-53689.rs\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate issue_53689;\n+\n+// @has foo/trait.MyTrait.html\n+// @!has - 'MyStruct'\n+// @count - '//*[code=\"impl<T> MyTrait for T\"]' 1\n+pub trait MyTrait {}\n+\n+impl<T> MyTrait for T {}\n+\n+mod a {\n+    pub use issue_53689::MyStruct;\n+}"}]}