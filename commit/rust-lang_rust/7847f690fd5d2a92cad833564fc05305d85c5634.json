{"sha": "7847f690fd5d2a92cad833564fc05305d85c5634", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NDdmNjkwZmQ1ZDJhOTJjYWQ4MzM1NjRmYzA1MzA1ZDg1YzU2MzQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-27T20:56:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-27T20:56:25Z"}, "message": "Rollup merge of #82607 - bjorn3:frame_loc_getter, r=RalfJung\n\nAdd a getter for Frame.loc\n\nThis is necessary for Priroda.\n\nFor context see https://rust-lang.zulipchat.com/#narrow/stream/146212-t-compiler.2Fconst-eval/topic/Frame.3A.3Aloc.20no.20longer.20public/near/228070266 and oli-obk/priroda#27.\n\ncc `@DJMcNab`\n\nr? `@RalfJung`", "tree": {"sha": "2f473a556bbf5bad361cc84af6a1ac0f57d0b7f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f473a556bbf5bad361cc84af6a1ac0f57d0b7f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7847f690fd5d2a92cad833564fc05305d85c5634", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOrH6CRBK7hj4Ov3rIwAAdHIIAFg9Iap8g7/2bfF4nuRfnKo3\n6nkZuvuo+T5yOc1pFzGcAqXxkg1++jke38DnBCcCo2cxgVc/QMerUWNXIZMl8Gwq\n9MGZsozw157N8Jgx+jUx2GLI8NQOUBwSDBJ5TKTjlTc3TCzmspeYp85Onh8fyeTx\n9KLes5WnuxUUDrXRNT+NEi5vb8WiitlsnMeojYGKW9tC9ezXXWmOno/+wTv0Iobw\n/4/RvL7NtXE675mlkMq7w+Y8De1Wya2Nfe8LfW1auwSxT8KvJrbrxjeX8+t1rFlr\nWkBoDKOI3NgO/mHUpcfKUZcCIws+AodE9oH59kCv6HqihJODGscNCYsxvZvW1nw=\n=9m7X\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f473a556bbf5bad361cc84af6a1ac0f57d0b7f6\nparent e38b3eb0b56c7314980649d35b21b61e74a41bdc\nparent 632a89529a6a951b83f805f4e1bb07d127b4e69c\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614459385 +0100\ncommitter GitHub <noreply@github.com> 1614459385 +0100\n\nRollup merge of #82607 - bjorn3:frame_loc_getter, r=RalfJung\n\nAdd a getter for Frame.loc\n\nThis is necessary for Priroda.\n\nFor context see https://rust-lang.zulipchat.com/#narrow/stream/146212-t-compiler.2Fconst-eval/topic/Frame.3A.3Aloc.20no.20longer.20public/near/228070266 and oli-obk/priroda#27.\n\ncc `@DJMcNab`\n\nr? `@RalfJung`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7847f690fd5d2a92cad833564fc05305d85c5634", "html_url": "https://github.com/rust-lang/rust/commit/7847f690fd5d2a92cad833564fc05305d85c5634", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7847f690fd5d2a92cad833564fc05305d85c5634/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e38b3eb0b56c7314980649d35b21b61e74a41bdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e38b3eb0b56c7314980649d35b21b61e74a41bdc", "html_url": "https://github.com/rust-lang/rust/commit/e38b3eb0b56c7314980649d35b21b61e74a41bdc"}, {"sha": "632a89529a6a951b83f805f4e1bb07d127b4e69c", "url": "https://api.github.com/repos/rust-lang/rust/commits/632a89529a6a951b83f805f4e1bb07d127b4e69c", "html_url": "https://github.com/rust-lang/rust/commit/632a89529a6a951b83f805f4e1bb07d127b4e69c"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "6b796eb372199aeb6ab317f7657e8d03e7a1ecd5", "filename": "compiler/rustc_mir/src/interpret/eval_context.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7847f690fd5d2a92cad833564fc05305d85c5634/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7847f690fd5d2a92cad833564fc05305d85c5634/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs?ref=7847f690fd5d2a92cad833564fc05305d85c5634", "patch": "@@ -226,6 +226,16 @@ impl<'mir, 'tcx, Tag> Frame<'mir, 'tcx, Tag> {\n }\n \n impl<'mir, 'tcx, Tag, Extra> Frame<'mir, 'tcx, Tag, Extra> {\n+    /// Get the current location within the Frame.\n+    ///\n+    /// If this is `Err`, we are not currently executing any particular statement in\n+    /// this frame (can happen e.g. during frame initialization, and during unwinding on\n+    /// frames without cleanup code).\n+    /// We basically abuse `Result` as `Either`.\n+    pub fn current_loc(&self) -> Result<mir::Location, Span> {\n+        self.loc\n+    }\n+\n     /// Return the `SourceInfo` of the current instruction.\n     pub fn current_source_info(&self) -> Option<&mir::SourceInfo> {\n         self.loc.ok().map(|loc| self.body.source_info(loc))"}]}