{"sha": "25cc75c9245664f239a52de60a0c0baa8b4c81d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1Y2M3NWM5MjQ1NjY0ZjIzOWE1MmRlNjBhMGMwYmFhOGI0YzgxZDU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-09T13:34:57Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-12T17:53:22Z"}, "message": "build-manifest: accept the Rust version instead of the monorepo path\n\nThis commit changes the way build-manifest is invoked, to let it accept\nthe Rust version directly instead of requiring the path of the Rust\nmonorepo and letting build-manifest figure out the path on its own.\n\nThis allows to run build-manifest without a clone of the monorepo.", "tree": {"sha": "411e8b57ce15449134346327812e2d972adf9269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/411e8b57ce15449134346327812e2d972adf9269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25cc75c9245664f239a52de60a0c0baa8b4c81d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl+EmBIACgkQPgar6Auq\n8ZzSShAAgpxSCIBbVRw5/lphIkoOScXrR4Qga9wW+C+mlkOGZY+vwza+SLS422jp\nnHuZh4O+KJzu24WcxhReMaUuT4h7s31/sbRcPUW+q5T/j5h1ANaMp72LmtlUrlPM\nN+mjLtC+PYsYuj9PH+9IIR8Jz667l61Bek/2Yaz4Or/MlZN9YPPIZS6di5blJsln\n6Yz9rpvt66VhDQ47fe7fz8Ub88BVS/hfTU0q6yBxqZq9gEfOp3CaTdl1vO2nVckI\nHUQxmBywPs/sNb0j7XbC3VgrXggK837pKBp5Jx1cO8Ho9RimMsUvjfwwbMCITEjq\ncpGofk96UAeHDyjxtOXZo5nJQdxbGiY538fil7r501Z+YMzFgSCW2/UpYNBovbAJ\nbZTYG02Ome9Jrmu+fWe7aYclPGKum0To9ZyzTD5zt+qZi+SGfUGb9tts2xD7GmmZ\nYMuNXERh15A3wTE/VGONx83rx8/YTwFEGqP5mAENDCERKtapc/IR5baZqFusFvtA\nQCYDB8aNZ3ObEVwSLNXsBH9S/O2iWBZoFi//ewC2Je+N+1+m/5T1huZw2FNL5S/K\nzJ5VfYlN5tn75yEVBzHwFzcecDsbHsUeFLOaksXIA2WwHReI3gQivv2o4VbiN03U\nPTru5a2Tn5CMtq3LG4Fw3NcjgcoY8isb8UdG8P8qh3p5+XvD1l0=\n=NP0l\n-----END PGP SIGNATURE-----", "payload": "tree 411e8b57ce15449134346327812e2d972adf9269\nparent f3ab6f05846951bed41d4b0661ac0735aebf3687\nauthor Pietro Albini <pietro@pietroalbini.org> 1602250497 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1602525202 +0200\n\nbuild-manifest: accept the Rust version instead of the monorepo path\n\nThis commit changes the way build-manifest is invoked, to let it accept\nthe Rust version directly instead of requiring the path of the Rust\nmonorepo and letting build-manifest figure out the path on its own.\n\nThis allows to run build-manifest without a clone of the monorepo.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25cc75c9245664f239a52de60a0c0baa8b4c81d5", "html_url": "https://github.com/rust-lang/rust/commit/25cc75c9245664f239a52de60a0c0baa8b4c81d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25cc75c9245664f239a52de60a0c0baa8b4c81d5/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ab6f05846951bed41d4b0661ac0735aebf3687", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ab6f05846951bed41d4b0661ac0735aebf3687", "html_url": "https://github.com/rust-lang/rust/commit/f3ab6f05846951bed41d4b0661ac0735aebf3687"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "8f4968d5ac69ffa1a2dc034ee4b27f956cb70d9e", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=25cc75c9245664f239a52de60a0c0baa8b4c81d5", "patch": "@@ -2353,7 +2353,7 @@ impl Step for HashSign {\n         cmd.arg(today.trim());\n         cmd.arg(addr);\n         cmd.arg(&builder.config.channel);\n-        cmd.arg(&builder.src);\n+        cmd.arg(&builder.version);\n         cmd.env(\"BUILD_MANIFEST_LEGACY\", \"1\");\n \n         builder.create_dir(&distdir(builder));"}, {"sha": "d8169549c07baf3535914b11c9ea6be7e0fd59a6", "filename": "src/bootstrap/run.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Fbootstrap%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Fbootstrap%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frun.rs?ref=25cc75c9245664f239a52de60a0c0baa8b4c81d5", "patch": "@@ -77,7 +77,7 @@ impl Step for BuildManifest {\n         cmd.arg(today.trim());\n         cmd.arg(addr);\n         cmd.arg(&builder.config.channel);\n-        cmd.arg(&builder.src);\n+        cmd.arg(&builder.version);\n \n         builder.create_dir(&distdir(builder));\n         builder.run(&mut cmd);"}, {"sha": "b77c5a907c11893444d58290456046edb4173d6f", "filename": "src/tools/build-manifest/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Ftools%2Fbuild-manifest%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Ftools%2Fbuild-manifest%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2FREADME.md?ref=25cc75c9245664f239a52de60a0c0baa8b4c81d5", "patch": "@@ -21,8 +21,8 @@ Then, you can generate the manifest and all the packages from `path/to/dist` to\n \n ```\n $ cargo +nightly run path/to/dist path/to/output 1970-01-01 http://example.com \\\n-    CHANNEL path/to/rust/repo\n+    CHANNEL VERSION\n ```\n \n Remember to replace `CHANNEL` with the channel you produced dist artifacts of\n-and `path/to/rust/repo` with the path to your checkout of the Rust repository.\n+and `VERSION` with the current Rust version."}, {"sha": "0efebe363f88f4fa5c0c5e501a394a2867c6a301", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=25cc75c9245664f239a52de60a0c0baa8b4c81d5", "patch": "@@ -221,7 +221,7 @@ fn main() {\n     let date = args.next().unwrap();\n     let s3_address = args.next().unwrap();\n     let channel = args.next().unwrap();\n-    let monorepo_path = args.next().unwrap();\n+    let rustc_version = args.next().unwrap();\n \n     // Do not ask for a passphrase while manually testing\n     let mut passphrase = String::new();\n@@ -231,7 +231,7 @@ fn main() {\n     }\n \n     Builder {\n-        versions: Versions::new(&channel, &input, Path::new(&monorepo_path)).unwrap(),\n+        versions: Versions::new(&channel, &rustc_version, &input).unwrap(),\n \n         input,\n         output,"}, {"sha": "c2bce0f1cf39cb91a7f85d60fcb7242762a8dc8e", "filename": "src/tools/build-manifest/src/versions.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25cc75c9245664f239a52de60a0c0baa8b4c81d5/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fversions.rs?ref=25cc75c9245664f239a52de60a0c0baa8b4c81d5", "patch": "@@ -1,4 +1,4 @@\n-use anyhow::{Context, Error};\n+use anyhow::Error;\n use flate2::read::GzDecoder;\n use std::collections::HashMap;\n use std::fs::File;\n@@ -93,17 +93,10 @@ pub(crate) struct Versions {\n }\n \n impl Versions {\n-    pub(crate) fn new(\n-        channel: &str,\n-        dist_path: &Path,\n-        monorepo_root: &Path,\n-    ) -> Result<Self, Error> {\n+    pub(crate) fn new(channel: &str, rustc_version: &str, dist_path: &Path) -> Result<Self, Error> {\n         Ok(Self {\n             channel: channel.into(),\n-            rustc_version: std::fs::read_to_string(monorepo_root.join(\"src\").join(\"version\"))\n-                .context(\"failed to read the rustc version from src/version\")?\n-                .trim()\n-                .to_string(),\n+            rustc_version: rustc_version.into(),\n             dist_path: dist_path.into(),\n             versions: HashMap::new(),\n         })"}]}