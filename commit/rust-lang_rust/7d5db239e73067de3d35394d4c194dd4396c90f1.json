{"sha": "7d5db239e73067de3d35394d4c194dd4396c90f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNWRiMjM5ZTczMDY3ZGUzZDM1Mzk0ZDRjMTk0ZGQ0Mzk2YzkwZjE=", "commit": {"author": {"name": "Hameer Abbasi", "email": "einstein.edison@gmail.com", "date": "2020-09-14T21:39:43Z"}, "committer": {"name": "Hameer Abbasi", "email": "einstein.edison@gmail.com", "date": "2020-09-15T08:27:19Z"}, "message": "This commit introduces the following changes:\n\n* Change error message for type param in a const expression when using\nmin_const_generics\n* Change ParamInNonTrivialAnonConst to contain an extra bool used for\ndistinguishing whether the passed-in symbol is a type or a value.", "tree": {"sha": "b16c3d1806123a5f6c9b03c49ce90cc6d444742e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b16c3d1806123a5f6c9b03c49ce90cc6d444742e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d5db239e73067de3d35394d4c194dd4396c90f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5db239e73067de3d35394d4c194dd4396c90f1", "html_url": "https://github.com/rust-lang/rust/commit/7d5db239e73067de3d35394d4c194dd4396c90f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d5db239e73067de3d35394d4c194dd4396c90f1/comments", "author": {"login": "hameerabbasi", "id": 2190658, "node_id": "MDQ6VXNlcjIxOTA2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2190658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hameerabbasi", "html_url": "https://github.com/hameerabbasi", "followers_url": "https://api.github.com/users/hameerabbasi/followers", "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}", "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions", "organizations_url": "https://api.github.com/users/hameerabbasi/orgs", "repos_url": "https://api.github.com/users/hameerabbasi/repos", "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/hameerabbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hameerabbasi", "id": 2190658, "node_id": "MDQ6VXNlcjIxOTA2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2190658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hameerabbasi", "html_url": "https://github.com/hameerabbasi", "followers_url": "https://api.github.com/users/hameerabbasi/followers", "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}", "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions", "organizations_url": "https://api.github.com/users/hameerabbasi/orgs", "repos_url": "https://api.github.com/users/hameerabbasi/repos", "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/hameerabbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "356d8ad1a310a2265e05d5c193d41704030d70d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/356d8ad1a310a2265e05d5c193d41704030d70d3", "html_url": "https://github.com/rust-lang/rust/commit/356d8ad1a310a2265e05d5c193d41704030d70d3"}], "stats": {"total": 96, "additions": 82, "deletions": 14}, "files": [{"sha": "5d66d90e2c008087c0272a17dc9ef8cbbe7ea2c0", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -466,7 +466,7 @@ impl<'a> Resolver<'a> {\n                 );\n                 err\n             }\n-            ResolutionError::ParamInNonTrivialAnonConst(name) => {\n+            ResolutionError::ParamInNonTrivialAnonConst { name, is_type } => {\n                 let mut err = self.session.struct_span_err(\n                     span,\n                     \"generic parameters must not be used inside of non trivial constant values\",\n@@ -478,9 +478,19 @@ impl<'a> Resolver<'a> {\n                         name\n                     ),\n                 );\n-                err.help(\n-                    &format!(\"it is currently only allowed to use either `{0}` or `{{ {0} }}` as generic constants\", name)\n-                );\n+\n+                if is_type {\n+                    err.note(&format!(\n+                        \"type parameters are currently not permitted in anonymous constants\"\n+                    ));\n+                } else {\n+                    err.help(\n+                        &format!(\"it is currently only allowed to use either `{0}` or `{{ {0} }}` as generic constants\",\n+                                 name\n+                        )\n+                    );\n+                }\n+\n                 err\n             }\n             ResolutionError::SelfInTyParamDefault => {"}, {"sha": "85ddc5f55d110b389f288f839c35e2eb50417831", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -221,7 +221,7 @@ enum ResolutionError<'a> {\n     /// generic parameters must not be used inside of non trivial constant values.\n     ///\n     /// This error is only emitted when using `min_const_generics`.\n-    ParamInNonTrivialAnonConst(Symbol),\n+    ParamInNonTrivialAnonConst { name: Symbol, is_type: bool },\n     /// Error E0735: type parameters with a default cannot use `Self`\n     SelfInTyParamDefault,\n     /// Error E0767: use of unreachable label\n@@ -2638,9 +2638,10 @@ impl<'a> Resolver<'a> {\n                                     if record_used {\n                                         self.report_error(\n                                             span,\n-                                            ResolutionError::ParamInNonTrivialAnonConst(\n-                                                rib_ident.name,\n-                                            ),\n+                                            ResolutionError::ParamInNonTrivialAnonConst {\n+                                                name: rib_ident.name,\n+                                                is_type: true,\n+                                            },\n                                         );\n                                     }\n                                     return Res::Err;\n@@ -2718,7 +2719,10 @@ impl<'a> Resolver<'a> {\n                                 if record_used {\n                                     self.report_error(\n                                         span,\n-                                        ResolutionError::ParamInNonTrivialAnonConst(rib_ident.name),\n+                                        ResolutionError::ParamInNonTrivialAnonConst {\n+                                            name: rib_ident.name,\n+                                            is_type: false,\n+                                        },\n                                     );\n                                 }\n                                 return Res::Err;"}, {"sha": "07822f86f524b621e6c60f28ef5de0d35a88486e", "filename": "src/test/ui/const-generics/issues/issue-64494.min.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64494.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64494.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64494.min.stderr?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -4,15 +4,15 @@ error: generic parameters must not be used inside of non trivial constant values\n LL | impl<T: Foo> MyTrait for T where Is<{T::VAL == 5}>: True {}\n    |                                      ^^^^^^ non-trivial anonymous constants must not depend on the parameter `T`\n    |\n-   = help: it is currently only allowed to use either `T` or `{ T }` as generic constants\n+   = note: type parameters are currently not permitted in anonymous constants\n \n error: generic parameters must not be used inside of non trivial constant values\n   --> $DIR/issue-64494.rs:19:38\n    |\n LL | impl<T: Foo> MyTrait for T where Is<{T::VAL == 6}>: True {}\n    |                                      ^^^^^^ non-trivial anonymous constants must not depend on the parameter `T`\n    |\n-   = help: it is currently only allowed to use either `T` or `{ T }` as generic constants\n+   = note: type parameters are currently not permitted in anonymous constants\n \n error[E0119]: conflicting implementations of trait `MyTrait`:\n   --> $DIR/issue-64494.rs:19:1"}, {"sha": "68f1733decb93e03d1a455db3cae59714d522a8c", "filename": "src/test/ui/const-generics/issues/issue-67739.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67739.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67739.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67739.min.stderr?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -4,7 +4,7 @@ error: generic parameters must not be used inside of non trivial constant values\n LL |         [0u8; mem::size_of::<Self::Associated>()];\n    |                              ^^^^^^^^^^^^^^^^ non-trivial anonymous constants must not depend on the parameter `Self`\n    |\n-   = help: it is currently only allowed to use either `Self` or `{ Self }` as generic constants\n+   = note: type parameters are currently not permitted in anonymous constants\n \n error: aborting due to previous error\n "}, {"sha": "089937e66ca06bea2e3ff116bfebb0917b01f843", "filename": "src/test/ui/const-generics/issues/issue-76701-ty-param-in-const.full.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.full.stderr?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -0,0 +1,18 @@\n+error: constant expression depends on a generic parameter\n+  --> $DIR/issue-76701-ty-param-in-const.rs:6:21\n+   |\n+LL | fn ty_param<T>() -> [u8; std::mem::size_of::<T>()] {\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: constant expression depends on a generic parameter\n+  --> $DIR/issue-76701-ty-param-in-const.rs:12:37\n+   |\n+LL | fn const_param<const N: usize>() -> [u8; N + 1] {\n+   |                                     ^^^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a39495e0b2db016bcf689b6683814ad17b0aec2c", "filename": "src/test/ui/const-generics/issues/issue-76701-ty-param-in-const.min.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.min.stderr?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -0,0 +1,18 @@\n+error: generic parameters must not be used inside of non trivial constant values\n+  --> $DIR/issue-76701-ty-param-in-const.rs:6:46\n+   |\n+LL | fn ty_param<T>() -> [u8; std::mem::size_of::<T>()] {\n+   |                                              ^ non-trivial anonymous constants must not depend on the parameter `T`\n+   |\n+   = note: type parameters are currently not permitted in anonymous constants\n+\n+error: generic parameters must not be used inside of non trivial constant values\n+  --> $DIR/issue-76701-ty-param-in-const.rs:12:42\n+   |\n+LL | fn const_param<const N: usize>() -> [u8; N + 1] {\n+   |                                          ^ non-trivial anonymous constants must not depend on the parameter `N`\n+   |\n+   = help: it is currently only allowed to use either `N` or `{ N }` as generic constants\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "9252b592360d32888db7a4a40e01a267aa89e3d6", "filename": "src/test/ui/const-generics/issues/issue-76701-ty-param-in-const.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.rs?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -0,0 +1,18 @@\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+\n+fn ty_param<T>() -> [u8; std::mem::size_of::<T>()] {\n+    //[full]~^ ERROR constant expression depends on a generic parameter\n+    //[min]~^^ ERROR generic parameters must not be used inside of non trivial constant values\n+    todo!()\n+}\n+\n+fn const_param<const N: usize>() -> [u8; N + 1] {\n+    //[full]~^ ERROR constant expression depends on a generic parameter\n+    //[min]~^^ ERROR generic parameters must not be used inside of non trivial constant values\n+    todo!()\n+}\n+\n+fn main() {}"}, {"sha": "edb77a87430611c09c59161cba91d0a556f12f36", "filename": "src/test/ui/const-generics/min_const_generics/self-ty-in-const-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fself-ty-in-const-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fself-ty-in-const-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fself-ty-in-const-1.stderr?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -4,7 +4,7 @@ error: generic parameters must not be used inside of non trivial constant values\n LL |     fn t1() -> [u8; std::mem::size_of::<Self>()];\n    |                                         ^^^^ non-trivial anonymous constants must not depend on the parameter `Self`\n    |\n-   = help: it is currently only allowed to use either `Self` or `{ Self }` as generic constants\n+   = note: type parameters are currently not permitted in anonymous constants\n \n error: generic `Self` types are currently not permitted in anonymous constants\n   --> $DIR/self-ty-in-const-1.rs:14:41"}, {"sha": "e545ae8571f67d7ee7780bd20ddea1a02629f093", "filename": "src/test/ui/const-generics/params-in-ct-in-ty-param-lazy-norm.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fparams-in-ct-in-ty-param-lazy-norm.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d5db239e73067de3d35394d4c194dd4396c90f1/src%2Ftest%2Fui%2Fconst-generics%2Fparams-in-ct-in-ty-param-lazy-norm.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparams-in-ct-in-ty-param-lazy-norm.min.stderr?ref=7d5db239e73067de3d35394d4c194dd4396c90f1", "patch": "@@ -12,7 +12,7 @@ error: generic parameters must not be used inside of non trivial constant values\n LL | struct Foo<T, U = [u8; std::mem::size_of::<T>()]>(T, U);\n    |                                            ^ non-trivial anonymous constants must not depend on the parameter `T`\n    |\n-   = help: it is currently only allowed to use either `T` or `{ T }` as generic constants\n+   = note: type parameters are currently not permitted in anonymous constants\n \n error: constant values inside of type parameter defaults must not depend on generic parameters\n   --> $DIR/params-in-ct-in-ty-param-lazy-norm.rs:12:21"}]}