{"sha": "62d4f8fe825c907bd03c275f85aeeaf7b25c4336", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZDRmOGZlODI1YzkwN2JkMDNjMjc1Zjg1YWVlYWY3YjI1YzQzMzY=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-25T21:46:15Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-25T22:15:46Z"}, "message": "Added a select2 trait. Fixes #2898", "tree": {"sha": "8916f01c97fd3b77ec4849afa646e2b3747577df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8916f01c97fd3b77ec4849afa646e2b3747577df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62d4f8fe825c907bd03c275f85aeeaf7b25c4336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62d4f8fe825c907bd03c275f85aeeaf7b25c4336", "html_url": "https://github.com/rust-lang/rust/commit/62d4f8fe825c907bd03c275f85aeeaf7b25c4336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62d4f8fe825c907bd03c275f85aeeaf7b25c4336/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "531ea695f64e8d7105f904c515a6ff84fa32dc77", "url": "https://api.github.com/repos/rust-lang/rust/commits/531ea695f64e8d7105f904c515a6ff84fa32dc77", "html_url": "https://github.com/rust-lang/rust/commit/531ea695f64e8d7105f904c515a6ff84fa32dc77"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "4ffa040250f65a0c453fff2b6cc04e0a4b3eb983", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/62d4f8fe825c907bd03c275f85aeeaf7b25c4336/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d4f8fe825c907bd03c275f85aeeaf7b25c4336/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=62d4f8fe825c907bd03c275f85aeeaf7b25c4336", "patch": "@@ -822,3 +822,52 @@ impl chan<T: send> of channel<T> for shared_chan<T> {\n fn shared_chan<T:send>(+c: chan<T>) -> shared_chan<T> {\n     arc::exclusive(c)\n }\n+\n+trait select2<T: send, U: send> {\n+    fn try_select() -> either<option<T>, option<U>>;\n+    fn select() -> either<T, U>;\n+}\n+\n+impl<T: send, U: send, Left: selectable recv<T>, Right: selectable recv<U>>\n+    of select2<T, U> for (Left, Right) {\n+\n+    fn select() -> either<T, U> {\n+        alt self {\n+          (lp, rp) {\n+            alt select2i(lp, rp) {\n+              left(())  { left (lp.recv()) }\n+              right(()) { right(rp.recv()) }\n+            }\n+          }\n+        }\n+    }\n+\n+    fn try_select() -> either<option<T>, option<U>> {\n+        alt self {\n+          (lp, rp) {\n+            alt select2i(lp, rp) {\n+              left(())  { left (lp.try_recv()) }\n+              right(()) { right(rp.try_recv()) }\n+            }\n+          }\n+        }\n+    }\n+}\n+\n+#[cfg(test)]\n+mod test {\n+    #[test]\n+    fn test_select2() {\n+        let (c1, p1) = pipes::stream();\n+        let (c2, p2) = pipes::stream();\n+\n+        c1.send(\"abc\");\n+\n+        alt (p1, p2).select() {\n+          right(_) { fail }\n+          _ { }\n+        }\n+\n+        c2.send(123);\n+    }\n+}"}]}