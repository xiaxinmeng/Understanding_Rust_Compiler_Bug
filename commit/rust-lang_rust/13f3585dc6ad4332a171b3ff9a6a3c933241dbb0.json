{"sha": "13f3585dc6ad4332a171b3ff9a6a3c933241dbb0", "node_id": "C_kwDOAAsO6NoAKDEzZjM1ODVkYzZhZDQzMzJhMTcxYjNmZjlhNmEzYzkzMzI0MWRiYjA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-20T06:51:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-20T06:51:00Z"}, "message": "Rollup merge of #111652 - clubby789:self-import-improvement, r=compiler-errors\n\nBetter diagnostic for `use Self::..`\n\nFixes #111627\n\ncc `@petrochenkov,` you might have thoughts on a better way to handle this (https://github.com/rust-lang/rust/issues/63720#issuecomment-591597466)", "tree": {"sha": "87b88231a3477ea4d78ade4d8059ab7a6a668a02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87b88231a3477ea4d78ade4d8059ab7a6a668a02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkaG3UCRBK7hj4Ov3rIwAAXrAIAEulJsMVxu5ppiU2JvJfdNCR\ndWpbFNs4mqQ/q1tiOZbaFHLALOwmFMPdceouyjWSkKxVXhkVZUsBUZJhL4O/Xgvw\n+fFW94/7y93HfKiM9VmAMgs29Qc3kWY4VArm5gXp8d8K9Bf2cqgeJuQ2V81l5AyM\nE9EYoZG36uPGRjkkul9Qe3iJNEbibjOIRueiFsQT5zQFvBV/tngMuM7HAqbbmhp+\nw3cHGU01I42CgFcwcLrUR0GnqQavl8l4q3Ue2t5Xca3PGNsOiKCwcVX2rmy23bNV\n3iXrxOP8hMXBnal3NDjj/Wukdgd2WpeNNGVJuXVdJi5LIXumHVKjRexVOY7xVdk=\n=+w0C\n-----END PGP SIGNATURE-----\n", "payload": "tree 87b88231a3477ea4d78ade4d8059ab7a6a668a02\nparent 1397827f25b28fb2842e5d708c075a66ba60fde7\nparent eaf47a30cb67bf1e802ee29bb8021b19a4df6095\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1684565460 +0530\ncommitter GitHub <noreply@github.com> 1684565460 +0530\n\nRollup merge of #111652 - clubby789:self-import-improvement, r=compiler-errors\n\nBetter diagnostic for `use Self::..`\n\nFixes #111627\n\ncc `@petrochenkov,` you might have thoughts on a better way to handle this (https://github.com/rust-lang/rust/issues/63720#issuecomment-591597466)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0", "html_url": "https://github.com/rust-lang/rust/commit/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1397827f25b28fb2842e5d708c075a66ba60fde7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1397827f25b28fb2842e5d708c075a66ba60fde7", "html_url": "https://github.com/rust-lang/rust/commit/1397827f25b28fb2842e5d708c075a66ba60fde7"}, {"sha": "eaf47a30cb67bf1e802ee29bb8021b19a4df6095", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf47a30cb67bf1e802ee29bb8021b19a4df6095", "html_url": "https://github.com/rust-lang/rust/commit/eaf47a30cb67bf1e802ee29bb8021b19a4df6095"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "ed0a792d3876309be8a3fb7eb9756f99e7d46e26", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=13f3585dc6ad4332a171b3ff9a6a3c933241dbb0", "patch": "@@ -1832,7 +1832,17 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             }\n             (msg, None)\n         } else if ident.name == kw::SelfUpper {\n-            (\"`Self` is only available in impls, traits, and type definitions\".to_string(), None)\n+            // As mentioned above, `opt_ns` being `None` indicates a module path in import.\n+            // We can use this to improve a confusing error for, e.g. `use Self::Variant` in an\n+            // impl\n+            if opt_ns.is_none() {\n+                (\"`Self` cannot be used in imports\".to_string(), None)\n+            } else {\n+                (\n+                    \"`Self` is only available in impls, traits, and type definitions\".to_string(),\n+                    None,\n+                )\n+            }\n         } else if ident.name.as_str().chars().next().map_or(false, |c| c.is_ascii_uppercase()) {\n             // Check whether the name refers to an item in the value namespace.\n             let binding = if let Some(ribs) = ribs {"}, {"sha": "3da04a851f651542b47629bb3ad4b44d583ab8d7", "filename": "tests/ui/use/use-self-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0/tests%2Fui%2Fuse%2Fuse-self-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13f3585dc6ad4332a171b3ff9a6a3c933241dbb0/tests%2Fui%2Fuse%2Fuse-self-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse%2Fuse-self-type.stderr?ref=13f3585dc6ad4332a171b3ff9a6a3c933241dbb0", "patch": "@@ -8,7 +8,7 @@ error[E0432]: unresolved import `Self`\n   --> $DIR/use-self-type.rs:6:13\n    |\n LL |         use Self::f;\n-   |             ^^^^ `Self` is only available in impls, traits, and type definitions\n+   |             ^^^^ `Self` cannot be used in imports\n \n error: aborting due to 2 previous errors\n "}]}