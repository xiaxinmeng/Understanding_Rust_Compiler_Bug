{"sha": "6dfcf9afde98b4e873bfb0012e2efa0f058cc19d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZmNmOWFmZGU5OGI0ZTg3M2JmYjAwMTJlMmVmYTBmMDU4Y2MxOWQ=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-11-07T19:01:47Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-11-07T21:20:26Z"}, "message": "Remove branches from sift_down_to_bottom loop", "tree": {"sha": "0a0b7bedf0353c2ec1057813585f5e01e5521822", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a0b7bedf0353c2ec1057813585f5e01e5521822"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d", "html_url": "https://github.com/rust-lang/rust/commit/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc06a36074f04c6a77b5834f2950011d49607898", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc06a36074f04c6a77b5834f2950011d49607898", "html_url": "https://github.com/rust-lang/rust/commit/dc06a36074f04c6a77b5834f2950011d49607898"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "10ed99b2943dce1f8b9eb2d0cae986dd07c3f5bf", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=6dfcf9afde98b4e873bfb0012e2efa0f058cc19d", "patch": "@@ -563,15 +563,14 @@ impl<T: Ord> BinaryHeap<T> {\n         unsafe {\n             let mut hole = Hole::new(&mut self.data, pos);\n             let mut child = 2 * pos + 1;\n-            while child < end {\n-                let right = child + 1;\n-                // compare with the greater of the two children\n-                if right < end && hole.get(child) <= hole.get(right) {\n-                    child = right;\n-                }\n+            while child < end - 1 {\n+                child += (hole.get(child) <= hole.get(child + 1)) as usize;\n                 hole.move_to(child);\n                 child = 2 * hole.pos() + 1;\n             }\n+            if child == end - 1 {\n+                hole.move_to(child);\n+            }\n             pos = hole.pos;\n         }\n         self.sift_up(start, pos);"}]}