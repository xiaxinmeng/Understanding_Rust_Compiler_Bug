{"sha": "62337f284281637a73a8d4770315850fbf4067aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMzM3ZjI4NDI4MTYzN2E3M2E4ZDQ3NzAzMTU4NTBmYmY0MDY3YWE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-23T12:03:19Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "remove duplicate code and other cleanup", "tree": {"sha": "f4e87d12bea2fc990ee4cd4855ce3aedd487d98b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4e87d12bea2fc990ee4cd4855ce3aedd487d98b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62337f284281637a73a8d4770315850fbf4067aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62337f284281637a73a8d4770315850fbf4067aa", "html_url": "https://github.com/rust-lang/rust/commit/62337f284281637a73a8d4770315850fbf4067aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62337f284281637a73a8d4770315850fbf4067aa/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22824d21da0397d61c15a56dbb88405f4866293d", "url": "https://api.github.com/repos/rust-lang/rust/commits/22824d21da0397d61c15a56dbb88405f4866293d", "html_url": "https://github.com/rust-lang/rust/commit/22824d21da0397d61c15a56dbb88405f4866293d"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "e41ed77fcb95dc3c2d73336c1b8fd30deca2f88f", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/62337f284281637a73a8d4770315850fbf4067aa/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/62337f284281637a73a8d4770315850fbf4067aa/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=62337f284281637a73a8d4770315850fbf4067aa", "patch": "@@ -1,8 +1,8 @@\n [package]\n-authors = [\"Philipp Hansch <dev@phansch.net>\"]\n-edition = \"2018\"\n name = \"clippy_dev\"\n version = \"0.0.1\"\n+authors = [\"Philipp Hansch <dev@phansch.net>\"]\n+edition = \"2018\"\n \n [dependencies]\n bytecount = \"0.6\""}, {"sha": "8a6ce0a89216f76cff9f3e71f2d9f5fbeeb4e8de", "filename": "clippy_dev/src/crater.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/62337f284281637a73a8d4770315850fbf4067aa/clippy_dev%2Fsrc%2Fcrater.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62337f284281637a73a8d4770315850fbf4067aa/clippy_dev%2Fsrc%2Fcrater.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fcrater.rs?ref=62337f284281637a73a8d4770315850fbf4067aa", "patch": "@@ -14,8 +14,14 @@ use std::{fs::write, path::PathBuf};\n \n use serde::{Deserialize, Serialize};\n \n-// crate data we stored in the toml, can have multiple versions.\n-// if so, one TomlKrate maps to several KrateSources\n+// use this to store the crates when interacting with the crates.toml file\n+#[derive(Debug, Serialize, Deserialize)]\n+struct CrateList {\n+    crates: HashMap<String, Vec<String>>,\n+}\n+\n+// crate data we stored in the toml, can have multiple versions per crate\n+// A single TomlCrate is laster mapped to several CrateSources in that case\n struct TomlCrate {\n     name: String,\n     versions: Vec<String>,\n@@ -28,12 +34,6 @@ struct CrateSource {\n     version: String,\n }\n \n-// use this to store the crates when interacting with the crates.toml file\n-#[derive(Debug, Serialize, Deserialize)]\n-struct CrateList {\n-    crates: HashMap<String, Vec<String>>,\n-}\n-\n // represents the extracted sourcecode of a crate\n #[derive(Debug)]\n struct Crate {\n@@ -70,14 +70,8 @@ impl CrateSource {\n             // unzip the tarball\n             let ungz_tar = flate2::read::GzDecoder::new(std::fs::File::open(&krate_file_path).unwrap());\n             // extract the tar archive\n-            let mut archiv = tar::Archive::new(ungz_tar);\n-            archiv.unpack(&extract_dir).expect(\"Failed to extract!\");\n-\n-            // unzip the tarball\n-            let ungz_tar = flate2::read::GzDecoder::new(std::fs::File::open(&krate_file_path).unwrap());\n-            // extract the tar archive\n-            let mut archiv = tar::Archive::new(ungz_tar);\n-            archiv.unpack(&extract_dir).expect(\"Failed to extract!\");\n+            let mut archive = tar::Archive::new(ungz_tar);\n+            archive.unpack(&extract_dir).expect(\"Failed to extract!\");\n         }\n         // crate is extracted, return a new Krate object which contains the path to the extracted\n         // sources that clippy can check\n@@ -132,7 +126,7 @@ impl Crate {\n             })\n             .collect();\n \n-        // sort messages alphabtically to avoid noise in the logs\n+        // sort messages alphabetically to avoid noise in the logs\n         output.sort();\n         output\n     }"}, {"sha": "42d978f4db4043f9c7d33050dacd8ce8443024ca", "filename": "mini-crater/logs.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62337f284281637a73a8d4770315850fbf4067aa/mini-crater%2Flogs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/62337f284281637a73a8d4770315850fbf4067aa/mini-crater%2Flogs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-crater%2Flogs.txt?ref=62337f284281637a73a8d4770315850fbf4067aa", "patch": "@@ -1423,6 +1423,7 @@ iron-0.6.1/src/request/mod.rs:85:24: binding's name is too similar to existing b\n iron-0.6.1/src/request/url.rs:109:5: this method could have a `#[must_use]` attribute\n iron-0.6.1/src/request/url.rs:117:5: this method could have a `#[must_use]` attribute\n iron-0.6.1/src/request/url.rs:124:9: use of deprecated macro `try`: use the `?` operator instead\n+iron-0.6.1/src/request/url.rs:129:1: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n iron-0.6.1/src/request/url.rs:21:14: you should put bare URLs between `<`/`>` or make a proper Markdown link\n iron-0.6.1/src/request/url.rs:22:5: docs for function returning `Result` missing `# Errors` section\n iron-0.6.1/src/request/url.rs:31:5: docs for function returning `Result` missing `# Errors` section"}]}