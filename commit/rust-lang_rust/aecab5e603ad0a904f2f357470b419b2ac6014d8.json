{"sha": "aecab5e603ad0a904f2f357470b419b2ac6014d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlY2FiNWU2MDNhZDBhOTA0ZjJmMzU3NDcwYjQxOWIyYWM2MDE0ZDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-16T17:46:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-16T17:46:29Z"}, "message": "Rollup merge of #72045 - RalfJung:incomplete-unsound, r=petrochenkov\n\nIncomplete features can also be unsound\n\nSome incomplete features do not just ICE, they are also currently unsound (e.g. https://github.com/rust-lang/rust/pull/72029, and also `specialization` -- which is not yet marked incomplete but [should be](https://github.com/rust-lang/rust/pull/71420)). This makes the message reflect that.\n\nWhile at it I also added a link to the tracking issue, which hopefully should explain what is incomplete/unsound about the feature.", "tree": {"sha": "1aaad1682c24f4edd398524253ca85f80f3a3641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aaad1682c24f4edd398524253ca85f80f3a3641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aecab5e603ad0a904f2f357470b419b2ac6014d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJewCb1CRBK7hj4Ov3rIwAAdHIIAK/ajsng3ZJiLdxGR/B53qRl\nEbcLjo7K2hEde4ITCdnUS3Vyh7qeSE5tZtrkgWBGYvioU0Tm/yCwTtcI9rfLvd87\ni3RlMNui8MIc+sODM4yG6Y9EEt/VSm3zsRE84YpNG/eFxtW3skS+JFMGwInDe+ih\nVFjbuiIYjBghUpXIQywUsSDsR/dzbTzLNCkzdeRj2ElkWyoP1bz0g471m+K7kBjR\nmrlyOjULf6caH+4G5U5uaVwvHmS5s3PSBeYhFK4K3Ay+XaZzAEB1JLyBLR2zxBn5\n38ftycv+F6p1VZNWas4I/D0emVlK+RCHIr6ZSxDUC8stfQk9cOj17779ZydEBrI=\n=BZLy\n-----END PGP SIGNATURE-----\n", "payload": "tree 1aaad1682c24f4edd398524253ca85f80f3a3641\nparent 6163394e1ff98c53abc9d27f68b5608faa8cd9b6\nparent 6a8cf4a17c2d2b3daca27e787f4154e233ab4545\nauthor Ralf Jung <post@ralfj.de> 1589651189 +0200\ncommitter GitHub <noreply@github.com> 1589651189 +0200\n\nRollup merge of #72045 - RalfJung:incomplete-unsound, r=petrochenkov\n\nIncomplete features can also be unsound\n\nSome incomplete features do not just ICE, they are also currently unsound (e.g. https://github.com/rust-lang/rust/pull/72029, and also `specialization` -- which is not yet marked incomplete but [should be](https://github.com/rust-lang/rust/pull/71420)). This makes the message reflect that.\n\nWhile at it I also added a link to the tracking issue, which hopefully should explain what is incomplete/unsound about the feature.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aecab5e603ad0a904f2f357470b419b2ac6014d8", "html_url": "https://github.com/rust-lang/rust/commit/aecab5e603ad0a904f2f357470b419b2ac6014d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aecab5e603ad0a904f2f357470b419b2ac6014d8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6163394e1ff98c53abc9d27f68b5608faa8cd9b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6163394e1ff98c53abc9d27f68b5608faa8cd9b6", "html_url": "https://github.com/rust-lang/rust/commit/6163394e1ff98c53abc9d27f68b5608faa8cd9b6"}, {"sha": "6a8cf4a17c2d2b3daca27e787f4154e233ab4545", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a8cf4a17c2d2b3daca27e787f4154e233ab4545", "html_url": "https://github.com/rust-lang/rust/commit/6a8cf4a17c2d2b3daca27e787f4154e233ab4545"}], "stats": {"total": 466, "additions": 284, "deletions": 182}, "files": [{"sha": "327dbecba26ce6f0a47206fb0d4d9099bd46cff6", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -28,8 +28,8 @@ use rustc_ast::visit::{FnCtxt, FnKind};\n use rustc_ast_pretty::pprust::{self, expr_to_string};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n-use rustc_feature::Stability;\n use rustc_feature::{deprecated_attributes, AttributeGate, AttributeTemplate, AttributeType};\n+use rustc_feature::{GateIssue, Stability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n@@ -1817,13 +1817,21 @@ impl EarlyLintPass for IncompleteFeatures {\n             .map(|(name, span, _)| (name, span))\n             .chain(features.declared_lib_features.iter().map(|(name, span)| (name, span)))\n             .filter(|(name, _)| rustc_feature::INCOMPLETE_FEATURES.iter().any(|f| name == &f))\n-            .for_each(|(name, &span)| {\n+            .for_each(|(&name, &span)| {\n                 cx.struct_span_lint(INCOMPLETE_FEATURES, span, |lint| {\n-                    lint.build(&format!(\n-                        \"the feature `{}` is incomplete and may cause the compiler to crash\",\n+                    let mut builder = lint.build(&format!(\n+                        \"the feature `{}` is incomplete and may not be safe to use \\\n+                         and/or cause compiler crashes\",\n                         name,\n-                    ))\n-                    .emit()\n+                    ));\n+                    if let Some(n) = rustc_feature::find_feature_issue(name, GateIssue::Language) {\n+                        builder.note(&format!(\n+                            \"see issue #{} <https://github.com/rust-lang/rust/issues/{}> \\\n+                             for more information\",\n+                            n, n,\n+                        ));\n+                    }\n+                    builder.emit();\n                 })\n             });\n     }"}, {"sha": "0eaeb910be64a591cbe078a40d000fc8e2fb039a", "filename": "src/test/incremental/const-generics/issue-62536.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fincremental%2Fconst-generics%2Fissue-62536.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fincremental%2Fconst-generics%2Fissue-62536.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fissue-62536.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n // revisions:cfail1\n #![feature(const_generics)]\n-//[cfail1]~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//[cfail1]~^ WARN the feature `const_generics` is incomplete\n \n struct S<T, const N: usize>([T; N]);\n "}, {"sha": "6b10c5404944d743beea80c609c93a775e8722c7", "filename": "src/test/incremental/const-generics/issue-64087.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fincremental%2Fconst-generics%2Fissue-64087.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fincremental%2Fconst-generics%2Fissue-64087.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Fissue-64087.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n // revisions:cfail1\n #![feature(const_generics)]\n-//[cfail1]~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//[cfail1]~^ WARN the feature `const_generics` is incomplete\n \n fn combinator<T, const S: usize>() -> [T; S] {}\n //[cfail1]~^ ERROR mismatched types"}, {"sha": "45b2889f1ca4c76d037ee1ec07609163120831da", "filename": "src/test/ui/array-slice-vec/match_arr_unknown_len.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn is_123<const N: usize>(x: [u32; N]) -> bool {\n     match x {"}, {"sha": "4fe8572c2d53130dfc9addddff24c8770e628af8", "filename": "src/test/ui/array-slice-vec/match_arr_unknown_len.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fmatch_arr_unknown_len.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/match_arr_unknown_len.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0308]: mismatched types\n   --> $DIR/match_arr_unknown_len.rs:6:9"}, {"sha": "8b396f23efd545f5c05b0aefb66f6981f3b5bec1", "filename": "src/test/ui/associated-type-bounds/duplicate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -2,7 +2,7 @@\n \n #![feature(associated_type_bounds)]\n #![feature(type_alias_impl_trait)]\n-#![feature(impl_trait_in_bindings)] //~ WARN the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash [incomplete_features]\n+#![feature(impl_trait_in_bindings)] //~ WARN the feature `impl_trait_in_bindings` is incomplete\n #![feature(untagged_unions)]\n \n use std::iter;"}, {"sha": "71f6e4ff8b62d9eb8061948dfb63aad44cf7ee91", "filename": "src/test/ui/associated-type-bounds/duplicate.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/duplicate.rs:5:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error[E0719]: the value of the associated type `Item` (from trait `std::iter::Iterator`) is already specified\n   --> $DIR/duplicate.rs:10:36"}, {"sha": "3637f9558be7bd2d5483e218f6fe517e31458000", "filename": "src/test/ui/associated-type-bounds/dyn-lcsit.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/dyn-lcsit.rs:4:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "11ff03db361470de371cb4713209bc7eb70f8dce", "filename": "src/test/ui/associated-type-bounds/lcsit.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/lcsit.rs:4:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "316fac623254825469c320b309ff395f21f28381", "filename": "src/test/ui/binding/const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fbinding%2Fconst-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fbinding%2Fconst-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Fconst-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-param.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0158]: const parameters cannot be referenced in patterns\n   --> $DIR/const-param.rs:7:9"}, {"sha": "f9c6e201b1762dfe0d6a65e3764c271c92ffea18", "filename": "src/test/ui/const-generics/apit-with-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait Trait {}\n "}, {"sha": "4389e4738eadc8b734accb3719a8d92443b81c0b", "filename": "src/test/ui/const-generics/apit-with-const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/apit-with-const-param.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "6110d16c070d9016ef0faf6f4fcf39bd43f869c2", "filename": "src/test/ui/const-generics/argument_order.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Bad<const N: usize, T> { //~ ERROR type parameters must be declared prior\n     arr: [u8; { N }],"}, {"sha": "f77ae49cf10b17cc66d3466ba8e58a4ef27980c5", "filename": "src/test/ui/const-generics/argument_order.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fargument_order.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -4,13 +4,14 @@ error: type parameters must be declared prior to const parameters\n LL | struct Bad<const N: usize, T> {\n    |           -----------------^- help: reorder the parameters: lifetimes, then types, then consts: `<T, const N: usize>`\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/argument_order.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "5c02e585dc8ba1270a9330c4e3ff07da1ee714ad", "filename": "src/test/ui/const-generics/array-size-in-generic-struct-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #[allow(dead_code)]\n struct ArithArrayLen<const N: usize>([u32; 0 + N]);"}, {"sha": "14cf64eeb7ac69841461972e8e033910824b6869", "filename": "src/test/ui/const-generics/array-size-in-generic-struct-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/array-size-in-generic-struct-param.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: constant expression depends on a generic parameter\n   --> $DIR/array-size-in-generic-struct-param.rs:5:38"}, {"sha": "49fc53b32bd920f9a070a15abb959df5190d20a2", "filename": "src/test/ui/const-generics/array-wrapper-struct-ctor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #![allow(dead_code)]\n "}, {"sha": "e6eb2a0a78303ff7e9bc8557efeed159bd7592fe", "filename": "src/test/ui/const-generics/array-wrapper-struct-ctor.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/array-wrapper-struct-ctor.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "f137be2d6a6faf97e594df1c0b71ae552c830ba8", "filename": "src/test/ui/const-generics/broken-mir-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n pub trait Foo {\n     fn foo(&self);"}, {"sha": "a5532bde1f5e9cb02008e5071e184db32e2e2568", "filename": "src/test/ui/const-generics/broken-mir-1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/broken-mir-1.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "c2f9b786f8f898f4a830fd928993d8992d5b4605", "filename": "src/test/ui/const-generics/broken-mir-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n use std::fmt::Debug;\n "}, {"sha": "05552027f13d01ee5c8f23a79c337629d87dcd0d", "filename": "src/test/ui/const-generics/broken-mir-2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/broken-mir-2.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0277]: arrays only have std trait implementations for lengths 0..=32\n   --> $DIR/broken-mir-2.rs:7:36"}, {"sha": "2f6ad2654c12c4dfda97f22e6497bb6c9f704d8d", "filename": "src/test/ui/const-generics/cannot-infer-const-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn foo<const X: usize>() -> usize {\n     0"}, {"sha": "6696b025855a87bc9c57d67e9001212f4d95f759", "filename": "src/test/ui/const-generics/cannot-infer-const-args.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/cannot-infer-const-args.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0282]: type annotations needed\n   --> $DIR/cannot-infer-const-args.rs:9:5"}, {"sha": "aac5d195f76af63f21a7eade8d4a21843bee9174", "filename": "src/test/ui/const-generics/cannot-infer-type-for-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n // This test confirms that the types can be inferred correctly for this example with const\n // generics. Previously this would ICE, and more recently error."}, {"sha": "c5c48d7be46895123d03a9f0935675e060c35793", "filename": "src/test/ui/const-generics/cannot-infer-type-for-const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/cannot-infer-type-for-const-param.rs:2:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "18ebba49f6f91e0cc3aaeb51c47afdcbf83cd3d8", "filename": "src/test/ui/const-generics/concrete-const-as-fn-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -2,7 +2,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct A<const N: usize>; // ok\n "}, {"sha": "c8f3a8beaf83f825a58a35bd65b371d7bd02adf5", "filename": "src/test/ui/const-generics/concrete-const-as-fn-arg.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/concrete-const-as-fn-arg.rs:4:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "c1ddf9a33140d63260398799cbda052925238e68", "filename": "src/test/ui/const-generics/concrete-const-impl-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -3,7 +3,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n pub struct A<const N: u32>;\n "}, {"sha": "5edb4f4f6cdad2f409dc86403a4a04727830feed", "filename": "src/test/ui/const-generics/concrete-const-impl-method.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/concrete-const-impl-method.rs:5:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "9d8aaed54bd75896f3074bf2b50eb401624774b3", "filename": "src/test/ui/const-generics/condition-in-trait-const-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait IsZeroTrait<const IS_ZERO: bool>{}\n "}, {"sha": "9ac33454128b52b8176a1a9515272dfe408631ab", "filename": "src/test/ui/const-generics/condition-in-trait-const-arg.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/condition-in-trait-const-arg.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "5ea2cf92fdc6084f034cfcf905ab73f30d5ee9ed", "filename": "src/test/ui/const-generics/const-arg-in-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn const_u32_identity<const X: u32>() -> u32 {\n     X"}, {"sha": "bb66849c7fe6c6b53e14f0b710163246fd8aeb3d", "filename": "src/test/ui/const-generics/const-arg-in-fn.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-arg-in-fn.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "9f989ee20a5692e62fdbb001188b0ab74ef44d25", "filename": "src/test/ui/const-generics/const-arg-type-arg-misordered.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n type Array<T, const N: usize> = [T; N];\n "}, {"sha": "ad38b632b75f0eac4ba7d1d754bbaec47b7d4b6e", "filename": "src/test/ui/const-generics/const-arg-type-arg-misordered.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-arg-type-arg-misordered.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0747]: constant provided when a type was expected\n   --> $DIR/const-arg-type-arg-misordered.rs:6:35"}, {"sha": "e0b66a7c14c3aafbdb24e73323e468193189903f", "filename": "src/test/ui/const-generics/const-expression-parameter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn i32_identity<const X: i32>() -> i32 {\n     5"}, {"sha": "e421c22be01a87026d2abd1b0bc5ac64acb18ca9", "filename": "src/test/ui/const-generics/const-expression-parameter.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -4,13 +4,14 @@ error: expected one of `,` or `>`, found `+`\n LL |     i32_identity::<1 + 2>();\n    |                      ^ expected one of `,` or `>`\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-expression-parameter.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "bbc55815e9a208b77fe4cd906f49f21f470257d4", "filename": "src/test/ui/const-generics/const-fn-with-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n const fn const_u32_identity<const X: u32>() -> u32 {\n     X"}, {"sha": "109b50028480b4bc43ee14df2fe80357a0b532bc", "filename": "src/test/ui/const-generics/const-fn-with-const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-fn-with-const-param.rs:2:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "3e43387163b62da5b680a3bd8ba2ec4aa3a6a2a3", "filename": "src/test/ui/const-generics/const-generic-array-wrapper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Foo<T, const N: usize>([T; N]);\n "}, {"sha": "47448bbd19d6d268ef1d04da7b417f057805535f", "filename": "src/test/ui/const-generics/const-generic-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-generic-array-wrapper.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "22f9bd2a0f0b2556c318d86bd1af5c1f6e32b7a6", "filename": "src/test/ui/const-generics/const-generic-type_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #[derive(Debug)]\n struct S<const N: usize>;"}, {"sha": "f161739c9c8a6f0dddab681dbd995bee151747aa", "filename": "src/test/ui/const-generics/const-generic-type_name.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-type_name.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-generic-type_name.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "5e6b6c4dabe0238210a203d8db01e5b1d6af433b", "filename": "src/test/ui/const-generics/const-param-elided-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -4,7 +4,7 @@\n // lifetimes within const/static items.\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct A<const N: &u8>;\n //~^ ERROR `&` without an explicit lifetime name cannot be used here"}, {"sha": "8c50fb73679a90fc5e1f361e8f9947ace38d85e2", "filename": "src/test/ui/const-generics/const-param-elided-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -28,13 +28,14 @@ error[E0637]: `&` without an explicit lifetime name cannot be used here\n LL | fn bar<const N: &u8>() {}\n    |                 ^ explicit lifetime name needed here\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-param-elided-lifetime.rs:6:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: aborting due to 5 previous errors; 1 warning emitted\n "}, {"sha": "4b8e2db7233e4bd2a3eef99fcdad9cbadfac69d7", "filename": "src/test/ui/const-generics/const-param-from-outer-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn foo<const X: u32>() {\n     fn bar() -> u32 {"}, {"sha": "30bd1d7291456e74c4a8bdbce767440edc278051", "filename": "src/test/ui/const-generics/const-param-from-outer-fn.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -8,13 +8,14 @@ LL |     fn bar() -> u32 {\n LL |         X\n    |         ^ use of generic parameter from outer function\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-param-from-outer-fn.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "6874072571108b8a8f9c6dfcff85b046064ddc25", "filename": "src/test/ui/const-generics/const-param-in-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait Trait<const T: ()> {}\n "}, {"sha": "a2e367b25ade05c1c90b53cba9253305d371e86e", "filename": "src/test/ui/const-generics/const-param-in-trait.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-param-in-trait.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "654e36df37e98fcc6b58465416923e7d890faaa1", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n // Currently, const parameters cannot depend on type parameters, because there is no way to\n // enforce the structural-match property on an arbitrary type parameter. This restriction"}, {"sha": "ed05264161e538c5765ed9c2b088b8592c4115aa", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-param-type-depends-on-type-param.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0741]: `T` is not guaranteed to `#[derive(PartialEq, Eq)]`, so may not be used as the type of a const parameter\n   --> $DIR/const-param-type-depends-on-type-param.rs:9:34"}, {"sha": "54a33e2181284224e7a905f9f45657927e3435ae", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #![deny(non_upper_case_globals)]\n "}, {"sha": "b7febed7bdd22e477fd62c12057ad619c5be2a55", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-parameter-uppercase-lint.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: const parameter `x` should have an upper case name\n   --> $DIR/const-parameter-uppercase-lint.rs:6:15"}, {"sha": "bde80f4a1ed0948d23705b192ec14e0a2822535c", "filename": "src/test/ui/const-generics/const-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #![allow(dead_code, unused_variables)]\n "}, {"sha": "4628c9003188450a82497ffa4b4b0828047be84d", "filename": "src/test/ui/const-generics/const-types.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-types.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "c6d8b32f276f31930a8f6ca7e9443c19cd5cb518", "filename": "src/test/ui/const-generics/derive-debug-array-wrapper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #[derive(Debug)]\n struct X<const N: usize> {"}, {"sha": "a0abbd168946ac634b5bff303c41d6e4954d6d3c", "filename": "src/test/ui/const-generics/derive-debug-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/derive-debug-array-wrapper.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0277]: arrays only have std trait implementations for lengths 0..=32\n   --> $DIR/derive-debug-array-wrapper.rs:6:5"}, {"sha": "78964eb3dee6e781d21857ba721b8415f3d4e567", "filename": "src/test/ui/const-generics/different_byref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fdifferent_byref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fdifferent_byref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdifferent_byref.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Const<const V: [usize; 1]> {}\n "}, {"sha": "001d9852a69f8516714b1f097cebb9fcf5300cb2", "filename": "src/test/ui/const-generics/different_byref.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fdifferent_byref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fdifferent_byref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdifferent_byref.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/different_byref.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0308]: mismatched types\n   --> $DIR/different_byref.rs:8:9"}, {"sha": "afa577fa67ff288f4ac3df0b17d1a587bad9ca0c", "filename": "src/test/ui/const-generics/fn-const-param-call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics, const_compare_raw_pointers)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn function() -> u32 {\n     17"}, {"sha": "9c0f7e3ab9b87f82228f3c5bc0ab32f5753ca2c6", "filename": "src/test/ui/const-generics/fn-const-param-call.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/fn-const-param-call.rs:3:12\n    |\n LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "08f6e0db31cae41ee6fc4a7d25fc4ce955820b4d", "filename": "src/test/ui/const-generics/fn-const-param-infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics, const_compare_raw_pointers)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Checked<const F: fn(usize) -> bool>;\n "}, {"sha": "3e07393b9aa8967587ae7cd557000d9689b90d39", "filename": "src/test/ui/const-generics/fn-const-param-infer.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/fn-const-param-infer.rs:1:12\n    |\n LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0308]: mismatched types\n   --> $DIR/fn-const-param-infer.rs:16:31"}, {"sha": "8e16221ed4bd25beb197066eed44eb0dc4bd47b4", "filename": "src/test/ui/const-generics/fn-taking-const-generic-array.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n use std::fmt::Display;\n "}, {"sha": "52fd0a8fec03b94c97fd4c79f12c57d3d0565db2", "filename": "src/test/ui/const-generics/fn-taking-const-generic-array.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/fn-taking-const-generic-array.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "514e215ba1aa2f5f2b869448694b6e8b6153515e", "filename": "src/test/ui/const-generics/forbid-non-structural_match-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #[derive(PartialEq, Eq)]\n struct A;"}, {"sha": "600be64b1e1b8f3dac0a5b04abbd464ef52f6cdb", "filename": "src/test/ui/const-generics/forbid-non-structural_match-types.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforbid-non-structural_match-types.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/forbid-non-structural_match-types.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0741]: `C` must be annotated with `#[derive(PartialEq, Eq)]` to be used as the type of a const parameter\n   --> $DIR/forbid-non-structural_match-types.rs:11:19"}, {"sha": "41113780de32e4550d866d3c5f86f84f36bd1cca", "filename": "src/test/ui/const-generics/foreign-item-const-parameter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n extern \"C\" {\n     fn foo<const X: usize>(); //~ ERROR foreign items may not have const parameters"}, {"sha": "ee947943af134d3c4d57999fb9bc81218bc9710c", "filename": "src/test/ui/const-generics/foreign-item-const-parameter.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fforeign-item-const-parameter.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/foreign-item-const-parameter.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0044]: foreign items may not have const parameters\n   --> $DIR/foreign-item-const-parameter.rs:5:5"}, {"sha": "4c2aee59ffebef14ec73eb5b337cdbad45952d8e", "filename": "src/test/ui/const-generics/impl-const-generic-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct S<const X: u32>;\n "}, {"sha": "9d68df07ce6772f7e957325fb6722252bbb32ed0", "filename": "src/test/ui/const-generics/impl-const-generic-struct.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/impl-const-generic-struct.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "cea64654e11a022603445065be276bb7dfc42b3b", "filename": "src/test/ui/const-generics/incorrect-number-of-const-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn foo<const X: usize, const Y: usize>() -> usize {\n     0"}, {"sha": "51064d7f90fb2fa9968212bb8daa74bc819482d3", "filename": "src/test/ui/const-generics/incorrect-number-of-const-args.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/incorrect-number-of-const-args.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0107]: wrong number of const arguments: expected 2, found 1\n   --> $DIR/incorrect-number-of-const-args.rs:9:5"}, {"sha": "7e8152dacc46ce10621d5f6855b0e91507607152", "filename": "src/test/ui/const-generics/infer_arg_from_pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -2,7 +2,7 @@\n //\n // see issue #70529\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct A<const N: usize> {\n     arr: [u8; N],"}, {"sha": "f52e5e49a3bde78d18a235cace61ede8d3b89c76", "filename": "src/test/ui/const-generics/infer_arg_from_pat.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arg_from_pat.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/infer_arg_from_pat.rs:4:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "cede9ea045d4434339b2272a974f9554a9e1604a", "filename": "src/test/ui/const-generics/infer_arr_len_from_pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -2,7 +2,7 @@\n //\n // see issue #70529\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn as_chunks<const N: usize>() -> [u8; N] {\n     loop {}"}, {"sha": "dfadfbb16637ac24336698208167d7990b20eb25", "filename": "src/test/ui/const-generics/infer_arr_len_from_pat.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finfer_arr_len_from_pat.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/infer_arr_len_from_pat.rs:4:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "952e05bac30f4bc96242040801a1d95f295ba28e", "filename": "src/test/ui/const-generics/integer-literal-generic-arg-in-where-clause.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn takes_closure_of_array_3<F>(f: F) where F: Fn([i32; 3]) {\n     f([1, 2, 3]);"}, {"sha": "aadd10e5ccab361cfbf4b050b0555520af2d601c", "filename": "src/test/ui/const-generics/integer-literal-generic-arg-in-where-clause.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finteger-literal-generic-arg-in-where-clause.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/integer-literal-generic-arg-in-where-clause.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "7c8cdeece871892abe59b859f91b85c7e15eff4d", "filename": "src/test/ui/const-generics/issue-61522-array-len-succ.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n pub struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\n //~^ ERROR constant expression depends on a generic parameter"}, {"sha": "a1fbd5f2025bf35e93670c7dd718221f8b5eb1b0", "filename": "src/test/ui/const-generics/issue-61522-array-len-succ.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61522-array-len-succ.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: constant expression depends on a generic parameter\n   --> $DIR/issue-61522-array-len-succ.rs:4:40"}, {"sha": "74f036e6d89b57d3c06b59d1bf2a91f83fcc0c66", "filename": "src/test/ui/const-generics/issue-66596-impl-trait-for-str-const-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait Trait<const NAME: &'static str> {\n     type Assoc;"}, {"sha": "720420d9cd684e06fdf6b45f27402bef4bf54a88", "filename": "src/test/ui/const-generics/issue-66596-impl-trait-for-str-const-arg.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-66596-impl-trait-for-str-const-arg.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-66596-impl-trait-for-str-const-arg.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "26d74ffb254cebe230785581e22e2995783639c6", "filename": "src/test/ui/const-generics/issues/issue-60818-struct-constructors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Generic<const V: usize>;\n "}, {"sha": "94a2b673a51eca3f30519169af06bcaa2745d655", "filename": "src/test/ui/const-generics/issues/issue-60818-struct-constructors.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-60818-struct-constructors.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "2135c868bbc7013cd103295c415653dec1ff73f1", "filename": "src/test/ui/const-generics/issues/issue-61336-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n // build-pass\n "}, {"sha": "b2c69d57c40b7dc50d864c3be4a35da4f311b2a8", "filename": "src/test/ui/const-generics/issues/issue-61336-1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61336-1.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "52969056f00a5552cc768926ef7df712ab0d1fe0", "filename": "src/test/ui/const-generics/issues/issue-61336-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\n     [x; { N }]"}, {"sha": "5f3395223f95ddc7a3c137cbc890daa2992e1b70", "filename": "src/test/ui/const-generics/issues/issue-61336-2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61336-2.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n   --> $DIR/issue-61336-2.rs:9:5"}, {"sha": "eb0f309762764f5eb79aa625ff1534d958ea4582", "filename": "src/test/ui/const-generics/issues/issue-61336.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\n     [x; N]"}, {"sha": "0eee37df3dd52c1858e6aa3ceb11be62738f2eac", "filename": "src/test/ui/const-generics/issues/issue-61336.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61336.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n   --> $DIR/issue-61336.rs:9:5"}, {"sha": "7e7ef6867ed075c2cd8e790575763d6164a8e321", "filename": "src/test/ui/const-generics/issues/issue-61422.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n use std::mem;\n "}, {"sha": "69bbaada691879eff52e710c876b7267c6d47cf6", "filename": "src/test/ui/const-generics/issues/issue-61422.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61422.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "0440468e9e6228e4782906ac91636a0e26c420eb", "filename": "src/test/ui/const-generics/issues/issue-61432.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn promote<const N: i32>() {\n     // works:"}, {"sha": "1d547b1b6c98e150b9e40b7be1f7930244dc4850", "filename": "src/test/ui/const-generics/issues/issue-61432.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61432.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "9e0572d3568cb771bcf13065218fb4ebfe6d9ed2", "filename": "src/test/ui/const-generics/issues/issue-61747.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Const<const N: usize>;\n "}, {"sha": "2e405370dc0df9a527ec572a3c9decc270ab2f36", "filename": "src/test/ui/const-generics/issues/issue-61747.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61747.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "2f3b5c5dc5b899bd034f87d307a9e3a9f9d2f0a2", "filename": "src/test/ui/const-generics/issues/issue-62187-encountered-polymorphic-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n pub trait BitLen: Sized {\n     const BIT_LEN: usize;"}, {"sha": "a9abb877c094c81a488d10ff7278b3b52d72e2ad", "filename": "src/test/ui/const-generics/issues/issue-62187-encountered-polymorphic-const.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-62187-encountered-polymorphic-const.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: unused variable: `foo`\n   --> $DIR/issue-62187-encountered-polymorphic-const.rs:15:9"}, {"sha": "37947ad1b331cf37a11cc832e2922a2f60773b71", "filename": "src/test/ui/const-generics/issues/issue-62456.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn foo<const N: usize>() {\n     let _ = [0u64; N + 1];"}, {"sha": "0454fed670598667acfb85290a9ef7275eeb1d4c", "filename": "src/test/ui/const-generics/issues/issue-62456.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-62456.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: constant expression depends on a generic parameter\n   --> $DIR/issue-62456.rs:5:20"}, {"sha": "7eaf5eea0787b55bd3e659dd9bf89a796c85980f", "filename": "src/test/ui/const-generics/issues/issue-62579-no-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n #[derive(PartialEq, Eq)]\n struct NoMatch;"}, {"sha": "9fb9b5b13d8d529eba87c07bf22697d94c1410db", "filename": "src/test/ui/const-generics/issues/issue-62579-no-match.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62579-no-match.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-62579-no-match.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "2bcaa27b4d271226f71e844a9bfd281728c59c8c", "filename": "src/test/ui/const-generics/issues/issue-63322-forbid-dyn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-63322-forbid-dyn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-63322-forbid-dyn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-63322-forbid-dyn.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait A {}\n struct B;"}, {"sha": "32054e43716cb39cff3e499a04e8e55b7d429fb7", "filename": "src/test/ui/const-generics/issues/issue-63322-forbid-dyn.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-63322-forbid-dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-63322-forbid-dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-63322-forbid-dyn.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-63322-forbid-dyn.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0741]: `&'static (dyn A + 'static)` must be annotated with `#[derive(PartialEq, Eq)]` to be used as the type of a const parameter\n   --> $DIR/issue-63322-forbid-dyn.rs:8:18"}, {"sha": "e9391096b04d440426a0de363839cb15ceebbac8", "filename": "src/test/ui/const-generics/issues/issue-64519.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Foo<const D: usize> {\n     state: Option<[u8; D]>,"}, {"sha": "6552aea4ad1f17976934ef8fb20247906c94c5d6", "filename": "src/test/ui/const-generics/issues/issue-64519.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64519.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-64519.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "486c72d8a349f03ebfaea5788660df3308ca3ea6", "filename": "src/test/ui/const-generics/issues/issue-66906.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n pub struct Tuple;\n "}, {"sha": "8e8b552f90eb5604e56264ae8f6b0d6f73664c8c", "filename": "src/test/ui/const-generics/issues/issue-66906.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66906.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-66906.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "08a8309d4319f40d966bc1f3e50fb3e86214dde9", "filename": "src/test/ui/const-generics/issues/issue-70125-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n const L: usize = 4;\n "}, {"sha": "8ad4b25ae5bc0c23095d919c59a093d1ae245aed", "filename": "src/test/ui/const-generics/issues/issue-70125-1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-1.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-70125-1.rs:2:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "fb7d4886a7c173173d4e3157a11e5f98c809c368", "filename": "src/test/ui/const-generics/issues/issue-70125-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn main() {\n     <()>::foo();"}, {"sha": "c1f9634810e4897ab298a6440378d5d29029447a", "filename": "src/test/ui/const-generics/issues/issue-70125-2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70125-2.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-70125-2.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "b53cec80071fd429615eaf2e28997360977d84f5", "filename": "src/test/ui/const-generics/issues/issue-70167.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n pub trait Trait<const N: usize>: From<<Self as Trait<N>>::Item> {\n   type Item;"}, {"sha": "5d647e933c4c56daf25021c687d5fba91d16d9c8", "filename": "src/test/ui/const-generics/issues/issue-70167.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-70167.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-70167.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "c22e61d0ce337d2c9921f614ee949f1305077120", "filename": "src/test/ui/const-generics/issues/issue70273-assoc-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait T<const A: usize> {\n     fn f();"}, {"sha": "931701b64b48165a10dd68504dbfe582304dfafd", "filename": "src/test/ui/const-generics/issues/issue70273-assoc-fn.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue70273-assoc-fn.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue70273-assoc-fn.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "9ca1f4552f596c5dfb415883f2e557df097837ff", "filename": "src/test/ui/const-generics/mut-ref-const-param-array.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n use std::ops::AddAssign;\n "}, {"sha": "acbc2df1d740f05d23457fb9a3dc0b559aa20232", "filename": "src/test/ui/const-generics/mut-ref-const-param-array.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/mut-ref-const-param-array.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "c498bfe2e978166a22eca5598cdcdecfc135047b", "filename": "src/test/ui/const-generics/raw-ptr-const-param-deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n #![feature(const_generics, const_compare_raw_pointers)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n const A: u32 = 3;\n "}, {"sha": "1ffc63ffdac03577c22d6ad7763590eaa1e39a4e", "filename": "src/test/ui/const-generics/raw-ptr-const-param-deref.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/raw-ptr-const-param-deref.rs:2:12\n    |\n LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "d7d970e952b656adf6bf0fcbbeb0b73d6ead57a1", "filename": "src/test/ui/const-generics/raw-ptr-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics, const_compare_raw_pointers)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct Const<const P: *const u32>;\n "}, {"sha": "6644c72236b8627b16b341c74c940bd84271cfb4", "filename": "src/test/ui/const-generics/raw-ptr-const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/raw-ptr-const-param.rs:1:12\n    |\n LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0308]: mismatched types\n   --> $DIR/raw-ptr-const-param.rs:7:40"}, {"sha": "4f321b02b82770bc3723a462d4269012585416c7", "filename": "src/test/ui/const-generics/slice-const-param-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct ConstString<const T: &'static str>;\n struct ConstBytes<const T: &'static [u8]>;"}, {"sha": "cc21f197e08b1f904ff22b3beb58312bd20a9e5d", "filename": "src/test/ui/const-generics/slice-const-param-mismatch.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/slice-const-param-mismatch.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0308]: mismatched types\n   --> $DIR/slice-const-param-mismatch.rs:9:35"}, {"sha": "9668f7ddabb38a81568a21c875cdd292105b50fc", "filename": "src/test/ui/const-generics/slice-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n pub fn function_with_str<const STRING: &'static str>() -> &'static str {\n     STRING"}, {"sha": "524bd41a669b44df1c66e8348005735c88d0eca3", "filename": "src/test/ui/const-generics/slice-const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/slice-const-param.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "0b00481d903e02962c221a0982f35f8551f0c5f9", "filename": "src/test/ui/const-generics/struct-with-invalid-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct S<const C: u8>(C); //~ ERROR expected type, found const parameter\n "}, {"sha": "a968b26bc2611ff3ebf339ecb6982033a914423c", "filename": "src/test/ui/const-generics/struct-with-invalid-const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -7,13 +7,14 @@ LL | struct S<const C: u8>(C);\n    | |                     help: a struct with a similar name exists: `S`\n    | similarly named struct `S` defined here\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/struct-with-invalid-const-param.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "1aed9cfe927301f5b030faefa4c66104236ce8ad", "filename": "src/test/ui/const-generics/transparent-maybeunit-array-wrapper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n use std::mem::MaybeUninit;\n "}, {"sha": "6077fe5b1ed39edf74ed4c653e4907d8faa5d29e", "filename": "src/test/ui/const-generics/transparent-maybeunit-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/transparent-maybeunit-array-wrapper.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "588c7b9523aad37a9fe6cbd9f8e9bece1cf920e4", "filename": "src/test/ui/const-generics/type_of_anon_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait T<const A: usize> {\n     fn l<const N: bool>() -> usize;"}, {"sha": "8afed0d39866a9cfe81893fc751deadea71ba931", "filename": "src/test/ui/const-generics/type_of_anon_const.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftype_of_anon_const.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/type_of_anon_const.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "bf517c11262f06807103630d7454cd15392f075a", "filename": "src/test/ui/const-generics/types-mismatch-const-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n // tests the diagnostic output of type mismatches for types that have const generics arguments.\n "}, {"sha": "2131738554f87c960256b02b45598f0b4343999a", "filename": "src/test/ui/const-generics/types-mismatch-const-args.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/types-mismatch-const-args.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0308]: mismatched types\n   --> $DIR/types-mismatch-const-args.rs:13:41"}, {"sha": "7473718351e912bbfd918c45f33386f329accc75", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n use std::fmt;\n "}, {"sha": "f41628d5d8ee945d80d2b081daf65b4945c93193", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/uninferred-consts-during-codegen-1.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "8b95a010473e2941b2e0269095414b82d065b26e", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n use std::fmt;\n "}, {"sha": "f1703bc3a2f8db1d0887e253675d4845c7ffd6b1", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/uninferred-consts-during-codegen-2.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "d9292efc21b749b8dc82ada5f9b7f06e202779ef", "filename": "src/test/ui/const-generics/unused-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct A<const N: usize>; // ok\n "}, {"sha": "be015a689ae14883038ddc23088d2c52083da3af", "filename": "src/test/ui/const-generics/unused-const-param.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/unused-const-param.rs:3:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "2c3ce7c9eab4de82d6d21ee04d6ac47cab209940", "filename": "src/test/ui/const-generics/unused_braces.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -2,7 +2,7 @@\n #![warn(unused_braces)]\n \n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n struct A<const N: usize>;\n "}, {"sha": "e14958ee566ee42f8e02ffaa625584a15178afae", "filename": "src/test/ui/const-generics/unused_braces.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/unused_braces.rs:4:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: unnecessary braces around const expression\n   --> $DIR/unused_braces.rs:11:14"}, {"sha": "30745814b4a744456d74555c54c7ff511e02ee8d", "filename": "src/test/ui/error-codes/E0730.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ferror-codes%2FE0730.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ferror-codes%2FE0730.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0730.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn is_123<const N: usize>(x: [u32; N]) -> bool {\n     match x {"}, {"sha": "f915f6edef52b974c652b106e903b77eeaad96d3", "filename": "src/test/ui/error-codes/E0730.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/E0730.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0730]: cannot pattern-match on an array without a fixed length\n   --> $DIR/E0730.rs:6:9"}, {"sha": "0215ff395df7d835f0008855b0a1e6c7f5f6b9af", "filename": "src/test/ui/generic-associated-types/gat-incomplete-warning.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-incomplete-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-incomplete-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-incomplete-warning.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/gat-incomplete-warning.rs:3:12\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "4ca6d1998353f882ae2119a921e1de8bcc86afa1", "filename": "src/test/ui/hygiene/generic_params.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/generic_params.rs:6:37\n    |\n LL | #![feature(decl_macro, rustc_attrs, const_generics)]\n    |                                     ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "b351b8b73a0e58b6e8fab3ae419f9b2738958861", "filename": "src/test/ui/hygiene/issue-61574-const-parameters.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-61574-const-parameters.rs:6:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "8b9874715342c30e23133117b9a38eec1061a4de", "filename": "src/test/ui/if-attrs/let-chains-attr.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fif-attrs%2Flet-chains-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fif-attrs%2Flet-chains-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif-attrs%2Flet-chains-attr.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `let_chains` is incomplete and may cause the compiler to crash\n+warning: the feature `let_chains` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/let-chains-attr.rs:3:12\n    |\n LL | #![feature(let_chains)]\n    |            ^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "c7fae45d5ca2cf70d1b527ec13e63ebfe7164ddb", "filename": "src/test/ui/impl-trait-in-bindings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n \n #![feature(impl_trait_in_bindings)]\n-//~^ WARN the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `impl_trait_in_bindings` is incomplete\n \n use std::fmt::Debug;\n "}, {"sha": "bf739d4722f6823e4e7fcf6754b57a4586480b50", "filename": "src/test/ui/impl-trait-in-bindings.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/impl-trait-in-bindings.rs:3:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "d1f42be077dc82a78b0a3e734b829c981acab5ca", "filename": "src/test/ui/impl-trait/bindings-opaque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(impl_trait_in_bindings)]\n-//~^ WARN the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `impl_trait_in_bindings` is incomplete\n \n const FOO: impl Copy = 42;\n "}, {"sha": "6656968d79ae032aa94a1178b4eb2910be0fdd35", "filename": "src/test/ui/impl-trait/bindings-opaque.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/bindings-opaque.rs:1:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error[E0599]: no method named `count_ones` found for opaque type `impl std::marker::Copy` in the current scope\n   --> $DIR/bindings-opaque.rs:11:17"}, {"sha": "fd79ba68fbddb08df24e971c9ba3ba259367f4ac", "filename": "src/test/ui/impl-trait/bindings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(impl_trait_in_bindings)]\n-//~^ WARN the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `impl_trait_in_bindings` is incomplete\n \n fn a<T: Clone>(x: T) {\n     const foo: impl Clone = x;"}, {"sha": "e983fdecdba79d4eec39ab3f26e997e8e8460720", "filename": "src/test/ui/impl-trait/bindings.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -22,13 +22,14 @@ error[E0435]: attempt to use a non-constant value in a constant\n LL |         const foo: impl Clone = x;\n    |                                 ^ non-constant value\n \n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/bindings.rs:1:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error: aborting due to 4 previous errors; 1 warning emitted\n "}, {"sha": "36b4ebca4dfc5a4a93d094e575c5b1748914b85f", "filename": "src/test/ui/impl-trait/bound-normalization-fail.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/bound-normalization-fail.rs:4:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error[E0271]: type mismatch resolving `<Foo<()> as FooLike>::Output == <T as impl_trait::Trait>::Assoc`\n   --> $DIR/bound-normalization-fail.rs:27:32"}, {"sha": "afc181a906ac7d155bfc50aaf8b7e71c04eb37ae", "filename": "src/test/ui/impl-trait/bound-normalization-pass.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/bound-normalization-pass.rs:5:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "2e96022318b47ce35bca03d1ae19c4cd5993a36e", "filename": "src/test/ui/inference/cannot-infer-async-enabled-impl-trait-bindings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n // edition:2018\n #![feature(impl_trait_in_bindings)]\n-//~^ WARN the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `impl_trait_in_bindings` is incomplete\n \n use std::io::Error;\n "}, {"sha": "89a22f5e5d6358fc513585b3c4c0511d3142c331", "filename": "src/test/ui/inference/cannot-infer-async-enabled-impl-trait-bindings.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/cannot-infer-async-enabled-impl-trait-bindings.rs:2:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error[E0282]: type annotations needed for `impl std::future::Future`\n   --> $DIR/cannot-infer-async-enabled-impl-trait-bindings.rs:13:9"}, {"sha": "a687a9e3be12c4408857ff38eecc40d47d23a3c1", "filename": "src/test/ui/issues/issue-59508-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,6 +1,6 @@\n #![allow(dead_code)]\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n // This test checks that generic parameter re-ordering diagnostic suggestions mention that\n // consts come after types and lifetimes when the `const_generics` feature is enabled."}, {"sha": "85db20b13fb4cd00aab4fa02fc2e5f9f8968765b", "filename": "src/test/ui/issues/issue-59508-1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -4,13 +4,14 @@ error: lifetime parameters must be declared prior to type parameters\n LL |     pub fn do_things<T, 'a, 'b: 'a>() {\n    |                     ----^^--^^----- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b: 'a, T>`\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-59508-1.rs:2:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "214467793bcea2ca591e0f8e93b63a781b931b0d", "filename": "src/test/ui/parser/impl-item-type-no-body-semantic-fail.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fparser%2Fimpl-item-type-no-body-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fparser%2Fimpl-item-type-no-body-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimpl-item-type-no-body-semantic-fail.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -42,13 +42,14 @@ LL |     type W where Self: Eq;\n    |                          |\n    |                          help: provide a definition for the type: `= <type>;`\n \n-warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n+warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/impl-item-type-no-body-semantic-fail.rs:1:12\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\n \n error[E0202]: associated types are not yet supported in inherent impls (see #8995)\n   --> $DIR/impl-item-type-no-body-semantic-fail.rs:9:5"}, {"sha": "f09ab3bf919881a2053fa05b0feadfc3d3d880f8", "filename": "src/test/ui/resolve/issue-65035-static-with-parent-generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n fn f<T>() {\n     extern \"C\" {"}, {"sha": "7f8151db06f5b8a8ca55699fc564754c6f35465d", "filename": "src/test/ui/resolve/issue-65035-static-with-parent-generics.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -40,13 +40,14 @@ LL | fn i<const N: usize>() {\n LL |     static a: [u8; N] = [0; N];\n    |                             ^ use of generic parameter from outer function\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/issue-65035-static-with-parent-generics.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: aborting due to 5 previous errors; 1 warning emitted\n "}, {"sha": "4c3a00e5f3583dbd0cf6b11a4b71cad4882cee26", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -499,19 +499,22 @@ LL |         true && let 1 = 1\n    = note: only supported directly in conditions of `if`- and `while`-expressions\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/disallowed-positions.rs:20:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n-warning: the feature `let_chains` is incomplete and may cause the compiler to crash\n+warning: the feature `let_chains` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/disallowed-positions.rs:22:12\n    |\n LL | #![feature(let_chains)] // Avoid inflating `.stderr` with overzealous gates in this test.\n    |            ^^^^^^^^^^\n+   |\n+   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n \n error[E0658]: `match` is not allowed in a `const`\n   --> $DIR/disallowed-positions.rs:218:17"}, {"sha": "bf082932bd6ce789deaf558910f1622cd02ea757", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-and-name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(raw_dylib)]\n-//~^ WARN the feature `raw_dylib` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `raw_dylib` is incomplete\n \n #[link(name=\"foo\")]\n extern {"}, {"sha": "5d8545b506204698ec33cf2ca5b52b5f54105577", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-and-name.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-and-name.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `raw_dylib` is incomplete and may cause the compiler to crash\n+warning: the feature `raw_dylib` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/link-ordinal-and-name.rs:1:12\n    |\n LL | #![feature(raw_dylib)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #58713 <https://github.com/rust-lang/rust/issues/58713> for more information\n \n error: cannot use `#[link_name]` with `#[link_ordinal]`\n   --> $DIR/link-ordinal-and-name.rs:7:5"}, {"sha": "ea633c5bcce24a0ef5e5e05ab6a12b7885e12e70", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-invalid-format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(raw_dylib)]\n-//~^ WARN the feature `raw_dylib` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `raw_dylib` is incomplete\n \n #[link(name=\"foo\")]\n extern {"}, {"sha": "8453a3966bee5f90cbd578222fdc7ce9d194d140", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-invalid-format.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-invalid-format.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `raw_dylib` is incomplete and may cause the compiler to crash\n+warning: the feature `raw_dylib` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/link-ordinal-invalid-format.rs:1:12\n    |\n LL | #![feature(raw_dylib)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #58713 <https://github.com/rust-lang/rust/issues/58713> for more information\n \n error: illegal ordinal format in `link_ordinal`\n   --> $DIR/link-ordinal-invalid-format.rs:6:5"}, {"sha": "55cc329dc594b6b8e450275fc26c53236a661f73", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-too-large.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,5 +1,5 @@\n #![feature(raw_dylib)]\n-//~^ WARN the feature `raw_dylib` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `raw_dylib` is incomplete\n \n #[link(name=\"foo\")]\n extern {"}, {"sha": "35f9b53fdf7201bd57a4bd3c2bde023fc4046960", "filename": "src/test/ui/rfc-2627-raw-dylib/link-ordinal-too-large.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2627-raw-dylib%2Flink-ordinal-too-large.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `raw_dylib` is incomplete and may cause the compiler to crash\n+warning: the feature `raw_dylib` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/link-ordinal-too-large.rs:1:12\n    |\n LL | #![feature(raw_dylib)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #58713 <https://github.com/rust-lang/rust/issues/58713> for more information\n \n error: ordinal value in `link_ordinal` is too large: `18446744073709551616`\n   --> $DIR/link-ordinal-too-large.rs:6:5"}, {"sha": "d53f562e99f4bf8ee866c554f5b0a1bb7cdcde09", "filename": "src/test/ui/type-alias-impl-trait/assoc-type-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fassoc-type-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fassoc-type-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fassoc-type-const.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -4,7 +4,7 @@\n \n #![feature(type_alias_impl_trait)]\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `const_generics` is incomplete\n \n trait UnwrapItemsExt<'a, const C: usize> {\n     type Iter;"}, {"sha": "e0c1b023861278b69a07989c53c0dd367693ae14", "filename": "src/test/ui/type-alias-impl-trait/assoc-type-const.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fassoc-type-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fassoc-type-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fassoc-type-const.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/assoc-type-const.rs:6:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "bc2bf9eca93bdc24c7d0f63526db93c008c96a7b", "filename": "src/test/ui/type-alias-impl-trait/type-alias-impl-trait-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-const.rs?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -6,7 +6,7 @@\n // Specifically, this line requires `impl_trait_in_bindings` to be enabled:\n // https://github.com/rust-lang/rust/blob/481068a707679257e2a738b40987246e0420e787/src/librustc_typeck/check/mod.rs#L856\n #![feature(impl_trait_in_bindings)]\n-//~^ WARN the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+//~^ WARN the feature `impl_trait_in_bindings` is incomplete\n \n // Ensures that `const` items can constrain an opaque `impl Trait`.\n "}, {"sha": "b0593d51a250cea5031660e37e30db7027753e7e", "filename": "src/test/ui/type-alias-impl-trait/type-alias-impl-trait-const.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aecab5e603ad0a904f2f357470b419b2ac6014d8/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-impl-trait-const.stderr?ref=aecab5e603ad0a904f2f357470b419b2ac6014d8", "patch": "@@ -1,10 +1,11 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/type-alias-impl-trait-const.rs:8:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n warning: 1 warning emitted\n "}]}