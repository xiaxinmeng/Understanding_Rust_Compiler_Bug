{"sha": "bc4daf7e945bf9fff93e41e129d600514f7135df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNGRhZjdlOTQ1YmY5ZmZmOTNlNDFlMTI5ZDYwMDUxNGY3MTM1ZGY=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-22T16:56:47Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-22T16:56:47Z"}, "message": "Rollup merge of #27084 - GuillaumeGomez:patch-2, r=brson\n\nPart of #24407.\r\nr? @Manishearth", "tree": {"sha": "032f33e2f0d6f0a67c15bf9379ed5a8fc2d09962", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/032f33e2f0d6f0a67c15bf9379ed5a8fc2d09962"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc4daf7e945bf9fff93e41e129d600514f7135df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4daf7e945bf9fff93e41e129d600514f7135df", "html_url": "https://github.com/rust-lang/rust/commit/bc4daf7e945bf9fff93e41e129d600514f7135df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc4daf7e945bf9fff93e41e129d600514f7135df/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4d4206e5604b86fc4a9b28a8b51d99121cc3a5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d4206e5604b86fc4a9b28a8b51d99121cc3a5d", "html_url": "https://github.com/rust-lang/rust/commit/d4d4206e5604b86fc4a9b28a8b51d99121cc3a5d"}, {"sha": "2e919b4c5107a584ffcf58e4b39a001275845fec", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e919b4c5107a584ffcf58e4b39a001275845fec", "html_url": "https://github.com/rust-lang/rust/commit/2e919b4c5107a584ffcf58e4b39a001275845fec"}], "stats": {"total": 161, "additions": 154, "deletions": 7}, "files": [{"sha": "21a950060947b3cab56149d67c3874988c75b85a", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 154, "deletions": 7, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/bc4daf7e945bf9fff93e41e129d600514f7135df/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc4daf7e945bf9fff93e41e129d600514f7135df/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=bc4daf7e945bf9fff93e41e129d600514f7135df", "patch": "@@ -272,7 +272,160 @@ See the 'Use Declarations' section of the reference for more information\n on this topic:\n \n http://doc.rust-lang.org/reference.html#use-declarations\n-\"##\n+\"##,\n+\n+E0403: r##\"\n+Some type parameters have the same name. Example of erroneous code:\n+\n+```\n+fn foo<T, T>(s: T, u: T) {} // error: the name `T` is already used for a type\n+                            //        parameter in this type parameter list\n+```\n+\n+Please verify that none of the type parameterss are misspelled, and rename any\n+clashing parameters. Example:\n+\n+```\n+fn foo<T, Y>(s: T, u: Y) {} // ok!\n+```\n+\"##,\n+\n+E0404: r##\"\n+You tried to implement something which was not a trait on an object. Example of\n+erroneous code:\n+\n+```\n+struct Foo;\n+struct Bar;\n+\n+impl Foo for Bar {} // error: `Foo` is not a trait\n+```\n+\n+Please verify that you didn't misspell the trait's name or otherwise use the\n+wrong identifier. Example:\n+\n+```\n+trait Foo {\n+    // some functions\n+}\n+struct Bar;\n+\n+impl Foo for Bar { // ok!\n+    // functions implementation\n+}\n+```\n+\"##,\n+\n+E0405: r##\"\n+An unknown trait was implemented. Example of erroneous code:\n+\n+```\n+struct Foo;\n+\n+impl SomeTrait for Foo {} // error: use of undeclared trait name `SomeTrait`\n+```\n+\n+Please verify that the name of the trait wasn't misspelled and ensure that it\n+was imported. Example:\n+\n+```\n+// solution 1:\n+use some_file::SomeTrait;\n+\n+// solution 2:\n+trait SomeTrait {\n+    // some functions\n+}\n+\n+struct Foo;\n+\n+impl SomeTrait for Foo { // ok!\n+    // implements functions\n+}\n+```\n+\"##,\n+\n+E0407: r##\"\n+A definition of a method not in the implemented trait was given in a trait\n+implementation. Example of erroneous code:\n+\n+```\n+trait Foo {\n+    fn a();\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    fn a() {}\n+    fn b() {} // error: method `b` is not a member of trait `Foo`\n+}\n+```\n+\n+Please verify you didn't misspell the method name and you used the correct\n+trait. First example:\n+\n+```\n+trait Foo {\n+    fn a();\n+    fn b();\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    fn a() {}\n+    fn b() {} // ok!\n+}\n+```\n+\n+Second example:\n+\n+```\n+trait Foo {\n+    fn a();\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    fn a() {}\n+}\n+\n+impl Bar {\n+    fn b() {}\n+}\n+```\n+\"##,\n+\n+E0428: r##\"\n+A type or module has been defined more than once. Example of erroneous\n+code:\n+\n+```\n+struct Bar;\n+struct Bar; // error: duplicate definition of value `Bar`\n+```\n+\n+Please verify you didn't misspell the type/module's name or remove/rename the\n+duplicated one. Example:\n+\n+```\n+struct Bar;\n+struct Bar2; // ok!\n+```\n+\"##,\n+\n+E0433: r##\"\n+Invalid import. Example of erroneous code:\n+\n+```\n+use something_which_doesnt_exist;\n+// error: unresolved import `something_which_doesnt_exist`\n+```\n+\n+Please verify you didn't misspell the import's name.\n+\"##,\n \n }\n \n@@ -284,11 +437,7 @@ register_diagnostics! {\n     E0258,\n     E0401, // can't use type parameters from outer function\n     E0402, // cannot use an outer type parameter in this context\n-    E0403, // the name `{}` is already used\n-    E0404, // is not a trait\n-    E0405, // use of undeclared trait name\n     E0406, // undeclared associated type\n-    E0407, // method is not a member of trait\n     E0408, // variable from pattern #1 is not bound in pattern #\n     E0409, // variable is bound with different mode in pattern # than in\n            // pattern #1\n@@ -313,13 +462,11 @@ register_diagnostics! {\n     E0425, // unresolved name\n     E0426, // use of undeclared label\n     E0427, // cannot use `ref` binding mode with ...\n-    E0428, // duplicate definition of ...\n     E0429, // `self` imports are only allowed within a { } list\n     E0430, // `self` import can only appear once in the list\n     E0431, // `self` import can only appear in an import list with a non-empty\n            // prefix\n     E0432, // unresolved import\n-    E0433, // failed to resolve\n     E0434, // can't capture dynamic environment in a fn item\n     E0435, // attempt to use a non-constant value in a constant\n     E0437, // type is not a member of trait"}]}