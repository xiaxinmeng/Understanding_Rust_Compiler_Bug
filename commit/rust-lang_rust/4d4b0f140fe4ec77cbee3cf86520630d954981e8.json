{"sha": "4d4b0f140fe4ec77cbee3cf86520630d954981e8", "node_id": "C_kwDOAAsO6NoAKDRkNGIwZjE0MGZlNGVjNzdjYmVlM2NmODY1MjA2MzBkOTU0OTgxZTg", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-29T15:29:38Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-29T15:29:38Z"}, "message": "remove and bless", "tree": {"sha": "2195fb52191d5b3801332342c9ac1a92aa251fb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2195fb52191d5b3801332342c9ac1a92aa251fb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d4b0f140fe4ec77cbee3cf86520630d954981e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4b0f140fe4ec77cbee3cf86520630d954981e8", "html_url": "https://github.com/rust-lang/rust/commit/4d4b0f140fe4ec77cbee3cf86520630d954981e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d4b0f140fe4ec77cbee3cf86520630d954981e8/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1c5f34f76cea4a98b6af44f58e109b2e0c8922a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1c5f34f76cea4a98b6af44f58e109b2e0c8922a", "html_url": "https://github.com/rust-lang/rust/commit/f1c5f34f76cea4a98b6af44f58e109b2e0c8922a"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "42a205fad75cfe383c8dd7121bd6063fd9771a70", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d4b0f140fe4ec77cbee3cf86520630d954981e8/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4b0f140fe4ec77cbee3cf86520630d954981e8/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=4d4b0f140fe4ec77cbee3cf86520630d954981e8", "patch": "@@ -1180,10 +1180,6 @@ impl<'tcx> LocalDecl<'tcx> {\n         }\n     }\n \n-    pub fn temp(mut self) {\n-        self.local_info = Some(Box::new(LocalInfo::Temp));\n-    }\n-\n     /// Converts `self` into same `LocalDecl` except tagged as internal.\n     #[inline]\n     pub fn internal(mut self) -> Self {"}, {"sha": "825340892d99e03969ec97f3eecb5f817fc57ec7", "filename": "compiler/rustc_mir_transform/src/add_retag.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d4b0f140fe4ec77cbee3cf86520630d954981e8/compiler%2Frustc_mir_transform%2Fsrc%2Fadd_retag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4b0f140fe4ec77cbee3cf86520630d954981e8/compiler%2Frustc_mir_transform%2Fsrc%2Fadd_retag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fadd_retag.rs?ref=4d4b0f140fe4ec77cbee3cf86520630d954981e8", "patch": "@@ -59,8 +59,8 @@ fn may_be_reference(ty: Ty<'_>) -> bool {\n \n /// Determines whether or not this LocalDecl is temp, if not it needs retagging.\n fn is_not_temp<'tcx>(local_decl: &LocalDecl<'tcx>) -> bool {\n-    if local_decl.local_info.is_some() {\n-        match local_decl.local_info.as_ref().unwrap().as_ref() {\n+    if let Some(local_info) = &local_decl.local_info {\n+        match local_info.as_ref() {\n             LocalInfo::Temp => return false,\n             _ => (),\n         };"}, {"sha": "f02bccc4b2da50039c9fa6d912622b93e1af575e", "filename": "src/test/run-make/const_fn_mir/dump.mir", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d4b0f140fe4ec77cbee3cf86520630d954981e8/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4d4b0f140fe4ec77cbee3cf86520630d954981e8/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir?ref=4d4b0f140fe4ec77cbee3cf86520630d954981e8", "patch": "@@ -23,10 +23,6 @@ fn foo() -> i32 {\n         _0 = move (_1.0: i32);           // scope 0 at main.rs:5:5: 5:10\n         return;                          // scope 0 at main.rs:6:2: 6:2\n     }\n-\n-    bb2 (cleanup): {\n-        resume;                          // scope 0 at main.rs:4:1: 6:2\n-    }\n }\n \n fn main() -> () {"}]}