{"sha": "12ce0c2a891d872c8fb32eb17b6258ea99a971ad", "node_id": "C_kwDOAAsO6NoAKDEyY2UwYzJhODkxZDg3MmM4ZmIzMmViMTdiNjI1OGVhOTlhOTcxYWQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-06T13:45:11Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-06T13:45:11Z"}, "message": "Remove outdated syntax from trait alias pretty printing", "tree": {"sha": "e483f85769f0915de7ccadb6f97a8cbc90925e2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e483f85769f0915de7ccadb6f97a8cbc90925e2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12ce0c2a891d872c8fb32eb17b6258ea99a971ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12ce0c2a891d872c8fb32eb17b6258ea99a971ad", "html_url": "https://github.com/rust-lang/rust/commit/12ce0c2a891d872c8fb32eb17b6258ea99a971ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12ce0c2a891d872c8fb32eb17b6258ea99a971ad/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5351ad4dcd9f3d73241b2acbfc6b4631da845c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5351ad4dcd9f3d73241b2acbfc6b4631da845c5", "html_url": "https://github.com/rust-lang/rust/commit/c5351ad4dcd9f3d73241b2acbfc6b4631da845c5"}], "stats": {"total": 28, "additions": 3, "deletions": 25}, "files": [{"sha": "5b6a07721e2bbdb605710cfb2a701f5e90078584", "filename": "compiler/rustc_ast_pretty/src/pprust/state/item.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/12ce0c2a891d872c8fb32eb17b6258ea99a971ad/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ce0c2a891d872c8fb32eb17b6258ea99a971ad/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs?ref=12ce0c2a891d872c8fb32eb17b6258ea99a971ad", "patch": "@@ -348,21 +348,10 @@ impl<'a> State<'a> {\n                 self.head(visibility_qualified(&item.vis, \"trait\"));\n                 self.print_ident(item.ident);\n                 self.print_generic_params(&generics.params);\n-                let mut real_bounds = Vec::with_capacity(bounds.len());\n-                // FIXME(durka) this seems to be some quite outdated syntax\n-                for b in bounds.iter() {\n-                    if let GenericBound::Trait(ptr, ast::TraitBoundModifier::Maybe) = b {\n-                        self.space();\n-                        self.word_space(\"for ?\");\n-                        self.print_trait_ref(&ptr.trait_ref);\n-                    } else {\n-                        real_bounds.push(b.clone());\n-                    }\n-                }\n                 self.nbsp();\n-                if !real_bounds.is_empty() {\n+                if !bounds.is_empty() {\n                     self.word_nbsp(\"=\");\n-                    self.print_type_bounds(&real_bounds);\n+                    self.print_type_bounds(&bounds);\n                 }\n                 self.print_where_clause(&generics.where_clause);\n                 self.word(\";\");"}, {"sha": "94bab9f339d8c9e0b8d0c5741975506184e1bbca", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/12ce0c2a891d872c8fb32eb17b6258ea99a971ad/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ce0c2a891d872c8fb32eb17b6258ea99a971ad/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=12ce0c2a891d872c8fb32eb17b6258ea99a971ad", "patch": "@@ -695,19 +695,8 @@ impl<'a> State<'a> {\n                 self.head(\"trait\");\n                 self.print_ident(item.ident);\n                 self.print_generic_params(generics.params);\n-                let mut real_bounds = Vec::with_capacity(bounds.len());\n-                // FIXME(durka) this seems to be some quite outdated syntax\n-                for b in bounds {\n-                    if let GenericBound::Trait(ptr, hir::TraitBoundModifier::Maybe) = b {\n-                        self.space();\n-                        self.word_space(\"for ?\");\n-                        self.print_trait_ref(&ptr.trait_ref);\n-                    } else {\n-                        real_bounds.push(b);\n-                    }\n-                }\n                 self.nbsp();\n-                self.print_bounds(\"=\", real_bounds);\n+                self.print_bounds(\"=\", bounds);\n                 self.print_where_clause(generics);\n                 self.word(\";\");\n                 self.end(); // end inner head-block"}]}