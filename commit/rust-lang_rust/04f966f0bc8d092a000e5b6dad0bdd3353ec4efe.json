{"sha": "04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0Zjk2NmYwYmM4ZDA5MmEwMDBlNWI2ZGFkMGJkZDMzNTNlYzRlZmU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-05T01:28:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-05T01:29:08Z"}, "message": "build: Build intrinsics.bc", "tree": {"sha": "c958e9b9b37c6b687312137f34d2b561fb3ad49d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c958e9b9b37c6b687312137f34d2b561fb3ad49d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "html_url": "https://github.com/rust-lang/rust/commit/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "add7d34164089626a7f0b2fa86e2fb6c29e5118b", "url": "https://api.github.com/repos/rust-lang/rust/commits/add7d34164089626a7f0b2fa86e2fb6c29e5118b", "html_url": "https://github.com/rust-lang/rust/commit/add7d34164089626a7f0b2fa86e2fb6c29e5118b"}], "stats": {"total": 56, "additions": 48, "deletions": 8}, "files": [{"sha": "fe01d9ac743dd5bae7263c35763e72ee47d01a88", "filename": "Makefile.in", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "patch": "@@ -137,6 +137,12 @@ SREQ2 := stage2/rustc$(X) $(LREQ) stage3/glue.o stage3/$(CFG_STDLIB)\n \n export CFG_SRC_DIR\n \n+######################################################################\n+# Subprograms\n+######################################################################\n+\n+LLVM_AS := $(CFG_LLVM_BINDIR)/llvm-as\n+\n \n ######################################################################\n # Single-target rules\n@@ -145,17 +151,21 @@ export CFG_SRC_DIR\n all: rt/$(CFG_RUNTIME)          \\\n      rustllvm/$(CFG_RUSTLLVM)   \\\n      stage0/$(CFG_STDLIB)       \\\n+     stage0/intrinsics.bc       \\\n      stage0/rustc$(X)           \\\n      $(GENERATED)               \\\n      $(DOCS)                    \\\n      stage1/$(CFG_STDLIB)       \\\n+     stage1/intrinsics.bc       \\\n      stage1/glue.o              \\\n      stage1/rustc$(X)           \\\n      stage2/$(CFG_STDLIB)       \\\n+     stage2/intrinsics.bc       \\\n      stage2/glue.o              \\\n      stage2/rustc$(X)           \\\n      stage3/$(CFG_STDLIB)       \\\n      stage3/glue.o              \\\n+     stage3/intrinsics.bc       \\\n      stage3/rustc$(X)\n \n \n@@ -172,6 +182,7 @@ config.mk: $(S)configure $(S)Makefile.in\n # Additional makefiles\n ######################################################################\n \n+include $(CFG_SRC_DIR)/mk/intrinsics.mk\n include $(CFG_SRC_DIR)/mk/stage0.mk\n include $(CFG_SRC_DIR)/mk/stage1.mk\n include $(CFG_SRC_DIR)/mk/stage2.mk"}, {"sha": "a359de9c29ff6b60268b3d89488697ee42f2f108", "filename": "configure", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/configure", "raw_url": "https://github.com/rust-lang/rust/raw/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "patch": "@@ -122,6 +122,7 @@ need_cmd find\n need_cmd uname\n need_cmd date\n need_cmd tr\n+need_cmd sed\n \n msg \"inspecting environment\"\n \n@@ -215,6 +216,10 @@ then\n                        --version \\\n                        | grep version \\\n                        | cut -d ' ' -f 5-)\n+    CFG_LLVM_TRIPLE=$(\"$CFG_LLVM_BINDIR/llc\" \\\n+\t                  --version \\\n+\t\t\t\t\t  | grep Host: \\\n+\t\t\t\t\t  | cut -d ' ' -f 4-)\n elif [ ! -z \"$CFG_LLVM_CONFIG\" ]\n then\n     CFG_LLVM_VERSION=$(llvm-config --version)\n@@ -224,6 +229,7 @@ then\n     CFG_LLVM_CXXFLAGS=$(llvm-config --cxxflags)\n     CFG_LLVM_LDFLAGS=$(llvm-config --ldflags)\n     CFG_LLVM_LIBS=$(llvm-config --libs)\n+    CFG_LLVM_TRIPLE=$(llvm-config --host-target)\n else\n     err \"either the \\\"CFG_LLVM_ROOT\\\" environment variable must be set, or a \\\n \\\"llvm-config\\\" script must be present\"\n@@ -244,6 +250,7 @@ putvar CFG_LLVM_LIBDIR\n putvar CFG_LLVM_CXXFLAGS\n putvar CFG_LLVM_LDFLAGS\n putvar CFG_LLVM_LIBS\n+putvar CFG_LLVM_TRIPLE\n \n # Munge any paths that appear in config.mk back to posix-y\n perl -i.bak -p -e 's@ ([a-zA-Z]):[/\\\\]@ /\\1/@go;' \\"}, {"sha": "e79ae8435f95d3adbb2d36666bb7981b558e93b4", "filename": "mk/stage0.mk", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "patch": "@@ -10,3 +10,9 @@ stage0/glue.o: stage0/rustc$(X)\n \n stage0/$(CFG_STDLIB): stage0/rustc$(X)\n \t$(Q)touch $@\n+\n+# TODO: Include as part of the snapshot.\n+stage0/intrinsics.bc:   $(INTRINSICS_BC)\n+\t@$(call E, cp: $@)\n+\t$(Q)cp $< $@\n+"}, {"sha": "eb30e78251156ca3ea9b07f6f95f2b77da00a608", "filename": "mk/stage1.mk", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage1.mk", "raw_url": "https://github.com/rust-lang/rust/raw/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage1.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage1.mk?ref=04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "patch": "@@ -1,5 +1,6 @@\n stage1/std.o: $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n-              stage0/rustc$(X) stage0/$(CFG_STDLIB) $(LREQ) $(MKFILES)\n+              stage0/rustc$(X) stage0/$(CFG_STDLIB) stage0/intrinsics.bc \\\n+              $(LREQ) $(MKFILES)\n \t@$(call E, compile: $@)\n \t$(STAGE0) -c --shared -o $@ $<\n \n@@ -12,10 +13,15 @@ stage1/rustc.o: $(COMPILER_CRATE) $(COMPILER_INPUTS) $(SREQ0)\n \t@$(call E, compile: $@)\n \t$(STAGE0) -c -o $@ $<\n \n-stage1/glue.o: stage0/rustc$(X) stage0/$(CFG_STDLIB) $(LREQ) $(MKFILES)\n+stage1/glue.o: stage0/rustc$(X) stage0/$(CFG_STDLIB) stage0/intrinsics.bc \\\n+               $(LREQ) $(MKFILES)\n \t@$(call E, generate: $@)\n \t$(STAGE0) -c -o $@ --glue\n \n+stage1/intrinsics.bc:\t$(INTRINSICS_BC)\n+\t@$(call E, cp: $@)\n+\t$(Q)cp $< $@\n+\n # Due to make not wanting to run the same implicit rules twice on the same\n # rule tree (implicit-rule recursion prevention, see \"Chains of Implicit\n # Rules\" in GNU Make manual) we have to re-state the %.o and %.s patterns here"}, {"sha": "74e76c3ce0380fbe7e82198bd2b34cb7d724816a", "filename": "mk/stage2.mk", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage2.mk", "raw_url": "https://github.com/rust-lang/rust/raw/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage2.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage2.mk?ref=04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "patch": "@@ -1,4 +1,5 @@\n-stage2/std.o: $(STDLIB_CRATE) $(STDLIB_INPUTS) stage1/rustc$(X) $(MKFILES)\n+stage2/std.o: $(STDLIB_CRATE) $(STDLIB_INPUTS) stage1/rustc$(X) \\\n+              stage1/intrinsics.bc $(MKFILES)\n \t@$(call E, compile: $@)\n \t$(STAGE1) -c --shared -o $@ $<\n \n@@ -11,11 +12,15 @@ stage2/rustc.o: $(COMPILER_CRATE) $(COMPILER_INPUTS) $(SREQ1)\n \t@$(call E, compile: $@)\n \t$(STAGE1) -c -o $@ $<\n \n-stage2/glue.o: stage1/rustc$(X) stage1/$(CFG_STDLIB) \\\n-                rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n+stage2/glue.o: stage1/rustc$(X) stage1/$(CFG_STDLIB) stage1/intrinsics.bc \\\n+               rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t@$(call E, generate: $@)\n \t$(STAGE1) -c -o $@ --glue\n \n+stage2/intrinsics.bc:\t$(INTRINSICS_BC)\n+\t@$(call E, cp: $@)\n+\t$(Q)cp $< $@\n+\n # Due to make not wanting to run the same implicit rules twice on the same\n # rule tree (implicit-rule recursion prevention, see \"Chains of Implicit\n # Rules\" in GNU Make manual) we have to re-state the %.o and %.s patterns here"}, {"sha": "427f37f88ee4c07dd67f8509d4f4bc685545ac82", "filename": "mk/stage3.mk", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage3.mk", "raw_url": "https://github.com/rust-lang/rust/raw/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/mk%2Fstage3.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage3.mk?ref=04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "patch": "@@ -1,4 +1,5 @@\n-stage3/std.o: $(STDLIB_CRATE) $(STDLIB_INPUTS) stage2/rustc$(X) $(MKFILES)\n+stage3/std.o: $(STDLIB_CRATE) $(STDLIB_INPUTS) stage2/rustc$(X) \\\n+              stage2/intrinsics.bc $(MKFILES)\n \t@$(call E, compile: $@)\n \t$(STAGE2) -c --shared -o $@ $<\n \n@@ -11,11 +12,15 @@ stage3/rustc.o: $(COMPILER_CRATE) $(COMPILER_INPUTS) $(SREQ2)\n \t@$(call E, compile: $@)\n \t$(STAGE2) -c -o $@ $<\n \n-stage3/glue.o: stage2/rustc$(X) stage2/$(CFG_STDLIB) \\\n+stage3/glue.o: stage2/rustc$(X) stage2/$(CFG_STDLIB) stage2/intrinsics.bc \\\n                 rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t@$(call E, generate: $@)\n \t$(STAGE2) -c -o $@ --glue\n \n+stage3/intrinsics.bc:\t$(INTRINSICS_BC)\n+\t@$(call E, cp: $@)\n+\t$(Q)cp $< $@\n+\n # Due to make not wanting to run the same implicit rules twice on the same\n # rule tree (implicit-rule recursion prevention, see \"Chains of Implicit\n # Rules\" in GNU Make manual) we have to re-state the %.o and %.s patterns here"}, {"sha": "2a05555ef0261250b55083d8ce9bfc8121ebdb4f", "filename": "src/rt/intrinsics/intrinsics.ll.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in", "raw_url": "https://github.com/rust-lang/rust/raw/04f966f0bc8d092a000e5b6dad0bdd3353ec4efe/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in?ref=04f966f0bc8d092a000e5b6dad0bdd3353ec4efe", "patch": "@@ -1,6 +1,6 @@\n ; ModuleID = 'intrinsics.cpp'\n target datalayout = \"e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128-n8:16:32\"\n-target triple = \"$(LLVM_TRIPLE)\"\n+target triple = \"@CFG_LLVM_TRIPLE@\"\n \n %0 = type { i32, i8**, i32 }\n %1 = type { %\"struct.hash_map<rust_task *, rust_handle<rust_task> *>::map_entry\"* }"}]}