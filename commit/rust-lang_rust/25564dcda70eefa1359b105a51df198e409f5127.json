{"sha": "25564dcda70eefa1359b105a51df198e409f5127", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NTY0ZGNkYTcwZWVmYTEzNTliMTA1YTUxZGYxOThlNDA5ZjUxMjc=", "commit": {"author": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2016-12-06T16:37:32Z"}, "committer": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2016-12-06T16:37:32Z"}, "message": "[LLVM 4.0] rustllvm archive support\n\nError handling is being transitioned from ErrorOr<T> to Expected<T> which has a different API and requires explicitly handling all errors", "tree": {"sha": "3ca7af38066a2c416925556a6fd37c9197a24e51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ca7af38066a2c416925556a6fd37c9197a24e51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25564dcda70eefa1359b105a51df198e409f5127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25564dcda70eefa1359b105a51df198e409f5127", "html_url": "https://github.com/rust-lang/rust/commit/25564dcda70eefa1359b105a51df198e409f5127", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25564dcda70eefa1359b105a51df198e409f5127/comments", "author": null, "committer": null, "parents": [{"sha": "692d7cfb0ce5ba43311ae553a3debcf09755b6b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/692d7cfb0ce5ba43311ae553a3debcf09755b6b9", "html_url": "https://github.com/rust-lang/rust/commit/692d7cfb0ce5ba43311ae553a3debcf09755b6b9"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "5adb05d608932d74444d1eff4f626761530fb52b", "filename": "src/rustllvm/ArchiveWrapper.cpp", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/25564dcda70eefa1359b105a51df198e409f5127/src%2Frustllvm%2FArchiveWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/25564dcda70eefa1359b105a51df198e409f5127/src%2Frustllvm%2FArchiveWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FArchiveWrapper.cpp?ref=25564dcda70eefa1359b105a51df198e409f5127", "patch": "@@ -163,9 +163,20 @@ LLVMRustArchiveIteratorFree(LLVMRustArchiveIteratorRef rai) {\n \n extern \"C\" const char*\n LLVMRustArchiveChildName(LLVMRustArchiveChildConstRef child, size_t *size) {\n+#if LLVM_VERSION_GE(4, 0)\n+    Expected<StringRef> name_or_err = child->getName();\n+    if (!name_or_err) {\n+        // rustc_llvm currently doesn't use this error string, but it might be useful\n+        // in the future, and in the mean time this tells LLVM that the error was\n+        // not ignored and that it shouldn't abort the process.\n+        LLVMRustSetLastError(toString(name_or_err.takeError()).c_str());\n+        return NULL;\n+    }\n+#else\n     ErrorOr<StringRef> name_or_err = child->getName();\n     if (name_or_err.getError())\n         return NULL;\n+#endif\n     StringRef name = name_or_err.get();\n     *size = name.size();\n     return name.data();\n@@ -174,11 +185,19 @@ LLVMRustArchiveChildName(LLVMRustArchiveChildConstRef child, size_t *size) {\n extern \"C\" const char*\n LLVMRustArchiveChildData(LLVMRustArchiveChildRef child, size_t *size) {\n     StringRef buf;\n+#if LLVM_VERSION_GE(4, 0)\n+    Expected<StringRef> buf_or_err = child->getBuffer();\n+    if (!buf_or_err) {\n+      LLVMRustSetLastError(toString(buf_or_err.takeError()).c_str());\n+      return NULL;\n+    }\n+#else\n     ErrorOr<StringRef> buf_or_err = child->getBuffer();\n     if (buf_or_err.getError()) {\n       LLVMRustSetLastError(buf_or_err.getError().message().c_str());\n       return NULL;\n     }\n+#endif\n     buf = buf_or_err.get();\n     *size = buf.size();\n     return buf.data();"}]}