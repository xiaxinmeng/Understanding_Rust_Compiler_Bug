{"sha": "5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NzFjY2MwOGQ4YmZhZGViMDYxNGM0NTU1ZmZkMzJjNTEwNjZjZGM=", "commit": {"author": {"name": "Clar Fon", "email": "them@lightdark.xyz", "date": "2018-12-18T02:19:24Z"}, "committer": {"name": "Clar Fon", "email": "them@lightdark.xyz", "date": "2019-01-22T22:45:11Z"}, "message": "Don't expose ZipImpl to Iterator", "tree": {"sha": "b23bfa23314cf02593b3fce75dacb9b9fe76e5ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b23bfa23314cf02593b3fce75dacb9b9fe76e5ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "html_url": "https://github.com/rust-lang/rust/commit/5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52b36e28d8e7dab1897c450f5c658885117d887d", "url": "https://api.github.com/repos/rust-lang/rust/commits/52b36e28d8e7dab1897c450f5c658885117d887d", "html_url": "https://github.com/rust-lang/rust/commit/52b36e28d8e7dab1897c450f5c658885117d887d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1368775c6bfaec34c8c23b1f8f9208edc2fd71cb", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "patch": "@@ -13,7 +13,6 @@ mod zip;\n pub use self::chain::Chain;\n pub use self::flatten::{FlatMap, Flatten};\n pub use self::zip::Zip;\n-pub(super) use self::zip::ZipImpl;\n pub(crate) use self::zip::TrustedRandomAccess;\n \n /// A double-ended iterator with the direction inverted."}, {"sha": "3548d0e282602ddcacd39be6541c046e3d749136", "filename": "src/libcore/iter/adapters/zip.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs?ref=5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "patch": "@@ -19,6 +19,9 @@ pub struct Zip<A, B> {\n     len: usize,\n }\n impl<A: Iterator, B: Iterator> Zip<A, B> {\n+    pub(in super::super) fn new(a: A, b: B) -> Zip<A, B> {\n+        ZipImpl::new(a, b)\n+    }\n     fn super_nth(&mut self, mut n: usize) -> Option<(A::Item, B::Item)> {\n         while let Some(x) = Iterator::next(self) {\n             if n == 0 { return Some(x) }\n@@ -62,7 +65,7 @@ impl<A, B> DoubleEndedIterator for Zip<A, B> where\n \n // Zip specialization trait\n #[doc(hidden)]\n-pub(in super::super) trait ZipImpl<A, B> {\n+trait ZipImpl<A, B> {\n     type Item;\n     fn new(a: A, b: B) -> Self;\n     fn next(&mut self) -> Option<Self::Item>;"}, {"sha": "b6bb5f01b2d299dd72b7dae3d5b23a02ad2f70b6", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "patch": "@@ -353,7 +353,6 @@ pub use self::adapters::Flatten;\n #[unstable(feature = \"iter_copied\", issue = \"57127\")]\n pub use self::adapters::Copied;\n \n-use self::adapters::ZipImpl;\n pub(crate) use self::adapters::TrustedRandomAccess;\n \n mod range;"}, {"sha": "62029b169525e15880159303dd5a2fc3d7ea916c", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5971ccc08d8bfadeb0614c4555ffd32c51066cdc/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=5971ccc08d8bfadeb0614c4555ffd32c51066cdc", "patch": "@@ -5,8 +5,7 @@ use super::super::LoopState;\n use super::super::{Chain, Cycle, Copied, Cloned, Enumerate, Filter, FilterMap, Fuse};\n use super::super::{Flatten, FlatMap};\n use super::super::{Inspect, Map, Peekable, Scan, Skip, SkipWhile, StepBy, Take, TakeWhile, Rev};\n-use super::super::{Zip, Sum, Product};\n-use super::super::{FromIterator, ZipImpl};\n+use super::super::{Zip, Sum, Product, FromIterator};\n \n fn _assert_is_object_safe(_: &dyn Iterator<Item=()>) {}\n "}]}