{"sha": "bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZTJlYjRhNDQyZWM1YzAyNzAzY2JhYTI4MDdhNmUyZjU5ZWM3MGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-27T11:27:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-27T11:27:36Z"}, "message": "Auto merge of #1460 - RalfJung:modules, r=RalfJung\n\nRe-organize platform-specific shims\n\nMove platform-specific code to `shims::{posix::{linux, macos}, windows}`. Also make it private in these modules to ensure we are reasonably structured.", "tree": {"sha": "b80fbac95284c0684ecf89cf24ebea030532f204", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b80fbac95284c0684ecf89cf24ebea030532f204"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "html_url": "https://github.com/rust-lang/rust/commit/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02a721b91cb0b081e875bbfe0f1697bdf775daf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/02a721b91cb0b081e875bbfe0f1697bdf775daf9", "html_url": "https://github.com/rust-lang/rust/commit/02a721b91cb0b081e875bbfe0f1697bdf775daf9"}, {"sha": "af5887e869c91df9920856e2ba2ee3e85cea6a78", "url": "https://api.github.com/repos/rust-lang/rust/commits/af5887e869c91df9920856e2ba2ee3e85cea6a78", "html_url": "https://github.com/rust-lang/rust/commit/af5887e869c91df9920856e2ba2ee3e85cea6a78"}], "stats": {"total": 114, "additions": 67, "deletions": 47}, "files": [{"sha": "c908bdf24ebac0a633d9fba88e5a0b8d5e121c94", "filename": "src/intptrcast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fintptrcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fintptrcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintptrcast.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -9,7 +9,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_mir::interpret::{AllocCheck, AllocId, InterpResult, Memory, Machine, Pointer, PointerArithmetic};\n use rustc_target::abi::{Size, HasDataLayout};\n \n-use crate::{Evaluator, Tag, STACK_ADDR, CheckInAllocMsg};\n+use crate::*;\n \n pub type MemoryExtra = RefCell<GlobalState>;\n "}, {"sha": "fa357eb9b134121e56e9747867086ab8dc84a810", "filename": "src/lib.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -34,23 +34,22 @@ mod stacked_borrows;\n mod sync;\n mod thread;\n \n+// Establish a \"crate-wide prelude\": we often import `crate::*`.\n+\n // Make all those symbols available in the same place as our own.\n pub use rustc_mir::interpret::*;\n // Resolve ambiguity.\n pub use rustc_mir::interpret::{self, AllocMap, PlaceTy};\n \n-pub use crate::shims::dlsym::{Dlsym, EvalContextExt as DlsymEvalContextExt};\n-pub use crate::shims::env::{EnvVars, EvalContextExt as EnvEvalContextExt};\n-pub use crate::shims::foreign_items::EvalContextExt as ForeignItemsEvalContextExt;\n-pub use crate::shims::fs::{DirHandler, EvalContextExt as FileEvalContextExt, FileHandler};\n-pub use crate::shims::intrinsics::EvalContextExt as IntrinsicsEvalContextExt;\n-pub use crate::shims::os_str::EvalContextExt as OsStrEvalContextExt;\n-pub use crate::shims::panic::{CatchUnwindData, EvalContextExt as PanicEvalContextExt};\n-pub use crate::shims::sync::{EvalContextExt as SyncShimsEvalContextExt};\n-pub use crate::shims::thread::EvalContextExt as ThreadShimsEvalContextExt;\n-pub use crate::shims::time::EvalContextExt as TimeEvalContextExt;\n-pub use crate::shims::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n-pub use crate::shims::EvalContextExt as ShimsEvalContextExt;\n+pub use crate::shims::dlsym::{Dlsym, EvalContextExt as _};\n+pub use crate::shims::env::{EnvVars, EvalContextExt as _};\n+pub use crate::shims::foreign_items::EvalContextExt as _;\n+pub use crate::shims::intrinsics::EvalContextExt as _;\n+pub use crate::shims::os_str::EvalContextExt as _;\n+pub use crate::shims::time::EvalContextExt as _;\n+pub use crate::shims::panic::{CatchUnwindData, EvalContextExt as _};\n+pub use crate::shims::tls::{EvalContextExt as _, TlsData};\n+pub use crate::shims::EvalContextExt as _;\n \n pub use crate::diagnostics::{\n     register_diagnostic, report_error, EvalContextExt as DiagnosticsEvalContextExt,"}, {"sha": "6233222c004d1eea3300badba5a761ce8e7f7398", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -241,8 +241,8 @@ pub struct Evaluator<'mir, 'tcx> {\n     /// Whether to enforce the validity invariant.\n     pub(crate) validate: bool,\n \n-    pub(crate) file_handler: FileHandler,\n-    pub(crate) dir_handler: DirHandler,\n+    pub(crate) file_handler: shims::posix::FileHandler,\n+    pub(crate) dir_handler: shims::posix::DirHandler,\n \n     /// The temporary used for storing the argument of\n     /// the call to `miri_start_panic` (the panic payload) when unwinding."}, {"sha": "14c5aac4899a750c8e2b330f1dd1e2b5f83bc620", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -1,6 +1,3 @@\n-mod windows;\n-mod posix;\n-\n use std::{convert::{TryInto, TryFrom}, iter};\n \n use rustc_hir::def_id::DefId;\n@@ -455,13 +452,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // Architecture-specific shims\n             \"llvm.x86.sse2.pause\" if this.tcx.sess.target.target.arch == \"x86\" || this.tcx.sess.target.target.arch == \"x86_64\" => {\n                 let &[] = check_arg_count(args)?;\n-                this.sched_yield()?;\n+                this.yield_active_thread();\n             }\n \n             // Platform-specific shims\n             _ => match this.tcx.sess.target.target.target_os.as_str() {\n-                \"linux\" | \"macos\" => return posix::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n-                \"windows\" => return windows::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n+                \"linux\" | \"macos\" => return shims::posix::foreign_items::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n+                \"windows\" => return shims::windows::foreign_items::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n                 target => throw_unsup_format!(\"the target `{}` is not supported\", target),\n             }\n         };"}, {"sha": "37e7b8c40462e51a1b92d6d82ac292e698664ef3", "filename": "src/shims/mod.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -1,15 +1,18 @@\n-pub mod dlsym;\n-pub mod env;\n+\n pub mod foreign_items;\n-pub mod fs;\n pub mod intrinsics;\n+pub mod posix;\n+pub mod windows;\n+\n+pub mod dlsym;\n+pub mod env;\n pub mod os_str;\n pub mod panic;\n-pub mod sync;\n-pub mod thread;\n pub mod time;\n pub mod tls;\n \n+// End module management, begin local code\n+\n use std::convert::TryFrom;\n \n use log::trace;"}, {"sha": "bbda40def620e6e52b4b955ca5210168ff96ab52", "filename": "src/shims/posix/foreign_items.rs", "status": "renamed", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fforeign_items.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -1,15 +1,16 @@\n-mod linux;\n-mod macos;\n-\n use std::convert::TryFrom;\n \n use log::trace;\n \n-use crate::*;\n-use helpers::check_arg_count;\n use rustc_middle::mir;\n use rustc_target::abi::{Align, LayoutOf, Size};\n \n+use crate::*;\n+use helpers::check_arg_count;\n+use shims::posix::fs::EvalContextExt as _;\n+use shims::posix::sync::EvalContextExt as _;\n+use shims::posix::thread::EvalContextExt as _;\n+\n impl<'mir, 'tcx: 'mir> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n     fn emulate_foreign_item_by_name(\n@@ -476,8 +477,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // Platform-specific shims\n             _ => {\n                 match this.tcx.sess.target.target.target_os.as_str() {\n-                    \"linux\" => return linux::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n-                    \"macos\" => return macos::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n+                    \"linux\" => return shims::posix::linux::foreign_items::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n+                    \"macos\" => return shims::posix::macos::foreign_items::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n                     _ => unreachable!(),\n                 }\n             }", "previous_filename": "src/shims/foreign_items/posix.rs"}, {"sha": "87aa28120c28e4a6e64d56e047e2e8d6b28d5aaa", "filename": "src/shims/posix/fs.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Ffs.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -10,13 +10,13 @@ use log::trace;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_target::abi::{Align, LayoutOf, Size};\n \n-use crate::stacked_borrows::Tag;\n use crate::*;\n+use stacked_borrows::Tag;\n use helpers::{check_arg_count, immty_from_int_checked, immty_from_uint_checked};\n use shims::time::system_time_to_duration;\n \n #[derive(Debug)]\n-pub struct FileHandle {\n+struct FileHandle {\n     file: File,\n     writable: bool,\n }", "previous_filename": "src/shims/fs.rs"}, {"sha": "ff30609d9ab279f948aec4377766cf4ba5916ce4", "filename": "src/shims/posix/linux/foreign_items.rs", "status": "renamed", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -1,7 +1,11 @@\n-use crate::*;\n-use helpers::check_arg_count;\n use rustc_middle::mir;\n \n+use crate::*;\n+use crate::helpers::check_arg_count;\n+use shims::posix::fs::EvalContextExt as _;\n+use shims::posix::sync::EvalContextExt as _;\n+use shims::posix::thread::EvalContextExt as _;\n+\n impl<'mir, 'tcx: 'mir> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n     fn emulate_foreign_item_by_name(", "previous_filename": "src/shims/foreign_items/posix/linux.rs"}, {"sha": "09c6507b24f84df2ca99460082fe4581ad4bf758", "filename": "src/shims/posix/linux/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Flinux%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Flinux%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fmod.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -0,0 +1 @@\n+pub mod foreign_items;"}, {"sha": "ef649c3e84069f4b4bfdfec8149eda9d9ae8b80c", "filename": "src/shims/posix/macos/foreign_items.rs", "status": "renamed", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fmacos%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fmacos%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fmacos%2Fforeign_items.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -1,6 +1,9 @@\n+use rustc_middle::mir;\n+\n use crate::*;\n use helpers::check_arg_count;\n-use rustc_middle::mir;\n+use shims::posix::fs::EvalContextExt as _;\n+use shims::posix::thread::EvalContextExt as _;\n \n impl<'mir, 'tcx: 'mir> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {", "previous_filename": "src/shims/foreign_items/posix/macos.rs"}, {"sha": "09c6507b24f84df2ca99460082fe4581ad4bf758", "filename": "src/shims/posix/macos/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fmacos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fmacos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fmacos%2Fmod.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -0,0 +1 @@\n+pub mod foreign_items;"}, {"sha": "2f505cfb9c0b54c0f4b26f52e5aa3a927333ccb4", "filename": "src/shims/posix/mod.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fmod.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -0,0 +1,10 @@\n+pub mod foreign_items;\n+\n+mod fs;\n+mod sync;\n+mod thread;\n+\n+mod linux;\n+mod macos;\n+\n+pub use fs::{DirHandler, FileHandler};"}, {"sha": "a61c80d5118c4b894580104a459718e13bac5e04", "filename": "src/shims/posix/sync.rs", "status": "renamed", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fsync.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -5,10 +5,10 @@ use std::ops::Not;\n use rustc_middle::ty::{layout::TyAndLayout, TyKind, TypeAndMut};\n use rustc_target::abi::{LayoutOf, Size};\n \n-use crate::stacked_borrows::Tag;\n-use crate::thread::Time;\n-\n use crate::*;\n+use stacked_borrows::Tag;\n+use thread::Time;\n+\n \n fn assert_ptr_target_min_size<'mir, 'tcx: 'mir>(\n     ecx: &MiriEvalContext<'mir, 'tcx>,\n@@ -522,6 +522,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         mutex_set_kind(this, mutex_op, ScalarMaybeUninit::Uninit)?;\n         mutex_set_id(this, mutex_op, ScalarMaybeUninit::Uninit)?;\n+        // FIXME: delete interpreter state associated with this mutex.\n \n         Ok(0)\n     }\n@@ -640,6 +641,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         }\n \n         rwlock_set_id(this, rwlock_op, ScalarMaybeUninit::Uninit)?;\n+        // FIXME: delete interpreter state associated with this rwlock.\n \n         Ok(0)\n     }\n@@ -833,6 +835,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         }\n         cond_set_id(this, cond_op, ScalarMaybeUninit::Uninit)?;\n         cond_set_clock_id(this, cond_op, ScalarMaybeUninit::Uninit)?;\n+        // FIXME: delete interpreter state associated with this condvar.\n \n         Ok(0)\n     }", "previous_filename": "src/shims/sync.rs"}, {"sha": "e5d3a9f0d6f8789f8b5d7bb4e1f11ab03d824f48", "filename": "src/shims/posix/thread.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fposix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fthread.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "previous_filename": "src/shims/thread.rs"}, {"sha": "704598ef2c6c03130c258647985b541ca486fab2", "filename": "src/shims/tls.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -10,10 +10,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::ty;\n use rustc_target::abi::{Size, HasDataLayout};\n \n-use crate::{\n-    HelpersEvalContextExt, InterpResult, MPlaceTy, Scalar, StackPopCleanup, Tag, ThreadId,\n-    ThreadsEvalContextExt,\n-};\n+use crate::*;\n \n pub type TlsKey = u128;\n "}, {"sha": "2a30a23489970576bbea67681d8ac77bb3a0c1ce", "filename": "src/shims/windows/foreign_items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fforeign_items.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "previous_filename": "src/shims/foreign_items/windows.rs"}, {"sha": "09c6507b24f84df2ca99460082fe4581ad4bf758", "filename": "src/shims/windows/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fshims%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fmod.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -0,0 +1 @@\n+pub mod foreign_items;"}, {"sha": "896f93ef1a3a1e5dd7efecec3ae2f514f7016efa", "filename": "src/thread.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/src%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthread.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "patch": "@@ -91,8 +91,8 @@ pub enum ThreadState {\n     /// responsibility of the synchronization primitives to track threads that\n     /// are blocked by them.\n     BlockedOnSync,\n-    /// The thread has terminated its execution (we do not delete terminated\n-    /// threads).\n+    /// The thread has terminated its execution. We do not delete terminated\n+    /// threads (FIXME: why?).\n     Terminated,\n }\n "}, {"sha": "8b8594d4df69dc32a124f609e31c83dc5ba926bb", "filename": "tests/run-pass/concurrency/sync_singlethread.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/tests%2Frun-pass%2Fconcurrency%2Fsync_singlethread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d/tests%2Frun-pass%2Fconcurrency%2Fsync_singlethread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fsync_singlethread.rs?ref=bde2eb4a442ec5c02703cbaa2807a6e2f59ec70d", "previous_filename": "tests/run-pass/sync_singlethread.rs"}]}