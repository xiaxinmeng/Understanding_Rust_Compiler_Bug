{"sha": "d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwM2Q5YTQ1ZWZkNjk5NTUzM2UyY2Q3OWU0NThjYmZlYjg0MDhlNmU=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-11-29T19:39:07Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-11-29T19:39:07Z"}, "message": "end expressions like return/continue/break with a semicolon\n\nClose #3213", "tree": {"sha": "1797db6761ac757cafa0ad586812b44b8639088b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1797db6761ac757cafa0ad586812b44b8639088b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAlwAQJQACgkQbVYg2Qgh\nATPqnAf/RgjCmeIsEi3ariM5n23SSrPo4DvmesktwIEcV9+RSlDtXJS3eNnD3VEV\n2Ww2o4P/ASoUeRdmpXScPeUKVQWSWb5zxDmjbqrR05scstyy6QbqqNwliFCVPYkJ\nFeRA9GhlyZPY13uxyDWYKu/VQ5MdQveMvyFMtxVkhAEtLu4y0Jxu4CKKvm1106gx\nxF9iEadyRcgVnaMOjo/HW7oUakBbyD4GAUxlOgxfNf/sTr5+97+EjCY/tMZ6dBZu\nfTdtT/VTZybiFLqtjTcsdz1BAT5Jje+CKY2DITjFN7u895KPunCIq0ZxcvIVtiHA\nObejLEGNeVsQ+WMo1R+VmfmqVZ798g==\n=eUAd\n-----END PGP SIGNATURE-----", "payload": "tree 1797db6761ac757cafa0ad586812b44b8639088b\nparent 4f233a513e0f52bfea3c89f0660ea4f7f4c13fb6\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1543520347 +0100\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1543520347 +0100\n\nend expressions like return/continue/break with a semicolon\n\nClose #3213\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "html_url": "https://github.com/rust-lang/rust/commit/d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f233a513e0f52bfea3c89f0660ea4f7f4c13fb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f233a513e0f52bfea3c89f0660ea4f7f4c13fb6", "html_url": "https://github.com/rust-lang/rust/commit/4f233a513e0f52bfea3c89f0660ea4f7f4c13fb6"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "b7324829393645ab62291a1fc89e83638492bc35", "filename": "src/config/license.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/src%2Fconfig%2Flicense.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/src%2Fconfig%2Flicense.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Flicense.rs?ref=d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "patch": "@@ -137,7 +137,7 @@ impl TemplateParser {\n                 return Err(LicenseError::Parse(format!(\n                     \"incomplete escape sequence on l. {}\",\n                     parser.linum\n-                )))\n+                )));\n             }\n             _ => (),\n         }"}, {"sha": "56d2cc5c59816a9dd82860c81df11f45b4d7b328", "filename": "src/matches.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "patch": "@@ -29,7 +29,7 @@ use source_map::SpanUtils;\n use spanned::Spanned;\n use utils::{\n     contains_skip, extra_offset, first_line_width, inner_attributes, last_line_extendable, mk_sp,\n-    ptr_vec_to_ref_vec, trimmed_last_line_width,\n+    ptr_vec_to_ref_vec, semicolon_for_expr, trimmed_last_line_width,\n };\n \n /// A simple wrapper type against `ast::Arm`. Used inside `write_list()`.\n@@ -413,7 +413,12 @@ fn rewrite_match_body(\n             } else {\n                 \"\"\n             };\n-            (\"{\", format!(\"{}}}{}\", indent_str, comma))\n+            let semicolon = if semicolon_for_expr(context, body) {\n+                \";\"\n+            } else {\n+                \"\"\n+            };\n+            (\"{\", format!(\"{}{}}}{}\", semicolon, indent_str, comma))\n         } else {\n             (\"\", String::from(\",\"))\n         };"}, {"sha": "a00ec4d36619c9d9e11d26f2a03d8490adbc7f21", "filename": "tests/source/issue-3213.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Fsource%2Fissue-3213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Fsource%2Fissue-3213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3213.rs?ref=d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "patch": "@@ -0,0 +1,7 @@\n+fn foo() {\n+    match 0 {\n+        0 => return AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n+        1 => AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n+        _ => \"\",\n+    };\n+}"}, {"sha": "b226d60b7c688705bd41dbd480315b9e6cfd956e", "filename": "tests/source/match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch.rs?ref=d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "patch": "@@ -545,7 +545,7 @@ fn issue_3005() {\n                  {\n                      return NoCalcLength::parse_dimension(context, value, unit)\n                          .map(LengthOrPercentage::Length)\n-                         .map_err(|()| location.new_unexpected_token_error(token.clone()))\n+                         .map_err(|()| location.new_unexpected_token_error(token.clone()));\n                  },\n              }\n }"}, {"sha": "bd2ee48138a64b12d5226bd6c76be40415421800", "filename": "tests/target/issue-3213.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Ftarget%2Fissue-3213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Ftarget%2Fissue-3213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3213.rs?ref=d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "patch": "@@ -0,0 +1,11 @@\n+fn foo() {\n+    match 0 {\n+        0 => {\n+            return AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;\n+        }\n+        1 => {\n+            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n+        }\n+        _ => \"\",\n+    };\n+}"}, {"sha": "f45574ee46c94af1e1adcf5769d4fb00dccad2df", "filename": "tests/target/match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d03d9a45efd6995533e2cd79e458cbfeb8408e6e/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=d03d9a45efd6995533e2cd79e458cbfeb8408e6e", "patch": "@@ -572,7 +572,7 @@ fn issue_3005() {\n         } if num_context.is_ok(context.parsing_mode, value) => {\n             return NoCalcLength::parse_dimension(context, value, unit)\n                 .map(LengthOrPercentage::Length)\n-                .map_err(|()| location.new_unexpected_token_error(token.clone()))\n+                .map_err(|()| location.new_unexpected_token_error(token.clone()));\n         }\n     }\n }"}]}