{"sha": "136d66f0113b4fb53d517d6653fee0487b56202d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNmQ2NmYwMTEzYjRmYjUzZDUxN2Q2NjUzZmVlMDQ4N2I1NjIwMmQ=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-07T17:47:54Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-12T08:38:39Z"}, "message": "Uplift `get_def_path` from Clippy\n\nThis uplifts `get_def_path` from Clippy. This is a follow up on the\nimplementation of internal lints: #59316\n\nThe internal lint implementation also copied the implementation of the\n`AbsolutePathPrinter`. To get rid of this code duplication this also\nuplifts the `get_def_path` function from Clippy.\n\nThis also renames `match_path` to `match_def_path`, as it was originally\nnamed in Clippy.", "tree": {"sha": "48b80110c3cbb1734dce3520f6092cd2d50db78b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48b80110c3cbb1734dce3520f6092cd2d50db78b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/136d66f0113b4fb53d517d6653fee0487b56202d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEdgbJzPSa+gJi9jP1Acg2tkD/37EFAlywTo8ACgkQAcg2tkD/\n37G90A//RnKGRBmGUtmB/sOz6/uv0hcAB9k5mmf3KGS/z3rrF0nP2dhbCJNLCRG3\nMwAu3PzlIUdCyI8bgKOcr2n7FwwwZ/oN5KEekKT8ro0sSdKR+68R+FzaXyIC3Mqs\nCL926J/v9nG21fedJBFW5RwmEDSyLGzI0zO3H1n9m3+p51LIlcxCOqr+a1sYK5LV\nJqiI6lgTeRK6FllOaKE+yHbqChdOFRCKu/arI/CSUd2JpPz5Hv4P/0YF3DgFjhoW\nRIH43E6yAHmWM9YjYY2IIiwQDfik4vIG97KqPcGvpaetyGiJjLlnALIUY/GLfSNT\nnclPAGtei3DXIWX5Bwk8tnPcudZHC9AodJ50glXixEMJu4K20v4ygL3CZK6xDz9w\nKjMyLmUohc/Jr6iHs/MWxIS5vNeXMwGu9xSfUSWuYuisEbbXvSVLkM4VCQwaXdao\nq7ldC12Ft/xYjJPoeW5E8ni3h6kXm26z/C71gK4YqqT9UFmluCfYgBYHmCbwnOFh\nxeBZTq/5NRck+1XmJVlkyy8TTUD1P3HmptTZgwh0AvrW+crkxT68PdqXMpTZgjwQ\nsjhCw6U8TT3I/618d3v7mrJHD3a01ijD+YQG279JR6UV5C41hOPNB3m3NqkCoNEk\nczCTTY+PhoEWfN0lsanoalt1YhabOcOCd00NaTUvmKK2LMqwtwQ=\n=8f0q\n-----END PGP SIGNATURE-----", "payload": "tree 48b80110c3cbb1734dce3520f6092cd2d50db78b\nparent 0369e6c539a3085179c066ab1f789eb89cb4aed5\nauthor flip1995 <hello@philkrones.com> 1554659274 +0200\ncommitter flip1995 <hello@philkrones.com> 1555058319 +0200\n\nUplift `get_def_path` from Clippy\n\nThis uplifts `get_def_path` from Clippy. This is a follow up on the\nimplementation of internal lints: #59316\n\nThe internal lint implementation also copied the implementation of the\n`AbsolutePathPrinter`. To get rid of this code duplication this also\nuplifts the `get_def_path` function from Clippy.\n\nThis also renames `match_path` to `match_def_path`, as it was originally\nnamed in Clippy.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/136d66f0113b4fb53d517d6653fee0487b56202d", "html_url": "https://github.com/rust-lang/rust/commit/136d66f0113b4fb53d517d6653fee0487b56202d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/136d66f0113b4fb53d517d6653fee0487b56202d/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0369e6c539a3085179c066ab1f789eb89cb4aed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0369e6c539a3085179c066ab1f789eb89cb4aed5", "html_url": "https://github.com/rust-lang/rust/commit/0369e6c539a3085179c066ab1f789eb89cb4aed5"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "4b615345a26f392849e1be884731bfaa95cbca5e", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/136d66f0113b4fb53d517d6653fee0487b56202d/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136d66f0113b4fb53d517d6653fee0487b56202d/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=136d66f0113b4fb53d517d6653fee0487b56202d", "patch": "@@ -755,8 +755,31 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n     }\n \n     /// Check if a `DefId`'s path matches the given absolute type path usage.\n+    ///\n+    /// # Examples\n+    /// ```rust,ignore (no `cx` or `def_id` available)\n+    /// if cx.match_def_path(def_id, &[\"core\", \"option\", \"Option\"]) {\n+    ///     // The given `def_id` is that of an `Option` type\n+    /// }\n+    /// ```\n     // Uplifted from rust-lang/rust-clippy\n-    pub fn match_path(&self, def_id: DefId, path: &[&str]) -> bool {\n+    pub fn match_def_path(&self, def_id: DefId, path: &[&str]) -> bool {\n+        let names = self.get_def_path(def_id);\n+\n+        names.len() == path.len() && names.into_iter().zip(path.iter()).all(|(a, &b)| *a == *b)\n+    }\n+\n+    /// Gets the absolute path of `def_id` as a vector of `&str`.\n+    ///\n+    /// # Examples\n+    /// ```rust,ignore (no `cx` or `def_id` available)\n+    /// let def_path = cx.get_def_path(def_id);\n+    /// if let &[\"core\", \"option\", \"Option\"] = &def_path[..] {\n+    ///     // The given `def_id` is that of an `Option` type\n+    /// }\n+    /// ```\n+    // Uplifted from rust-lang/rust-clippy\n+    pub fn get_def_path(&self, def_id: DefId) -> Vec<LocalInternedString> {\n         pub struct AbsolutePathPrinter<'a, 'tcx> {\n             pub tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n@@ -856,10 +879,9 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n             }\n         }\n \n-        let names = AbsolutePathPrinter { tcx: self.tcx }.print_def_path(def_id, &[]).unwrap();\n-\n-        names.len() == path.len()\n-            && names.into_iter().zip(path.iter()).all(|(a, &b)| *a == *b)\n+        AbsolutePathPrinter { tcx: self.tcx }\n+            .print_def_path(def_id, &[])\n+            .unwrap()\n     }\n }\n "}, {"sha": "91f1bee26de3275a62c22c6bb0782f55f385d736", "filename": "src/librustc/lint/internal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/136d66f0113b4fb53d517d6653fee0487b56202d/src%2Flibrustc%2Flint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136d66f0113b4fb53d517d6653fee0487b56202d/src%2Flibrustc%2Flint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Finternal.rs?ref=136d66f0113b4fb53d517d6653fee0487b56202d", "patch": "@@ -100,7 +100,7 @@ fn lint_ty_kind_usage(cx: &LateContext<'_, '_>, segment: &PathSegment) -> bool {\n     if segment.ident.as_str() == \"TyKind\" {\n         if let Some(def) = segment.def {\n             if let Some(did) = def.opt_def_id() {\n-                return cx.match_path(did, &[\"rustc\", \"ty\", \"sty\", \"TyKind\"]);\n+                return cx.match_def_path(did, &[\"rustc\", \"ty\", \"sty\", \"TyKind\"]);\n             }\n         }\n     }"}]}