{"sha": "f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "node_id": "C_kwDOAAsO6NoAKGY4ZTE1N2IzM2YzN2QzMjc3MTA0MDAyYWFmOGE0ZjVkZTFjZTdlZDE", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-10-19T18:34:00Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-10-19T18:34:00Z"}, "message": "Fixup a few tests needing asm support", "tree": {"sha": "1eb330d455a91466cc4f4f3d43c62531b48252fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eb330d455a91466cc4f4f3d43c62531b48252fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "html_url": "https://github.com/rust-lang/rust/commit/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a24a020e6d926dffe6b472fc647978f92269504e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a24a020e6d926dffe6b472fc647978f92269504e", "html_url": "https://github.com/rust-lang/rust/commit/a24a020e6d926dffe6b472fc647978f92269504e"}], "stats": {"total": 93, "additions": 44, "deletions": 49}, "files": [{"sha": "715ba4ca156d441e9313f1f0a85254b8cc25e117", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -3176,6 +3176,7 @@ declare_lint! {\n     /// ### Example\n     ///\n     /// ```rust,compile_fail\n+    /// # #![feature(asm_experimental_arch)]\n     /// use std::arch::asm;\n     ///\n     /// fn main() {"}, {"sha": "d6cc31331a3bc3924fbc2ddb7986d9664d7c52ae", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -2878,7 +2878,7 @@ declare_lint! {\n     /// ### Example\n     ///\n     /// ```rust\n-    /// #![feature(naked_functions)]\n+    /// #![feature(asm_experimental_arch, naked_functions)]\n     ///\n     /// use std::arch::asm;\n     ///"}, {"sha": "12440b5ae6ed5e37567d682f20f63b1d445a0b90", "filename": "src/test/pretty/raw-str-nonexpr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // pp-exact\n \n #[cfg(foo = r#\"just parse this\"#)]"}, {"sha": "ff9cc57098c6bff2d203170fdd3fdafa2057f77e", "filename": "src/test/run-make-fulldeps/intrinsic-unreachable/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Frun-make-fulldeps%2Fintrinsic-unreachable%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Frun-make-fulldeps%2Fintrinsic-unreachable%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fintrinsic-unreachable%2FMakefile?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,5 +1,6 @@\n include ../tools.mk\n \n+# needs-asm-support\n # ignore-windows-msvc\n #\n # Because of Windows exception handling, the code is not necessarily any shorter."}, {"sha": "25cf1c3d730ebae65bee81f350f29f7aca7f36a2", "filename": "src/test/ui/asm/unpretty-expanded.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fui%2Fasm%2Funpretty-expanded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fui%2Fasm%2Funpretty-expanded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Funpretty-expanded.rs?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // check-pass\n // compile-flags: -Zunpretty=expanded\n core::arch::global_asm!(\"x: .byte 42\");"}, {"sha": "ab1b5f45e5c8ad2cb954115abb7c3f08e41fa19c", "filename": "src/test/ui/asm/unpretty-expanded.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fui%2Fasm%2Funpretty-expanded.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fui%2Fasm%2Funpretty-expanded.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Funpretty-expanded.stdout?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -4,6 +4,7 @@\n use ::std::prelude::rust_2015::*;\n #[macro_use]\n extern crate std;\n+// needs-asm-support\n // check-pass\n // compile-flags: -Zunpretty=expanded\n global_asm! (\"x: .byte 42\");"}, {"sha": "af13762d11857b70caab83496bbfbb798b9dfe90", "filename": "src/test/ui/empty_global_asm.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fui%2Fempty_global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftest%2Fui%2Fempty_global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty_global_asm.rs?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,21 +1,8 @@\n+// needs-asm-support\n // run-pass\n \n-#[allow(unused_imports)]\n use std::arch::global_asm;\n \n-#[cfg(target_arch = \"x86\")]\n-global_asm!(\"\");\n-\n-#[cfg(target_arch = \"x86_64\")]\n-global_asm!(\"\");\n-\n-#[cfg(target_arch = \"arm\")]\n-global_asm!(\"\");\n-\n-#[cfg(target_arch = \"aarch64\")]\n-global_asm!(\"\");\n-\n-#[cfg(target_arch = \"mips\")]\n global_asm!(\"\");\n \n fn main() {}"}, {"sha": "79c29c04e05962f941499320b6feeb51724d6c60", "filename": "src/tools/clippy/tests/ui/entry.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.fixed?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]"}, {"sha": "2d7985457d8b4e6705f45066a5cc1647a37d4452", "filename": "src/tools/clippy/tests/ui/entry.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.rs?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]"}, {"sha": "2c4c49d2522ca926db9adcc788a48b803e3cce1e", "filename": "src/tools/clippy/tests/ui/entry.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fentry.stderr?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,5 +1,5 @@\n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:24:5\n+  --> $DIR/entry.rs:25:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         m.insert(k, v);\n@@ -9,7 +9,7 @@ LL | |     }\n    = note: `-D clippy::map-entry` implied by `-D warnings`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:29:5\n+  --> $DIR/entry.rs:30:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         if true {\n@@ -32,7 +32,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:38:5\n+  --> $DIR/entry.rs:39:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         if true {\n@@ -55,7 +55,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:47:5\n+  --> $DIR/entry.rs:48:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         if true {\n@@ -79,7 +79,7 @@ LL +     }\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:57:5\n+  --> $DIR/entry.rs:58:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         foo();\n@@ -96,7 +96,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:63:5\n+  --> $DIR/entry.rs:64:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         match 0 {\n@@ -122,7 +122,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:75:5\n+  --> $DIR/entry.rs:76:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         match 0 {\n@@ -146,7 +146,7 @@ LL +     }\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:85:5\n+  --> $DIR/entry.rs:86:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         foo();\n@@ -187,15 +187,15 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:119:5\n+  --> $DIR/entry.rs:120:5\n    |\n LL | /     if !m.contains_key(&m!(k)) {\n LL | |         m.insert(m!(k), m!(v));\n LL | |     }\n    | |_____^ help: try this: `m.entry(m!(k)).or_insert_with(|| m!(v));`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:151:5\n+  --> $DIR/entry.rs:152:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         let x = (String::new(), String::new());"}, {"sha": "590ad63c90be3a8972c0cd6568ec59f5f1623a22", "filename": "src/tools/clippy/tests/ui/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmissing_doc.rs?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // aux-build: proc_macro_with_span.rs\n \n #![warn(clippy::missing_docs_in_private_items)]"}, {"sha": "d3bef28bf64c6707fffeb0b7ef853d49517742f2", "filename": "src/tools/clippy/tests/ui/missing_doc.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmissing_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8e157b33f37d3277104002aaf8a4f5de1ce7ed1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmissing_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmissing_doc.stderr?ref=f8e157b33f37d3277104002aaf8a4f5de1ce7ed1", "patch": "@@ -1,43 +1,43 @@\n error: missing documentation for a type alias\n-  --> $DIR/missing_doc.rs:15:1\n+  --> $DIR/missing_doc.rs:16:1\n    |\n LL | type Typedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-docs-in-private-items` implied by `-D warnings`\n \n error: missing documentation for a type alias\n-  --> $DIR/missing_doc.rs:16:1\n+  --> $DIR/missing_doc.rs:17:1\n    |\n LL | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing_doc.rs:18:1\n+  --> $DIR/missing_doc.rs:19:1\n    |\n LL | mod module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing_doc.rs:19:1\n+  --> $DIR/missing_doc.rs:20:1\n    |\n LL | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:23:1\n+  --> $DIR/missing_doc.rs:24:1\n    |\n LL | pub fn foo2() {}\n    | ^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:24:1\n+  --> $DIR/missing_doc.rs:25:1\n    |\n LL | fn foo3() {}\n    | ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing_doc.rs:38:1\n+  --> $DIR/missing_doc.rs:39:1\n    |\n LL | / enum Baz {\n LL | |     BazA { a: isize, b: isize },\n@@ -46,75 +46,75 @@ LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing_doc.rs:39:5\n+  --> $DIR/missing_doc.rs:40:5\n    |\n LL |     BazA { a: isize, b: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing_doc.rs:39:12\n+  --> $DIR/missing_doc.rs:40:12\n    |\n LL |     BazA { a: isize, b: isize },\n    |            ^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing_doc.rs:39:22\n+  --> $DIR/missing_doc.rs:40:22\n    |\n LL |     BazA { a: isize, b: isize },\n    |                      ^^^^^^^^\n \n error: missing documentation for a variant\n-  --> $DIR/missing_doc.rs:40:5\n+  --> $DIR/missing_doc.rs:41:5\n    |\n LL |     BarB,\n    |     ^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing_doc.rs:43:1\n+  --> $DIR/missing_doc.rs:44:1\n    |\n LL | / pub enum PubBaz {\n LL | |     PubBazA { a: isize },\n LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing_doc.rs:44:5\n+  --> $DIR/missing_doc.rs:45:5\n    |\n LL |     PubBazA { a: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing_doc.rs:44:15\n+  --> $DIR/missing_doc.rs:45:15\n    |\n LL |     PubBazA { a: isize },\n    |               ^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing_doc.rs:64:1\n+  --> $DIR/missing_doc.rs:65:1\n    |\n LL | const FOO: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing_doc.rs:71:1\n+  --> $DIR/missing_doc.rs:72:1\n    |\n LL | pub const FOO4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing_doc.rs:73:1\n+  --> $DIR/missing_doc.rs:74:1\n    |\n LL | static BAR: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing_doc.rs:80:1\n+  --> $DIR/missing_doc.rs:81:1\n    |\n LL | pub static BAR4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing_doc.rs:82:1\n+  --> $DIR/missing_doc.rs:83:1\n    |\n LL | / mod internal_impl {\n LL | |     /// dox\n@@ -126,31 +126,31 @@ LL | | }\n    | |_^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:85:5\n+  --> $DIR/missing_doc.rs:86:5\n    |\n LL |     pub fn undocumented1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:86:5\n+  --> $DIR/missing_doc.rs:87:5\n    |\n LL |     pub fn undocumented2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:87:5\n+  --> $DIR/missing_doc.rs:88:5\n    |\n LL |     fn undocumented3() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:92:9\n+  --> $DIR/missing_doc.rs:93:9\n    |\n LL |         pub fn also_undocumented1() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:93:9\n+  --> $DIR/missing_doc.rs:94:9\n    |\n LL |         fn also_undocumented2() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}