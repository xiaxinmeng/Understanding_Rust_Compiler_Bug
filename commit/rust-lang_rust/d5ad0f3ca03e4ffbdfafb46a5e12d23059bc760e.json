{"sha": "d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e", "node_id": "C_kwDOAAsO6NoAKGQ1YWQwZjNjYTAzZTRmZmJkZmFmYjQ2YTVlMTJkMjMwNTliYzc2MGU", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-11-14T18:37:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T13:54:09Z"}, "message": "use eof token pattenr", "tree": {"sha": "0217b86037ea81de4904cd6979586d91dd7f4be6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0217b86037ea81de4904cd6979586d91dd7f4be6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e", "html_url": "https://github.com/rust-lang/rust/commit/d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "addfd8d9e8518a64f5f01940e60a0a5201a89c9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/addfd8d9e8518a64f5f01940e60a0a5201a89c9d", "html_url": "https://github.com/rust-lang/rust/commit/addfd8d9e8518a64f5f01940e60a0a5201a89c9d"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "2fd807f9b3cbfb3c5e2632ef4f0d86a8c72499ef", "filename": "crates/parser/src/tokens.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e/crates%2Fparser%2Fsrc%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e/crates%2Fparser%2Fsrc%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftokens.rs?ref=d5ad0f3ca03e4ffbdfafb46a5e12d23059bc760e", "patch": "@@ -49,10 +49,18 @@ impl Tokens {\n     pub fn len(&self) -> usize {\n         self.kind.len()\n     }\n-    pub(crate) fn get(&self, idx: usize) -> Option<(SyntaxKind, bool, IdentKind)> {\n-        let kind = *self.kind.get(idx)?;\n+    pub(crate) fn get(&self, idx: usize) -> (SyntaxKind, bool, IdentKind) {\n+        if idx > self.len() {\n+            return self.eof();\n+        }\n+        let kind = self.kind[idx];\n         let joint = self.get_joint(idx);\n-        let ident_kind = *self.ident_kind.get(idx)?;\n-        Some((kind, joint, ident_kind))\n+        let ident_kind = self.ident_kind[idx];\n+        (kind, joint, ident_kind)\n+    }\n+\n+    #[cold]\n+    fn eof(&self) -> (SyntaxKind, bool, IdentKind) {\n+        (SyntaxKind::EOF, false, 0)\n     }\n }"}]}