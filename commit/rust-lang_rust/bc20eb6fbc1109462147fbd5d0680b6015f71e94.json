{"sha": "bc20eb6fbc1109462147fbd5d0680b6015f71e94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMjBlYjZmYmMxMTA5NDYyMTQ3ZmJkNWQwNjgwYjYwMTVmNzFlOTQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-27T17:46:59Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-06-03T07:51:31Z"}, "message": "Point to the rustdoc attribute where intralink resolution failed.", "tree": {"sha": "5730e0bdb51c32d45574435cc0222683aedf4420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5730e0bdb51c32d45574435cc0222683aedf4420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc20eb6fbc1109462147fbd5d0680b6015f71e94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlsTngMACgkQ/vbIBR0O\nATwmLw/9F7A1fNp+gGYFWk/k0RXlmqL8mRv+uEbe4RWqtOJSfqUQJ+JeFMCkHQzE\nXd0H3BYSgRRr+NNmgkincLqZedMPq19UOzNj5cF1ziSxuHI1bkKmymBGEmcWQoCj\n5sEtx7iQ0P1gk3FqCZkXvLRq3EtcLWVc08mXqCqdsLR6ExMoZ2rfDLMpchb4H6tb\nvMk4zao9HdP+NnZQfaWRIOVL82UREC00m+vSd/g5IIgLiDMsQ+T9aVJw33dHf/Y6\n5t2H/PT34tdzWG8Ba40VvgnsmmlmVrRx33TAfD6aSAfs7dtKFAocNc3Epc0+6iJY\ngj1Td9plHoDk1HVaC2ElsFfG9uDYKEN/r23zwNXzgq5qdtFQKkPysOK8AWr8oAd6\nsIuQlw8iF1GdBgeRwECd0DaH2OoJR94KVERvqXayxep7KgyML1xNnqjBm/VSOrxC\n0dU8fgcy4QU4CXZjbab7k+CXkRt0NqVPCciQjk3cdaRzHqA1QX241ppas6Nu5jJa\n3SS5MQOYT0xkijmLVRarZHW2igcQfFbQLng26bTa732SVjwvLCBl7PF8gG3hyIfB\njWj1koR5dAcpbYX9w3mXW7gYbcmfLsfbTSE9wUB1L7jgj7v2/SahP6j7iP+jqCsE\nNfNSfUPuPG2PHqByx+mRaX2cCXVa0rLAnPizRm/A45G2BhTjS/E=\n=6LXs\n-----END PGP SIGNATURE-----", "payload": "tree 5730e0bdb51c32d45574435cc0222683aedf4420\nparent 3575be60eab140e69e5a75fe5c3b4119c2a17179\nauthor kennytm <kennytm@gmail.com> 1527443219 +0800\ncommitter kennytm <kennytm@gmail.com> 1528012291 +0800\n\nPoint to the rustdoc attribute where intralink resolution failed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc20eb6fbc1109462147fbd5d0680b6015f71e94", "html_url": "https://github.com/rust-lang/rust/commit/bc20eb6fbc1109462147fbd5d0680b6015f71e94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc20eb6fbc1109462147fbd5d0680b6015f71e94/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3575be60eab140e69e5a75fe5c3b4119c2a17179", "url": "https://api.github.com/repos/rust-lang/rust/commits/3575be60eab140e69e5a75fe5c3b4119c2a17179", "html_url": "https://github.com/rust-lang/rust/commit/3575be60eab140e69e5a75fe5c3b4119c2a17179"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "7c3df329bb7027a0c0200bda8cc62026097e5d66", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bc20eb6fbc1109462147fbd5d0680b6015f71e94/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc20eb6fbc1109462147fbd5d0680b6015f71e94/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=bc20eb6fbc1109462147fbd5d0680b6015f71e94", "patch": "@@ -954,12 +954,20 @@ fn type_ns_kind(def: Def, path_str: &str) -> (&'static str, &'static str, String\n     (kind, article, format!(\"{}@{}\", kind, path_str))\n }\n \n+fn span_of_attrs(attrs: &Attributes) -> syntax_pos::Span {\n+    if attrs.doc_strings.is_empty() {\n+        return DUMMY_SP;\n+    }\n+    let start = attrs.doc_strings[0].span();\n+    let end = attrs.doc_strings.last().unwrap().span();\n+    start.to(end)\n+}\n+\n fn ambiguity_error(cx: &DocContext, attrs: &Attributes,\n                    path_str: &str,\n                    article1: &str, kind1: &str, disambig1: &str,\n                    article2: &str, kind2: &str, disambig2: &str) {\n-    let sp = attrs.doc_strings.first()\n-                  .map_or(DUMMY_SP, |a| a.span());\n+    let sp = span_of_attrs(attrs);\n     cx.sess()\n       .struct_span_warn(sp,\n                         &format!(\"`{}` is both {} {} and {} {}\",\n@@ -1174,8 +1182,9 @@ enum PathKind {\n     Type,\n }\n \n-fn resolution_failure(cx: &DocContext, path_str: &str) {\n-    cx.sess().warn(&format!(\"[{}] cannot be resolved, ignoring it...\", path_str));\n+fn resolution_failure(cx: &DocContext, attrs: &Attributes, path_str: &str) {\n+    let sp = span_of_attrs(attrs);\n+    cx.sess().span_warn(sp, &format!(\"[{}] cannot be resolved, ignoring it...\", path_str));\n }\n \n impl Clean<Attributes> for [ast::Attribute] {\n@@ -1228,7 +1237,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             if let Ok(def) = resolve(cx, path_str, true) {\n                                 def\n                             } else {\n-                                resolution_failure(cx, path_str);\n+                                resolution_failure(cx, &attrs, path_str);\n                                 // this could just be a normal link or a broken link\n                                 // we could potentially check if something is\n                                 // \"intra-doc-link-like\" and warn in that case\n@@ -1239,7 +1248,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             if let Ok(def) = resolve(cx, path_str, false) {\n                                 def\n                             } else {\n-                                resolution_failure(cx, path_str);\n+                                resolution_failure(cx, &attrs, path_str);\n                                 // this could just be a normal link\n                                 continue;\n                             }\n@@ -1284,7 +1293,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             } else if let Ok(value_def) = resolve(cx, path_str, true) {\n                                 value_def\n                             } else {\n-                                resolution_failure(cx, path_str);\n+                                resolution_failure(cx, &attrs, path_str);\n                                 // this could just be a normal link\n                                 continue;\n                             }\n@@ -1293,7 +1302,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             if let Some(def) = macro_resolve(cx, path_str) {\n                                 (def, None)\n                             } else {\n-                                resolution_failure(cx, path_str);\n+                                resolution_failure(cx, &attrs, path_str);\n                                 continue\n                             }\n                         }"}, {"sha": "830aaabf9d231c801fd9fac3f18e03d104fd1ccf", "filename": "src/test/rustdoc-ui/intra-links-warning.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc20eb6fbc1109462147fbd5d0680b6015f71e94/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc20eb6fbc1109462147fbd5d0680b6015f71e94/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs?ref=bc20eb6fbc1109462147fbd5d0680b6015f71e94", "patch": "@@ -10,7 +10,9 @@\n \n // compile-pass\n \n-//! Test with [Foo::baz], [Bar::foo], [Uniooon::X]\n+//! Test with [Foo::baz], [Bar::foo], ...\n+//!\n+//! and [Uniooon::X].\n \n pub struct Foo {\n     pub bar: usize,"}, {"sha": "539ae94c3a9f8bf4df8261991722edb03b51d0a2", "filename": "src/test/rustdoc-ui/intra-links-warning.stderr", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bc20eb6fbc1109462147fbd5d0680b6015f71e94/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc20eb6fbc1109462147fbd5d0680b6015f71e94/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr?ref=bc20eb6fbc1109462147fbd5d0680b6015f71e94", "patch": "@@ -1,6 +1,24 @@\n warning: [Foo::baz] cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:13:1\n+   |\n+13 | / //! Test with [Foo::baz], [Bar::foo], ...\n+14 | | //!\n+15 | | //! and [Uniooon::X].\n+   | |_____________________^\n \n warning: [Bar::foo] cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:13:1\n+   |\n+13 | / //! Test with [Foo::baz], [Bar::foo], ...\n+14 | | //!\n+15 | | //! and [Uniooon::X].\n+   | |_____________________^\n \n warning: [Uniooon::X] cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:13:1\n+   |\n+13 | / //! Test with [Foo::baz], [Bar::foo], ...\n+14 | | //!\n+15 | | //! and [Uniooon::X].\n+   | |_____________________^\n "}]}