{"sha": "3d9fdf71656aa51c65f167e19b0d8cb54023b05e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkOWZkZjcxNjU2YWE1MWM2NWYxNjdlMTliMGQ4Y2I1NDAyM2IwNWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-23T03:11:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-23T03:11:55Z"}, "message": "auto merge of #13089 : thestinger/rust/managed, r=Aatch\n\nThis removes two tests built on `managed::refcount`, but these issues\r\nare well-covered elsewhere for non-managed types.", "tree": {"sha": "9323ecd45bd8e69913874fd42303261a4ea90e24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9323ecd45bd8e69913874fd42303261a4ea90e24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d9fdf71656aa51c65f167e19b0d8cb54023b05e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9fdf71656aa51c65f167e19b0d8cb54023b05e", "html_url": "https://github.com/rust-lang/rust/commit/3d9fdf71656aa51c65f167e19b0d8cb54023b05e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d9fdf71656aa51c65f167e19b0d8cb54023b05e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94e4e917243425f15241e3dcc9b1bcd4b11ebf3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/94e4e917243425f15241e3dcc9b1bcd4b11ebf3e", "html_url": "https://github.com/rust-lang/rust/commit/94e4e917243425f15241e3dcc9b1bcd4b11ebf3e"}, {"sha": "31d5ffc5bde1d67356d1d0469fec34c6d06a32b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/31d5ffc5bde1d67356d1d0469fec34c6d06a32b5", "html_url": "https://github.com/rust-lang/rust/commit/31d5ffc5bde1d67356d1d0469fec34c6d06a32b5"}], "stats": {"total": 88, "additions": 1, "deletions": 87}, "files": [{"sha": "8a890d0293cd850009a801db822931d5e863ef19", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d9fdf71656aa51c65f167e19b0d8cb54023b05e/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9fdf71656aa51c65f167e19b0d8cb54023b05e/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=3d9fdf71656aa51c65f167e19b0d8cb54023b05e", "patch": "@@ -134,7 +134,7 @@ pub mod ascii;\n \n pub mod ptr;\n pub mod owned;\n-pub mod managed;\n+mod managed;\n mod reference;\n pub mod rc;\n pub mod gc;"}, {"sha": "141ed7a92067a7c630d2ea437febc7824af5065b", "filename": "src/libstd/managed.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3d9fdf71656aa51c65f167e19b0d8cb54023b05e/src%2Flibstd%2Fmanaged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9fdf71656aa51c65f167e19b0d8cb54023b05e/src%2Flibstd%2Fmanaged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmanaged.rs?ref=3d9fdf71656aa51c65f167e19b0d8cb54023b05e", "patch": "@@ -12,13 +12,6 @@\n \n #[cfg(not(test))] use cmp::*;\n \n-/// Returns the refcount of a shared box (as just before calling this)\n-#[inline]\n-pub fn refcount<T>(t: @T) -> uint {\n-    use raw::Repr;\n-    unsafe { (*t.repr()).ref_count - 1 }\n-}\n-\n /// Determine if two shared boxes point to the same object\n #[inline]\n pub fn ptr_eq<T>(a: @T, b: @T) -> bool {\n@@ -66,14 +59,3 @@ fn test() {\n     assert!((!ptr_eq::<int>(x, y)));\n     assert!((!ptr_eq::<int>(y, x)));\n }\n-\n-#[test]\n-fn refcount_test() {\n-    use clone::Clone;\n-\n-    let x = @3;\n-    assert_eq!(refcount(x), 1);\n-    let y = x.clone();\n-    assert_eq!(refcount(x), 2);\n-    assert_eq!(refcount(y), 2);\n-}"}, {"sha": "e00ee11829547c0b8e4eb0611d8402e0a3fb0dad", "filename": "src/test/run-pass/match-pattern-drop.rs", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/94e4e917243425f15241e3dcc9b1bcd4b11ebf3e/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e4e917243425f15241e3dcc9b1bcd4b11ebf3e/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs?ref=94e4e917243425f15241e3dcc9b1bcd4b11ebf3e", "patch": "@@ -1,44 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-\n-enum t { make_t(@int), clam, }\n-\n-fn foo(s: @int) {\n-    println!(\"{:?}\", ::std::managed::refcount(s));\n-    let count = ::std::managed::refcount(s);\n-    let x: t = make_t(s); // ref up\n-    assert_eq!(::std::managed::refcount(s), count + 1u);\n-    println!(\"{:?}\", ::std::managed::refcount(s));\n-\n-    match x {\n-      make_t(y) => {\n-        println!(\"{:?}\", y); // ref up then down\n-\n-      }\n-      _ => { println!(\"?\"); fail!(); }\n-    }\n-    println!(\"{:?}\", ::std::managed::refcount(s));\n-    assert_eq!(::std::managed::refcount(s), count + 1u);\n-    let _ = ::std::managed::refcount(s); // don't get bitten by last-use.\n-}\n-\n-pub fn main() {\n-    let s: @int = @0; // ref up\n-\n-    let count = ::std::managed::refcount(s);\n-\n-    foo(s); // ref up then down\n-\n-    println!(\"{}\", ::std::managed::refcount(s));\n-    let count2 = ::std::managed::refcount(s);\n-    assert_eq!(count, count2);\n-}"}, {"sha": "7bb0fe5faa184b358cf9a17ca7a19e95942d71d2", "filename": "src/test/run-pass/unique-copy-box.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/94e4e917243425f15241e3dcc9b1bcd4b11ebf3e/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e4e917243425f15241e3dcc9b1bcd4b11ebf3e/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-copy-box.rs?ref=94e4e917243425f15241e3dcc9b1bcd4b11ebf3e", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-#[allow(unused_variable)];\n-\n-use std::managed;\n-\n-pub fn main() {\n-    let i = ~@1;\n-    let j = ~@2;\n-    let rc1 = managed::refcount(*i);\n-    let j = i.clone();\n-    let rc2 = managed::refcount(*i);\n-    println!(\"rc1: {} rc2: {}\", rc1, rc2);\n-    assert_eq!(rc1 + 1u, rc2);\n-}"}]}