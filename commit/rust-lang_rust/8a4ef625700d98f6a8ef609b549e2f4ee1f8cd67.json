{"sha": "8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNGVmNjI1NzAwZDk4ZjZhOGVmNjA5YjU0OWUyZjRlZTFmOGNkNjc=", "commit": {"author": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-09-11T22:54:44Z"}, "committer": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-09-15T16:09:24Z"}, "message": "Add tests for a few A-needstest issues\n\nCloses #7813.\nCloses #10902.\nCloses #11374.\nCloses #11714.\nCloses #12920.\nCloses #13202.\nCloses #13624.\nCloses #14039.\nCloses #15730.\nCloses #15783.", "tree": {"sha": "241d9cec17597f4d25248656e11fc12eeaf27464", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/241d9cec17597f4d25248656e11fc12eeaf27464"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "html_url": "https://github.com/rust-lang/rust/commit/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/comments", "author": null, "committer": null, "parents": [{"sha": "e73156fe323e761b3bed4a20a1deb21fb4b9ec5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e73156fe323e761b3bed4a20a1deb21fb4b9ec5f", "html_url": "https://github.com/rust-lang/rust/commit/e73156fe323e761b3bed4a20a1deb21fb4b9ec5f"}], "stats": {"total": 216, "additions": 216, "deletions": 0}, "files": [{"sha": "9705994550bb9b57bcce150089fafd5abf5de891", "filename": "src/test/compile-fail/issue-11374.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-11374.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-11374.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11374.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io;\n+use std::vec;\n+\n+pub struct Container<'a> {\n+    reader: &'a mut Reader //~ ERROR explicit lifetime bound required\n+}\n+\n+impl<'a> Container<'a> {\n+    pub fn wrap<'s>(reader: &'s mut Reader) -> Container<'s> {\n+        Container { reader: reader }\n+    }\n+\n+    pub fn read_to(&mut self, vec: &mut [u8]) {\n+        self.reader.read(vec);\n+    }\n+}\n+\n+pub fn for_stdin<'a>() -> Container<'a> {\n+    let mut r = io::stdin();\n+    Container::wrap(&mut r as &mut Reader)\n+}\n+\n+fn main() {\n+    let mut c = for_stdin();\n+    let mut v = vec::Vec::from_elem(10, 0u8);\n+    c.read_to(v.as_mut_slice());\n+}"}, {"sha": "d57182e275b2b30437619b5016dde9d04a080b51", "filename": "src/test/compile-fail/issue-11714.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-11714.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-11714.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11714.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn blah() -> int { //~ ERROR not all control paths return a value\n+    1i\n+\n+    ; //~ NOTE consider removing this semicolon:\n+}\n+\n+fn main() { }"}, {"sha": "0593b498192b568c4077bff9c9c03e9e7b9a2d54", "filename": "src/test/compile-fail/issue-13624.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-13624.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-13624.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13624.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(struct_variant)]\n+\n+mod a {\n+  pub enum Enum {\n+    EnumStructVariant { x: u8, y: u8, z: u8 }\n+  }\n+\n+  pub fn get_enum_struct_variant() -> () {\n+    EnumStructVariant { x: 1, y: 2, z: 3 }\n+//~^ ERROR mismatched types: expected `()`, found `a::Enum` (expected (), found enum a::Enum)\n+  }\n+}\n+\n+mod b {\n+  mod test {\n+    use a;\n+\n+    fn test_enum_struct_variant() {\n+      let enum_struct_variant = ::a::get_enum_struct_variant();\n+      match enum_struct_variant {\n+        a::EnumStructVariant { x, y, z } => {\n+        //~^ ERROR error: mismatched types: expected `()`, found a structure pattern\n+        }\n+      }\n+    }\n+  }\n+}\n+\n+fn main() {}"}, {"sha": "6cddd8ee9397bc4880c803f9f5cb90ea13b0402f", "filename": "src/test/compile-fail/issue-15730.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let mut array = [1, 2, 3];\n+//~^ ERROR cannot determine a type for this local variable: cannot determine the type of this integ\n+    let pie_slice = array.slice(1, 2);\n+}"}, {"sha": "32a920baa31b699aad4ef6a1f0ce2b017bd0ae2d", "filename": "src/test/compile-fail/issue-15783.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-15783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-15783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15783.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo(params: Option<&[&str]>) -> uint {\n+    params.unwrap().head().unwrap().len()\n+}\n+\n+fn main() {\n+    let name = \"Foo\";\n+    let msg = foo(Some(&[name.as_slice()]));\n+//~^ ERROR mismatched types: expected `core::option::Option<&[&str]>`\n+    assert_eq!(msg, 3);\n+}"}, {"sha": "be8b6715bc0ff1cc75d1333753b122ce56e1c497", "filename": "src/test/compile-fail/issue-7813.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-7813.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Fcompile-fail%2Fissue-7813.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7813.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let v = &[]; //~ ERROR cannot determine a type for this local variable: unconstrained type\n+    let it = v.iter();\n+}"}, {"sha": "b5b8d4855ab8d0aedfae3cd08e4a86e30375d415", "filename": "src/test/run-fail/issue-12920.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-fail%2Fissue-12920.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-fail%2Fissue-12920.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-12920.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:explicit failure\n+\n+pub fn main() {\n+    fail!(); println!(\"{}\", 1i);\n+}"}, {"sha": "80006936f22c0969d581154910b9265b62dbad14", "filename": "src/test/run-fail/issue-13202.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-fail%2Fissue-13202.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-fail%2Fissue-13202.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-13202.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:bad input\n+\n+fn main() {\n+    Some(\"foo\").unwrap_or(fail!(\"bad input\")).to_string();\n+}"}, {"sha": "f8fd96166ea9a5e77448dba6b6e8ffdae8b02f3b", "filename": "src/test/run-pass/issue-10902.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-pass%2Fissue-10902.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-pass%2Fissue-10902.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10902.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod two_tuple {\n+    trait T {}\n+    struct P<'a>(&'a T + 'a, &'a T + 'a);\n+    pub fn f<'a>(car: &'a T, cdr: &'a T) -> P<'a> {\n+        P(car, cdr)\n+    }\n+}\n+\n+pub mod two_fields {\n+    trait T {}\n+    struct P<'a> { car: &'a T + 'a, cdr: &'a T + 'a }\n+    pub fn f<'a>(car: &'a T, cdr: &'a T) -> P<'a> {\n+        P{ car: car, cdr: cdr }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "c017a9dad6446ac0e92de4d6c5e62f3c258db2d2", "filename": "src/test/run-pass/issue-14039.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-pass%2Fissue-14039.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67/src%2Ftest%2Frun-pass%2Fissue-14039.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14039.rs?ref=8a4ef625700d98f6a8ef609b549e2f4ee1f8cd67", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    if true {\n+        proc(_) {}\n+    } else {\n+        proc(_: &mut ()) {}\n+    };\n+}"}]}