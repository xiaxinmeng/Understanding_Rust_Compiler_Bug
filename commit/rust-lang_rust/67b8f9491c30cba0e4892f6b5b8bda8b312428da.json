{"sha": "67b8f9491c30cba0e4892f6b5b8bda8b312428da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YjhmOTQ5MWMzMGNiYTBlNDg5MmY2YjViOGJkYThiMzEyNDI4ZGE=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-09-01T20:31:22Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-09-01T21:06:47Z"}, "message": "hir: replace `lazy_static` by `SyncLazy` from std", "tree": {"sha": "614e77206d6ce0ec98d169f5695050d7805e8950", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/614e77206d6ce0ec98d169f5695050d7805e8950"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67b8f9491c30cba0e4892f6b5b8bda8b312428da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67b8f9491c30cba0e4892f6b5b8bda8b312428da", "html_url": "https://github.com/rust-lang/rust/commit/67b8f9491c30cba0e4892f6b5b8bda8b312428da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67b8f9491c30cba0e4892f6b5b8bda8b312428da/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b650d0fea209e0b69407a0a1e04feeb57c4b2d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b650d0fea209e0b69407a0a1e04feeb57c4b2d4", "html_url": "https://github.com/rust-lang/rust/commit/1b650d0fea209e0b69407a0a1e04feeb57c4b2d4"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "3cc5aec6cacc2ed8441f99ac39afc7906bfa6302", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67b8f9491c30cba0e4892f6b5b8bda8b312428da/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/67b8f9491c30cba0e4892f6b5b8bda8b312428da/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=67b8f9491c30cba0e4892f6b5b8bda8b312428da", "patch": "@@ -3530,7 +3530,6 @@ version = \"0.0.0\"\n name = \"rustc_hir\"\n version = \"0.0.0\"\n dependencies = [\n- \"lazy_static\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_index\","}, {"sha": "b24c208c76aedea306450e5caf0cb03e03b9938a", "filename": "compiler/rustc_hir/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2FCargo.toml?ref=67b8f9491c30cba0e4892f6b5b8bda8b312428da", "patch": "@@ -15,6 +15,5 @@ rustc_index = { path = \"../rustc_index\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_ast = { path = \"../rustc_ast\" }\n-lazy_static = \"1\"\n tracing = \"0.1\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "5e4c03bec83dc18d50d4001471b6149b1d19de9c", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=67b8f9491c30cba0e4892f6b5b8bda8b312428da", "patch": "@@ -17,7 +17,7 @@ use rustc_macros::HashStable_Generic;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n \n-use lazy_static::lazy_static;\n+use std::lazy::SyncLazy;\n \n pub enum LangItemGroup {\n     Op,\n@@ -117,14 +117,12 @@ macro_rules! language_item_table {\n             )*\n         }\n \n-        lazy_static! {\n-            /// A mapping from the name of the lang item to its order and the form it must be of.\n-            pub static ref ITEM_REFS: FxHashMap<Symbol, (usize, Target)> = {\n-                let mut item_refs = FxHashMap::default();\n-                $( item_refs.insert($name, (LangItem::$variant as usize, $target)); )*\n-                item_refs\n-            };\n-        }\n+        /// A mapping from the name of the lang item to its order and the form it must be of.\n+        pub static ITEM_REFS: SyncLazy<FxHashMap<Symbol, (usize, Target)>> = SyncLazy::new(|| {\n+            let mut item_refs = FxHashMap::default();\n+            $( item_refs.insert($name, (LangItem::$variant as usize, $target)); )*\n+            item_refs\n+        });\n \n // End of the macro\n     }"}, {"sha": "c69a9b063aeca618cd943422ae4e94ff8ecd409d", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=67b8f9491c30cba0e4892f6b5b8bda8b312428da", "patch": "@@ -6,6 +6,7 @@\n #![feature(const_fn)] // For the unsizing cast on `&[]`\n #![feature(const_panic)]\n #![feature(in_band_lifetimes)]\n+#![feature(once_cell)]\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "52f28bf8f4c73e9b302d1c4169f2fcd72d0300d3", "filename": "compiler/rustc_hir/src/weak_lang_items.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2Fsrc%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67b8f9491c30cba0e4892f6b5b8bda8b312428da/compiler%2Frustc_hir%2Fsrc%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fweak_lang_items.rs?ref=67b8f9491c30cba0e4892f6b5b8bda8b312428da", "patch": "@@ -7,18 +7,16 @@ use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_span::symbol::{sym, Symbol};\n \n-use lazy_static::lazy_static;\n+use std::lazy::SyncLazy;\n \n macro_rules! weak_lang_items {\n     ($($name:ident, $item:ident, $sym:ident;)*) => (\n \n-lazy_static! {\n-    pub static ref WEAK_ITEMS_REFS: FxHashMap<Symbol, LangItem> = {\n-        let mut map = FxHashMap::default();\n-        $(map.insert(sym::$name, LangItem::$item);)*\n-        map\n-    };\n-}\n+pub static WEAK_ITEMS_REFS: SyncLazy<FxHashMap<Symbol, LangItem>> = SyncLazy::new(|| {\n+    let mut map = FxHashMap::default();\n+    $(map.insert(sym::$name, LangItem::$item);)*\n+    map\n+});\n \n /// The `check_name` argument avoids the need for `librustc_hir` to depend on\n /// `librustc_session`."}]}