{"sha": "8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYzVjNDQ1Y2M3YTM3ZDZlMGRjMzdjZTkzYjc2M2I3NDYwYWRmOGU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2011-12-16T22:43:55Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2011-12-16T22:43:55Z"}, "message": "Merge pull request #1318 from elly/cargo\n\nstd: file_is_dir -> path_is_dir, add path_exists", "tree": {"sha": "1bdaa03dc685a13b84ff2954767f771e86bb8f21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bdaa03dc685a13b84ff2954767f771e86bb8f21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "html_url": "https://github.com/rust-lang/rust/commit/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b11268780ed7961c710d6a66665b82a2e5019a08", "url": "https://api.github.com/repos/rust-lang/rust/commits/b11268780ed7961c710d6a66665b82a2e5019a08", "html_url": "https://github.com/rust-lang/rust/commit/b11268780ed7961c710d6a66665b82a2e5019a08"}, {"sha": "89e880d613bc797b3867f91cd7f676c9b4737397", "url": "https://api.github.com/repos/rust-lang/rust/commits/89e880d613bc797b3867f91cd7f676c9b4737397", "html_url": "https://github.com/rust-lang/rust/commit/89e880d613bc797b3867f91cd7f676c9b4737397"}], "stats": {"total": 52, "additions": 39, "deletions": 13}, "files": [{"sha": "d698011f2989d189d0e12ec45325ae8c76e8186b", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "patch": "@@ -112,7 +112,7 @@ fn rest(s: str, start: uint) -> str {\n }\n \n fn need_dir(s: str) {\n-    if fs::file_is_dir(s) { ret; }\n+    if fs::path_is_dir(s) { ret; }\n     if !fs::make_dir(s, 0x1c0i32) {\n         fail #fmt[\"can't make_dir %s\", s];\n     }"}, {"sha": "76e5b8d18f972c578785a811a93ef868aa28b325", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "patch": "@@ -23,7 +23,7 @@ fn contains(haystack: str, needle: str) -> bool {\n fn find_rust_files(&files: [str], path: str) {\n     if str::ends_with(path, \".rs\") {\n         files += [path];\n-    } else if fs::file_is_dir(path)\n+    } else if fs::path_is_dir(path)\n         && !contains(path, \"compile-fail\")\n         && !contains(path, \"build\") {\n         for p in fs::list_dir(path) {"}, {"sha": "46dad7b2bbb3ce3da2f013ec2251272da8c7e9a5", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "patch": "@@ -12,7 +12,8 @@ import os_fs;\n \n #[abi = \"cdecl\"]\n native mod rustrt {\n-    fn rust_file_is_dir(path: str::sbuf) -> int;\n+    fn rust_path_is_dir(path: str::sbuf) -> int;\n+    fn rust_path_exists(path: str::sbuf) -> int;\n }\n \n /*\n@@ -110,12 +111,21 @@ fn connect_many(paths: [path]) : vec::is_not_empty(paths) -> path {\n }\n \n /*\n-Function: file_id_dir\n+Function: path_is_dir\n \n Indicates whether a path represents a directory.\n */\n-fn file_is_dir(p: path) -> bool {\n-    ret str::as_buf(p, {|buf| rustrt::rust_file_is_dir(buf) != 0 });\n+fn path_is_dir(p: path) -> bool {\n+    ret str::as_buf(p, {|buf| rustrt::rust_path_is_dir(buf) != 0 });\n+}\n+\n+/*\n+Function: path_exists\n+\n+Indicates whether a path exists.\n+*/\n+fn path_exists(p: path) -> bool {\n+    ret str::as_buf(p, {|buf| rustrt::rust_path_exists(buf) != 0 });\n }\n \n /*"}, {"sha": "28c819879b64e909a7cecdeb73f341ad06924139", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "patch": "@@ -319,14 +319,23 @@ rust_list_files(rust_str *path) {\n }\n \n extern \"C\" CDECL int\n-rust_file_is_dir(char *path) {\n+rust_path_is_dir(char *path) {\n     struct stat buf;\n     if (stat(path, &buf)) {\n         return 0;\n     }\n     return S_ISDIR(buf.st_mode);\n }\n \n+extern \"C\" CDECL int\n+rust_path_exists(char *path) {\n+    struct stat buf;\n+    if (stat(path, &buf)) {\n+        return 0;\n+    }\n+    return 1;\n+}\n+\n extern \"C\" CDECL FILE* rust_get_stdin() {return stdin;}\n extern \"C\" CDECL FILE* rust_get_stdout() {return stdout;}\n extern \"C\" CDECL FILE* rust_get_stderr() {return stderr;}"}, {"sha": "ff16cde5b1893571a5cd3f1b4bfb772281794787", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "patch": "@@ -28,7 +28,8 @@ rand_free\n rand_new\n rand_next\n refcount\n-rust_file_is_dir\n+rust_path_is_dir\n+rust_path_exists\n rust_getcwd\n rust_get_stdin\n rust_get_stdout\n@@ -80,4 +81,4 @@ rust_uv_run\n rust_uv_unref\n rust_uv_idle_init\n rust_uv_idle_start\n-rust_uv_size_of_idle_t\n\\ No newline at end of file\n+rust_uv_size_of_idle_t"}, {"sha": "a9b1f5ea259b4fe67d6a35cc288fc3714296b222", "filename": "src/test/stdtest/fs.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Ftest%2Fstdtest%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e/src%2Ftest%2Fstdtest%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ffs.rs?ref=8dc5c445cc7a37d6e0dc37ce93b763b7460adf8e", "patch": "@@ -26,9 +26,15 @@ fn list_dir() {\n }\n \n #[test]\n-fn file_is_dir() {\n-    assert (fs::file_is_dir(\".\"));\n-    assert (!fs::file_is_dir(\"test/stdtest/fs.rs\"));\n+fn path_is_dir() {\n+    assert (fs::path_is_dir(\".\"));\n+    assert (!fs::path_is_dir(\"test/stdtest/fs.rs\"));\n+}\n+\n+#[test]\n+fn path_exists() {\n+    assert (fs::path_exists(\".\"));\n+    assert (!fs::path_exists(\"test/nonexistent-bogus-path\"));\n }\n \n fn ps() -> str {\n@@ -214,4 +220,4 @@ fn splitext_nobasename() {\n     let (base, ext) = fs::splitext(\"oh.my/\");\n     assert base == \"oh.my/\";\n     assert ext == \"\";\n-}\n\\ No newline at end of file\n+}"}]}