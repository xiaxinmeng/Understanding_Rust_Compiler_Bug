{"sha": "d1d8d999ba577ae03576403aa9124204dd630f63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZDhkOTk5YmE1NzdhZTAzNTc2NDAzYWE5MTI0MjA0ZGQ2MzBmNjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-04-24T13:09:09Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-30T16:18:32Z"}, "message": "Remove unused const error variant", "tree": {"sha": "4c79d00546de66935213219f6d98bad9d1a1c3bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c79d00546de66935213219f6d98bad9d1a1c3bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1d8d999ba577ae03576403aa9124204dd630f63", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrnQdgsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MASH\ndA//TTY9p1f+dn9fQ+BmkiOJtPGi2mHAapIm9tGWsE9UsHdCRpu3IOUeR++DYU+A\n8vqE8/bANXyjnulZGzGhM1fr28U8v6+9yLJwpyanftNGNPM+9sebUhq6pIg5hVr9\nGUgKI4ZphwyRIU7N0ZE/bTt4oEDr0D/tXch1PYRo3UyrqjSkJrtBw53brycjGYZJ\nbAwV91uZJLoVkSvlGrIsX2d474eKT4q4hJmbVwAJvuOtYAGmJyVTujVL/CoT5vlt\nmePXpK49RzjxSK/5zUyYzuf4W5Y16FkVfMVSmqsp/nEh/SjWNe1wJxd5xdJCG3E9\neXPt8uyqizuZZWhozqHOVnvDHOFZYwIgDjLFr4ggW+ifiKEo0qQXPpaFvYx3xrgx\npq7nFbmdnnGqBGSfaxrEuNQFuf1/qD+ThoD3YZMbN0Hzv1B6O/iaAyd8JspfOoS1\nU30jwzCNVaTdnJZKUxfOTCBO3pmdP5BJV2YKjtCyl9YK06Jo37D1LOKu8xG6HYch\nl4qxAk3F0og935cLWFuo+EsBVZF4aflfIRdGG+gzTJRo9H6x/VrzWp4iIUAtx4Od\n0uQLg/0eyUXWwRhpySAxEll0NEGS9SHF3Pn+oExO+Ib7xnN7+kLNdKaR1Zw47kDG\nuUwF8ombmF/9p92RU/KWnEv8plTDYRvJUtBCx8On8/OH8Zk=\n=mNux\n-----END PGP SIGNATURE-----", "payload": "tree 4c79d00546de66935213219f6d98bad9d1a1c3bb\nparent 0aa6e039d013e2c3800884a19e53e3f6c927a0e8\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1524575349 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1525105112 +0200\n\nRemove unused const error variant\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1d8d999ba577ae03576403aa9124204dd630f63", "html_url": "https://github.com/rust-lang/rust/commit/d1d8d999ba577ae03576403aa9124204dd630f63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1d8d999ba577ae03576403aa9124204dd630f63/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aa6e039d013e2c3800884a19e53e3f6c927a0e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aa6e039d013e2c3800884a19e53e3f6c927a0e8", "html_url": "https://github.com/rust-lang/rust/commit/0aa6e039d013e2c3800884a19e53e3f6c927a0e8"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "f4d20f4c31aaed47f04a57b335b9d3727131e9b4", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d1d8d999ba577ae03576403aa9124204dd630f63/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1d8d999ba577ae03576403aa9124204dd630f63/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=d1d8d999ba577ae03576403aa9124204dd630f63", "patch": "@@ -505,9 +505,6 @@ for ::middle::const_val::ErrKind<'gcx> {\n                 len.hash_stable(hcx, hasher);\n                 index.hash_stable(hcx, hasher);\n             }\n-            Math(ref const_math_err) => {\n-                const_math_err.hash_stable(hcx, hasher);\n-            }\n             LayoutError(ref layout_error) => {\n                 layout_error.hash_stable(hcx, hasher);\n             }"}, {"sha": "0ecab50dda22989faeb57d53f0bc642ff068e37d", "filename": "src/librustc/middle/const_val.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d1d8d999ba577ae03576403aa9124204dd630f63/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1d8d999ba577ae03576403aa9124204dd630f63/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_val.rs?ref=d1d8d999ba577ae03576403aa9124204dd630f63", "patch": "@@ -11,7 +11,6 @@\n use hir::def_id::DefId;\n use ty::{self, TyCtxt, layout};\n use ty::subst::Substs;\n-use rustc_const_math::*;\n use mir::interpret::{Value, PrimVal};\n use errors::DiagnosticBuilder;\n \n@@ -62,7 +61,6 @@ pub enum ErrKind<'tcx> {\n     UnimplementedConstVal(&'static str),\n     IndexOutOfBounds { len: u64, index: u64 },\n \n-    Math(ConstMathErr),\n     LayoutError(layout::LayoutError<'tcx>),\n \n     TypeckError,\n@@ -76,12 +74,6 @@ pub struct FrameInfo {\n     pub location: String,\n }\n \n-impl<'tcx> From<ConstMathErr> for ErrKind<'tcx> {\n-    fn from(err: ConstMathErr) -> ErrKind<'tcx> {\n-        ErrKind::Math(err)\n-    }\n-}\n-\n #[derive(Clone, Debug)]\n pub enum ConstEvalErrDescription<'a, 'tcx: 'a> {\n     Simple(Cow<'a, str>),\n@@ -119,7 +111,6 @@ impl<'a, 'gcx, 'tcx> ConstEvalErr<'tcx> {\n                         len, index)\n             }\n \n-            Math(ref err) => Simple(err.description().into_cow()),\n             LayoutError(ref err) => Simple(err.to_string().into_cow()),\n \n             TypeckError => simple!(\"type-checking failed\"),"}, {"sha": "f81617a3795a79643fa9c0863164733ad78ccba6", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1d8d999ba577ae03576403aa9124204dd630f63/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1d8d999ba577ae03576403aa9124204dd630f63/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=d1d8d999ba577ae03576403aa9124204dd630f63", "patch": "@@ -585,7 +585,6 @@ impl<'a, 'tcx> Lift<'tcx> for const_val::ErrKind<'a> {\n             NonConstPath => NonConstPath,\n             UnimplementedConstVal(s) => UnimplementedConstVal(s),\n             IndexOutOfBounds { len, index } => IndexOutOfBounds { len, index },\n-            Math(ref e) => Math(e.clone()),\n \n             LayoutError(ref e) => {\n                 return tcx.lift(e).map(LayoutError)"}]}