{"sha": "469d6a819d3d7348fdd54d8c7ec1e694f2f43051", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OWQ2YTgxOWQzZDczNDhmZGQ1NGQ4YzdlYzFlNjk0ZjJmNDMwNTE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-30T13:38:18Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-08-01T15:44:53Z"}, "message": "Test for (previously uncaught) infinite loop identified by matthewjasper.", "tree": {"sha": "a36b140fc42378d42a8de9d40b5e2641866dc4dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a36b140fc42378d42a8de9d40b5e2641866dc4dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/469d6a819d3d7348fdd54d8c7ec1e694f2f43051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/469d6a819d3d7348fdd54d8c7ec1e694f2f43051", "html_url": "https://github.com/rust-lang/rust/commit/469d6a819d3d7348fdd54d8c7ec1e694f2f43051", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/469d6a819d3d7348fdd54d8c7ec1e694f2f43051/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08b3a8e4294484adcb8b7ed36e76f49e76c3a5f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/08b3a8e4294484adcb8b7ed36e76f49e76c3a5f8", "html_url": "https://github.com/rust-lang/rust/commit/08b3a8e4294484adcb8b7ed36e76f49e76c3a5f8"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "740e99c82a556780dfdb800cca7ae1ceed333eb6", "filename": "src/test/ui/issue-45696-no-variant-box-recur.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/469d6a819d3d7348fdd54d8c7ec1e694f2f43051/src%2Ftest%2Fui%2Fissue-45696-no-variant-box-recur.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469d6a819d3d7348fdd54d8c7ec1e694f2f43051/src%2Ftest%2Fui%2Fissue-45696-no-variant-box-recur.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-45696-no-variant-box-recur.rs?ref=469d6a819d3d7348fdd54d8c7ec1e694f2f43051", "patch": "@@ -0,0 +1,66 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// rust-lang/rust#45696: This test checks the compiler won't infinite\n+// loop when you declare a variable of type `struct A(Box<A>, ...);`\n+// (which is impossible to construct but *is* possible to declare; see\n+// also issues #4287, #44933, and #52852).\n+//\n+// We will explicitly test AST-borrowck, NLL, and migration modes;\n+// thus we will also skip the automated compare-mode=nll.\n+\n+// revisions: ast nll migrate\n+// ignore-compare-mode-nll\n+\n+#![cfg_attr(nll, feature(nll))]\n+//[migrate]compile-flags: -Z borrowck=migrate -Z two-phase-borrows\n+\n+// run-pass\n+\n+// This test has structs and functions that are by definiton unusable\n+// all over the place, so just go ahead and allow dead_code\n+#![allow(dead_code)]\n+\n+// direct regular recursion with indirect ownership via box\n+struct C { field: Box<C> }\n+\n+// direct non-regular recursion with indirect ownership via box\n+struct D { field: Box<(D, D)> }\n+\n+// indirect regular recursion with indirect ownership via box.\n+struct E { field: F }\n+struct F { field: Box<E> }\n+\n+// indirect non-regular recursion with indirect ownership via box.\n+struct G { field: (F, F) }\n+struct H { field: Box<E> }\n+\n+// These enums are cases that are not currently hit by the\n+// `visit_terminator_drop` recursion down a type's structural\n+// definition.\n+//\n+// But it seems prudent to include them in this test as variants on\n+// the above, in that they are similarly non-constructable data types\n+// with destructors that would diverge.\n+enum I { One(Box<I>) }\n+enum J { One(Box<J>), Two(Box<J>) }\n+\n+fn impossible_to_call_c(_c: C) { }\n+fn impossible_to_call_d(_d: D) { }\n+fn impossible_to_call_e(_e: E) { }\n+fn impossible_to_call_f(_f: F) { }\n+fn impossible_to_call_g(_g: G) { }\n+fn impossible_to_call_h(_h: H) { }\n+fn impossible_to_call_i(_i: I) { }\n+fn impossible_to_call_j(_j: J) { }\n+\n+fn main() {\n+\n+}"}]}