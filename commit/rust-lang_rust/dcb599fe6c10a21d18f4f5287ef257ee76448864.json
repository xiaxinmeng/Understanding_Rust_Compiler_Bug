{"sha": "dcb599fe6c10a21d18f4f5287ef257ee76448864", "node_id": "C_kwDOAAsO6NoAKGRjYjU5OWZlNmMxMGEyMWQxOGY0ZjUyODdlZjI1N2VlNzY0NDg4NjQ", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-05-05T07:40:29Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-07-02T13:54:37Z"}, "message": "create tmp directory if there is no parent directory", "tree": {"sha": "bc68d7b164614c69b39a21db9710f165df22d5ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc68d7b164614c69b39a21db9710f165df22d5ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcb599fe6c10a21d18f4f5287ef257ee76448864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb599fe6c10a21d18f4f5287ef257ee76448864", "html_url": "https://github.com/rust-lang/rust/commit/dcb599fe6c10a21d18f4f5287ef257ee76448864", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcb599fe6c10a21d18f4f5287ef257ee76448864/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d35ff16d2c63d9dc9d9d98d9ebcda4840b08d4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d35ff16d2c63d9dc9d9d98d9ebcda4840b08d4b", "html_url": "https://github.com/rust-lang/rust/commit/8d35ff16d2c63d9dc9d9d98d9ebcda4840b08d4b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ed42efcfd774c5cec18dac17d83e145f1edc5d1a", "filename": "compiler/rustc_metadata/src/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcb599fe6c10a21d18f4f5287ef257ee76448864/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb599fe6c10a21d18f4f5287ef257ee76448864/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs?ref=dcb599fe6c10a21d18f4f5287ef257ee76448864", "patch": "@@ -64,7 +64,7 @@ pub fn encode_and_write_metadata(\n     // which is why we create it inside the output directory specifically.\n     let metadata_tmpdir = TempFileBuilder::new()\n         .prefix(\"rmeta\")\n-        .tempdir_in(out_filename.parent().unwrap_or_else(|| Path::new(\"\")))\n+        .tempdir_in(out_filename.parent().unwrap_or_else(|| Path::new(\"tmp\")))\n         .unwrap_or_else(|err| tcx.sess.fatal(&format!(\"couldn't create a temp dir: {}\", err)));\n     let metadata_tmpdir = MaybeTempDir::new(metadata_tmpdir, tcx.sess.opts.cg.save_temps);\n     let metadata_filename = metadata_tmpdir.as_ref().join(METADATA_FILENAME);"}]}