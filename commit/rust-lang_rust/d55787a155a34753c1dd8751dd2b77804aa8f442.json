{"sha": "d55787a155a34753c1dd8751dd2b77804aa8f442", "node_id": "C_kwDOAAsO6NoAKGQ1NTc4N2ExNTVhMzQ3NTNjMWRkODc1MWRkMmI3NzgwNGFhOGY0NDI", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-04-21T12:42:46Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-06-14T12:50:52Z"}, "message": "Add typeid_for_trait_ref function\n\nThis function computes a Itanium-like typeid for a trait_ref. This is\nrequired for the VFE optimization in LLVM. It is used to map\n`llvm.type.checked.load` invocations, that is loading the function from\na vtable, to the vtables this function could be from.\n\nIt is important to note that `typeid`s are not unique. So multiple\nvtables of the same trait can share `typeid`s.", "tree": {"sha": "d323c40f07dbae75a7dddc6e1e837f36e8e85533", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d323c40f07dbae75a7dddc6e1e837f36e8e85533"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d55787a155a34753c1dd8751dd2b77804aa8f442", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmKohCwACgkQHKDfKvWd\naKUrqA/7BdeWP+0l16v3uvHCsHKZG0GrqLVBdSmV3T49tT2rdIllN1ukdkzqgRrk\nNJ6YP5tokUKNm9Sk/Ke4/oYnLQzbqqNf/xJp4v8JniX6lwud6HgdsHahFHkZaeyI\nRhh3LSA9/mffXA9NNf2KZlapTRsW9rmf8laNXSQTNI0OJQGdWhWffJageRPSEjNq\n/d46OiD2Zgybe/F7d2wdPo2+/Ph6IGilI2C3o/AWjCiWIq1ciwgXvY3z6YuZJchg\nnTI6VJYAItn51x0kOms6z5YivKcoxK9JqNOyqLR93F3dvza3+bxcy+gqewG7HTMa\naYq2u7vEDBhY+KMRga+/IJ5IPwf8hJcZLBI6wTeaPyePwOWy80ssWkGdS5U03IUG\nZKdUNd3QYwWwYsT8LMlOeATRUhpUpCt7C92ZxdCNHpJ+4A+GYW63bIcDc1ZRnqwH\nJYpFybob2skrOcF0QnwthQOX6433Rf01ZDKKYXTRgccRZoDnLR3wuoa/SzSnvX4p\nqYO2NH3juBMv8TKLkbccrz4jzn9YFZbXmVytBJ4LgXvq4c1WKkbeBUQutgg1Lhem\nQh7fI4qtRQReYKO475uia5on4PSgE91NaYXXkZ5GoYqUqYi7UnbMYGc2yMk2rwUv\n6v6ZY2Cyp9NcwiP/RENyUtY5lqfFLw/JI6wGTM+8FKI8wIVSTWk=\n=minf\n-----END PGP SIGNATURE-----", "payload": "tree d323c40f07dbae75a7dddc6e1e837f36e8e85533\nparent 20f597ffcd29d71d116c617def76291689549d6c\nauthor flip1995 <philipp.krones@embecosm.com> 1650544966 +0100\ncommitter Philipp Krones <hello@philkrones.com> 1655211052 +0200\n\nAdd typeid_for_trait_ref function\n\nThis function computes a Itanium-like typeid for a trait_ref. This is\nrequired for the VFE optimization in LLVM. It is used to map\n`llvm.type.checked.load` invocations, that is loading the function from\na vtable, to the vtables this function could be from.\n\nIt is important to note that `typeid`s are not unique. So multiple\nvtables of the same trait can share `typeid`s.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d55787a155a34753c1dd8751dd2b77804aa8f442", "html_url": "https://github.com/rust-lang/rust/commit/d55787a155a34753c1dd8751dd2b77804aa8f442", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d55787a155a34753c1dd8751dd2b77804aa8f442/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20f597ffcd29d71d116c617def76291689549d6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/20f597ffcd29d71d116c617def76291689549d6c", "html_url": "https://github.com/rust-lang/rust/commit/20f597ffcd29d71d116c617def76291689549d6c"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "bed0e81e66e142b863d7172eb3ee5865bb80e932", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d55787a155a34753c1dd8751dd2b77804aa8f442/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55787a155a34753c1dd8751dd2b77804aa8f442/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=d55787a155a34753c1dd8751dd2b77804aa8f442", "patch": "@@ -155,6 +155,13 @@ pub fn typeid_for_fnabi<'tcx>(tcx: TyCtxt<'tcx>, fn_abi: &FnAbi<'tcx, Ty<'tcx>>)\n     v0::mangle_typeid_for_fnabi(tcx, fn_abi)\n }\n \n+pub fn typeid_for_trait_ref<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    trait_ref: ty::PolyExistentialTraitRef<'tcx>,\n+) -> String {\n+    v0::mangle_typeid_for_trait_ref(tcx, trait_ref)\n+}\n+\n /// Computes the symbol name for the given instance. This function will call\n /// `compute_instantiating_crate` if it needs to factor the instantiating crate\n /// into the symbol name."}, {"sha": "a00b86e79acb757a703b4d7f760a9f2d16b89223", "filename": "compiler/rustc_symbol_mangling/src/v0.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d55787a155a34753c1dd8751dd2b77804aa8f442/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55787a155a34753c1dd8751dd2b77804aa8f442/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs?ref=d55787a155a34753c1dd8751dd2b77804aa8f442", "patch": "@@ -95,6 +95,24 @@ pub(super) fn mangle_typeid_for_fnabi<'tcx>(\n     format!(\"typeid{}\", arg_count)\n }\n \n+pub(super) fn mangle_typeid_for_trait_ref<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    trait_ref: ty::PolyExistentialTraitRef<'tcx>,\n+) -> String {\n+    // FIXME(flip1995): See comment in `mangle_typeid_for_fnabi`.\n+    let mut cx = &mut SymbolMangler {\n+        tcx,\n+        start_offset: 0,\n+        paths: FxHashMap::default(),\n+        types: FxHashMap::default(),\n+        consts: FxHashMap::default(),\n+        binders: vec![],\n+        out: String::new(),\n+    };\n+    cx = cx.print_def_path(trait_ref.def_id(), &[]).unwrap();\n+    std::mem::take(&mut cx.out)\n+}\n+\n struct BinderLevel {\n     /// The range of distances from the root of what's\n     /// being printed, to the lifetimes in a binder."}]}