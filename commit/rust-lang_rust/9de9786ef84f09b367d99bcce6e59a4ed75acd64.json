{"sha": "9de9786ef84f09b367d99bcce6e59a4ed75acd64", "node_id": "C_kwDOAAsO6NoAKDlkZTk3ODZlZjg0ZjA5YjM2N2Q5OWJjY2U2ZTU5YTRlZDc1YWNkNjQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-14T11:39:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-14T11:39:17Z"}, "message": "Rollup merge of #100487 - tmiasko:assert-safe, r=petrochenkov\n\n`assert_{inhabited,zero_valid,uninit_valid}` intrinsics are safe\n\nThose intrinsics either panic or do nothing. They are safe.", "tree": {"sha": "d63a94dc1432882fa5856a412d0c28d40e978cfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d63a94dc1432882fa5856a412d0c28d40e978cfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9de9786ef84f09b367d99bcce6e59a4ed75acd64", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi+N7lCRBK7hj4Ov3rIwAA0FgIAAoWI2FiXRxZImOUtKo5zALr\nJRUgq34oRfE0lYSelwSdC/6TF/yvlFVmiXRverKbwLc9JtXjJ+HiXceTLHH28idS\nOzq73CK4sQK9cilKSWRkupbEZz/Z0TMhYOyE3IN7QYnngYU9662d3WBoZDaORmW9\nPH5fNGS6wnjd1p5AgPy1azu+JVOLxDvYYL9ZZCw5d4z/G+u7aCsNID4QEwdp8Qkl\nANNzsLo6zjAb2jC+wNXiC3SHx2rZA4iBB0s+QUedDK3JC+LsCJsk9nsLq3qsBbec\nLFWN49NTrWAzjld/dhHHpiAVnwlqIInqdON+yw6HZVsZvu79OahEQccXAiH252U=\n=6Eem\n-----END PGP SIGNATURE-----\n", "payload": "tree d63a94dc1432882fa5856a412d0c28d40e978cfd\nparent 38bc93730bcea6c0e6020fbf01a9e00c2a627e83\nparent 6b19a48e708609b456d3a6e90cafd63a6c348e86\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1660477157 +0530\ncommitter GitHub <noreply@github.com> 1660477157 +0530\n\nRollup merge of #100487 - tmiasko:assert-safe, r=petrochenkov\n\n`assert_{inhabited,zero_valid,uninit_valid}` intrinsics are safe\n\nThose intrinsics either panic or do nothing. They are safe.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9de9786ef84f09b367d99bcce6e59a4ed75acd64", "html_url": "https://github.com/rust-lang/rust/commit/9de9786ef84f09b367d99bcce6e59a4ed75acd64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9de9786ef84f09b367d99bcce6e59a4ed75acd64/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38bc93730bcea6c0e6020fbf01a9e00c2a627e83", "url": "https://api.github.com/repos/rust-lang/rust/commits/38bc93730bcea6c0e6020fbf01a9e00c2a627e83", "html_url": "https://github.com/rust-lang/rust/commit/38bc93730bcea6c0e6020fbf01a9e00c2a627e83"}, {"sha": "6b19a48e708609b456d3a6e90cafd63a6c348e86", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b19a48e708609b456d3a6e90cafd63a6c348e86", "html_url": "https://github.com/rust-lang/rust/commit/6b19a48e708609b456d3a6e90cafd63a6c348e86"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "05686be5d4b3dfb081f327b2ab2d615053ce4a5c", "filename": "compiler/rustc_typeck/src/check/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9de9786ef84f09b367d99bcce6e59a4ed75acd64/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9de9786ef84f09b367d99bcce6e59a4ed75acd64/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs?ref=9de9786ef84f09b367d99bcce6e59a4ed75acd64", "patch": "@@ -69,6 +69,9 @@ pub fn intrinsic_operation_unsafety(intrinsic: Symbol) -> hir::Unsafety {\n         // to note that it's safe to call, since\n         // safe extern fns are otherwise unprecedented.\n         sym::abort\n+        | sym::assert_inhabited\n+        | sym::assert_zero_valid\n+        | sym::assert_uninit_valid\n         | sym::size_of\n         | sym::min_align_of\n         | sym::needs_drop"}, {"sha": "3ce3e1bdbac0f9b6d4b30c12bce22173e38b0c0a", "filename": "src/test/ui/consts/assert-type-intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9de9786ef84f09b367d99bcce6e59a4ed75acd64/src%2Ftest%2Fui%2Fconsts%2Fassert-type-intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9de9786ef84f09b367d99bcce6e59a4ed75acd64/src%2Ftest%2Fui%2Fconsts%2Fassert-type-intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fassert-type-intrinsics.rs?ref=9de9786ef84f09b367d99bcce6e59a4ed75acd64", "patch": "@@ -13,10 +13,10 @@ fn main() {\n     const _BAD1: () = unsafe {\n         MaybeUninit::<!>::uninit().assume_init();\n     };\n-    const _BAD2: () = unsafe {\n+    const _BAD2: () = {\n         intrinsics::assert_uninit_valid::<bool>();\n     };\n-    const _BAD3: () = unsafe {\n+    const _BAD3: () = {\n         intrinsics::assert_zero_valid::<&'static i32>();\n     };\n }"}, {"sha": "6eab10197b8553af4e006a64e6741a361bbda8bc", "filename": "src/test/ui/consts/assert-type-intrinsics.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9de9786ef84f09b367d99bcce6e59a4ed75acd64/src%2Ftest%2Fui%2Fconsts%2Fassert-type-intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9de9786ef84f09b367d99bcce6e59a4ed75acd64/src%2Ftest%2Fui%2Fconsts%2Fassert-type-intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fassert-type-intrinsics.stderr?ref=9de9786ef84f09b367d99bcce6e59a4ed75acd64", "patch": "@@ -13,7 +13,7 @@ LL |         MaybeUninit::<!>::uninit().assume_init();\n error: any use of this value will cause an error\n   --> $DIR/assert-type-intrinsics.rs:17:9\n    |\n-LL |     const _BAD2: () = unsafe {\n+LL |     const _BAD2: () = {\n    |     ---------------\n LL |         intrinsics::assert_uninit_valid::<bool>();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ aborted execution: attempted to leave type `bool` uninitialized, which is invalid\n@@ -24,7 +24,7 @@ LL |         intrinsics::assert_uninit_valid::<bool>();\n error: any use of this value will cause an error\n   --> $DIR/assert-type-intrinsics.rs:20:9\n    |\n-LL |     const _BAD3: () = unsafe {\n+LL |     const _BAD3: () = {\n    |     ---------------\n LL |         intrinsics::assert_zero_valid::<&'static i32>();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ aborted execution: attempted to zero-initialize type `&i32`, which is invalid\n@@ -51,7 +51,7 @@ Future breakage diagnostic:\n error: any use of this value will cause an error\n   --> $DIR/assert-type-intrinsics.rs:17:9\n    |\n-LL |     const _BAD2: () = unsafe {\n+LL |     const _BAD2: () = {\n    |     ---------------\n LL |         intrinsics::assert_uninit_valid::<bool>();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ aborted execution: attempted to leave type `bool` uninitialized, which is invalid\n@@ -64,7 +64,7 @@ Future breakage diagnostic:\n error: any use of this value will cause an error\n   --> $DIR/assert-type-intrinsics.rs:20:9\n    |\n-LL |     const _BAD3: () = unsafe {\n+LL |     const _BAD3: () = {\n    |     ---------------\n LL |         intrinsics::assert_zero_valid::<&'static i32>();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ aborted execution: attempted to zero-initialize type `&i32`, which is invalid"}]}