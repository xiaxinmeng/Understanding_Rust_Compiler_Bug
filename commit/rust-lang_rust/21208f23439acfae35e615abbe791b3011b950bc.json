{"sha": "21208f23439acfae35e615abbe791b3011b950bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMjA4ZjIzNDM5YWNmYWUzNWU2MTVhYmJlNzkxYjMwMTFiOTUwYmM=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-01-27T20:50:19Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-01-27T20:56:10Z"}, "message": "Handle paths correctly. This lets us handle one more test :-)", "tree": {"sha": "4ea169e6cf1a9ac8a03528c376b838c031bb536c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ea169e6cf1a9ac8a03528c376b838c031bb536c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21208f23439acfae35e615abbe791b3011b950bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21208f23439acfae35e615abbe791b3011b950bc", "html_url": "https://github.com/rust-lang/rust/commit/21208f23439acfae35e615abbe791b3011b950bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21208f23439acfae35e615abbe791b3011b950bc/comments", "author": null, "committer": null, "parents": [{"sha": "5066937f108cf364cb31bdd517bf3d984ecec73d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5066937f108cf364cb31bdd517bf3d984ecec73d", "html_url": "https://github.com/rust-lang/rust/commit/5066937f108cf364cb31bdd517bf3d984ecec73d"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "6d5da8212d5248af211500976834a10e94e564b2", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21208f23439acfae35e615abbe791b3011b950bc/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/21208f23439acfae35e615abbe791b3011b950bc/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=21208f23439acfae35e615abbe791b3011b950bc", "patch": "@@ -421,6 +421,7 @@ TEST_XFAILS_BOOT :=  $(TASK_XFAILS) \\\n \n TEST_XFAILS_RUSTC := $(filter-out \\\n                       $(addprefix test/run-pass/, \\\n+                        alt-path.rs \\\n                         alt-pattern-simple.rs \\\n                         alt-tag.rs \\\n                         arith-0.rs \\"}, {"sha": "8010b2a590029fc2eaabf67ecee78ecbf8aab6a8", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/21208f23439acfae35e615abbe791b3011b950bc/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21208f23439acfae35e615abbe791b3011b950bc/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=21208f23439acfae35e615abbe791b3011b950bc", "patch": "@@ -381,21 +381,15 @@ fn fold_pat_tag(&env e, &span sp, ast.path p, vec[@ast.pat] args,\n     auto len = _vec.len[ast.ident](p.node.idents);\n     auto last_id = p.node.idents.(len - 1u);\n     auto new_def;\n-    alt (lookup_name(e, last_id)) {\n-        case (some[def](?d)) {\n-            alt (d) {\n-                case (ast.def_variant(?did, ?vid)) {\n-                    new_def = some[ast.variant_def](tup(did, vid));\n-                }\n-                case (_) {\n-                    e.sess.span_err(sp, \"not a tag variant: \" + last_id);\n-                    new_def = none[ast.variant_def];\n-                }\n-            }\n+    auto index = new_def_hash[def_wrap]();\n+    auto d = find_final_def(e, index, sp, p.node.idents, none[ast.def_id]);\n+    alt (unwrap_def(d)) {\n+        case (ast.def_variant(?did, ?vid)) {\n+            new_def = some[ast.variant_def](tup(did, vid));\n         }\n-        case (none[def]) {\n+        case (_) {\n+            e.sess.span_err(sp, \"not a tag variant: \" + last_id);\n             new_def = none[ast.variant_def];\n-            e.sess.span_err(sp, \"unresolved name: \" + last_id);\n         }\n     }\n "}, {"sha": "45faa700d0bd5e291d8aca201e48a71f8fbe2525", "filename": "src/test/run-pass/alt-path.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/21208f23439acfae35e615abbe791b3011b950bc/src%2Ftest%2Frun-pass%2Falt-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21208f23439acfae35e615abbe791b3011b950bc/src%2Ftest%2Frun-pass%2Falt-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-path.rs?ref=21208f23439acfae35e615abbe791b3011b950bc", "patch": "@@ -0,0 +1,15 @@\n+import m1.foo;\n+mod m1 {\n+  tag foo {\n+    foo1;\n+    foo2;\n+  }\n+}\n+fn bar(foo x) {\n+  alt(x) {\n+    case (m1.foo1) {\n+    }\n+  }\n+}\n+fn main(vec[str] args) {\n+}"}]}