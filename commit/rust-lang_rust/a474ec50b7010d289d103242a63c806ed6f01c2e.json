{"sha": "a474ec50b7010d289d103242a63c806ed6f01c2e", "node_id": "C_kwDOAAsO6NoAKGE0NzRlYzUwYjcwMTBkMjg5ZDEwMzI0MmE2M2M4MDZlZDZmMDFjMmU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-09T20:26:39Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-10T17:40:52Z"}, "message": "Move lifetime resolution module to rustc_hir_analysis.", "tree": {"sha": "cd8f461fd03f5a4ebacbcbb606212dec0e701e1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd8f461fd03f5a4ebacbcbb606212dec0e701e1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a474ec50b7010d289d103242a63c806ed6f01c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a474ec50b7010d289d103242a63c806ed6f01c2e", "html_url": "https://github.com/rust-lang/rust/commit/a474ec50b7010d289d103242a63c806ed6f01c2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a474ec50b7010d289d103242a63c806ed6f01c2e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0265a3e93bf1b89d97cae113ed214954d5c35e22", "url": "https://api.github.com/repos/rust-lang/rust/commits/0265a3e93bf1b89d97cae113ed214954d5c35e22", "html_url": "https://github.com/rust-lang/rust/commit/0265a3e93bf1b89d97cae113ed214954d5c35e22"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "98bcdcf652011eaddf4fc45567973efd9fb81b68", "filename": "compiler/rustc_hir_analysis/src/collect.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs?ref=a474ec50b7010d289d103242a63c806ed6f01c2e", "patch": "@@ -46,6 +46,7 @@ use std::iter;\n \n mod generics_of;\n mod item_bounds;\n+mod lifetimes;\n mod predicates_of;\n mod type_of;\n \n@@ -57,6 +58,7 @@ fn collect_mod_item_types(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n }\n \n pub fn provide(providers: &mut Providers) {\n+    lifetimes::provide(providers);\n     *providers = Providers {\n         opt_const_param_of: type_of::opt_const_param_of,\n         type_of: type_of::type_of,"}, {"sha": "c1214698cf7708d5d6494d76b93ea5ae0c47d814", "filename": "compiler/rustc_hir_analysis/src/collect/lifetimes.rs", "status": "renamed", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Flifetimes.rs?ref=a474ec50b7010d289d103242a63c806ed6f01c2e", "patch": "@@ -32,8 +32,6 @@ trait RegionExt {\n     fn id(&self) -> Option<DefId>;\n \n     fn shifted(self, amount: u32) -> Region;\n-\n-    fn shifted_out_to_binder(self, binder: ty::DebruijnIndex) -> Region;\n }\n \n impl RegionExt for Region {\n@@ -69,15 +67,6 @@ impl RegionExt for Region {\n             _ => self,\n         }\n     }\n-\n-    fn shifted_out_to_binder(self, binder: ty::DebruijnIndex) -> Region {\n-        match self {\n-            Region::LateBound(debruijn, index, id) => {\n-                Region::LateBound(debruijn.shifted_out_to_binder(binder), index, id)\n-            }\n-            _ => self,\n-        }\n-    }\n }\n \n /// Maps the id of each lifetime reference to the lifetime decl\n@@ -101,8 +90,8 @@ struct NamedRegionMap {\n     late_bound_vars: HirIdMap<Vec<ty::BoundVariableKind>>,\n }\n \n-pub(crate) struct LifetimeContext<'a, 'tcx> {\n-    pub(crate) tcx: TyCtxt<'tcx>,\n+struct LifetimeContext<'a, 'tcx> {\n+    tcx: TyCtxt<'tcx>,\n     map: &'a mut NamedRegionMap,\n     scope: ScopeRef<'a>,\n \n@@ -234,7 +223,7 @@ type ScopeRef<'a> = &'a Scope<'a>;\n \n const ROOT_SCOPE: ScopeRef<'static> = &Scope::Root;\n \n-pub fn provide(providers: &mut ty::query::Providers) {\n+pub(crate) fn provide(providers: &mut ty::query::Providers) {\n     *providers = ty::query::Providers {\n         resolve_lifetimes_trait_definition,\n         resolve_lifetimes,", "previous_filename": "compiler/rustc_resolve/src/late/lifetimes.rs"}, {"sha": "8fd4224ca38fec246ccdb669a98fc7c9a23425db", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=a474ec50b7010d289d103242a63c806ed6f01c2e", "patch": "@@ -739,7 +739,6 @@ pub static DEFAULT_QUERY_PROVIDERS: LazyLock<Providers> = LazyLock::new(|| {\n     ty::provide(providers);\n     traits::provide(providers);\n     rustc_passes::provide(providers);\n-    rustc_resolve::provide(providers);\n     rustc_traits::provide(providers);\n     rustc_ty_utils::provide(providers);\n     rustc_metadata::provide(providers);"}, {"sha": "c08f4a7204d8912089e21966aaa84cd15581b9df", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=a474ec50b7010d289d103242a63c806ed6f01c2e", "patch": "@@ -34,7 +34,6 @@ use std::collections::{hash_map::Entry, BTreeSet};\n use std::mem::{replace, take};\n \n mod diagnostics;\n-pub(crate) mod lifetimes;\n \n type Res = def::Res<NodeId>;\n "}, {"sha": "095a57ae24fe358cb3c534524fa7cf08fa0c4d96", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a474ec50b7010d289d103242a63c806ed6f01c2e/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=a474ec50b7010d289d103242a63c806ed6f01c2e", "patch": "@@ -42,7 +42,6 @@ use rustc_metadata::creader::{CStore, CrateLoader};\n use rustc_middle::metadata::ModChild;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::span_bug;\n-use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, DefIdTree, MainDefinition, RegisteredTools, ResolverOutputs};\n use rustc_query_system::ich::StableHashingContext;\n use rustc_session::cstore::{CrateStore, CrateStoreDyn, MetadataLoaderDyn};\n@@ -2082,7 +2081,3 @@ impl Finalize {\n         Finalize { node_id, path_span, root_span, report_private: true }\n     }\n }\n-\n-pub fn provide(providers: &mut Providers) {\n-    late::lifetimes::provide(providers);\n-}"}]}