{"sha": "61c49d4042af6d392784925cc53afdc830740cd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYzQ5ZDQwNDJhZjZkMzkyNzg0OTI1Y2M1M2FmZGM4MzA3NDBjZDQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2020-12-29T08:16:46Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2020-12-29T08:16:46Z"}, "message": "Stabilize by-value `[T; N]` iterator `core::array::IntoIter`\n\nTracking issue: https://github.com/rust-lang/rust/issues/65798\n\nThis is unblocked now that `min_const_generics` has been stabilized\nin https://github.com/rust-lang/rust/pull/79135.\n\nThis PR does *not* include the corresponding `IntoIterator` impl,\nwhich is https://github.com/rust-lang/rust/pull/65819.\nInstead, an iterator can be constructed through the `new` method.\n\n`new` would become unnecessary when `IntoIterator` is implemented\nand might be deprecated then, although it will stay stable.", "tree": {"sha": "17343edb7c66768516166dc4d1c6a418fa44cfcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17343edb7c66768516166dc4d1c6a418fa44cfcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61c49d4042af6d392784925cc53afdc830740cd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61c49d4042af6d392784925cc53afdc830740cd4", "html_url": "https://github.com/rust-lang/rust/commit/61c49d4042af6d392784925cc53afdc830740cd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61c49d4042af6d392784925cc53afdc830740cd4/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c523a7a0ef121fe97ad6a367a3f3b92f80dc3f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c523a7a0ef121fe97ad6a367a3f3b92f80dc3f0", "html_url": "https://github.com/rust-lang/rust/commit/6c523a7a0ef121fe97ad6a367a3f3b92f80dc3f0"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "6f8db824efa4ecb628c6a78d8b7cd90fb04d93f7", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -11,11 +11,9 @@\n     html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\",\n     test(no_crate_inject, attr(deny(warnings)))\n )]\n-#![feature(array_value_iter_slice)]\n #![feature(dropck_eyepatch)]\n #![feature(new_uninit)]\n #![feature(maybe_uninit_slice)]\n-#![feature(array_value_iter)]\n #![cfg_attr(bootstrap, feature(min_const_generics))]\n #![feature(min_specialization)]\n #![cfg_attr(test, feature(test))]"}, {"sha": "a02135af8d28e7a5b29bdb033ae6009f90a084f7", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -30,7 +30,6 @@\n //! get confused if the spans from leaf AST nodes occur in multiple places\n //! in the HIR, especially for multiple identifiers.\n \n-#![feature(array_value_iter)]\n #![feature(crate_visibility_modifier)]\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]"}, {"sha": "c69a9b063aeca618cd943422ae4e94ff8ecd409d", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -2,7 +2,6 @@\n //!\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/hir.html\n \n-#![feature(array_value_iter)]\n #![feature(crate_visibility_modifier)]\n #![feature(const_fn)] // For the unsizing cast on `&[]`\n #![feature(const_panic)]"}, {"sha": "e1f8d59991f21128b28967453c4ef13da2a7424a", "filename": "compiler/rustc_trait_selection/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -11,7 +11,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![feature(array_value_iter)]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(drain_filter)]"}, {"sha": "dc7f015e77cedf742b28639f2bb4abb6664ddbb1", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -56,7 +56,6 @@ This API is completely unstable and subject to change.\n */\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![feature(array_value_iter)]\n #![feature(bool_to_option)]\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]"}, {"sha": "10eaa31c9e4fa15661826ca5fb28249b5079e05f", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -79,7 +79,6 @@\n #![feature(allocator_api)]\n #![feature(array_chunks)]\n #![feature(array_methods)]\n-#![feature(array_value_iter)]\n #![feature(array_windows)]\n #![feature(allow_internal_unstable)]\n #![feature(arbitrary_self_types)]"}, {"sha": "0fd8815570bd77001a3f974859ed9ca1b8631973", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -11,7 +11,7 @@ use crate::{\n /// A by-value [array] iterator.\n ///\n /// [array]: ../../std/primitive.array.html\n-#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n+#[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n pub struct IntoIter<T, const N: usize> {\n     /// This is the array we are iterating over.\n     ///\n@@ -38,10 +38,11 @@ pub struct IntoIter<T, const N: usize> {\n impl<T, const N: usize> IntoIter<T, N> {\n     /// Creates a new iterator over the given `array`.\n     ///\n-    /// *Note*: this method might never get stabilized and/or removed in the\n-    /// future as there will likely be another, preferred way of obtaining this\n-    /// iterator (either via `IntoIterator` for arrays or via another way).\n-    #[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n+    /// *Note*: this method might be deprecated in the future,\n+    /// after [`IntoIterator` is implemented for arrays][array-into-iter].\n+    ///\n+    /// [array-into-iter]: https://github.com/rust-lang/rust/pull/65819\n+    #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n     pub fn new(array: [T; N]) -> Self {\n         // SAFETY: The transmute here is actually safe. The docs of `MaybeUninit`\n         // promise:\n@@ -69,7 +70,7 @@ impl<T, const N: usize> IntoIter<T, N> {\n \n     /// Returns an immutable slice of all elements that have not been yielded\n     /// yet.\n-    #[unstable(feature = \"array_value_iter_slice\", issue = \"65798\")]\n+    #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n     pub fn as_slice(&self) -> &[T] {\n         // SAFETY: We know that all elements within `alive` are properly initialized.\n         unsafe {\n@@ -79,7 +80,7 @@ impl<T, const N: usize> IntoIter<T, N> {\n     }\n \n     /// Returns a mutable slice of all elements that have not been yielded yet.\n-    #[unstable(feature = \"array_value_iter_slice\", issue = \"65798\")]\n+    #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n     pub fn as_mut_slice(&mut self) -> &mut [T] {\n         // SAFETY: We know that all elements within `alive` are properly initialized.\n         unsafe {"}, {"sha": "0c333ab2dca2bf8c6fd0bb7510b423d3d3bc80da", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -17,7 +17,7 @@ use crate::slice::{Iter, IterMut};\n \n mod iter;\n \n-#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n+#[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n pub use iter::IntoIter;\n \n /// Converts a reference to `T` into a reference to an array of length 1 (without copying)."}, {"sha": "50a12b4bd1cd2272fc1c26051c5bbb519df08084", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -45,7 +45,6 @@\n #![feature(slice_internals)]\n #![feature(slice_partition_dedup)]\n #![feature(int_error_matching)]\n-#![feature(array_value_iter)]\n #![feature(iter_advance_by)]\n #![feature(iter_partition_in_place)]\n #![feature(iter_is_partitioned)]"}, {"sha": "6ba1b2813a177e4ad2ca3e9bfe6ff34ab55c6066", "filename": "src/test/ui/const-generics/array-impls/into-iter-impls-length-32.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-#![feature(array_value_iter)]\n #![feature(trusted_len)]\n \n use std::{"}, {"sha": "deafde2912bb722e2949706a358cf9db1674f30b", "filename": "src/test/ui/const-generics/array-impls/into-iter-impls-length-33.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61c49d4042af6d392784925cc53afdc830740cd4/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c49d4042af6d392784925cc53afdc830740cd4/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs?ref=61c49d4042af6d392784925cc53afdc830740cd4", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-#![feature(array_value_iter)]\n #![feature(trusted_len)]\n \n use std::{"}]}