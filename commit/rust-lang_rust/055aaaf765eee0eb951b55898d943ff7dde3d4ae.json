{"sha": "055aaaf765eee0eb951b55898d943ff7dde3d4ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NWFhYWY3NjVlZWUwZWI5NTFiNTU4OThkOTQzZmY3ZGRlM2Q0YWU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-23T15:41:18Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-27T10:05:05Z"}, "message": "Fixed missing whitespace on some elaborated types.", "tree": {"sha": "0fb916e80f0255dfca1ba90fc5e94dbfa033b853", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fb916e80f0255dfca1ba90fc5e94dbfa033b853"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/055aaaf765eee0eb951b55898d943ff7dde3d4ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlta7lEACgkQAXYLT59T\n8VQQthAAhV4KKcPwTVClNt1Op6bysZDZckdDqEg90wL1ZeNUrrfCV+gqo9aZIXo2\nah1rqxkrKwrTHLsIICwSb5G/a70AHavkB+AEo5blmYCrrzp8G4aqnjL9/CYhe7HI\nZApyY8U4wIGL093IhWqP5tDGxA/RVBzPeQX9cLsKQHkg4uxUPd8hnBxR5dV18XoF\nxSDpwnGzaotp8QoQUPdZkTUDDnSWUcwQK+UC8qZ9EUNEBVNPqpI74jEVYNAK8eK9\njy6S1i4htxg7+oRyuu0+KOsodxQSRSNMHo/RSRTMwq+IVNtDsUjaqOch5+op0DJP\nFU/zxCjbVovbIT2kJPFDUqjl9R43FDiZo3zhzMvVxUqN66yWrKqBnHojh07UzteR\nTzC+xQqb5trAH/UoEjoKCZaosHRI/qTRRI2g0o5ABko16YRve4U1ddHnCi7L7ZWG\nrA+vz1qXmRZpEb2/5/c4M6YKnrw00k1AyKo4WiJjax9qYCl6p/vbn9d0AalwQV+H\nZTN9PuHLCX477hA3xP/l8VqwPkdR7Gu9Y95oryWmHkMe54m60PXRDxdAPFo0CRPL\n2QNmkols7SvSYvvfT7F/5d4C20XY6atzci6BqNHfZO08La39qEpwv/JAUv/OIDJ7\nCY4wTyhh0eVgEmQ83NYQZiE7YqTT9BRIVd8CXrOJdDaCt3l6EeA=\n=Q07D\n-----END PGP SIGNATURE-----", "payload": "tree 0fb916e80f0255dfca1ba90fc5e94dbfa033b853\nparent 5282d7d060a37e419c2d829b085c4429064bab5b\nauthor David Wood <david@davidtw.co> 1532360478 +0200\ncommitter David Wood <david@davidtw.co> 1532685905 +0200\n\nFixed missing whitespace on some elaborated types.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/055aaaf765eee0eb951b55898d943ff7dde3d4ae", "html_url": "https://github.com/rust-lang/rust/commit/055aaaf765eee0eb951b55898d943ff7dde3d4ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/055aaaf765eee0eb951b55898d943ff7dde3d4ae/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5282d7d060a37e419c2d829b085c4429064bab5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5282d7d060a37e419c2d829b085c4429064bab5b", "html_url": "https://github.com/rust-lang/rust/commit/5282d7d060a37e419c2d829b085c4429064bab5b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f3b437c38d882265e49747295fffb109576e14d4", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/055aaaf765eee0eb951b55898d943ff7dde3d4ae/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/055aaaf765eee0eb951b55898d943ff7dde3d4ae/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=055aaaf765eee0eb951b55898d943ff7dde3d4ae", "patch": "@@ -238,8 +238,8 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 // Need to make the `end_index` relative to the full string.\n                 let end_index = start_index + end_index;\n                 // `start_index + 1` skips the `&`.\n-                // `end_index` goes until the space after the region.\n-                type_name.replace_range(start_index + 1..end_index, \"\");\n+                // `end_index + 1` goes to (including) the space after the region.\n+                type_name.replace_range(start_index + 1..end_index + 1, \"\");\n             }\n         }\n         debug!(\"give_name_if_we_cannot_match_hir_ty: type_name={:?}\", type_name);\n@@ -255,7 +255,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n             // Compute the index of the character after `&` in the original string.\n             index = next_index + index + 1;\n-            type_name.insert_str(index, &format!(\"{}\", region_name));\n+            type_name.insert_str(index, &format!(\"{} \", region_name));\n         }\n \n         let (_, span) = self.get_argument_name_and_span_for_region(mir, argument_index);"}, {"sha": "14d889dca73dfc4fe1b7a480d5754614df469f94", "filename": "src/test/ui/error-codes/E0621-does-not-trigger-for-closures.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/055aaaf765eee0eb951b55898d943ff7dde3d4ae/src%2Ftest%2Fui%2Ferror-codes%2FE0621-does-not-trigger-for-closures.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/055aaaf765eee0eb951b55898d943ff7dde3d4ae/src%2Ftest%2Fui%2Ferror-codes%2FE0621-does-not-trigger-for-closures.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0621-does-not-trigger-for-closures.nll.stderr?ref=055aaaf765eee0eb951b55898d943ff7dde3d4ae", "patch": "@@ -11,7 +11,7 @@ LL |     invoke(&x, |a, b| if a > b { a } else { b }); //~ ERROR E0495\n    |                ----------^^^^^-----------------\n    |                |   |     |\n    |                |   |     free region requires that `'1` must outlive `'2`\n-   |                |   has type `&'1i32`\n+   |                |   has type `&'1 i32`\n    |                lifetime `'2` appears in return type\n \n error: aborting due to previous error"}, {"sha": "a13b06e320483789749413e0c5640ae792aa1517", "filename": "src/test/ui/issue-52533.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/055aaaf765eee0eb951b55898d943ff7dde3d4ae/src%2Ftest%2Fui%2Fissue-52533.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/055aaaf765eee0eb951b55898d943ff7dde3d4ae/src%2Ftest%2Fui%2Fissue-52533.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-52533.nll.stderr?ref=055aaaf765eee0eb951b55898d943ff7dde3d4ae", "patch": "@@ -10,8 +10,8 @@ error: unsatisfied lifetime constraints\n LL |     foo(|a, b| b)\n    |          -  -  ^ closure was supposed to return data with lifetime `'1` but it is returning data with lifetime `'2`\n    |          |  |\n-   |          |  has type `&'1u32`\n-   |          has type `&'2u32`\n+   |          |  has type `&'1 u32`\n+   |          has type `&'2 u32`\n \n error: aborting due to previous error\n "}]}