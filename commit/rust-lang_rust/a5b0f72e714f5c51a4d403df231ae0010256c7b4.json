{"sha": "a5b0f72e714f5c51a4d403df231ae0010256c7b4", "node_id": "C_kwDOAAsO6NoAKGE1YjBmNzJlNzE0ZjVjNTFhNGQ0MDNkZjIzMWFlMDAxMDI1NmM3YjQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-11T17:17:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-11T17:17:02Z"}, "message": "Rollup merge of #100287 - cuviper:no-linux-prctl, r=Mark-Simulacrum\n\nlinux: Use `pthread_setname_np` instead of `prctl`\n\nThis function is available on Linux since glibc 2.12, musl 1.1.16, and\nuClibc 1.0.20. The main advantage over `prctl` is that it properly\nrepresents the pointer argument, rather than a multi-purpose `long`,\nso we're better representing strict provenance (#95496).", "tree": {"sha": "1b7ba7219050dadf4cbca66756545f44b6db44b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b7ba7219050dadf4cbca66756545f44b6db44b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5b0f72e714f5c51a4d403df231ae0010256c7b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi9TmOCRBK7hj4Ov3rIwAA9yMIAJkZlDejMRkaGrGSE/Q8zPIT\nhT3CRqvdEL//j/ctTGOOoiVvHh3Alpu42YYBHNiYl7l9hQaEsjU6RHRAejNoHQlB\nujBLR2W/DBtBzF0mKbQhODkJ4Mfsxa0FjdrIYnCdRfuzZ43i8vPp9BSnIAL322HE\n6PEj1GvPcu/4hsFejE8qjTTGoK2oMlxIFuAIDSjA9h/voHGFQudEfBwxYVdT/omd\n4lvC+OvXV2mxyMM00MKol7g5FiEAc7m0QXV4D22tqpkK6HV4ba4R1Snlxzks91Cx\nJrgv06L7fe1bN0wZGX1/1Yec9z37JWEYf6Eztv7g9p06zsajK+R9dge4M/oghaQ=\n=TmK+\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b7ba7219050dadf4cbca66756545f44b6db44b9\nparent 1c43cabdfe9a681750e26c23b5aa02718f557e51\nparent 013986be1bcfbfd9cedddf22dfd9584ccdb7ee6e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1660238222 +0530\ncommitter GitHub <noreply@github.com> 1660238222 +0530\n\nRollup merge of #100287 - cuviper:no-linux-prctl, r=Mark-Simulacrum\n\nlinux: Use `pthread_setname_np` instead of `prctl`\n\nThis function is available on Linux since glibc 2.12, musl 1.1.16, and\nuClibc 1.0.20. The main advantage over `prctl` is that it properly\nrepresents the pointer argument, rather than a multi-purpose `long`,\nso we're better representing strict provenance (#95496).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5b0f72e714f5c51a4d403df231ae0010256c7b4", "html_url": "https://github.com/rust-lang/rust/commit/a5b0f72e714f5c51a4d403df231ae0010256c7b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5b0f72e714f5c51a4d403df231ae0010256c7b4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c43cabdfe9a681750e26c23b5aa02718f557e51", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c43cabdfe9a681750e26c23b5aa02718f557e51", "html_url": "https://github.com/rust-lang/rust/commit/1c43cabdfe9a681750e26c23b5aa02718f557e51"}, {"sha": "013986be1bcfbfd9cedddf22dfd9584ccdb7ee6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/013986be1bcfbfd9cedddf22dfd9584ccdb7ee6e", "html_url": "https://github.com/rust-lang/rust/commit/013986be1bcfbfd9cedddf22dfd9584ccdb7ee6e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "7db3065dee0838c1e014b43bf9694d1dc7ecaad0", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a5b0f72e714f5c51a4d403df231ae0010256c7b4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5b0f72e714f5c51a4d403df231ae0010256c7b4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=a5b0f72e714f5c51a4d403df231ae0010256c7b4", "patch": "@@ -116,11 +116,9 @@ impl Thread {\n         debug_assert_eq!(ret, 0);\n     }\n \n-    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n+    #[cfg(target_os = \"android\")]\n     pub fn set_name(name: &CStr) {\n         const PR_SET_NAME: libc::c_int = 15;\n-        // pthread wrapper only appeared in glibc 2.12, so we use syscall\n-        // directly.\n         unsafe {\n             libc::prctl(\n                 PR_SET_NAME,\n@@ -132,6 +130,14 @@ impl Thread {\n         }\n     }\n \n+    #[cfg(target_os = \"linux\")]\n+    pub fn set_name(name: &CStr) {\n+        unsafe {\n+            // Available since glibc 2.12, musl 1.1.16, and uClibc 1.0.20.\n+            libc::pthread_setname_np(libc::pthread_self(), name.as_ptr());\n+        }\n+    }\n+\n     #[cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"openbsd\"))]\n     pub fn set_name(name: &CStr) {\n         unsafe {"}]}