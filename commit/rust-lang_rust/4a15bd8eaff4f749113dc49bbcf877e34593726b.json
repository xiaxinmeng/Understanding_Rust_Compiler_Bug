{"sha": "4a15bd8eaff4f749113dc49bbcf877e34593726b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhMTViZDhlYWZmNGY3NDkxMTNkYzQ5YmJjZjg3N2UzNDU5MzcyNmI=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2020-11-20T05:14:29Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-18T07:29:22Z"}, "message": "Add and insta-stabilize `std::io::ErrorKind::NotSupported`", "tree": {"sha": "195c4c072b579b9a2939b945a89a184219790d3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/195c4c072b579b9a2939b945a89a184219790d3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a15bd8eaff4f749113dc49bbcf877e34593726b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a15bd8eaff4f749113dc49bbcf877e34593726b", "html_url": "https://github.com/rust-lang/rust/commit/4a15bd8eaff4f749113dc49bbcf877e34593726b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a15bd8eaff4f749113dc49bbcf877e34593726b/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c3b66cff74f3a21dc735294f3df319a38bc2114", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3b66cff74f3a21dc735294f3df319a38bc2114", "html_url": "https://github.com/rust-lang/rust/commit/9c3b66cff74f3a21dc735294f3df319a38bc2114"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "62727ec465daa33e19c455473df9fcfdc41042ab", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=4a15bd8eaff4f749113dc49bbcf877e34593726b", "patch": "@@ -180,6 +180,10 @@ pub enum ErrorKind {\n     /// read.\n     #[stable(feature = \"read_exact\", since = \"1.6.0\")]\n     UnexpectedEof,\n+\n+    /// This operation is not supported on this platform.\n+    #[stable(feature = \"not_supported_error\", since = \"1.50.0\")]\n+    NotSupported,\n }\n \n impl ErrorKind {\n@@ -203,6 +207,7 @@ impl ErrorKind {\n             ErrorKind::Interrupted => \"operation interrupted\",\n             ErrorKind::Other => \"other os error\",\n             ErrorKind::UnexpectedEof => \"unexpected end of file\",\n+            ErrorKind::NotSupported => \"not supported\",\n         }\n     }\n }"}, {"sha": "6d2d1c5a84a3be614ace696a7e2cba8f9fda9eca", "filename": "library/std/src/sys/unix/l4re.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs?ref=4a15bd8eaff4f749113dc49bbcf877e34593726b", "patch": "@@ -1,6 +1,6 @@\n macro_rules! unimpl {\n     () => {\n-        return Err(io::Error::new_const(io::ErrorKind::Other, &\"No networking available on L4Re.\"));\n+        return Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"No networking available on L4Re.\"));\n     };\n }\n "}, {"sha": "9d18b83d563b0b73b9cc6eea4d815544a2ec7a95", "filename": "library/std/src/sys/unsupported/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs?ref=4a15bd8eaff4f749113dc49bbcf877e34593726b", "patch": "@@ -18,7 +18,7 @@ pub fn unsupported<T>() -> std_io::Result<T> {\n }\n \n pub fn unsupported_err() -> std_io::Error {\n-    std_io::Error::new_const(std_io::ErrorKind::Other, &\"operation not supported on this platform\")\n+    std_io::Error::new_const(std_io::ErrorKind::NotSupported, &\"operation not supported on this platform\")\n }\n \n pub fn decode_error_kind(_code: i32) -> crate::io::ErrorKind {"}, {"sha": "bd94e2d629efb790894e6dfba28add9400f547ae", "filename": "library/std/src/sys/unsupported/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fos.rs?ref=4a15bd8eaff4f749113dc49bbcf877e34593726b", "patch": "@@ -80,11 +80,11 @@ pub fn getenv(_: &OsStr) -> io::Result<Option<OsString>> {\n }\n \n pub fn setenv(_: &OsStr, _: &OsStr) -> io::Result<()> {\n-    Err(io::Error::new_const(io::ErrorKind::Other, &\"cannot set env vars on this platform\"))\n+    Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"cannot set env vars on this platform\"))\n }\n \n pub fn unsetenv(_: &OsStr) -> io::Result<()> {\n-    Err(io::Error::new_const(io::ErrorKind::Other, &\"cannot unset env vars on this platform\"))\n+    Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"cannot unset env vars on this platform\"))\n }\n \n pub fn temp_dir() -> PathBuf {"}, {"sha": "ef68405b1033e5641bb6029a243a31115c69dbb8", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=4a15bd8eaff4f749113dc49bbcf877e34593726b", "patch": "@@ -802,7 +802,7 @@ pub fn link(original: &Path, link: &Path) -> io::Result<()> {\n \n #[cfg(target_vendor = \"uwp\")]\n pub fn link(_original: &Path, _link: &Path) -> io::Result<()> {\n-    return Err(io::Error::new_const(io::ErrorKind::Other, &\"hard link are not supported on UWP\"));\n+    return Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"hard link are not supported on UWP\"));\n }\n \n pub fn stat(path: &Path) -> io::Result<FileAttr> {"}, {"sha": "f6691ccd3e1910885cd0f6fdc845648750c77f00", "filename": "library/std/src/sys/windows/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a15bd8eaff4f749113dc49bbcf877e34593726b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs?ref=4a15bd8eaff4f749113dc49bbcf877e34593726b", "patch": "@@ -370,7 +370,7 @@ impl Socket {\n \n     #[cfg(target_vendor = \"uwp\")]\n     fn set_no_inherit(&self) -> io::Result<()> {\n-        Err(io::Error::new_const(io::ErrorKind::Other, &\"Unavailable on UWP\"))\n+        Err(io::Error::new_const(io::ErrorKind::NotSupported, &\"Unavailable on UWP\"))\n     }\n \n     pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {"}]}