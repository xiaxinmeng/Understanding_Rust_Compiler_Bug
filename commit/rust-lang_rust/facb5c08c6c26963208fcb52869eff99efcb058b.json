{"sha": "facb5c08c6c26963208fcb52869eff99efcb058b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhY2I1YzA4YzZjMjY5NjMyMDhmY2I1Mjg2OWVmZjk5ZWZjYjA1OGI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-02T00:06:27Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-02T03:40:35Z"}, "message": "Enforce rule that classes with dtors aren't copyable\n\nThe test for this is copy-a-resource.", "tree": {"sha": "9ce44590a75e14d94356443afd5a9ea5821ec9c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ce44590a75e14d94356443afd5a9ea5821ec9c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/facb5c08c6c26963208fcb52869eff99efcb058b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/facb5c08c6c26963208fcb52869eff99efcb058b", "html_url": "https://github.com/rust-lang/rust/commit/facb5c08c6c26963208fcb52869eff99efcb058b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/facb5c08c6c26963208fcb52869eff99efcb058b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b67f8e340b1eed77f348771609698281837e340d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b67f8e340b1eed77f348771609698281837e340d", "html_url": "https://github.com/rust-lang/rust/commit/b67f8e340b1eed77f348771609698281837e340d"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "95ed681c48148bf7e86e021b6b8ae1c0eb814718", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/facb5c08c6c26963208fcb52869eff99efcb058b/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facb5c08c6c26963208fcb52869eff99efcb058b/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=facb5c08c6c26963208fcb52869eff99efcb058b", "patch": "@@ -45,6 +45,7 @@ export field_idx;\n export get_field;\n export get_fields;\n export get_element_type;\n+export has_dtor;\n export is_binopable;\n export is_pred_ty;\n export lookup_class_field, lookup_class_fields;\n@@ -1288,7 +1289,7 @@ fn type_needs_unwind_cleanup_(cx: ctxt, ty: t,\n \n enum kind { kind_(u32) }\n \n-// *ALL* implicity copiable things must be copiable\n+// *ALL* implicitly copiable things must be copiable\n const KIND_MASK_COPY     : u32 = 0b00000000000000000000000000000001u32;\n const KIND_MASK_SEND     : u32 = 0b00000000000000000000000000000010u32;\n const KIND_MASK_CONST    : u32 = 0b00000000000000000000000000000100u32;\n@@ -1495,15 +1496,20 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n         }\n         lowest\n       }\n-      // FIXME: (tjc) there are rules about when classes are copyable/\n-      // sendable, but I'm just treating them like records (#1726)\n       ty_class(did, substs) {\n+        // Classes are sendable if all their fields are sendable,\n+        // likewise for copyable...\n         // also factor out this code, copied from the records case\n         let mut lowest = kind_top();\n         let flds = class_items_as_fields(cx, did, substs);\n         for flds.each {|f|\n             lowest = lower_kind(lowest, mutable_type_kind(cx, f.mt));\n         }\n+        // ...but classes with dtors are never copyable (they can be\n+        // sendable)\n+        if ty::has_dtor(cx, did) {\n+           lowest = lower_kind(lowest, kind_noncopyable());\n+        }\n         lowest\n       }\n       // Tuples lower to the lowest of their members.\n@@ -2562,6 +2568,10 @@ fn ty_dtor(cx: ctxt, class_id: def_id) -> option<def_id> {\n     }\n }\n \n+fn has_dtor(cx: ctxt, class_id: def_id) -> bool {\n+    option::is_some(ty_dtor(cx, class_id))\n+}\n+\n fn item_path(cx: ctxt, id: ast::def_id) -> ast_map::path {\n     if id.crate != ast::local_crate {\n         csearch::get_item_path(cx, id)"}, {"sha": "6eeb4ea2ed440c3646b1894bd08d40e5f48fe9cd", "filename": "src/test/compile-fail/copy-a-resource.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/facb5c08c6c26963208fcb52869eff99efcb058b/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facb5c08c6c26963208fcb52869eff99efcb058b/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs?ref=facb5c08c6c26963208fcb52869eff99efcb058b", "patch": "@@ -1,5 +1,9 @@\n // error-pattern: copying a noncopyable value\n \n-resource foo(i: int) { }\n+class foo {\n+  let i: int;\n+  new(i:int) { self.i = i; }\n+  drop {}\n+}\n \n fn main() { let x <- foo(10); let y = x; log(error, x); }"}]}