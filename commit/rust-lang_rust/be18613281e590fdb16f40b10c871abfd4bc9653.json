{"sha": "be18613281e590fdb16f40b10c871abfd4bc9653", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMTg2MTMyODFlNTkwZmRiMTZmNDBiMTBjODcxYWJmZDRiYzk2NTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-16T10:22:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-16T10:22:00Z"}, "message": "Auto merge of #43252 - vbrandl:doc/default-values, r=GuillaumeGomez\n\nDocument default values for primitive types\n\nAll primitive types implement the `Default` trait but the documentation just says `Returns the \"default value\" for a type.` and doesn't give a hint about the actual default value. I think it would be good to document the default values in a proper way.\nI changed the `default_impl` macro to accept a doc string as a third parameter and use this string to overwrite the documentation of `default()` for each primitive type.\nThe generated documentation now looks like this:\n![Documentation of default() on the bool primitive](https://i.imgur.com/nK6TApo.png)", "tree": {"sha": "e362ba3dd9226e00d6be0e4fede5490e564467d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e362ba3dd9226e00d6be0e4fede5490e564467d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be18613281e590fdb16f40b10c871abfd4bc9653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be18613281e590fdb16f40b10c871abfd4bc9653", "html_url": "https://github.com/rust-lang/rust/commit/be18613281e590fdb16f40b10c871abfd4bc9653", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be18613281e590fdb16f40b10c871abfd4bc9653/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "086eaa78ea70075abe4e6b7fb9dc76259867b4be", "url": "https://api.github.com/repos/rust-lang/rust/commits/086eaa78ea70075abe4e6b7fb9dc76259867b4be", "html_url": "https://github.com/rust-lang/rust/commit/086eaa78ea70075abe4e6b7fb9dc76259867b4be"}, {"sha": "caf125f414cc7bcdacdbfeab5c3b62eba772c8a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/caf125f414cc7bcdacdbfeab5c3b62eba772c8a3", "html_url": "https://github.com/rust-lang/rust/commit/caf125f414cc7bcdacdbfeab5c3b62eba772c8a3"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "244df1a9966d4c884265965a57d275d32e651a1b", "filename": "src/libcore/default.rs", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/be18613281e590fdb16f40b10c871abfd4bc9653/src%2Flibcore%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be18613281e590fdb16f40b10c871abfd4bc9653/src%2Flibcore%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdefault.rs?ref=be18613281e590fdb16f40b10c871abfd4bc9653", "patch": "@@ -126,32 +126,33 @@ pub trait Default: Sized {\n }\n \n macro_rules! default_impl {\n-    ($t:ty, $v:expr) => {\n+    ($t:ty, $v:expr, $doc:expr) => {\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Default for $t {\n             #[inline]\n+            #[doc = $doc]\n             fn default() -> $t { $v }\n         }\n     }\n }\n \n-default_impl! { (), () }\n-default_impl! { bool, false }\n-default_impl! { char, '\\x00' }\n+default_impl! { (), (), \"Returns the default value of `()`\" }\n+default_impl! { bool, false, \"Returns the default value of `false`\" }\n+default_impl! { char, '\\x00', \"Returns the default value of `\\\\x00`\" }\n \n-default_impl! { usize, 0 }\n-default_impl! { u8, 0 }\n-default_impl! { u16, 0 }\n-default_impl! { u32, 0 }\n-default_impl! { u64, 0 }\n-default_impl! { u128, 0 }\n+default_impl! { usize, 0, \"Returns the default value of `0`\" }\n+default_impl! { u8, 0, \"Returns the default value of `0`\" }\n+default_impl! { u16, 0, \"Returns the default value of `0`\" }\n+default_impl! { u32, 0, \"Returns the default value of `0`\" }\n+default_impl! { u64, 0, \"Returns the default value of `0`\" }\n+default_impl! { u128, 0, \"Returns the default value of `0`\" }\n \n-default_impl! { isize, 0 }\n-default_impl! { i8, 0 }\n-default_impl! { i16, 0 }\n-default_impl! { i32, 0 }\n-default_impl! { i64, 0 }\n-default_impl! { i128, 0 }\n+default_impl! { isize, 0, \"Returns the default value of `0`\" }\n+default_impl! { i8, 0, \"Returns the default value of `0`\" }\n+default_impl! { i16, 0, \"Returns the default value of `0`\" }\n+default_impl! { i32, 0, \"Returns the default value of `0`\" }\n+default_impl! { i64, 0, \"Returns the default value of `0`\" }\n+default_impl! { i128, 0, \"Returns the default value of `0`\" }\n \n-default_impl! { f32, 0.0f32 }\n-default_impl! { f64, 0.0f64 }\n+default_impl! { f32, 0.0f32, \"Returns the default value of `0.0`\" }\n+default_impl! { f64, 0.0f64, \"Returns the default value of `0.0`\" }"}]}