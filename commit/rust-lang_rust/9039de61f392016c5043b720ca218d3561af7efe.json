{"sha": "9039de61f392016c5043b720ca218d3561af7efe", "node_id": "C_kwDOAAsO6NoAKDkwMzlkZTYxZjM5MjAxNmM1MDQzYjcyMGNhMjE4ZDM1NjFhZjdlZmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-12T05:11:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-12T05:11:14Z"}, "message": "Rollup merge of #111492 - calebcartwright:by-ref-tokentree-1, r=compiler-errors\n\nuse by ref TokenTree iterator to avoid a few clones\n\nJust a handful of swaps from the by-value cursor to by-ref cursor so as to avoid some unnecessary clones.\n\nI've been doing some analysis on internal cleanup opportunities within rustfmt and as part of that yak-shave I found myself perusing broader token stream and tree usage (which we use within rustfmt). As reflected in some inline comments on the cursor structs (not part of this diff), there's probably many other such cases throughout the code, but figured I'd start small with these while I had the time. May take a look at the other sites in the future", "tree": {"sha": "1e68ec4638f5b407991b3c1e3b1da4966f4827dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e68ec4638f5b407991b3c1e3b1da4966f4827dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9039de61f392016c5043b720ca218d3561af7efe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkXcpyCRBK7hj4Ov3rIwAADm4IAEmQOFzHP6EihCygcgihObap\nurhB4VCs1L954i8P492RtZ7oxpXiQANAA3X5smckOFUfSxFRvlEHalSeLc2lO/rb\nScqHxGTpRNzy/GWaLwZ5ETP9S55OFdl5ZLmlq+3vsj9yCHouEUDGicia8Z/ueJM4\nSQF8v5p6x9QMURsE2DRXrA+z1lGN7YVZhFKwGJ985LzsxgmCQK3rMxG075QljwSN\nxjSuWsybdZhUlaGOtDxe3F/RtWlMOwtY6yyZ1z4wpYaO2Qolk1Eg8o5Ct3F3frC+\nkT/IpODG0cCth/8hTp2V5G42penCa7j2wESikmSA96QafpPc/qXIenAUQm7VjXg=\n=clAA\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e68ec4638f5b407991b3c1e3b1da4966f4827dc\nparent 4c12f5d25202bbf957d5807dfef26daa70f2f593\nparent 05c5df56824aaf931aef617827589bb0f3936ffa\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683868274 +0200\ncommitter GitHub <noreply@github.com> 1683868274 +0200\n\nRollup merge of #111492 - calebcartwright:by-ref-tokentree-1, r=compiler-errors\n\nuse by ref TokenTree iterator to avoid a few clones\n\nJust a handful of swaps from the by-value cursor to by-ref cursor so as to avoid some unnecessary clones.\n\nI've been doing some analysis on internal cleanup opportunities within rustfmt and as part of that yak-shave I found myself perusing broader token stream and tree usage (which we use within rustfmt). As reflected in some inline comments on the cursor structs (not part of this diff), there's probably many other such cases throughout the code, but figured I'd start small with these while I had the time. May take a look at the other sites in the future\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9039de61f392016c5043b720ca218d3561af7efe", "html_url": "https://github.com/rust-lang/rust/commit/9039de61f392016c5043b720ca218d3561af7efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9039de61f392016c5043b720ca218d3561af7efe/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c12f5d25202bbf957d5807dfef26daa70f2f593", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c12f5d25202bbf957d5807dfef26daa70f2f593", "html_url": "https://github.com/rust-lang/rust/commit/4c12f5d25202bbf957d5807dfef26daa70f2f593"}, {"sha": "05c5df56824aaf931aef617827589bb0f3936ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/05c5df56824aaf931aef617827589bb0f3936ffa", "html_url": "https://github.com/rust-lang/rust/commit/05c5df56824aaf931aef617827589bb0f3936ffa"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ee56d45c9c826eb85c79865d34ba3710ece3685f", "filename": "compiler/rustc_builtin_macros/src/concat_idents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9039de61f392016c5043b720ca218d3561af7efe/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9039de61f392016c5043b720ca218d3561af7efe/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_idents.rs?ref=9039de61f392016c5043b720ca218d3561af7efe", "patch": "@@ -19,7 +19,7 @@ pub fn expand_concat_idents<'cx>(\n     }\n \n     let mut res_str = String::new();\n-    for (i, e) in tts.into_trees().enumerate() {\n+    for (i, e) in tts.trees().enumerate() {\n         if i & 1 == 1 {\n             match e {\n                 TokenTree::Token(Token { kind: token::Comma, .. }, _) => {}"}, {"sha": "9c98723e1f43f96ccedc581d6603987c760cc938", "filename": "compiler/rustc_builtin_macros/src/trace_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9039de61f392016c5043b720ca218d3561af7efe/compiler%2Frustc_builtin_macros%2Fsrc%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9039de61f392016c5043b720ca218d3561af7efe/compiler%2Frustc_builtin_macros%2Fsrc%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Ftrace_macros.rs?ref=9039de61f392016c5043b720ca218d3561af7efe", "patch": "@@ -8,7 +8,7 @@ pub fn expand_trace_macros(\n     sp: Span,\n     tt: TokenStream,\n ) -> Box<dyn base::MacResult + 'static> {\n-    let mut cursor = tt.into_trees();\n+    let mut cursor = tt.trees();\n     let mut err = false;\n     let value = match &cursor.next() {\n         Some(TokenTree::Token(token, _)) if token.is_keyword(kw::True) => true,"}, {"sha": "b1c45eaf601e501f22f90485a48fa455bc14a51e", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9039de61f392016c5043b720ca218d3561af7efe/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9039de61f392016c5043b720ca218d3561af7efe/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=9039de61f392016c5043b720ca218d3561af7efe", "patch": "@@ -1882,8 +1882,8 @@ declare_lint_pass!(\n struct UnderMacro(bool);\n \n impl KeywordIdents {\n-    fn check_tokens(&mut self, cx: &EarlyContext<'_>, tokens: TokenStream) {\n-        for tt in tokens.into_trees() {\n+    fn check_tokens(&mut self, cx: &EarlyContext<'_>, tokens: &TokenStream) {\n+        for tt in tokens.trees() {\n             match tt {\n                 // Only report non-raw idents.\n                 TokenTree::Token(token, _) => {\n@@ -1944,10 +1944,10 @@ impl KeywordIdents {\n \n impl EarlyLintPass for KeywordIdents {\n     fn check_mac_def(&mut self, cx: &EarlyContext<'_>, mac_def: &ast::MacroDef) {\n-        self.check_tokens(cx, mac_def.body.tokens.clone());\n+        self.check_tokens(cx, &mac_def.body.tokens);\n     }\n     fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::MacCall) {\n-        self.check_tokens(cx, mac.args.tokens.clone());\n+        self.check_tokens(cx, &mac.args.tokens);\n     }\n     fn check_ident(&mut self, cx: &EarlyContext<'_>, ident: Ident) {\n         self.check_ident_token(cx, UnderMacro(false), ident);"}]}