{"sha": "45099e6cf6d44bb9cefdda42823794fab2df2703", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MDk5ZTZjZjZkNDRiYjljZWZkZGE0MjgyMzc5NGZhYjJkZjI3MDM=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2021-05-26T10:12:54Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2021-05-26T10:12:54Z"}, "message": "Add inline attr to private CString::into_inner", "tree": {"sha": "3315e9d62067cb132e3a4c759d1f82e107574919", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3315e9d62067cb132e3a4c759d1f82e107574919"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45099e6cf6d44bb9cefdda42823794fab2df2703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45099e6cf6d44bb9cefdda42823794fab2df2703", "html_url": "https://github.com/rust-lang/rust/commit/45099e6cf6d44bb9cefdda42823794fab2df2703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45099e6cf6d44bb9cefdda42823794fab2df2703/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdbe2888979bb8797b05f0d58a6f6e60753983d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbe2888979bb8797b05f0d58a6f6e60753983d2", "html_url": "https://github.com/rust-lang/rust/commit/cdbe2888979bb8797b05f0d58a6f6e60753983d2"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "be7e099b73a24f325c49243ba2f14d71b55d1fb3", "filename": "library/std/src/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45099e6cf6d44bb9cefdda42823794fab2df2703/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45099e6cf6d44bb9cefdda42823794fab2df2703/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs?ref=45099e6cf6d44bb9cefdda42823794fab2df2703", "patch": "@@ -672,6 +672,7 @@ impl CString {\n     }\n \n     /// Bypass \"move out of struct which implements [`Drop`] trait\" restriction.\n+    #[inline]\n     fn into_inner(self) -> Box<[u8]> {\n         // Rationale: `mem::forget(self)` invalidates the previous call to `ptr::read(&self.inner)`\n         // so we use `ManuallyDrop` to ensure `self` is not dropped."}]}