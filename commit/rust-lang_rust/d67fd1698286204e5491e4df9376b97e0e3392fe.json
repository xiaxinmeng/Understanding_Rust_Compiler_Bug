{"sha": "d67fd1698286204e5491e4df9376b97e0e3392fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2N2ZkMTY5ODI4NjIwNGU1NDkxZTRkZjkzNzZiOTdlMGUzMzkyZmU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-05T17:13:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-05T17:13:58Z"}, "message": "Use cg_utils::symbol_export::provide{,_extern}", "tree": {"sha": "9d338977d2fedb44dd3634492045079ffa9c0494", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d338977d2fedb44dd3634492045079ffa9c0494"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d67fd1698286204e5491e4df9376b97e0e3392fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d67fd1698286204e5491e4df9376b97e0e3392fe", "html_url": "https://github.com/rust-lang/rust/commit/d67fd1698286204e5491e4df9376b97e0e3392fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d67fd1698286204e5491e4df9376b97e0e3392fe/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "438bee5fb1a988fe6bd5a4f06d33cfb25df72f9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/438bee5fb1a988fe6bd5a4f06d33cfb25df72f9c", "html_url": "https://github.com/rust-lang/rust/commit/438bee5fb1a988fe6bd5a4f06d33cfb25df72f9c"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "28dd372ca6598282717d3f65197485b666c6877b", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d67fd1698286204e5491e4df9376b97e0e3392fe/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d67fd1698286204e5491e4df9376b97e0e3392fe/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=d67fd1698286204e5491e4df9376b97e0e3392fe", "patch": "@@ -147,20 +147,12 @@ impl CodegenBackend for CraneliftCodegenBackend {\n \n     fn provide(&self, providers: &mut Providers) {\n         rustc_codegen_utils::symbol_names::provide(providers);\n+        rustc_codegen_utils::symbol_export::provide(providers);\n \n         providers.target_features_whitelist = |_tcx, _cnum| Lrc::new(Default::default());\n-        providers.is_reachable_non_generic = |_tcx, _defid| true;\n-        providers.exported_symbols = |_tcx, _crate| Arc::new(Vec::new());\n-        providers.upstream_monomorphizations = |_tcx, _cnum| Lrc::new(FxHashMap::default());\n-        providers.upstream_monomorphizations_for = |tcx, def_id| {\n-            debug_assert!(!def_id.is_local());\n-            tcx.upstream_monomorphizations(LOCAL_CRATE)\n-                .get(&def_id)\n-                .cloned()\n-        };\n     }\n     fn provide_extern(&self, providers: &mut Providers) {\n-        providers.is_reachable_non_generic = |_tcx, _defid| true;\n+        rustc_codegen_utils::symbol_export::provide_extern(providers);\n     }\n \n     fn codegen_crate<'a, 'tcx>("}]}