{"sha": "b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZGYyYWU4MmU2YTIxOTBhYjJiZmEzMzBjYjM3ZTQzYWIwYTcyN2I=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-16T08:30:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-22T07:06:28Z"}, "message": "fix computing layout when calling virtual fn", "tree": {"sha": "fb902825ec43b21d17f9e8009c3ef5fc4d33c9c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb902825ec43b21d17f9e8009c3ef5fc4d33c9c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b", "html_url": "https://github.com/rust-lang/rust/commit/b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "730098bc8d30a51351e318a3620cb63060449a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/730098bc8d30a51351e318a3620cb63060449a16", "html_url": "https://github.com/rust-lang/rust/commit/730098bc8d30a51351e318a3620cb63060449a16"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "9b7df90979d32aab3acf6702e538faf2b02c38a8", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=b1df2ae82e6a2190ab2bfa330cb37e43ab0a727b", "patch": "@@ -384,10 +384,16 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                     ptr_align\n                 )?.to_ptr()?;\n                 let instance = self.memory.get_fn(fn_ptr)?;\n+\n+                // We have to patch the self argument, in particular get the layout\n+                // expected by the actual function. Cannot just use \"field 0\" due to\n+                // Box<self>.\n                 let mut args = args.to_vec();\n-                let layout = args[0].layout.field(&self, 0)?;\n-                args[0].layout = layout;\n-                args[0].op = Operand::Immediate(Value::Scalar(ptr.into()));\n+                let pointee = args[0].layout.ty.builtin_deref(true).unwrap().ty;\n+                let fake_fat_ptr_ty = self.tcx.mk_mut_ptr(pointee);\n+                args[0].layout = self.layout_of(fake_fat_ptr_ty)?.field(&self, 0)?;\n+                args[0].op = Operand::Immediate(Value::Scalar(ptr.into())); // strip vtable\n+                trace!(\"Patched self operand to {:#?}\", args[0]);\n                 // recurse with concrete function\n                 self.eval_fn_call(instance, destination, &args, span, sig)\n             }"}]}