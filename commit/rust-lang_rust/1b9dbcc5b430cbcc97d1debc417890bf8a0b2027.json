{"sha": "1b9dbcc5b430cbcc97d1debc417890bf8a0b2027", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiOWRiY2M1YjQzMGNiY2M5N2QxZGViYzQxNzg5MGJmOGEwYjIwMjc=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-21T01:15:56Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-21T01:15:56Z"}, "message": "Box the vec of freevars we store in the freevars cache.", "tree": {"sha": "c0c32ca2c076be6d450ffc3402daa3208a8da7bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0c32ca2c076be6d450ffc3402daa3208a8da7bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027", "html_url": "https://github.com/rust-lang/rust/commit/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "430cafbe50d1f59233f7b277f91a1e5406a65759", "url": "https://api.github.com/repos/rust-lang/rust/commits/430cafbe50d1f59233f7b277f91a1e5406a65759", "html_url": "https://github.com/rust-lang/rust/commit/430cafbe50d1f59233f7b277f91a1e5406a65759"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b62065520ca79951d2dca85b6c87f1fee4d4ae41", "filename": "src/comp/middle/freevars.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffreevars.rs?ref=1b9dbcc5b430cbcc97d1debc417890bf8a0b2027", "patch": "@@ -13,7 +13,7 @@ export annotate_freevars;\n export freevar_set;\n export freevar_map;\n \n-type freevar_set = ast::node_id[];\n+type freevar_set = @ast::node_id[];\n type freevar_map = hashmap[ast::node_id, freevar_set];\n \n // Searches through part of the AST for all references to locals or\n@@ -23,7 +23,7 @@ type freevar_map = hashmap[ast::node_id, freevar_set];\n // in order to start the search.\n fn collect_freevars(&resolve::def_map def_map, &session::session sess,\n                     &fn (&walk::ast_visitor) walker,\n-                    ast::node_id[] initial_decls) -> ast::node_id[] {\n+                    ast::node_id[] initial_decls) -> freevar_set {\n     type env =\n         @rec(mutable ast::node_id[] refs,\n              hashmap[ast::node_id, ()] decls,\n@@ -79,12 +79,12 @@ fn collect_freevars(&resolve::def_map def_map, &session::session sess,\n     walker(*visitor);\n \n     // Calculate (refs - decls). This is the set of captured upvars.\n-    let ast::node_id[] result = ~[];\n+    auto result = ~[];\n     for (ast::node_id ref_id_ in e.refs) {\n         auto ref_id = ref_id_;\n         if (!decls.contains_key(ref_id)) { result += ~[ref_id]; }\n     }\n-    ret result;\n+    ret @result;\n }\n \n // Build a map from every function and for-each body to a set of the"}, {"sha": "f03ff80f74efb2295dadb86221b0fb80e8d19b11", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b9dbcc5b430cbcc97d1debc417890bf8a0b2027/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1b9dbcc5b430cbcc97d1debc417890bf8a0b2027", "patch": "@@ -4285,7 +4285,7 @@ fn trans_for_each(&@block_ctxt cx, &@ast::local local, &@ast::expr seq,\n     auto decl_id = local.node.id;\n     auto upvars = cx.fcx.lcx.ccx.tcx.freevars.get(body.node.id);\n \n-    auto environment_data = build_environment(cx, upvars);\n+    auto environment_data = build_environment(cx, *upvars);\n     auto llenvptr = environment_data._0;\n     auto llenvptrty = environment_data._1;\n \n@@ -4308,7 +4308,7 @@ fn trans_for_each(&@block_ctxt cx, &@ast::local local, &@ast::expr seq,\n \n     // Generate code to load the environment out of the\n     // environment pointer.\n-    load_environment(cx, fcx, llenvptrty, upvars);\n+    load_environment(cx, fcx, llenvptrty, *upvars);\n \n     // Add an upvar for the loop variable alias.\n     fcx.llupvars.insert(decl_id, llvm::LLVMGetParam(fcx.llfn, 3u));"}]}