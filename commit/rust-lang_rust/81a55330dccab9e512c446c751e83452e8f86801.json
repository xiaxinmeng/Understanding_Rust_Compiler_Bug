{"sha": "81a55330dccab9e512c446c751e83452e8f86801", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYTU1MzMwZGNjYWI5ZTUxMmM0NDZjNzUxZTgzNDUyZThmODY4MDE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-28T15:03:18Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-28T15:03:18Z"}, "message": "Use `utils::is_copy` instead of hand-rolling it", "tree": {"sha": "6673c1f05c9aa74431147f2444468b9b441534f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6673c1f05c9aa74431147f2444468b9b441534f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a55330dccab9e512c446c751e83452e8f86801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a55330dccab9e512c446c751e83452e8f86801", "html_url": "https://github.com/rust-lang/rust/commit/81a55330dccab9e512c446c751e83452e8f86801", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a55330dccab9e512c446c751e83452e8f86801/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09c5359b9d6912d6328f46928ddae50160734010", "url": "https://api.github.com/repos/rust-lang/rust/commits/09c5359b9d6912d6328f46928ddae50160734010", "html_url": "https://github.com/rust-lang/rust/commit/09c5359b9d6912d6328f46928ddae50160734010"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "1710871a31f7244eabb4658f66fa96d07335ecff", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81a55330dccab9e512c446c751e83452e8f86801/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a55330dccab9e512c446c751e83452e8f86801/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=81a55330dccab9e512c446c751e83452e8f86801", "patch": "@@ -1,11 +1,10 @@\n use rustc::lint::*;\n-use rustc::ty::subst::Subst;\n use rustc::ty::TypeVariants;\n use rustc::ty;\n use rustc::hir::*;\n use syntax::codemap::Span;\n use utils::paths;\n-use utils::{is_automatically_derived, span_lint_and_then, match_path_old};\n+use utils::{is_automatically_derived, span_lint_and_then, match_path_old, is_copy};\n \n /// **What it does:** Checks for deriving `Hash` but implementing `PartialEq`\n /// explicitly.\n@@ -137,11 +136,8 @@ fn check_hash_peq<'a, 'tcx>(\n /// Implementation of the `EXPL_IMPL_CLONE_ON_COPY` lint.\n fn check_copy_clone<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, item: &Item, trait_ref: &TraitRef, ty: ty::Ty<'tcx>) {\n     if match_path_old(&trait_ref.path, &paths::CLONE_TRAIT) {\n-        let parameter_environment = ty::ParameterEnvironment::for_item(cx.tcx, item.id);\n-        let subst_ty = ty.subst(cx.tcx, parameter_environment.free_substs);\n-\n-        if subst_ty.moves_by_default(cx.tcx.global_tcx(), &parameter_environment, item.span) {\n-            return; // ty is not Copy\n+        if !is_copy(cx, ty, item.id) {\n+            return;\n         }\n \n         match ty.sty {"}, {"sha": "64a8f72ea0167c48328e5c0d79623ffc130c5b05", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81a55330dccab9e512c446c751e83452e8f86801/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a55330dccab9e512c446c751e83452e8f86801/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=81a55330dccab9e512c446c751e83452e8f86801", "patch": "@@ -821,7 +821,6 @@ fn lint_or_fun_call(cx: &LateContext, expr: &hir::Expr, name: &str, args: &[hir:\n fn lint_clone_on_copy(cx: &LateContext, expr: &hir::Expr, arg: &hir::Expr, arg_ty: ty::Ty) {\n     let ty = cx.tables.expr_ty(expr);\n     let parent = cx.tcx.hir.get_parent(expr.id);\n-    let parameter_environment = ty::ParameterEnvironment::for_item(cx.tcx, parent);\n     if let ty::TyRef(_, ty::TypeAndMut { ty: inner, .. }) = arg_ty.sty {\n         if let ty::TyRef(..) = inner.sty {\n             span_lint_and_then(cx,\n@@ -838,7 +837,7 @@ fn lint_clone_on_copy(cx: &LateContext, expr: &hir::Expr, arg: &hir::Expr, arg_t\n         }\n     }\n \n-    if !ty.moves_by_default(cx.tcx.global_tcx(), &parameter_environment, expr.span) {\n+    if is_copy(cx, ty, parent) {\n         span_lint_and_then(cx,\n                            CLONE_ON_COPY,\n                            expr.span,"}]}