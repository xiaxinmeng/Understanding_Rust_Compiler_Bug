{"sha": "85ed840e234184b7975d9ee7b022c0ca2cb5d8ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZWQ4NDBlMjM0MTg0Yjc5NzVkOWVlN2IwMjJjMGNhMmNiNWQ4ZmY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-29T18:51:52Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-29T19:45:07Z"}, "message": "tutorial: improve the owned boxes section", "tree": {"sha": "cfde85c466a3cde449f9b5efb6eb458eb128a6bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfde85c466a3cde449f9b5efb6eb458eb128a6bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85ed840e234184b7975d9ee7b022c0ca2cb5d8ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85ed840e234184b7975d9ee7b022c0ca2cb5d8ff", "html_url": "https://github.com/rust-lang/rust/commit/85ed840e234184b7975d9ee7b022c0ca2cb5d8ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85ed840e234184b7975d9ee7b022c0ca2cb5d8ff/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "777ad8b20452d94111f9c834d0f277575a564ca3", "url": "https://api.github.com/repos/rust-lang/rust/commits/777ad8b20452d94111f9c834d0f277575a564ca3", "html_url": "https://github.com/rust-lang/rust/commit/777ad8b20452d94111f9c834d0f277575a564ca3"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "009c1054737d808f7d912c9b56f300b417db9b27", "filename": "doc/tutorial.md", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/85ed840e234184b7975d9ee7b022c0ca2cb5d8ff/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/85ed840e234184b7975d9ee7b022c0ca2cb5d8ff/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=85ed840e234184b7975d9ee7b022c0ca2cb5d8ff", "patch": "@@ -1002,11 +1002,46 @@ refer to that through a pointer.\n \n ## Owned boxes\n \n-An owned box (`~`) is a uniquely owned allocation on the heap. An owned box\n-inherits the mutability and lifetime of the owner as it would if there was no\n-box. The purpose of an owned box is to add a layer of indirection in order to\n-create recursive data structures or cheaply pass around an object larger than a\n-pointer.\n+An owned box (`~`) is a uniquely owned allocation on the heap. It inherits the\n+mutability and lifetime of the owner as it would if there was no box.\n+\n+~~~~\n+let x = 5; // immutable\n+let mut y = 5; // mutable\n+y += 2;\n+\n+let x = ~5; // immutable\n+let mut y = ~5; // mutable\n+*y += 2; // the * operator is needed to access the contained value\n+~~~~\n+\n+The purpose of an owned box is to add a layer of indirection in order to create\n+recursive data structures or cheaply pass around an object larger than a\n+pointer. Since an owned box has a unique owner, it can be used to represent any\n+tree data structure.\n+\n+The following struct won't compile, because the lack of indirection would mean\n+it has an infinite size:\n+\n+~~~~ {.xfail-test}\n+struct Foo {\n+    child: Option<Foo>\n+}\n+~~~~\n+\n+> ***Note:*** The `Option` type is an enum that represents an *optional* value.\n+> It's comparable to a nullable pointer in many other languages, but stores the\n+> contained value unboxed.\n+\n+Adding indirection with an owned pointer allocates the child outside of the\n+struct on the heap, which makes it a finite size and won't result in a\n+compile-time error:\n+\n+~~~~\n+struct Foo {\n+    child: Option<~Foo>\n+}\n+~~~~\n \n ## Managed boxes\n "}]}