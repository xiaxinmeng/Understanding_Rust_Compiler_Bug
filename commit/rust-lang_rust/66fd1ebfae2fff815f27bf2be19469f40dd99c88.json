{"sha": "66fd1ebfae2fff815f27bf2be19469f40dd99c88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZmQxZWJmYWUyZmZmODE1ZjI3YmYyYmUxOTQ2OWY0MGRkOTljODg=", "commit": {"author": {"name": "whitequark", "email": "whitequark@whitequark.org", "date": "2018-08-12T17:59:18Z"}, "committer": {"name": "whitequark", "email": "whitequark@whitequark.org", "date": "2018-08-12T17:59:33Z"}, "message": "Make LLVM emit assembly comments with -Z asm-comments.\n\nFixes #35741.", "tree": {"sha": "9aa8acb591d49ab79de44669ff4ae63444b67476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9aa8acb591d49ab79de44669ff4ae63444b67476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66fd1ebfae2fff815f27bf2be19469f40dd99c88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66fd1ebfae2fff815f27bf2be19469f40dd99c88", "html_url": "https://github.com/rust-lang/rust/commit/66fd1ebfae2fff815f27bf2be19469f40dd99c88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66fd1ebfae2fff815f27bf2be19469f40dd99c88/comments", "author": {"login": "whitequark", "id": 54771, "node_id": "MDQ6VXNlcjU0Nzcx", "avatar_url": "https://avatars.githubusercontent.com/u/54771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitequark", "html_url": "https://github.com/whitequark", "followers_url": "https://api.github.com/users/whitequark/followers", "following_url": "https://api.github.com/users/whitequark/following{/other_user}", "gists_url": "https://api.github.com/users/whitequark/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitequark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitequark/subscriptions", "organizations_url": "https://api.github.com/users/whitequark/orgs", "repos_url": "https://api.github.com/users/whitequark/repos", "events_url": "https://api.github.com/users/whitequark/events{/privacy}", "received_events_url": "https://api.github.com/users/whitequark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whitequark", "id": 54771, "node_id": "MDQ6VXNlcjU0Nzcx", "avatar_url": "https://avatars.githubusercontent.com/u/54771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitequark", "html_url": "https://github.com/whitequark", "followers_url": "https://api.github.com/users/whitequark/followers", "following_url": "https://api.github.com/users/whitequark/following{/other_user}", "gists_url": "https://api.github.com/users/whitequark/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitequark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitequark/subscriptions", "organizations_url": "https://api.github.com/users/whitequark/orgs", "repos_url": "https://api.github.com/users/whitequark/repos", "events_url": "https://api.github.com/users/whitequark/events{/privacy}", "received_events_url": "https://api.github.com/users/whitequark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aa8d0320266b5579428312095fe49af05ada972", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aa8d0320266b5579428312095fe49af05ada972", "html_url": "https://github.com/rust-lang/rust/commit/0aa8d0320266b5579428312095fe49af05ada972"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "97f3cf614d628cb1284dd833851293b49660c764", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/66fd1ebfae2fff815f27bf2be19469f40dd99c88/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66fd1ebfae2fff815f27bf2be19469f40dd99c88/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=66fd1ebfae2fff815f27bf2be19469f40dd99c88", "patch": "@@ -182,6 +182,8 @@ pub fn target_machine_factory(sess: &Session, find_features: bool)\n     let is_pie_binary = !find_features && is_pie_binary(sess);\n     let trap_unreachable = sess.target.target.options.trap_unreachable;\n \n+    let asm_comments = sess.asm_comments();\n+\n     Arc::new(move || {\n         let tm = unsafe {\n             llvm::LLVMRustCreateTargetMachine(\n@@ -195,6 +197,7 @@ pub fn target_machine_factory(sess: &Session, find_features: bool)\n                 fdata_sections,\n                 trap_unreachable,\n                 singlethread,\n+                asm_comments,\n             )\n         };\n "}, {"sha": "d94645e61f2ea2da1a072054ec285e497c800537", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/66fd1ebfae2fff815f27bf2be19469f40dd99c88/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66fd1ebfae2fff815f27bf2be19469f40dd99c88/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=66fd1ebfae2fff815f27bf2be19469f40dd99c88", "patch": "@@ -1455,7 +1455,8 @@ extern \"C\" {\n                                        FunctionSections: bool,\n                                        DataSections: bool,\n                                        TrapUnreachable: bool,\n-                                       Singlethread: bool)\n+                                       Singlethread: bool,\n+                                       AsmComments: bool)\n                                        -> Option<&'static mut TargetMachine>;\n     pub fn LLVMRustDisposeTargetMachine(T: &'static mut TargetMachine);\n     pub fn LLVMRustAddAnalysisPasses(T: &'a TargetMachine, PM: &PassManager<'a>, M: &'a Module);"}, {"sha": "d9fbd494ab3484ed3f4ae519eb08380291479895", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66fd1ebfae2fff815f27bf2be19469f40dd99c88/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/66fd1ebfae2fff815f27bf2be19469f40dd99c88/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=66fd1ebfae2fff815f27bf2be19469f40dd99c88", "patch": "@@ -366,7 +366,8 @@ extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n     bool PositionIndependentExecutable, bool FunctionSections,\n     bool DataSections,\n     bool TrapUnreachable,\n-    bool Singlethread) {\n+    bool Singlethread,\n+    bool AsmComments) {\n \n   auto OptLevel = fromRust(RustOptLevel);\n   auto RM = fromRust(RustReloc);\n@@ -393,6 +394,8 @@ extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n   }\n   Options.DataSections = DataSections;\n   Options.FunctionSections = FunctionSections;\n+  Options.MCOptions.AsmVerbose = AsmComments;\n+  Options.MCOptions.PreserveAsmComments = AsmComments;\n \n   if (TrapUnreachable) {\n     // Tell LLVM to codegen `unreachable` into an explicit trap instruction."}]}