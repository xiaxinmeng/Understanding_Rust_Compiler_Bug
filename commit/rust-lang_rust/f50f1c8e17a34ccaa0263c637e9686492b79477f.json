{"sha": "f50f1c8e17a34ccaa0263c637e9686492b79477f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MGYxYzhlMTdhMzRjY2FhMDI2M2M2MzdlOTY4NjQ5MmI3OTQ3N2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-09T03:07:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-09T03:07:00Z"}, "message": "Auto merge of #75280 - overdrivenpotato:psp-unwind, r=dtolnay\n\nAdd back unwinding support for Sony PSP\n\nThis PR adds back unwinding support for the Sony PSP. The `mipsel-sony-psp` target works well with unwinding. In [rust-psp], we use the `panic_unwind` crate along with LLVM's libunwind to catch panics, run destructors, and print them to the debug screen without aborting all threads.\n\n[rust-psp]: https://github.com/overdrivenpotato/rust-psp", "tree": {"sha": "958520b9d3777cce9ce5b8ec0a22561baed9f692", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/958520b9d3777cce9ce5b8ec0a22561baed9f692"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f50f1c8e17a34ccaa0263c637e9686492b79477f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f50f1c8e17a34ccaa0263c637e9686492b79477f", "html_url": "https://github.com/rust-lang/rust/commit/f50f1c8e17a34ccaa0263c637e9686492b79477f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f50f1c8e17a34ccaa0263c637e9686492b79477f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aced185592b6f99a21190965a7fecfcd72d954dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/aced185592b6f99a21190965a7fecfcd72d954dc", "html_url": "https://github.com/rust-lang/rust/commit/aced185592b6f99a21190965a7fecfcd72d954dc"}, {"sha": "27fca58993dc129f920928b9ba16ccc689810663", "url": "https://api.github.com/repos/rust-lang/rust/commits/27fca58993dc129f920928b9ba16ccc689810663", "html_url": "https://github.com/rust-lang/rust/commit/27fca58993dc129f920928b9ba16ccc689810663"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7d14893c4cc2e45a1e2c908dce780f8582eceb3a", "filename": "library/panic_unwind/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f50f1c8e17a34ccaa0263c637e9686492b79477f/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f50f1c8e17a34ccaa0263c637e9686492b79477f/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Flib.rs?ref=f50f1c8e17a34ccaa0263c637e9686492b79477f", "patch": "@@ -50,6 +50,7 @@ cfg_if::cfg_if! {\n     } else if #[cfg(any(\n         all(target_family = \"windows\", target_env = \"gnu\"),\n         target_os = \"cloudabi\",\n+        target_os = \"psp\",\n         target_family = \"unix\",\n         all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n     ))] {\n@@ -65,7 +66,6 @@ cfg_if::cfg_if! {\n         // - os=uefi\n         // - nvptx64-nvidia-cuda\n         // - avr-unknown-unknown\n-        // - mipsel-sony-psp\n         #[path = \"dummy.rs\"]\n         mod real_imp;\n     }"}, {"sha": "20a2ca984057e94ff4e9045abcce3d3297b83efa", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f50f1c8e17a34ccaa0263c637e9686492b79477f/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f50f1c8e17a34ccaa0263c637e9686492b79477f/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=f50f1c8e17a34ccaa0263c637e9686492b79477f", "patch": "@@ -19,6 +19,7 @@ cfg_if::cfg_if! {\n     } else if #[cfg(any(\n         unix,\n         windows,\n+        target_os = \"psp\",\n         target_os = \"cloudabi\",\n         all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n     ))] {\n@@ -32,7 +33,6 @@ cfg_if::cfg_if! {\n         // - os=uefi\n         // - os=cuda\n         // - nvptx64-nvidia-cuda\n-        // - mipsel-sony-psp\n         // - Any new targets not listed above.\n     }\n }"}]}