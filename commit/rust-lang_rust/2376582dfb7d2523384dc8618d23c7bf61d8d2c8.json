{"sha": "2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNzY1ODJkZmI3ZDI1MjMzODRkYzg2MThkMjNjN2JmNjFkOGQyYzg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-11T08:54:20Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-11T08:54:20Z"}, "message": "Update tests", "tree": {"sha": "bcd7b0243332b5a90c9fa340df10535056158b56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcd7b0243332b5a90c9fa340df10535056158b56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "html_url": "https://github.com/rust-lang/rust/commit/2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4e0fe2b02f76ef10d908d234fb48ad583e373c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e0fe2b02f76ef10d908d234fb48ad583e373c6", "html_url": "https://github.com/rust-lang/rust/commit/a4e0fe2b02f76ef10d908d234fb48ad583e373c6"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "48d34b9a396d4d4f09c598aa9788f50c2d61c53a", "filename": "tests/source/enum.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Fsource%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Fsource%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fenum.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -125,3 +125,16 @@ enum Loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n enum Looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong {}\n enum Loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong {}\n enum Loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong { Foo }\n+\n+// #1046\n+pub enum Entry<'a, K: 'a, V: 'a> {\n+    // This attribute should stay on the same line.\n+    Vacant(\n+        #[ stable( feature = \"rust1\", since = \"1.0.0\" ) ]   VacantEntry<'a, K, V>,\n+    ),\n+    // This attribute should be kept on the previous line.\n+    Occupied(\n+        #[ stable( feature = \"rust1\", since = \"1.0.0\" ) ]\n+         OccupiedEntry<'a, K, V>,\n+    ),\n+}"}, {"sha": "fc2dfc11ad97de4f7693cb86f72479e136b28c53", "filename": "tests/target/attrib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fattrib.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -45,8 +45,7 @@ impl Bar {\n \n // #984\n struct Foo {\n-    #[derive(Clone, PartialEq, Debug, Deserialize, Serialize)]\n-    foo: usize,\n+    #[derive(Clone, PartialEq, Debug, Deserialize, Serialize)] foo: usize,\n }\n \n // #1668"}, {"sha": "da933a75c7d300755ba07bebf3999d7f0d39d13b", "filename": "tests/target/configs-struct_field_align_threshold-20.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fconfigs-struct_field_align_threshold-20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fconfigs-struct_field_align_threshold-20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_field_align_threshold-20.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -40,8 +40,7 @@ pub struct Foo {\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n-    #[AnAttribute]\n-    g: SomeOtherType,\n+    #[AnAttribute] g: SomeOtherType,\n     /// A doc comment on a field\n     h: AThirdType,\n     pub i: TypeForPublicField,"}, {"sha": "c363aca59b2f916b64a1145ccd6684fb7a92f07d", "filename": "tests/target/enum.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -24,8 +24,7 @@ enum EmtpyWithComment {\n // C-style enum\n enum Bar {\n     A = 1,\n-    #[someAttr(test)]\n-    B = 2, // comment\n+    #[someAttr(test)] B = 2, // comment\n     C,\n }\n \n@@ -43,8 +42,7 @@ enum StructLikeVariants {\n     StructLike {\n         x: i32, // Test comment\n         // Pre-comment\n-        #[Attr50]\n-        y: SomeType, // Aanother Comment\n+        #[Attr50] y: SomeType, // Aanother Comment\n     },\n     SL { a: A },\n }\n@@ -98,7 +96,7 @@ enum EmtpyWithComment {\n }\n \n enum TestFormatFails {\n-    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n+    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n }\n \n fn nested_enum_test() {\n@@ -127,7 +125,7 @@ fn nested_enum_test() {\n                   * AAAAAAAAAAAAAAAAAA */\n         }\n         enum TestNestedFormatFail {\n-            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n+            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n         }\n     }\n }\n@@ -169,3 +167,15 @@ enum Loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n {\n     Foo,\n }\n+\n+// #1046\n+pub enum Entry<'a, K: 'a, V: 'a> {\n+    // This attribute should stay on the same line.\n+    Vacant(\n+        #[stable(feature = \"rust1\", since = \"1.0.0\")] VacantEntry<'a, K, V>,\n+    ),\n+    // This attribute should be kept on the previous line.\n+    Occupied(\n+        #[stable(feature = \"rust1\", since = \"1.0.0\")] OccupiedEntry<'a, K, V>,\n+    ),\n+}"}, {"sha": "f80f6843fe253ccb75938796b067e98e4d4b9d25", "filename": "tests/target/macros.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -141,7 +141,10 @@ fn issue1178() {\n         (#[$attr:meta] $name:ident) => {}\n     }\n \n-    foo!(#[doc = \"bar\"] baz);\n+    foo!(\n+        #[doc = \"bar\"]\n+        baz\n+    );\n }\n fn issue1739() {\n     sql_function!("}, {"sha": "0a863ca4979721e3f5df2ff14ac68df7e9787bd9", "filename": "tests/target/struct-field-attributes.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fstruct-field-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fstruct-field-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct-field-attributes.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -4,8 +4,7 @@\n struct Foo {\n     bar: u64,\n \n-    #[cfg(test)]\n-    qux: u64,\n+    #[cfg(test)] qux: u64,\n }\n \n fn do_something() -> Foo {\n@@ -24,8 +23,7 @@ fn main() {\n // #1462\n struct Foo {\n     foo: usize,\n-    #[cfg(feature = \"include-bar\")]\n-    bar: usize,\n+    #[cfg(feature = \"include-bar\")] bar: usize,\n }\n \n fn new_foo() -> Foo {"}, {"sha": "a4c26269f8e03758a68e8b1f56ed445590f14096", "filename": "tests/target/structs.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstructs.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -8,8 +8,7 @@ pub struct Foo {\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n-    #[AnAttribute]\n-    g: SomeOtherType,\n+    #[AnAttribute] g: SomeOtherType,\n     /// A doc comment on a field\n     h: AThirdType,\n     pub i: TypeForPublicField,"}, {"sha": "cff00d064ff495f2a63e7a4536331f71e520ae94", "filename": "tests/target/unions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Funions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2376582dfb7d2523384dc8618d23c7bf61d8d2c8/tests%2Ftarget%2Funions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Funions.rs?ref=2376582dfb7d2523384dc8618d23c7bf61d8d2c8", "patch": "@@ -8,8 +8,7 @@ pub union Foo {\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n-    #[AnAttribute]\n-    g: SomeOtherType,\n+    #[AnAttribute] g: SomeOtherType,\n     /// A doc comment on a field\n     h: AThirdType,\n     pub i: TypeForPublicField,"}]}