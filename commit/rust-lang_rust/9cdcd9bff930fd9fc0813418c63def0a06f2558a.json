{"sha": "9cdcd9bff930fd9fc0813418c63def0a06f2558a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZGNkOWJmZjkzMGZkOWZjMDgxMzQxOGM2M2RlZjBhMDZmMjU1OGE=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-23T02:59:28Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-23T03:10:04Z"}, "message": "migrate gather_loans.rs to LinearSet", "tree": {"sha": "c1b4ead0ec4b64aec065d2cf21fa7387b1e5be2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1b4ead0ec4b64aec065d2cf21fa7387b1e5be2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cdcd9bff930fd9fc0813418c63def0a06f2558a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cdcd9bff930fd9fc0813418c63def0a06f2558a", "html_url": "https://github.com/rust-lang/rust/commit/9cdcd9bff930fd9fc0813418c63def0a06f2558a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cdcd9bff930fd9fc0813418c63def0a06f2558a/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "342cb602db589f43c4e27a8c674164e641e833bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/342cb602db589f43c4e27a8c674164e641e833bd", "html_url": "https://github.com/rust-lang/rust/commit/342cb602db589f43c4e27a8c674164e641e833bd"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3561ef4db7d496d810f4644710b8f87b65cc11d9", "filename": "src/librustc/middle/borrowck/gather_loans.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9cdcd9bff930fd9fc0813418c63def0a06f2558a/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cdcd9bff930fd9fc0813418c63def0a06f2558a/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans.rs?ref=9cdcd9bff930fd9fc0813418c63def0a06f2558a", "patch": "@@ -30,7 +30,7 @@ use util::common::indenter;\n use util::ppaux::{expr_repr, region_to_str};\n \n use core::dvec;\n-use core::send_map::linear::LinearMap;\n+use core::send_map::linear::LinearSet;\n use core::vec;\n use std::map::HashMap;\n use syntax::ast::{m_const, m_imm, m_mutbl};\n@@ -73,15 +73,15 @@ enum gather_loan_ctxt = @{bccx: borrowck_ctxt,\n                           req_maps: req_maps,\n                           mut item_ub: ast::node_id,\n                           mut root_ub: ast::node_id,\n-                          mut ignore_adjustments: LinearMap<ast::node_id,()>};\n+                          mut ignore_adjustments: LinearSet<ast::node_id>};\n \n fn gather_loans(bccx: borrowck_ctxt, crate: @ast::crate) -> req_maps {\n     let glcx = gather_loan_ctxt(@{bccx: bccx,\n                                   req_maps: {req_loan_map: HashMap(),\n                                              pure_map: HashMap()},\n                                   mut item_ub: 0,\n                                   mut root_ub: 0,\n-                                  mut ignore_adjustments: LinearMap()});\n+                                  mut ignore_adjustments: LinearSet::new()});\n     let v = visit::mk_vt(@visit::Visitor {visit_expr: req_loans_in_expr,\n                                           visit_fn: req_loans_in_fn,\n                                           visit_stmt: add_stmt_to_map,\n@@ -126,7 +126,7 @@ fn req_loans_in_expr(ex: @ast::expr,\n            ex.id, pprust::expr_to_str(ex, tcx.sess.intr()));\n \n     // If this expression is borrowed, have to ensure it remains valid:\n-    if !self.ignore_adjustments.contains_key(&ex.id) {\n+    if !self.ignore_adjustments.contains(&ex.id) {\n         for tcx.adjustments.find(ex.id).each |adjustments| {\n             self.guarantee_adjustments(ex, *adjustments);\n         }\n@@ -221,7 +221,7 @@ fn req_loans_in_expr(ex: @ast::expr,\n \n         // FIXME (#3387): Total hack: Ignore adjustments for the left-hand\n         // side. Their regions will be inferred to be too large.\n-        self.ignore_adjustments.insert(rcvr.id, ());\n+        self.ignore_adjustments.insert(rcvr.id);\n \n         visit::visit_expr(ex, self, vt);\n       }"}]}