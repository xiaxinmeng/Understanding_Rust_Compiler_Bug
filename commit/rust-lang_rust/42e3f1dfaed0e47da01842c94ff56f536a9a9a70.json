{"sha": "42e3f1dfaed0e47da01842c94ff56f536a9a9a70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZTNmMWRmYWVkMGU0N2RhMDE4NDJjOTRmZjU2ZjUzNmE5YTlhNzA=", "commit": {"author": {"name": "Chris C Cerami", "email": "chrisccerami@gmail.com", "date": "2015-10-11T17:23:57Z"}, "committer": {"name": "Chris C Cerami", "email": "chrisccerami@gmail.com", "date": "2015-10-11T17:23:57Z"}, "message": "Link to FFI in Concurrency chapter", "tree": {"sha": "b43564cfdb8de6db8fb62a5163b08a3dbdfc62d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b43564cfdb8de6db8fb62a5163b08a3dbdfc62d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42e3f1dfaed0e47da01842c94ff56f536a9a9a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42e3f1dfaed0e47da01842c94ff56f536a9a9a70", "html_url": "https://github.com/rust-lang/rust/commit/42e3f1dfaed0e47da01842c94ff56f536a9a9a70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42e3f1dfaed0e47da01842c94ff56f536a9a9a70/comments", "author": {"login": "corincerami", "id": 7838511, "node_id": "MDQ6VXNlcjc4Mzg1MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7838511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corincerami", "html_url": "https://github.com/corincerami", "followers_url": "https://api.github.com/users/corincerami/followers", "following_url": "https://api.github.com/users/corincerami/following{/other_user}", "gists_url": "https://api.github.com/users/corincerami/gists{/gist_id}", "starred_url": "https://api.github.com/users/corincerami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corincerami/subscriptions", "organizations_url": "https://api.github.com/users/corincerami/orgs", "repos_url": "https://api.github.com/users/corincerami/repos", "events_url": "https://api.github.com/users/corincerami/events{/privacy}", "received_events_url": "https://api.github.com/users/corincerami/received_events", "type": "User", "site_admin": false}, "committer": {"login": "corincerami", "id": 7838511, "node_id": "MDQ6VXNlcjc4Mzg1MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7838511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corincerami", "html_url": "https://github.com/corincerami", "followers_url": "https://api.github.com/users/corincerami/followers", "following_url": "https://api.github.com/users/corincerami/following{/other_user}", "gists_url": "https://api.github.com/users/corincerami/gists{/gist_id}", "starred_url": "https://api.github.com/users/corincerami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corincerami/subscriptions", "organizations_url": "https://api.github.com/users/corincerami/orgs", "repos_url": "https://api.github.com/users/corincerami/repos", "events_url": "https://api.github.com/users/corincerami/events{/privacy}", "received_events_url": "https://api.github.com/users/corincerami/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11a612795a8c93852fc1ed66118549e4dc6be99d", "url": "https://api.github.com/repos/rust-lang/rust/commits/11a612795a8c93852fc1ed66118549e4dc6be99d", "html_url": "https://github.com/rust-lang/rust/commit/11a612795a8c93852fc1ed66118549e4dc6be99d"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8b69f633cb23f61f020eaf7e65af6b68ed66bff9", "filename": "src/doc/trpl/concurrency.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f1dfaed0e47da01842c94ff56f536a9a9a70/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f1dfaed0e47da01842c94ff56f536a9a9a70/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fconcurrency.md?ref=42e3f1dfaed0e47da01842c94ff56f536a9a9a70", "patch": "@@ -35,10 +35,12 @@ channel connecting two threads, we would want to be able to send some data\n down the channel and to the other thread. Therefore, we'd ensure that `Send` was\n implemented for that type.\n \n-In the opposite way, if we were wrapping a library with FFI that isn't\n+In the opposite way, if we were wrapping a library with [FFI][ffi] that isn't\n threadsafe, we wouldn't want to implement `Send`, and so the compiler will help\n us enforce that it can't leave the current thread.\n \n+[ffi]: ffi.html\n+\n ### `Sync`\n \n The second of these traits is called [`Sync`](../std/marker/trait.Sync.html)."}]}