{"sha": "a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YWM2YTRlYjcwN2ZkOTBkZmJjMmIyZjg0YzdmZWQ3ZmFlYzVkOTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-05T12:11:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-05T12:11:54Z"}, "message": "auto merge of #14642 : aochagavia/rust/pr, r=alexcrichton\n\nThe contents of a `RingBuf` are shown in the same way as the contents of a `Vector`. See the tests for examples.", "tree": {"sha": "124ed6f71aa183120b2ac303d715e213dbb10c83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/124ed6f71aa183120b2ac303d715e213dbb10c83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90", "html_url": "https://github.com/rust-lang/rust/commit/a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2821f2c29a4b8cb8b8a4995213e74c799a80fc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2821f2c29a4b8cb8b8a4995213e74c799a80fc6", "html_url": "https://github.com/rust-lang/rust/commit/f2821f2c29a4b8cb8b8a4995213e74c799a80fc6"}, {"sha": "8e4e3abb1d0a3008d46fd56bba03dc20a81e9481", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4e3abb1d0a3008d46fd56bba03dc20a81e9481", "html_url": "https://github.com/rust-lang/rust/commit/8e4e3abb1d0a3008d46fd56bba03dc20a81e9481"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "7b8d416c4fed268ce7da558cfeeedd91b1807635", "filename": "src/libcollections/ringbuf.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90/src%2Flibcollections%2Fringbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90/src%2Flibcollections%2Fringbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fringbuf.rs?ref=a7ac6a4eb707fd90dfbc2b2f84c7fed7faec5d90", "patch": "@@ -14,6 +14,8 @@\n //! collections::deque::Deque`.\n \n use std::cmp;\n+use std::fmt;\n+use std::fmt::Show;\n use std::iter::RandomAccessIterator;\n \n use deque::Deque;\n@@ -391,6 +393,19 @@ impl<A> Extendable<A> for RingBuf<A> {\n     }\n }\n \n+impl<T: Show> Show for RingBuf<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        try!(write!(f, \"[\"));\n+\n+        for (i, e) in self.iter().enumerate() {\n+            if i != 0 { try!(write!(f, \", \")); }\n+            try!(write!(f, \"{}\", *e));\n+        }\n+\n+        write!(f, \"]\")\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     extern crate test;\n@@ -819,4 +834,15 @@ mod tests {\n         e.clear();\n         assert!(e == RingBuf::new());\n     }\n+\n+    #[test]\n+    fn test_show() {\n+        let ringbuf: RingBuf<int> = range(0, 10).collect();\n+        assert!(format!(\"{}\", ringbuf).as_slice() == \"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\");\n+\n+        let ringbuf: RingBuf<&str> = vec![\"just\", \"one\", \"test\", \"more\"].iter()\n+                                                                        .map(|&s| s)\n+                                                                        .collect();\n+        assert!(format!(\"{}\", ringbuf).as_slice() == \"[just, one, test, more]\");\n+    }\n }"}]}