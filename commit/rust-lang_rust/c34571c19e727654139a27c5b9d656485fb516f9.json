{"sha": "c34571c19e727654139a27c5b9d656485fb516f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNDU3MWMxOWU3Mjc2NTQxMzlhMjdjNWI5ZDY1NjQ4NWZiNTE2Zjk=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-01-27T23:27:43Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-01-27T23:27:43Z"}, "message": "Buffer reads from cargo check's stdout", "tree": {"sha": "3b4137a41a8e2ad8a7baf20be9ec55c728a8b42f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b4137a41a8e2ad8a7baf20be9ec55c728a8b42f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c34571c19e727654139a27c5b9d656485fb516f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c34571c19e727654139a27c5b9d656485fb516f9", "html_url": "https://github.com/rust-lang/rust/commit/c34571c19e727654139a27c5b9d656485fb516f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c34571c19e727654139a27c5b9d656485fb516f9/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dd8f8e26f2a62f5e7e4da50dcdfde344f6d31b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd8f8e26f2a62f5e7e4da50dcdfde344f6d31b9", "html_url": "https://github.com/rust-lang/rust/commit/5dd8f8e26f2a62f5e7e4da50dcdfde344f6d31b9"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e7b700c1041eadd7f91fff3ece376c07646c9d48", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c34571c19e727654139a27c5b9d656485fb516f9/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c34571c19e727654139a27c5b9d656485fb516f9/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=c34571c19e727654139a27c5b9d656485fb516f9", "patch": "@@ -9,6 +9,7 @@ use lsp_types::{\n };\n use std::{\n     collections::HashMap,\n+    io::BufReader,\n     path::PathBuf,\n     process::{Command, Stdio},\n     sync::Arc,\n@@ -347,7 +348,9 @@ impl WatchThread {\n             // which will break out of the loop, and continue the shutdown\n             let _ = message_send.send(CheckEvent::Begin);\n \n-            for message in cargo_metadata::parse_messages(command.stdout.take().unwrap()) {\n+            for message in\n+                cargo_metadata::parse_messages(BufReader::new(command.stdout.take().unwrap()))\n+            {\n                 let message = match message {\n                     Ok(message) => message,\n                     Err(err) => {"}]}