{"sha": "0f0c04422880f5d63862c6833246b0652456f6b5", "node_id": "C_kwDOAAsO6NoAKDBmMGMwNDQyMjg4MGY1ZDYzODYyYzY4MzMyNDZiMDY1MjQ1NmY2YjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-27T07:25:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-27T07:25:12Z"}, "message": "Rollup merge of #103593 - compiler-errors:nit-remove-returns, r=fee1-dead\n\nRemove an unused parser function (`Expr::returns`)\n\nI removed the only usage in #97474", "tree": {"sha": "11ea06d049d99e7cfd4461488d114c40e6bdbbc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11ea06d049d99e7cfd4461488d114c40e6bdbbc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f0c04422880f5d63862c6833246b0652456f6b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjWjJYCRBK7hj4Ov3rIwAAiuYIAEbJD81deYcsazwgoaeAr94L\nkxlVTjaGewfOxtcNQkXlseZX/IBOZnZgiNIIvLedPg0wE9Tvecq1hYfE1cEnzp4E\nXQ8nk+GVlcFU9i8QVQFml5y6tRfG1NuvZmhgKSG61PuMkBNZRkL9PsnB9a80IYKf\nnDqwdOy64+dtM7FZEuRXF+k9BpHCwiRCS//WwMf/jwvazVTUQh53+Pc2KHnh47Es\n/hjD04lqcpN/5e7CWRLwHt6ZyKtFSYT9O/zy4W6TqnEzWWqB8PbC71fxfAX4hT5S\nB6c8vgHYGJuup58d2fGekoE4E1pJTvEUHjuMVppaNwTwHC0w4UNGc+dLO34NQC0=\n=j1bn\n-----END PGP SIGNATURE-----\n", "payload": "tree 11ea06d049d99e7cfd4461488d114c40e6bdbbc2\nparent 29698dc38a4dc7d5437395c9721a47f37ab65a8c\nparent d380d0387de4c0c0fd9bed40d1aa6f01457b061d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1666855512 +0200\ncommitter GitHub <noreply@github.com> 1666855512 +0200\n\nRollup merge of #103593 - compiler-errors:nit-remove-returns, r=fee1-dead\n\nRemove an unused parser function (`Expr::returns`)\n\nI removed the only usage in #97474\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c04422880f5d63862c6833246b0652456f6b5", "html_url": "https://github.com/rust-lang/rust/commit/0f0c04422880f5d63862c6833246b0652456f6b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c04422880f5d63862c6833246b0652456f6b5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29698dc38a4dc7d5437395c9721a47f37ab65a8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/29698dc38a4dc7d5437395c9721a47f37ab65a8c", "html_url": "https://github.com/rust-lang/rust/commit/29698dc38a4dc7d5437395c9721a47f37ab65a8c"}, {"sha": "d380d0387de4c0c0fd9bed40d1aa6f01457b061d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d380d0387de4c0c0fd9bed40d1aa6f01457b061d", "html_url": "https://github.com/rust-lang/rust/commit/d380d0387de4c0c0fd9bed40d1aa6f01457b061d"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "4ef43735a62c8eac79b0499268553cfd223e91d3", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0f0c04422880f5d63862c6833246b0652456f6b5/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f0c04422880f5d63862c6833246b0652456f6b5/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=0f0c04422880f5d63862c6833246b0652456f6b5", "patch": "@@ -1112,24 +1112,6 @@ pub struct Expr {\n }\n \n impl Expr {\n-    /// Returns `true` if this expression would be valid somewhere that expects a value;\n-    /// for example, an `if` condition.\n-    pub fn returns(&self) -> bool {\n-        if let ExprKind::Block(ref block, _) = self.kind {\n-            match block.stmts.last().map(|last_stmt| &last_stmt.kind) {\n-                // Implicit return\n-                Some(StmtKind::Expr(_)) => true,\n-                // Last statement is an explicit return?\n-                Some(StmtKind::Semi(expr)) => matches!(expr.kind, ExprKind::Ret(_)),\n-                // This is a block that doesn't end in either an implicit or explicit return.\n-                _ => false,\n-            }\n-        } else {\n-            // This is not a block, it is a value.\n-            true\n-        }\n-    }\n-\n     /// Is this expr either `N`, or `{ N }`.\n     ///\n     /// If this is not the case, name resolution does not resolve `N` when using"}]}