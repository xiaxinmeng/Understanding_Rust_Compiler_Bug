{"sha": "85e09c6531e1d3920065310c275b573bfad412ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZTA5YzY1MzFlMWQzOTIwMDY1MzEwYzI3NWI1NzNiZmFkNDEyYWM=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-09-08T08:26:06Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-09-08T16:21:05Z"}, "message": "use 'get_toml' instead of regular expression", "tree": {"sha": "f659d5a64f604115ae2a3f4265183d017b4ff949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f659d5a64f604115ae2a3f4265183d017b4ff949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85e09c6531e1d3920065310c275b573bfad412ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85e09c6531e1d3920065310c275b573bfad412ac", "html_url": "https://github.com/rust-lang/rust/commit/85e09c6531e1d3920065310c275b573bfad412ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85e09c6531e1d3920065310c275b573bfad412ac/comments", "author": null, "committer": null, "parents": [{"sha": "4a8ccdbeeb346e80417bd6b5c9cb7d62e225659d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8ccdbeeb346e80417bd6b5c9cb7d62e225659d", "html_url": "https://github.com/rust-lang/rust/commit/4a8ccdbeeb346e80417bd6b5c9cb7d62e225659d"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "14bc90700b76eef7ac896cf5a2867288aed599dc", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/85e09c6531e1d3920065310c275b573bfad412ac/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/85e09c6531e1d3920065310c275b573bfad412ac/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=85e09c6531e1d3920065310c275b573bfad412ac", "patch": "@@ -523,6 +523,10 @@ def get_toml(self, key, section=None):\n         'value2'\n         >>> rb.get_toml('key', 'c') is None\n         True\n+\n+        >>> rb.config_toml = 'key1 = true'\n+        >>> rb.get_toml(\"key1\")\n+        'true'\n         \"\"\"\n \n         cur_section = None\n@@ -571,6 +575,12 @@ def get_string(line):\n \n         >>> RustBuild.get_string('    \"devel\"   ')\n         'devel'\n+        >>> RustBuild.get_string(\"    'devel'   \")\n+        'devel'\n+        >>> RustBuild.get_string('devel') is None\n+        True\n+        >>> RustBuild.get_string('    \"devel   ')\n+        ''\n         \"\"\"\n         start = line.find('\"')\n         if start != -1:\n@@ -822,13 +832,13 @@ def bootstrap(help_triggered):\n     except (OSError, IOError):\n         pass\n \n-    match = re.search(r'\\nverbose = (\\d+)', build.config_toml)\n-    if match is not None:\n-        build.verbose = max(build.verbose, int(match.group(1)))\n+    config_verbose = build.get_toml('verbose', 'build')\n+    if config_verbose is not None:\n+        build.verbose = max(build.verbose, int(config_verbose))\n \n-    build.use_vendored_sources = '\\nvendor = true' in build.config_toml\n+    build.use_vendored_sources = build.get_toml('vendor', 'build') == 'true'\n \n-    build.use_locked_deps = '\\nlocked-deps = true' in build.config_toml\n+    build.use_locked_deps = build.get_toml('locked-deps', 'build') == 'true'\n \n     build.check_vendored_status()\n "}]}