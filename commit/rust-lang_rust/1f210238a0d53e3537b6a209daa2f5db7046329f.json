{"sha": "1f210238a0d53e3537b6a209daa2f5db7046329f", "node_id": "C_kwDOAAsO6NoAKDFmMjEwMjM4YTBkNTNlMzUzN2I2YTIwOWRhYTJmNWRiNzA0NjMyOWY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-20T05:58:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-20T05:58:57Z"}, "message": "Rollup merge of #103272 - clubby789:extra-spaces, r=thomcc\n\nRemove extra spaces in docs\n\nRemoving some random extra spaces in the examples for `core::sync::atomic`.\n\nr? `@thomcc`", "tree": {"sha": "13626088cef08640cebc3ab6e52408f6ab9e7cb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13626088cef08640cebc3ab6e52408f6ab9e7cb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f210238a0d53e3537b6a209daa2f5db7046329f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjUOOhCRBK7hj4Ov3rIwAAR74IAH77zbsKPJ176/1L5FdnaDDc\nC0GuvNTu4NtBrn/pR6Sq3QGOgChQUynXAndb9qjCwdV+q+yXHzjRJmQg8gEsrP6i\n9llk4/3B1DN20skHqoXAIkMJKAmzvlvb8vF6yxk30o7lsAmjixvv6yY5e0IX95kR\ntI8Gut6sLScSj0nBQjkpjOCFXJdZpczPSrO7n6DPzRUDIjpwmaepnWEk2tYoIieX\nAgnCzo7O+jDDuj08tpd1yj+euWktmk8yfjMGGCJW0D7CNMpi/rUG+BniifiVEhnz\nZXmM7NzNplPsn8oObeX10N7Z2OId/kP5N4+sdxUlKGnPjmWzdvOG1UZbGT/sf3w=\n=7kEk\n-----END PGP SIGNATURE-----\n", "payload": "tree 13626088cef08640cebc3ab6e52408f6ab9e7cb5\nparent f8dfddb98cb6781ae9b6c7d144eb04bccb3e72f7\nparent 19bc8fb05ab083a315ee4285b4df7822e8bb1e24\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1666245537 +0200\ncommitter GitHub <noreply@github.com> 1666245537 +0200\n\nRollup merge of #103272 - clubby789:extra-spaces, r=thomcc\n\nRemove extra spaces in docs\n\nRemoving some random extra spaces in the examples for `core::sync::atomic`.\n\nr? `@thomcc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f210238a0d53e3537b6a209daa2f5db7046329f", "html_url": "https://github.com/rust-lang/rust/commit/1f210238a0d53e3537b6a209daa2f5db7046329f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f210238a0d53e3537b6a209daa2f5db7046329f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8dfddb98cb6781ae9b6c7d144eb04bccb3e72f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8dfddb98cb6781ae9b6c7d144eb04bccb3e72f7", "html_url": "https://github.com/rust-lang/rust/commit/f8dfddb98cb6781ae9b6c7d144eb04bccb3e72f7"}, {"sha": "19bc8fb05ab083a315ee4285b4df7822e8bb1e24", "url": "https://api.github.com/repos/rust-lang/rust/commits/19bc8fb05ab083a315ee4285b4df7822e8bb1e24", "html_url": "https://github.com/rust-lang/rust/commit/19bc8fb05ab083a315ee4285b4df7822e8bb1e24"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "edc68d6fae51bcb03f01a099ff20b0f489af9780", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1f210238a0d53e3537b6a209daa2f5db7046329f/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f210238a0d53e3537b6a209daa2f5db7046329f/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=1f210238a0d53e3537b6a209daa2f5db7046329f", "patch": "@@ -294,7 +294,7 @@ impl AtomicBool {\n     /// ```\n     /// use std::sync::atomic::AtomicBool;\n     ///\n-    /// let atomic_true  = AtomicBool::new(true);\n+    /// let atomic_true = AtomicBool::new(true);\n     /// let atomic_false = AtomicBool::new(false);\n     /// ```\n     #[inline]\n@@ -1179,7 +1179,7 @@ impl<T> AtomicPtr<T> {\n     /// use std::sync::atomic::{AtomicPtr, Ordering};\n     ///\n     /// let ptr = &mut 5;\n-    /// let some_ptr  = AtomicPtr::new(ptr);\n+    /// let some_ptr = AtomicPtr::new(ptr);\n     ///\n     /// let value = some_ptr.load(Ordering::Relaxed);\n     /// ```\n@@ -1206,7 +1206,7 @@ impl<T> AtomicPtr<T> {\n     /// use std::sync::atomic::{AtomicPtr, Ordering};\n     ///\n     /// let ptr = &mut 5;\n-    /// let some_ptr  = AtomicPtr::new(ptr);\n+    /// let some_ptr = AtomicPtr::new(ptr);\n     ///\n     /// let other_ptr = &mut 10;\n     ///\n@@ -1238,7 +1238,7 @@ impl<T> AtomicPtr<T> {\n     /// use std::sync::atomic::{AtomicPtr, Ordering};\n     ///\n     /// let ptr = &mut 5;\n-    /// let some_ptr  = AtomicPtr::new(ptr);\n+    /// let some_ptr = AtomicPtr::new(ptr);\n     ///\n     /// let other_ptr = &mut 10;\n     ///\n@@ -1290,9 +1290,9 @@ impl<T> AtomicPtr<T> {\n     /// use std::sync::atomic::{AtomicPtr, Ordering};\n     ///\n     /// let ptr = &mut 5;\n-    /// let some_ptr  = AtomicPtr::new(ptr);\n+    /// let some_ptr = AtomicPtr::new(ptr);\n     ///\n-    /// let other_ptr   = &mut 10;\n+    /// let other_ptr = &mut 10;\n     ///\n     /// let value = some_ptr.compare_and_swap(ptr, other_ptr, Ordering::Relaxed);\n     /// ```\n@@ -1333,9 +1333,9 @@ impl<T> AtomicPtr<T> {\n     /// use std::sync::atomic::{AtomicPtr, Ordering};\n     ///\n     /// let ptr = &mut 5;\n-    /// let some_ptr  = AtomicPtr::new(ptr);\n+    /// let some_ptr = AtomicPtr::new(ptr);\n     ///\n-    /// let other_ptr   = &mut 10;\n+    /// let other_ptr = &mut 10;\n     ///\n     /// let value = some_ptr.compare_exchange(ptr, other_ptr,\n     ///                                       Ordering::SeqCst, Ordering::Relaxed);"}]}