{"sha": "fb09639d926ac32080770f8acffc738895692f3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMDk2MzlkOTI2YWMzMjA4MDc3MGY4YWNmZmM3Mzg4OTU2OTJmM2U=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-07T22:18:38Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-07T22:18:38Z"}, "message": "Rollup merge of #28889 - JIghtuse:str_doc, r=steveklabnik", "tree": {"sha": "b9217193d52898f99de22060368fba7447ce1709", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9217193d52898f99de22060368fba7447ce1709"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb09639d926ac32080770f8acffc738895692f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb09639d926ac32080770f8acffc738895692f3e", "html_url": "https://github.com/rust-lang/rust/commit/fb09639d926ac32080770f8acffc738895692f3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb09639d926ac32080770f8acffc738895692f3e/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66ff93da726228260c64339676d4d9740997072", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66ff93da726228260c64339676d4d9740997072", "html_url": "https://github.com/rust-lang/rust/commit/c66ff93da726228260c64339676d4d9740997072"}, {"sha": "1e0fbbd721e797e49fa0f7dfa9aa1591b324daca", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0fbbd721e797e49fa0f7dfa9aa1591b324daca", "html_url": "https://github.com/rust-lang/rust/commit/1e0fbbd721e797e49fa0f7dfa9aa1591b324daca"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "3350df4ff7f18031f2332630427d657272ada092", "filename": "src/doc/trpl/iterators.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fb09639d926ac32080770f8acffc738895692f3e/src%2Fdoc%2Ftrpl%2Fiterators.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb09639d926ac32080770f8acffc738895692f3e/src%2Fdoc%2Ftrpl%2Fiterators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fiterators.md?ref=fb09639d926ac32080770f8acffc738895692f3e", "patch": "@@ -42,12 +42,12 @@ loop is just a handy way to write this `loop`/`match`/`break` construct.\n `for` loops aren't the only thing that uses iterators, however. Writing your\n own iterator involves implementing the `Iterator` trait. While doing that is\n outside of the scope of this guide, Rust provides a number of useful iterators\n-to accomplish various tasks. Before we talk about those, we should talk about a\n-Rust anti-pattern. And that's using ranges like this.\n+to accomplish various tasks. But first, a few notes about limitations of ranges.\n \n-Yes, we just talked about how ranges are cool. But ranges are also very\n-primitive. For example, if you needed to iterate over the contents of a vector,\n-you may be tempted to write this:\n+Ranges are very primitive, and we often can use better alternatives. Consider\n+following Rust anti-pattern: using ranges to emulate a C-style `for` loop. Let\u2019s\n+suppose you needed to iterate over the contents of a vector. You may be tempted\n+to write this:\n \n ```rust\n let nums = vec![1, 2, 3];\n@@ -281,8 +281,8 @@ If you are trying to execute a closure on an iterator for its side effects,\n just use `for` instead.\n \n There are tons of interesting iterator adapters. `take(n)` will return an\n-iterator over the next `n` elements of the original iterator. Let's try it out with our infinite\n-iterator from before:\n+iterator over the next `n` elements of the original iterator. Let's try it out\n+with an infinite iterator:\n \n ```rust\n for i in (1..).take(5) {"}, {"sha": "23569dd1b917e776461f8473aa01f55bb72a1e6d", "filename": "src/doc/trpl/lifetimes.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fb09639d926ac32080770f8acffc738895692f3e/src%2Fdoc%2Ftrpl%2Flifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb09639d926ac32080770f8acffc738895692f3e/src%2Fdoc%2Ftrpl%2Flifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Flifetimes.md?ref=fb09639d926ac32080770f8acffc738895692f3e", "patch": "@@ -43,11 +43,11 @@ With that in mind, let\u2019s learn about lifetimes.\n Lending out a reference to a resource that someone else owns can be\n complicated. For example, imagine this set of operations:\n \n-- I acquire a handle to some kind of resource.\n-- I lend you a reference to the resource.\n-- I decide I\u2019m done with the resource, and deallocate it, while you still have\n+1. I acquire a handle to some kind of resource.\n+2. I lend you a reference to the resource.\n+3. I decide I\u2019m done with the resource, and deallocate it, while you still have\n   your reference.\n-- You decide to use the resource.\n+4. You decide to use the resource.\n \n Uh oh! Your reference is pointing to an invalid resource. This is called a\n dangling pointer or \u2018use after free\u2019, when the resource is memory."}]}