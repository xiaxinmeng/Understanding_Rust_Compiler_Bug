{"sha": "d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZjVlNzA2ZWY4NGM4NWRjMWQ1MDMzNjVmMmE2MWZhNGZmY2FlN2I=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-13T20:37:15Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-13T20:37:37Z"}, "message": "Use TypeFoldable derive macro in librustc_traits.", "tree": {"sha": "d702cd38f86c1fbe6a98eab455b6c300465733df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d702cd38f86c1fbe6a98eab455b6c300465733df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b", "html_url": "https://github.com/rust-lang/rust/commit/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17692b5849fbf5595f2b84a08681f550d587f99d", "url": "https://api.github.com/repos/rust-lang/rust/commits/17692b5849fbf5595f2b84a08681f550d587f99d", "html_url": "https://github.com/rust-lang/rust/commit/17692b5849fbf5595f2b84a08681f550d587f99d"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "54a54f1a0c265c6e2459b65066917cd9d6938308", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b", "patch": "@@ -3819,6 +3819,7 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_data_structures\",\n+ \"rustc_macros\",\n  \"rustc_target\",\n  \"smallvec 1.0.0\",\n  \"syntax\","}, {"sha": "fab177139dc1bbb37c094f48128e8020640bb64c", "filename": "src/librustc_traits/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b/src%2Flibrustc_traits%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b/src%2Flibrustc_traits%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2FCargo.toml?ref=d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b", "patch": "@@ -12,6 +12,7 @@ path = \"lib.rs\"\n log = { version = \"0.4\" }\n rustc = { path = \"../librustc\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_macros = { path = \"../librustc_macros\" }\n rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "84d2271020f507dcd2ae3b870e13f6fb2354b638", "filename": "src/librustc_traits/chalk_context/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs?ref=d5f5e706ef84c85dc1d503365f2a61fa4ffcae7b", "patch": "@@ -39,6 +39,7 @@ use rustc::ty::query::Providers;\n use rustc::ty::subst::{GenericArg, GenericArgKind};\n use rustc::mir::interpret::ConstValue;\n use syntax_pos::DUMMY_SP;\n+use rustc_macros::TypeFoldable;\n \n use std::fmt::{self, Debug};\n use std::marker::PhantomData;\n@@ -66,18 +67,12 @@ crate struct UniverseMap;\n \n crate type RegionConstraint<'tcx> = ty::OutlivesPredicate<GenericArg<'tcx>, ty::Region<'tcx>>;\n \n-#[derive(Clone, Debug, PartialEq, Eq, Hash)]\n+#[derive(Clone, Debug, PartialEq, Eq, Hash, TypeFoldable)]\n crate struct ConstrainedSubst<'tcx> {\n     subst: CanonicalVarValues<'tcx>,\n     constraints: Vec<RegionConstraint<'tcx>>,\n }\n \n-BraceStructTypeFoldableImpl! {\n-    impl<'tcx> TypeFoldable<'tcx> for ConstrainedSubst<'tcx> {\n-        subst, constraints\n-    }\n-}\n-\n impl context::Context for ChalkArenas<'tcx> {\n     type CanonicalExClause = Canonical<'tcx, ChalkExClause<'tcx>>;\n "}]}