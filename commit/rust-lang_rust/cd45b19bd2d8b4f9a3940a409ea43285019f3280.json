{"sha": "cd45b19bd2d8b4f9a3940a409ea43285019f3280", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNDViMTliZDJkOGI0ZjlhMzk0MGE0MDllYTQzMjg1MDE5ZjMyODA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-18T08:03:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-18T08:03:05Z"}, "message": "Auto merge of #58872 - rep-nop:diagnostic-fix-56031, r=petrochenkov\n\nAdds help message in error for invalid `impl for T` syntax\n\nFixes #56031.", "tree": {"sha": "733bb52b665f169975337964df55691482ddcfe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/733bb52b665f169975337964df55691482ddcfe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd45b19bd2d8b4f9a3940a409ea43285019f3280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd45b19bd2d8b4f9a3940a409ea43285019f3280", "html_url": "https://github.com/rust-lang/rust/commit/cd45b19bd2d8b4f9a3940a409ea43285019f3280", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd45b19bd2d8b4f9a3940a409ea43285019f3280/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03dafa7da38decbe74fcd8a23d7ec835e637c8e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/03dafa7da38decbe74fcd8a23d7ec835e637c8e4", "html_url": "https://github.com/rust-lang/rust/commit/03dafa7da38decbe74fcd8a23d7ec835e637c8e4"}, {"sha": "e19b2289594746ce733588ac444df3fefaad4912", "url": "https://api.github.com/repos/rust-lang/rust/commits/e19b2289594746ce733588ac444df3fefaad4912", "html_url": "https://github.com/rust-lang/rust/commit/e19b2289594746ce733588ac444df3fefaad4912"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "3e00d948c1aa840a49c5b4cbd479d144959e060d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd45b19bd2d8b4f9a3940a409ea43285019f3280/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd45b19bd2d8b4f9a3940a409ea43285019f3280/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cd45b19bd2d8b4f9a3940a409ea43285019f3280", "patch": "@@ -6732,7 +6732,15 @@ impl<'a> Parser<'a> {\n         };\n \n         // Parse both types and traits as a type, then reinterpret if necessary.\n-        let ty_first = self.parse_ty()?;\n+        let err_path = |span| ast::Path::from_ident(Ident::new(keywords::Invalid.name(), span));\n+        let ty_first = if self.token.is_keyword(keywords::For) &&\n+                          self.look_ahead(1, |t| t != &token::Lt) {\n+            let span = self.prev_span.between(self.span);\n+            self.struct_span_err(span, \"missing trait in a trait impl\").emit();\n+            P(Ty { node: TyKind::Path(None, err_path(span)), span, id: ast::DUMMY_NODE_ID })\n+        } else {\n+            self.parse_ty()?\n+        };\n \n         // If `for` is missing we try to recover.\n         let has_for = self.eat_keyword(keywords::For);\n@@ -6741,7 +6749,7 @@ impl<'a> Parser<'a> {\n         let ty_second = if self.token == token::DotDot {\n             // We need to report this error after `cfg` expansion for compatibility reasons\n             self.bump(); // `..`, do not add it to expected tokens\n-            Some(P(Ty { node: TyKind::Err, span: self.prev_span, id: ast::DUMMY_NODE_ID }))\n+            Some(DummyResult::raw_ty(self.prev_span, true))\n         } else if has_for || self.token.can_begin_type() {\n             Some(self.parse_ty()?)\n         } else {\n@@ -6771,7 +6779,7 @@ impl<'a> Parser<'a> {\n                     TyKind::Path(None, path) => path,\n                     _ => {\n                         self.span_err(ty_first.span, \"expected a trait, found type\");\n-                        ast::Path::from_ident(Ident::new(keywords::Invalid.name(), ty_first.span))\n+                        err_path(ty_first.span)\n                     }\n                 };\n                 let trait_ref = TraitRef { path, ref_id: ty_first.id };"}, {"sha": "b68f56814678c87d261aa200742e32d040991d26", "filename": "src/test/ui/issues/issue-56031.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd45b19bd2d8b4f9a3940a409ea43285019f3280/src%2Ftest%2Fui%2Fissues%2Fissue-56031.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd45b19bd2d8b4f9a3940a409ea43285019f3280/src%2Ftest%2Fui%2Fissues%2Fissue-56031.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56031.rs?ref=cd45b19bd2d8b4f9a3940a409ea43285019f3280", "patch": "@@ -0,0 +1,6 @@\n+struct T;\n+\n+impl for T {}\n+//~^ ERROR missing trait in a trait impl\n+\n+fn main() {}"}, {"sha": "3d7acee0a56eb9fbd3cf83c93ff43a3c179319bc", "filename": "src/test/ui/issues/issue-56031.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cd45b19bd2d8b4f9a3940a409ea43285019f3280/src%2Ftest%2Fui%2Fissues%2Fissue-56031.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd45b19bd2d8b4f9a3940a409ea43285019f3280/src%2Ftest%2Fui%2Fissues%2Fissue-56031.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56031.stderr?ref=cd45b19bd2d8b4f9a3940a409ea43285019f3280", "patch": "@@ -0,0 +1,8 @@\n+error: missing trait in a trait impl\n+  --> $DIR/issue-56031.rs:3:5\n+   |\n+LL | impl for T {}\n+   |     ^\n+\n+error: aborting due to previous error\n+"}]}