{"sha": "fa2ff4d7e5a88bfda186f0f3f621402470745788", "node_id": "C_kwDOAAsO6NoAKGZhMmZmNGQ3ZTVhODhiZmRhMTg2ZjBmM2Y2MjE0MDI0NzA3NDU3ODg", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-15T21:14:33Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-15T21:20:00Z"}, "message": "Rebuild BinaryHeap on unwind from retain", "tree": {"sha": "e77cd755c7257c28304bd91df89a02469dd4e0cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e77cd755c7257c28304bd91df89a02469dd4e0cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa2ff4d7e5a88bfda186f0f3f621402470745788", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmPEbgAACgkQ+boUO5X/\nbYLtiA/+JObUIXiyhnPAv799LUL+B0Ue8MaFeqZrINjkN4vnKWvMZdNv78xhj24H\nHMfcoXlBveGDg+BqZ+vzQQVlsNgjn9MZcxe0sN5aDtLXSLiY8Zx90lKONUPDCQg0\nvPvaK5FHOr/PB3b9NGA344MyYcFLxB6KsB1xUntEIMyDCrRKjum4901mZa1grAT5\nm4osFY082sUec6G7umtv5hdY475aNRQz9qvmpKNyoWU4l4A3tgXtx3NuqAvhNR87\ne7ZuQZ2GL/0tvpVXySprz3zzYiaCD/Uc82ba8CJBBZariq6mL2FdV9dLG5L/J/ab\nXEi/LKVBNK6g0orvcXJUji4EzOtDK12wrAiRUY42ior+1X0zQii7+yqwsEMHoDIz\nTk5VWTggdXqFzU1sQxAWt1BKB3ELPfsgYTlP1+gEwcj1EKk8C+N238HEbmtHC5X7\nVeDRRSra65sYTUPxQHqASO+qWR53/vZd59VFSqEocKK+os8Qv7SXTFm9oNrq+n+b\nwJvrLZoxx5tbZbfBfcDv3aMQ1v4MYUZRbu4y/vZiF/zZ3bD7aUz4LW+peHsjevdB\nnGhzDF+rb2WF5wkNjBjcw6norJ2neVFDrcok19T/Hd/+xy74m9OHjcs9eIBH6dQ2\nst2oMW5EGYVH85ThPy0k0Jk9AcngJXfSDFP4TSCSAG6Ohr1b4ww=\n=UZiK\n-----END PGP SIGNATURE-----", "payload": "tree e77cd755c7257c28304bd91df89a02469dd4e0cb\nparent 0d3eaa848ce6b44a83502174eae16524c893dd28\nauthor David Tolnay <dtolnay@gmail.com> 1673817273 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1673817600 -0800\n\nRebuild BinaryHeap on unwind from retain\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa2ff4d7e5a88bfda186f0f3f621402470745788", "html_url": "https://github.com/rust-lang/rust/commit/fa2ff4d7e5a88bfda186f0f3f621402470745788", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa2ff4d7e5a88bfda186f0f3f621402470745788/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d3eaa848ce6b44a83502174eae16524c893dd28", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d3eaa848ce6b44a83502174eae16524c893dd28", "html_url": "https://github.com/rust-lang/rust/commit/0d3eaa848ce6b44a83502174eae16524c893dd28"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "f1d0a305d999f1b7e9ab3c85e77dc79d1450fb5b", "filename": "library/alloc/src/collections/binary_heap/mod.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fa2ff4d7e5a88bfda186f0f3f621402470745788/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2ff4d7e5a88bfda186f0f3f621402470745788/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs?ref=fa2ff4d7e5a88bfda186f0f3f621402470745788", "patch": "@@ -851,18 +851,30 @@ impl<T: Ord> BinaryHeap<T> {\n     where\n         F: FnMut(&T) -> bool,\n     {\n-        let mut first_removed = self.len();\n+        struct RebuildOnDrop<'a, T: Ord> {\n+            heap: &'a mut BinaryHeap<T>,\n+            first_removed: usize,\n+        }\n+\n+        let mut guard = RebuildOnDrop { first_removed: self.len(), heap: self };\n+\n         let mut i = 0;\n-        self.data.retain(|e| {\n+        guard.heap.data.retain(|e| {\n             let keep = f(e);\n-            if !keep && i < first_removed {\n-                first_removed = i;\n+            if !keep && i < guard.first_removed {\n+                guard.first_removed = i;\n             }\n             i += 1;\n             keep\n         });\n-        // data[0..first_removed] is untouched, so we only need to rebuild the tail:\n-        self.rebuild_tail(first_removed);\n+\n+        impl<'a, T: Ord> Drop for RebuildOnDrop<'a, T> {\n+            fn drop(&mut self) {\n+                // data[..first_removed] is untouched, so we only need to\n+                // rebuild the tail:\n+                self.heap.rebuild_tail(self.first_removed);\n+            }\n+        }\n     }\n }\n "}, {"sha": "500caa35678ab2abc16f92c51e54fa56837f7122", "filename": "library/alloc/src/collections/binary_heap/tests.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa2ff4d7e5a88bfda186f0f3f621402470745788/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa2ff4d7e5a88bfda186f0f3f621402470745788/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Ftests.rs?ref=fa2ff4d7e5a88bfda186f0f3f621402470745788", "patch": "@@ -488,7 +488,9 @@ fn test_retain_catch_unwind() {\n         });\n     }));\n \n-    assert_eq!(heap.into_vec(), [1, 2]); // BAD!!\n+    // Naively this would be [1, 2] (an invalid heap) if BinaryHeap delegates to\n+    // Vec's retain impl and then does not rebuild the heap after that unwinds.\n+    assert_eq!(heap.into_vec(), [2, 1]);\n }\n \n // old binaryheap failed this test"}]}