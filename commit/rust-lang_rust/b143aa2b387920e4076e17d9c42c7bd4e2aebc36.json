{"sha": "b143aa2b387920e4076e17d9c42c7bd4e2aebc36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNDNhYTJiMzg3OTIwZTQwNzZlMTdkOWM0MmM3YmQ0ZTJhZWJjMzY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-13T11:34:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-13T11:34:40Z"}, "message": "Rollup merge of #65357 - Centril:simplify-maybe-annotate-with-ascription, r=davidtwco\n\nsyntax: simplify maybe_annotate_with_ascription\n\nSplit out from https://github.com/rust-lang/rust/pull/65324.\n\nr? @estebank", "tree": {"sha": "1e32356a2e1de103b9563d14789729d4f2513d50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e32356a2e1de103b9563d14789729d4f2513d50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b143aa2b387920e4076e17d9c42c7bd4e2aebc36", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdowvQCRBK7hj4Ov3rIwAAdHIIALFLED5+q66yiMZyFpL7oTaS\nVH78mpacukowq/5YIN/5WpTIlfDuBer+xAo3WNMGcdQnFXaAFucauuyvdRdNSBOA\nZByfEPoXj0EPuBDX7D5ujp5VdftvssW6ZritqoQIyyza85GB/dPyXdlhqocRbBeo\naCuKw3JuCuzDJ5L+y0YfLHfg03Pv1fuZly4xYuBtCuxcDPZe+4NbyDJeklSY48p0\nu3X1LCsW++7PUJvrYswi4w9ZZXQSuluDEEImd8WxyWM0DOfjFJbSwwo5QbkezZf7\n4UAmXuyi+oxdRpgPwrqsVrBJWlnaOYK0yVFywhcc1YpMiQqprPzx66umEAG7lDE=\n=2+MY\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e32356a2e1de103b9563d14789729d4f2513d50\nparent 293d02de7070f1c0fa3422fa42ae40a5d8922dbb\nparent 9f09387f53792740edcb5dd0eea49ab02d3fe891\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570966480 +0200\ncommitter GitHub <noreply@github.com> 1570966480 +0200\n\nRollup merge of #65357 - Centril:simplify-maybe-annotate-with-ascription, r=davidtwco\n\nsyntax: simplify maybe_annotate_with_ascription\n\nSplit out from https://github.com/rust-lang/rust/pull/65324.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b143aa2b387920e4076e17d9c42c7bd4e2aebc36", "html_url": "https://github.com/rust-lang/rust/commit/b143aa2b387920e4076e17d9c42c7bd4e2aebc36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b143aa2b387920e4076e17d9c42c7bd4e2aebc36/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "293d02de7070f1c0fa3422fa42ae40a5d8922dbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/293d02de7070f1c0fa3422fa42ae40a5d8922dbb", "html_url": "https://github.com/rust-lang/rust/commit/293d02de7070f1c0fa3422fa42ae40a5d8922dbb"}, {"sha": "9f09387f53792740edcb5dd0eea49ab02d3fe891", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f09387f53792740edcb5dd0eea49ab02d3fe891", "html_url": "https://github.com/rust-lang/rust/commit/9f09387f53792740edcb5dd0eea49ab02d3fe891"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "42cbe28fc17d44f39953ead004299c3fdecfc330", "filename": "src/libsyntax/parse/diagnostics.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b143aa2b387920e4076e17d9c42c7bd4e2aebc36/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b143aa2b387920e4076e17d9c42c7bd4e2aebc36/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs?ref=b143aa2b387920e4076e17d9c42c7bd4e2aebc36", "patch": "@@ -2,7 +2,7 @@ use crate::ast::{\n     self, Param, BinOpKind, BindingMode, BlockCheckMode, Expr, ExprKind, Ident, Item, ItemKind,\n     Mutability, Pat, PatKind, PathSegment, QSelf, Ty, TyKind, VariantData,\n };\n-use crate::feature_gate::{feature_err, UnstableFeatures};\n+use crate::feature_gate::feature_err;\n use crate::parse::{SeqSep, PResult, Parser, ParseSess};\n use crate::parse::parser::{BlockMode, PathStyle, SemiColonMode, TokenType, TokenExpectType};\n use crate::parse::token::{self, TokenKind};\n@@ -387,14 +387,17 @@ impl<'a> Parser<'a> {\n             let next_pos = sm.lookup_char_pos(self.token.span.lo());\n             let op_pos = sm.lookup_char_pos(sp.hi());\n \n+            let allow_unstable = self.sess.unstable_features.is_nightly_build();\n+\n             if likely_path {\n                 err.span_suggestion(\n                     sp,\n                     \"maybe write a path separator here\",\n                     \"::\".to_string(),\n-                    match self.sess.unstable_features {\n-                        UnstableFeatures::Disallow => Applicability::MachineApplicable,\n-                        _ => Applicability::MaybeIncorrect,\n+                    if allow_unstable {\n+                        Applicability::MaybeIncorrect\n+                    } else {\n+                        Applicability::MachineApplicable\n                     },\n                 );\n             } else if op_pos.line != next_pos.line && maybe_expected_semicolon {\n@@ -404,14 +407,13 @@ impl<'a> Parser<'a> {\n                     \";\".to_string(),\n                     Applicability::MaybeIncorrect,\n                 );\n-            } else if let UnstableFeatures::Disallow = self.sess.unstable_features {\n-                err.span_label(sp, \"tried to parse a type due to this\");\n-            } else {\n+            } else if allow_unstable {\n                 err.span_label(sp, \"tried to parse a type due to this type ascription\");\n+            } else {\n+                err.span_label(sp, \"tried to parse a type due to this\");\n             }\n-            if let UnstableFeatures::Disallow = self.sess.unstable_features {\n+            if allow_unstable {\n                 // Give extra information about type ascription only if it's a nightly compiler.\n-            } else {\n                 err.note(\"`#![feature(type_ascription)]` lets you annotate an expression with a \\\n                           type: `<expr>: <type>`\");\n                 err.note(\"for more information, see \\"}]}