{"sha": "c5e0099a2085e3c3de68242d8550970d2ba88f12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZTAwOTlhMjA4NWUzYzNkZTY4MjQyZDg1NTA5NzBkMmJhODhmMTI=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-05-11T13:27:42Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-05-11T13:27:42Z"}, "message": "Rollup merge of #33129 - GuillaumeGomez:fmt_doc, r=steveklabnik\n\nDoc improvement on std::fmt module\n\nPart of #29355.\n\nr? @steveklabnik", "tree": {"sha": "57d02808a59b9cd6dd766c87afab1645e33ecd02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57d02808a59b9cd6dd766c87afab1645e33ecd02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5e0099a2085e3c3de68242d8550970d2ba88f12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5e0099a2085e3c3de68242d8550970d2ba88f12", "html_url": "https://github.com/rust-lang/rust/commit/c5e0099a2085e3c3de68242d8550970d2ba88f12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5e0099a2085e3c3de68242d8550970d2ba88f12/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ab8840c8cfcd62e9f7212371ed3e31ad2ae73a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ab8840c8cfcd62e9f7212371ed3e31ad2ae73a", "html_url": "https://github.com/rust-lang/rust/commit/c7ab8840c8cfcd62e9f7212371ed3e31ad2ae73a"}, {"sha": "0908d6688203c08e62dc587cc1a9209d8c3e2a52", "url": "https://api.github.com/repos/rust-lang/rust/commits/0908d6688203c08e62dc587cc1a9209d8c3e2a52", "html_url": "https://github.com/rust-lang/rust/commit/0908d6688203c08e62dc587cc1a9209d8c3e2a52"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "ce1d6ec5a6478a688f462e55d5f4b95b7fff38cd", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c5e0099a2085e3c3de68242d8550970d2ba88f12/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5e0099a2085e3c3de68242d8550970d2ba88f12/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=c5e0099a2085e3c3de68242d8550970d2ba88f12", "patch": "@@ -521,12 +521,24 @@ use string;\n ///\n /// # Examples\n ///\n+/// Basic usage:\n+///\n /// ```\n /// use std::fmt;\n ///\n /// let s = fmt::format(format_args!(\"Hello, {}!\", \"world\"));\n /// assert_eq!(s, \"Hello, world!\".to_string());\n /// ```\n+///\n+/// Please note that using [`format!`][format!] might be preferrable.\n+/// Example:\n+///\n+/// ```\n+/// let s = format!(\"Hello, {}!\", \"world\");\n+/// assert_eq!(s, \"Hello, world!\".to_string());\n+/// ```\n+///\n+/// [format!]: ../macro.format!.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn format(args: Arguments) -> string::String {\n     let mut output = string::String::new();"}, {"sha": "dde4d03dad8ac01bcfcd6e570c9ca19df2153c8b", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c5e0099a2085e3c3de68242d8550970d2ba88f12/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5e0099a2085e3c3de68242d8550970d2ba88f12/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=c5e0099a2085e3c3de68242d8550970d2ba88f12", "patch": "@@ -776,6 +776,32 @@ pub trait UpperExp {\n ///\n ///   * output - the buffer to write output to\n ///   * args - the precompiled arguments generated by `format_args!`\n+///\n+/// # Examples\n+///\n+/// Basic usage:\n+///\n+/// ```\n+/// use std::fmt;\n+///\n+/// let mut output = String::new();\n+/// fmt::write(&mut output, format_args!(\"Hello {}!\", \"world\"))\n+///     .expect(\"Error occurred while trying to write in String\");\n+/// assert_eq!(output, \"Hello world!\");\n+/// ```\n+///\n+/// Please note that using [`write!`][write_macro] might be preferrable. Example:\n+///\n+/// ```\n+/// use std::fmt::Write;\n+///\n+/// let mut output = String::new();\n+/// write!(&mut output, \"Hello {}!\", \"world\")\n+///     .expect(\"Error occurred while trying to write in String\");\n+/// assert_eq!(output, \"Hello world!\");\n+/// ```\n+///\n+/// [write_macro]: ../../std/macro.write!.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn write(output: &mut Write, args: Arguments) -> Result {\n     let mut formatter = Formatter {"}]}