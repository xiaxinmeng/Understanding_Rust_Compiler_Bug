{"sha": "a8ccbf5f2fa75007ce0effe58caef4e342859a4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4Y2NiZjVmMmZhNzUwMDdjZTBlZmZlNThjYWVmNGUzNDI4NTlhNGY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-05T18:29:54Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-05T18:29:54Z"}, "message": "Account for typo in turbofish and suggest `::`", "tree": {"sha": "de4a7862c55287076de8397f19102ff9a8860e19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de4a7862c55287076de8397f19102ff9a8860e19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8ccbf5f2fa75007ce0effe58caef4e342859a4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8ccbf5f2fa75007ce0effe58caef4e342859a4f", "html_url": "https://github.com/rust-lang/rust/commit/a8ccbf5f2fa75007ce0effe58caef4e342859a4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8ccbf5f2fa75007ce0effe58caef4e342859a4f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bbfc7320ba0f23541f94a84cf5281a210a546cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bbfc7320ba0f23541f94a84cf5281a210a546cd", "html_url": "https://github.com/rust-lang/rust/commit/3bbfc7320ba0f23541f94a84cf5281a210a546cd"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "fc2b10f2260975f1e437597b2d381c96e4573280", "filename": "src/libsyntax/parse/parser/diagnostics.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a8ccbf5f2fa75007ce0effe58caef4e342859a4f/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ccbf5f2fa75007ce0effe58caef4e342859a4f/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs?ref=a8ccbf5f2fa75007ce0effe58caef4e342859a4f", "patch": "@@ -358,7 +358,7 @@ impl<'a> Parser<'a> {\n         err: &mut DiagnosticBuilder<'_>,\n         maybe_expected_semicolon: bool,\n     ) {\n-        if let Some((sp, likely_path)) = self.last_type_ascription {\n+        if let Some((sp, likely_path)) = self.last_type_ascription.take() {\n             let sm = self.sess.source_map();\n             let next_pos = sm.lookup_char_pos(self.token.span.lo());\n             let op_pos = sm.lookup_char_pos(sp.hi());\n@@ -395,7 +395,6 @@ impl<'a> Parser<'a> {\n                 err.note(\"for more information, see \\\n                           https://github.com/rust-lang/rust/issues/23416\");\n             }\n-            self.last_type_ascription = None;\n         }\n     }\n \n@@ -1083,8 +1082,15 @@ impl<'a> Parser<'a> {\n     }\n \n     pub(super) fn could_ascription_be_path(&self, node: &ast::ExprKind) -> bool {\n-        self.token.is_ident() &&\n-            if let ast::ExprKind::Path(..) = node { true } else { false } &&\n+        (self.token == token::Lt && // `foo:<bar`, likely a typoed turbofish.\n+            self.look_ahead(1, |t| t.is_ident() && !t.is_reserved_ident())\n+        ) ||\n+            self.token.is_ident() &&\n+            match node {\n+                // `foo::` \u2192 `foo:` or `foo.bar::` \u2192 `foo.bar:`\n+                ast::ExprKind::Path(..) | ast::ExprKind::Field(..) => true,\n+                _ => false,\n+            } &&\n             !self.token.is_reserved_ident() &&           // v `foo:bar(baz)`\n             self.look_ahead(1, |t| t == &token::OpenDelim(token::Paren)) ||\n             self.look_ahead(1, |t| t == &token::Lt) &&     // `foo:bar<baz`"}, {"sha": "db793c84cf8b915edd0f83f8cb61d34c96e57a15", "filename": "src/test/ui/suggestions/type-ascription-instead-of-path-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ccbf5f2fa75007ce0effe58caef4e342859a4f/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8ccbf5f2fa75007ce0effe58caef4e342859a4f/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path-2.stderr?ref=a8ccbf5f2fa75007ce0effe58caef4e342859a4f", "patch": "@@ -4,7 +4,7 @@ error: expected `::`, found `(`\n LL |     vec![Ok(2)].into_iter().collect:<Result<Vec<_>,_>>()?;\n    |                                    -                  ^ expected `::`\n    |                                    |\n-   |                                    tried to parse a type due to this type ascription\n+   |                                    help: maybe write a path separator here: `::`\n    |\n    = note: `#![feature(type_ascription)]` lets you annotate an expression with a type: `<expr>: <type>`\n    = note: for more information, see https://github.com/rust-lang/rust/issues/23416"}]}