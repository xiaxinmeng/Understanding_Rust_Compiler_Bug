{"sha": "14f1e3459f02e3ce45232a84cd923c86eef55cb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZjFlMzQ1OWYwMmUzY2U0NTIzMmE4NGNkOTIzYzg2ZWVmNTVjYjU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-11T20:58:04Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-12T00:32:47Z"}, "message": "fix a bug in compiletest JSON parsing for duplicate errors\n\nIn some cases, we give multiple primary spans, in which case we would\nreport one `//~` annotation per primary span. That was very confusing\nbecause these things are reported to the user as a single error.\n\nUI tests would be better here.", "tree": {"sha": "00999979b018118bab6c4610974e1f6eba5bf2ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00999979b018118bab6c4610974e1f6eba5bf2ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14f1e3459f02e3ce45232a84cd923c86eef55cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14f1e3459f02e3ce45232a84cd923c86eef55cb5", "html_url": "https://github.com/rust-lang/rust/commit/14f1e3459f02e3ce45232a84cd923c86eef55cb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14f1e3459f02e3ce45232a84cd923c86eef55cb5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d9e38e9499df1dac393937d62d3bf626c51abb", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d9e38e9499df1dac393937d62d3bf626c51abb", "html_url": "https://github.com/rust-lang/rust/commit/77d9e38e9499df1dac393937d62d3bf626c51abb"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "cff0064497aff34ac814b8be55d4a1b9c4e64b9d", "filename": "src/test/compile-fail/binop-move-semantics.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fbinop-move-semantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fbinop-move-semantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-move-semantics.rs?ref=14f1e3459f02e3ce45232a84cd923c86eef55cb5", "patch": "@@ -62,7 +62,6 @@ fn mut_plus_immut() {\n     &mut f\n     +\n     &f;  //~ ERROR: cannot borrow `f` as immutable because it is also borrowed as mutable\n-    //~^ cannot borrow `f` as immutable because it is also borrowed as mutable\n }\n \n fn immut_plus_mut() {\n@@ -71,7 +70,6 @@ fn immut_plus_mut() {\n     &f\n     +\n     &mut f;  //~ ERROR: cannot borrow `f` as mutable because it is also borrowed as immutable\n-    //~^ cannot borrow `f` as mutable because it is also borrowed as immutable\n }\n \n fn main() {}"}, {"sha": "f09e7ffd7e4b791c4b51472ca9db8013b79e0659", "filename": "src/test/compile-fail/borrowck/borrowck-lend-flow-loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-lend-flow-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-lend-flow-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-lend-flow-loop.rs?ref=14f1e3459f02e3ce45232a84cd923c86eef55cb5", "patch": "@@ -109,7 +109,6 @@ fn while_aliased_mut_cond(cond: bool, cond2: bool) {\n         borrow(&*v); //~ ERROR cannot borrow\n         if cond2 {\n             x = &mut v; //~ ERROR cannot borrow\n-            //~^ ERROR cannot borrow\n         }\n     }\n }"}, {"sha": "38e0e27a7b98e792e828f44bb7ad64ec83f426a0", "filename": "src/test/compile-fail/borrowck/borrowck-mut-borrow-linear-errors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.rs?ref=14f1e3459f02e3ce45232a84cd923c86eef55cb5", "patch": "@@ -19,7 +19,6 @@ fn main() {\n         match 1 {\n             1 => { addr = &mut x; }\n             //~^ ERROR cannot borrow `x` as mutable more than once at a time\n-            //~| ERROR cannot borrow `x` as mutable more than once at a time\n             2 => { addr = &mut x; }\n             //~^ ERROR cannot borrow `x` as mutable more than once at a time\n             _ => { addr = &mut x; }"}, {"sha": "323ce3b0adf33d89f9166ffd2c2b60182a2120cb", "filename": "src/test/compile-fail/issue-25579.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fissue-25579.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fissue-25579.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-25579.rs?ref=14f1e3459f02e3ce45232a84cd923c86eef55cb5", "patch": "@@ -17,7 +17,6 @@ fn causes_ice(mut l: &mut Sexpression) {\n     loop { match l {\n         &mut Sexpression::Num(ref mut n) => {},\n         &mut Sexpression::Cons(ref mut expr) => { //~ ERROR cannot borrow `l.0`\n-            //~| ERROR cannot borrow `l.0`\n             l = &mut **expr; //~ ERROR cannot assign to `l`\n         }\n     }}"}, {"sha": "b4feadbacf7404cc61d1b9cc91f54224eaa19ffd", "filename": "src/test/compile-fail/issue-38412.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fissue-38412.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Fissue-38412.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-38412.rs?ref=14f1e3459f02e3ce45232a84cd923c86eef55cb5", "patch": "@@ -11,7 +11,6 @@\n fn main() {\n     let Box(a) = loop { };\n     //~^ ERROR expected tuple struct/variant, found struct `Box`\n-    //~| ERROR expected tuple struct/variant, found struct `Box`\n \n     // (The below is a trick to allow compiler to infer a type for\n     // variable `a` without attempting to ascribe a type to the"}, {"sha": "5bb2ab75c53fd42a8fadd9b43920b94e87e0d216", "filename": "src/test/compile-fail/lint-unused-imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs?ref=14f1e3459f02e3ce45232a84cd923c86eef55cb5", "patch": "@@ -21,7 +21,6 @@ use std::fmt::{};\n // Should get errors for both 'Some' and 'None'\n use std::option::Option::{Some, None};\n //~^ ERROR unused imports: `None`, `Some`\n-//~| ERROR unused imports: `None`, `Some`\n \n use test::A;       //~ ERROR unused import: `test::A`\n // Be sure that if we just bring some methods into scope that they're also"}, {"sha": "06cbd9a3df41686b464dee0f15dda74cb91ab8fc", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f1e3459f02e3ce45232a84cd923c86eef55cb5/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=14f1e3459f02e3ce45232a84cd923c86eef55cb5", "patch": "@@ -97,6 +97,7 @@ fn push_expected_errors(expected_errors: &mut Vec<Error>,\n     let primary_spans: Vec<_> = spans_in_this_file.iter()\n         .cloned()\n         .filter(|span| span.is_primary)\n+        .take(1) // sometimes we have more than one showing up in the json; pick first\n         .collect();\n     let primary_spans = if primary_spans.is_empty() {\n         // subdiagnostics often don't have a span of their own;"}]}