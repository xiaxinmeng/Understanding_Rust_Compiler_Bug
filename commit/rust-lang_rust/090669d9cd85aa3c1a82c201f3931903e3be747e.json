{"sha": "090669d9cd85aa3c1a82c201f3931903e3be747e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MDY2OWQ5Y2Q4NWFhM2MxYTgyYzIwMWYzOTMxOTAzZTNiZTc0N2U=", "commit": {"author": {"name": "Cengiz Can", "email": "123910+cengizIO@users.noreply.github.com", "date": "2017-11-08T13:35:05Z"}, "committer": {"name": "Cengiz Can", "email": "cengizc@gmail.com", "date": "2017-11-12T15:56:45Z"}, "message": "update failing E0621 tests", "tree": {"sha": "9973b9a0fb54adf5f10d5823b8ae402a9b357dff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9973b9a0fb54adf5f10d5823b8ae402a9b357dff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/090669d9cd85aa3c1a82c201f3931903e3be747e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/090669d9cd85aa3c1a82c201f3931903e3be747e", "html_url": "https://github.com/rust-lang/rust/commit/090669d9cd85aa3c1a82c201f3931903e3be747e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/090669d9cd85aa3c1a82c201f3931903e3be747e/comments", "author": {"login": "cengiz-io", "id": 123910, "node_id": "MDQ6VXNlcjEyMzkxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/123910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cengiz-io", "html_url": "https://github.com/cengiz-io", "followers_url": "https://api.github.com/users/cengiz-io/followers", "following_url": "https://api.github.com/users/cengiz-io/following{/other_user}", "gists_url": "https://api.github.com/users/cengiz-io/gists{/gist_id}", "starred_url": "https://api.github.com/users/cengiz-io/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cengiz-io/subscriptions", "organizations_url": "https://api.github.com/users/cengiz-io/orgs", "repos_url": "https://api.github.com/users/cengiz-io/repos", "events_url": "https://api.github.com/users/cengiz-io/events{/privacy}", "received_events_url": "https://api.github.com/users/cengiz-io/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cengiz-io", "id": 123910, "node_id": "MDQ6VXNlcjEyMzkxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/123910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cengiz-io", "html_url": "https://github.com/cengiz-io", "followers_url": "https://api.github.com/users/cengiz-io/followers", "following_url": "https://api.github.com/users/cengiz-io/following{/other_user}", "gists_url": "https://api.github.com/users/cengiz-io/gists{/gist_id}", "starred_url": "https://api.github.com/users/cengiz-io/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cengiz-io/subscriptions", "organizations_url": "https://api.github.com/users/cengiz-io/orgs", "repos_url": "https://api.github.com/users/cengiz-io/repos", "events_url": "https://api.github.com/users/cengiz-io/events{/privacy}", "received_events_url": "https://api.github.com/users/cengiz-io/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "501c558ffebd8679c254ba6919112edeaa744b2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/501c558ffebd8679c254ba6919112edeaa744b2c", "html_url": "https://github.com/rust-lang/rust/commit/501c558ffebd8679c254ba6919112edeaa744b2c"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "590f8073a1a0d33fd1a46f2a02cab905fa36a571", "filename": "src/test/compile-fail/issue-13058.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs?ref=090669d9cd85aa3c1a82c201f3931903e3be747e", "patch": "@@ -22,7 +22,7 @@ impl<'r> Itble<'r, usize, Range<usize>> for (usize, usize) {\n fn check<'r, I: Iterator<Item=usize>, T: Itble<'r, usize, I>>(cont: &T) -> bool\n {\n     let cont_iter = cont.iter();\n-//~^ ERROR cannot infer an appropriate lifetime for autoref due to conflicting requirements\n+//~^ ERROR 24:26: 24:30: explicit lifetime required in the type of `cont` [E0621]\n     let result = cont_iter.fold(Some(0), |state, val| {\n         state.map_or(None, |mask| {\n             let bit = 1 << val;"}, {"sha": "dceecee6ca74b0ad6fee883032889bf00a70c502", "filename": "src/test/compile-fail/issue-14285.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-14285.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-14285.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14285.rs?ref=090669d9cd85aa3c1a82c201f3931903e3be747e", "patch": "@@ -19,7 +19,7 @@ impl Foo for A {}\n struct B<'a>(&'a (Foo+'a));\n \n fn foo<'a>(a: &Foo) -> B<'a> {\n-    B(a)    //~ ERROR cannot infer an appropriate lifetime\n+    B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n }\n \n fn main() {"}, {"sha": "a62e46820d3cb1cc64c14d7e3fecea811835c2b2", "filename": "src/test/compile-fail/issue-15034.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-15034.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-15034.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15034.rs?ref=090669d9cd85aa3c1a82c201f3931903e3be747e", "patch": "@@ -25,7 +25,7 @@ struct Parser<'a> {\n impl<'a> Parser<'a> {\n     pub fn new(lexer: &'a mut Lexer) -> Parser<'a> {\n         Parser { lexer: lexer }\n-        //~^ ERROR cannot infer an appropriate lifetime\n+        //~^ ERROR 27:25: 27:30: explicit lifetime required in the type of `lexer` [E0621]\n     }\n }\n "}, {"sha": "519e9d06d1b33c1c4558ed19b86f534aa03cce6a", "filename": "src/test/compile-fail/issue-3154.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-3154.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fissue-3154.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3154.rs?ref=090669d9cd85aa3c1a82c201f3931903e3be747e", "patch": "@@ -13,7 +13,7 @@ struct thing<'a, Q:'a> {\n }\n \n fn thing<'a,Q>(x: &Q) -> thing<'a,Q> {\n-    thing{ x: x } //~ ERROR cannot infer\n+    thing{ x: x } //~ ERROR 16:5: 16:18: explicit lifetime required in the type of `x` [E0621]\n }\n \n fn main() {"}, {"sha": "843c5f512f8f17d181986ca788ba4584f44a538a", "filename": "src/test/compile-fail/regions-glb-free-free.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fregions-glb-free-free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fregions-glb-free-free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-glb-free-free.rs?ref=090669d9cd85aa3c1a82c201f3931903e3be747e", "patch": "@@ -22,7 +22,7 @@ mod argparse {\n \n     impl<'a> Flag<'a> {\n         pub fn set_desc(self, s: &str) -> Flag<'a> {\n-            Flag { //~ ERROR cannot infer\n+            Flag { //~ ERROR 25:13: 30:14: explicit lifetime required in the type of `s` [E0621]\n                 name: self.name,\n                 desc: s,\n                 max_count: self.max_count,"}, {"sha": "bc9eab2be821bf153bab93d29411cfcacd51a821", "filename": "src/test/compile-fail/variance-trait-matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090669d9cd85aa3c1a82c201f3931903e3be747e/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs?ref=090669d9cd85aa3c1a82c201f3931903e3be747e", "patch": "@@ -31,7 +31,7 @@ fn get<'a, G>(get: &G) -> i32\n     // This fails to type-check because, without variance, we can't\n     // use `G : Get<&'a i32>` as evidence that `G : Get<&'b i32>`,\n     // even if `'a : 'b`.\n-    pick(get, &22) //~ ERROR cannot infer\n+    pick(get, &22) //~ ERROR 34:5: 34:9: explicit lifetime required in the type of `get` [E0621]\n }\n \n fn pick<'b, G>(get: &'b G, if_odd: &'b i32) -> i32"}]}