{"sha": "332a3cb169aa41c961fdc2244b005bc31a2e9a74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMmEzY2IxNjlhYTQxYzk2MWZkYzIyNDRiMDA1YmMzMWEyZTlhNzQ=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-11-10T03:42:29Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-01T06:26:29Z"}, "message": "More testing for generic associated types parsing", "tree": {"sha": "d2d21c0c2adad3ef8ceb7ffe2206be593a347e1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2d21c0c2adad3ef8ceb7ffe2206be593a347e1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/332a3cb169aa41c961fdc2244b005bc31a2e9a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/332a3cb169aa41c961fdc2244b005bc31a2e9a74", "html_url": "https://github.com/rust-lang/rust/commit/332a3cb169aa41c961fdc2244b005bc31a2e9a74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/332a3cb169aa41c961fdc2244b005bc31a2e9a74/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83efebc5393624072526720b62f03e1c1f5e7b25", "url": "https://api.github.com/repos/rust-lang/rust/commits/83efebc5393624072526720b62f03e1c1f5e7b25", "html_url": "https://github.com/rust-lang/rust/commit/83efebc5393624072526720b62f03e1c1f5e7b25"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "269e5dc26fc8e2895255df8bb974882622657183", "filename": "src/test/run-pass/rfc1598-generic-associated-types/generic-associated-types-where.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs?ref=332a3cb169aa41c961fdc2244b005bc31a2e9a74", "previous_filename": "src/test/run-pass/rfc1598-generic-associated-types/where.rs"}, {"sha": "58ec14d10756eef9679f182677db07182ffb81da", "filename": "src/test/run-pass/rfc1598-generic-associated-types/streaming_iterator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs?ref=332a3cb169aa41c961fdc2244b005bc31a2e9a74", "patch": "@@ -25,7 +25,8 @@ struct Foo<T: StreamingIterator> {\n \n // Users can bound parameters by the type constructed by that trait's associated type constructor\n // of a trait using HRTB. Both type equality bounds and trait bounds of this kind are valid:\n-//fn foo<T: for<'a> StreamingIterator<Item<'a>=&'a [i32]>>(iter: T) { ... }\n+//FIXME(sunjay): This next line should parse and be valid\n+//fn foo<T: for<'a> StreamingIterator<Item<'a>=&'a [i32]>>(iter: T) { /* ... */ }\n fn foo<T>(iter: T) where T: StreamingIterator, for<'a> T::Item<'a>: Display { /* ... */ }\n \n fn main() {}"}, {"sha": "892a925f3d5696689ea455802989389c8c9f81d6", "filename": "src/test/run-pass/rfc1598-generic-associated-types/whitespace-before-generics.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhitespace-before-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhitespace-before-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhitespace-before-generics.rs?ref=332a3cb169aa41c961fdc2244b005bc31a2e9a74", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generic_associated_types)]\n+\n+// Checking the interaction with this other feature\n+#![feature(associated_type_defaults)]\n+\n+use std::fmt::{Display, Debug};\n+\n+trait Foo {\n+    type Assoc where Self: Sized;\n+    type Assoc2 <T >where T: Display;\n+    type WithDefault <T> = Iterator <Item=T> where T: Debug;\n+    // No generics on this associated type\n+    type NoGenerics;\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    type Assoc = usize;\n+    type Assoc2 <T> = Vec<T>;\n+    type WithDefault<'a, T> = &'a Iterator<T>;\n+    type NoGenerics = f64;\n+}\n+\n+fn main() {}"}, {"sha": "a80875d28b3a7a96444408deabae1474be2d8768", "filename": "src/test/ui/rfc1598-generic-associated-types/empty_generics.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs?ref=332a3cb169aa41c961fdc2244b005bc31a2e9a74", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generic_associated_types)]\n+\n+trait Foo {\n+    type Bar<,>;\n+}\n+\n+fn main() {}"}, {"sha": "6cb2aaf47ae3770be7c250c011063f8c7f5ddc19", "filename": "src/test/ui/rfc1598-generic-associated-types/generic_associated_types_equals.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332a3cb169aa41c961fdc2244b005bc31a2e9a74/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.rs?ref=332a3cb169aa41c961fdc2244b005bc31a2e9a74", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generic_associated_types)]\n+\n+trait Foo {\n+    type Bar<T=usize>;\n+    type X<T> where T = f64;\n+}\n+\n+fn main() {}"}]}