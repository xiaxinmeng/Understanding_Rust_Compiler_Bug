{"sha": "ce37099bd3cc05568c09fa7c1f06c80efd64c905", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMzcwOTliZDNjYzA1NTY4YzA5ZmE3YzFmMDZjODBlZmQ2NGM5MDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-27T23:39:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-27T23:39:41Z"}, "message": "Auto merge of #7140 - matthiaskrgr:ice_std, r=llogiq\n\nfix ice when checking rustc libstd\n\n```\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', src/tools/clippy/clippy_lints/src/matches.rs:1595:53\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n```\n\nI don't have a minimised testcase because I don't have time to reduce libstd down to a few lines right now.\n\n---\nchangelog: fix index out of bounds access when checking rustc libstd", "tree": {"sha": "c026a1cef7164b610a60a185c69def9ed72abba9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c026a1cef7164b610a60a185c69def9ed72abba9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce37099bd3cc05568c09fa7c1f06c80efd64c905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce37099bd3cc05568c09fa7c1f06c80efd64c905", "html_url": "https://github.com/rust-lang/rust/commit/ce37099bd3cc05568c09fa7c1f06c80efd64c905", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce37099bd3cc05568c09fa7c1f06c80efd64c905/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c7683c8efe447b251d6c5ca6cce51233060f6e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c7683c8efe447b251d6c5ca6cce51233060f6e8", "html_url": "https://github.com/rust-lang/rust/commit/7c7683c8efe447b251d6c5ca6cce51233060f6e8"}, {"sha": "572c405da063d2628378b74a8f659ce90e0e7779", "url": "https://api.github.com/repos/rust-lang/rust/commits/572c405da063d2628378b74a8f659ce90e0e7779", "html_url": "https://github.com/rust-lang/rust/commit/572c405da063d2628378b74a8f659ce90e0e7779"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c7a25095bf6faca7cd0c427bcafb9979c6fe7f12", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce37099bd3cc05568c09fa7c1f06c80efd64c905/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce37099bd3cc05568c09fa7c1f06c80efd64c905/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=ce37099bd3cc05568c09fa7c1f06c80efd64c905", "patch": "@@ -1590,9 +1590,9 @@ fn is_none_arm(cx: &LateContext<'_>, arm: &Arm<'_>) -> bool {\n // Checks if arm has the form `Some(ref v) => Some(v)` (checks for `ref` and `ref mut`)\n fn is_ref_some_arm(cx: &LateContext<'_>, arm: &Arm<'_>) -> Option<BindingAnnotation> {\n     if_chain! {\n-        if let PatKind::TupleStruct(ref qpath, pats, _) = arm.pat.kind;\n+        if let PatKind::TupleStruct(ref qpath, [first_pat, ..], _) = arm.pat.kind;\n         if is_lang_ctor(cx, qpath, OptionSome);\n-        if let PatKind::Binding(rb, .., ident, _) = pats[0].kind;\n+        if let PatKind::Binding(rb, .., ident, _) = first_pat.kind;\n         if rb == BindingAnnotation::Ref || rb == BindingAnnotation::RefMut;\n         if let ExprKind::Call(e, args) = remove_blocks(arm.body).kind;\n         if let ExprKind::Path(ref some_path) = e.kind;"}]}