{"sha": "5fb72107999cd32ce809700ac60e35ccb749253f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYjcyMTA3OTk5Y2QzMmNlODA5NzAwYWM2MGUzNWNjYjc0OTI1M2Y=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-26T20:11:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-26T20:11:33Z"}, "message": "Rollup merge of #72581 - samrat:allow-desugared-break-in-labeled-block, r=davidtwco\n\nAllow unlabeled breaks from desugared `?` in labeled blocks\n\n`?` is desugared into a `break` targeting the innermost `try` scope in which it resides. The `break` however will not have a label. https://github.com/rust-lang/rust/blob/master/src/librustc_ast_lowering/expr.rs#L1560\n\nSince the `target` of the `break` is known, the compiler should not complain about an unlabeled jump for `break`s desugared from `?`.\n\nCloses https://github.com/rust-lang/rust/issues/72483", "tree": {"sha": "df4564f464a8809b4f1a7c295d56ef1223188b33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df4564f464a8809b4f1a7c295d56ef1223188b33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fb72107999cd32ce809700ac60e35ccb749253f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJezXf1CRBK7hj4Ov3rIwAAdHIIACMOPrZWMJNPrh9Y4IHMotx3\nq6XLn81xPYHceQPdIvVPwFyhlNHT70gTUpNUjLx4hBesCpbAmqBhEuiDI7N1Bl/t\nXekGVv2ypqi91xPTMBA9DoB7hibYAOgOuDVGsxQ8NbxxT9ECoUhHQVUEHWmWoCgZ\nZueeBv0ug+1sYT/IBr7I13M6RWuABmMyayK3Glz3vzLaCQK+AAp7AcoEPTORYeBI\nGMSW/9nwG11WBVUq+W2MtHjPwd++m+IwrZ4bl+woT9vNAdI9slEBDjXNy581rQRF\nAHJDhyTShqZ7Z6xO++hdiebTJqL31Yn3/uRZkfmJWlIluvaIB6LC1DMYrzlbkJU=\n=f4fp\n-----END PGP SIGNATURE-----\n", "payload": "tree df4564f464a8809b4f1a7c295d56ef1223188b33\nparent 401b3aefe94723df7c55965f128f83a9f7b233ab\nparent 91dcbbbf50baa02d0757085bb5a9bd69bae5a5a4\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590523893 +0200\ncommitter GitHub <noreply@github.com> 1590523893 +0200\n\nRollup merge of #72581 - samrat:allow-desugared-break-in-labeled-block, r=davidtwco\n\nAllow unlabeled breaks from desugared `?` in labeled blocks\n\n`?` is desugared into a `break` targeting the innermost `try` scope in which it resides. The `break` however will not have a label. https://github.com/rust-lang/rust/blob/master/src/librustc_ast_lowering/expr.rs#L1560\n\nSince the `target` of the `break` is known, the compiler should not complain about an unlabeled jump for `break`s desugared from `?`.\n\nCloses https://github.com/rust-lang/rust/issues/72483\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb72107999cd32ce809700ac60e35ccb749253f", "html_url": "https://github.com/rust-lang/rust/commit/5fb72107999cd32ce809700ac60e35ccb749253f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fb72107999cd32ce809700ac60e35ccb749253f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "401b3aefe94723df7c55965f128f83a9f7b233ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/401b3aefe94723df7c55965f128f83a9f7b233ab", "html_url": "https://github.com/rust-lang/rust/commit/401b3aefe94723df7c55965f128f83a9f7b233ab"}, {"sha": "91dcbbbf50baa02d0757085bb5a9bd69bae5a5a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/91dcbbbf50baa02d0757085bb5a9bd69bae5a5a4", "html_url": "https://github.com/rust-lang/rust/commit/91dcbbbf50baa02d0757085bb5a9bd69bae5a5a4"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "767a6909d31d44f26b53a5d54dc933ae5b660be5", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5fb72107999cd32ce809700ac60e35ccb749253f/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fb72107999cd32ce809700ac60e35ccb749253f/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=5fb72107999cd32ce809700ac60e35ccb749253f", "patch": "@@ -9,6 +9,7 @@ use rustc_middle::hir::map::Map;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::Session;\n+use rustc_span::hygiene::DesugaringKind;\n use rustc_span::Span;\n \n #[derive(Clone, Copy, Debug, PartialEq)]\n@@ -203,7 +204,7 @@ impl<'a, 'hir> CheckLoopVisitor<'a, 'hir> {\n         label: &Destination,\n         cf_type: &str,\n     ) -> bool {\n-        if self.cx == LabeledBlock {\n+        if !span.is_desugaring(DesugaringKind::QuestionMark) && self.cx == LabeledBlock {\n             if label.label.is_none() {\n                 struct_span_err!(\n                     self.sess,"}, {"sha": "de883b61111ce5f8d3d962cbc4771e77199e947c", "filename": "src/test/ui/label/label_break_value_desugared_break.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5fb72107999cd32ce809700ac60e35ccb749253f/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_desugared_break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fb72107999cd32ce809700ac60e35ccb749253f/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_desugared_break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_desugared_break.rs?ref=5fb72107999cd32ce809700ac60e35ccb749253f", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: --edition 2018\n+#![feature(label_break_value, try_blocks)]\n+\n+// run-pass\n+fn main() {\n+    let _: Result<(), ()> = try {\n+        'foo: {\n+            Err(())?;\n+            break 'foo;\n+        }\n+    };\n+}"}]}