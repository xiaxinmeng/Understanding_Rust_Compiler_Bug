{"sha": "65d5c083377645a115c4ac23a620d3581b9562b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZDVjMDgzMzc3NjQ1YTExNWM0YWMyM2E2MjBkMzU4MWI5NTYyYjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-29T23:26:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-29T23:26:34Z"}, "message": "Auto merge of #28702 - arielb1:metadata-versioning, r=nrc\n\nThis prevents ICEs when old crates are used with a new version of\r\nrustc. Currently, the linking of crates compiled with different\r\nversions of rustc is completely unsupported.\r\n\r\nFixes #28700\r\n\r\nr? @nrc", "tree": {"sha": "55f31a471bc9bb903d0ee75cf3a9324c39943944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55f31a471bc9bb903d0ee75cf3a9324c39943944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65d5c083377645a115c4ac23a620d3581b9562b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65d5c083377645a115c4ac23a620d3581b9562b6", "html_url": "https://github.com/rust-lang/rust/commit/65d5c083377645a115c4ac23a620d3581b9562b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65d5c083377645a115c4ac23a620d3581b9562b6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59eb44407652f5b66a66231f12f66f89c5df5c5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/59eb44407652f5b66a66231f12f66f89c5df5c5f", "html_url": "https://github.com/rust-lang/rust/commit/59eb44407652f5b66a66231f12f66f89c5df5c5f"}, {"sha": "f2d5ebeae94c78799b4e4d2f8fd5c526df87e949", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949", "html_url": "https://github.com/rust-lang/rust/commit/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "5ed7f4113ec91648d2c3d042af85370335a537c0", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=65d5c083377645a115c4ac23a620d3581b9562b6", "patch": "@@ -2074,4 +2074,5 @@ register_diagnostics! {\n     E0495, // cannot infer an appropriate lifetime due to conflicting requirements\n     E0496, // .. name `..` shadows a .. name that is already in scope\n     E0498, // malformed plugin attribute\n+    E0514, // metadata version mismatch\n }"}, {"sha": "bc54d9ff133963791757734a8805056394a1c239", "filename": "src/librustc/metadata/common.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcommon.rs?ref=65d5c083377645a115c4ac23a620d3581b9562b6", "patch": "@@ -259,3 +259,11 @@ pub const tag_defaulted_trait: usize = 0xa4;\n pub const tag_impl_coerce_unsized_kind: usize = 0xa5;\n \n pub const tag_items_data_item_constness: usize = 0xa6;\n+\n+pub const tag_rustc_version: usize = 0x10f;\n+pub fn rustc_version() -> String {\n+    format!(\n+        \"rustc {}\",\n+        option_env!(\"CFG_VERSION\").unwrap_or(\"unknown version\")\n+    )\n+}"}, {"sha": "04f164c296d2e984bda7f52e71ba77d9fa205fd0", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=65d5c083377645a115c4ac23a620d3581b9562b6", "patch": "@@ -15,6 +15,7 @@\n use back::svh::Svh;\n use session::{config, Session};\n use session::search_paths::PathKind;\n+use metadata::common::rustc_version;\n use metadata::cstore;\n use metadata::cstore::{CStore, CrateSource, MetadataBlob};\n use metadata::decoder;\n@@ -270,6 +271,24 @@ impl<'a> CrateReader<'a> {\n         return ret;\n     }\n \n+    fn verify_rustc_version(&self,\n+                            name: &str,\n+                            span: Span,\n+                            metadata: &MetadataBlob) {\n+        let crate_rustc_version = decoder::crate_rustc_version(metadata.as_slice());\n+        if crate_rustc_version != Some(rustc_version()) {\n+            span_err!(self.sess, span, E0514,\n+                      \"the crate `{}` has been compiled with {}, which is \\\n+                       incompatible with this version of rustc\",\n+                      name,\n+                      crate_rustc_version\n+                          .as_ref().map(|s|&**s)\n+                          .unwrap_or(\"an old version of rustc\")\n+            );\n+            self.sess.abort_if_errors();\n+        }\n+    }\n+\n     fn register_crate(&mut self,\n                       root: &Option<CratePaths>,\n                       ident: &str,\n@@ -279,6 +298,8 @@ impl<'a> CrateReader<'a> {\n                       explicitly_linked: bool)\n                       -> (ast::CrateNum, Rc<cstore::crate_metadata>,\n                           cstore::CrateSource) {\n+        self.verify_rustc_version(name, span, &lib.metadata);\n+\n         // Claim this crate number and cache it\n         let cnum = self.next_crate_num;\n         self.next_crate_num += 1;"}, {"sha": "648ebdefffe6cca3f7735fd081e3ab9dde76145e", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=65d5c083377645a115c4ac23a620d3581b9562b6", "patch": "@@ -77,6 +77,11 @@ pub fn load_index(data: &[u8]) -> index::Index {\n     index::Index::from_buf(index.data, index.start, index.end)\n }\n \n+pub fn crate_rustc_version(data: &[u8]) -> Option<String> {\n+    let doc = rbml::Doc::new(data);\n+    reader::maybe_get_doc(doc, tag_rustc_version).map(|s| s.as_str())\n+}\n+\n #[derive(Debug, PartialEq)]\n enum Family {\n     ImmStatic,             // c"}, {"sha": "8acdc7e8ce2baad767eba6a86e86e9ae36480f66", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=65d5c083377645a115c4ac23a620d3581b9562b6", "patch": "@@ -1923,6 +1923,10 @@ fn encode_hash(rbml_w: &mut Encoder, hash: &Svh) {\n     rbml_w.wr_tagged_str(tag_crate_hash, hash.as_str());\n }\n \n+fn encode_rustc_version(rbml_w: &mut Encoder) {\n+    rbml_w.wr_tagged_str(tag_rustc_version, &rustc_version());\n+}\n+\n fn encode_crate_name(rbml_w: &mut Encoder, crate_name: &str) {\n     rbml_w.wr_tagged_str(tag_crate_crate_name, crate_name);\n }\n@@ -2051,6 +2055,7 @@ fn encode_metadata_inner(wr: &mut Cursor<Vec<u8>>,\n \n     let mut rbml_w = Encoder::new(wr);\n \n+    encode_rustc_version(&mut rbml_w);\n     encode_crate_name(&mut rbml_w, &ecx.link_meta.crate_name);\n     encode_crate_triple(&mut rbml_w, &tcx.sess.opts.target_triple);\n     encode_hash(&mut rbml_w, &ecx.link_meta.crate_hash);"}, {"sha": "13e8fddf77912afd90bfa3d781a2ae34edf87f90", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d5c083377645a115c4ac23a620d3581b9562b6/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=65d5c083377645a115c4ac23a620d3581b9562b6", "patch": "@@ -244,7 +244,7 @@ impl OverloadedCallType {\n // can just use the tcx as the typer.\n //\n // FIXME(stage0): the :'t here is probably only important for stage0\n-pub struct ExprUseVisitor<'d, 't, 'a: 't, 'tcx:'a+'d+'t> {\n+pub struct ExprUseVisitor<'d, 't, 'a: 't, 'tcx:'a+'d> {\n     typer: &'t infer::InferCtxt<'a, 'tcx>,\n     mc: mc::MemCategorizationContext<'t, 'a, 'tcx>,\n     delegate: &'d mut Delegate<'tcx>,\n@@ -278,7 +278,7 @@ enum PassArgs {\n impl<'d,'t,'a,'tcx> ExprUseVisitor<'d,'t,'a,'tcx> {\n     pub fn new(delegate: &'d mut Delegate<'tcx>,\n                typer: &'t infer::InferCtxt<'a, 'tcx>)\n-               -> ExprUseVisitor<'d,'t,'a,'tcx>\n+               -> ExprUseVisitor<'d,'t,'a,'tcx> where 'tcx:'a\n     {\n         ExprUseVisitor {\n             typer: typer,"}]}