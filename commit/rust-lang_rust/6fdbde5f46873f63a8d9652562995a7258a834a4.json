{"sha": "6fdbde5f46873f63a8d9652562995a7258a834a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZGJkZTVmNDY4NzNmNjNhOGQ5NjUyNTYyOTk1YTcyNThhODM0YTQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-09-26T13:15:35Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T09:58:59Z"}, "message": "Split the \"raw integer bytes\" part out of `Scalar`", "tree": {"sha": "f3c1ca13f22b9799058d0e0cfc7f241178b38834", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3c1ca13f22b9799058d0e0cfc7f241178b38834"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fdbde5f46873f63a8d9652562995a7258a834a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fdbde5f46873f63a8d9652562995a7258a834a4", "html_url": "https://github.com/rust-lang/rust/commit/6fdbde5f46873f63a8d9652562995a7258a834a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fdbde5f46873f63a8d9652562995a7258a834a4/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a18963f28f8e190b89e4b1237e9ff7e25852771", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a18963f28f8e190b89e4b1237e9ff7e25852771", "html_url": "https://github.com/rust-lang/rust/commit/8a18963f28f8e190b89e4b1237e9ff7e25852771"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "b54d2654579f70f75845b706b66af873b72df2e2", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6fdbde5f46873f63a8d9652562995a7258a834a4/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fdbde5f46873f63a8d9652562995a7258a834a4/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=6fdbde5f46873f63a8d9652562995a7258a834a4", "patch": "@@ -8,8 +8,9 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{BinOp, BinOpKind, Block, Expr, ExprKind, HirId, QPath, UnOp};\n use rustc_lint::LateContext;\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{self, Ty, TyCtxt, ScalarInt};\n use rustc_middle::{bug, span_bug};\n+use rustc_middle::mir::interpret::Scalar;\n use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n use std::convert::TryInto;\n@@ -500,21 +501,21 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n }\n \n pub fn miri_to_const(result: &ty::Const<'_>) -> Option<Constant> {\n-    use rustc_middle::mir::interpret::{ConstValue, Scalar};\n+    use rustc_middle::mir::interpret::{ConstValue};\n     match result.val {\n-        ty::ConstKind::Value(ConstValue::Scalar(Scalar::Raw { data: d, .. })) => {\n+        ty::ConstKind::Value(ConstValue::Scalar(Scalar::Raw(int))) => {\n             match result.ty.kind() {\n-                ty::Bool => Some(Constant::Bool(d == 1)),\n-                ty::Uint(_) | ty::Int(_) => Some(Constant::Int(d)),\n+                ty::Bool => Some(Constant::Bool(int == ScalarInt::TRUE)),\n+                ty::Uint(_) | ty::Int(_) => Some(Constant::Int(int.assert_bits(int.size()))),\n                 ty::Float(FloatTy::F32) => Some(Constant::F32(f32::from_bits(\n-                    d.try_into().expect(\"invalid f32 bit representation\"),\n+                    int.try_into().expect(\"invalid f32 bit representation\"),\n                 ))),\n                 ty::Float(FloatTy::F64) => Some(Constant::F64(f64::from_bits(\n-                    d.try_into().expect(\"invalid f64 bit representation\"),\n+                    int.try_into().expect(\"invalid f64 bit representation\"),\n                 ))),\n                 ty::RawPtr(type_and_mut) => {\n                     if let ty::Uint(_) = type_and_mut.ty.kind() {\n-                        return Some(Constant::RawPtr(d));\n+                        return Some(Constant::RawPtr(int.assert_bits(int.size())));\n                     }\n                     None\n                 },"}]}