{"sha": "5b8f9c5fe238500fcbe7c3e432ea623370058524", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViOGY5YzVmZTIzODUwMGZjYmU3YzNlNDMyZWE2MjMzNzAwNTg1MjQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-02-15T09:52:26Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-12T16:01:35Z"}, "message": "Make CStore thread-safe", "tree": {"sha": "79ddcf58d930bcb156e4080be8932de5a44b20cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79ddcf58d930bcb156e4080be8932de5a44b20cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b8f9c5fe238500fcbe7c3e432ea623370058524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8f9c5fe238500fcbe7c3e432ea623370058524", "html_url": "https://github.com/rust-lang/rust/commit/5b8f9c5fe238500fcbe7c3e432ea623370058524", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b8f9c5fe238500fcbe7c3e432ea623370058524/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4edb539159f26c366d6b0606a20e66fe727b78ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/4edb539159f26c366d6b0606a20e66fe727b78ec", "html_url": "https://github.com/rust-lang/rust/commit/4edb539159f26c366d6b0606a20e66fe727b78ec"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "bd5ad93946e3cf9a10f9531fb423af50942cbc4a", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5b8f9c5fe238500fcbe7c3e432ea623370058524/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8f9c5fe238500fcbe7c3e432ea623370058524/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=5b8f9c5fe238500fcbe7c3e432ea623370058524", "patch": "@@ -89,21 +89,23 @@ pub struct CrateMetadata {\n }\n \n pub struct CStore {\n-    metas: RefCell<IndexVec<CrateNum, Option<Lrc<CrateMetadata>>>>,\n+    metas: RwLock<IndexVec<CrateNum, Option<Lrc<CrateMetadata>>>>,\n     /// Map from NodeId's of local extern crate statements to crate numbers\n-    extern_mod_crate_map: RefCell<NodeMap<CrateNum>>,\n+    extern_mod_crate_map: Lock<NodeMap<CrateNum>>,\n     pub metadata_loader: Box<MetadataLoader + Sync>,\n }\n \n impl CStore {\n     pub fn new(metadata_loader: Box<MetadataLoader + Sync>) -> CStore {\n         CStore {\n-            metas: RefCell::new(IndexVec::new()),\n-            extern_mod_crate_map: RefCell::new(FxHashMap()),\n+            metas: RwLock::new(IndexVec::new()),\n+            extern_mod_crate_map: Lock::new(FxHashMap()),\n             metadata_loader,\n         }\n     }\n \n+    /// You cannot use this function to allocate a CrateNum in a thread-safe manner.\n+    /// It is currently only used in CrateLoader which is single-threaded code.\n     pub fn next_crate_num(&self) -> CrateNum {\n         CrateNum::new(self.metas.borrow().len() + 1)\n     }"}]}