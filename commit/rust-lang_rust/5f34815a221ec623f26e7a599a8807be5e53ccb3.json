{"sha": "5f34815a221ec623f26e7a599a8807be5e53ccb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMzQ4MTVhMjIxZWM2MjNmMjZlN2E1OTlhODgwN2JlNWU1M2NjYjM=", "commit": {"author": {"name": "Fenhl", "email": "fenhl@fenhl.net", "date": "2015-01-15T22:43:12Z"}, "committer": {"name": "Fenhl", "email": "fenhl@fenhl.net", "date": "2015-01-15T22:43:12Z"}, "message": "Fix sync::condvar::Condvar::notify_one docs", "tree": {"sha": "90fb1ccb854a19d7cf01f213ffa3c20979a317f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90fb1ccb854a19d7cf01f213ffa3c20979a317f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f34815a221ec623f26e7a599a8807be5e53ccb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f34815a221ec623f26e7a599a8807be5e53ccb3", "html_url": "https://github.com/rust-lang/rust/commit/5f34815a221ec623f26e7a599a8807be5e53ccb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f34815a221ec623f26e7a599a8807be5e53ccb3/comments", "author": {"login": "fenhl", "id": 641386, "node_id": "MDQ6VXNlcjY0MTM4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/641386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenhl", "html_url": "https://github.com/fenhl", "followers_url": "https://api.github.com/users/fenhl/followers", "following_url": "https://api.github.com/users/fenhl/following{/other_user}", "gists_url": "https://api.github.com/users/fenhl/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenhl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenhl/subscriptions", "organizations_url": "https://api.github.com/users/fenhl/orgs", "repos_url": "https://api.github.com/users/fenhl/repos", "events_url": "https://api.github.com/users/fenhl/events{/privacy}", "received_events_url": "https://api.github.com/users/fenhl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fenhl", "id": 641386, "node_id": "MDQ6VXNlcjY0MTM4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/641386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenhl", "html_url": "https://github.com/fenhl", "followers_url": "https://api.github.com/users/fenhl/followers", "following_url": "https://api.github.com/users/fenhl/following{/other_user}", "gists_url": "https://api.github.com/users/fenhl/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenhl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenhl/subscriptions", "organizations_url": "https://api.github.com/users/fenhl/orgs", "repos_url": "https://api.github.com/users/fenhl/repos", "events_url": "https://api.github.com/users/fenhl/events{/privacy}", "received_events_url": "https://api.github.com/users/fenhl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ade482b3bdc7a967ca98f1f1138b596ef45191e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ade482b3bdc7a967ca98f1f1138b596ef45191e", "html_url": "https://github.com/rust-lang/rust/commit/9ade482b3bdc7a967ca98f1f1138b596ef45191e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2cc47197c74ef222a91b8cd91c9ece9252b1d552", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f34815a221ec623f26e7a599a8807be5e53ccb3/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f34815a221ec623f26e7a599a8807be5e53ccb3/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=5f34815a221ec623f26e7a599a8807be5e53ccb3", "patch": "@@ -173,7 +173,7 @@ impl Condvar {\n     /// be woken up from its call to `wait` or `wait_timeout`. Calls to\n     /// `notify_one` are not buffered in any way.\n     ///\n-    /// To wake up all threads, see `notify_one()`.\n+    /// To wake up all threads, see `notify_all()`.\n     #[stable]\n     pub fn notify_one(&self) { unsafe { self.inner.inner.notify_one() } }\n "}]}