{"sha": "a402fb27faabbe33f03d461d6684af4501db5ac4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MDJmYjI3ZmFhYmJlMzNmMDNkNDYxZDY2ODRhZjQ1MDFkYjVhYzQ=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-10-04T21:03:42Z"}, "committer": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-10-04T22:37:18Z"}, "message": "std::rt::uv::net: Handle `read_start` error\n\ncc #9605", "tree": {"sha": "b152f7975cd8e0d4dd25858d2c3ec7405f75d85c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b152f7975cd8e0d4dd25858d2c3ec7405f75d85c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a402fb27faabbe33f03d461d6684af4501db5ac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a402fb27faabbe33f03d461d6684af4501db5ac4", "html_url": "https://github.com/rust-lang/rust/commit/a402fb27faabbe33f03d461d6684af4501db5ac4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a402fb27faabbe33f03d461d6684af4501db5ac4/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5295f9c4713e77dbb8dfc76bc91e10fceaabbb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5295f9c4713e77dbb8dfc76bc91e10fceaabbb2", "html_url": "https://github.com/rust-lang/rust/commit/c5295f9c4713e77dbb8dfc76bc91e10fceaabbb2"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "2c27db982aa3100a53652a226b13778eb525093a", "filename": "src/libstd/rt/uv/net.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a402fb27faabbe33f03d461d6684af4501db5ac4/src%2Flibstd%2Frt%2Fuv%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a402fb27faabbe33f03d461d6684af4501db5ac4/src%2Flibstd%2Frt%2Fuv%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fnet.rs?ref=a402fb27faabbe33f03d461d6684af4501db5ac4", "patch": "@@ -14,7 +14,7 @@ use rt::uv::uvll;\n use rt::uv::uvll::*;\n use rt::uv::{AllocCallback, ConnectionCallback, ReadCallback, UdpReceiveCallback, UdpSendCallback};\n use rt::uv::{Loop, Watcher, Request, UvError, Buf, NativeHandle, NullCallback,\n-             status_to_maybe_uv_error};\n+             status_to_maybe_uv_error, vec_to_uv_buf};\n use rt::io::net::ip::{SocketAddr, Ipv4Addr, Ipv6Addr};\n use vec;\n use str;\n@@ -147,7 +147,18 @@ impl StreamWatcher {\n             data.read_cb = Some(cb);\n         }\n \n-        unsafe { uvll::read_start(self.native_handle(), alloc_cb, read_cb); }\n+        let ret = unsafe { uvll::read_start(self.native_handle(), alloc_cb, read_cb) };\n+\n+        if ret != 0 {\n+            // uvll::read_start failed, so read_cb will not be called.\n+            // Call it manually for scheduling.\n+            call_read_cb(self.native_handle(), ret as ssize_t);\n+        }\n+\n+        fn call_read_cb(stream: *uvll::uv_stream_t, errno: ssize_t) {\n+            #[fixed_stack_segment]; #[inline(never)];\n+            read_cb(stream, errno, vec_to_uv_buf(~[]));\n+        }\n \n         extern fn alloc_cb(stream: *uvll::uv_stream_t, suggested_size: size_t) -> Buf {\n             let mut stream_watcher: StreamWatcher = NativeHandle::from_native_handle(stream);"}]}