{"sha": "f195814df3209f57e31a9c3e42a08d0ea32e6f44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOTU4MTRkZjMyMDlmNTdlMzFhOWMzZTQyYTA4ZDBlYTMyZTZmNDQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-11T22:09:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T19:08:26Z"}, "message": "Begin removing vecs from #fmt", "tree": {"sha": "63b5cc5ce3d011a9a883a838400c5d9142c29478", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63b5cc5ce3d011a9a883a838400c5d9142c29478"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f195814df3209f57e31a9c3e42a08d0ea32e6f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f195814df3209f57e31a9c3e42a08d0ea32e6f44", "html_url": "https://github.com/rust-lang/rust/commit/f195814df3209f57e31a9c3e42a08d0ea32e6f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f195814df3209f57e31a9c3e42a08d0ea32e6f44/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a9766000ec60f2d381a8bc64cde1b7e9abc7c6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9766000ec60f2d381a8bc64cde1b7e9abc7c6b", "html_url": "https://github.com/rust-lang/rust/commit/8a9766000ec60f2d381a8bc64cde1b7e9abc7c6b"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "cabb6bec321d0109a120323585dc0d523e865347", "filename": "src/comp/syntax/ext/fmt.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f195814df3209f57e31a9c3e42a08d0ea32e6f44/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f195814df3209f57e31a9c3e42a08d0ea32e6f44/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs?ref=f195814df3209f57e31a9c3e42a08d0ea32e6f44", "patch": "@@ -35,14 +35,14 @@ fn expand_syntax_ext(cx: &ext_ctxt, sp: span, arg: @ast::expr,\n         cx.span_fatal(sp, msg);\n     }\n     let parse_fmt_err = bind parse_fmt_err_(cx, fmtspan, _);\n-    let pieces = parse_fmt_string(fmt, parse_fmt_err);\n+    let pieces = parse_fmt_string_ivec(fmt, parse_fmt_err);\n     ret pieces_to_expr(cx, sp, pieces, args);\n }\n \n // FIXME: A lot of these functions for producing expressions can probably\n // be factored out in common with other code that builds expressions.\n // FIXME: Cleanup the naming of these functions\n-fn pieces_to_expr(cx: &ext_ctxt, sp: span, pieces: vec[piece],\n+fn pieces_to_expr(cx: &ext_ctxt, sp: span, pieces: &[piece],\n                   args: &[@ast::expr]) -> @ast::expr {\n     fn make_new_lit(cx: &ext_ctxt, sp: span, lit: ast::lit_) -> @ast::expr {\n         let sp_lit = @{node: lit, span: sp};\n@@ -84,7 +84,7 @@ fn pieces_to_expr(cx: &ext_ctxt, sp: span, pieces: vec[piece],\n         ret @{id: cx.next_id(), node: callexpr, span: sp};\n     }\n     fn make_rec_expr(cx: &ext_ctxt, sp: span,\n-                     fields: vec[{ident: ast::ident, ex: @ast::expr}]) ->\n+                     fields: &[{ident: ast::ident, ex: @ast::expr}]) ->\n        @ast::expr {\n         let astfields: [ast::field] = ~[];\n         for field: {ident: ast::ident, ex: @ast::expr}  in fields {\n@@ -113,7 +113,7 @@ fn pieces_to_expr(cx: &ext_ctxt, sp: span, pieces: vec[piece],\n     // which tells the RT::conv* functions how to perform the conversion\n \n     fn make_rt_conv_expr(cx: &ext_ctxt, sp: span, cnv: &conv) -> @ast::expr {\n-        fn make_flags(cx: &ext_ctxt, sp: span, flags: vec[flag]) ->\n+        fn make_flags(cx: &ext_ctxt, sp: span, flags: &[flag]) ->\n            @ast::expr {\n             let flagexprs: [@ast::expr] = ~[];\n             for f: flag  in flags {\n@@ -169,12 +169,12 @@ fn pieces_to_expr(cx: &ext_ctxt, sp: span, pieces: vec[piece],\n                          width_expr: @ast::expr, precision_expr: @ast::expr,\n                          ty_expr: @ast::expr) -> @ast::expr {\n             ret make_rec_expr(cx, sp,\n-                              [{ident: \"flags\", ex: flags_expr},\n-                               {ident: \"width\", ex: width_expr},\n-                               {ident: \"precision\", ex: precision_expr},\n-                               {ident: \"ty\", ex: ty_expr}]);\n+                              ~[{ident: \"flags\", ex: flags_expr},\n+                                {ident: \"width\", ex: width_expr},\n+                                {ident: \"precision\", ex: precision_expr},\n+                                {ident: \"ty\", ex: ty_expr}]);\n         }\n-        let rt_conv_flags = make_flags(cx, sp, cnv.flags);\n+        let rt_conv_flags = make_flags(cx, sp, ivec::from_vec(cnv.flags));\n         let rt_conv_width = make_count(cx, sp, cnv.width);\n         let rt_conv_precision = make_count(cx, sp, cnv.precision);\n         let rt_conv_ty = make_ty(cx, sp, cnv.ty);"}, {"sha": "758e128feb9fafb0d050715e09b4d80c52387bbc", "filename": "src/lib/extfmt.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f195814df3209f57e31a9c3e42a08d0ea32e6f44/src%2Flib%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f195814df3209f57e31a9c3e42a08d0ea32e6f44/src%2Flib%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fextfmt.rs?ref=f195814df3209f57e31a9c3e42a08d0ea32e6f44", "patch": "@@ -239,6 +239,10 @@ mod ct {\n             } else { error(\"unknown type in conversion: \" + tstr) };\n         ret {ty: t, next: i + 1u};\n     }\n+\n+    fn parse_fmt_string_ivec(s: str, error: error_fn) -> [piece] {\n+        ivec::from_vec(parse_fmt_string(s, error))\n+    }\n }\n \n "}]}