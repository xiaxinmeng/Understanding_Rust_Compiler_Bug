{"sha": "60e5ad384e6b748a780148e9232b9bb44cd08cec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwZTVhZDM4NGU2Yjc0OGE3ODAxNDhlOTIzMmI5YmI0NGNkMDhjZWM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-10T23:49:36Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-10T23:49:36Z"}, "message": "Put out burning tinderbox on OSX.", "tree": {"sha": "af77eea66fd109028bb8682c656e161fbc2f58f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af77eea66fd109028bb8682c656e161fbc2f58f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60e5ad384e6b748a780148e9232b9bb44cd08cec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60e5ad384e6b748a780148e9232b9bb44cd08cec", "html_url": "https://github.com/rust-lang/rust/commit/60e5ad384e6b748a780148e9232b9bb44cd08cec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60e5ad384e6b748a780148e9232b9bb44cd08cec/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d2e94838ecd0043cc8dfbe2f19d16d9703c2890", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2e94838ecd0043cc8dfbe2f19d16d9703c2890", "html_url": "https://github.com/rust-lang/rust/commit/5d2e94838ecd0043cc8dfbe2f19d16d9703c2890"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "63cc67d0a275b04f07da08e833ca76e3393c6a8c", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60e5ad384e6b748a780148e9232b9bb44cd08cec/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/60e5ad384e6b748a780148e9232b9bb44cd08cec/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=60e5ad384e6b748a780148e9232b9bb44cd08cec", "patch": "@@ -398,6 +398,7 @@ TEST_XFAILS_X86 :=  $(TASK_XFAILS) \\\n                     test/run-pass/generic-recursive-tag.rs \\\n                     test/run-pass/int-lib.rs \\\n                     test/run-pass/iter-ret.rs \\\n+                    test/run-pass/lib-deque.rs \\\n                     test/run-pass/lib-map.rs \\\n                     test/run-pass/mlist-cycle.rs \\\n                     test/run-pass/obj-as.rs \\"}, {"sha": "f879027bac612ff9899165ad81e5a8bc36971d35", "filename": "src/boot/be/x86.ml", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/60e5ad384e6b748a780148e9232b9bb44cd08cec/src%2Fboot%2Fbe%2Fx86.ml", "raw_url": "https://github.com/rust-lang/rust/raw/60e5ad384e6b748a780148e9232b9bb44cd08cec/src%2Fboot%2Fbe%2Fx86.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fx86.ml?ref=60e5ad384e6b748a780148e9232b9bb44cd08cec", "patch": "@@ -311,14 +311,25 @@ let emit_target_specific\n                     Il.Mem (Il.next_spill_slot e\n                               (Il.ScalarTy (Il.operand_scalar_ty op)))\n                   in\n-                  let lhs_spill = next_spill_like lhs in\n-                  let rhs_spill = next_spill_like rhs in\n-\n-                    mov lhs_spill lhs;\n-                    mov rhs_spill rhs;\n-\n-                    mov lhs_eax (Il.Cell lhs_spill);\n-                    mov rhs_ecx (Il.Cell rhs_spill);\n+                  let is_eax cell =\n+                    match cell with\n+                        Il.Cell (Il.Reg (Il.Hreg hr, _)) -> hr = eax\n+                      | _ -> false\n+                  in                    \n+                    if is_eax lhs\n+                    then\n+                      mov rhs_ecx rhs\n+                    else\n+                      begin\n+                        let lhs_spill = next_spill_like lhs in\n+                        let rhs_spill = next_spill_like rhs in\n+\n+                          mov lhs_spill lhs;\n+                          mov rhs_spill rhs;\n+\n+                          mov lhs_eax (Il.Cell lhs_spill);\n+                          mov rhs_ecx (Il.Cell rhs_spill);\n+                      end;\n \n                     put (Il.Binary\n                            { b with"}]}