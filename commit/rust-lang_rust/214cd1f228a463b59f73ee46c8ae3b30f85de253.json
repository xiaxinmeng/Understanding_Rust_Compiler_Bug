{"sha": "214cd1f228a463b59f73ee46c8ae3b30f85de253", "node_id": "C_kwDOAAsO6NoAKDIxNGNkMWYyMjhhNDYzYjU5ZjczZWU0NmM4YWUzYjMwZjg1ZGUyNTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-09T08:21:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-09T08:21:10Z"}, "message": "Auto merge of #87337 - jyn514:lint-error, r=oli-obk,flip1995\n\nDon't abort compilation after giving a lint error\n\nThe only reason to use `abort_if_errors` is when the program is so broken that either:\n1. later passes get confused and ICE\n2. any diagnostics from later passes would be noise\n\nThis is never the case for lints, because the compiler has to be able to deal with `allow`-ed lints.\nSo it can continue to lint and compile even if there are lint errors.\n\nCloses https://github.com/rust-lang/rust/issues/82761. This is a WIP because I have a feeling it will exit with 0 even if there were lint errors; I don't have a computer that can build rustc locally at the moment.", "tree": {"sha": "14e0374a49bca45bd553d17d94ec6fb0c530e94d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14e0374a49bca45bd553d17d94ec6fb0c530e94d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/214cd1f228a463b59f73ee46c8ae3b30f85de253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/214cd1f228a463b59f73ee46c8ae3b30f85de253", "html_url": "https://github.com/rust-lang/rust/commit/214cd1f228a463b59f73ee46c8ae3b30f85de253", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/214cd1f228a463b59f73ee46c8ae3b30f85de253/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60952bc3da442cf2ea11dcc9c80a461a659bbcd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/60952bc3da442cf2ea11dcc9c80a461a659bbcd7", "html_url": "https://github.com/rust-lang/rust/commit/60952bc3da442cf2ea11dcc9c80a461a659bbcd7"}, {"sha": "ebf8966156ab5d2831dd4cd1b34bc5a906d0f895", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebf8966156ab5d2831dd4cd1b34bc5a906d0f895", "html_url": "https://github.com/rust-lang/rust/commit/ebf8966156ab5d2831dd4cd1b34bc5a906d0f895"}], "stats": {"total": 697, "additions": 486, "deletions": 211}, "files": [{"sha": "6187dbf4d1b5599428e3d7f4a3100a057afe49fb", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -286,7 +286,7 @@ fn report_inline_asm(\n         cookie = 0;\n     }\n     let level = match level {\n-        llvm::DiagnosticLevel::Error => Level::Error,\n+        llvm::DiagnosticLevel::Error => Level::Error { lint: false },\n         llvm::DiagnosticLevel::Warning => Level::Warning,\n         llvm::DiagnosticLevel::Note | llvm::DiagnosticLevel::Remark => Level::Note,\n     };"}, {"sha": "85d51ea9a207b1cfebe505d9203ee53e55dc9a35", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1757,7 +1757,7 @@ impl SharedEmitterMain {\n                     let msg = msg.strip_prefix(\"error: \").unwrap_or(&msg);\n \n                     let mut err = match level {\n-                        Level::Error => sess.struct_err(&msg),\n+                        Level::Error { lint: false } => sess.struct_err(&msg),\n                         Level::Warning => sess.struct_warn(&msg),\n                         Level::Note => sess.struct_note_without_error(&msg),\n                         _ => bug!(\"Invalid inline asm diagnostic level\"),"}, {"sha": "9db8f751390c110d3993b4468585211540e1c68d", "filename": "compiler/rustc_errors/src/annotate_snippet_emitter_writer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_errors%2Fsrc%2Fannotate_snippet_emitter_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_errors%2Fsrc%2Fannotate_snippet_emitter_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fannotate_snippet_emitter_writer.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -66,7 +66,7 @@ fn source_string(file: Lrc<SourceFile>, line: &Line) -> String {\n /// Maps `Diagnostic::Level` to `snippet::AnnotationType`\n fn annotation_type_for_level(level: Level) -> AnnotationType {\n     match level {\n-        Level::Bug | Level::Fatal | Level::Error => AnnotationType::Error,\n+        Level::Bug | Level::Fatal | Level::Error { .. } => AnnotationType::Error,\n         Level::Warning => AnnotationType::Warning,\n         Level::Note => AnnotationType::Note,\n         Level::Help => AnnotationType::Help,"}, {"sha": "e5116cd8dfed2c1b7ff840ec2a218900935fa620", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -114,7 +114,7 @@ impl Diagnostic {\n \n     pub fn is_error(&self) -> bool {\n         match self.level {\n-            Level::Bug | Level::Fatal | Level::Error | Level::FailureNote => true,\n+            Level::Bug | Level::Fatal | Level::Error { .. } | Level::FailureNote => true,\n \n             Level::Warning | Level::Note | Level::Help | Level::Cancelled | Level::Allow => false,\n         }"}, {"sha": "21a2eb771c8e2b7c282c5f0445bc38c9a4c0b632", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 39, "deletions": 9, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -411,6 +411,8 @@ pub struct Handler {\n /// as well as inconsistent state observation.\n struct HandlerInner {\n     flags: HandlerFlags,\n+    /// The number of lint errors that have been emitted.\n+    lint_err_count: usize,\n     /// The number of errors that have been emitted, including duplicates.\n     ///\n     /// This is not necessarily the count that's reported to the user once\n@@ -550,6 +552,7 @@ impl Handler {\n             flags,\n             inner: Lock::new(HandlerInner {\n                 flags,\n+                lint_err_count: 0,\n                 err_count: 0,\n                 warn_count: 0,\n                 deduplicated_err_count: 0,\n@@ -726,7 +729,13 @@ impl Handler {\n     /// Construct a builder at the `Error` level with the `msg`.\n     // FIXME: This method should be removed (every error should have an associated error code).\n     pub fn struct_err(&self, msg: &str) -> DiagnosticBuilder<'_> {\n-        DiagnosticBuilder::new(self, Level::Error, msg)\n+        DiagnosticBuilder::new(self, Level::Error { lint: false }, msg)\n+    }\n+\n+    /// This should only be used by `rustc_middle::lint::struct_lint_level`. Do not use it for hard errors.\n+    #[doc(hidden)]\n+    pub fn struct_err_lint(&self, msg: &str) -> DiagnosticBuilder<'_> {\n+        DiagnosticBuilder::new(self, Level::Error { lint: true }, msg)\n     }\n \n     /// Construct a builder at the `Error` level with the `msg` and the `code`.\n@@ -790,11 +799,14 @@ impl Handler {\n     }\n \n     pub fn span_err(&self, span: impl Into<MultiSpan>, msg: &str) {\n-        self.emit_diag_at_span(Diagnostic::new(Error, msg), span);\n+        self.emit_diag_at_span(Diagnostic::new(Error { lint: false }, msg), span);\n     }\n \n     pub fn span_err_with_code(&self, span: impl Into<MultiSpan>, msg: &str, code: DiagnosticId) {\n-        self.emit_diag_at_span(Diagnostic::new_with_code(Error, Some(code), msg), span);\n+        self.emit_diag_at_span(\n+            Diagnostic::new_with_code(Error { lint: false }, Some(code), msg),\n+            span,\n+        );\n     }\n \n     pub fn span_warn(&self, span: impl Into<MultiSpan>, msg: &str) {\n@@ -862,6 +874,9 @@ impl Handler {\n     pub fn has_errors(&self) -> bool {\n         self.inner.borrow().has_errors()\n     }\n+    pub fn has_errors_or_lint_errors(&self) -> bool {\n+        self.inner.borrow().has_errors_or_lint_errors()\n+    }\n     pub fn has_errors_or_delayed_span_bugs(&self) -> bool {\n         self.inner.borrow().has_errors_or_delayed_span_bugs()\n     }\n@@ -979,7 +994,11 @@ impl HandlerInner {\n             }\n         }\n         if diagnostic.is_error() {\n-            self.bump_err_count();\n+            if matches!(diagnostic.level, Level::Error { lint: true }) {\n+                self.bump_lint_err_count();\n+            } else {\n+                self.bump_err_count();\n+            }\n         } else {\n             self.bump_warn_count();\n         }\n@@ -1073,11 +1092,14 @@ impl HandlerInner {\n     fn has_errors(&self) -> bool {\n         self.err_count() > 0\n     }\n+    fn has_errors_or_lint_errors(&self) -> bool {\n+        self.has_errors() || self.lint_err_count > 0\n+    }\n     fn has_errors_or_delayed_span_bugs(&self) -> bool {\n         self.has_errors() || !self.delayed_span_bugs.is_empty()\n     }\n     fn has_any_message(&self) -> bool {\n-        self.err_count() > 0 || self.warn_count > 0\n+        self.err_count() > 0 || self.lint_err_count > 0 || self.warn_count > 0\n     }\n \n     fn abort_if_errors(&mut self) {\n@@ -1131,7 +1153,7 @@ impl HandlerInner {\n     }\n \n     fn err(&mut self, msg: &str) {\n-        self.emit_error(Error, msg);\n+        self.emit_error(Error { lint: false }, msg);\n     }\n \n     /// Emit an error; level should be `Error` or `Fatal`.\n@@ -1167,6 +1189,11 @@ impl HandlerInner {\n         }\n     }\n \n+    fn bump_lint_err_count(&mut self) {\n+        self.lint_err_count += 1;\n+        self.panic_if_treat_err_as_bug();\n+    }\n+\n     fn bump_err_count(&mut self) {\n         self.err_count += 1;\n         self.panic_if_treat_err_as_bug();\n@@ -1210,7 +1237,10 @@ impl DelayedDiagnostic {\n pub enum Level {\n     Bug,\n     Fatal,\n-    Error,\n+    Error {\n+        /// If this error comes from a lint, don't abort compilation even when abort_if_errors() is called.\n+        lint: bool,\n+    },\n     Warning,\n     Note,\n     Help,\n@@ -1229,7 +1259,7 @@ impl Level {\n     fn color(self) -> ColorSpec {\n         let mut spec = ColorSpec::new();\n         match self {\n-            Bug | Fatal | Error => {\n+            Bug | Fatal | Error { .. } => {\n                 spec.set_fg(Some(Color::Red)).set_intense(true);\n             }\n             Warning => {\n@@ -1250,7 +1280,7 @@ impl Level {\n     pub fn to_str(self) -> &'static str {\n         match self {\n             Bug => \"error: internal compiler error\",\n-            Fatal | Error => \"error\",\n+            Fatal | Error { .. } => \"error\",\n             Warning => \"warning\",\n             Note => \"note\",\n             Help => \"help\","}, {"sha": "66f6c008259005da2fc79fabf458e9271b893631", "filename": "compiler/rustc_expand/src/proc_macro_server.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -273,7 +273,7 @@ impl ToInternal<TokenStream> for TokenTree<Group, Punct, Ident, Literal> {\n impl ToInternal<rustc_errors::Level> for Level {\n     fn to_internal(self) -> rustc_errors::Level {\n         match self {\n-            Level::Error => rustc_errors::Level::Error,\n+            Level::Error => rustc_errors::Level::Error { lint: false },\n             Level::Warning => rustc_errors::Level::Warning,\n             Level::Note => rustc_errors::Level::Note,\n             Level::Help => rustc_errors::Level::Help,"}, {"sha": "0e70d49ef49d25faa9f12189bb36f4b394d4b220", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -248,8 +248,12 @@ pub fn struct_lint_level<'s, 'd>(\n             (Level::Warn, None) => sess.struct_warn(\"\"),\n             (Level::ForceWarn, Some(span)) => sess.struct_span_force_warn(span, \"\"),\n             (Level::ForceWarn, None) => sess.struct_force_warn(\"\"),\n-            (Level::Deny | Level::Forbid, Some(span)) => sess.struct_span_err(span, \"\"),\n-            (Level::Deny | Level::Forbid, None) => sess.struct_err(\"\"),\n+            (Level::Deny | Level::Forbid, Some(span)) => {\n+                let mut builder = sess.diagnostic().struct_err_lint(\"\");\n+                builder.set_span(span);\n+                builder\n+            }\n+            (Level::Deny | Level::Forbid, None) => sess.diagnostic().struct_err_lint(\"\"),\n         };\n \n         // If this code originates in a foreign macro, aka something that this crate"}, {"sha": "74b3cfa44c31aaa0e8847ddd5705daa841566e62", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -411,7 +411,7 @@ impl Session {\n         self.diagnostic().abort_if_errors();\n     }\n     pub fn compile_status(&self) -> Result<(), ErrorReported> {\n-        if self.has_errors() {\n+        if self.diagnostic().has_errors_or_lint_errors() {\n             self.diagnostic().emit_stashed_diagnostics();\n             Err(ErrorReported)\n         } else {"}, {"sha": "ed7c9e7b043ffa75c15750ded66974357b7cc553", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -468,11 +468,13 @@ crate fn run_global_ctxt(\n         };\n         if run {\n             debug!(\"running pass {}\", p.pass.name);\n-            krate = ctxt.tcx.sess.time(p.pass.name, || (p.pass.run)(krate, &mut ctxt));\n+            krate = tcx.sess.time(p.pass.name, || (p.pass.run)(krate, &mut ctxt));\n         }\n     }\n \n-    ctxt.sess().abort_if_errors();\n+    if tcx.sess.diagnostic().has_errors_or_lint_errors() {\n+        rustc_errors::FatalError.raise();\n+    }\n \n     let render_options = ctxt.render_options;\n     let mut cache = ctxt.cache;"}, {"sha": "c10eebf49fc8d657af5b333fcccf83af486d678d", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,7 +1,7 @@\n use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n-use rustc_errors::{ColorConfig, ErrorReported};\n+use rustc_errors::{ColorConfig, ErrorReported, FatalError};\n use rustc_hir as hir;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::intravisit;\n@@ -149,7 +149,9 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n \n                 collector\n             });\n-            compiler.session().abort_if_errors();\n+            if compiler.session().diagnostic().has_errors_or_lint_errors() {\n+                FatalError.raise();\n+            }\n \n             let unused_extern_reports = collector.unused_extern_reports.clone();\n             let compiling_test_count = collector.compiling_test_count.load(Ordering::SeqCst);"}, {"sha": "fb252a9c73934b1d243008634dc1caf02da0c047", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -776,7 +776,7 @@ fn main_options(options: config::Options) -> MainResult {\n             // current architecture.\n             let resolver = core::create_resolver(queries, sess);\n \n-            if sess.has_errors() {\n+            if sess.diagnostic().has_errors_or_lint_errors() {\n                 sess.fatal(\"Compilation failed, aborting rustdoc\");\n             }\n "}, {"sha": "0d04eb6fcfa968be6ad6f942561531619a719bda", "filename": "src/test/ui-fulldeps/lint-tool-test.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -10,10 +10,12 @@\n //~^ WARNING lint name `test_lint` is deprecated and may not have an effect in the future\n //~| WARNING lint name `test_lint` is deprecated and may not have an effect in the future\n //~| WARNING lint name `test_lint` is deprecated and may not have an effect in the future\n+//~| WARNING lint name `test_lint` is deprecated and may not have an effect in the future\n #![deny(clippy_group)]\n //~^ WARNING lint name `clippy_group` is deprecated and may not have an effect in the future\n //~| WARNING lint name `clippy_group` is deprecated and may not have an effect in the future\n //~| WARNING lint name `clippy_group` is deprecated and may not have an effect in the future\n+//~| WARNING lint name `clippy_group` is deprecated and may not have an effect in the future\n \n fn lintme() { } //~ ERROR item is named 'lintme'\n \n@@ -30,6 +32,7 @@ pub fn main() {\n //~^ WARNING lint name `test_group` is deprecated and may not have an effect in the future\n //~| WARNING lint name `test_group` is deprecated and may not have an effect in the future\n //~| WARNING lint name `test_group` is deprecated and may not have an effect in the future\n+//~| WARNING lint name `test_group` is deprecated and may not have an effect in the future\n #[deny(this_lint_does_not_exist)] //~ WARNING unknown lint: `this_lint_does_not_exist`\n fn hello() {\n     fn lintmetoo() { }"}, {"sha": "0f76384ed5ba5001d6325ea8407e1322a53e7222", "filename": "src/test/ui-fulldeps/lint-tool-test.stderr", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -7,19 +7,19 @@ LL | #![cfg_attr(foo, warn(test_lint))]\n    = note: `#[warn(renamed_and_removed_lints)]` on by default\n \n warning: lint name `clippy_group` is deprecated and may not have an effect in the future.\n-  --> $DIR/lint-tool-test.rs:13:9\n+  --> $DIR/lint-tool-test.rs:14:9\n    |\n LL | #![deny(clippy_group)]\n    |         ^^^^^^^^^^^^ help: change it to: `clippy::group`\n \n warning: lint name `test_group` is deprecated and may not have an effect in the future.\n-  --> $DIR/lint-tool-test.rs:29:9\n+  --> $DIR/lint-tool-test.rs:31:9\n    |\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n \n warning: unknown lint: `this_lint_does_not_exist`\n-  --> $DIR/lint-tool-test.rs:33:8\n+  --> $DIR/lint-tool-test.rs:36:8\n    |\n LL | #[deny(this_lint_does_not_exist)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -33,13 +33,13 @@ LL | #![cfg_attr(foo, warn(test_lint))]\n    |                       ^^^^^^^^^ help: change it to: `clippy::test_lint`\n \n warning: lint name `clippy_group` is deprecated and may not have an effect in the future.\n-  --> $DIR/lint-tool-test.rs:13:9\n+  --> $DIR/lint-tool-test.rs:14:9\n    |\n LL | #![deny(clippy_group)]\n    |         ^^^^^^^^^^^^ help: change it to: `clippy::group`\n \n warning: lint name `test_group` is deprecated and may not have an effect in the future.\n-  --> $DIR/lint-tool-test.rs:29:9\n+  --> $DIR/lint-tool-test.rs:31:9\n    |\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n@@ -59,42 +59,60 @@ LL | #![cfg_attr(foo, warn(test_lint))]\n    |                       ^^^^^^^^^ help: change it to: `clippy::test_lint`\n \n warning: lint name `clippy_group` is deprecated and may not have an effect in the future.\n-  --> $DIR/lint-tool-test.rs:13:9\n+  --> $DIR/lint-tool-test.rs:14:9\n    |\n LL | #![deny(clippy_group)]\n    |         ^^^^^^^^^^^^ help: change it to: `clippy::group`\n \n error: item is named 'lintme'\n-  --> $DIR/lint-tool-test.rs:18:1\n+  --> $DIR/lint-tool-test.rs:20:1\n    |\n LL | fn lintme() { }\n    | ^^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-tool-test.rs:13:9\n+  --> $DIR/lint-tool-test.rs:14:9\n    |\n LL | #![deny(clippy_group)]\n    |         ^^^^^^^^^^^^\n    = note: `#[deny(clippy::test_lint)]` implied by `#[deny(clippy::group)]`\n \n error: item is named 'lintmetoo'\n-  --> $DIR/lint-tool-test.rs:26:5\n+  --> $DIR/lint-tool-test.rs:28:5\n    |\n LL |     fn lintmetoo() { }\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-tool-test.rs:13:9\n+  --> $DIR/lint-tool-test.rs:14:9\n    |\n LL | #![deny(clippy_group)]\n    |         ^^^^^^^^^^^^\n    = note: `#[deny(clippy::test_group)]` implied by `#[deny(clippy::group)]`\n \n warning: lint name `test_group` is deprecated and may not have an effect in the future.\n-  --> $DIR/lint-tool-test.rs:29:9\n+  --> $DIR/lint-tool-test.rs:31:9\n    |\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n \n-error: aborting due to 2 previous errors; 11 warnings emitted\n+warning: lint name `test_lint` is deprecated and may not have an effect in the future.\n+  --> $DIR/lint-tool-test.rs:9:23\n+   |\n+LL | #![cfg_attr(foo, warn(test_lint))]\n+   |                       ^^^^^^^^^ help: change it to: `clippy::test_lint`\n+\n+warning: lint name `clippy_group` is deprecated and may not have an effect in the future.\n+  --> $DIR/lint-tool-test.rs:14:9\n+   |\n+LL | #![deny(clippy_group)]\n+   |         ^^^^^^^^^^^^ help: change it to: `clippy::group`\n+\n+warning: lint name `test_group` is deprecated and may not have an effect in the future.\n+  --> $DIR/lint-tool-test.rs:31:9\n+   |\n+LL | #[allow(test_group)]\n+   |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n+\n+error: aborting due to 2 previous errors; 14 warnings emitted\n "}, {"sha": "9bde2ca1942e64c09a188bc4d2a58f835ffaa762", "filename": "src/test/ui/deprecation/deprecation-lint.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -278,6 +278,7 @@ mod this_crate {\n         let _ = nested::DeprecatedStruct {\n             //~^ ERROR use of deprecated struct `this_crate::nested::DeprecatedStruct`: text\n             i: 0 //~ ERROR use of deprecated field `this_crate::nested::DeprecatedStruct::i`: text\n+            //~| ERROR field `i` of struct `this_crate::nested::DeprecatedStruct` is private\n         };\n \n         let _ = nested::DeprecatedUnitStruct; //~ ERROR use of deprecated unit struct `this_crate::nested::DeprecatedUnitStruct`: text"}, {"sha": "5d716fa625e5d47793dd0a2e878be4296b3a627f", "filename": "src/test/ui/deprecation/deprecation-lint.stderr", "status": "modified", "additions": 44, "deletions": 37, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -257,97 +257,97 @@ LL |         let _ = nested::DeprecatedStruct {\n    |                         ^^^^^^^^^^^^^^^^\n \n error: use of deprecated unit struct `this_crate::nested::DeprecatedUnitStruct`: text\n-  --> $DIR/deprecation-lint.rs:283:25\n+  --> $DIR/deprecation-lint.rs:284:25\n    |\n LL |         let _ = nested::DeprecatedUnitStruct;\n    |                         ^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated unit variant `this_crate::nested::Enum::DeprecatedVariant`: text\n-  --> $DIR/deprecation-lint.rs:285:31\n+  --> $DIR/deprecation-lint.rs:286:31\n    |\n LL | ...   let _ = nested::Enum::DeprecatedVariant;\n    |                             ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate::nested::DeprecatedTupleStruct`: text\n-  --> $DIR/deprecation-lint.rs:287:25\n+  --> $DIR/deprecation-lint.rs:288:25\n    |\n LL | ...   let _ = nested::DeprecatedTupleStruct (1);\n    |                       ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:292:16\n+  --> $DIR/deprecation-lint.rs:293:16\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:294:25\n+  --> $DIR/deprecation-lint.rs:295:25\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |                         ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:296:16\n+  --> $DIR/deprecation-lint.rs:297:16\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |                ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:298:25\n+  --> $DIR/deprecation-lint.rs:299:25\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |                       ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `this_crate::test_fn_closure_body::{closure#0}::bar`\n-  --> $DIR/deprecation-lint.rs:316:13\n+  --> $DIR/deprecation-lint.rs:317:13\n    |\n LL |             bar();\n    |             ^^^\n \n error: use of deprecated trait `this_crate::DeprecatedTrait`: text\n-  --> $DIR/deprecation-lint.rs:335:10\n+  --> $DIR/deprecation-lint.rs:336:10\n    |\n LL |     impl DeprecatedTrait for S { }\n    |          ^^^^^^^^^^^^^^^\n \n error: use of deprecated trait `this_crate::DeprecatedTrait`: text\n-  --> $DIR/deprecation-lint.rs:337:24\n+  --> $DIR/deprecation-lint.rs:338:24\n    |\n LL |     trait LocalTrait : DeprecatedTrait { }\n    |                        ^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `this_crate2::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:389:17\n+  --> $DIR/deprecation-lint.rs:390:17\n    |\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n \n error: use of deprecated struct `this_crate2::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:398:13\n+  --> $DIR/deprecation-lint.rs:399:13\n    |\n LL |         let Deprecated {\n    |             ^^^^^^^^^^\n \n error: use of deprecated struct `this_crate2::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:404:13\n+  --> $DIR/deprecation-lint.rs:405:13\n    |\n LL |         let Deprecated\n    |             ^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate2::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:409:17\n+  --> $DIR/deprecation-lint.rs:410:17\n    |\n LL |         let x = Deprecated2(1, 2, 3);\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate2::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:419:13\n+  --> $DIR/deprecation-lint.rs:420:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate2::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:428:13\n+  --> $DIR/deprecation-lint.rs:429:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n@@ -617,124 +617,131 @@ LL |             i: 0\n    |             ^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:291:13\n+  --> $DIR/deprecation-lint.rs:292:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:293:16\n+  --> $DIR/deprecation-lint.rs:294:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:295:13\n+  --> $DIR/deprecation-lint.rs:296:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:297:16\n+  --> $DIR/deprecation-lint.rs:298:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |                ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:302:13\n+  --> $DIR/deprecation-lint.rs:303:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:303:13\n+  --> $DIR/deprecation-lint.rs:304:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:362:13\n+  --> $DIR/deprecation-lint.rs:363:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:366:17\n+  --> $DIR/deprecation-lint.rs:367:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:370:13\n+  --> $DIR/deprecation-lint.rs:371:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable2::2`: text\n-  --> $DIR/deprecation-lint.rs:378:17\n+  --> $DIR/deprecation-lint.rs:379:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Stable2::2`: text\n-  --> $DIR/deprecation-lint.rs:383:20\n+  --> $DIR/deprecation-lint.rs:384:20\n    |\n LL |                    _)\n    |                    ^\n \n error: use of deprecated field `this_crate2::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:391:13\n+  --> $DIR/deprecation-lint.rs:392:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:395:17\n+  --> $DIR/deprecation-lint.rs:396:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:400:13\n+  --> $DIR/deprecation-lint.rs:401:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::0`: text\n-  --> $DIR/deprecation-lint.rs:412:17\n+  --> $DIR/deprecation-lint.rs:413:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::1`: text\n-  --> $DIR/deprecation-lint.rs:414:17\n+  --> $DIR/deprecation-lint.rs:415:17\n    |\n LL |         let _ = x.1;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::2`: text\n-  --> $DIR/deprecation-lint.rs:416:17\n+  --> $DIR/deprecation-lint.rs:417:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::0`: text\n-  --> $DIR/deprecation-lint.rs:421:14\n+  --> $DIR/deprecation-lint.rs:422:14\n    |\n LL |             (_,\n    |              ^\n \n error: use of deprecated field `this_crate2::Deprecated2::1`: text\n-  --> $DIR/deprecation-lint.rs:423:14\n+  --> $DIR/deprecation-lint.rs:424:14\n    |\n LL |              _,\n    |              ^\n \n error: use of deprecated field `this_crate2::Deprecated2::2`: text\n-  --> $DIR/deprecation-lint.rs:425:14\n+  --> $DIR/deprecation-lint.rs:426:14\n    |\n LL |              _)\n    |              ^\n \n-error: aborting due to 122 previous errors\n+error[E0451]: field `i` of struct `this_crate::nested::DeprecatedStruct` is private\n+  --> $DIR/deprecation-lint.rs:280:13\n+   |\n+LL |             i: 0\n+   |             ^^^^ private field\n+\n+error: aborting due to 123 previous errors\n \n+For more information about this error, try `rustc --explain E0451`."}, {"sha": "35fb42d6213226918f687979944f6812db7d6278", "filename": "src/test/ui/impl-trait/where-allowed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -235,6 +235,7 @@ impl <T = impl Debug> T {}\n //~^ ERROR defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n //~| WARNING this was previously accepted by the compiler but is being phased out\n //~| ERROR `impl Trait` not allowed outside of function and method return types\n+//~| ERROR no nominal type found\n \n // Disallowed\n fn in_method_generic_param_default<T = impl Debug>(_: T) {}"}, {"sha": "236cf449e85fa5050893e64709a4a507ec310fc0", "filename": "src/test/ui/impl-trait/where-allowed.stderr", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -272,19 +272,19 @@ LL | impl <T = impl Debug> T {}\n    |           ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and method return types\n-  --> $DIR/where-allowed.rs:240:40\n+  --> $DIR/where-allowed.rs:241:40\n    |\n LL | fn in_method_generic_param_default<T = impl Debug>(_: T) {}\n    |                                        ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and method return types\n-  --> $DIR/where-allowed.rs:246:29\n+  --> $DIR/where-allowed.rs:247:29\n    |\n LL |     let _in_local_variable: impl Fn() = || {};\n    |                             ^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and method return types\n-  --> $DIR/where-allowed.rs:248:46\n+  --> $DIR/where-allowed.rs:249:46\n    |\n LL |     let _in_return_in_local_variable = || -> impl Fn() { || {} };\n    |                                              ^^^^^^^^^\n@@ -300,15 +300,23 @@ LL | impl <T = impl Debug> T {}\n    = note: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>\n \n error: defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n-  --> $DIR/where-allowed.rs:240:36\n+  --> $DIR/where-allowed.rs:241:36\n    |\n LL | fn in_method_generic_param_default<T = impl Debug>(_: T) {}\n    |                                    ^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>\n \n-error: aborting due to 48 previous errors\n+error[E0118]: no nominal type found for inherent implementation\n+  --> $DIR/where-allowed.rs:234:23\n+   |\n+LL | impl <T = impl Debug> T {}\n+   |                       ^ impl requires a nominal type\n+   |\n+   = note: either implement a trait on it or create a newtype to wrap it instead\n+\n+error: aborting due to 49 previous errors\n \n-Some errors have detailed explanations: E0562, E0658, E0666.\n-For more information about an error, try `rustc --explain E0562`.\n+Some errors have detailed explanations: E0118, E0562, E0658, E0666.\n+For more information about an error, try `rustc --explain E0118`."}, {"sha": "7b16fa024f8e44122040c497c86e44b921d76ea7", "filename": "src/test/ui/issues/issue-7246.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fissues%2Fissue-7246.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fissues%2Fissue-7246.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7246.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -5,6 +5,7 @@ use std::ptr;\n pub unsafe fn g() {\n     return;\n     if *ptr::null() {}; //~ ERROR unreachable\n+    //~| WARNING dereferencing a null pointer\n }\n \n pub fn main() {}"}, {"sha": "a9bf2bf763d575b09f91b88f3bd30b0ff026a6b7", "filename": "src/test/ui/issues/issue-7246.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fissues%2Fissue-7246.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fissues%2Fissue-7246.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7246.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -12,5 +12,13 @@ note: the lint level is defined here\n LL | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+warning: dereferencing a null pointer\n+  --> $DIR/issue-7246.rs:7:8\n+   |\n+LL |     if *ptr::null() {};\n+   |        ^^^^^^^^^^^^ this code causes undefined behavior when executed\n+   |\n+   = note: `#[warn(deref_nullptr)]` on by default\n+\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "d9673faa2142e4c5a226143f38a3308f67475ee1", "filename": "src/test/ui/lint/crate_level_only_lint.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -4,16 +4,19 @@ mod foo {\n #![allow(uncommon_codepoints)]\n //~^ ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n //~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n+//~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n \n #[allow(uncommon_codepoints)]\n //~^ ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n //~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n+//~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n const BAR: f64 = 0.000001;\n \n }\n \n #[allow(uncommon_codepoints)]\n //~^ ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n //~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n+//~| ERROR allow(uncommon_codepoints) is ignored unless specified at crate level [unused_attributes]\n fn main() {\n }"}, {"sha": "8fb06df2a481a68297e4b9ff65639fdd632f09e7", "filename": "src/test/ui/lint/crate_level_only_lint.stderr", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcrate_level_only_lint.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -11,13 +11,13 @@ LL | #![deny(uncommon_codepoints, unused_attributes)]\n    |                              ^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:8:9\n+  --> $DIR/crate_level_only_lint.rs:9:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:15:9\n+  --> $DIR/crate_level_only_lint.rs:17:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n@@ -29,16 +29,34 @@ LL | #![allow(uncommon_codepoints)]\n    |          ^^^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:8:9\n+  --> $DIR/crate_level_only_lint.rs:9:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: allow(uncommon_codepoints) is ignored unless specified at crate level\n-  --> $DIR/crate_level_only_lint.rs:15:9\n+  --> $DIR/crate_level_only_lint.rs:17:9\n    |\n LL | #[allow(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: allow(uncommon_codepoints) is ignored unless specified at crate level\n+  --> $DIR/crate_level_only_lint.rs:4:10\n+   |\n+LL | #![allow(uncommon_codepoints)]\n+   |          ^^^^^^^^^^^^^^^^^^^\n+\n+error: allow(uncommon_codepoints) is ignored unless specified at crate level\n+  --> $DIR/crate_level_only_lint.rs:9:9\n+   |\n+LL | #[allow(uncommon_codepoints)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: allow(uncommon_codepoints) is ignored unless specified at crate level\n+  --> $DIR/crate_level_only_lint.rs:17:9\n+   |\n+LL | #[allow(uncommon_codepoints)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 9 previous errors\n "}, {"sha": "b12fd72da74946bc5355159eb03887cf8ae4339b", "filename": "src/test/ui/lint/forbid-group-group-2.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -17,4 +17,10 @@\n //~| WARNING previously accepted by the compiler\n //~| ERROR incompatible with previous\n //~| WARNING previously accepted by the compiler\n+//~| ERROR incompatible with previous\n+//~| WARNING previously accepted by the compiler\n+//~| ERROR incompatible with previous\n+//~| WARNING previously accepted by the compiler\n+//~| ERROR incompatible with previous\n+//~| WARNING previously accepted by the compiler\n fn main() {}"}, {"sha": "214e949c11a748990d8b906b48c2b82414d1f3a4", "filename": "src/test/ui/lint/forbid-group-group-2.stderr", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-group-group-2.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -75,5 +75,41 @@ LL | #[allow(nonstandard_style)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n \n-error: aborting due to 6 previous errors\n+error: allow(nonstandard_style) incompatible with previous forbid\n+  --> $DIR/forbid-group-group-2.rs:7:9\n+   |\n+LL | #![forbid(warnings)]\n+   |           -------- `forbid` level set here\n+...\n+LL | #[allow(nonstandard_style)]\n+   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n+\n+error: allow(nonstandard_style) incompatible with previous forbid\n+  --> $DIR/forbid-group-group-2.rs:7:9\n+   |\n+LL | #![forbid(warnings)]\n+   |           -------- `forbid` level set here\n+...\n+LL | #[allow(nonstandard_style)]\n+   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n+\n+error: allow(nonstandard_style) incompatible with previous forbid\n+  --> $DIR/forbid-group-group-2.rs:7:9\n+   |\n+LL | #![forbid(warnings)]\n+   |           -------- `forbid` level set here\n+...\n+LL | #[allow(nonstandard_style)]\n+   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #81670 <https://github.com/rust-lang/rust/issues/81670>\n+\n+error: aborting due to 9 previous errors\n "}, {"sha": "3ee55ba96b1378746cd26726d543a88b08108b40", "filename": "src/test/ui/lint/lint-forbid-internal-unsafe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -13,4 +13,5 @@ macro_rules! evil {\n \n fn main() {\n     println!(\"{}\", evil!(*(0 as *const u8)));\n+    //~^ WARNING dereferencing a null pointer\n }"}, {"sha": "ba425ceb442b216c988b165e2f5e8755651cffcc", "filename": "src/test/ui/lint/lint-forbid-internal-unsafe.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-internal-unsafe.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -10,5 +10,13 @@ note: the lint level is defined here\n LL | #![forbid(unsafe_code)]\n    |           ^^^^^^^^^^^\n \n-error: aborting due to previous error\n+warning: dereferencing a null pointer\n+  --> $DIR/lint-forbid-internal-unsafe.rs:15:26\n+   |\n+LL |     println!(\"{}\", evil!(*(0 as *const u8)));\n+   |                          ^^^^^^^^^^^^^^^^^ this code causes undefined behavior when executed\n+   |\n+   = note: `#[warn(deref_nullptr)]` on by default\n+\n+error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "ed8e7ddddc5977f370f343b0555b534727db2e18", "filename": "src/test/ui/lint/rfc-2457-non-ascii-idents/lint-uncommon-codepoints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,6 +1,7 @@\n #![deny(uncommon_codepoints)]\n \n const \u00b5: f64 = 0.000001; //~ ERROR identifier contains uncommon Unicode codepoints\n+//~| WARNING should have an upper case name\n \n fn d\u0133kstra() {} //~ ERROR identifier contains uncommon Unicode codepoints\n "}, {"sha": "0533da03068ae040d1802b1f8a0d4f6b64ad88dc", "filename": "src/test/ui/lint/rfc-2457-non-ascii-idents/lint-uncommon-codepoints.stderr", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2457-non-ascii-idents%2Flint-uncommon-codepoints.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -11,16 +11,24 @@ LL | #![deny(uncommon_codepoints)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: identifier contains uncommon Unicode codepoints\n-  --> $DIR/lint-uncommon-codepoints.rs:5:4\n+  --> $DIR/lint-uncommon-codepoints.rs:6:4\n    |\n LL | fn d\u0133kstra() {}\n    |    ^^^^^^^\n \n error: identifier contains uncommon Unicode codepoints\n-  --> $DIR/lint-uncommon-codepoints.rs:8:9\n+  --> $DIR/lint-uncommon-codepoints.rs:9:9\n    |\n LL |     let \u31fb\u31f2\u31f3 = \"rust\";\n    |         ^^^^^^\n \n-error: aborting due to 3 previous errors\n+warning: constant `\u00b5` should have an upper case name\n+  --> $DIR/lint-uncommon-codepoints.rs:3:7\n+   |\n+LL | const \u00b5: f64 = 0.000001;\n+   |       ^ help: convert the identifier to upper case: `\u039c`\n+   |\n+   = note: `#[warn(non_upper_case_globals)]` on by default\n+\n+error: aborting due to 3 previous errors; 1 warning emitted\n "}, {"sha": "e8e477ea4f6849aec68d7c03fc9ba2085393a8cb", "filename": "src/test/ui/reachable/expr_cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -7,6 +7,7 @@\n fn a() {\n     // the cast is unreachable:\n     let x = {return} as !; //~ ERROR unreachable\n+    //~| ERROR non-primitive cast\n }\n \n fn main() { }"}, {"sha": "6643f1784a1744916b10721961130ab320fdc881", "filename": "src/test/ui/reachable/expr_cast.stderr", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -13,5 +13,12 @@ note: the lint level is defined here\n LL | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error[E0605]: non-primitive cast: `()` as `!`\n+  --> $DIR/expr_cast.rs:9:13\n+   |\n+LL |     let x = {return} as !;\n+   |             ^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0605`."}, {"sha": "ce2726ffde48737c93ce3f6e36804c3d2e8f3d0b", "filename": "src/test/ui/stability-attribute/stability-attribute-trait-impl.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,27 +1,28 @@\n #![feature(staged_api)]\n+//~^ ERROR module has missing stability attribute\n \n-#[stable(feature = \"x\", since = \"1\")]\n+#[stable(feature = \"a\", since = \"1\")]\n struct StableType;\n \n-#[unstable(feature = \"x\", issue = \"none\")]\n+#[unstable(feature = \"b\", issue = \"none\")]\n struct UnstableType;\n \n-#[stable(feature = \"x\", since = \"1\")]\n+#[stable(feature = \"c\", since = \"1\")]\n trait StableTrait {}\n \n-#[unstable(feature = \"x\", issue = \"none\")]\n+#[unstable(feature = \"d\", issue = \"none\")]\n trait UnstableTrait {}\n \n-#[unstable(feature = \"x\", issue = \"none\")]\n+#[unstable(feature = \"e\", issue = \"none\")]\n impl UnstableTrait for UnstableType {}\n \n-#[unstable(feature = \"x\", issue = \"none\")]\n+#[unstable(feature = \"f\", issue = \"none\")]\n impl StableTrait for UnstableType {}\n \n-#[unstable(feature = \"x\", issue = \"none\")]\n+#[unstable(feature = \"g\", issue = \"none\")]\n impl UnstableTrait for StableType {}\n \n-#[unstable(feature = \"x\", issue = \"none\")]\n+#[unstable(feature = \"h\", issue = \"none\")]\n //~^ ERROR an `#[unstable]` annotation here has no effect [ineffective_unstable_trait_impl]\n impl StableTrait for StableType {}\n "}, {"sha": "310f02024ca0a02b6f1a5e0e2eb5841fa9d3ed15", "filename": "src/test/ui/stability-attribute/stability-attribute-trait-impl.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,11 +1,23 @@\n error: an `#[unstable]` annotation here has no effect\n-  --> $DIR/stability-attribute-trait-impl.rs:24:1\n+  --> $DIR/stability-attribute-trait-impl.rs:25:1\n    |\n-LL | #[unstable(feature = \"x\", issue = \"none\")]\n+LL | #[unstable(feature = \"h\", issue = \"none\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[deny(ineffective_unstable_trait_impl)]` on by default\n    = note: see issue #55436 <https://github.com/rust-lang/rust/issues/55436> for more information\n \n-error: aborting due to previous error\n+error: module has missing stability attribute\n+  --> $DIR/stability-attribute-trait-impl.rs:1:1\n+   |\n+LL | / #![feature(staged_api)]\n+LL | |\n+LL | |\n+LL | | #[stable(feature = \"a\", since = \"1\")]\n+...  |\n+LL | |\n+LL | | fn main() {}\n+   | |____________^\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "d5645474891062e2a43bddacdcf8fbe0ab450e7f", "filename": "src/test/ui/statics/uninhabited-static.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstatics%2Funinhabited-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstatics%2Funinhabited-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatics%2Funinhabited-static.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -11,7 +11,11 @@ extern {\n \n static VOID2: Void = unsafe { std::mem::transmute(()) }; //~ ERROR static of uninhabited type\n //~| WARN: previously accepted\n+//~| ERROR undefined behavior to use this value\n+//~| WARN: type `Void` does not permit zero-initialization\n static NEVER2: Void = unsafe { std::mem::transmute(()) }; //~ ERROR static of uninhabited type\n //~| WARN: previously accepted\n+//~| ERROR undefined behavior to use this value\n+//~| WARN: type `Void` does not permit zero-initialization\n \n fn main() {}"}, {"sha": "c38cf10d6e648bfad53cb16009a3d2c4c5759329", "filename": "src/test/ui/statics/uninhabited-static.stderr", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstatics%2Funinhabited-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fstatics%2Funinhabited-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatics%2Funinhabited-static.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -34,7 +34,7 @@ LL | static VOID2: Void = unsafe { std::mem::transmute(()) };\n    = note: uninhabited statics cannot be initialized, and any access would be an immediate error\n \n error: static of uninhabited type\n-  --> $DIR/uninhabited-static.rs:14:1\n+  --> $DIR/uninhabited-static.rs:16:1\n    |\n LL | static NEVER2: Void = unsafe { std::mem::transmute(()) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -43,5 +43,47 @@ LL | static NEVER2: Void = unsafe { std::mem::transmute(()) };\n    = note: for more information, see issue #74840 <https://github.com/rust-lang/rust/issues/74840>\n    = note: uninhabited statics cannot be initialized, and any access would be an immediate error\n \n-error: aborting due to 4 previous errors\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/uninhabited-static.rs:12:1\n+   |\n+LL | static VOID2: Void = unsafe { std::mem::transmute(()) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a value of uninhabited type Void\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+   = note: the raw bytes of the constant (size: 0, align: 1) {}\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/uninhabited-static.rs:16:1\n+   |\n+LL | static NEVER2: Void = unsafe { std::mem::transmute(()) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a value of uninhabited type Void\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+   = note: the raw bytes of the constant (size: 0, align: 1) {}\n+\n+warning: the type `Void` does not permit zero-initialization\n+  --> $DIR/uninhabited-static.rs:12:31\n+   |\n+LL | static VOID2: Void = unsafe { std::mem::transmute(()) };\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                               |\n+   |                               this code causes undefined behavior when executed\n+   |                               help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n+   |\n+   = note: `#[warn(invalid_value)]` on by default\n+   = note: enums with no variants have no valid value\n+\n+warning: the type `Void` does not permit zero-initialization\n+  --> $DIR/uninhabited-static.rs:16:32\n+   |\n+LL | static NEVER2: Void = unsafe { std::mem::transmute(()) };\n+   |                                ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                |\n+   |                                this code causes undefined behavior when executed\n+   |                                help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n+   |\n+   = note: enums with no variants have no valid value\n+\n+error: aborting due to 6 previous errors; 2 warnings emitted\n \n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "acbf15dcb6c6a937d5f49b0e3948b0b470bbb587", "filename": "src/test/ui/type-alias-enum-variants/enum-variant-priority-lint-ambiguous_associated_items.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-lint-ambiguous_associated_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-lint-ambiguous_associated_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-lint-ambiguous_associated_items.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -31,7 +31,10 @@ impl Tr for E {\n     type V = u8;\n     fn f() -> Self::V { 0 }\n     //~^ ERROR ambiguous associated item\n+    //~| ERROR ambiguous associated item\n     //~| WARN this was previously accepted\n+    //~| WARN this was previously accepted\n+    //~| HELP use fully-qualified syntax\n     //~| HELP use fully-qualified syntax\n }\n "}, {"sha": "f007f71a73c4532323fdaf2324211e1f290d9c9b", "filename": "src/test/ui/type-alias-enum-variants/enum-variant-priority-lint-ambiguous_associated_items.stderr", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-lint-ambiguous_associated_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-lint-ambiguous_associated_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-lint-ambiguous_associated_items.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -18,5 +18,24 @@ note: `V` could also refer to the associated type defined here\n LL |     type V;\n    |     ^^^^^^^\n \n-error: aborting due to previous error\n+error: ambiguous associated item\n+  --> $DIR/enum-variant-priority-lint-ambiguous_associated_items.rs:32:15\n+   |\n+LL |     fn f() -> Self::V { 0 }\n+   |               ^^^^^^^ help: use fully-qualified syntax: `<E as Tr>::V`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #57644 <https://github.com/rust-lang/rust/issues/57644>\n+note: `V` could refer to the variant defined here\n+  --> $DIR/enum-variant-priority-lint-ambiguous_associated_items.rs:22:5\n+   |\n+LL |     V\n+   |     ^\n+note: `V` could also refer to the associated type defined here\n+  --> $DIR/enum-variant-priority-lint-ambiguous_associated_items.rs:26:5\n+   |\n+LL |     type V;\n+   |     ^^^^^^^\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "ca6b8ba94d1cab407a85482ac1695aebbe843f4f", "filename": "src/test/ui/use/use-nested-groups-unused-imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,4 +1,3 @@\n-#![feature(use_nested_groups)]\n #![allow(dead_code)]\n #![deny(unused_imports)]\n "}, {"sha": "6610f8ecd4a28d5ee6290fa368335466b984f6d3", "filename": "src/test/ui/use/use-nested-groups-unused-imports.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,23 +1,23 @@\n error: unused imports: `*`, `Foo`, `baz::{}`, `foobar::*`\n-  --> $DIR/use-nested-groups-unused-imports.rs:16:11\n+  --> $DIR/use-nested-groups-unused-imports.rs:15:11\n    |\n LL | use foo::{Foo, bar::{baz::{}, foobar::*}, *};\n    |           ^^^        ^^^^^^^  ^^^^^^^^^   ^\n    |\n note: the lint level is defined here\n-  --> $DIR/use-nested-groups-unused-imports.rs:3:9\n+  --> $DIR/use-nested-groups-unused-imports.rs:2:9\n    |\n LL | #![deny(unused_imports)]\n    |         ^^^^^^^^^^^^^^\n \n error: unused import: `*`\n-  --> $DIR/use-nested-groups-unused-imports.rs:18:24\n+  --> $DIR/use-nested-groups-unused-imports.rs:17:24\n    |\n LL | use foo::bar::baz::{*, *};\n    |                        ^\n \n error: unused import: `foo::{}`\n-  --> $DIR/use-nested-groups-unused-imports.rs:20:5\n+  --> $DIR/use-nested-groups-unused-imports.rs:19:5\n    |\n LL | use foo::{};\n    |     ^^^^^^^"}, {"sha": "2498672d77fb04526208e6ec42d9eb8f2772156c", "filename": "src/tools/clippy/tests/ui-toml/lint_decimal_readability/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Flint_decimal_readability%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Flint_decimal_readability%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Flint_decimal_readability%2Ftest.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,3 +1,4 @@\n+#![allow(clippy::excessive_precision)]\n #[deny(clippy::unreadable_literal)]\n \n fn allow_inconsistent_digit_grouping() {"}, {"sha": "be505bda4792c757982e7c51566cbe6d672740d2", "filename": "src/tools/clippy/tests/ui-toml/lint_decimal_readability/test.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Flint_decimal_readability%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Flint_decimal_readability%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui-toml%2Flint_decimal_readability%2Ftest.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: digits grouped inconsistently by underscores\n-  --> $DIR/test.rs:18:18\n+  --> $DIR/test.rs:19:18\n    |\n LL |     let _fail1 = 100_200_300.123456789;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider: `100_200_300.123_456_789`"}, {"sha": "9a150c67a21ea583cadad59326c607f33cb8b318", "filename": "src/tools/clippy/tests/ui/deref_addrof.fixed", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.fixed?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -52,12 +52,14 @@ macro_rules! m_mut {\n     };\n }\n \n+#[derive(Copy, Clone)]\n pub struct S;\n impl S {\n     pub fn f(&self) -> &Self {\n         m!(self)\n     }\n-    pub fn f_mut(&self) -> &Self {\n+    #[allow(unused_mut)] // mut will be unused, once the macro is fixed\n+    pub fn f_mut(mut self) -> Self {\n         m_mut!(self)\n     }\n }"}, {"sha": "80ba7e9bd0b8202cbe9202343e3dd227000ff95f", "filename": "src/tools/clippy/tests/ui/deref_addrof.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fderef_addrof.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -52,12 +52,14 @@ macro_rules! m_mut {\n     };\n }\n \n+#[derive(Copy, Clone)]\n pub struct S;\n impl S {\n     pub fn f(&self) -> &Self {\n         m!(self)\n     }\n-    pub fn f_mut(&self) -> &Self {\n+    #[allow(unused_mut)] // mut will be unused, once the macro is fixed\n+    pub fn f_mut(mut self) -> Self {\n         m_mut!(self)\n     }\n }"}, {"sha": "38a8fbd74dcf61b540b16b34a496b9005d5ba800", "filename": "src/tools/clippy/tests/ui/double_neg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_neg.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,4 +1,5 @@\n #[warn(clippy::double_neg)]\n+#[allow(clippy::no_effect)]\n fn main() {\n     let x = 1;\n     -x;"}, {"sha": "7cdb040b6873937266598277e48d240d796c95ca", "filename": "src/tools/clippy/tests/ui/double_neg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdouble_neg.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: `--x` could be misinterpreted as pre-decrement by C programmers, is usually a no-op\n-  --> $DIR/double_neg.rs:6:5\n+  --> $DIR/double_neg.rs:7:5\n    |\n LL |     --x;\n    |     ^^^"}, {"sha": "1442ee08e7546aa20056ccb5b3f27e894b6c4cb8", "filename": "src/tools/clippy/tests/ui/fn_params_excessive_bools.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_params_excessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_params_excessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_params_excessive_bools.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::fn_params_excessive_bools)]\n+#![allow(clippy::too_many_arguments)]\n \n extern \"C\" {\n     fn f(_: bool, _: bool, _: bool, _: bool);"}, {"sha": "cd9d07fa115d6d3bca7d24f8250925cb0a0aa879", "filename": "src/tools/clippy/tests/ui/fn_params_excessive_bools.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_params_excessive_bools.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_params_excessive_bools.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffn_params_excessive_bools.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:17:1\n+  --> $DIR/fn_params_excessive_bools.rs:18:1\n    |\n LL | fn g(_: bool, _: bool, _: bool, _: bool) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,31 +8,31 @@ LL | fn g(_: bool, _: bool, _: bool, _: bool) {}\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:20:1\n+  --> $DIR/fn_params_excessive_bools.rs:21:1\n    |\n LL | fn t(_: S, _: S, _: Box<S>, _: Vec<u32>, _: bool, _: bool, _: bool, _: bool) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:24:5\n+  --> $DIR/fn_params_excessive_bools.rs:25:5\n    |\n LL |     fn f(_: bool, _: bool, _: bool, _: bool);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:29:5\n+  --> $DIR/fn_params_excessive_bools.rs:30:5\n    |\n LL |     fn f(&self, _: bool, _: bool, _: bool, _: bool) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:41:5\n+  --> $DIR/fn_params_excessive_bools.rs:42:5\n    |\n LL | /     fn n(_: bool, _: u32, _: bool, _: Box<u32>, _: bool, _: bool) {\n LL | |         fn nn(_: bool, _: bool, _: bool, _: bool) {}\n@@ -42,7 +42,7 @@ LL | |     }\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:42:9\n+  --> $DIR/fn_params_excessive_bools.rs:43:9\n    |\n LL |         fn nn(_: bool, _: bool, _: bool, _: bool) {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "471a8e0de6e193047e17ffa3e4273dce9799ac62", "filename": "src/tools/clippy/tests/ui/formatting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformatting.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -3,6 +3,7 @@\n #![allow(unused_assignments)]\n #![allow(clippy::if_same_then_else)]\n #![allow(clippy::deref_addrof)]\n+#![allow(clippy::nonminimal_bool)]\n \n fn foo() -> bool {\n     true"}, {"sha": "9272cd6048441790c403e0750193c78fa6c56049", "filename": "src/tools/clippy/tests/ui/formatting.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fformatting.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\n-  --> $DIR/formatting.rs:15:6\n+  --> $DIR/formatting.rs:16:6\n    |\n LL |     a =- 35;\n    |      ^^^^\n@@ -8,23 +8,23 @@ LL |     a =- 35;\n    = note: to remove this lint, use either `-=` or `= -`\n \n error: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`\n-  --> $DIR/formatting.rs:16:6\n+  --> $DIR/formatting.rs:17:6\n    |\n LL |     a =* &191;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `*=` or `= *`\n \n error: this looks like you are trying to use `.. != ..`, but you really are doing `.. = (! ..)`\n-  --> $DIR/formatting.rs:19:6\n+  --> $DIR/formatting.rs:20:6\n    |\n LL |     b =! false;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `!=` or `= !`\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:28:19\n+  --> $DIR/formatting.rs:29:19\n    |\n LL |         -1, -2, -3 // <= no comma here\n    |                   ^\n@@ -33,15 +33,15 @@ LL |         -1, -2, -3 // <= no comma here\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:32:19\n+  --> $DIR/formatting.rs:33:19\n    |\n LL |         -1, -2, -3 // <= no comma here\n    |                   ^\n    |\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:69:11\n+  --> $DIR/formatting.rs:70:11\n    |\n LL |         -1\n    |           ^"}, {"sha": "0cadd5a3da1983e4436d9f946808a84aa45a55b7", "filename": "src/tools/clippy/tests/ui/literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fliterals.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -4,7 +4,7 @@\n #![warn(clippy::zero_prefixed_literal)]\n #![warn(clippy::unseparated_literal_suffix)]\n #![warn(clippy::separated_literal_suffix)]\n-#![allow(dead_code)]\n+#![allow(dead_code, overflowing_literals)]\n \n fn main() {\n     let ok1 = 0xABCD;"}, {"sha": "88fcce66873aa3a73b6194eeddcacc88762bffb7", "filename": "src/tools/clippy/tests/ui/many_single_char_names.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmany_single_char_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmany_single_char_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmany_single_char_names.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,3 +1,4 @@\n+#![allow(clippy::too_many_arguments, clippy::diverging_sub_expression)]\n #![warn(clippy::many_single_char_names)]\n \n fn bla() {"}, {"sha": "ade0f84bc50653be1b7f4574e7ff5fc9afd35cd3", "filename": "src/tools/clippy/tests/ui/many_single_char_names.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmany_single_char_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmany_single_char_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmany_single_char_names.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: 5 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:4:9\n+  --> $DIR/many_single_char_names.rs:5:9\n    |\n LL |     let a: i32;\n    |         ^\n@@ -12,7 +12,7 @@ LL |             let e: i32;\n    = note: `-D clippy::many-single-char-names` implied by `-D warnings`\n \n error: 6 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:4:9\n+  --> $DIR/many_single_char_names.rs:5:9\n    |\n LL |     let a: i32;\n    |         ^\n@@ -25,7 +25,7 @@ LL |             let f: i32;\n    |                 ^\n \n error: 5 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:4:9\n+  --> $DIR/many_single_char_names.rs:5:9\n    |\n LL |     let a: i32;\n    |         ^\n@@ -36,13 +36,13 @@ LL |             e => panic!(),\n    |             ^\n \n error: 8 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:29:13\n+  --> $DIR/many_single_char_names.rs:30:13\n    |\n LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}\n    |             ^       ^       ^       ^       ^       ^       ^       ^\n \n error: 8 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:32:10\n+  --> $DIR/many_single_char_names.rs:33:10\n    |\n LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();\n    |          ^  ^  ^  ^  ^  ^  ^  ^"}, {"sha": "5d57638af43495bea12bce75b930aa600ae51343", "filename": "src/tools/clippy/tests/ui/mistyped_literal_suffix.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.fixed?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -3,6 +3,7 @@\n #![allow(\n     dead_code,\n     unused_variables,\n+    overflowing_literals,\n     clippy::excessive_precision,\n     clippy::inconsistent_digit_grouping\n )]\n@@ -21,7 +22,6 @@ fn main() {\n     let fail25 = 1E2_f32;\n     let fail26 = 43E7_f64;\n     let fail27 = 243E17_f32;\n-    #[allow(overflowing_literals)]\n     let fail28 = 241_251_235E723_f64;\n     let ok29 = 42279.911_32;\n "}, {"sha": "12171452885d2b009bdb0e0373abe765a0c29a04", "filename": "src/tools/clippy/tests/ui/mistyped_literal_suffix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -3,6 +3,7 @@\n #![allow(\n     dead_code,\n     unused_variables,\n+    overflowing_literals,\n     clippy::excessive_precision,\n     clippy::inconsistent_digit_grouping\n )]\n@@ -21,7 +22,6 @@ fn main() {\n     let fail25 = 1E2_32;\n     let fail26 = 43E7_64;\n     let fail27 = 243E17_32;\n-    #[allow(overflowing_literals)]\n     let fail28 = 241251235E723_64;\n     let ok29 = 42279.911_32;\n "}, {"sha": "d24543c26e4b0d7e48cbb4647f03ebcd2abf3cb0", "filename": "src/tools/clippy/tests/ui/mistyped_literal_suffix.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmistyped_literal_suffix.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,55 +1,55 @@\n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:11:18\n+  --> $DIR/mistyped_literal_suffix.rs:12:18\n    |\n LL |     let fail14 = 2_32;\n    |                  ^^^^ help: did you mean to write: `2_i32`\n    |\n    = note: `#[deny(clippy::mistyped_literal_suffixes)]` on by default\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:12:18\n+  --> $DIR/mistyped_literal_suffix.rs:13:18\n    |\n LL |     let fail15 = 4_64;\n    |                  ^^^^ help: did you mean to write: `4_i64`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:13:18\n+  --> $DIR/mistyped_literal_suffix.rs:14:18\n    |\n LL |     let fail16 = 7_8; //\n    |                  ^^^ help: did you mean to write: `7_i8`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:14:18\n+  --> $DIR/mistyped_literal_suffix.rs:15:18\n    |\n LL |     let fail17 = 23_16; //\n    |                  ^^^^^ help: did you mean to write: `23_i16`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:17:18\n+  --> $DIR/mistyped_literal_suffix.rs:18:18\n    |\n LL |     let fail20 = 2__8; //\n    |                  ^^^^ help: did you mean to write: `2_i8`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:18:18\n+  --> $DIR/mistyped_literal_suffix.rs:19:18\n    |\n LL |     let fail21 = 4___16; //\n    |                  ^^^^^^ help: did you mean to write: `4_i16`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:21:18\n+  --> $DIR/mistyped_literal_suffix.rs:22:18\n    |\n LL |     let fail25 = 1E2_32;\n    |                  ^^^^^^ help: did you mean to write: `1E2_f32`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:22:18\n+  --> $DIR/mistyped_literal_suffix.rs:23:18\n    |\n LL |     let fail26 = 43E7_64;\n    |                  ^^^^^^^ help: did you mean to write: `43E7_f64`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:23:18\n+  --> $DIR/mistyped_literal_suffix.rs:24:18\n    |\n LL |     let fail27 = 243E17_32;\n    |                  ^^^^^^^^^ help: did you mean to write: `243E17_f32`"}, {"sha": "ad0d694a2174a3a125393790d5767a81afd9c98d", "filename": "src/tools/clippy/tests/ui/needless_arbitrary_self_type_unfixable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_arbitrary_self_type_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_arbitrary_self_type_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_arbitrary_self_type_unfixable.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -38,6 +38,7 @@ mod issue_6089 {\n     //  fn call_with_mut_self<'life0>(self: &'life0 mut Self) {}\n     #[rename_my_lifetimes]\n     impl T2 for S2 {\n+        #[allow(clippy::needless_lifetimes)]\n         fn call_with_mut_self(self: &mut Self) {}\n     }\n }"}, {"sha": "b2edbfe4323e16ce6ec4407158daa60f143b335f", "filename": "src/tools/clippy/tests/ui/needless_arbitrary_self_type_unfixable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_arbitrary_self_type_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_arbitrary_self_type_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_arbitrary_self_type_unfixable.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: the type of the `self` parameter does not need to be arbitrary\n-  --> $DIR/needless_arbitrary_self_type_unfixable.rs:41:31\n+  --> $DIR/needless_arbitrary_self_type_unfixable.rs:42:31\n    |\n LL |         fn call_with_mut_self(self: &mut Self) {}\n    |                               ^^^^^^^^^^^^^^^ help: consider to change this parameter to: `&'_ mut self`"}, {"sha": "f105d3d659ac7fb199e5c4fc593ca224c86447e1", "filename": "src/tools/clippy/tests/ui/needless_continue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_continue.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -12,6 +12,7 @@ macro_rules! nonzero {\n     };\n }\n \n+#[allow(clippy::nonminimal_bool)]\n fn main() {\n     let mut i = 1;\n     while i < 10 {"}, {"sha": "b8657c74caa6930c9408ecc4079a9fd7b5893e0d", "filename": "src/tools/clippy/tests/ui/needless_continue.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_continue.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: this `else` block is redundant\n-  --> $DIR/needless_continue.rs:28:16\n+  --> $DIR/needless_continue.rs:29:16\n    |\n LL |           } else {\n    |  ________________^\n@@ -35,7 +35,7 @@ LL | |         }\n                    }\n \n error: there is no need for an explicit `else` block for this `if` expression\n-  --> $DIR/needless_continue.rs:43:9\n+  --> $DIR/needless_continue.rs:44:9\n    |\n LL | /         if (zero!(i % 2) || nonzero!(i % 5)) && i % 3 != 0 {\n LL | |             continue;\n@@ -55,39 +55,39 @@ LL | |         }\n                    }\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:56:9\n+  --> $DIR/needless_continue.rs:57:9\n    |\n LL |         continue; // should lint here\n    |         ^^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:63:9\n+  --> $DIR/needless_continue.rs:64:9\n    |\n LL |         continue; // should lint here\n    |         ^^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:70:9\n+  --> $DIR/needless_continue.rs:71:9\n    |\n LL |         continue // should lint here\n    |         ^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:78:9\n+  --> $DIR/needless_continue.rs:79:9\n    |\n LL |         continue // should lint here\n    |         ^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `else` block is redundant\n-  --> $DIR/needless_continue.rs:128:24\n+  --> $DIR/needless_continue.rs:129:24\n    |\n LL |                   } else {\n    |  ________________________^\n@@ -110,7 +110,7 @@ LL | |                 }\n                            }\n \n error: there is no need for an explicit `else` block for this `if` expression\n-  --> $DIR/needless_continue.rs:134:17\n+  --> $DIR/needless_continue.rs:135:17\n    |\n LL | /                 if condition() {\n LL | |                     continue; // should lint here"}, {"sha": "9937005d68d8ae43092952b1a4f307d8f21f816c", "filename": "src/tools/clippy/tests/ui/non_expressive_names.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnon_expressive_names.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::all)]\n-#![allow(unused, clippy::println_empty_string)]\n+#![allow(unused, clippy::println_empty_string, non_snake_case)]\n \n #[derive(Clone, Debug)]\n enum MaybeInst {\n@@ -14,6 +14,7 @@ struct InstSplit {\n \n impl MaybeInst {\n     fn fill(&mut self) {\n+        #[allow(non_fmt_panics)]\n         let filled = match *self {\n             MaybeInst::Split1(goto1) => panic!(\"1\"),\n             MaybeInst::Split2(goto2) => panic!(\"2\"),\n@@ -36,6 +37,7 @@ fn issue2927() {\n }\n \n fn issue3078() {\n+    #[allow(clippy::single_match)]\n     match \"a\" {\n         stringify!(a) => {},\n         _ => {},"}, {"sha": "116d5da8729c0f2d334d91a4966483158f52bd53", "filename": "src/tools/clippy/tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnon_expressive_names.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,37 +1,37 @@\n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:27:9\n+  --> $DIR/non_expressive_names.rs:28:9\n    |\n LL |     let _1 = 1; //~ERROR Consider a more descriptive name\n    |         ^^\n    |\n    = note: `-D clippy::just-underscores-and-digits` implied by `-D warnings`\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:28:9\n+  --> $DIR/non_expressive_names.rs:29:9\n    |\n LL |     let ____1 = 1; //~ERROR Consider a more descriptive name\n    |         ^^^^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:29:9\n+  --> $DIR/non_expressive_names.rs:30:9\n    |\n LL |     let __1___2 = 12; //~ERROR Consider a more descriptive name\n    |         ^^^^^^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:49:13\n+  --> $DIR/non_expressive_names.rs:51:13\n    |\n LL |         let _1 = 1;\n    |             ^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:50:13\n+  --> $DIR/non_expressive_names.rs:52:13\n    |\n LL |         let ____1 = 1;\n    |             ^^^^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:51:13\n+  --> $DIR/non_expressive_names.rs:53:13\n    |\n LL |         let __1___2 = 12;\n    |             ^^^^^^^"}, {"sha": "5649d8dd14c4899fde03e7a75d78bf5309aa4728", "filename": "src/tools/clippy/tests/ui/redundant_closure_call_early.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fredundant_closure_call_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fredundant_closure_call_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fredundant_closure_call_early.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -15,5 +15,6 @@ fn main() {\n     #[allow(clippy::needless_return)]\n     (|| return 2)();\n     (|| -> Option<i32> { None? })();\n+    #[allow(clippy::try_err)]\n     (|| -> Result<i32, i32> { Err(2)? })();\n }"}, {"sha": "e8a6e940c01cdbebd76dfcceb066bafea11d97cc", "filename": "src/tools/clippy/tests/ui/redundant_else.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fredundant_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fredundant_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fredundant_else.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::redundant_else)]\n-#![allow(clippy::needless_return)]\n+#![allow(clippy::needless_return, clippy::if_same_then_else)]\n \n fn main() {\n     loop {\n@@ -105,7 +105,7 @@ fn main() {\n         1\n     };\n     // assign\n-    let a;\n+    let mut a;\n     a = if foo() {\n         return;\n     } else {"}, {"sha": "76f6ce9ee6b47f3826824a35e2495c0513d80c23", "filename": "src/tools/clippy/tests/ui/similar_names.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsimilar_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsimilar_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsimilar_names.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,10 @@\n #![warn(clippy::similar_names)]\n-#![allow(unused, clippy::println_empty_string)]\n+#![allow(\n+    unused,\n+    clippy::println_empty_string,\n+    clippy::empty_loop,\n+    clippy::diverging_sub_expression\n+)]\n \n struct Foo {\n     apple: i32,"}, {"sha": "faf572b0c6bc27010c8af554b37cd863e295ab2a", "filename": "src/tools/clippy/tests/ui/similar_names.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsimilar_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsimilar_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsimilar_names.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,84 +1,84 @@\n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:15:9\n+  --> $DIR/similar_names.rs:20:9\n    |\n LL |     let bpple: i32;\n    |         ^^^^^\n    |\n    = note: `-D clippy::similar-names` implied by `-D warnings`\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:13:9\n+  --> $DIR/similar_names.rs:18:9\n    |\n LL |     let apple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:17:9\n+  --> $DIR/similar_names.rs:22:9\n    |\n LL |     let cpple: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:13:9\n+  --> $DIR/similar_names.rs:18:9\n    |\n LL |     let apple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:41:9\n+  --> $DIR/similar_names.rs:46:9\n    |\n LL |     let bluby: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:40:9\n+  --> $DIR/similar_names.rs:45:9\n    |\n LL |     let blubx: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:45:9\n+  --> $DIR/similar_names.rs:50:9\n    |\n LL |     let coke: i32;\n    |         ^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:43:9\n+  --> $DIR/similar_names.rs:48:9\n    |\n LL |     let cake: i32;\n    |         ^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:63:9\n+  --> $DIR/similar_names.rs:68:9\n    |\n LL |     let xyzeabc: i32;\n    |         ^^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:61:9\n+  --> $DIR/similar_names.rs:66:9\n    |\n LL |     let xyz1abc: i32;\n    |         ^^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:67:9\n+  --> $DIR/similar_names.rs:72:9\n    |\n LL |     let parsee: i32;\n    |         ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:65:9\n+  --> $DIR/similar_names.rs:70:9\n    |\n LL |     let parser: i32;\n    |         ^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:88:16\n+  --> $DIR/similar_names.rs:93:16\n    |\n LL |         bpple: sprang,\n    |                ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:87:16\n+  --> $DIR/similar_names.rs:92:16\n    |\n LL |         apple: spring,\n    |                ^^^^^^"}, {"sha": "fcd827a91c7f62d843bfd47a30016a58e9dbbf2d", "filename": "src/tools/clippy/tests/ui/suspicious_else_formatting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_else_formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_else_formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_else_formatting.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,6 +1,7 @@\n // aux-build:proc_macro_suspicious_else_formatting.rs\n \n #![warn(clippy::suspicious_else_formatting)]\n+#![allow(clippy::if_same_then_else)]\n \n extern crate proc_macro_suspicious_else_formatting;\n use proc_macro_suspicious_else_formatting::DeriveBadSpan;"}, {"sha": "ee68eb5a791c45d5ea2c5c3ab4edc2fe8810fc35", "filename": "src/tools/clippy/tests/ui/suspicious_else_formatting.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_else_formatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_else_formatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_else_formatting.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,5 +1,5 @@\n error: this looks like an `else {..}` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:16:6\n+  --> $DIR/suspicious_else_formatting.rs:17:6\n    |\n LL |     } {\n    |      ^\n@@ -8,31 +8,31 @@ LL |     } {\n    = note: to remove this lint, add the missing `else` or add a new line before the next block\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:20:6\n+  --> $DIR/suspicious_else_formatting.rs:21:6\n    |\n LL |     } if foo() {\n    |      ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:27:10\n+  --> $DIR/suspicious_else_formatting.rs:28:10\n    |\n LL |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:35:10\n+  --> $DIR/suspicious_else_formatting.rs:36:10\n    |\n LL |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this is an `else {..}` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:44:6\n+  --> $DIR/suspicious_else_formatting.rs:45:6\n    |\n LL |       } else\n    |  ______^\n@@ -42,7 +42,7 @@ LL | |     {\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `{..}`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:56:6\n+  --> $DIR/suspicious_else_formatting.rs:57:6\n    |\n LL |       } else\n    |  ______^\n@@ -52,7 +52,7 @@ LL | |     if foo() { // the span of the above error should continue here\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:61:6\n+  --> $DIR/suspicious_else_formatting.rs:62:6\n    |\n LL |       }\n    |  ______^\n@@ -63,7 +63,7 @@ LL | |     if foo() { // the span of the above error should continue here\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else {..}` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:88:6\n+  --> $DIR/suspicious_else_formatting.rs:89:6\n    |\n LL |       }\n    |  ______^\n@@ -75,7 +75,7 @@ LL | |     {\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `{..}`\n \n error: this is an `else {..}` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:96:6\n+  --> $DIR/suspicious_else_formatting.rs:97:6\n    |\n LL |       }\n    |  ______^"}, {"sha": "3201d5de0f35620663dea65c8903b481d8ac9eb6", "filename": "src/tools/clippy/tests/ui/suspicious_operation_groupings.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_operation_groupings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_operation_groupings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_operation_groupings.rs?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::suspicious_operation_groupings)]\n+#![allow(clippy::eq_op)]\n \n struct Vec3 {\n     x: f64,\n@@ -187,7 +188,7 @@ fn inside_fn_with_similar_expression(s1: &S, s2: &S, strict: bool) -> bool {\n     }\n }\n \n-fn inside_an_if_statement(s1: &S, s2: &S) {\n+fn inside_an_if_statement(s1: &mut S, s2: &S) {\n     // There's no `s1.b`\n     if s1.a < s2.a && s1.a < s2.b {\n         s1.c = s2.c;"}, {"sha": "baf9bc74b000ec30468a9e08112d1decaed61346", "filename": "src/tools/clippy/tests/ui/suspicious_operation_groupings.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_operation_groupings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/214cd1f228a463b59f73ee46c8ae3b30f85de253/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_operation_groupings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fsuspicious_operation_groupings.stderr?ref=214cd1f228a463b59f73ee46c8ae3b30f85de253", "patch": "@@ -1,157 +1,157 @@\n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:14:9\n+  --> $DIR/suspicious_operation_groupings.rs:15:9\n    |\n LL |         self.x == other.y && self.y == other.y && self.z == other.z\n    |         ^^^^^^^^^^^^^^^^^ help: did you mean: `self.x == other.x`\n    |\n    = note: `-D clippy::suspicious-operation-groupings` implied by `-D warnings`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:27:20\n+  --> $DIR/suspicious_operation_groupings.rs:28:20\n    |\n LL |     s1.a < s2.a && s1.a < s2.b\n    |                    ^^^^^^^^^^^ help: did you mean: `s1.b < s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:75:33\n+  --> $DIR/suspicious_operation_groupings.rs:76:33\n    |\n LL |     s1.a * s2.a + s1.b * s2.b + s1.c * s2.b + s1.d * s2.d\n    |                                 ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:80:19\n+  --> $DIR/suspicious_operation_groupings.rs:81:19\n    |\n LL |     s1.a * s2.a + s1.b * s2.c + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:80:19\n+  --> $DIR/suspicious_operation_groupings.rs:81:19\n    |\n LL |     s1.a * s2.a + s1.b * s2.c + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:85:19\n+  --> $DIR/suspicious_operation_groupings.rs:86:19\n    |\n LL |     s1.a * s2.a + s2.b * s2.b + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:90:19\n+  --> $DIR/suspicious_operation_groupings.rs:91:19\n    |\n LL |     s1.a * s2.a + s1.b * s1.b + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:95:5\n+  --> $DIR/suspicious_operation_groupings.rs:96:5\n    |\n LL |     s1.a * s1.a + s1.b * s2.b + s1.c * s2.c\n    |     ^^^^^^^^^^^ help: did you mean: `s1.a * s2.a`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:100:33\n+  --> $DIR/suspicious_operation_groupings.rs:101:33\n    |\n LL |     s1.a * s2.a + s1.b * s2.b + s1.c * s1.c\n    |                                 ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:113:20\n+  --> $DIR/suspicious_operation_groupings.rs:114:20\n    |\n LL |     (s1.a * s2.a + s1.b * s1.b)\n    |                    ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:118:34\n+  --> $DIR/suspicious_operation_groupings.rs:119:34\n    |\n LL |     (s1.a * s2.a + s1.b * s2.b + s1.c * s2.b + s1.d * s2.d)\n    |                                  ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:123:38\n+  --> $DIR/suspicious_operation_groupings.rs:124:38\n    |\n LL |     (s1.a * s2.a) + (s1.b * s2.b) + (s1.c * s2.b) + (s1.d * s2.d)\n    |                                      ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:128:39\n+  --> $DIR/suspicious_operation_groupings.rs:129:39\n    |\n LL |     ((s1.a * s2.a) + (s1.b * s2.b) + (s1.c * s2.b) + (s1.d * s2.d))\n    |                                       ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:133:42\n+  --> $DIR/suspicious_operation_groupings.rs:134:42\n    |\n LL |     (((s1.a * s2.a) + (s1.b * s2.b)) + ((s1.c * s2.b) + (s1.d * s2.d)))\n    |                                          ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:133:42\n+  --> $DIR/suspicious_operation_groupings.rs:134:42\n    |\n LL |     (((s1.a * s2.a) + (s1.b * s2.b)) + ((s1.c * s2.b) + (s1.d * s2.d)))\n    |                                          ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:138:40\n+  --> $DIR/suspicious_operation_groupings.rs:139:40\n    |\n LL |     (((s1.a * s2.a) + (s1.b * s2.b) + (s1.c * s2.b)) + (s1.d * s2.d))\n    |                                        ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:143:40\n+  --> $DIR/suspicious_operation_groupings.rs:144:40\n    |\n LL |     ((s1.a * s2.a) + ((s1.b * s2.b) + (s1.c * s2.b) + (s1.d * s2.d)))\n    |                                        ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:148:20\n+  --> $DIR/suspicious_operation_groupings.rs:149:20\n    |\n LL |     (s1.a * s2.a + s2.b * s2.b) / 2\n    |                    ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:153:35\n+  --> $DIR/suspicious_operation_groupings.rs:154:35\n    |\n LL |     i32::swap_bytes(s1.a * s2.a + s2.b * s2.b)\n    |                                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:158:29\n+  --> $DIR/suspicious_operation_groupings.rs:159:29\n    |\n LL |     s1.a > 0 && s1.b > 0 && s1.d == s2.c && s1.d == s2.d\n    |                             ^^^^^^^^^^^^ help: did you mean: `s1.c == s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:163:17\n+  --> $DIR/suspicious_operation_groupings.rs:164:17\n    |\n LL |     s1.a > 0 && s1.d == s2.c && s1.b > 0 && s1.d == s2.d\n    |                 ^^^^^^^^^^^^ help: did you mean: `s1.c == s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:172:77\n+  --> $DIR/suspicious_operation_groupings.rs:173:77\n    |\n LL |     (n1.inner.0).0 == (n2.inner.0).0 && (n1.inner.1).0 == (n2.inner.1).0 && (n1.inner.2).0 == (n2.inner.1).0\n    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: did you mean: `(n1.inner.2).0 == (n2.inner.2).0`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:186:25\n+  --> $DIR/suspicious_operation_groupings.rs:187:25\n    |\n LL |         s1.a <= s2.a && s1.a <= s2.b\n    |                         ^^^^^^^^^^^^ help: did you mean: `s1.b <= s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:192:23\n+  --> $DIR/suspicious_operation_groupings.rs:193:23\n    |\n LL |     if s1.a < s2.a && s1.a < s2.b {\n    |                       ^^^^^^^^^^^ help: did you mean: `s1.b < s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:199:48\n+  --> $DIR/suspicious_operation_groupings.rs:200:48\n    |\n LL |     -(-(-s1.a * -s2.a) + (-(-s1.b * -s2.b) + -(-s1.c * -s2.b) + -(-s1.d * -s2.d)))\n    |                                                ^^^^^^^^^^^^^ help: did you mean: `-s1.c * -s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:204:27\n+  --> $DIR/suspicious_operation_groupings.rs:205:27\n    |\n LL |     -(if -s1.a < -s2.a && -s1.a < -s2.b { s1.c } else { s2.a })\n    |                           ^^^^^^^^^^^^^ help: did you mean: `-s1.b < -s2.b`"}]}