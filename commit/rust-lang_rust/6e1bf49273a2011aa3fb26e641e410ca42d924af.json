{"sha": "6e1bf49273a2011aa3fb26e641e410ca42d924af", "node_id": "C_kwDOAAsO6NoAKDZlMWJmNDkyNzNhMjAxMWFhM2ZiMjZlNjQxZTQxMGNhNDJkOTI0YWY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-05-03T21:00:09Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-05-03T21:00:25Z"}, "message": "Give priority to intrinsics translations from llvm", "tree": {"sha": "d7539c823cb45250b006716b534a386140217268", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7539c823cb45250b006716b534a386140217268"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e1bf49273a2011aa3fb26e641e410ca42d924af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1bf49273a2011aa3fb26e641e410ca42d924af", "html_url": "https://github.com/rust-lang/rust/commit/6e1bf49273a2011aa3fb26e641e410ca42d924af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e1bf49273a2011aa3fb26e641e410ca42d924af/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "618ba484e9e66dece784753947e2ddec202d282a", "url": "https://api.github.com/repos/rust-lang/rust/commits/618ba484e9e66dece784753947e2ddec202d282a", "html_url": "https://github.com/rust-lang/rust/commit/618ba484e9e66dece784753947e2ddec202d282a"}], "stats": {"total": 73, "additions": 45, "deletions": 28}, "files": [{"sha": "bfeb30f2913d3edb5f155c13810b0216bfe352a4", "filename": "src/intrinsic/archs.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6e1bf49273a2011aa3fb26e641e410ca42d924af/src%2Fintrinsic%2Farchs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e1bf49273a2011aa3fb26e641e410ca42d924af/src%2Fintrinsic%2Farchs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Farchs.rs?ref=6e1bf49273a2011aa3fb26e641e410ca42d924af", "patch": "@@ -3021,19 +3021,19 @@ match name {\n     \"llvm.x86.avx512.cvtss2usi64\" => \"__builtin_ia32_cvtss2usi64\",\n     \"llvm.x86.avx512.cvttsd2si\" => \"__builtin_ia32_vcvttsd2si32\",\n     \"llvm.x86.avx512.cvttsd2si64\" => \"__builtin_ia32_vcvttsd2si64\",\n-    \"llvm.x86.avx512.cvttsd2usi\" => \"__builtin_ia32_cvttsd2usi\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.cvttsd2usi\" => \"__builtin_ia32_vcvttsd2usi32\",\n-    \"llvm.x86.avx512.cvttsd2usi64\" => \"__builtin_ia32_cvttsd2usi64\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.cvttsd2usi64\" => \"__builtin_ia32_vcvttsd2usi64\",\n+    \"llvm.x86.avx512.cvttsd2usi\" => \"__builtin_ia32_vcvttsd2usi32\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.cvttsd2usi\" => \"__builtin_ia32_cvttsd2usi\",\n+    \"llvm.x86.avx512.cvttsd2usi64\" => \"__builtin_ia32_vcvttsd2usi64\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.cvttsd2usi64\" => \"__builtin_ia32_cvttsd2usi64\",\n     \"llvm.x86.avx512.cvttss2si\" => \"__builtin_ia32_vcvttss2si32\",\n     \"llvm.x86.avx512.cvttss2si64\" => \"__builtin_ia32_vcvttss2si64\",\n-    \"llvm.x86.avx512.cvttss2usi\" => \"__builtin_ia32_cvttss2usi\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.cvttss2usi\" => \"__builtin_ia32_vcvttss2usi32\",\n-    \"llvm.x86.avx512.cvttss2usi64\" => \"__builtin_ia32_cvttss2usi64\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.cvttss2usi64\" => \"__builtin_ia32_vcvttss2usi64\",\n+    \"llvm.x86.avx512.cvttss2usi\" => \"__builtin_ia32_vcvttss2usi32\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.cvttss2usi\" => \"__builtin_ia32_cvttss2usi\",\n+    \"llvm.x86.avx512.cvttss2usi64\" => \"__builtin_ia32_vcvttss2usi64\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.cvttss2usi64\" => \"__builtin_ia32_cvttss2usi64\",\n     \"llvm.x86.avx512.cvtusi2sd\" => \"__builtin_ia32_cvtusi2sd\",\n-    \"llvm.x86.avx512.cvtusi2ss\" => \"__builtin_ia32_cvtusi2ss\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.cvtusi2ss\" => \"__builtin_ia32_cvtusi2ss32\",\n+    \"llvm.x86.avx512.cvtusi2ss\" => \"__builtin_ia32_cvtusi2ss32\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.cvtusi2ss\" => \"__builtin_ia32_cvtusi2ss\",\n     \"llvm.x86.avx512.cvtusi642sd\" => \"__builtin_ia32_cvtusi2sd64\",\n     // [DUPLICATE]: \"llvm.x86.avx512.cvtusi642sd\" => \"__builtin_ia32_cvtusi642sd\",\n     \"llvm.x86.avx512.cvtusi642ss\" => \"__builtin_ia32_cvtusi2ss64\",\n@@ -3479,10 +3479,10 @@ match name {\n     \"llvm.x86.avx512.rcp14.ss\" => \"__builtin_ia32_rcp14ss_mask\",\n     \"llvm.x86.avx512.rcp28.pd\" => \"__builtin_ia32_rcp28pd_mask\",\n     \"llvm.x86.avx512.rcp28.ps\" => \"__builtin_ia32_rcp28ps_mask\",\n-    \"llvm.x86.avx512.rcp28.sd\" => \"__builtin_ia32_rcp28sd_mask\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.rcp28.sd\" => \"__builtin_ia32_rcp28sd_round_mask\",\n-    \"llvm.x86.avx512.rcp28.ss\" => \"__builtin_ia32_rcp28ss_mask\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.rcp28.ss\" => \"__builtin_ia32_rcp28ss_round_mask\",\n+    \"llvm.x86.avx512.rcp28.sd\" => \"__builtin_ia32_rcp28sd_round_mask\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.rcp28.sd\" => \"__builtin_ia32_rcp28sd_mask\",\n+    \"llvm.x86.avx512.rcp28.ss\" => \"__builtin_ia32_rcp28ss_round_mask\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.rcp28.ss\" => \"__builtin_ia32_rcp28ss_mask\",\n     \"llvm.x86.avx512.rndscale.sd\" => \"__builtin_ia32_rndscalesd\",\n     \"llvm.x86.avx512.rndscale.ss\" => \"__builtin_ia32_rndscaless\",\n     \"llvm.x86.avx512.rsqrt14.pd.128\" => \"__builtin_ia32_rsqrt14pd128_mask\",\n@@ -3495,10 +3495,10 @@ match name {\n     \"llvm.x86.avx512.rsqrt14.ss\" => \"__builtin_ia32_rsqrt14ss_mask\",\n     \"llvm.x86.avx512.rsqrt28.pd\" => \"__builtin_ia32_rsqrt28pd_mask\",\n     \"llvm.x86.avx512.rsqrt28.ps\" => \"__builtin_ia32_rsqrt28ps_mask\",\n-    \"llvm.x86.avx512.rsqrt28.sd\" => \"__builtin_ia32_rsqrt28sd_mask\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.rsqrt28.sd\" => \"__builtin_ia32_rsqrt28sd_round_mask\",\n-    \"llvm.x86.avx512.rsqrt28.ss\" => \"__builtin_ia32_rsqrt28ss_mask\",\n-    // [DUPLICATE]: \"llvm.x86.avx512.rsqrt28.ss\" => \"__builtin_ia32_rsqrt28ss_round_mask\",\n+    \"llvm.x86.avx512.rsqrt28.sd\" => \"__builtin_ia32_rsqrt28sd_round_mask\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.rsqrt28.sd\" => \"__builtin_ia32_rsqrt28sd_mask\",\n+    \"llvm.x86.avx512.rsqrt28.ss\" => \"__builtin_ia32_rsqrt28ss_round_mask\",\n+    // [DUPLICATE]: \"llvm.x86.avx512.rsqrt28.ss\" => \"__builtin_ia32_rsqrt28ss_mask\",\n     \"llvm.x86.avx512.scatter.dpd.512\" => \"__builtin_ia32_scattersiv8df\",\n     \"llvm.x86.avx512.scatter.dpi.512\" => \"__builtin_ia32_scattersiv16si\",\n     \"llvm.x86.avx512.scatter.dpq.512\" => \"__builtin_ia32_scattersiv8di\","}, {"sha": "a1e28c3181c9b39bf765266de740c705f50eed09", "filename": "tools/generate_intrinsics.py", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6e1bf49273a2011aa3fb26e641e410ca42d924af/tools%2Fgenerate_intrinsics.py", "raw_url": "https://github.com/rust-lang/rust/raw/6e1bf49273a2011aa3fb26e641e410ca42d924af/tools%2Fgenerate_intrinsics.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tools%2Fgenerate_intrinsics.py?ref=6e1bf49273a2011aa3fb26e641e410ca42d924af", "patch": "@@ -144,12 +144,34 @@ def extract_instrinsics_from_llvmint(llvmint, intrinsics):\n         append_translation(json_data, p, intrinsics[arch])\n \n \n+def fill_intrinsics(intrinsics, from_intrinsics, all_intrinsics):\n+    for arch in from_intrinsics:\n+        if arch not in intrinsics:\n+            intrinsics[arch] = []\n+        for entry in from_intrinsics[arch]:\n+            if entry[0] in all_intrinsics:\n+                if all_intrinsics[entry[0]] == entry[1]:\n+                    # This is a \"full\" duplicate, both the LLVM instruction and the GCC\n+                    # translation are the same.\n+                    continue\n+                intrinsics[arch].append((entry[0], entry[1], True))\n+            else:\n+                intrinsics[arch].append((entry[0], entry[1], False))\n+                all_intrinsics[entry[0]] = entry[1]\n+\n+\n def update_intrinsics(llvm_path, llvmint):\n-    intrinsics = {}\n+    intrinsics_llvm = {}\n+    intrinsics_llvmint = {}\n     all_intrinsics = {}\n \n-    extract_instrinsics_from_llvm(llvm_path, intrinsics)\n-    extract_instrinsics_from_llvmint(llvmint, intrinsics)\n+    extract_instrinsics_from_llvm(llvm_path, intrinsics_llvm)\n+    extract_instrinsics_from_llvmint(llvmint, intrinsics_llvmint)\n+\n+    intrinsics = {}\n+    # We give priority to translations from LLVM over the ones from llvmint.\n+    fill_intrinsics(intrinsics, intrinsics_llvm, all_intrinsics)\n+    fill_intrinsics(intrinsics, intrinsics_llvmint, all_intrinsics)\n \n     archs = [arch for arch in intrinsics]\n     archs.sort()\n@@ -166,18 +188,13 @@ def update_intrinsics(llvm_path, llvmint):\n         for arch in archs:\n             if len(intrinsics[arch]) == 0:\n                 continue\n-            intrinsics[arch].sort()\n+            intrinsics[arch].sort(key=lambda x: (x[0], x[2]))\n             out.write('    // {}\\n'.format(arch))\n             for entry in intrinsics[arch]:\n-                if entry[0] in all_intrinsics:\n-                    if all_intrinsics[entry[0]] == entry[1]:\n-                        # This is a \"full\" duplicate, both the LLVM instruction and the GCC\n-                        # translation are the same.\n-                        continue\n+                if entry[2] == True: # if it is a duplicate\n                     out.write('    // [DUPLICATE]: \"{}\" => \"{}\",\\n'.format(entry[0], entry[1]))\n                 else:\n                     out.write('    \"{}\" => \"{}\",\\n'.format(entry[0], entry[1]))\n-                    all_intrinsics[entry[0]] = entry[1]\n         out.write('    _ => unimplemented!(\"***** unsupported LLVM intrinsic {}\", name),\\n')\n         out.write(\"}\\n\")\n     print(\"Done!\")"}]}