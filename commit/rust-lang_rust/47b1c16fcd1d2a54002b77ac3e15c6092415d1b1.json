{"sha": "47b1c16fcd1d2a54002b77ac3e15c6092415d1b1", "node_id": "C_kwDOAAsO6NoAKDQ3YjFjMTZmY2QxZDJhNTQwMDJiNzdhYzNlMTVjNjA5MjQxNWQxYjE", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-01-12T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-01-12T17:51:31Z"}, "message": "Remove mir-opt tests for LLVM-style inline assembly", "tree": {"sha": "52125b10d9c61756c179e1ba8ebf058ff4a789f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52125b10d9c61756c179e1ba8ebf058ff4a789f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47b1c16fcd1d2a54002b77ac3e15c6092415d1b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47b1c16fcd1d2a54002b77ac3e15c6092415d1b1", "html_url": "https://github.com/rust-lang/rust/commit/47b1c16fcd1d2a54002b77ac3e15c6092415d1b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47b1c16fcd1d2a54002b77ac3e15c6092415d1b1/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61c233bac354df524f1e6daf29cf9521a6bb3de6", "url": "https://api.github.com/repos/rust-lang/rust/commits/61c233bac354df524f1e6daf29cf9521a6bb3de6", "html_url": "https://github.com/rust-lang/rust/commit/61c233bac354df524f1e6daf29cf9521a6bb3de6"}], "stats": {"total": 210, "additions": 0, "deletions": 210}, "files": [{"sha": "c60997be5d3c3bf5d26f24416b378db453182226", "filename": "src/test/mir-opt/unreachable_asm.main.UnreachablePropagation.diff", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff?ref=61c233bac354df524f1e6daf29cf9521a6bb3de6", "patch": "@@ -1,75 +0,0 @@\n-- // MIR for `main` before UnreachablePropagation\n-+ // MIR for `main` after UnreachablePropagation\n-  \n-  fn main() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/unreachable_asm.rs:10:11: 10:11\n-      let mut _1: std::option::Option<Empty>; // in scope 0 at $DIR/unreachable_asm.rs:11:23: 11:30\n-      let mut _2: isize;                   // in scope 0 at $DIR/unreachable_asm.rs:11:12: 11:20\n-      let _3: Empty;                       // in scope 0 at $DIR/unreachable_asm.rs:11:17: 11:19\n-      let mut _4: i32;                     // in scope 0 at $DIR/unreachable_asm.rs:12:13: 12:19\n-      let _5: ();                          // in scope 0 at $DIR/unreachable_asm.rs:14:9: 18:10\n-      let mut _6: bool;                    // in scope 0 at $DIR/unreachable_asm.rs:14:12: 14:16\n-      let _7: ();                          // in scope 0 at $DIR/unreachable_asm.rs:21:9: 21:37\n-      let mut _8: !;                       // in scope 0 at $DIR/unreachable_asm.rs:22:9: 22:21\n-      scope 1 {\n-          debug _x => _3;                  // in scope 1 at $DIR/unreachable_asm.rs:11:17: 11:19\n-      }\n-      scope 2 {\n-          debug _y => _4;                  // in scope 2 at $DIR/unreachable_asm.rs:12:13: 12:19\n-          scope 3 {\n-          }\n-      }\n-  \n-      bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/unreachable_asm.rs:11:23: 11:30\n-          _1 = empty() -> bb1;             // scope 0 at $DIR/unreachable_asm.rs:11:23: 11:30\n-                                           // mir::Constant\n-                                           // + span: $DIR/unreachable_asm.rs:11:23: 11:28\n-                                           // + literal: Const { ty: fn() -> std::option::Option<Empty> {empty}, val: Value(Scalar(<ZST>)) }\n-      }\n-  \n-      bb1: {\n-          _2 = discriminant(_1);           // scope 0 at $DIR/unreachable_asm.rs:11:12: 11:20\n-          switchInt(move _2) -> [1_isize: bb2, otherwise: bb6]; // scope 0 at $DIR/unreachable_asm.rs:11:12: 11:20\n-      }\n-  \n-      bb2: {\n-          StorageLive(_3);                 // scope 0 at $DIR/unreachable_asm.rs:11:17: 11:19\n-          _3 = move ((_1 as Some).0: Empty); // scope 0 at $DIR/unreachable_asm.rs:11:17: 11:19\n-          StorageLive(_4);                 // scope 0 at $DIR/unreachable_asm.rs:12:13: 12:19\n-          StorageLive(_5);                 // scope 2 at $DIR/unreachable_asm.rs:14:9: 18:10\n-          StorageLive(_6);                 // scope 2 at $DIR/unreachable_asm.rs:14:12: 14:16\n-          _6 = const true;                 // scope 2 at $DIR/unreachable_asm.rs:14:12: 14:16\n-          switchInt(move _6) -> [false: bb4, otherwise: bb3]; // scope 2 at $DIR/unreachable_asm.rs:14:12: 14:16\n-      }\n-  \n-      bb3: {\n-          _4 = const 21_i32;               // scope 2 at $DIR/unreachable_asm.rs:15:13: 15:20\n-          _5 = const ();                   // scope 2 at $DIR/unreachable_asm.rs:14:17: 16:10\n-          goto -> bb5;                     // scope 2 at $DIR/unreachable_asm.rs:14:9: 18:10\n-      }\n-  \n-      bb4: {\n-          _4 = const 42_i32;               // scope 2 at $DIR/unreachable_asm.rs:17:13: 17:20\n-          _5 = const ();                   // scope 2 at $DIR/unreachable_asm.rs:16:16: 18:10\n-          goto -> bb5;                     // scope 2 at $DIR/unreachable_asm.rs:14:9: 18:10\n-      }\n-  \n-      bb5: {\n-          StorageDead(_6);                 // scope 2 at $DIR/unreachable_asm.rs:18:9: 18:10\n-          StorageDead(_5);                 // scope 2 at $DIR/unreachable_asm.rs:18:9: 18:10\n-          StorageLive(_7);                 // scope 2 at $DIR/unreachable_asm.rs:21:9: 21:37\n-          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 3 at $DIR/unreachable_asm.rs:21:18: 21:34\n-          _7 = const ();                   // scope 3 at $DIR/unreachable_asm.rs:21:9: 21:37\n-          StorageDead(_7);                 // scope 2 at $DIR/unreachable_asm.rs:21:36: 21:37\n-          StorageLive(_8);                 // scope 2 at $DIR/unreachable_asm.rs:22:9: 22:21\n-          unreachable;                     // scope 2 at $DIR/unreachable_asm.rs:22:15: 22:17\n-      }\n-  \n-      bb6: {\n-          _0 = const ();                   // scope 0 at $DIR/unreachable_asm.rs:23:6: 23:6\n-          StorageDead(_1);                 // scope 0 at $DIR/unreachable_asm.rs:24:1: 24:2\n-          return;                          // scope 0 at $DIR/unreachable_asm.rs:24:2: 24:2\n-      }\n-  }\n-  "}, {"sha": "cbef05a3c05cc6cf99183f655f7b513cc6f0577a", "filename": "src/test/mir-opt/unreachable_asm.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm.rs?ref=61c233bac354df524f1e6daf29cf9521a6bb3de6", "patch": "@@ -1,24 +0,0 @@\n-#![feature(llvm_asm)]\n-\n-enum Empty {}\n-\n-fn empty() -> Option<Empty> {\n-    None\n-}\n-\n-// EMIT_MIR unreachable_asm.main.UnreachablePropagation.diff\n-fn main() {\n-    if let Some(_x) = empty() {\n-        let mut _y;\n-\n-        if true {\n-            _y = 21;\n-        } else {\n-            _y = 42;\n-        }\n-\n-        // asm instruction stops unreachable propagation to if else blocks bb4 and bb5.\n-        unsafe { llvm_asm!(\"NOP\"); }\n-        match _x { }\n-    }\n-}"}, {"sha": "28c5f031dbbe9bda439052aa59b3a23b2b136665", "filename": "src/test/mir-opt/unreachable_asm_2.main.UnreachablePropagation.diff", "status": "removed", "additions": 0, "deletions": 85, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff?ref=61c233bac354df524f1e6daf29cf9521a6bb3de6", "patch": "@@ -1,85 +0,0 @@\n-- // MIR for `main` before UnreachablePropagation\n-+ // MIR for `main` after UnreachablePropagation\n-  \n-  fn main() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/unreachable_asm_2.rs:10:11: 10:11\n-      let mut _1: std::option::Option<Empty>; // in scope 0 at $DIR/unreachable_asm_2.rs:11:23: 11:30\n-      let mut _2: isize;                   // in scope 0 at $DIR/unreachable_asm_2.rs:11:12: 11:20\n-      let _3: Empty;                       // in scope 0 at $DIR/unreachable_asm_2.rs:11:17: 11:19\n-      let mut _4: i32;                     // in scope 0 at $DIR/unreachable_asm_2.rs:12:13: 12:19\n-      let _5: ();                          // in scope 0 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n-      let mut _6: bool;                    // in scope 0 at $DIR/unreachable_asm_2.rs:14:12: 14:16\n-      let _7: ();                          // in scope 0 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n-      let _8: ();                          // in scope 0 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n-      let mut _9: !;                       // in scope 0 at $DIR/unreachable_asm_2.rs:24:9: 24:21\n-      scope 1 {\n-          debug _x => _3;                  // in scope 1 at $DIR/unreachable_asm_2.rs:11:17: 11:19\n-      }\n-      scope 2 {\n-          debug _y => _4;                  // in scope 2 at $DIR/unreachable_asm_2.rs:12:13: 12:19\n-          scope 3 {\n-          }\n-          scope 4 {\n-          }\n-      }\n-  \n-      bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/unreachable_asm_2.rs:11:23: 11:30\n-          _1 = empty() -> bb1;             // scope 0 at $DIR/unreachable_asm_2.rs:11:23: 11:30\n-                                           // mir::Constant\n-                                           // + span: $DIR/unreachable_asm_2.rs:11:23: 11:28\n-                                           // + literal: Const { ty: fn() -> std::option::Option<Empty> {empty}, val: Value(Scalar(<ZST>)) }\n-      }\n-  \n-      bb1: {\n-          _2 = discriminant(_1);           // scope 0 at $DIR/unreachable_asm_2.rs:11:12: 11:20\n--         switchInt(move _2) -> [1_isize: bb2, otherwise: bb6]; // scope 0 at $DIR/unreachable_asm_2.rs:11:12: 11:20\n-+         switchInt(move _2) -> [1_isize: bb2, otherwise: bb5]; // scope 0 at $DIR/unreachable_asm_2.rs:11:12: 11:20\n-      }\n-  \n-      bb2: {\n-          StorageLive(_3);                 // scope 0 at $DIR/unreachable_asm_2.rs:11:17: 11:19\n-          _3 = move ((_1 as Some).0: Empty); // scope 0 at $DIR/unreachable_asm_2.rs:11:17: 11:19\n-          StorageLive(_4);                 // scope 0 at $DIR/unreachable_asm_2.rs:12:13: 12:19\n-          StorageLive(_5);                 // scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n-          StorageLive(_6);                 // scope 2 at $DIR/unreachable_asm_2.rs:14:12: 14:16\n-          _6 = const true;                 // scope 2 at $DIR/unreachable_asm_2.rs:14:12: 14:16\n-          switchInt(move _6) -> [false: bb4, otherwise: bb3]; // scope 2 at $DIR/unreachable_asm_2.rs:14:12: 14:16\n-      }\n-  \n-      bb3: {\n-          StorageLive(_7);                 // scope 2 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n-          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 3 at $DIR/unreachable_asm_2.rs:16:22: 16:38\n-          _7 = const ();                   // scope 3 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n-          StorageDead(_7);                 // scope 2 at $DIR/unreachable_asm_2.rs:16:40: 16:41\n-          _4 = const 21_i32;               // scope 2 at $DIR/unreachable_asm_2.rs:17:13: 17:20\n-          _5 = const ();                   // scope 2 at $DIR/unreachable_asm_2.rs:14:17: 18:10\n--         goto -> bb5;                     // scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n-+         unreachable;                     // scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n-      }\n-  \n-      bb4: {\n-          StorageLive(_8);                 // scope 2 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n-          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 4 at $DIR/unreachable_asm_2.rs:20:22: 20:38\n-          _8 = const ();                   // scope 4 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n-          StorageDead(_8);                 // scope 2 at $DIR/unreachable_asm_2.rs:20:40: 20:41\n-          _4 = const 42_i32;               // scope 2 at $DIR/unreachable_asm_2.rs:21:13: 21:20\n-          _5 = const ();                   // scope 2 at $DIR/unreachable_asm_2.rs:18:16: 22:10\n--         goto -> bb5;                     // scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n-+         unreachable;                     // scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n-      }\n-  \n-      bb5: {\n--         StorageDead(_6);                 // scope 2 at $DIR/unreachable_asm_2.rs:22:9: 22:10\n--         StorageDead(_5);                 // scope 2 at $DIR/unreachable_asm_2.rs:22:9: 22:10\n--         StorageLive(_9);                 // scope 2 at $DIR/unreachable_asm_2.rs:24:9: 24:21\n--         unreachable;                     // scope 2 at $DIR/unreachable_asm_2.rs:24:15: 24:17\n--     }\n-- \n--     bb6: {\n-          _0 = const ();                   // scope 0 at $DIR/unreachable_asm_2.rs:25:6: 25:6\n-          StorageDead(_1);                 // scope 0 at $DIR/unreachable_asm_2.rs:26:1: 26:2\n-          return;                          // scope 0 at $DIR/unreachable_asm_2.rs:26:2: 26:2\n-      }\n-  }\n-  "}, {"sha": "e0d8e725147a3b0f7ba54326fbc0a3a65b308fbc", "filename": "src/test/mir-opt/unreachable_asm_2.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c233bac354df524f1e6daf29cf9521a6bb3de6/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.rs?ref=61c233bac354df524f1e6daf29cf9521a6bb3de6", "patch": "@@ -1,26 +0,0 @@\n-#![feature(llvm_asm)]\n-\n-enum Empty {}\n-\n-fn empty() -> Option<Empty> {\n-    None\n-}\n-\n-// EMIT_MIR unreachable_asm_2.main.UnreachablePropagation.diff\n-fn main() {\n-    if let Some(_x) = empty() {\n-        let mut _y;\n-\n-        if true {\n-            // asm instruction stops unreachable propagation to block bb3.\n-            unsafe { llvm_asm!(\"NOP\"); }\n-            _y = 21;\n-        } else {\n-            // asm instruction stops unreachable propagation to block bb3.\n-            unsafe { llvm_asm!(\"NOP\"); }\n-            _y = 42;\n-        }\n-\n-        match _x { }\n-    }\n-}"}]}