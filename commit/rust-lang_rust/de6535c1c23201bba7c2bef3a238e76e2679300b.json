{"sha": "de6535c1c23201bba7c2bef3a238e76e2679300b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNjUzNWMxYzIzMjAxYmJhN2MyYmVmM2EyMzhlNzZlMjY3OTMwMGI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T18:57:51Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T18:57:51Z"}, "message": "Elide preempt check on thunk and ctor frames. Wins 8kb on rustc.", "tree": {"sha": "e70eab1ae408040c3d2e852981c055dd3b3d5617", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e70eab1ae408040c3d2e852981c055dd3b3d5617"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de6535c1c23201bba7c2bef3a238e76e2679300b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de6535c1c23201bba7c2bef3a238e76e2679300b", "html_url": "https://github.com/rust-lang/rust/commit/de6535c1c23201bba7c2bef3a238e76e2679300b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de6535c1c23201bba7c2bef3a238e76e2679300b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d787d1e082a55db2d2fdcce15ca99d7665c018d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d787d1e082a55db2d2fdcce15ca99d7665c018d", "html_url": "https://github.com/rust-lang/rust/commit/8d787d1e082a55db2d2fdcce15ca99d7665c018d"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "1fde5432abd6bd6e11ba055e9fde1f51a857c5e9", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/de6535c1c23201bba7c2bef3a238e76e2679300b/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/de6535c1c23201bba7c2bef3a238e76e2679300b/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=de6535c1c23201bba7c2bef3a238e76e2679300b", "patch": "@@ -4889,7 +4889,11 @@ let trans_visitor\n       end\n   in\n \n-  let trans_frame_entry (fnid:node_id) (obj_fn:bool) : unit =\n+  let trans_frame_entry\n+      (fnid:node_id)\n+      (obj_fn:bool)\n+      (yield_check:bool)\n+      : unit =\n     let framesz = get_framesz cx fnid in\n     let callsz = get_callsz cx fnid in\n       Stack.push (Stack.create()) epilogue_jumps;\n@@ -4906,7 +4910,8 @@ let trans_visitor\n         (upcall_fixup \"upcall_grow_task\") obj_fn;\n \n       write_frame_info_ptrs (Some fnid);\n-      check_interrupt_flag ();\n+      if yield_check\n+      then check_interrupt_flag ();\n       iflog (fun _ -> annotate \"finished prologue\");\n   in\n \n@@ -4929,7 +4934,7 @@ let trans_visitor\n       (body:Ast.block)\n       (obj_fn:bool)\n       : unit =\n-    trans_frame_entry fnid obj_fn;\n+    trans_frame_entry fnid obj_fn true;\n     trans_block body;\n     trans_frame_exit fnid true;\n   in\n@@ -4938,7 +4943,7 @@ let trans_visitor\n       (obj_id:node_id)\n       (header:Ast.header_slots)\n       : unit =\n-    trans_frame_entry obj_id true;\n+    trans_frame_entry obj_id true false;\n \n     let all_args_rty = current_fn_args_rty None in\n     let all_args_cell = caller_args_cell all_args_rty in\n@@ -5059,7 +5064,7 @@ let trans_visitor\n   in\n \n   let trans_required_fn (fnid:node_id) (blockid:node_id) : unit =\n-    trans_frame_entry fnid false;\n+    trans_frame_entry fnid false false;\n     emit (Il.Enter (Hashtbl.find cx.ctxt_block_fixups blockid));\n     let (ilib, conv) = Hashtbl.find cx.ctxt_required_items fnid in\n     let lib_num =\n@@ -5197,7 +5202,7 @@ let trans_visitor\n       (tagid:node_id)\n       (tag:(Ast.header_tup * Ast.ty_tag * node_id))\n       : unit =\n-    trans_frame_entry tagid false;\n+    trans_frame_entry tagid false false;\n     trace_str cx.ctxt_sess.Session.sess_trace_tag\n       (\"in tag constructor \" ^ n);\n     let (header_tup, _, _) = tag in"}]}