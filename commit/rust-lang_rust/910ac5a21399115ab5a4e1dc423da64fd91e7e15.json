{"sha": "910ac5a21399115ab5a4e1dc423da64fd91e7e15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMGFjNWEyMTM5OTExNWFiNWE0ZTFkYzQyM2RhNjRmZDkxZTdlMTU=", "commit": {"author": {"name": "Galil\u00e9e 'Bill' Enguehard", "email": "galilee.enguehard@gmail.com", "date": "2020-05-22T18:10:37Z"}, "committer": {"name": "Galil\u00e9e 'Bill' Enguehard", "email": "galilee.enguehard@gmail.com", "date": "2020-05-22T18:10:37Z"}, "message": "Fix formatting error when no modpath is present", "tree": {"sha": "0a3f88b7562041b33c4230ab18ac5b1c93c0186a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a3f88b7562041b33c4230ab18ac5b1c93c0186a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/910ac5a21399115ab5a4e1dc423da64fd91e7e15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/910ac5a21399115ab5a4e1dc423da64fd91e7e15", "html_url": "https://github.com/rust-lang/rust/commit/910ac5a21399115ab5a4e1dc423da64fd91e7e15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/910ac5a21399115ab5a4e1dc423da64fd91e7e15/comments", "author": {"login": "Arthamys", "id": 11710698, "node_id": "MDQ6VXNlcjExNzEwNjk4", "avatar_url": "https://avatars.githubusercontent.com/u/11710698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arthamys", "html_url": "https://github.com/Arthamys", "followers_url": "https://api.github.com/users/Arthamys/followers", "following_url": "https://api.github.com/users/Arthamys/following{/other_user}", "gists_url": "https://api.github.com/users/Arthamys/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arthamys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arthamys/subscriptions", "organizations_url": "https://api.github.com/users/Arthamys/orgs", "repos_url": "https://api.github.com/users/Arthamys/repos", "events_url": "https://api.github.com/users/Arthamys/events{/privacy}", "received_events_url": "https://api.github.com/users/Arthamys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Arthamys", "id": 11710698, "node_id": "MDQ6VXNlcjExNzEwNjk4", "avatar_url": "https://avatars.githubusercontent.com/u/11710698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arthamys", "html_url": "https://github.com/Arthamys", "followers_url": "https://api.github.com/users/Arthamys/followers", "following_url": "https://api.github.com/users/Arthamys/following{/other_user}", "gists_url": "https://api.github.com/users/Arthamys/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arthamys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arthamys/subscriptions", "organizations_url": "https://api.github.com/users/Arthamys/orgs", "repos_url": "https://api.github.com/users/Arthamys/repos", "events_url": "https://api.github.com/users/Arthamys/events{/privacy}", "received_events_url": "https://api.github.com/users/Arthamys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5043c9ce9c9d07263305ef0e560b8ce506593748", "url": "https://api.github.com/repos/rust-lang/rust/commits/5043c9ce9c9d07263305ef0e560b8ce506593748", "html_url": "https://github.com/rust-lang/rust/commit/5043c9ce9c9d07263305ef0e560b8ce506593748"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8bb312156878394143b83e0b53b432e69294c4d7", "filename": "crates/ra_ide/src/display.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/910ac5a21399115ab5a4e1dc423da64fd91e7e15/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/910ac5a21399115ab5a4e1dc423da64fd91e7e15/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay.rs?ref=910ac5a21399115ab5a4e1dc423da64fd91e7e15", "patch": "@@ -79,14 +79,14 @@ pub(crate) fn rust_code_markup_with_doc(\n     doc: Option<&str>,\n     mod_path: Option<&str>,\n ) -> String {\n-    let mut buf = \"\".to_owned();\n+    let mut buf = String::new();\n \n     if let Some(mod_path) = mod_path {\n         if !mod_path.is_empty() {\n-            format_to!(buf, \"{}\\n___\\n\", mod_path);\n+            format_to!(buf, \"{}\\n___\\n\\n\", mod_path);\n         }\n     }\n-    format_to!(buf, \"```rust\\n\\n{}\\n```\", code);\n+    format_to!(buf, \"```rust\\n{}\\n```\", code);\n \n     if let Some(doc) = doc {\n         format_to!(buf, \"\\n\\n{}\", doc);"}]}