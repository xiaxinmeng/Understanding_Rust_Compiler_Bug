{"sha": "d2b89ebb92593139dc3eb9738ef7bef7bb5bf414", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYjg5ZWJiOTI1OTMxMzlkYzNlYjk3MzhlZjdiZWY3YmI1YmY0MTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-21T19:48:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-21T19:48:02Z"}, "message": "Merge #9363\n\n9363: Set explicit target directory to avoid cargo deadlock r=jonas-schievink a=oxalica\n\nFix #9360 \r\n\r\nr? @jonas-schievink \n\nCo-authored-by: oxalica <oxalicc@pm.me>", "tree": {"sha": "9cac4d20cec39106408ce7e5027b079e6cd966a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cac4d20cec39106408ce7e5027b079e6cd966a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2b89ebb92593139dc3eb9738ef7bef7bb5bf414", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0OzyCRBK7hj4Ov3rIwAAVTAIADYUPWVxQDxHVhwcPakhcJd6\nMBN21qpDrj+jg9JvfzSlBoxNhHa5NrKu90ju+NNyauolVd7pQs2z8k4OcXHC2hK7\n7iVB91PZio/GD+7v8RQ43vPs6eCMjE+M3GRdSdERuoOLMXTP5kx69tJcafhT5Tp4\nTJi8t49qncJz4EZctrEZK6vGziwg/Ay8pmFxnp//D8YsBGNOLj0I0LyKXFcmcIOO\n8BxejRb9qHSRcj9gFKMvIf5p4zCsvfZFhjPAnwBcs5HN+P/IqC6DYDAvKL8rDUtJ\nwmi6lWern+AA2t6RLta07K9TqEI2s0kMX+wYGWkajT7i6VMd9hTNwc4yP10Quj4=\n=J/PO\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cac4d20cec39106408ce7e5027b079e6cd966a1\nparent 8b3d93ee29619c090878679d06477fe9d32bc14d\nparent d368b663bdb8a6239d4a487112d4246e76d2c542\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624304882 +0000\ncommitter GitHub <noreply@github.com> 1624304882 +0000\n\nMerge #9363\n\n9363: Set explicit target directory to avoid cargo deadlock r=jonas-schievink a=oxalica\n\nFix #9360 \r\n\r\nr? @jonas-schievink \n\nCo-authored-by: oxalica <oxalicc@pm.me>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2b89ebb92593139dc3eb9738ef7bef7bb5bf414", "html_url": "https://github.com/rust-lang/rust/commit/d2b89ebb92593139dc3eb9738ef7bef7bb5bf414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2b89ebb92593139dc3eb9738ef7bef7bb5bf414/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b3d93ee29619c090878679d06477fe9d32bc14d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b3d93ee29619c090878679d06477fe9d32bc14d", "html_url": "https://github.com/rust-lang/rust/commit/8b3d93ee29619c090878679d06477fe9d32bc14d"}, {"sha": "d368b663bdb8a6239d4a487112d4246e76d2c542", "url": "https://api.github.com/repos/rust-lang/rust/commits/d368b663bdb8a6239d4a487112d4246e76d2c542", "html_url": "https://github.com/rust-lang/rust/commit/d368b663bdb8a6239d4a487112d4246e76d2c542"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "1e7aa026fa5f6b8213e508195199153832ac7898", "filename": "crates/proc_macro_test/build.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d2b89ebb92593139dc3eb9738ef7bef7bb5bf414/crates%2Fproc_macro_test%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b89ebb92593139dc3eb9738ef7bef7bb5bf414/crates%2Fproc_macro_test%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_test%2Fbuild.rs?ref=d2b89ebb92593139dc3eb9738ef7bef7bb5bf414", "patch": "@@ -17,9 +17,16 @@ fn main() {\n \n     let name = \"proc_macro_test_impl\";\n     let version = \"0.0.0\";\n+    let target_dir = out_dir.join(\"target\");\n     let output = Command::new(toolchain::cargo())\n         .current_dir(\"imp\")\n         .args(&[\"build\", \"-p\", \"proc_macro_test_impl\", \"--message-format\", \"json\"])\n+        // Explicit override the target directory to avoid using the same one which the parent\n+        // cargo is using, or we'll deadlock.\n+        // This can happen when `CARGO_TARGET_DIR` is set or global config forces all cargo\n+        // instance to use the same target directory.\n+        .arg(\"--target-dir\")\n+        .arg(&target_dir)\n         .output()\n         .unwrap();\n     assert!(output.status.success());\n@@ -39,10 +46,9 @@ fn main() {\n         }\n     }\n \n-    let src_path = artifact_path.expect(\"no dylib for proc_macro_test_impl found\");\n-    let dest_path = out_dir.join(src_path.file_name().unwrap());\n-    fs::copy(src_path, &dest_path).unwrap();\n+    // This file is under `target_dir` and is already under `OUT_DIR`.\n+    let artifact_path = artifact_path.expect(\"no dylib for proc_macro_test_impl found\");\n \n     let info_path = out_dir.join(\"proc_macro_test_location.txt\");\n-    fs::write(info_path, dest_path.to_str().unwrap()).unwrap();\n+    fs::write(info_path, artifact_path.to_str().unwrap()).unwrap();\n }"}]}