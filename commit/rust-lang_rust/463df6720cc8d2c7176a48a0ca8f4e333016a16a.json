{"sha": "463df6720cc8d2c7176a48a0ca8f4e333016a16a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2M2RmNjcyMGNjOGQyYzcxNzZhNDhhMGNhOGY0ZTMzMzAxNmExNmE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-02-21T22:06:18Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-02-22T10:09:21Z"}, "message": "Fix wrong handling of bare `dyn Trait` exposed by canonicalizer fix\n\nThe self type in the `dyn Trait` trait ref should always be ^0, but we didn't\nput that in there in the bare case.", "tree": {"sha": "48aa09c0066b945b4885a6ae0cc0a5981bfd631b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48aa09c0066b945b4885a6ae0cc0a5981bfd631b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/463df6720cc8d2c7176a48a0ca8f4e333016a16a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/463df6720cc8d2c7176a48a0ca8f4e333016a16a", "html_url": "https://github.com/rust-lang/rust/commit/463df6720cc8d2c7176a48a0ca8f4e333016a16a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/463df6720cc8d2c7176a48a0ca8f4e333016a16a/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d5ab6324795e5fc36e4b61cb66737958dc67e7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d5ab6324795e5fc36e4b61cb66737958dc67e7a", "html_url": "https://github.com/rust-lang/rust/commit/2d5ab6324795e5fc36e4b61cb66737958dc67e7a"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "0e6efa9712845c3ce9e146496c39ebcdaa331065", "filename": "crates/ra_hir_ty/src/lower.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/463df6720cc8d2c7176a48a0ca8f4e333016a16a/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/463df6720cc8d2c7176a48a0ca8f4e333016a16a/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flower.rs?ref=463df6720cc8d2c7176a48a0ca8f4e333016a16a", "patch": "@@ -239,7 +239,9 @@ impl Ty {\n     ) -> Ty {\n         let ty = match resolution {\n             TypeNs::TraitId(trait_) => {\n-                let trait_ref = TraitRef::from_resolved_path(ctx, trait_, resolved_segment, None);\n+                // if this is a bare dyn Trait, we'll directly put the required ^0 for the self type in there\n+                let self_ty = if remaining_segments.len() == 0 { Some(Ty::Bound(0)) } else { None };\n+                let trait_ref = TraitRef::from_resolved_path(ctx, trait_, resolved_segment, self_ty);\n                 return if remaining_segments.len() == 1 {\n                     let segment = remaining_segments.first().unwrap();\n                     let associated_ty = associated_type_by_name_including_super_traits("}]}