{"sha": "d91e3109824af5460bc2476bc6dbd74f8b0100d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MWUzMTA5ODI0YWY1NDYwYmMyNDc2YmM2ZGJkNzRmOGIwMTAwZDQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-28T22:29:15Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-28T22:33:15Z"}, "message": "Don't use literal info from the original source when pretty printing expanded ASTs.", "tree": {"sha": "0ad619df62b0b3af6e5a64eb413054a69c23252e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ad619df62b0b3af6e5a64eb413054a69c23252e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d91e3109824af5460bc2476bc6dbd74f8b0100d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d91e3109824af5460bc2476bc6dbd74f8b0100d4", "html_url": "https://github.com/rust-lang/rust/commit/d91e3109824af5460bc2476bc6dbd74f8b0100d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d91e3109824af5460bc2476bc6dbd74f8b0100d4/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "571d866c0d57ace7d9f9fd8ec04ae4be4009c76c", "url": "https://api.github.com/repos/rust-lang/rust/commits/571d866c0d57ace7d9f9fd8ec04ae4be4009c76c", "html_url": "https://github.com/rust-lang/rust/commit/571d866c0d57ace7d9f9fd8ec04ae4be4009c76c"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "72f7ac493b86bfd23ea2553f66d5e4640140341b", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d91e3109824af5460bc2476bc6dbd74f8b0100d4/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91e3109824af5460bc2476bc6dbd74f8b0100d4/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=d91e3109824af5460bc2476bc6dbd74f8b0100d4", "patch": "@@ -274,7 +274,8 @@ fn check_variants_T<T: copy>(\n                         crate2,\n                         filename,\n                         io::str_reader(\"\"), a,\n-                        pprust::no_ann())});\n+                        pprust::no_ann(),\n+                        false)});\n                 alt cx.mode {\n                   tm_converge {\n                     check_roundtrip_convergence(str3, 1u);\n@@ -422,11 +423,12 @@ fn parse_and_print(code: @str) -> str {\n         filename, code, []/~, sess);\n     io::with_str_reader(*code) { |rdr|\n         as_str({|a|pprust::print_crate(sess.cm,\n-                                        sess.span_diagnostic,\n-                                        crate,\n-                                        filename,\n-                                        rdr, a,\n-                                       pprust::no_ann())})\n+                                       sess.span_diagnostic,\n+                                       crate,\n+                                       filename,\n+                                       rdr, a,\n+                                       pprust::no_ann(),\n+                                       false)})\n     }\n }\n \n@@ -566,11 +568,12 @@ fn check_variants(files: [str]/~, cx: context) {\n         io::with_str_reader(*s) { |rdr|\n             #error(\"%s\",\n                    as_str({|a|pprust::print_crate(sess.cm,\n-                                                   sess.span_diagnostic,\n-                                                   crate,\n-                                                   file,\n-                                                   rdr, a,\n-                                                  pprust::no_ann())}));\n+                                                  sess.span_diagnostic,\n+                                                  crate,\n+                                                  file,\n+                                                  rdr, a,\n+                                                  pprust::no_ann(),\n+                                                  false)}));\n         }\n         check_variants_of_ast(*crate, sess.cm, file, cx);\n     }"}, {"sha": "833da64af799bbc363dae9bafdb8ad5e4a616d4a", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d91e3109824af5460bc2476bc6dbd74f8b0100d4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91e3109824af5460bc2476bc6dbd74f8b0100d4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=d91e3109824af5460bc2476bc6dbd74f8b0100d4", "patch": "@@ -64,14 +64,17 @@ const default_columns: uint = 78u;\n // copy forward.\n fn print_crate(cm: codemap, span_diagnostic: diagnostic::span_handler,\n                crate: @ast::crate, filename: str, in: io::reader,\n-               out: io::writer, ann: pp_ann) {\n+               out: io::writer, ann: pp_ann, is_expanded: bool) {\n     let r = comments::gather_comments_and_literals(span_diagnostic,\n                                                    filename, in);\n     let s =\n         @{s: pp::mk_printer(out, default_columns),\n           cm: some(cm),\n           comments: some(r.cmnts),\n-          literals: some(r.lits),\n+          // If the code is post expansion, don't use the table of\n+          // literals, since it doesn't correspond with the literals\n+          // in the AST anymore.\n+          literals: if is_expanded { none } else { some(r.lits) },\n           mut cur_cmnt: 0u,\n           mut cur_lit: 0u,\n           boxes: dvec(),"}, {"sha": "0b9490c9baa6610f21f225311e77f470b0c6b7be", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d91e3109824af5460bc2476bc6dbd74f8b0100d4/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91e3109824af5460bc2476bc6dbd74f8b0100d4/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=d91e3109824af5460bc2476bc6dbd74f8b0100d4", "patch": "@@ -310,22 +310,22 @@ fn pretty_print_input(sess: session, cfg: ast::crate_cfg, input: input,\n     };\n     let {crate, tcx} = compile_upto(sess, cfg, input, upto, none);\n \n-    let mut ann: pprust::pp_ann = pprust::no_ann();\n-    alt ppm {\n+    let ann = alt ppm {\n       ppm_typed {\n-        ann = {pre: ann_paren_for_expr,\n-               post: {|a|ann_typed_post(option::get(tcx), a)}};\n+        {pre: ann_paren_for_expr,\n+         post: {|a|ann_typed_post(option::get(tcx), a)}}\n       }\n       ppm_identified | ppm_expanded_identified {\n-        ann = {pre: ann_paren_for_expr, post: ann_identified_post};\n+        {pre: ann_paren_for_expr, post: ann_identified_post}\n       }\n-      ppm_expanded | ppm_normal {}\n-    }\n+      ppm_expanded | ppm_normal { pprust::no_ann() }\n+    };\n+    let is_expanded = upto != cu_parse;\n     let src = codemap::get_filemap(sess.codemap, source_name(input)).src;\n     io::with_str_reader(*src) { |rdr|\n         pprust::print_crate(sess.codemap, sess.span_diagnostic, crate,\n                             source_name(input),\n-                            rdr, io::stdout(), ann);\n+                            rdr, io::stdout(), ann, is_expanded);\n     }\n }\n "}]}