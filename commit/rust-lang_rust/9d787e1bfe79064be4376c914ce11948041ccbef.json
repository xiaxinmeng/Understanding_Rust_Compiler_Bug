{"sha": "9d787e1bfe79064be4376c914ce11948041ccbef", "node_id": "C_kwDOAAsO6NoAKDlkNzg3ZTFiZmU3OTA2NGJlNDM3NmM5MTRjZTExOTQ4MDQxY2NiZWY", "commit": {"author": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-04-14T12:44:17Z"}, "committer": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-04-16T08:53:22Z"}, "message": "Add `hir::Function::async_ret_type` method\n\nAdjust completion detail for `async fn` return types", "tree": {"sha": "f1e1df7e6f8f3bde9e6c4cc4e89e8ba344a4c5bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1e1df7e6f8f3bde9e6c4cc4e89e8ba344a4c5bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d787e1bfe79064be4376c914ce11948041ccbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d787e1bfe79064be4376c914ce11948041ccbef", "html_url": "https://github.com/rust-lang/rust/commit/9d787e1bfe79064be4376c914ce11948041ccbef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d787e1bfe79064be4376c914ce11948041ccbef/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f972adc2012fc49b35124d080a000a0d44c95452", "url": "https://api.github.com/repos/rust-lang/rust/commits/f972adc2012fc49b35124d080a000a0d44c95452", "html_url": "https://github.com/rust-lang/rust/commit/f972adc2012fc49b35124d080a000a0d44c95452"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "5aa1ca7e0baaf8e2a8a8d1665aa457210ec4c2e0", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9d787e1bfe79064be4376c914ce11948041ccbef/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d787e1bfe79064be4376c914ce11948041ccbef/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=9d787e1bfe79064be4376c914ce11948041ccbef", "patch": "@@ -1364,6 +1364,23 @@ impl Function {\n         Type::new_with_resolver_inner(db, &resolver, ty)\n     }\n \n+    pub fn async_ret_type(self, db: &dyn HirDatabase) -> Option<Type> {\n+        if !self.is_async(db) {\n+            return None;\n+        }\n+        let resolver = self.id.resolver(db.upcast());\n+        let substs = TyBuilder::placeholder_subst(db, self.id);\n+        let callable_sig = db.callable_item_signature(self.id.into()).substitute(Interner, &substs);\n+        let ret_ty = callable_sig.ret().clone();\n+        for pred in ret_ty.impl_trait_bounds(db).into_iter().flatten() {\n+            if let WhereClause::AliasEq(output_eq) = pred.into_value_and_skipped_binders().0 {\n+                return Type::new_with_resolver_inner(db, &resolver, output_eq.ty).into();\n+            }\n+        }\n+        never!(\"Async fn ret_type should be impl Future\");\n+        None\n+    }\n+\n     pub fn self_param(self, db: &dyn HirDatabase) -> Option<SelfParam> {\n         if !db.function_data(self.id).has_self_param() {\n             return None;"}, {"sha": "cbaecd208df63a8770d75205ddf712c770b2489f", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d787e1bfe79064be4376c914ce11948041ccbef/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d787e1bfe79064be4376c914ce11948041ccbef/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=9d787e1bfe79064be4376c914ce11948041ccbef", "patch": "@@ -228,7 +228,7 @@ fn should_add_parens(ctx: &CompletionContext) -> bool {\n }\n \n fn detail(db: &dyn HirDatabase, func: hir::Function) -> String {\n-    let ret_ty = func.ret_type(db);\n+    let ret_ty = func.async_ret_type(db).unwrap_or_else(|| func.ret_type(db));\n     let mut detail = String::new();\n \n     if func.is_const(db) {"}, {"sha": "77296d9099f53496c8de31551498dee1e2f6433b", "filename": "crates/ide_completion/src/tests/expression.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d787e1bfe79064be4376c914ce11948041ccbef/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d787e1bfe79064be4376c914ce11948041ccbef/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs?ref=9d787e1bfe79064be4376c914ce11948041ccbef", "patch": "@@ -624,20 +624,21 @@ fn main() {\n \n #[test]\n fn detail_async_fn() {\n-    // FIXME: #11438\n     check_empty(\n         r#\"\n //- minicore: future, sized\n trait Trait<T> {}\n async fn foo() -> u8 {}\n+async fn bar<U>() -> impl Trait<U> {}\n fn main() {\n     self::$0\n }\n \"#,\n         expect![[r\"\n             tt Trait\n             fn main() fn()\n-            fn foo()  async fn() -> impl Future<Output = u8>\n+            fn bar()  async fn() -> impl Trait<U>\n+            fn foo()  async fn() -> u8\n         \"]],\n     );\n }"}]}