{"sha": "de9deefb22519c2cd2233f517199c127c935250e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOWRlZWZiMjI1MTljMmNkMjIzM2Y1MTcxOTljMTI3YzkzNTI1MGU=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-05-17T16:07:23Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-05-17T20:28:04Z"}, "message": "Rewrite reader::docs with an iterator.", "tree": {"sha": "5ccfa28584d16f7d3ab914581797fa2cd86f1788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ccfa28584d16f7d3ab914581797fa2cd86f1788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de9deefb22519c2cd2233f517199c127c935250e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de9deefb22519c2cd2233f517199c127c935250e", "html_url": "https://github.com/rust-lang/rust/commit/de9deefb22519c2cd2233f517199c127c935250e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de9deefb22519c2cd2233f517199c127c935250e/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b7c17db2235a2a3f2c71242b11fc429a8d05a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b7c17db2235a2a3f2c71242b11fc429a8d05a90", "html_url": "https://github.com/rust-lang/rust/commit/8b7c17db2235a2a3f2c71242b11fc429a8d05a90"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "66fb579b1800fb2f0dde7b2c4f14fc0f35ae72ea", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/de9deefb22519c2cd2233f517199c127c935250e/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9deefb22519c2cd2233f517199c127c935250e/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=de9deefb22519c2cd2233f517199c127c935250e", "patch": "@@ -400,17 +400,42 @@ pub mod reader {\n     pub fn docs<F>(d: Doc, mut it: F) -> bool where\n         F: FnMut(usize, Doc) -> bool,\n     {\n-        let mut pos = d.start;\n-        while pos < d.end {\n-            let elt_tag = try_or!(tag_at(d.data, pos), false);\n-            let elt_size = try_or!(tag_len_at(d.data, elt_tag), false);\n-            pos = elt_size.next + elt_size.val;\n-            let doc = Doc { data: d.data, start: elt_size.next, end: pos };\n-            if !it(elt_tag.val, doc) {\n-                return false;\n+        DocsIterator { d: d }.all(|(value, doc)| {\n+            it(value, doc)\n+        })\n+    }\n+\n+    pub struct DocsIterator<'a> {\n+        d: Doc<'a>,\n+    }\n+\n+    impl<'a> Iterator for DocsIterator<'a> {\n+        type Item = (usize, Doc<'a>);\n+\n+        fn next(&mut self) -> Option<(usize, Doc<'a>)> {\n+            if self.d.start >= self.d.end {\n+                return None;\n             }\n+\n+            let elt_tag = try_or!(tag_at(self.d.data, self.d.start), {\n+                self.d.start = self.d.end;\n+                None\n+            });\n+            let elt_size = try_or!(tag_len_at(self.d.data, elt_tag), {\n+                self.d.start = self.d.end;\n+                None\n+            });\n+\n+            let end = elt_size.next + elt_size.val;\n+            let doc = Doc {\n+                data: self.d.data,\n+                start: elt_size.next,\n+                end: end,\n+            };\n+\n+            self.d.start = end;\n+            return Some((elt_tag.val, doc));\n         }\n-        return true;\n     }\n \n     pub fn tagged_docs<F>(d: Doc, tg: usize, mut it: F) -> bool where"}]}