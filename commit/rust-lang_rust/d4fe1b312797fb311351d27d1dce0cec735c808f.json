{"sha": "d4fe1b312797fb311351d27d1dce0cec735c808f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZmUxYjMxMjc5N2ZiMzExMzUxZDI3ZDFkY2UwY2VjNzM1YzgwOGY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-05T00:11:50Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-05T00:11:50Z"}, "message": "stdlib: Pass getopt matches by alias", "tree": {"sha": "7db79be9e06bc7f0a29881f1440aa4f0d42889ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7db79be9e06bc7f0a29881f1440aa4f0d42889ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4fe1b312797fb311351d27d1dce0cec735c808f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4fe1b312797fb311351d27d1dce0cec735c808f", "html_url": "https://github.com/rust-lang/rust/commit/d4fe1b312797fb311351d27d1dce0cec735c808f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4fe1b312797fb311351d27d1dce0cec735c808f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c0297cfe7f09194e6cc4aa6a7decf0fd7f3fdef", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c0297cfe7f09194e6cc4aa6a7decf0fd7f3fdef", "html_url": "https://github.com/rust-lang/rust/commit/6c0297cfe7f09194e6cc4aa6a7decf0fd7f3fdef"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "bb2a58c1cc041f5e2c2f5e712f51789afff4627d", "filename": "src/lib/getopts.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d4fe1b312797fb311351d27d1dce0cec735c808f/src%2Flib%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4fe1b312797fb311351d27d1dce0cec735c808f/src%2Flib%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fgetopts.rs?ref=d4fe1b312797fb311351d27d1dce0cec735c808f", "patch": "@@ -209,40 +209,40 @@ fn getopts_ivec(args: &str[], opts: &opt[]) -> result {\n     ret success({opts: opts, vals: vals, free: free});\n }\n \n-fn opt_vals(m: match, nm: str) -> optval[] {\n+fn opt_vals(m: &match, nm: str) -> optval[] {\n     ret alt find_opt(m.opts, mkname(nm)) {\n           some(id) { m.vals.(id) }\n           none. { log_err \"No option '\" + nm + \"' defined.\"; fail }\n         };\n }\n \n-fn opt_val(m: match, nm: str) -> optval { ret opt_vals(m, nm).(0); }\n+fn opt_val(m: &match, nm: str) -> optval { ret opt_vals(m, nm).(0); }\n \n-fn opt_present(m: match, nm: str) -> bool {\n+fn opt_present(m: &match, nm: str) -> bool {\n     ret ivec::len[optval](opt_vals(m, nm)) > 0u;\n }\n \n-fn opt_str(m: match, nm: str) -> str {\n+fn opt_str(m: &match, nm: str) -> str {\n     ret alt opt_val(m, nm) { val(s) { s } _ { fail } };\n }\n \n-fn opt_strs(m: match, nm: str) -> vec[str] {\n+fn opt_strs(m: &match, nm: str) -> vec[str] {\n     let acc: vec[str] = [];\n     for v: optval  in opt_vals(m, nm) {\n         alt v { val(s) { acc += [s]; } _ { } }\n     }\n     ret acc;\n }\n \n-fn opt_strs_ivec(m: match, nm: str) -> str[] {\n+fn opt_strs_ivec(m: &match, nm: str) -> str[] {\n     let acc: str[] = ~[];\n     for v: optval  in opt_vals(m, nm) {\n         alt v { val(s) { acc += ~[s]; } _ { } }\n     }\n     ret acc;\n }\n \n-fn opt_maybe_str(m: match, nm: str) -> option::t[str] {\n+fn opt_maybe_str(m: &match, nm: str) -> option::t[str] {\n     let vals = opt_vals(m, nm);\n     if ivec::len[optval](vals) == 0u { ret none[str]; }\n     ret alt vals.(0) { val(s) { some[str](s) } _ { none[str] } };\n@@ -252,7 +252,7 @@ fn opt_maybe_str(m: match, nm: str) -> option::t[str] {\n /// Returns none if the option was not present, `def` if the option was\n /// present but no argument was provided, and the argument if the option was\n /// present and an argument was provided.\n-fn opt_default(m: match, nm: str, def: str) -> option::t[str] {\n+fn opt_default(m: &match, nm: str, def: str) -> option::t[str] {\n     let vals = opt_vals(m, nm);\n     if ivec::len[optval](vals) == 0u { ret none[str]; }\n     ret alt vals.(0) { val(s) { some[str](s) } _ { some[str](def) } }"}]}