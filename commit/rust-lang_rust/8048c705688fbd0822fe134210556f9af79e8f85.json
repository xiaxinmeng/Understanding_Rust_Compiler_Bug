{"sha": "8048c705688fbd0822fe134210556f9af79e8f85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNDhjNzA1Njg4ZmJkMDgyMmZlMTM0MjEwNTU2ZjlhZjc5ZThmODU=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-04-14T01:33:25Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-05-11T16:55:31Z"}, "message": "Add `tcx` local variable", "tree": {"sha": "f744c283b4a63724276badb0b0f17b0b50299b65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f744c283b4a63724276badb0b0f17b0b50299b65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8048c705688fbd0822fe134210556f9af79e8f85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8048c705688fbd0822fe134210556f9af79e8f85", "html_url": "https://github.com/rust-lang/rust/commit/8048c705688fbd0822fe134210556f9af79e8f85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8048c705688fbd0822fe134210556f9af79e8f85/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db3a06d01eb517448954ec0eaccd68f88be988e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/db3a06d01eb517448954ec0eaccd68f88be988e0", "html_url": "https://github.com/rust-lang/rust/commit/db3a06d01eb517448954ec0eaccd68f88be988e0"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "a2d1a6a23c63b460962106dd9d7339651199a15b", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8048c705688fbd0822fe134210556f9af79e8f85/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8048c705688fbd0822fe134210556f9af79e8f85/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=8048c705688fbd0822fe134210556f9af79e8f85", "patch": "@@ -1540,9 +1540,10 @@ fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n         return;\n     }\n \n-    let param_env = cx.tcx().param_env(ty_def_id);\n-    let ty = cx.tcx().type_of(ty_def_id);\n-    match cx.tcx().layout_of(param_env.and(ty)) {\n+    let tcx = cx.tcx();\n+    let param_env = tcx.param_env(ty_def_id);\n+    let ty = tcx.type_of(ty_def_id);\n+    match tcx.layout_of(param_env.and(ty)) {\n         Ok(ty_layout) => {\n             writeln!(w, \"<h2 class=\\\"small-section-header\\\">Layout</h2>\");\n             writeln!(w, \"<div class=\\\"docblock\\\">\");"}]}