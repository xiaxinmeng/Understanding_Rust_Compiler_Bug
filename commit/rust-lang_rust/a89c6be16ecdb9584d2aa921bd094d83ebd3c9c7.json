{"sha": "a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4OWM2YmUxNmVjZGI5NTg0ZDJhYTkyMWJkMDk0ZDgzZWJkM2M5Yzc=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-28T23:46:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-28T23:46:16Z"}, "message": "Rollup merge of #86678 - FabianWolff:issue-86667, r=jackh726\n\nFix garbled suggestion for missing lifetime specifier\n\nThis PR fixes #86667. The suggestion code currently checks whether there is a generic parameter that is not a synthetic `impl Trait` parameter and, if so, suggests to insert a new lifetime `'a` before that generic parameter. However, it does not make sense to insert `'a` in front of an elided lifetime parameter, since these are synthetic as well, which leads to the garbled suggestion in #86667.", "tree": {"sha": "bc36fa7c7e93f5429eb16a35e48aefd912d6f24f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc36fa7c7e93f5429eb16a35e48aefd912d6f24f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg2l9ICRBK7hj4Ov3rIwAAkYQIACDOnT2go9YBx7Gx3ZdS5jRY\nAmreDoddcihIvLm7ITSoGn3UPjkjWAivds9zDxm8M5GUIbkdIZULJyXlKcwyXOXP\nmVJaUpqfD+E5wfWjsqgkgVyVh33Jq59lsB0Qnhl7isM71NzWdAN5g152RForxiee\nG1SsEHFGctq5Ptk+Cb1O39swqVp3uS5nUDyQgzXOIRd5PVLSiRjNg45iMR5ks6Mo\ntm+G/M87TwcuzhSKiyF6lMewkkG4Z1Mvo3iXhaFkfHIvfyWNYbDWNzr1ApgOfavy\ng8Q531fBOvhDwJUiNd1BmwAy9HCph3Nes3YcHieiXJe8jb0vc0j6LaiSeRxsM40=\n=oDMY\n-----END PGP SIGNATURE-----\n", "payload": "tree bc36fa7c7e93f5429eb16a35e48aefd912d6f24f\nparent af3c1544e2e2be7142a6f6adcdbcfaa17014b515\nparent f333b4795c53991e513ec06f25f496c9d8075c88\nauthor Yuki Okushi <jtitor@2k36.org> 1624923976 +0900\ncommitter GitHub <noreply@github.com> 1624923976 +0900\n\nRollup merge of #86678 - FabianWolff:issue-86667, r=jackh726\n\nFix garbled suggestion for missing lifetime specifier\n\nThis PR fixes #86667. The suggestion code currently checks whether there is a generic parameter that is not a synthetic `impl Trait` parameter and, if so, suggests to insert a new lifetime `'a` before that generic parameter. However, it does not make sense to insert `'a` in front of an elided lifetime parameter, since these are synthetic as well, which leads to the garbled suggestion in #86667.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7", "html_url": "https://github.com/rust-lang/rust/commit/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af3c1544e2e2be7142a6f6adcdbcfaa17014b515", "url": "https://api.github.com/repos/rust-lang/rust/commits/af3c1544e2e2be7142a6f6adcdbcfaa17014b515", "html_url": "https://github.com/rust-lang/rust/commit/af3c1544e2e2be7142a6f6adcdbcfaa17014b515"}, {"sha": "f333b4795c53991e513ec06f25f496c9d8075c88", "url": "https://api.github.com/repos/rust-lang/rust/commits/f333b4795c53991e513ec06f25f496c9d8075c88", "html_url": "https://github.com/rust-lang/rust/commit/f333b4795c53991e513ec06f25f496c9d8075c88"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "76979ab50b9e6654b2778b47428670a034e2f522", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7", "patch": "@@ -1962,6 +1962,8 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                                 hir::GenericParamKind::Type {\n                                     synthetic: Some(hir::SyntheticTyParamKind::ImplTrait),\n                                     ..\n+                                } | hir::GenericParamKind::Lifetime {\n+                                    kind: hir::LifetimeParamKind::Elided\n                                 }\n                             )\n                         }) {"}, {"sha": "6aceb13746937cc1cfedf32ba0fd28d8e6f613b2", "filename": "src/test/ui/suggestions/issue-86667.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-86667.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-86667.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-86667.rs?ref=a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7", "patch": "@@ -0,0 +1,16 @@\n+// Regression test for #86667, where a garbled suggestion was issued for\n+// a missing named lifetime parameter.\n+\n+// compile-flags: --edition 2018\n+\n+async fn a(s1: &str, s2: &str) -> &str {\n+//~^ ERROR: missing lifetime specifier [E0106]\n+    s1\n+}\n+\n+fn b(s1: &str, s2: &str) -> &str {\n+//~^ ERROR: missing lifetime specifier [E0106]\n+    s1\n+}\n+\n+fn main() {}"}, {"sha": "77f7f874a4e42b62f0d2d6d110a4ff580c150abf", "filename": "src/test/ui/suggestions/issue-86667.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-86667.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7/src%2Ftest%2Fui%2Fsuggestions%2Fissue-86667.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-86667.stderr?ref=a89c6be16ecdb9584d2aa921bd094d83ebd3c9c7", "patch": "@@ -0,0 +1,27 @@\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/issue-86667.rs:6:35\n+   |\n+LL | async fn a(s1: &str, s2: &str) -> &str {\n+   |                ----      ----     ^ expected named lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `s1` or `s2`\n+help: consider introducing a named lifetime parameter\n+   |\n+LL | async fn a<'a>(s1: &'a str, s2: &'a str) -> &'a str {\n+   |           ^^^^     ^^^^^^^      ^^^^^^^     ^^^\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/issue-86667.rs:11:29\n+   |\n+LL | fn b(s1: &str, s2: &str) -> &str {\n+   |          ----      ----     ^ expected named lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `s1` or `s2`\n+help: consider introducing a named lifetime parameter\n+   |\n+LL | fn b<'a>(s1: &'a str, s2: &'a str) -> &'a str {\n+   |     ^^^^     ^^^^^^^      ^^^^^^^     ^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0106`."}]}