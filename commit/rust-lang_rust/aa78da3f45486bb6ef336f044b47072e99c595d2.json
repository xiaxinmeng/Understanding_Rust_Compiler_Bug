{"sha": "aa78da3f45486bb6ef336f044b47072e99c595d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNzhkYTNmNDU0ODZiYjZlZjMzNmYwNDRiNDcwNzJlOTljNTk1ZDI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-23T20:33:34Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-23T20:34:01Z"}, "message": "Handle EINTR in epoll for native timers", "tree": {"sha": "2eb82c872bcd48ce4634f8451dbc96efc144daf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eb82c872bcd48ce4634f8451dbc96efc144daf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa78da3f45486bb6ef336f044b47072e99c595d2", "comment_count": 14, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa78da3f45486bb6ef336f044b47072e99c595d2", "html_url": "https://github.com/rust-lang/rust/commit/aa78da3f45486bb6ef336f044b47072e99c595d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa78da3f45486bb6ef336f044b47072e99c595d2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "657e3530225410d167d7f1ee827f15bc69cd965e", "url": "https://api.github.com/repos/rust-lang/rust/commits/657e3530225410d167d7f1ee827f15bc69cd965e", "html_url": "https://github.com/rust-lang/rust/commit/657e3530225410d167d7f1ee827f15bc69cd965e"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "0556b0c2599c0284c7937f7a648b65b577db0df4", "filename": "src/libnative/io/timer_timerfd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa78da3f45486bb6ef336f044b47072e99c595d2/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa78da3f45486bb6ef336f044b47072e99c595d2/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_timerfd.rs?ref=aa78da3f45486bb6ef336f044b47072e99c595d2", "patch": "@@ -85,6 +85,7 @@ fn helper(input: libc::c_int, messages: Port<Req>) {\n                             events.len() as libc::c_int, -1)\n         } {\n             0 => fail!(\"epoll_wait returned immediately!\"),\n+            -1 if os::errno() == libc::EINTR as int => { continue }\n             -1 => fail!(\"epoll wait failed: {}\", os::last_os_error()),\n             n => n\n         };"}]}