{"sha": "3e362a4800932186c7351972753ecdf715050983", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMzYyYTQ4MDA5MzIxODZjNzM1MTk3Mjc1M2VjZGY3MTUwNTA5ODM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-03T12:31:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-04T06:12:33Z"}, "message": "make unwrap_or_abort non-generic again", "tree": {"sha": "88712a0dd7a9c09491d3fafceed5fc4d1c952546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88712a0dd7a9c09491d3fafceed5fc4d1c952546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e362a4800932186c7351972753ecdf715050983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e362a4800932186c7351972753ecdf715050983", "html_url": "https://github.com/rust-lang/rust/commit/3e362a4800932186c7351972753ecdf715050983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e362a4800932186c7351972753ecdf715050983/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3035a05a74db3a1a7f95e139c4d683cc7be51159", "url": "https://api.github.com/repos/rust-lang/rust/commits/3035a05a74db3a1a7f95e139c4d683cc7be51159", "html_url": "https://github.com/rust-lang/rust/commit/3035a05a74db3a1a7f95e139c4d683cc7be51159"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2ad562485eb7cb7bb321e8315068a004917de502", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e362a4800932186c7351972753ecdf715050983/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e362a4800932186c7351972753ecdf715050983/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=3e362a4800932186c7351972753ecdf715050983", "patch": "@@ -101,7 +101,7 @@ impl<'a> StringReader<'a> {\n         self.override_span.unwrap_or_else(|| Span::new(lo, hi, NO_EXPANSION))\n     }\n \n-    fn unwrap_or_abort<T>(&mut self, res: Result<T, ()>) -> T {\n+    fn unwrap_or_abort(&mut self, res: Result<Token, ()>) -> Token {\n         match res {\n             Ok(tok) => tok,\n             Err(_) => {"}]}