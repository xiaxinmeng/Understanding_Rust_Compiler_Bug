{"sha": "e65098bcf17d2c0473ba4aeca2220db801d3f575", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NTA5OGJjZjE3ZDJjMDQ3M2JhNGFlY2EyMjIwZGI4MDFkM2Y1NzU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-03T08:11:34Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-03T18:12:52Z"}, "message": "Rollup merge of #50407 - nnethercote:inline-BytePos, r=michaelwoerister\n\nAlways inline simple BytePos and CharPos methods.\n\nBecause they are (a) trivial, and (b) super hot.\n\nThis change speeds up most rustc-perf benchmarks, the best by 5%.\n\nFull measurements:\n```\ncoercions-check\n\tavg: -3.0%\tmin: -5.4%\tmax: -1.3%\nhelloworld-check\n\tavg: -3.9%\tmin: -4.1%\tmax: -3.6%\nunify-linearly-check\n\tavg: -3.1%\tmin: -3.7%\tmax: -2.5%\ndeeply-nested-check\n\tavg: -2.6%\tmin: -3.6%\tmax: -2.1%\ncoercions-opt\n\tavg: -2.1%\tmin: -3.6%\tmax: -1.3%\ncoercions\n\tavg: -2.0%\tmin: -3.5%\tmax: -1.0%\nissue-46449-check\n\tavg: -2.8%\tmin: -3.1%\tmax: -2.6%\nparser-check\n\tavg: -2.6%\tmin: -3.1%\tmax: -2.0%\ndeeply-nested-opt\n\tavg: -1.5%\tmin: -3.0%\tmax: -0.8%\ndeeply-nested\n\tavg: -1.8%\tmin: -2.9%\tmax: -1.1%\nissue-46449\n\tavg: -1.4%\tmin: -2.7%\tmax: -1.1%\nissue-46449-opt\n\tavg: -1.0%\tmin: -2.7%\tmax: -0.5%\nregression-31157-check\n\tavg: -1.7%\tmin: -2.3%\tmax: -1.1%\ntuple-stress-opt\n\tavg: -1.0%\tmin: -2.2%\tmax: -0.5%\ntokio-webpush-simple-check\n\tavg: -1.6%\tmin: -2.1%\tmax: -1.2%\ntuple-stress-check\n\tavg: -1.2%\tmin: -2.1%\tmax: -0.8%\nunused-warnings-check\n\tavg: -1.6%\tmin: -2.0%\tmax: -1.4%\nencoding-check\n\tavg: -1.4%\tmin: -1.8%\tmax: -1.0%\ntuple-stress\n\tavg: -1.0%\tmin: -1.7%\tmax: -0.6%\nencoding-opt\n\tavg: -0.9%\tmin: -1.6%\tmax: -0.3%\nunused-warnings\n\tavg: -1.3%\tmin: -1.6%\tmax: -1.2%\nunused-warnings-opt\n\tavg: -1.3%\tmin: -1.5%\tmax: -1.2%\nencoding\n\tavg: -1.0%\tmin: -1.5%\tmax: -0.4%\nhtml5ever-opt\n\tavg: -0.7%\tmin: -1.5%\tmax: -0.3%\nfutures\n\tavg: -1.0%\tmin: -1.5%\tmax: -0.5%\nfutures-check\n\tavg: -1.0%\tmin: -1.5%\tmax: -0.5%\nfutures-opt\n\tavg: -0.8%\tmin: -1.4%\tmax: -0.3%\nregression-31157-opt\n\tavg: -0.5%\tmin: -1.4%\tmax: -0.0%\nunify-linearly-opt\n\tavg: -1.2%\tmin: -1.4%\tmax: -1.0%\nparser-opt\n\tavg: -1.2%\tmin: -1.4%\tmax: -1.0%\nhelloworld\n\tavg: -1.3%\tmin: -1.4%\tmax: -1.3%\nhelloworld-opt\n\tavg: -1.3%\tmin: -1.3%\tmax: -1.3%\nparser\n\tavg: -1.2%\tmin: -1.3%\tmax: -1.0%\nregex-check\n\tavg: -1.1%\tmin: -1.3%\tmax: -0.7%\nunify-linearly\n\tavg: -1.1%\tmin: -1.3%\tmax: -1.0%\nsyn-check\n\tavg: -0.8%\tmin: -1.3%\tmax: -0.3%\npiston-image-check\n\tavg: -0.7%\tmin: -1.2%\tmax: -0.4%\nregex-opt\n\tavg: -0.5%\tmin: -1.2%\tmax: -0.0%\nsyn\n\tavg: -0.6%\tmin: -1.2%\tmax: -0.3%\nhyper\n\tavg: -0.8%\tmin: -1.2%\tmax: -0.4%\nsyn-opt\n\tavg: -0.5%\tmin: -1.2%\tmax: -0.1%\nregex\n\tavg: -0.7%\tmin: -1.2%\tmax: -0.3%\nregression-31157\n\tavg: -0.7%\tmin: -1.2%\tmax: -0.3%\nclap-rs-check\n\tavg: -0.6%\tmin: -1.1%\tmax: -0.2%\nhyper-check\n\tavg: -0.8%\tmin: -1.1%\tmax: -0.5%\npiston-image-opt\n\tavg: -0.4%\tmin: -1.1%\tmax: -0.0%\nhyper-opt\n\tavg: -0.6%\tmin: -1.0%\tmax: 0.0%\ninflate\n\tavg: -0.4%\tmin: -1.0%\tmax: -0.2%\nhtml5ever\n\tavg: -0.5%\tmin: -1.0%\tmax: -0.2%\ninflate-opt\n\tavg: -0.3%\tmin: -1.0%\tmax: 0.3%\ndeep-vector-check\n\tavg: -0.6%\tmin: -1.0%\tmax: -0.3%\nstyle-servo-check\n\tavg: -0.7%\tmin: -1.0%\tmax: -0.5%\ntokio-webpush-simple-opt\n\tavg: -0.3%\tmin: -0.9%\tmax: 0.0%\ninflate-check\n\tavg: -0.3%\tmin: -0.9%\tmax: -0.1%\npiston-image\n\tavg: -0.4%\tmin: -0.8%\tmax: -0.2%\ndeep-vector\n\tavg: -0.4%\tmin: -0.8%\tmax: -0.1%\nclap-rs\n\tavg: -0.4%\tmin: -0.7%\tmax: -0.2%\ndeep-vector-opt\n\tavg: -0.2%\tmin: -0.7%\tmax: 0.2%\nstyle-servo\n\tavg: -0.3%\tmin: -0.7%\tmax: 0.1%\ncrates.io\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.2%\ncrates.io-opt\n\tavg: -0.3%\tmin: -0.6%\tmax: -0.1%\ntokio-webpush-simple\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.3%\ncrates.io-check\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.3%\nhtml5ever-check\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.2%\nserde\n\tavg: -0.1%\tmin: -0.6%\tmax: 0.2%\nserde-check\n\tavg: -0.1%\tmin: -0.5%\tmax: 0.4%\nserde-opt\n\tavg: -0.2%\tmin: -0.5%\tmax: -0.1%\nstyle-servo-opt\n\tavg: -0.2%\tmin: -0.4%\tmax: -0.0%\nclap-rs-opt\n\tavg: -0.1%\tmin: -0.3%\tmax: 0.0%", "tree": {"sha": "30269a3586ad0cee435e3a1dbf58b5dbe487b6dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30269a3586ad0cee435e3a1dbf58b5dbe487b6dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e65098bcf17d2c0473ba4aeca2220db801d3f575", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlrrUSQACgkQ/vbIBR0O\nATxCQg//RLpjT8c99/h3/KjyXbCmSZdmydz1NV2FFz5oyj1gj1D7Vx6qS07Et7NB\n9k9FLkFw5Ffx5cXuzKir01i9JAOJDxcPKPlXIibGStRIK1ElC0/v7+q7rk69peFi\nndOC/5t4hrP2TQNNtWOeK7fPvFfRDUbVrBJggrYkivjjzcZzi9Z+3Phf2PD5MSAF\n8f/Udf4DyHqFOTE42UP/WdOVgutBcR7Fs949UzrYKSSZvpXozdgcndCprkXGfTHT\n1VNbdMX92+YQ8qbBGrkT5Iw06RDWPt2NXJ6LwbiRjaFAM04mZOEzbYi2tNinuei2\nt7Ls7FvtXNoTwE3UoUaWUxHqkGuAHTpscRlDbMa50WHymwtPf1qSCahyg5x5CC4Z\nOw7lQmhGUTJq+bzikv0HnCvDTkj0ud9rD0PJdI+2lNNV3rplZZamBbVRjHcWTjwC\nZQJtLB/vIZV+G/SpmalNkjjgkgnLSQfHSgng7ghvzxCOV3dCeXN6OS/XgD4jPdeR\nMhyOcVvvZuwVeRNCg2zFyTEomPZcHqt34EaAijMSxakKxikR74C6P+ErFOGvGhtv\nLNx+hGlmjNKahayd+bPGf8AswjjVR6FY7h4o0iTfRGO1gwXSrleKpTDz1B4XeA8m\nQp5k+ElwcqsW1tpLpdk1PPmaEFkUqBnKz7PIwLWZOwJsnlY/Gbc=\n=mER7\n-----END PGP SIGNATURE-----", "payload": "tree 30269a3586ad0cee435e3a1dbf58b5dbe487b6dc\nparent cd6fa5f426195ad20448e402dc5224be69c9627d\nparent e740b97be699c9445b8a1a7af6348ca2d4c460ce\nauthor kennytm <kennytm@gmail.com> 1525335094 +0800\ncommitter kennytm <kennytm@gmail.com> 1525371172 +0800\n\nRollup merge of #50407 - nnethercote:inline-BytePos, r=michaelwoerister\n\nAlways inline simple BytePos and CharPos methods.\n\nBecause they are (a) trivial, and (b) super hot.\n\nThis change speeds up most rustc-perf benchmarks, the best by 5%.\n\nFull measurements:\n```\ncoercions-check\n\tavg: -3.0%\tmin: -5.4%\tmax: -1.3%\nhelloworld-check\n\tavg: -3.9%\tmin: -4.1%\tmax: -3.6%\nunify-linearly-check\n\tavg: -3.1%\tmin: -3.7%\tmax: -2.5%\ndeeply-nested-check\n\tavg: -2.6%\tmin: -3.6%\tmax: -2.1%\ncoercions-opt\n\tavg: -2.1%\tmin: -3.6%\tmax: -1.3%\ncoercions\n\tavg: -2.0%\tmin: -3.5%\tmax: -1.0%\nissue-46449-check\n\tavg: -2.8%\tmin: -3.1%\tmax: -2.6%\nparser-check\n\tavg: -2.6%\tmin: -3.1%\tmax: -2.0%\ndeeply-nested-opt\n\tavg: -1.5%\tmin: -3.0%\tmax: -0.8%\ndeeply-nested\n\tavg: -1.8%\tmin: -2.9%\tmax: -1.1%\nissue-46449\n\tavg: -1.4%\tmin: -2.7%\tmax: -1.1%\nissue-46449-opt\n\tavg: -1.0%\tmin: -2.7%\tmax: -0.5%\nregression-31157-check\n\tavg: -1.7%\tmin: -2.3%\tmax: -1.1%\ntuple-stress-opt\n\tavg: -1.0%\tmin: -2.2%\tmax: -0.5%\ntokio-webpush-simple-check\n\tavg: -1.6%\tmin: -2.1%\tmax: -1.2%\ntuple-stress-check\n\tavg: -1.2%\tmin: -2.1%\tmax: -0.8%\nunused-warnings-check\n\tavg: -1.6%\tmin: -2.0%\tmax: -1.4%\nencoding-check\n\tavg: -1.4%\tmin: -1.8%\tmax: -1.0%\ntuple-stress\n\tavg: -1.0%\tmin: -1.7%\tmax: -0.6%\nencoding-opt\n\tavg: -0.9%\tmin: -1.6%\tmax: -0.3%\nunused-warnings\n\tavg: -1.3%\tmin: -1.6%\tmax: -1.2%\nunused-warnings-opt\n\tavg: -1.3%\tmin: -1.5%\tmax: -1.2%\nencoding\n\tavg: -1.0%\tmin: -1.5%\tmax: -0.4%\nhtml5ever-opt\n\tavg: -0.7%\tmin: -1.5%\tmax: -0.3%\nfutures\n\tavg: -1.0%\tmin: -1.5%\tmax: -0.5%\nfutures-check\n\tavg: -1.0%\tmin: -1.5%\tmax: -0.5%\nfutures-opt\n\tavg: -0.8%\tmin: -1.4%\tmax: -0.3%\nregression-31157-opt\n\tavg: -0.5%\tmin: -1.4%\tmax: -0.0%\nunify-linearly-opt\n\tavg: -1.2%\tmin: -1.4%\tmax: -1.0%\nparser-opt\n\tavg: -1.2%\tmin: -1.4%\tmax: -1.0%\nhelloworld\n\tavg: -1.3%\tmin: -1.4%\tmax: -1.3%\nhelloworld-opt\n\tavg: -1.3%\tmin: -1.3%\tmax: -1.3%\nparser\n\tavg: -1.2%\tmin: -1.3%\tmax: -1.0%\nregex-check\n\tavg: -1.1%\tmin: -1.3%\tmax: -0.7%\nunify-linearly\n\tavg: -1.1%\tmin: -1.3%\tmax: -1.0%\nsyn-check\n\tavg: -0.8%\tmin: -1.3%\tmax: -0.3%\npiston-image-check\n\tavg: -0.7%\tmin: -1.2%\tmax: -0.4%\nregex-opt\n\tavg: -0.5%\tmin: -1.2%\tmax: -0.0%\nsyn\n\tavg: -0.6%\tmin: -1.2%\tmax: -0.3%\nhyper\n\tavg: -0.8%\tmin: -1.2%\tmax: -0.4%\nsyn-opt\n\tavg: -0.5%\tmin: -1.2%\tmax: -0.1%\nregex\n\tavg: -0.7%\tmin: -1.2%\tmax: -0.3%\nregression-31157\n\tavg: -0.7%\tmin: -1.2%\tmax: -0.3%\nclap-rs-check\n\tavg: -0.6%\tmin: -1.1%\tmax: -0.2%\nhyper-check\n\tavg: -0.8%\tmin: -1.1%\tmax: -0.5%\npiston-image-opt\n\tavg: -0.4%\tmin: -1.1%\tmax: -0.0%\nhyper-opt\n\tavg: -0.6%\tmin: -1.0%\tmax: 0.0%\ninflate\n\tavg: -0.4%\tmin: -1.0%\tmax: -0.2%\nhtml5ever\n\tavg: -0.5%\tmin: -1.0%\tmax: -0.2%\ninflate-opt\n\tavg: -0.3%\tmin: -1.0%\tmax: 0.3%\ndeep-vector-check\n\tavg: -0.6%\tmin: -1.0%\tmax: -0.3%\nstyle-servo-check\n\tavg: -0.7%\tmin: -1.0%\tmax: -0.5%\ntokio-webpush-simple-opt\n\tavg: -0.3%\tmin: -0.9%\tmax: 0.0%\ninflate-check\n\tavg: -0.3%\tmin: -0.9%\tmax: -0.1%\npiston-image\n\tavg: -0.4%\tmin: -0.8%\tmax: -0.2%\ndeep-vector\n\tavg: -0.4%\tmin: -0.8%\tmax: -0.1%\nclap-rs\n\tavg: -0.4%\tmin: -0.7%\tmax: -0.2%\ndeep-vector-opt\n\tavg: -0.2%\tmin: -0.7%\tmax: 0.2%\nstyle-servo\n\tavg: -0.3%\tmin: -0.7%\tmax: 0.1%\ncrates.io\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.2%\ncrates.io-opt\n\tavg: -0.3%\tmin: -0.6%\tmax: -0.1%\ntokio-webpush-simple\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.3%\ncrates.io-check\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.3%\nhtml5ever-check\n\tavg: -0.4%\tmin: -0.6%\tmax: -0.2%\nserde\n\tavg: -0.1%\tmin: -0.6%\tmax: 0.2%\nserde-check\n\tavg: -0.1%\tmin: -0.5%\tmax: 0.4%\nserde-opt\n\tavg: -0.2%\tmin: -0.5%\tmax: -0.1%\nstyle-servo-opt\n\tavg: -0.2%\tmin: -0.4%\tmax: -0.0%\nclap-rs-opt\n\tavg: -0.1%\tmin: -0.3%\tmax: 0.0%\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e65098bcf17d2c0473ba4aeca2220db801d3f575", "html_url": "https://github.com/rust-lang/rust/commit/e65098bcf17d2c0473ba4aeca2220db801d3f575", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e65098bcf17d2c0473ba4aeca2220db801d3f575/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd6fa5f426195ad20448e402dc5224be69c9627d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd6fa5f426195ad20448e402dc5224be69c9627d", "html_url": "https://github.com/rust-lang/rust/commit/cd6fa5f426195ad20448e402dc5224be69c9627d"}, {"sha": "e740b97be699c9445b8a1a7af6348ca2d4c460ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/e740b97be699c9445b8a1a7af6348ca2d4c460ce", "html_url": "https://github.com/rust-lang/rust/commit/e740b97be699c9445b8a1a7af6348ca2d4c460ce"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "8b4a3ea26a1ef7dca52f5a179e2f0110c7ea5f3f", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e65098bcf17d2c0473ba4aeca2220db801d3f575/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65098bcf17d2c0473ba4aeca2220db801d3f575/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=e65098bcf17d2c0473ba4aeca2220db801d3f575", "patch": "@@ -1150,13 +1150,17 @@ pub struct CharPos(pub usize);\n // have been unsuccessful\n \n impl Pos for BytePos {\n+    #[inline(always)]\n     fn from_usize(n: usize) -> BytePos { BytePos(n as u32) }\n+\n+    #[inline(always)]\n     fn to_usize(&self) -> usize { let BytePos(n) = *self; n as usize }\n }\n \n impl Add for BytePos {\n     type Output = BytePos;\n \n+    #[inline(always)]\n     fn add(self, rhs: BytePos) -> BytePos {\n         BytePos((self.to_usize() + rhs.to_usize()) as u32)\n     }\n@@ -1165,6 +1169,7 @@ impl Add for BytePos {\n impl Sub for BytePos {\n     type Output = BytePos;\n \n+    #[inline(always)]\n     fn sub(self, rhs: BytePos) -> BytePos {\n         BytePos((self.to_usize() - rhs.to_usize()) as u32)\n     }\n@@ -1183,13 +1188,17 @@ impl Decodable for BytePos {\n }\n \n impl Pos for CharPos {\n+    #[inline(always)]\n     fn from_usize(n: usize) -> CharPos { CharPos(n) }\n+\n+    #[inline(always)]\n     fn to_usize(&self) -> usize { let CharPos(n) = *self; n }\n }\n \n impl Add for CharPos {\n     type Output = CharPos;\n \n+    #[inline(always)]\n     fn add(self, rhs: CharPos) -> CharPos {\n         CharPos(self.to_usize() + rhs.to_usize())\n     }\n@@ -1198,6 +1207,7 @@ impl Add for CharPos {\n impl Sub for CharPos {\n     type Output = CharPos;\n \n+    #[inline(always)]\n     fn sub(self, rhs: CharPos) -> CharPos {\n         CharPos(self.to_usize() - rhs.to_usize())\n     }"}]}