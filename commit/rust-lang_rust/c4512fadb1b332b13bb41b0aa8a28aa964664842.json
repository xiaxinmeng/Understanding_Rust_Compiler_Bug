{"sha": "c4512fadb1b332b13bb41b0aa8a28aa964664842", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NTEyZmFkYjFiMzMyYjEzYmI0MWIwYWE4YTI4YWE5NjQ2NjQ4NDI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T14:54:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T15:28:51Z"}, "message": "remove inherent source impls", "tree": {"sha": "ca958cd714324a36bb9095afd63aa6d02b2a7757", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca958cd714324a36bb9095afd63aa6d02b2a7757"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4512fadb1b332b13bb41b0aa8a28aa964664842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4512fadb1b332b13bb41b0aa8a28aa964664842", "html_url": "https://github.com/rust-lang/rust/commit/c4512fadb1b332b13bb41b0aa8a28aa964664842", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4512fadb1b332b13bb41b0aa8a28aa964664842/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd63f17027d5c873a5782dcbb08e9b068fc8ee00", "html_url": "https://github.com/rust-lang/rust/commit/dd63f17027d5c873a5782dcbb08e9b068fc8ee00"}], "stats": {"total": 89, "additions": 22, "deletions": 67}, "files": [{"sha": "0e49b040144f575a24720906cdf91c4afeb52b8b", "filename": "crates/ra_assists/src/add_missing_impl_members.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -1,6 +1,6 @@\n use crate::{Assist, AssistId, AssistCtx, ast_editor::{AstEditor, AstBuilder}};\n \n-use hir::db::HirDatabase;\n+use hir::{HasSource, db::HirDatabase};\n use ra_syntax::{SmolStr, TreeArc};\n use ra_syntax::ast::{self, AstNode, FnDef, ImplItem, ImplItemKind, NameOwner};\n use ra_db::FilePosition;"}, {"sha": "a7de6ae9f5dbbc5d38ac6d2d4c4129ca0b3a862e", "filename": "crates/ra_assists/src/fill_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_assists%2Fsrc%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_assists%2Fsrc%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ffill_match_arms.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -1,7 +1,7 @@\n use std::fmt::Write;\n \n use hir::{\n-    AdtDef, FieldSource,\n+    AdtDef, FieldSource, HasSource,\n     db::HirDatabase,\n };\n use ra_syntax::ast::{self, AstNode};"}, {"sha": "6b8604b3efeff20472c5da105a7333b063ce49a4", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -11,7 +11,7 @@ use ra_syntax::{\n \n use crate::{\n     Name, AsName, Struct, Union, Enum, EnumVariant, Crate, AstDatabase,\n-    HirDatabase, HirFileId, StructField, FieldSource, Source,\n+    HirDatabase, HirFileId, StructField, FieldSource, Source, HasSource,\n     type_ref::TypeRef, DefDatabase,\n };\n "}, {"sha": "282bd15de0e55250bf4689e1f5a6bbd8f8224c31", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 50, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -355,10 +355,6 @@ impl StructField {\n         self.parent.variant_data(db).fields().unwrap()[self.id].name.clone()\n     }\n \n-    pub fn source(&self, db: &(impl DefDatabase + AstDatabase)) -> Source<FieldSource> {\n-        self.source_impl(db).into()\n-    }\n-\n     pub fn ty(&self, db: &impl HirDatabase) -> Ty {\n         db.type_for_field(*self)\n     }\n@@ -381,10 +377,6 @@ impl HasSource for Struct {\n }\n \n impl Struct {\n-    pub fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::StructDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn module(self, db: &impl HirDatabase) -> Module {\n         self.id.module(db)\n     }\n@@ -446,10 +438,6 @@ impl HasSource for Union {\n }\n \n impl Union {\n-    pub fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::StructDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn name(self, db: &impl DefDatabase) -> Option<Name> {\n         db.struct_data(Struct { id: self.id }).name.clone()\n     }\n@@ -483,10 +471,6 @@ impl HasSource for Enum {\n }\n \n impl Enum {\n-    pub fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::EnumDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn module(self, db: &impl HirDatabase) -> Module {\n         self.id.module(db)\n     }\n@@ -537,12 +521,6 @@ impl HasSource for EnumVariant {\n }\n \n impl EnumVariant {\n-    pub fn source(\n-        &self,\n-        db: &(impl DefDatabase + AstDatabase),\n-    ) -> Source<TreeArc<ast::EnumVariant>> {\n-        self.source_impl(db)\n-    }\n     pub fn module(&self, db: &impl HirDatabase) -> Module {\n         self.parent.module(db)\n     }\n@@ -692,10 +670,6 @@ impl FnSignature {\n }\n \n impl Function {\n-    pub fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::FnDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn module(self, db: &impl DefDatabase) -> Module {\n         self.id.module(db)\n     }\n@@ -778,10 +752,6 @@ impl HasSource for Const {\n }\n \n impl Const {\n-    pub fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::ConstDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn module(self, db: &impl DefDatabase) -> Module {\n         self.id.module(db)\n     }\n@@ -866,10 +836,6 @@ impl HasSource for Static {\n }\n \n impl Static {\n-    pub fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::StaticDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn module(self, db: &impl DefDatabase) -> Module {\n         self.id.module(db)\n     }\n@@ -902,10 +868,6 @@ impl HasSource for Trait {\n }\n \n impl Trait {\n-    pub fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::TraitDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn module(self, db: &impl DefDatabase) -> Module {\n         self.id.module(db)\n     }\n@@ -952,13 +914,6 @@ impl HasSource for TypeAlias {\n }\n \n impl TypeAlias {\n-    pub fn source(\n-        self,\n-        db: &(impl DefDatabase + AstDatabase),\n-    ) -> Source<TreeArc<ast::TypeAliasDef>> {\n-        self.id.source(db).into()\n-    }\n-\n     pub fn module(self, db: &impl DefDatabase) -> Module {\n         self.id.module(db)\n     }\n@@ -1015,11 +970,7 @@ impl HasSource for MacroDef {\n     }\n }\n \n-impl MacroDef {\n-    pub fn source(&self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::MacroCall>> {\n-        (self.id.0.file_id(), self.id.0.to_node(db)).into()\n-    }\n-}\n+impl MacroDef {}\n \n pub enum Container {\n     Trait(Trait),"}, {"sha": "da2b9b85479ebb4bd3c5141ac72424e0685b5467", "filename": "crates/ra_hir/src/docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdocs.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -3,7 +3,7 @@ use std::sync::Arc;\n use ra_syntax::ast;\n \n use crate::{\n-    HirDatabase, DefDatabase, AstDatabase,\n+    HirDatabase, DefDatabase, AstDatabase, HasSource,\n     Module, StructField, Struct, Enum, EnumVariant, Static, Const, Function, Union, Trait, TypeAlias, FieldSource, MacroDef,\n };\n "}, {"sha": "b1973d19d4d96f8f3d53523274122bf19d0c1408", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -11,6 +11,7 @@ use ra_syntax::{\n \n use crate::{\n     Path, Name, HirDatabase, Resolver,DefWithBody, Either, HirFileId, MacroCallLoc, MacroFileKind,\n+    HasSource,\n     name::AsName,\n     type_ref::{Mutability, TypeRef},\n };"}, {"sha": "534fd482b4be29e4bbd6b8f9577ba0d97bc31096", "filename": "crates/ra_hir/src/expr/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -5,7 +5,7 @@ use ra_syntax::ast::{AstNode, StructLit};\n \n use crate::{\n     expr::AstPtr,\n-    HirDatabase, Function, Name,\n+    HirDatabase, Function, Name, HasSource,\n     diagnostics::{DiagnosticSink, MissingFields},\n     adt::AdtDef,\n     Path,"}, {"sha": "462b136b7fe3d3c14ccb3a9e482745aa735da3aa", "filename": "crates/ra_hir/src/generics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fgenerics.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -8,8 +8,10 @@ use std::sync::Arc;\n use ra_syntax::ast::{self, NameOwner, TypeParamsOwner, TypeBoundsOwner, DefaultTypeParamOwner};\n \n use crate::{\n+    HasSource,\n+    Name, AsName, Function, Struct, Union, Enum, Trait, TypeAlias, ImplBlock, Container, AdtDef,\n     db::{HirDatabase, DefDatabase, AstDatabase},\n-    Name, AsName, Function, Struct, Union, Enum, Trait, TypeAlias, ImplBlock, Container, path::Path, type_ref::TypeRef, AdtDef\n+    path::Path, type_ref::TypeRef,\n };\n \n /// Data about a generic parameter (to a function, struct, impl, ...)."}, {"sha": "f2950e1b2904fc76d6c49143725453902aad020a", "filename": "crates/ra_hir/src/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ftraits.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -6,7 +6,7 @@ use rustc_hash::FxHashMap;\n use ra_syntax::ast::{self, NameOwner};\n \n use crate::{\n-    Function, Const, TypeAlias, Name, DefDatabase, Trait, AstDatabase, Module,\n+    Function, Const, TypeAlias, Name, DefDatabase, Trait, AstDatabase, Module, HasSource,\n     ids::LocationCtx, name::AsName,\n };\n "}, {"sha": "fef0f1d244c338354590c1d3250d921f2639c235", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -1415,7 +1415,7 @@ mod diagnostics {\n     use crate::{\n         expr::ExprId,\n         diagnostics::{DiagnosticSink, NoSuchField},\n-        HirDatabase, Function,\n+        HirDatabase, Function, HasSource,\n };\n \n     #[derive(Debug, PartialEq, Eq, Clone)]"}, {"sha": "87b9caa8aa6833ae70fa1cb1caa32b80ef99ab5d", "filename": "crates/ra_hir/src/type_alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -2,7 +2,7 @@\n \n use std::sync::Arc;\n \n-use crate::{TypeAlias, DefDatabase, AstDatabase, type_ref::TypeRef};\n+use crate::{TypeAlias, DefDatabase, AstDatabase, HasSource, type_ref::TypeRef};\n \n pub(crate) fn type_alias_ref_query(\n     db: &(impl DefDatabase + AstDatabase),"}, {"sha": "f4ff4404b142182964f3534f77b540cf15d6797f", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -1,7 +1,7 @@\n //! This modules takes care of rendering various defenitions as completion items.\n use join_to_string::join;\n use test_utils::tested_by;\n-use hir::{Docs, PerNs, Resolution, HirDisplay};\n+use hir::{Docs, PerNs, Resolution, HirDisplay, HasSource};\n use ra_syntax::ast::NameOwner;\n \n use crate::completion::{"}, {"sha": "b0b0c71227f55bb74a346a67333738e84a3aefce", "filename": "crates/ra_ide_api/src/display/function_signature.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Ffunction_signature.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -1,10 +1,11 @@\n-use super::{where_predicates, generic_parameters};\n-use crate::db;\n use std::fmt::{self, Display};\n+\n use join_to_string::join;\n use ra_syntax::ast::{self, AstNode, NameOwner, VisibilityOwner};\n use std::convert::From;\n-use hir::{Docs, Documentation};\n+use hir::{Docs, Documentation, HasSource};\n+\n+use crate::{db, display::{where_predicates, generic_parameters}};\n \n /// Contains information about a function signature\n #[derive(Debug)]"}, {"sha": "1e9cdaff494d9fc5f3260a984864bfb603b5fd0b", "filename": "crates/ra_ide_api/src/display/navigation_target.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -5,7 +5,7 @@ use ra_syntax::{\n     ast::{self, DocCommentsOwner},\n     algo::visit::{visitor, Visitor},\n };\n-use hir::{ModuleSource, FieldSource, ImplItem};\n+use hir::{ModuleSource, FieldSource, ImplItem, HasSource};\n \n use crate::{FileSymbol, db::RootDatabase};\n use super::short_label::ShortLabel;\n@@ -182,7 +182,7 @@ impl NavigationTarget {\n \n     pub(crate) fn from_def_source<A, D>(db: &RootDatabase, def: D) -> NavigationTarget\n     where\n-        D: hir::HasSource<Ast = TreeArc<A>>,\n+        D: HasSource<Ast = TreeArc<A>>,\n         A: ast::DocCommentsOwner + ast::NameOwner + ShortLabel,\n     {\n         let src = def.source(db);"}, {"sha": "ad00abe49738c2b5d618411797395981b4d5311f", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4512fadb1b332b13bb41b0aa8a28aa964664842/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=c4512fadb1b332b13bb41b0aa8a28aa964664842", "patch": "@@ -4,7 +4,7 @@ use ra_syntax::{\n     ast::{self, DocCommentsOwner},\n     algo::{find_covering_element, find_node_at_offset, ancestors_at_offset, visit::{visitor, Visitor}},\n };\n-use hir::HirDisplay;\n+use hir::{HirDisplay, HasSource};\n \n use crate::{\n     db::RootDatabase,\n@@ -226,7 +226,7 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n \n     fn from_def_source<A, D>(db: &RootDatabase, def: D) -> Option<String>\n     where\n-        D: hir::HasSource<Ast = TreeArc<A>>,\n+        D: HasSource<Ast = TreeArc<A>>,\n         A: ast::DocCommentsOwner + ast::NameOwner + ShortLabel,\n     {\n         let src = def.source(db);"}]}