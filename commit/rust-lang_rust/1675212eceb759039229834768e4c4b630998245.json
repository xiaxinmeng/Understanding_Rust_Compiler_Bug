{"sha": "1675212eceb759039229834768e4c4b630998245", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NzUyMTJlY2ViNzU5MDM5MjI5ODM0NzY4ZTRjNGI2MzA5OTgyNDU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-05T17:53:23Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-05T17:53:23Z"}, "message": "Move locate_ctxt back", "tree": {"sha": "9f3a5a93a16a3ed79192022ceb3c61f925e25945", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f3a5a93a16a3ed79192022ceb3c61f925e25945"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1675212eceb759039229834768e4c4b630998245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1675212eceb759039229834768e4c4b630998245", "html_url": "https://github.com/rust-lang/rust/commit/1675212eceb759039229834768e4c4b630998245", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1675212eceb759039229834768e4c4b630998245/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdbae165162653a58c38100823f182ac665b82de", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbae165162653a58c38100823f182ac665b82de", "html_url": "https://github.com/rust-lang/rust/commit/cdbae165162653a58c38100823f182ac665b82de"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "36d9bf9f50dd59b7c2a48e704102e3fa27f3cb1d", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1675212eceb759039229834768e4c4b630998245/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1675212eceb759039229834768e4c4b630998245/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=1675212eceb759039229834768e4c4b630998245", "patch": "@@ -347,31 +347,31 @@ impl<'a> CrateLoader<'a> {\n         mut dep_kind: DepKind,\n     ) -> Result<(CrateNum, Lrc<cstore::CrateMetadata>), LoadError<'b>> {\n         info!(\"resolving crate `extern crate {} as {}`\", name, ident);\n-        let mut locate_ctxt = locator::Context {\n-            sess: self.sess,\n-            span,\n-            ident,\n-            crate_name: name,\n-            hash: hash.map(|a| &*a),\n-            extra_filename: extra_filename,\n-            filesearch: self.sess.target_filesearch(path_kind),\n-            target: &self.sess.target.target,\n-            triple: self.sess.opts.target_triple.clone(),\n-            root,\n-            rejected_via_hash: vec![],\n-            rejected_via_triple: vec![],\n-            rejected_via_kind: vec![],\n-            rejected_via_version: vec![],\n-            rejected_via_filename: vec![],\n-            should_match_name: true,\n-            is_proc_macro: Some(false),\n-            metadata_loader: &*self.cstore.metadata_loader,\n-        };\n-\n         let result = if let Some(cnum) = self.existing_match(name, hash, path_kind) {\n             (LoadResult::Previous(cnum), None)\n         } else {\n             info!(\"falling back to a load\");\n+            let mut locate_ctxt = locator::Context {\n+                sess: self.sess,\n+                span,\n+                ident,\n+                crate_name: name,\n+                hash: hash.map(|a| &*a),\n+                extra_filename: extra_filename,\n+                filesearch: self.sess.target_filesearch(path_kind),\n+                target: &self.sess.target.target,\n+                triple: self.sess.opts.target_triple.clone(),\n+                root,\n+                rejected_via_hash: vec![],\n+                rejected_via_triple: vec![],\n+                rejected_via_kind: vec![],\n+                rejected_via_version: vec![],\n+                rejected_via_filename: vec![],\n+                should_match_name: true,\n+                is_proc_macro: Some(false),\n+                metadata_loader: &*self.cstore.metadata_loader,\n+            };\n+\n             self.load(&mut locate_ctxt).map(|r| (r, None)).or_else(|| {\n                 dep_kind = DepKind::UnexportedMacrosOnly;\n                 self.load_proc_macro(&mut locate_ctxt, path_kind)"}]}