{"sha": "3e0e4e90aeeff25db674f8db562c611bd8016482", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMGU0ZTkwYWVlZmYyNWRiNjc0ZjhkYjU2MmM2MTFiZDgwMTY0ODI=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-07T01:11:24Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-08T02:34:11Z"}, "message": "added fetchLatestArtifactMetadata() and downloadFile() functions", "tree": {"sha": "638756f88bf4c370135b3984667c2618438f6d01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/638756f88bf4c370135b3984667c2618438f6d01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e0e4e90aeeff25db674f8db562c611bd8016482", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e0e4e90aeeff25db674f8db562c611bd8016482", "html_url": "https://github.com/rust-lang/rust/commit/3e0e4e90aeeff25db674f8db562c611bd8016482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e0e4e90aeeff25db674f8db562c611bd8016482/comments", "author": null, "committer": null, "parents": [{"sha": "1bdb78a89f6618527f2dc23f8f76e83ee77e3ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bdb78a89f6618527f2dc23f8f76e83ee77e3ea5", "html_url": "https://github.com/rust-lang/rust/commit/1bdb78a89f6618527f2dc23f8f76e83ee77e3ea5"}], "stats": {"total": 112, "additions": 111, "deletions": 1}, "files": [{"sha": "5c056463e080a283e34941d001a3867da018711d", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=3e0e4e90aeeff25db674f8db562c611bd8016482", "patch": "@@ -82,6 +82,15 @@\n             \"integrity\": \"sha512-nf1LMGZvgFX186geVZR1xMZKKblJiRfiASTHw85zED2kI1yDKHDwTKMdkaCbTlXoRKlGKaDfYywt+V0As30q3w==\",\n             \"dev\": true\n         },\n+        \"@types/node-fetch\": {\n+            \"version\": \"2.5.4\",\n+            \"resolved\": \"https://registry.npmjs.org/@types/node-fetch/-/node-fetch-2.5.4.tgz\",\n+            \"integrity\": \"sha512-Oz6id++2qAOFuOlE1j0ouk1dzl3mmI1+qINPNBhi9nt/gVOz0G+13Ao6qjhdF0Ys+eOkhu6JnFmt38bR3H0POQ==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"@types/node\": \"*\"\n+            }\n+        },\n         \"@types/resolve\": {\n             \"version\": \"0.0.8\",\n             \"resolved\": \"https://registry.npmjs.org/@types/resolve/-/resolve-0.0.8.tgz\",\n@@ -91,6 +100,12 @@\n                 \"@types/node\": \"*\"\n             }\n         },\n+        \"@types/throttle-debounce\": {\n+            \"version\": \"2.1.0\",\n+            \"resolved\": \"https://registry.npmjs.org/@types/throttle-debounce/-/throttle-debounce-2.1.0.tgz\",\n+            \"integrity\": \"sha512-5eQEtSCoESnh2FsiLTxE121IiE60hnMqcb435fShf4bpLRjEu1Eoekht23y6zXS9Ts3l+Szu3TARnTsA0GkOkQ==\",\n+            \"dev\": true\n+        },\n         \"@types/vscode\": {\n             \"version\": \"1.41.0\",\n             \"resolved\": \"https://registry.npmjs.org/@types/vscode/-/vscode-1.41.0.tgz\",\n@@ -536,6 +551,11 @@\n             \"integrity\": \"sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==\",\n             \"dev\": true\n         },\n+        \"node-fetch\": {\n+            \"version\": \"2.6.0\",\n+            \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz\",\n+            \"integrity\": \"sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA==\"\n+        },\n         \"nth-check\": {\n             \"version\": \"1.0.2\",\n             \"resolved\": \"https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz\",\n@@ -719,6 +739,11 @@\n                 \"has-flag\": \"^3.0.0\"\n             }\n         },\n+        \"throttle-debounce\": {\n+            \"version\": \"2.1.0\",\n+            \"resolved\": \"https://registry.npmjs.org/throttle-debounce/-/throttle-debounce-2.1.0.tgz\",\n+            \"integrity\": \"sha512-AOvyNahXQuU7NN+VVvOOX+uW6FPaWdAOdRP5HfwYxAfCzXTFKRMoIMk+n+po318+ktcChx+F1Dd91G3YHeMKyg==\"\n+        },\n         \"tmp\": {\n             \"version\": \"0.0.29\",\n             \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.0.29.tgz\","}, {"sha": "8e23718cda38fe3e1dee7dff6f9126dbeeeaac11", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=3e0e4e90aeeff25db674f8db562c611bd8016482", "patch": "@@ -25,18 +25,22 @@\n     },\n     \"dependencies\": {\n         \"jsonc-parser\": \"^2.1.0\",\n+        \"node-fetch\": \"^2.6.0\",\n+        \"throttle-debounce\": \"^2.1.0\",\n         \"vscode-languageclient\": \"^6.1.0\"\n     },\n     \"devDependencies\": {\n         \"@rollup/plugin-commonjs\": \"^11.0.2\",\n         \"@rollup/plugin-node-resolve\": \"^7.1.1\",\n         \"@types/node\": \"^12.12.25\",\n+        \"@types/node-fetch\": \"^2.5.4\",\n+        \"@types/throttle-debounce\": \"^2.1.0\",\n         \"@types/vscode\": \"^1.41.0\",\n         \"rollup\": \"^1.31.0\",\n         \"tslib\": \"^1.10.0\",\n         \"tslint\": \"^5.20.1\",\n-        \"typescript-formatter\": \"^7.2.2\",\n         \"typescript\": \"^3.7.5\",\n+        \"typescript-formatter\": \"^7.2.2\",\n         \"vsce\": \"^1.71.0\"\n     },\n     \"activationEvents\": ["}, {"sha": "f40750be905f6a3ea528657fc274b04e174f6ad3", "filename": "editors/code/src/github/download_file.ts", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fsrc%2Fgithub%2Fdownload_file.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fsrc%2Fgithub%2Fdownload_file.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fgithub%2Fdownload_file.ts?ref=3e0e4e90aeeff25db674f8db562c611bd8016482", "patch": "@@ -0,0 +1,26 @@\n+import fetch from \"node-fetch\";\n+import { throttle } from \"throttle-debounce\";\n+import * as fs from \"fs\";\n+\n+export async function downloadFile(\n+    url: string,\n+    destFilePath: fs.PathLike,\n+    onProgress: (readBytes: number, totalBytes: number) => void\n+): Promise<void> {\n+    onProgress = throttle(100, /* noTrailing: */ true, onProgress);\n+\n+    const response = await fetch(url);\n+\n+    const totalBytes = Number(response.headers.get('content-length'));\n+    let readBytes = 0;\n+\n+    return new Promise<void>((resolve, reject) => response.body\n+        .on(\"data\", (chunk: Buffer) => {\n+            readBytes += chunk.length;\n+            onProgress(readBytes, totalBytes);\n+        })\n+        .on(\"end\", resolve)\n+        .on(\"error\", reject)\n+        .pipe(fs.createWriteStream(destFilePath))\n+    );\n+}"}, {"sha": "52641ca67d6e95ca92ed53771edef108f2a83d7e", "filename": "editors/code/src/github/fetch_latest_artifact_metadata.ts", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fsrc%2Fgithub%2Ffetch_latest_artifact_metadata.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3e0e4e90aeeff25db674f8db562c611bd8016482/editors%2Fcode%2Fsrc%2Fgithub%2Ffetch_latest_artifact_metadata.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fgithub%2Ffetch_latest_artifact_metadata.ts?ref=3e0e4e90aeeff25db674f8db562c611bd8016482", "patch": "@@ -0,0 +1,55 @@\n+import fetch from \"node-fetch\";\n+\n+const GITHUB_API_ENDPOINT_URL = \"https://api.github.com\";\n+\n+export interface FetchLatestArtifactMetadataOpts {\n+    repoName: string;\n+    repoOwner: string;\n+    artifactFileName: string;\n+}\n+\n+export interface ArtifactMetadata {\n+    releaseName: string;\n+    releaseDate: Date;\n+    downloadUrl: string;\n+}\n+\n+export async function fetchLatestArtifactMetadata(\n+    opts: FetchLatestArtifactMetadataOpts\n+): Promise<ArtifactMetadata | null> {\n+\n+    const repoOwner = encodeURIComponent(opts.repoOwner);\n+    const repoName  = encodeURIComponent(opts.repoName);\n+\n+    const apiEndpointPath = `/repos/${repoOwner}/${repoName}/releases/latest`;\n+    const requestUrl = GITHUB_API_ENDPOINT_URL + apiEndpointPath;\n+\n+    // We skip runtime type checks for simplicity (here we cast from `any` to `Release`)\n+\n+    const response: GithubRelease = await fetch(requestUrl, {\n+            headers: { Accept: \"application/vnd.github.v3+json\" }\n+        })\n+        .then(res => res.json());\n+\n+    const artifact = response.assets.find(artifact => artifact.name === opts.artifactFileName);\n+\n+    return !artifact ? null : {\n+        releaseName: response.name,\n+        releaseDate: new Date(response.published_at),\n+        downloadUrl: artifact.browser_download_url\n+    };\n+\n+    // Noise denotes tremendous amount of data that we are not using here\n+    interface GithubRelease {\n+        name: string;\n+        published_at: Date;\n+        assets: Array<{\n+            browser_download_url: string;\n+\n+            [noise: string]: unknown;\n+        }>;\n+\n+        [noise: string]: unknown;\n+    }\n+\n+}"}]}