{"sha": "2fe4cad77f03e9eb323382e531d136f0e32b3645", "node_id": "C_kwDOAAsO6NoAKDJmZTRjYWQ3N2YwM2U5ZWIzMjMzODJlNTMxZDEzNmYwZTMyYjM2NDU", "commit": {"author": {"name": "Alex Huang", "email": "huangalex409@gmail.com", "date": "2023-03-26T13:45:53Z"}, "committer": {"name": "Alex Huang", "email": "huangalex409@gmail.com", "date": "2023-03-26T13:45:53Z"}, "message": "Allow passing the --nocapture flag to compiletest", "tree": {"sha": "86dee0c04008f5a3534f4f322f3abebaf4d0220e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86dee0c04008f5a3534f4f322f3abebaf4d0220e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fe4cad77f03e9eb323382e531d136f0e32b3645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe4cad77f03e9eb323382e531d136f0e32b3645", "html_url": "https://github.com/rust-lang/rust/commit/2fe4cad77f03e9eb323382e531d136f0e32b3645", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fe4cad77f03e9eb323382e531d136f0e32b3645/comments", "author": {"login": "Teapot4195", "id": 75273023, "node_id": "MDQ6VXNlcjc1MjczMDIz", "avatar_url": "https://avatars.githubusercontent.com/u/75273023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Teapot4195", "html_url": "https://github.com/Teapot4195", "followers_url": "https://api.github.com/users/Teapot4195/followers", "following_url": "https://api.github.com/users/Teapot4195/following{/other_user}", "gists_url": "https://api.github.com/users/Teapot4195/gists{/gist_id}", "starred_url": "https://api.github.com/users/Teapot4195/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Teapot4195/subscriptions", "organizations_url": "https://api.github.com/users/Teapot4195/orgs", "repos_url": "https://api.github.com/users/Teapot4195/repos", "events_url": "https://api.github.com/users/Teapot4195/events{/privacy}", "received_events_url": "https://api.github.com/users/Teapot4195/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Teapot4195", "id": 75273023, "node_id": "MDQ6VXNlcjc1MjczMDIz", "avatar_url": "https://avatars.githubusercontent.com/u/75273023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Teapot4195", "html_url": "https://github.com/Teapot4195", "followers_url": "https://api.github.com/users/Teapot4195/followers", "following_url": "https://api.github.com/users/Teapot4195/following{/other_user}", "gists_url": "https://api.github.com/users/Teapot4195/gists{/gist_id}", "starred_url": "https://api.github.com/users/Teapot4195/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Teapot4195/subscriptions", "organizations_url": "https://api.github.com/users/Teapot4195/orgs", "repos_url": "https://api.github.com/users/Teapot4195/repos", "events_url": "https://api.github.com/users/Teapot4195/events{/privacy}", "received_events_url": "https://api.github.com/users/Teapot4195/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef03fda339923e659d3d3ca3321de887316d2807", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef03fda339923e659d3d3ca3321de887316d2807", "html_url": "https://github.com/rust-lang/rust/commit/ef03fda339923e659d3d3ca3321de887316d2807"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "ff9c40afeb8918f0629b926d120693efbb9cfb6e", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fe4cad77f03e9eb323382e531d136f0e32b3645/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe4cad77f03e9eb323382e531d136f0e32b3645/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=2fe4cad77f03e9eb323382e531d136f0e32b3645", "patch": "@@ -384,6 +384,8 @@ pub struct Config {\n     pub only_modified: bool,\n \n     pub target_cfg: LazyCell<TargetCfg>,\n+\n+    pub nocapture: bool,\n }\n \n impl Config {"}, {"sha": "b9d53b7b07da0117d5f763d3f0ad414b3524002f", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2fe4cad77f03e9eb323382e531d136f0e32b3645/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe4cad77f03e9eb323382e531d136f0e32b3645/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=2fe4cad77f03e9eb323382e531d136f0e32b3645", "patch": "@@ -151,6 +151,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         )\n         .optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\")\n         .optflag(\"\", \"only-modified\", \"only run tests that result been modified\")\n+        .optflag(\"\", \"nocapture\", \"\")\n         .optflag(\"h\", \"help\", \"show this message\")\n         .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\")\n         .optopt(\"\", \"edition\", \"default Rust edition\", \"EDITION\");\n@@ -304,6 +305,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         force_rerun: matches.opt_present(\"force-rerun\"),\n \n         target_cfg: LazyCell::new(),\n+\n+        nocapture: matches.opt_present(\"nocapture\"),\n     }\n }\n \n@@ -496,6 +499,13 @@ fn configure_lldb(config: &Config) -> Option<Config> {\n }\n \n pub fn test_opts(config: &Config) -> test::TestOpts {\n+    if env::var(\"RUST_TEST_NOCAPTURE\").is_ok() {\n+        eprintln!(\n+            \"WARNING: RUST_TEST_NOCAPTURE is no longer used. \\\n+                   Use the `--nocapture` flag instead.\"\n+        );\n+    }\n+\n     test::TestOpts {\n         exclude_should_panic: false,\n         filters: config.filters.clone(),\n@@ -505,10 +515,7 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n         logfile: config.logfile.clone(),\n         run_tests: true,\n         bench_benchmarks: true,\n-        nocapture: match env::var(\"RUST_TEST_NOCAPTURE\") {\n-            Ok(val) => &val != \"0\",\n-            Err(_) => false,\n-        },\n+        nocapture: config.nocapture,\n         color: config.color,\n         shuffle: false,\n         shuffle_seed: None,"}]}