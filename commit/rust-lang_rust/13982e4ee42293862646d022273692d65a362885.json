{"sha": "13982e4ee42293862646d022273692d65a362885", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOTgyZTRlZTQyMjkzODYyNjQ2ZDAyMjI3MzY5MmQ2NWEzNjI4ODU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-08T09:41:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-08T09:41:21Z"}, "message": "Merge #7901\n\n7901: Make extension respect http proxy settings r=matklad a=kamyuentse\n\nThis patch makes vscode extension respect proxy settings when fetching release metadata and rust-analyzer binary.\n\nCo-authored-by: Kam Y. Tse <kevin.xjy@gmail.com>", "tree": {"sha": "919b5d5fa14b7c1556b4c716ac7ec0c0565e2ef9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/919b5d5fa14b7c1556b4c716ac7ec0c0565e2ef9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13982e4ee42293862646d022273692d65a362885", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRfFBCRBK7hj4Ov3rIwAAdHIIAJNED2f8VyPXdioB18gn+jo6\nTff9SElJP5CgDq0uG9+dw8yvz7FyjM0x2tzfnl9O+sfsnxhPN7CGPR3BMXWWbpq0\nhEUNLJAz8AXGa9LKYgKeqiye5APjAWrLlKsqfJfoK9JyB1qSS9/gRRKjx+L9MaUC\n96Qz1AMXKi6Ckj+f14YY0ks5najMgSCj063vGusiQG97FFQqspzAa1wzd337RXCo\nsoBViLsPEvVLBGWb4rkb8caiyDg8HSQ/f5b+yeE+xFXFWUySR8JfAkGHYELB74mU\nz8Q/UxLjgDZ2SvJRo/T76B09YH1MSQdSt3pDsIfX2INpvJ8VY/8o8lk61+3M8HM=\n=9AwY\n-----END PGP SIGNATURE-----\n", "payload": "tree 919b5d5fa14b7c1556b4c716ac7ec0c0565e2ef9\nparent d54e1157b66017e4aae38328cd213286e39ca130\nparent 77b7c96aeabb5a187b7a29cbd474f6f9b2260613\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615196481 +0000\ncommitter GitHub <noreply@github.com> 1615196481 +0000\n\nMerge #7901\n\n7901: Make extension respect http proxy settings r=matklad a=kamyuentse\n\nThis patch makes vscode extension respect proxy settings when fetching release metadata and rust-analyzer binary.\n\nCo-authored-by: Kam Y. Tse <kevin.xjy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13982e4ee42293862646d022273692d65a362885", "html_url": "https://github.com/rust-lang/rust/commit/13982e4ee42293862646d022273692d65a362885", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13982e4ee42293862646d022273692d65a362885/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d54e1157b66017e4aae38328cd213286e39ca130", "url": "https://api.github.com/repos/rust-lang/rust/commits/d54e1157b66017e4aae38328cd213286e39ca130", "html_url": "https://github.com/rust-lang/rust/commit/d54e1157b66017e4aae38328cd213286e39ca130"}, {"sha": "77b7c96aeabb5a187b7a29cbd474f6f9b2260613", "url": "https://api.github.com/repos/rust-lang/rust/commits/77b7c96aeabb5a187b7a29cbd474f6f9b2260613", "html_url": "https://github.com/rust-lang/rust/commit/77b7c96aeabb5a187b7a29cbd474f6f9b2260613"}], "stats": {"total": 57, "additions": 42, "deletions": 15}, "files": [{"sha": "198c17556d201ab19a65f725639831ba45519e27", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=13982e4ee42293862646d022273692d65a362885", "patch": "@@ -9,6 +9,7 @@\n             \"version\": \"0.4.0-dev\",\n             \"license\": \"MIT OR Apache-2.0\",\n             \"dependencies\": {\n+                \"https-proxy-agent\": \"^5.0.0\",\n                 \"node-fetch\": \"^2.6.1\",\n                 \"vscode-languageclient\": \"^7.1.0-next.4\"\n             },\n@@ -515,7 +516,6 @@\n             \"version\": \"6.0.2\",\n             \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz\",\n             \"integrity\": \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\",\n-            \"dev\": true,\n             \"dependencies\": {\n                 \"debug\": \"4\"\n             },\n@@ -830,6 +830,7 @@\n             \"dependencies\": {\n                 \"anymatch\": \"~3.1.1\",\n                 \"braces\": \"~3.0.2\",\n+                \"fsevents\": \"~2.3.1\",\n                 \"glob-parent\": \"~5.1.0\",\n                 \"is-binary-path\": \"~2.1.0\",\n                 \"is-glob\": \"~4.0.1\",\n@@ -959,7 +960,6 @@\n             \"version\": \"4.3.1\",\n             \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.1.tgz\",\n             \"integrity\": \"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==\",\n-            \"dev\": true,\n             \"dependencies\": {\n                 \"ms\": \"2.1.2\"\n             },\n@@ -1759,7 +1759,6 @@\n             \"version\": \"5.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.0.tgz\",\n             \"integrity\": \"sha512-EkYm5BcKUGiduxzSt3Eppko+PiNWNEpa4ySk9vTC6wDsQJW9rHSa+UhGNJoRYp7bz6Ht1eaRIa6QaJqO5rCFbA==\",\n-            \"dev\": true,\n             \"dependencies\": {\n                 \"agent-base\": \"6\",\n                 \"debug\": \"4\"\n@@ -2236,8 +2235,7 @@\n         \"node_modules/ms\": {\n             \"version\": \"2.1.2\",\n             \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n-            \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n-            \"dev\": true\n+            \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n         },\n         \"node_modules/mute-stream\": {\n             \"version\": \"0.0.8\",\n@@ -2682,6 +2680,9 @@\n             \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-2.39.1.tgz\",\n             \"integrity\": \"sha512-9rfr0Z6j+vE+eayfNVFr1KZ+k+jiUl2+0e4quZafy1x6SFCjzFspfRSO2ZZQeWeX9noeDTUDgg6eCENiEPFvQg==\",\n             \"dev\": true,\n+            \"dependencies\": {\n+                \"fsevents\": \"~2.3.1\"\n+            },\n             \"bin\": {\n                 \"rollup\": \"dist/bin/rollup\"\n             },\n@@ -3843,7 +3844,6 @@\n             \"version\": \"6.0.2\",\n             \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz\",\n             \"integrity\": \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\",\n-            \"dev\": true,\n             \"requires\": {\n                 \"debug\": \"4\"\n             }\n@@ -4190,7 +4190,6 @@\n             \"version\": \"4.3.1\",\n             \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.1.tgz\",\n             \"integrity\": \"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==\",\n-            \"dev\": true,\n             \"requires\": {\n                 \"ms\": \"2.1.2\"\n             }\n@@ -4798,7 +4797,6 @@\n             \"version\": \"5.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.0.tgz\",\n             \"integrity\": \"sha512-EkYm5BcKUGiduxzSt3Eppko+PiNWNEpa4ySk9vTC6wDsQJW9rHSa+UhGNJoRYp7bz6Ht1eaRIa6QaJqO5rCFbA==\",\n-            \"dev\": true,\n             \"requires\": {\n                 \"agent-base\": \"6\",\n                 \"debug\": \"4\"\n@@ -5175,8 +5173,7 @@\n         \"ms\": {\n             \"version\": \"2.1.2\",\n             \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n-            \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n-            \"dev\": true\n+            \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n         },\n         \"mute-stream\": {\n             \"version\": \"0.0.8\","}, {"sha": "176f4792047b6318c99539bbceabb6776a95daa1", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=13982e4ee42293862646d022273692d65a362885", "patch": "@@ -35,6 +35,7 @@\n         \"test\": \"node ./out/tests/runTests.js\"\n     },\n     \"dependencies\": {\n+        \"https-proxy-agent\": \"^5.0.0\",\n         \"node-fetch\": \"^2.6.1\",\n         \"vscode-languageclient\": \"^7.1.0-next.4\"\n     },"}, {"sha": "82f0a0566a60bb7a28bf1e1b4340798f60d7661a", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=13982e4ee42293862646d022273692d65a362885", "patch": "@@ -100,6 +100,14 @@ export class Config {\n     get channel() { return this.get<UpdatesChannel>(\"updates.channel\"); }\n     get askBeforeDownload() { return this.get<boolean>(\"updates.askBeforeDownload\"); }\n     get traceExtension() { return this.get<boolean>(\"trace.extension\"); }\n+    get httpProxy() {\n+        const httpProxy = vscode\n+            .workspace\n+            .getConfiguration('http')\n+            .get<null | string>(\"proxy\")!;\n+\n+        return httpProxy || process.env[\"https_proxy\"] || process.env[\"HTTPS_PROXY\"];\n+    }\n \n     get inlayHints() {\n         return {"}, {"sha": "1be4f17587ffd9521beff2e569df7e74ed5435de", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=13982e4ee42293862646d022273692d65a362885", "patch": "@@ -183,7 +183,7 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     }\n \n     const release = await downloadWithRetryDialog(state, async () => {\n-        return await fetchRelease(\"nightly\", state.githubToken);\n+        return await fetchRelease(\"nightly\", state.githubToken, config.httpProxy);\n     }).catch(async (e) => {\n         log.error(e);\n         if (state.releaseId === undefined) { // Show error only for the initial download\n@@ -209,6 +209,7 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n             url: artifact.browser_download_url,\n             dest,\n             progressTitle: \"Downloading rust-analyzer extension\",\n+            httpProxy: config.httpProxy,\n         });\n     });\n \n@@ -331,7 +332,7 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n \n     const releaseTag = config.package.releaseTag;\n     const release = await downloadWithRetryDialog(state, async () => {\n-        return await fetchRelease(releaseTag, state.githubToken);\n+        return await fetchRelease(releaseTag, state.githubToken, config.httpProxy);\n     });\n     const artifact = release.assets.find(artifact => artifact.name === `rust-analyzer-${platform}.gz`);\n     assert(!!artifact, `Bad release: ${JSON.stringify(release)}`);\n@@ -343,6 +344,7 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n             progressTitle: \"Downloading rust-analyzer server\",\n             gunzip: true,\n             mode: 0o755,\n+            httpProxy: config.httpProxy,\n         });\n     });\n "}, {"sha": "07ebc615c74d11000fbe99cc1d7ee6f3eab85964", "filename": "editors/code/src/net.ts", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fsrc%2Fnet.ts", "raw_url": "https://github.com/rust-lang/rust/raw/13982e4ee42293862646d022273692d65a362885/editors%2Fcode%2Fsrc%2Fnet.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnet.ts?ref=13982e4ee42293862646d022273692d65a362885", "patch": "@@ -1,4 +1,6 @@\n import fetch from \"node-fetch\";\n+var HttpsProxyAgent = require('https-proxy-agent');\n+\n import * as vscode from \"vscode\";\n import * as stream from \"stream\";\n import * as crypto from \"crypto\";\n@@ -17,6 +19,7 @@ const REPO = \"rust-analyzer\";\n export async function fetchRelease(\n     releaseTag: string,\n     githubToken: string | null | undefined,\n+    httpProxy: string | null | undefined,\n ): Promise<GithubRelease> {\n \n     const apiEndpointPath = `/repos/${OWNER}/${REPO}/releases/tags/${releaseTag}`;\n@@ -30,7 +33,14 @@ export async function fetchRelease(\n         headers.Authorization = \"token \" + githubToken;\n     }\n \n-    const response = await fetch(requestUrl, { headers: headers });\n+    const response = await (() => {\n+        if (httpProxy) {\n+            log.debug(`Fetching release metadata via proxy: ${httpProxy}`);\n+            return fetch(requestUrl, { headers: headers, agent: new HttpsProxyAgent(httpProxy) });\n+        }\n+\n+        return fetch(requestUrl, { headers: headers });\n+    })();\n \n     if (!response.ok) {\n         log.error(\"Error fetching artifact release info\", {\n@@ -73,6 +83,7 @@ interface DownloadOpts {\n     dest: string;\n     mode?: number;\n     gunzip?: boolean;\n+    httpProxy?: string;\n }\n \n export async function download(opts: DownloadOpts) {\n@@ -91,7 +102,7 @@ export async function download(opts: DownloadOpts) {\n         },\n         async (progress, _cancellationToken) => {\n             let lastPercentage = 0;\n-            await downloadFile(opts.url, tempFile, opts.mode, !!opts.gunzip, (readBytes, totalBytes) => {\n+            await downloadFile(opts.url, tempFile, opts.mode, !!opts.gunzip, opts.httpProxy, (readBytes, totalBytes) => {\n                 const newPercentage = Math.round((readBytes / totalBytes) * 100);\n                 if (newPercentage !== lastPercentage) {\n                     progress.report({\n@@ -113,9 +124,17 @@ async function downloadFile(\n     destFilePath: fs.PathLike,\n     mode: number | undefined,\n     gunzip: boolean,\n+    httpProxy: string | null | undefined,\n     onProgress: (readBytes: number, totalBytes: number) => void\n ): Promise<void> {\n-    const res = await fetch(url);\n+    const res = await (() => {\n+        if (httpProxy) {\n+            log.debug(`Downloading ${url} via proxy: ${httpProxy}`);\n+            return fetch(url, { agent: new HttpsProxyAgent(httpProxy) });\n+        }\n+\n+        return fetch(url);\n+    })();\n \n     if (!res.ok) {\n         log.error(\"Error\", res.status, \"while downloading file from\", url);"}]}