{"sha": "f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "node_id": "C_kwDOAAsO6NoAKGY4ODFiZjdjMGEyYzEwMjBlMzZmZDVmMzViZTVlY2I1YWYyNzg5NjY", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-04-02T15:08:16Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-04-05T15:42:44Z"}, "message": "unboxed-closures and type-alias-impl-trait nll revisions", "tree": {"sha": "e0d61e7cf603e6e6e1d7f97ea666562ee57edb7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0d61e7cf603e6e6e1d7f97ea666562ee57edb7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "html_url": "https://github.com/rust-lang/rust/commit/f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2946ae29976d8343932e54bd5758c7535d93b91", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2946ae29976d8343932e54bd5758c7535d93b91", "html_url": "https://github.com/rust-lang/rust/commit/a2946ae29976d8343932e54bd5758c7535d93b91"}], "stats": {"total": 62, "additions": 42, "deletions": 20}, "files": [{"sha": "a3b410c2cfb8c4946c53b40be46e6e828b4bf979", "filename": "src/test/ui/type-alias-impl-trait/generic_type_does_not_live_long_enough.base.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.base.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,23 +1,23 @@\n error: at least one trait must be specified\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:10:24\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:14:24\n    |\n LL | type WrongGeneric<T> = impl 'static;\n    |                        ^^^^^^^^^^^^\n \n error: non-defining opaque type use in defining scope\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:6:18\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:10:18\n    |\n LL |     let z: i32 = x;\n    |                  ^\n    |\n note: used non-generic type `&'static i32` for generic parameter\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:10:19\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:14:19\n    |\n LL | type WrongGeneric<T> = impl 'static;\n    |                   ^\n \n error[E0310]: the parameter type `T` may not live long enough\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:14:5\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:18:5\n    |\n LL | fn wrong_generic<T>(t: T) -> WrongGeneric<T> {\n    |                  - help: consider adding an explicit lifetime bound...: `T: 'static`", "previous_filename": "src/test/ui/type-alias-impl-trait/generic_type_does_not_live_long_enough.stderr"}, {"sha": "db771d211322c8f53776a358d3e67c210c140468", "filename": "src/test/ui/type-alias-impl-trait/generic_type_does_not_live_long_enough.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.nll.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,23 +1,23 @@\n error: at least one trait must be specified\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:10:24\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:14:24\n    |\n LL | type WrongGeneric<T> = impl 'static;\n    |                        ^^^^^^^^^^^^\n \n error: non-defining opaque type use in defining scope\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:6:18\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:10:18\n    |\n LL |     let z: i32 = x;\n    |                  ^\n    |\n note: used non-generic type `&'static i32` for generic parameter\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:10:19\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:14:19\n    |\n LL | type WrongGeneric<T> = impl 'static;\n    |                   ^\n \n error[E0310]: the parameter type `T` may not live long enough\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:14:5\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:18:5\n    |\n LL |     t\n    |     ^"}, {"sha": "2ad7e615e19cc016b3ea8cab1e1b0a1a276f89c0", "filename": "src/test/ui/type-alias-impl-trait/generic_type_does_not_live_long_enough.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.rs?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,5 +1,9 @@\n #![feature(type_alias_impl_trait)]\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn main() {\n     let y = 42;\n     let x = wrong_generic(&y);"}, {"sha": "be77b60ca8ff3ac82bfe8b92bb8bf4873a931bc9", "filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.base.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `FnOnce` is not general enough\n-  --> $DIR/issue-57611-trait-alias.rs:20:9\n+  --> $DIR/issue-57611-trait-alias.rs:25:9\n    |\n LL |         |x| x\n    |         ^^^^^ implementation of `FnOnce` is not general enough", "previous_filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.stderr"}, {"sha": "f5b91567ff53170c469f15b77bffbef65f3971ed", "filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.nll.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,19 +1,19 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-57611-trait-alias.rs:20:9\n+  --> $DIR/issue-57611-trait-alias.rs:25:9\n    |\n LL |         |x| x\n    |         ^^^^^ one type is more general than the other\n    |\n    = note: expected type `for<'r> Fn<(&'r X,)>`\n               found type `Fn<(&X,)>`\n note: this closure does not fulfill the lifetime requirements\n-  --> $DIR/issue-57611-trait-alias.rs:20:9\n+  --> $DIR/issue-57611-trait-alias.rs:25:9\n    |\n LL |         |x| x\n    |         ^^^^^\n \n error: implementation of `FnOnce` is not general enough\n-  --> $DIR/issue-57611-trait-alias.rs:20:9\n+  --> $DIR/issue-57611-trait-alias.rs:25:9\n    |\n LL |         |x| x\n    |         ^^^^^ implementation of `FnOnce` is not general enough"}, {"sha": "e95ddab75bee407aae93febc78a5f2383159dc94", "filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.rs?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,6 +1,11 @@\n // Regression test for issue #57611\n // Ensures that we don't ICE\n // FIXME: This should compile, but it currently doesn't\n+// known-bug\n+\n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n \n #![feature(trait_alias)]\n #![feature(type_alias_impl_trait)]\n@@ -18,7 +23,6 @@ impl Foo for X {\n \n     fn bar(&self) -> Self::Bar {\n         |x| x\n-        //~^ ERROR implementation of `FnOnce` is not general enough\n     }\n }\n "}, {"sha": "5d555a9c5e4506bba34d3cb694edef70582ff458", "filename": "src/test/ui/unboxed-closures/issue-30906.base.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.base.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `FnOnce` is not general enough\n-  --> $DIR/issue-30906.rs:18:5\n+  --> $DIR/issue-30906.rs:22:5\n    |\n LL |     test(Compose(f, |_| {}));\n    |     ^^^^ implementation of `FnOnce` is not general enough", "previous_filename": "src/test/ui/unboxed-closures/issue-30906.stderr"}, {"sha": "333e8e178217f23b73483dd0092449382e316885", "filename": "src/test/ui/unboxed-closures/issue-30906.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.nll.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,5 +1,5 @@\n error: implementation of `FnOnce` is not general enough\n-  --> $DIR/issue-30906.rs:18:5\n+  --> $DIR/issue-30906.rs:22:5\n    |\n LL |     test(Compose(f, |_| {}));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `FnOnce` is not general enough"}, {"sha": "1fd3a7f97dea3e88662e8d4b41a5fb0c88bbb634", "filename": "src/test/ui/unboxed-closures/issue-30906.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.rs?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,5 +1,9 @@\n #![feature(fn_traits, unboxed_closures)]\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n fn test<F: for<'x> FnOnce<(&'x str,)>>(_: F) {}\n \n struct Compose<F, G>(F, G);"}, {"sha": "ebd14c64298202d8232f5a69f02cd159d64994da", "filename": "src/test/ui/unboxed-closures/unboxed-closures-infer-argument-types-two-region-pointers.base.stderr", "status": "renamed", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.base.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,23 +1,27 @@\n error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n-  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:17:15\n+  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:21:15\n    |\n LL |         x.set(y);\n    |               ^\n    |\n note: ...the reference is valid for the anonymous lifetime #2 defined here...\n-  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:16:14\n+  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:20:14\n    |\n LL |       doit(0, &|x, y| {\n    |  ______________^\n LL | |         x.set(y);\n+LL | |\n+LL | |\n LL | |     });\n    | |_____^\n note: ...but the borrowed content is only valid for the anonymous lifetime #3 defined here\n-  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:16:14\n+  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:20:14\n    |\n LL |       doit(0, &|x, y| {\n    |  ______________^\n LL | |         x.set(y);\n+LL | |\n+LL | |\n LL | |     });\n    | |_____^\n ", "previous_filename": "src/test/ui/unboxed-closures/unboxed-closures-infer-argument-types-two-region-pointers.stderr"}, {"sha": "aeeee6e5003e897799fae54845a0bd9e11f3d628", "filename": "src/test/ui/unboxed-closures/unboxed-closures-infer-argument-types-two-region-pointers.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.nll.stderr?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:17:9\n+  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:21:9\n    |\n LL |     doit(0, &|x, y| {\n    |               -  - has type `&'1 i32`"}, {"sha": "288349e44561e35d1e40e6abd540b6c768b6029d", "filename": "src/test/ui/unboxed-closures/unboxed-closures-infer-argument-types-two-region-pointers.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f881bf7c0a2c1020e36fd5f35be5ecb5af278966/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.rs?ref=f881bf7c0a2c1020e36fd5f35be5ecb5af278966", "patch": "@@ -3,6 +3,10 @@\n // That a closure whose expected argument types include two distinct\n // bound regions.\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n use std::cell::Cell;\n \n fn doit<T,F>(val: T, f: &F)\n@@ -14,6 +18,8 @@ fn doit<T,F>(val: T, f: &F)\n \n pub fn main() {\n     doit(0, &|x, y| {\n-        x.set(y); //~ ERROR E0312\n+        x.set(y);\n+        //[base]~^ ERROR E0312\n+        //[nll]~^^ lifetime may not live long enough\n     });\n }"}]}