{"sha": "b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "node_id": "C_kwDOAAsO6NoAKGI4N2Y4YTRkOWM1YjAyYmUyN2Q3NjNiYjc2ZDY2Mjk4ZjFjMDFmZmU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-31T10:10:58Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-31T10:33:44Z"}, "message": "Add issue reference", "tree": {"sha": "c3d95d95600f2afa2209d3fae93eaed2897cf5de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3d95d95600f2afa2209d3fae93eaed2897cf5de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "html_url": "https://github.com/rust-lang/rust/commit/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df13721863253f6298264165348a60dfb9783f94", "url": "https://api.github.com/repos/rust-lang/rust/commits/df13721863253f6298264165348a60dfb9783f94", "html_url": "https://github.com/rust-lang/rust/commit/df13721863253f6298264165348a60dfb9783f94"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ce51b2e9531fcedbe1520bb18736badb692a4de9", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "patch": "@@ -656,7 +656,7 @@ impl<'a> Linker for GccLinker<'a> {\n             return;\n         }\n \n-        // FIXME hide #[no_mangle] symbols for proc-macros\n+        // FIXME(#99978) hide #[no_mangle] symbols for proc-macros\n \n         let is_windows = self.sess.target.is_like_windows;\n         let path = tmpdir.join(if is_windows { \"list.def\" } else { \"list\" });"}, {"sha": "17052ef4e634615c35a8f2cad3bdb98f1671fb71", "filename": "src/test/run-make-fulldeps/symbol-visibility/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile?ref=b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "patch": "@@ -59,7 +59,7 @@ all:\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_generic_function_from_rlib)\" -eq \"0\" ]\n \n \t# Check that a proc macro exports its public #[no_mangle] functions\n-\t# FIXME avoid exporting #[no_mangle] symbols for proc macros\n+\t# FIXME(#99978) avoid exporting #[no_mangle] symbols for proc macros\n \t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n \t# Check that a proc macro exports the public #[no_mangle] functions of dependencies\n \t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n@@ -108,7 +108,7 @@ endif\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_generic_function_from_rlib)\" -eq \"1\" ]\n \n \t# Check that a proc macro exports its public #[no_mangle] functions\n-\t# FIXME avoid exporting #[no_mangle] symbols for proc macros\n+\t# FIXME(#99978) avoid exporting #[no_mangle] symbols for proc macros\n \t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n \t# Check that a proc macro exports the public #[no_mangle] functions of dependencies\n \t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"1\" ]"}]}