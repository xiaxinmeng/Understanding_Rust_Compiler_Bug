{"sha": "fd536d9d3e5a54b0a7b551a795198210fc229da3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNTM2ZDlkM2U1YTU0YjBhN2I1NTFhNzk1MTk4MjEwZmMyMjlkYTM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-01T23:04:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-01T23:04:56Z"}, "message": "libsyntax: Use the keyword \"copy\" for copy-mode bindings instead of the +.\n\nMea culpa for introducing + in the first place.", "tree": {"sha": "3f95153b40c0bd47428ef68cfb9df4eff09e4ac6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f95153b40c0bd47428ef68cfb9df4eff09e4ac6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd536d9d3e5a54b0a7b551a795198210fc229da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd536d9d3e5a54b0a7b551a795198210fc229da3", "html_url": "https://github.com/rust-lang/rust/commit/fd536d9d3e5a54b0a7b551a795198210fc229da3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd536d9d3e5a54b0a7b551a795198210fc229da3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4991cc5d19a61da91345e9a324c0ea4b8d1b923d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4991cc5d19a61da91345e9a324c0ea4b8d1b923d", "html_url": "https://github.com/rust-lang/rust/commit/4991cc5d19a61da91345e9a324c0ea4b8d1b923d"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "78768ea7f35859d43866d51399ebb40243d9eef9", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fd536d9d3e5a54b0a7b551a795198210fc229da3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd536d9d3e5a54b0a7b551a795198210fc229da3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=fd536d9d3e5a54b0a7b551a795198210fc229da3", "patch": "@@ -1693,7 +1693,7 @@ class parser {\n             }\n           }\n           tok {\n-            if (!is_ident(tok) && tok != token::BINOP(token::PLUS)) ||\n+            if !is_ident(tok) ||\n                     self.is_keyword(~\"true\") || self.is_keyword(~\"false\") {\n                 let val = self.parse_expr_res(RESTRICT_NO_BAR_OP);\n                 if self.eat_keyword(~\"to\") {\n@@ -1708,22 +1708,14 @@ class parser {\n                 let binding_mode;\n                 if self.eat_keyword(~\"ref\") {\n                     binding_mode = bind_by_ref;\n+                } else if self.eat_keyword(~\"copy\") {\n+                    binding_mode = bind_by_value;\n+                } else if refutable {\n+                    // XXX: Should be bind_by_value, but that's not\n+                    // backward compatible.\n+                    binding_mode = bind_by_ref;\n                 } else {\n-                    alt self.token {\n-                        token::BINOP(token::PLUS) => {\n-                            // XXX: Temporary thing pending a snapshot.\n-                            self.bump();\n-                            binding_mode = bind_by_value;\n-                        }\n-                        _ if refutable => {\n-                            // XXX: Should be bind_by_value, but that's not\n-                            // backward compatible.\n-                            binding_mode = bind_by_ref;\n-                        }\n-                        _ => {\n-                            binding_mode = bind_by_value;\n-                        }\n-                    }\n+                    binding_mode = bind_by_value;\n                 }\n \n                 if is_plain_ident(self.token) &&"}]}