{"sha": "d8eea9258acfad331226ddc746f220216bf5dde4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZWVhOTI1OGFjZmFkMzMxMjI2ZGRjNzQ2ZjIyMDIxNmJmNWRkZTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-18T19:57:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-18T19:57:31Z"}, "message": "create an issue for miri even in status test-fail", "tree": {"sha": "87674069940a449ffdd528988470cb7b4f750362", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87674069940a449ffdd528988470cb7b4f750362"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8eea9258acfad331226ddc746f220216bf5dde4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8eea9258acfad331226ddc746f220216bf5dde4", "html_url": "https://github.com/rust-lang/rust/commit/d8eea9258acfad331226ddc746f220216bf5dde4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8eea9258acfad331226ddc746f220216bf5dde4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "673cf7de44b5a98092b5bc7cf2906e866383a65d", "url": "https://api.github.com/repos/rust-lang/rust/commits/673cf7de44b5a98092b5bc7cf2906e866383a65d", "html_url": "https://github.com/rust-lang/rust/commit/673cf7de44b5a98092b5bc7cf2906e866383a65d"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "9e7c18b7f566b1920321f7120923cffa4f2f5ee2", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d8eea9258acfad331226ddc746f220216bf5dde4/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/d8eea9258acfad331226ddc746f220216bf5dde4/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=d8eea9258acfad331226ddc746f220216bf5dde4", "patch": "@@ -64,6 +64,7 @@ def maybe_delink(message):\n \n def issue(\n     tool,\n+    status,\n     maintainers,\n     relevant_pr_number,\n     relevant_pr_user,\n@@ -72,20 +73,27 @@ def issue(\n     # Open an issue about the toolstate failure.\n     assignees = [x.strip() for x in maintainers.split('@') if x != '']\n     assignees.append(relevant_pr_user)\n+    if status == 'test-fail':\n+        status_description = 'has failing tests'\n+    else:\n+        status_description = 'no longer builds'\n     response = urllib2.urlopen(urllib2.Request(\n         gh_url(),\n         json.dumps({\n             'body': maybe_delink(textwrap.dedent('''\\\n             Hello, this is your friendly neighborhood mergebot.\n-            After merging PR {}, I observed that the tool {} no longer builds.\n+            After merging PR {}, I observed that the tool {} {}.\n             A follow-up PR to the repository {} is needed to fix the fallout.\n \n             cc @{}, do you think you would have time to do the follow-up work?\n             If so, that would be great!\n \n             cc @{}, the PR reviewer, and @rust-lang/compiler -- nominating for prioritization.\n \n-            ''').format(relevant_pr_number, tool, REPOS.get(tool), relevant_pr_user, pr_reviewer)),\n+            ''').format(\n+                relevant_pr_number, tool, status_description,\n+                REPOS.get(tool), relevant_pr_user, pr_reviewer\n+            )),\n             'title': '`{}` no longer builds after {}'.format(tool, relevant_pr_number),\n             'assignees': assignees,\n             'labels': ['T-compiler', 'I-nominated'],\n@@ -127,7 +135,7 @@ def update_latest(\n         for status in latest:\n             tool = status['tool']\n             changed = False\n-            build_failed = False\n+            create_issue = False\n \n             for os, s in current_status.items():\n                 old = status[os]\n@@ -145,14 +153,15 @@ def update_latest(\n                         .format(tool, os, old, new)\n                     message += '{} (cc {}, @rust-lang/infra).\\n' \\\n                         .format(title, MAINTAINERS.get(tool))\n-                    # only create issues for build failures. Other failures can be spurious\n-                    if new == 'build-fail':\n-                        build_failed = True\n+                    # Most tools only create issues for build failures.\n+                    # Other failures can be spurious.\n+                    if new == 'build-fail' or (tool == 'miri' and new == 'test-fail'):\n+                        create_issue = True\n \n-            if build_failed:\n+            if create_issue:\n                 try:\n                     issue(\n-                        tool, MAINTAINERS.get(tool, ''),\n+                        tool, new, MAINTAINERS.get(tool, ''),\n                         relevant_pr_number, relevant_pr_user, pr_reviewer,\n                     )\n                 except IOError as e:"}]}