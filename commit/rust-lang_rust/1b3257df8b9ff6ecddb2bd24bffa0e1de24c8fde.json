{"sha": "1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMzI1N2RmOGI5ZmY2ZWNkZGIyYmQyNGJmZmEwZTFkZTI0YzhmZGU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-05-21T22:16:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-21T22:16:05Z"}, "message": "Merge pull request #2726 from csmoe/label_break\n\nFormat label break", "tree": {"sha": "13961af82578dd99c53c9f84aeddbbdb4a866c2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13961af82578dd99c53c9f84aeddbbdb4a866c2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbA0UlCRBK7hj4Ov3rIwAAdHIIAHX+5r0wnBQhJ19ABnc7Wn9t\nD80qaClSUVjSrhLIZ2hXhdMwaZ0E778pPDXmGh6dw64CCptqdPPCJXboaEh6Mpzs\nEJ26k3/BoFPHl55RDmNEdjyBTLlYp8pPYe89eWuII2dfYAQJYqPu99nc2fyO0NW0\nonnXvWcT8TRuSU5wJb4v29nFAmIpD4mrTioDr1w0vRk72ZPGkTSOyiSy2s4Zu5fg\n871hjKZ+tbOmyY+dLQAtSkf4ilkBj1WCO/vVoBMkCPlozDN5zr3xJOQEuEJ/4nh1\nmzqPsDiiADucH8KIegwn05hz2yWxJI8Nt+sIqlbGa+yobAOOZ6WdAX7TTrTl1Ng=\n=ESb6\n-----END PGP SIGNATURE-----\n", "payload": "tree 13961af82578dd99c53c9f84aeddbbdb4a866c2c\nparent 632fab4c954b2b5d213d972652f900c25ad918aa\nparent 64768cf93208cec8ad29768c36d9bd2ac4e772a1\nauthor Seiichi Uchida <seuchida@gmail.com> 1526940965 +0900\ncommitter GitHub <noreply@github.com> 1526940965 +0900\n\nMerge pull request #2726 from csmoe/label_break\n\nFormat label break"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "html_url": "https://github.com/rust-lang/rust/commit/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "632fab4c954b2b5d213d972652f900c25ad918aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/632fab4c954b2b5d213d972652f900c25ad918aa", "html_url": "https://github.com/rust-lang/rust/commit/632fab4c954b2b5d213d972652f900c25ad918aa"}, {"sha": "64768cf93208cec8ad29768c36d9bd2ac4e772a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/64768cf93208cec8ad29768c36d9bd2ac4e772a1", "html_url": "https://github.com/rust-lang/rust/commit/64768cf93208cec8ad29768c36d9bd2ac4e772a1"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "ea3ac5f58f28e61372bb879a06c632c7e95c8a02", "filename": "src/expr.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "patch": "@@ -118,19 +118,19 @@ pub fn format_expr(\n         | ast::ExprKind::While(..)\n         | ast::ExprKind::WhileLet(..) => to_control_flow(expr, expr_type)\n             .and_then(|control_flow| control_flow.rewrite(context, shape)),\n-        // FIXME(topecongiro): Handle label on a block (#2722).\n-        ast::ExprKind::Block(ref block, _) => {\n+        ast::ExprKind::Block(ref block, opt_label) => {\n             match expr_type {\n                 ExprType::Statement => {\n                     if is_unsafe_block(block) {\n-                        rewrite_block(block, Some(&expr.attrs), context, shape)\n+                        rewrite_block(block, Some(&expr.attrs), opt_label, context, shape)\n                     } else if let rw @ Some(_) =\n                         rewrite_empty_block(context, block, Some(&expr.attrs), \"\", shape)\n                     {\n                         // Rewrite block without trying to put it in a single line.\n                         rw\n                     } else {\n                         let prefix = block_prefix(context, block, shape)?;\n+\n                         rewrite_block_with_visitor(\n                             context,\n                             &prefix,\n@@ -141,7 +141,9 @@ pub fn format_expr(\n                         )\n                     }\n                 }\n-                ExprType::SubExpression => rewrite_block(block, Some(&expr.attrs), context, shape),\n+                ExprType::SubExpression => {\n+                    rewrite_block(block, Some(&expr.attrs), opt_label, context, shape)\n+                }\n             }\n         }\n         ast::ExprKind::Match(ref cond, ref arms) => {\n@@ -327,6 +329,7 @@ pub fn format_expr(\n                     rewrite_block(\n                         block,\n                         Some(&expr.attrs),\n+                        None,\n                         context,\n                         Shape::legacy(budget, shape.indent)\n                     )?\n@@ -644,17 +647,20 @@ pub fn rewrite_block_with_visitor(\n \n impl Rewrite for ast::Block {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        rewrite_block(self, None, context, shape)\n+        rewrite_block(self, None, None, context, shape)\n     }\n }\n \n fn rewrite_block(\n     block: &ast::Block,\n     attrs: Option<&[ast::Attribute]>,\n+    label: Option<ast::Label>,\n     context: &RewriteContext,\n     shape: Shape,\n ) -> Option<String> {\n-    let prefix = block_prefix(context, block, shape)?;\n+    let unsafe_string = block_prefix(context, block, shape)?;\n+    let label_string = rewrite_label(label);\n+    let prefix = format!(\"{}{}\", unsafe_string, label_string);\n \n     // shape.width is used only for the single line case: either the empty block `{}`,\n     // or an unsafe expression `unsafe { e }`."}, {"sha": "2c79fd35e70caa51af16f8bae8932c5669baa181", "filename": "tests/source/label_break.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde/tests%2Fsource%2Flabel_break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde/tests%2Fsource%2Flabel_break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Flabel_break.rs?ref=1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "patch": "@@ -0,0 +1,28 @@\n+// format with label break value.\n+fn main() {\n+\n+'empty_block: {}\n+\n+'block: {\n+    do_thing();\n+    if condition_not_met() {\n+        break 'block;\n+    }\n+    do_next_thing();\n+    if condition_not_met() {\n+        break 'block;\n+    }\n+    do_last_thing();\n+}\n+\n+let result = 'block: {\n+    if foo() {\n+        // comment\n+        break 'block       1;\n+    }\n+    if bar() { /* comment */\n+        break 'block      2;\n+    }\n+    3\n+};\n+}\n\\ No newline at end of file"}, {"sha": "afbd8e6fcdf077b88389bac9b70787212e126160", "filename": "tests/target/label_break.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde/tests%2Ftarget%2Flabel_break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde/tests%2Ftarget%2Flabel_break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flabel_break.rs?ref=1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "patch": "@@ -0,0 +1,28 @@\n+// format with label break value.\n+fn main() {\n+    {}\n+\n+    {\n+        do_thing();\n+        if condition_not_met() {\n+            break 'block;\n+        }\n+        do_next_thing();\n+        if condition_not_met() {\n+            break 'block;\n+        }\n+        do_last_thing();\n+    }\n+\n+    let result = 'block: {\n+        if foo() {\n+            // comment\n+            break 'block 1;\n+        }\n+        if bar() {\n+            /* comment */\n+            break 'block 2;\n+        }\n+        3\n+    };\n+}"}]}