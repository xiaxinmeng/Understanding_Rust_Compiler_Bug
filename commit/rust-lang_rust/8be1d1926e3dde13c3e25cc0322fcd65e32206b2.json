{"sha": "8be1d1926e3dde13c3e25cc0322fcd65e32206b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZTFkMTkyNmUzZGRlMTNjM2UyNWNjMDMyMmZjZDY1ZTMyMjA2YjI=", "commit": {"author": {"name": "Bryce Van Dyk", "email": "bryce@vandyk.net.nz", "date": "2015-10-07T12:10:07Z"}, "committer": {"name": "Bryce Van Dyk", "email": "bryce@vandyk.net.nz", "date": "2015-10-07T12:10:07Z"}, "message": "Fix path issue with tests on Windows\n\nThe code that manipulates paths to try and find files in the target dir\nwas not handling windows file seperators correctly. The code has been\nupdated to use the path module, and hopefully will play nicer across\noperating systems.", "tree": {"sha": "9e0f6e345b5ebbfe4839d8715549bb00a4c72446", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e0f6e345b5ebbfe4839d8715549bb00a4c72446"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8be1d1926e3dde13c3e25cc0322fcd65e32206b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8be1d1926e3dde13c3e25cc0322fcd65e32206b2", "html_url": "https://github.com/rust-lang/rust/commit/8be1d1926e3dde13c3e25cc0322fcd65e32206b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8be1d1926e3dde13c3e25cc0322fcd65e32206b2/comments", "author": {"login": "SingingTree", "id": 3637370, "node_id": "MDQ6VXNlcjM2MzczNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3637370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SingingTree", "html_url": "https://github.com/SingingTree", "followers_url": "https://api.github.com/users/SingingTree/followers", "following_url": "https://api.github.com/users/SingingTree/following{/other_user}", "gists_url": "https://api.github.com/users/SingingTree/gists{/gist_id}", "starred_url": "https://api.github.com/users/SingingTree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SingingTree/subscriptions", "organizations_url": "https://api.github.com/users/SingingTree/orgs", "repos_url": "https://api.github.com/users/SingingTree/repos", "events_url": "https://api.github.com/users/SingingTree/events{/privacy}", "received_events_url": "https://api.github.com/users/SingingTree/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SingingTree", "id": 3637370, "node_id": "MDQ6VXNlcjM2MzczNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3637370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SingingTree", "html_url": "https://github.com/SingingTree", "followers_url": "https://api.github.com/users/SingingTree/followers", "following_url": "https://api.github.com/users/SingingTree/following{/other_user}", "gists_url": "https://api.github.com/users/SingingTree/gists{/gist_id}", "starred_url": "https://api.github.com/users/SingingTree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SingingTree/subscriptions", "organizations_url": "https://api.github.com/users/SingingTree/orgs", "repos_url": "https://api.github.com/users/SingingTree/repos", "events_url": "https://api.github.com/users/SingingTree/events{/privacy}", "received_events_url": "https://api.github.com/users/SingingTree/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eeae3944e8cfd26b00275c4f05fdef81b15e263", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eeae3944e8cfd26b00275c4f05fdef81b15e263", "html_url": "https://github.com/rust-lang/rust/commit/5eeae3944e8cfd26b00275c4f05fdef81b15e263"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b6dee149ed1f5299292e319efa39f6ee5741499c", "filename": "tests/system.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8be1d1926e3dde13c3e25cc0322fcd65e32206b2/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8be1d1926e3dde13c3e25cc0322fcd65e32206b2/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=8be1d1926e3dde13c3e25cc0322fcd65e32206b2", "patch": "@@ -16,6 +16,7 @@ extern crate term;\n use std::collections::HashMap;\n use std::fs;\n use std::io::{self, Read, BufRead, BufReader};\n+use std::path::Path;\n \n use rustfmt::*;\n use rustfmt::config::{Config, ReportTactic};\n@@ -232,8 +233,19 @@ fn handle_result(result: HashMap<String, String>,\n \n // Map source file paths to their target paths.\n fn get_target(file_name: &str, target: Option<&str>) -> String {\n-    if file_name.starts_with(\"tests/source/\") {\n-        let base = target.unwrap_or(file_name.trim_left_matches(\"tests/source/\"));\n+    let file_path = Path::new(file_name);\n+    let source_path_prefix = Path::new(\"tests/source/\");\n+    if file_path.starts_with(source_path_prefix) {\n+        let mut components = file_path.components();\n+        // Can't skip(2) as the resulting iterator can't as_path()\n+        components.next();\n+        components.next();\n+\n+        let new_target = match components.as_path().to_str() {\n+            Some(string) => string,\n+            None => file_name,\n+        };\n+        let base = target.unwrap_or(new_target);\n \n         format!(\"tests/target/{}\", base)\n     } else {"}]}