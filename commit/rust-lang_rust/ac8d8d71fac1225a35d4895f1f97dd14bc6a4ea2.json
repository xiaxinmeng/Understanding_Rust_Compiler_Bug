{"sha": "ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjOGQ4ZDcxZmFjMTIyNWEzNWQ0ODk1ZjFmOTdkZDE0YmM2YTRlYTI=", "commit": {"author": {"name": "Philip Munksgaard", "email": "pmunksgaard@gmail.com", "date": "2018-09-18T09:44:28Z"}, "committer": {"name": "Philip Munksgaard", "email": "pmunksgaard@gmail.com", "date": "2018-09-20T06:36:07Z"}, "message": "Add test for doctest edition support", "tree": {"sha": "d513af1192d63dfcf696c6b4b15940eb5cc5311b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d513af1192d63dfcf696c6b4b15940eb5cc5311b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2", "html_url": "https://github.com/rust-lang/rust/commit/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2/comments", "author": {"login": "Munksgaard", "id": 230613, "node_id": "MDQ6VXNlcjIzMDYxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/230613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Munksgaard", "html_url": "https://github.com/Munksgaard", "followers_url": "https://api.github.com/users/Munksgaard/followers", "following_url": "https://api.github.com/users/Munksgaard/following{/other_user}", "gists_url": "https://api.github.com/users/Munksgaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/Munksgaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Munksgaard/subscriptions", "organizations_url": "https://api.github.com/users/Munksgaard/orgs", "repos_url": "https://api.github.com/users/Munksgaard/repos", "events_url": "https://api.github.com/users/Munksgaard/events{/privacy}", "received_events_url": "https://api.github.com/users/Munksgaard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Munksgaard", "id": 230613, "node_id": "MDQ6VXNlcjIzMDYxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/230613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Munksgaard", "html_url": "https://github.com/Munksgaard", "followers_url": "https://api.github.com/users/Munksgaard/followers", "following_url": "https://api.github.com/users/Munksgaard/following{/other_user}", "gists_url": "https://api.github.com/users/Munksgaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/Munksgaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Munksgaard/subscriptions", "organizations_url": "https://api.github.com/users/Munksgaard/orgs", "repos_url": "https://api.github.com/users/Munksgaard/repos", "events_url": "https://api.github.com/users/Munksgaard/events{/privacy}", "received_events_url": "https://api.github.com/users/Munksgaard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c996c4d316ce9023c3ef296a583e0c8bf7ce5880", "url": "https://api.github.com/repos/rust-lang/rust/commits/c996c4d316ce9023c3ef296a583e0c8bf7ce5880", "html_url": "https://github.com/rust-lang/rust/commit/c996c4d316ce9023c3ef296a583e0c8bf7ce5880"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "e342c260a739bf405827de5d2b6b3c9f5ce82f19", "filename": "src/doc/unstable-book/src/language-features/try-blocks.md", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftry-blocks.md", "raw_url": "https://github.com/rust-lang/rust/raw/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftry-blocks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftry-blocks.md?ref=ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2", "patch": "@@ -9,9 +9,7 @@ The tracking issue for this feature is: [#31436]\n The `try_blocks` feature adds support for `try` blocks. A `try`\n block creates a new scope one can use the `?` operator in.\n \n-```rust,ignore\n-// This code needs the 2018 edition\n-\n+```rust,edition2018\n #![feature(try_blocks)]\n \n use std::num::ParseIntError;"}, {"sha": "322d461f854e9475fe033ad10269e3db6a8f2053", "filename": "src/test/rustdoc/edition-doctest.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2/src%2Ftest%2Frustdoc%2Fedition-doctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2/src%2Ftest%2Frustdoc%2Fedition-doctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fedition-doctest.rs?ref=ac8d8d71fac1225a35d4895f1f97dd14bc6a4ea2", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--test\n+\n+/// ```rust,edition2018\n+/// #![feature(try_blocks)]\n+///\n+/// use std::num::ParseIntError;\n+///\n+/// let result: Result<i32, ParseIntError> = try {\n+///     \"1\".parse::<i32>()?\n+///         + \"2\".parse::<i32>()?\n+///         + \"3\".parse::<i32>()?\n+/// };\n+/// assert_eq!(result, Ok(6));\n+///\n+/// let result: Result<i32, ParseIntError> = try {\n+///     \"1\".parse::<i32>()?\n+///         + \"foo\".parse::<i32>()?\n+///         + \"3\".parse::<i32>()?\n+/// };\n+/// assert!(result.is_err());\n+/// ```\n+\n+\n+/// ```rust,edition2015,compile_fail,E0574\n+/// #![feature(try_blocks)]\n+///\n+/// use std::num::ParseIntError;\n+///\n+/// let result: Result<i32, ParseIntError> = try {\n+///     \"1\".parse::<i32>()?\n+///         + \"2\".parse::<i32>()?\n+///         + \"3\".parse::<i32>()?\n+/// };\n+/// assert_eq!(result, Ok(6));\n+///\n+/// let result: Result<i32, ParseIntError> = try {\n+///     \"1\".parse::<i32>()?\n+///         + \"foo\".parse::<i32>()?\n+///         + \"3\".parse::<i32>()?\n+/// };\n+/// assert!(result.is_err());\n+/// ```\n+\n+pub fn foo() {}"}]}