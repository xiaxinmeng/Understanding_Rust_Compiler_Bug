{"sha": "d153f4f4936efc8039489083f5561070cf5de029", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNTNmNGY0OTM2ZWZjODAzOTQ4OTA4M2Y1NTYxMDcwY2Y1ZGUwMjk=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-11-09T20:29:21Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-11-09T20:29:21Z"}, "message": "Drop long-section-names linker workaround for windows-gnu", "tree": {"sha": "4cfbb03a7839cd0265751474553fe707ec668976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cfbb03a7839cd0265751474553fe707ec668976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d153f4f4936efc8039489083f5561070cf5de029", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d153f4f4936efc8039489083f5561070cf5de029", "html_url": "https://github.com/rust-lang/rust/commit/d153f4f4936efc8039489083f5561070cf5de029", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d153f4f4936efc8039489083f5561070cf5de029/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c173afe4b7019d0b739151b7d4d4343a85ea2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/98c173afe4b7019d0b739151b7d4d4343a85ea2b", "html_url": "https://github.com/rust-lang/rust/commit/98c173afe4b7019d0b739151b7d4d4343a85ea2b"}], "stats": {"total": 27, "additions": 0, "deletions": 27}, "files": [{"sha": "ce7b338345caf6e4fed10c2c7313e40d42ca9cbd", "filename": "src/librustc_target/spec/windows_base.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d153f4f4936efc8039489083f5561070cf5de029/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d153f4f4936efc8039489083f5561070cf5de029/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs?ref=d153f4f4936efc8039489083f5561070cf5de029", "patch": "@@ -4,33 +4,6 @@ use std::default::Default;\n pub fn opts() -> TargetOptions {\n     let mut pre_link_args = LinkArgs::new();\n     pre_link_args.insert(LinkerFlavor::Gcc, vec![\n-            // And here, we see obscure linker flags #45. On windows, it has been\n-            // found to be necessary to have this flag to compile liblibc.\n-            //\n-            // First a bit of background. On Windows, the file format is not ELF,\n-            // but COFF (at least according to LLVM). COFF doesn't officially allow\n-            // for section names over 8 characters, apparently. Our metadata\n-            // section, \".note.rustc\", you'll note is over 8 characters.\n-            //\n-            // On more recent versions of gcc on mingw, apparently the section name\n-            // is *not* truncated, but rather stored elsewhere in a separate lookup\n-            // table. On older versions of gcc, they apparently always truncated th\n-            // section names (at least in some cases). Truncating the section name\n-            // actually creates \"invalid\" objects [1] [2], but only for some\n-            // introspection tools, not in terms of whether it can be loaded.\n-            //\n-            // Long story short, passing this flag forces the linker to *not*\n-            // truncate section names (so we can find the metadata section after\n-            // it's compiled). The real kicker is that rust compiled just fine on\n-            // windows for quite a long time *without* this flag, so I have no idea\n-            // why it suddenly started failing for liblibc. Regardless, we\n-            // definitely don't want section name truncation, so we're keeping this\n-            // flag for windows.\n-            //\n-            // [1] - https://sourceware.org/bugzilla/show_bug.cgi?id=13130\n-            // [2] - https://code.google.com/p/go/issues/detail?id=2139\n-            \"-Wl,--enable-long-section-names\".to_string(),\n-\n             // Tell GCC to avoid linker plugins, because we are not bundling\n             // them with Windows installer, and Rust does its own LTO anyways.\n             \"-fno-use-linker-plugin\".to_string(),"}]}