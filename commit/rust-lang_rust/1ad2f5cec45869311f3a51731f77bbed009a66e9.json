{"sha": "1ad2f5cec45869311f3a51731f77bbed009a66e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZDJmNWNlYzQ1ODY5MzExZjNhNTE3MzFmNzdiYmVkMDA5YTY2ZTk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-30T17:46:27Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-30T19:44:19Z"}, "message": "Added help message for missing IndexMut impl.", "tree": {"sha": "89aba9d5780ec768559a0f9468bfadc3e69e43ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89aba9d5780ec768559a0f9468bfadc3e69e43ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ad2f5cec45869311f3a51731f77bbed009a66e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAluISRMACgkQAXYLT59T\n8VQlIxAAgk5HJgYve6zV5Sc0YUljQ9MqBg/6SCW/MwTZzlXsyVKH+Om7fu7LN+91\nzDqwyYVfyCWcUT6ZepsH+eeT9mTruPXqN98/HsWzCD+RdI7DW35qUSs0nnmrl3QJ\nIxMjpfyXI/Ed+qQ/7XGxYWLt7DFJveIrN1k5H+DA6WsnqiFQnqMkCXBSp4cLkTVx\nkcvWWsRezoztkk3HKHfTU4oiHnhzSa3zZE7pf4UoHzncyVBhPe/r66s1K7yRwhWK\nN2cN7oopZEcCNYDROOukRoSrv9hSNbjT5lz90QYH2nsuNrqIt3SpfgndjL5dQ4wJ\nHIInH4gY13ck7sLus74z4BLZPu3uoAlyM5Q11kDTjbSIXSDRex5YdA4oKoRexv/A\nA+h/CZtepgfVL95w3oMF99mPembu2Wws91QDbnpsooPLnYpuUp1vGv82vpX4Y/Q/\nZj8UgS+Yu+iKBdZHnTsD7etq6KMtBfB1WLl6bgGCd7eMjucHbLQoxm7H4Cw9HAjX\nsZwmUakLxF3Ty8BpL/FQcGNZtvg1cXIQv1meZsfpBo5VbyOkbpYzjFszgIUvj2yq\nwpKQg9iWwzZqhSUqUg5FfU7aGpv7W/grETKIqEyjt1NOvQ3ZkDL88ZFYjO/O+VYa\n6riy4gXacY/fKyS/gI9edqAovLsciFcT+6HDEVOs3Nv2VEGZFjI=\n=zxMc\n-----END PGP SIGNATURE-----", "payload": "tree 89aba9d5780ec768559a0f9468bfadc3e69e43ff\nparent ef6851cdb285d18e54b9770b455b595565572462\nauthor David Wood <david@davidtw.co> 1535651187 +0200\ncommitter David Wood <david@davidtw.co> 1535658259 +0200\n\nAdded help message for missing IndexMut impl.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad2f5cec45869311f3a51731f77bbed009a66e9", "html_url": "https://github.com/rust-lang/rust/commit/1ad2f5cec45869311f3a51731f77bbed009a66e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ad2f5cec45869311f3a51731f77bbed009a66e9/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef6851cdb285d18e54b9770b455b595565572462", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef6851cdb285d18e54b9770b455b595565572462", "html_url": "https://github.com/rust-lang/rust/commit/ef6851cdb285d18e54b9770b455b595565572462"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "a04d202efcfb02b759a4fc60a4af1b0e8ceb5ae4", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=1ad2f5cec45869311f3a51731f77bbed009a66e9", "patch": "@@ -1601,8 +1601,9 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         if let Some(&init_index) = first_init_index {\n             // And, if so, report an error.\n             let init = &self.move_data.inits[init_index];\n+            let span = init.span(&self.mir);\n             self.report_illegal_reassignment(\n-                context, place_span, init.span(&self.mir), place_span.0\n+                context, place_span, span, place_span.0\n             );\n         }\n     }"}, {"sha": "38cdd17a7273cf9049d47601043c226888c94385", "filename": "src/librustc_mir/borrow_check/mutability_errors.rs", "status": "modified", "additions": 46, "deletions": 4, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs?ref=1ad2f5cec45869311f3a51731f77bbed009a66e9", "patch": "@@ -10,9 +10,10 @@\n \n use rustc::hir;\n use rustc::hir::Node;\n-use rustc::mir::{self, BindingForm, ClearCrossCrate, Local, Location, Mir};\n-use rustc::mir::{Mutability, Place, Projection, ProjectionElem, Static};\n-use rustc::ty::{self, TyCtxt};\n+use rustc::mir::{self, BindingForm, Constant, ClearCrossCrate, Local, Location, Mir};\n+use rustc::mir::{Mutability, Operand, Place, Projection, ProjectionElem, Static, Terminator};\n+use rustc::mir::TerminatorKind;\n+use rustc::ty::{self, Const, DefIdTree, TyS, TyKind, TyCtxt};\n use rustc_data_structures::indexed_vec::Idx;\n use syntax_pos::Span;\n \n@@ -22,7 +23,7 @@ use util::borrowck_errors::{BorrowckErrors, Origin};\n use util::collect_writes::FindAssignments;\n use util::suggest_ref_mut;\n \n-#[derive(Copy, Clone, Debug)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq)]\n pub(super) enum AccessKind {\n     MutableBorrow,\n     Mutate,\n@@ -394,6 +395,47 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                 );\n             }\n \n+            Place::Projection(box Projection {\n+                base: Place::Local(local),\n+                elem: ProjectionElem::Deref,\n+            })  if error_access == AccessKind::MutableBorrow => {\n+                err.span_label(span, format!(\"cannot {ACT}\", ACT = act));\n+\n+                let mpi = self.move_data.rev_lookup.find_local(*local);\n+                for i in self.move_data.init_path_map[mpi].iter() {\n+                    if let InitLocation::Statement(location) = self.move_data.inits[*i].location {\n+                        if let Some(\n+                            Terminator {\n+                                kind: TerminatorKind::Call {\n+                                    func: Operand::Constant(box Constant {\n+                                        literal: Const {\n+                                            ty: &TyS {\n+                                                sty: TyKind::FnDef(id, substs),\n+                                                ..\n+                                            },\n+                                            ..\n+                                        },\n+                                        ..\n+                                    }),\n+                                    ..\n+                                },\n+                                ..\n+                            }\n+                        ) = &self.mir.basic_blocks()[location.block].terminator {\n+                            if self.tcx.parent(id) == self.tcx.lang_items().index_trait() {\n+                                err.help(\n+                                    &format!(\n+                                        \"trait `IndexMut` is required to modify indexed content, \\\n+                                         but it is not implemented for `{}`\",\n+                                         substs.type_at(0),\n+                                    ),\n+                                );\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+\n             _ => {\n                 err.span_label(span, format!(\"cannot {ACT}\", ACT = act));\n             }"}, {"sha": "a15f37684e73871f460b14d1cc9f9b0663a2d86a", "filename": "src/test/ui/borrowck/index-mut-help.nll.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Ftest%2Fui%2Fborrowck%2Findex-mut-help.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Ftest%2Fui%2Fborrowck%2Findex-mut-help.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Findex-mut-help.nll.stderr?ref=1ad2f5cec45869311f3a51731f77bbed009a66e9", "patch": "@@ -3,6 +3,8 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n    |\n LL |     map[\"peter\"].clear();           //~ ERROR\n    |     ^^^^^^^^^^^^ cannot borrow as mutable\n+   |\n+   = help: trait `IndexMut` is required to modify indexed content, but it is not implemented for `std::collections::HashMap<&str, std::string::String>`\n \n error[E0594]: cannot assign to data in a `&` reference\n   --> $DIR/index-mut-help.rs:22:5\n@@ -15,6 +17,8 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n    |\n LL |     let _ = &mut map[\"peter\"];      //~ ERROR\n    |             ^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n+   |\n+   = help: trait `IndexMut` is required to modify indexed content, but it is not implemented for `std::collections::HashMap<&str, std::string::String>`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9f727881beaf2390f2cd78a83be8d93d28f540b2", "filename": "src/test/ui/issues/issue-41726.nll.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Ftest%2Fui%2Fissues%2Fissue-41726.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ad2f5cec45869311f3a51731f77bbed009a66e9/src%2Ftest%2Fui%2Fissues%2Fissue-41726.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41726.nll.stderr?ref=1ad2f5cec45869311f3a51731f77bbed009a66e9", "patch": "@@ -3,6 +3,8 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n    |\n LL |         things[src.as_str()].sort(); //~ ERROR cannot borrow immutable\n    |         ^^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n+   |\n+   = help: trait `IndexMut` is required to modify indexed content, but it is not implemented for `std::collections::HashMap<std::string::String, std::vec::Vec<std::string::String>>`\n \n error: aborting due to previous error\n "}]}