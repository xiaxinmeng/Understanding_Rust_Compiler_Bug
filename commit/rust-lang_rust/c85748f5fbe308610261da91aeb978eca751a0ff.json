{"sha": "c85748f5fbe308610261da91aeb978eca751a0ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NTc0OGY1ZmJlMzA4NjEwMjYxZGE5MWFlYjk3OGVjYTc1MWEwZmY=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-23T16:16:47Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-23T16:29:03Z"}, "message": "Type the return values of call expressions", "tree": {"sha": "80d60eb2dad182d0eae2f05a7e9d26a3cde4d3c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80d60eb2dad182d0eae2f05a7e9d26a3cde4d3c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c85748f5fbe308610261da91aeb978eca751a0ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c85748f5fbe308610261da91aeb978eca751a0ff", "html_url": "https://github.com/rust-lang/rust/commit/c85748f5fbe308610261da91aeb978eca751a0ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c85748f5fbe308610261da91aeb978eca751a0ff/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef67581104eb00a0c199f0b2a3b558da8a6f90a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef67581104eb00a0c199f0b2a3b558da8a6f90a2", "html_url": "https://github.com/rust-lang/rust/commit/ef67581104eb00a0c199f0b2a3b558da8a6f90a2"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "92de9842c8df562882ce134d3e72be2d2879e22c", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c85748f5fbe308610261da91aeb978eca751a0ff/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c85748f5fbe308610261da91aeb978eca751a0ff/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=c85748f5fbe308610261da91aeb978eca751a0ff", "patch": "@@ -211,7 +211,6 @@ impl fmt::Display for Ty {\n }\n \n pub fn type_for_fn(db: &impl HirDatabase, f: Function) -> Cancelable<Ty> {\n-    eprintln!(\"type_for_fn {:?}\", f.fn_id);\n     let syntax = f.syntax(db);\n     let node = syntax.borrowed();\n     // TODO we ignore type parameters for now\n@@ -397,7 +396,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 Ty::Unknown\n             }\n             ast::Expr::CallExpr(e) => {\n-                let _callee_ty = if let Some(e) = e.expr() {\n+                let callee_ty = if let Some(e) = e.expr() {\n                     self.infer_expr(e)?\n                 } else {\n                     Ty::Unknown\n@@ -408,7 +407,16 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                         self.infer_expr(arg)?;\n                     }\n                 }\n-                Ty::Unknown\n+                match callee_ty {\n+                    Ty::FnPtr(sig) => {\n+                        sig.output.clone()\n+                    }\n+                    _ => {\n+                        // not callable\n+                        // TODO report an error?\n+                        Ty::Unknown\n+                    }\n+                }\n             }\n             ast::Expr::MethodCallExpr(e) => {\n                 let _receiver_ty = if let Some(e) = e.expr() {"}, {"sha": "acde9b7adf31465da832bdd2fa5a5a532f8196a9", "filename": "crates/ra_hir/src/ty/tests/data/0003_paths.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c85748f5fbe308610261da91aeb978eca751a0ff/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c85748f5fbe308610261da91aeb978eca751a0ff/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.txt?ref=c85748f5fbe308610261da91aeb978eca751a0ff", "patch": "@@ -2,8 +2,8 @@\n [14; 19) '{ 1 }': [unknown]\n [47; 52) '{ 1 }': [unknown]\n [49; 50) '1': [unknown]\n-[81; 87) 'b::c()': [unknown]\n+[81; 87) 'b::c()': u32\n [66; 90) '{     ...c(); }': ()\n [72; 73) 'a': fn() -> u32\n-[72; 75) 'a()': [unknown]\n+[72; 75) 'a()': u32\n [81; 85) 'b::c': fn() -> u32"}]}