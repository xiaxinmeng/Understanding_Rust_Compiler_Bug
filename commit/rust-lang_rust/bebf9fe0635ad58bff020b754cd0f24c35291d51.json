{"sha": "bebf9fe0635ad58bff020b754cd0f24c35291d51", "node_id": "C_kwDOAAsO6NoAKGJlYmY5ZmUwNjM1YWQ1OGJmZjAyMGI3NTRjZDBmMjRjMzUyOTFkNTE", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-11T20:36:46Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-11T20:53:24Z"}, "message": "Turn format arguments types into lang items.", "tree": {"sha": "6d662144f90fd04b92a0003cdeb9d97513dd32e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d662144f90fd04b92a0003cdeb9d97513dd32e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bebf9fe0635ad58bff020b754cd0f24c35291d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bebf9fe0635ad58bff020b754cd0f24c35291d51", "html_url": "https://github.com/rust-lang/rust/commit/bebf9fe0635ad58bff020b754cd0f24c35291d51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bebf9fe0635ad58bff020b754cd0f24c35291d51/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c4517659213c67e3ca6f3ef50ef9065385dca54", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c4517659213c67e3ca6f3ef50ef9065385dca54", "html_url": "https://github.com/rust-lang/rust/commit/3c4517659213c67e3ca6f3ef50ef9065385dca54"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "cb62317909c4cd1f3dc46595d9c6cf357438655a", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bebf9fe0635ad58bff020b754cd0f24c35291d51/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebf9fe0635ad58bff020b754cd0f24c35291d51/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=bebf9fe0635ad58bff020b754cd0f24c35291d51", "patch": "@@ -244,6 +244,14 @@ language_item_table! {\n     /// libstd panic entry point. Necessary for const eval to be able to catch it\n     BeginPanic,              sym::begin_panic,         begin_panic_fn,             Target::Fn,             GenericRequirement::None;\n \n+    // Lang items needed for `format_args!()`.\n+    FormatAlignment,         sym::format_alignment,    format_alignment,           Target::Enum,           GenericRequirement::None;\n+    FormatArgument,          sym::format_argument,     format_argument,            Target::Struct,         GenericRequirement::None;\n+    FormatArguments,         sym::format_arguments,    format_arguments,           Target::Struct,         GenericRequirement::None;\n+    FormatCount,             sym::format_count,        format_count,               Target::Enum,           GenericRequirement::None;\n+    FormatPlaceholder,       sym::format_placeholder,  format_placeholder,         Target::Struct,         GenericRequirement::None;\n+    FormatUnsafeArg,         sym::format_unsafe_arg,   format_unsafe_arg,          Target::Struct,         GenericRequirement::None;\n+\n     ExchangeMalloc,          sym::exchange_malloc,     exchange_malloc_fn,         Target::Fn,             GenericRequirement::None;\n     BoxFree,                 sym::box_free,            box_free_fn,                Target::Fn,             GenericRequirement::Minimum(1);\n     DropInPlace,             sym::drop_in_place,       drop_in_place_fn,           Target::Fn,             GenericRequirement::Minimum(1);"}, {"sha": "f8cd5ba03dbe0eea4cfeb9d39688ef3672e3ef29", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bebf9fe0635ad58bff020b754cd0f24c35291d51/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebf9fe0635ad58bff020b754cd0f24c35291d51/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=bebf9fe0635ad58bff020b754cd0f24c35291d51", "patch": "@@ -721,11 +721,17 @@ symbols! {\n         forbid,\n         forget,\n         format,\n+        format_alignment,\n         format_args,\n         format_args_capture,\n         format_args_macro,\n         format_args_nl,\n+        format_argument,\n+        format_arguments,\n+        format_count,\n         format_macro,\n+        format_placeholder,\n+        format_unsafe_arg,\n         freeze,\n         freg,\n         frem_fast,"}, {"sha": "ae2f7f049b64ef57caf7ff100174537fb939345b", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bebf9fe0635ad58bff020b754cd0f24c35291d51/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebf9fe0635ad58bff020b754cd0f24c35291d51/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=bebf9fe0635ad58bff020b754cd0f24c35291d51", "patch": "@@ -262,6 +262,7 @@ extern \"C\" {\n /// family of functions. It contains a function to format the given value. At\n /// compile time it is ensured that the function and the value have the correct\n /// types, and then this struct is used to canonicalize arguments to one type.\n+#[cfg_attr(not(bootstrap), lang = \"format_argument\")]\n #[derive(Copy, Clone)]\n #[allow(missing_debug_implementations)]\n #[unstable(feature = \"fmt_internals\", reason = \"internal to format_args!\", issue = \"none\")]\n@@ -274,6 +275,7 @@ pub struct ArgumentV1<'a> {\n /// This struct represents the unsafety of constructing an `Arguments`.\n /// It exists, rather than an unsafe function, in order to simplify the expansion\n /// of `format_args!(..)` and reduce the scope of the `unsafe` block.\n+#[cfg_attr(not(bootstrap), lang = \"format_unsafe_arg\")]\n #[allow(missing_debug_implementations)]\n #[doc(hidden)]\n #[unstable(feature = \"fmt_internals\", reason = \"internal to format_args!\", issue = \"none\")]\n@@ -468,8 +470,8 @@ impl<'a> Arguments<'a> {\n /// ```\n ///\n /// [`format()`]: ../../std/fmt/fn.format.html\n+#[cfg_attr(not(bootstrap), lang = \"format_arguments\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(not(test), rustc_diagnostic_item = \"Arguments\")]\n #[derive(Copy, Clone)]\n pub struct Arguments<'a> {\n     // Format string pieces to print."}, {"sha": "8a3de89e18b76c8d5b99e2ef63d728828ddcc011", "filename": "library/core/src/fmt/rt/v1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bebf9fe0635ad58bff020b754cd0f24c35291d51/library%2Fcore%2Fsrc%2Ffmt%2Frt%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebf9fe0635ad58bff020b754cd0f24c35291d51/library%2Fcore%2Fsrc%2Ffmt%2Frt%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Frt%2Fv1.rs?ref=bebf9fe0635ad58bff020b754cd0f24c35291d51", "patch": "@@ -5,7 +5,9 @@\n //! these can be statically allocated and are slightly optimized for the runtime\n #![allow(missing_debug_implementations)]\n \n+#[cfg_attr(not(bootstrap), lang = \"format_placeholder\")]\n #[derive(Copy, Clone)]\n+// FIXME: Rename this to Placeholder\n pub struct Argument {\n     pub position: usize,\n     pub format: FormatSpec,\n@@ -21,6 +23,7 @@ pub struct FormatSpec {\n }\n \n /// Possible alignments that can be requested as part of a formatting directive.\n+#[cfg_attr(not(bootstrap), lang = \"format_alignment\")]\n #[derive(Copy, Clone, PartialEq, Eq)]\n pub enum Alignment {\n     /// Indication that contents should be left-aligned.\n@@ -34,6 +37,7 @@ pub enum Alignment {\n }\n \n /// Used by [width](https://doc.rust-lang.org/std/fmt/#width) and [precision](https://doc.rust-lang.org/std/fmt/#precision) specifiers.\n+#[cfg_attr(not(bootstrap), lang = \"format_count\")]\n #[derive(Copy, Clone)]\n pub enum Count {\n     /// Specified with a literal number, stores the value"}]}