{"sha": "486c5c3285682408b125613475a34a0bc9a2c097", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NmM1YzMyODU2ODI0MDhiMTI1NjEzNDc1YTM0YTBiYzlhMmMwOTc=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-04T12:13:31Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-09T22:42:20Z"}, "message": "Exclude special files", "tree": {"sha": "8928b836c589c783ad1f426218a134292926cffe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8928b836c589c783ad1f426218a134292926cffe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/486c5c3285682408b125613475a34a0bc9a2c097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/486c5c3285682408b125613475a34a0bc9a2c097", "html_url": "https://github.com/rust-lang/rust/commit/486c5c3285682408b125613475a34a0bc9a2c097", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/486c5c3285682408b125613475a34a0bc9a2c097/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "897a4c702e3d6fa9156ea0bc34af9d397fae3440", "url": "https://api.github.com/repos/rust-lang/rust/commits/897a4c702e3d6fa9156ea0bc34af9d397fae3440", "html_url": "https://github.com/rust-lang/rust/commit/897a4c702e3d6fa9156ea0bc34af9d397fae3440"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "c72e254f41526e1f3e63a5a76b5cb621fe0dfa6c", "filename": "crates/base_db/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/486c5c3285682408b125613475a34a0bc9a2c097/crates%2Fbase_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486c5c3285682408b125613475a34a0bc9a2c097/crates%2Fbase_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Flib.rs?ref=486c5c3285682408b125613475a34a0bc9a2c097", "patch": "@@ -172,17 +172,22 @@ impl<T: SourceDatabaseExt> FileLoader for FileLoaderDelegate<&'_ T> {\n             Some((\"mod\", Some(\"rs\"))) | Some((\"lib\", Some(\"rs\"))) => {\n                 module_files.list_files_with_extensions(module_file, None)\n             }\n+            // TODO kb for `src/bin/foo.rs`, we need to check for modules in `src/bin/`\n             Some((directory_with_module_name, Some(\"rs\"))) => module_files\n                 .list_files_with_extensions(\n                     module_file,\n                     Some(&format!(\"../{}/\", directory_with_module_name)),\n                 ),\n+            // TODO kb also consider the case when there's no `../module_name.rs`, but `../module_name/mod.rs`\n             _ => Vec::new(),\n         };\n \n         possible_submodule_files\n             .into_iter()\n             .filter(|(_, extension)| extension == &Some(\"rs\"))\n+            .filter(|(file_name, _)| file_name != &\"mod\")\n+            .filter(|(file_name, _)| file_name != &\"lib\")\n+            .filter(|(file_name, _)| file_name != &\"main\")\n             .map(|(file_name, _)| file_name.to_owned())\n             .collect()\n     }"}, {"sha": "74cd16e0a10f485086b414216989d4a8ac53616e", "filename": "crates/ide/src/completion/completion_context.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/486c5c3285682408b125613475a34a0bc9a2c097/crates%2Fide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486c5c3285682408b125613475a34a0bc9a2c097/crates%2Fide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=486c5c3285682408b125613475a34a0bc9a2c097", "patch": "@@ -117,9 +117,6 @@ impl<'a> CompletionContext<'a> {\n                 .to_module_def(position.file_id)\n                 .and_then(|current_module| {\n                     let definition_source = current_module.definition_source(db);\n-                    if !matches!(definition_source.value, ModuleSource::SourceFile(_)) {\n-                        return None;\n-                    }\n                     let module_definition_source_file = definition_source.file_id.original_file(db);\n                     let mod_declaration_candidates =\n                         db.possible_sudmobule_names(module_definition_source_file);"}]}