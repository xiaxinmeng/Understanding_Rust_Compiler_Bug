{"sha": "ae6107070d4c734678f141f56b7aab6c16a41014", "node_id": "C_kwDOAAsO6NoAKGFlNjEwNzA3MGQ0YzczNDY3OGYxNDFmNTZiN2FhYjZjMTZhNDEwMTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-23T23:31:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-23T23:31:41Z"}, "message": "Rollup merge of #106069 - notriddle:notriddle/search-tabs, r=GuillaumeGomez\n\nrustdoc: use a more evocative name for CSS/JS `#titles`\n\nThis renames the ID, which is only used in search results, to `#search-tabs`. Also changes the `.count` to a span, so it doesn't need its display mode to be overridden.", "tree": {"sha": "009b437919b51e5a51c78b8948dbb060a40a1476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/009b437919b51e5a51c78b8948dbb060a40a1476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae6107070d4c734678f141f56b7aab6c16a41014", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjpjpdCRBK7hj4Ov3rIwAAPkYIADMwLWbTR4WYCTJzYjrKmfHT\n1cBXP/hPH0333ojrr8zurPMYA2lGTf75V9n6X/kM4bA0vagSTTpe0JoeGgulWqPz\n7IgZGYifjo9L7j41xngqCT7Gp3/BuP+03gr3WKriGLmcKA2CS5Jtj1RMFW1ClfeH\nmnXq1G9v3buY/eEARrYn0h7EDPD/Yu+IsvaSP/q108zdYUXBHNQachMHn0JQxOOj\nFHtzN8VrC6kbnd2dyDYKCw6E5I0gQCA0khPJNrgVx26vOzCR26K7Gmf5S6+BuMHH\nnd3z0211CrW8ChcNFuj3d7eEFWsX5lmjc+5AUdWWDCk4eNdiVjAKiqnHmsoXAV0=\n=RTFU\n-----END PGP SIGNATURE-----\n", "payload": "tree 009b437919b51e5a51c78b8948dbb060a40a1476\nparent d23cb738d255ca1a9834fbe87ba8700b3d7da23f\nparent 7c6aa7c59d3eb75fa00a04d5a6946c16098a902b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671838301 +0100\ncommitter GitHub <noreply@github.com> 1671838301 +0100\n\nRollup merge of #106069 - notriddle:notriddle/search-tabs, r=GuillaumeGomez\n\nrustdoc: use a more evocative name for CSS/JS `#titles`\n\nThis renames the ID, which is only used in search results, to `#search-tabs`. Also changes the `.count` to a span, so it doesn't need its display mode to be overridden.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6107070d4c734678f141f56b7aab6c16a41014", "html_url": "https://github.com/rust-lang/rust/commit/ae6107070d4c734678f141f56b7aab6c16a41014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae6107070d4c734678f141f56b7aab6c16a41014/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d23cb738d255ca1a9834fbe87ba8700b3d7da23f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d23cb738d255ca1a9834fbe87ba8700b3d7da23f", "html_url": "https://github.com/rust-lang/rust/commit/d23cb738d255ca1a9834fbe87ba8700b3d7da23f"}, {"sha": "7c6aa7c59d3eb75fa00a04d5a6946c16098a902b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6aa7c59d3eb75fa00a04d5a6946c16098a902b", "html_url": "https://github.com/rust-lang/rust/commit/7c6aa7c59d3eb75fa00a04d5a6946c16098a902b"}], "stats": {"total": 104, "additions": 52, "deletions": 52}, "files": [{"sha": "e6e82602c3a1ea8a4547772d3c969b96b7e51b37", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -1261,14 +1261,14 @@ a.test-arrow:hover {\n \tmargin-right: auto;\n }\n \n-#titles {\n+#search-tabs {\n \tdisplay: flex;\n \tflex-direction: row;\n \tgap: 1px;\n \tmargin-bottom: 4px;\n }\n \n-#titles > button {\n+#search-tabs button {\n \ttext-align: center;\n \tfont-size: 1.125rem;\n \tborder: 0;\n@@ -1278,8 +1278,7 @@ a.test-arrow:hover {\n \tcolor: inherit;\n }\n \n-#titles > button > div.count {\n-\tdisplay: inline-block;\n+#search-tabs .count {\n \tfont-size: 1rem;\n \tcolor: var(--search-tab-title-count-color);\n }\n@@ -1706,7 +1705,7 @@ in storage.js\n \t\tdisplay: none !important;\n \t}\n \n-\t#titles > button > div.count {\n+\t#search-tabs .count {\n \t\tdisplay: block;\n \t}\n "}, {"sha": "1b8822b0b2b7dedfa0f4c6589043a1208e799d53", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -49,7 +49,7 @@ function printTab(nb) {\n     let iter = 0;\n     let foundCurrentTab = false;\n     let foundCurrentResultSet = false;\n-    onEachLazy(document.getElementById(\"titles\").childNodes, elem => {\n+    onEachLazy(document.getElementById(\"search-tabs\").childNodes, elem => {\n         if (nb === iter) {\n             addClass(elem, \"selected\");\n             foundCurrentTab = true;\n@@ -1490,7 +1490,7 @@ function initSearch(rawSearchIndex) {\n     function focusSearchResult() {\n         const target = searchState.focusedByTab[searchState.currentTab] ||\n             document.querySelectorAll(\".search-results.active a\").item(0) ||\n-            document.querySelectorAll(\"#titles > button\").item(searchState.currentTab);\n+            document.querySelectorAll(\"#search-tabs button\").item(searchState.currentTab);\n         searchState.focusedByTab[searchState.currentTab] = null;\n         if (target) {\n             target.focus();\n@@ -1645,9 +1645,9 @@ function initSearch(rawSearchIndex) {\n     function makeTabHeader(tabNb, text, nbElems) {\n         if (searchState.currentTab === tabNb) {\n             return \"<button class=\\\"selected\\\">\" + text +\n-                   \" <div class=\\\"count\\\">(\" + nbElems + \")</div></button>\";\n+                   \" <span class=\\\"count\\\">(\" + nbElems + \")</span></button>\";\n         }\n-        return \"<button>\" + text + \" <div class=\\\"count\\\">(\" + nbElems + \")</div></button>\";\n+        return \"<button>\" + text + \" <span class=\\\"count\\\">(\" + nbElems + \")</span></button>\";\n     }\n \n     /**\n@@ -1712,12 +1712,12 @@ function initSearch(rawSearchIndex) {\n         let output = `<h1 class=\"search-results-title\">Results${crates}</h1>`;\n         if (results.query.error !== null) {\n             output += `<h3>Query parser error: \"${results.query.error}\".</h3>`;\n-            output += \"<div id=\\\"titles\\\">\" +\n+            output += \"<div id=\\\"search-tabs\\\">\" +\n                 makeTabHeader(0, \"In Names\", ret_others[1]) +\n                 \"</div>\";\n             currentTab = 0;\n         } else if (results.query.foundElems <= 1 && results.query.returned.length === 0) {\n-            output += \"<div id=\\\"titles\\\">\" +\n+            output += \"<div id=\\\"search-tabs\\\">\" +\n                 makeTabHeader(0, \"In Names\", ret_others[1]) +\n                 makeTabHeader(1, \"In Parameters\", ret_in_args[1]) +\n                 makeTabHeader(2, \"In Return Types\", ret_returned[1]) +\n@@ -1727,7 +1727,7 @@ function initSearch(rawSearchIndex) {\n                 results.query.elems.length === 0 ? \"In Function Return Types\" :\n                 results.query.returned.length === 0 ? \"In Function Parameters\" :\n                 \"In Function Signatures\";\n-            output += \"<div id=\\\"titles\\\">\" +\n+            output += \"<div id=\\\"search-tabs\\\">\" +\n                 makeTabHeader(0, signatureTabTitle, ret_others[1]) +\n                 \"</div>\";\n             currentTab = 0;\n@@ -1747,7 +1747,7 @@ function initSearch(rawSearchIndex) {\n         search.appendChild(resultsElem);\n         // Reset focused elements.\n         searchState.showResults(search);\n-        const elems = document.getElementById(\"titles\").childNodes;\n+        const elems = document.getElementById(\"search-tabs\").childNodes;\n         searchState.focusedByTab = [];\n         let i = 0;\n         for (const elem of elems) {"}, {"sha": "108cf8abcb529d2bf238733f3487c4430a053766", "filename": "src/test/rustdoc-gui/basic-code.goml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fbasic-code.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fbasic-code.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fbasic-code.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -1,3 +1,4 @@\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n click: \".srclink\"\n+wait-for: \".src-line-numbers\"\n assert-count: (\".src-line-numbers\", 1)"}, {"sha": "59b1397970b54c82e4f7eebf95ab2d68fc4235c8", "filename": "src/test/rustdoc-gui/cursor.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fcursor.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fcursor.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcursor.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -12,8 +12,8 @@ write: (\".search-input\", \"Foo\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n-assert-css: (\"#titles > button\", {\"cursor\": \"pointer\"})\n+wait-for: \"#search-tabs\"\n+assert-css: (\"#search-tabs > button\", {\"cursor\": \"pointer\"})\n \n // mobile sidebar toggle button\n size: (500, 700)"}, {"sha": "e556da0c54ebafc55ac6da342a7d4d0bd3666afa", "filename": "src/test/rustdoc-gui/search-filter.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -5,7 +5,7 @@ write: (\".search-input\", \"test\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-text: (\"#results .externcrate\", \"test_docs\")\n \n wait-for: \"#crate-search\"\n@@ -17,7 +17,7 @@ press-key: \"ArrowDown\"\n press-key: \"ArrowDown\"\n press-key: \"Enter\"\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-document-property: ({\"URL\": \"&filter-crate=\"}, CONTAINS)\n // We check that there is no more \"test_docs\" appearing.\n assert-false: \"#results .externcrate\"\n@@ -41,7 +41,7 @@ press-key: \"ArrowUp\"\n press-key: \"ArrowUp\"\n press-key: \"Enter\"\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-property: (\"#crate-search\", {\"value\": \"all crates\"})\n \n // Checking that the URL parameter is taken into account for crate filtering."}, {"sha": "ed975664c66a505365d5477abf801927714b347e", "filename": "src/test/rustdoc-gui/search-keyboard.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-keyboard.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-keyboard.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-keyboard.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -5,7 +5,7 @@ write: (\".search-input\", \"Foo\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n \n // Now use the keyboard commands to switch to the third result.\n press-key: \"ArrowDown\""}, {"sha": "3c5fe9b74b74facba0b7685db5cc2e3dac87894e", "filename": "src/test/rustdoc-gui/search-result-color.goml", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -65,9 +65,9 @@ local-storage: {\n reload:\n \n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-css: (\n-    \"#titles > button > div.count\",\n+    \"#search-tabs > button > .count\",\n     {\"color\": \"rgb(136, 136, 136)\"},\n     ALL,\n )\n@@ -182,9 +182,9 @@ local-storage: {\n reload:\n \n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-css: (\n-    \"#titles > button > div.count\",\n+    \"#search-tabs > button > .count\",\n     {\"color\": \"rgb(136, 136, 136)\"},\n     ALL,\n )\n@@ -284,9 +284,9 @@ local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n reload:\n \n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-css: (\n-    \"#titles > button > div.count\",\n+    \"#search-tabs > button > .count\",\n     {\"color\": \"rgb(136, 136, 136)\"},\n     ALL,\n )\n@@ -396,7 +396,7 @@ define-function: (\n         // To be SURE that the search will be run.\n         (\"press-key\", 'Enter'),\n         // Waiting for the search results to appear...\n-        (\"wait-for\", \"#titles\"),\n+        (\"wait-for\", \"#search-tabs\"),\n         // Checking that the colors for the alias element are the ones expected.\n         (\"assert-css\", (\".result-name > .alias\", {\"color\": |alias|})),\n         (\"assert-css\", (\".result-name > .alias > .grey\", {\"color\": |grey|})),"}, {"sha": "9fa2108045d3fc120fbfe66b81879ef7aee7b1eb", "filename": "src/test/rustdoc-gui/search-result-description.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-description.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-description.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-description.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -1,5 +1,5 @@\n // This test is to ensure that the codeblocks are correctly rendered in the search results.\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=some_more_function\"\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-text: (\".search-results .desc code\", \"format!\")"}, {"sha": "994fd87c9966fb396f4f05d6fae6a307bfbbd78b", "filename": "src/test/rustdoc-gui/search-result-go-to-first.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-go-to-first.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -8,7 +8,7 @@ assert-text-false: (\".fqn\", \"Struct test_docs::Foo\")\n // We now check that we land on the search result page if \"go_to_first\" isn't set.\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=struct%3AFoo\"\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n assert-text-false: (\".fqn\", \"Struct test_docs::Foo\")\n // Ensure that the search results are displayed, not the \"normal\" content.\n assert-css: (\"#main-content\", {\"display\": \"none\"})"}, {"sha": "8c3577d9fd3d0de09880cf0e88ec4c2e8303982d", "filename": "src/test/rustdoc-gui/search-result-keyword.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-keyword.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-result-keyword.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-keyword.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -4,7 +4,7 @@ write: (\".search-input\", \"CookieMonster\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-tabs\"\n // Note: The two next assert commands could be merged as one but readability would be\n // less good.\n //"}, {"sha": "1433dc4d7e5e84613d70c3a567cd7b67371577ba", "filename": "src/test/rustdoc-gui/search-tab-change-title-fn-sig.goml", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ae6107070d4c734678f141f56b7aab6c16a41014/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml?ref=ae6107070d4c734678f141f56b7aab6c16a41014", "patch": "@@ -5,70 +5,70 @@ write: (\".search-input\", \"Foo\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n-assert-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n-assert-text: (\"#titles > button:nth-of-type(1)\", \"In Names\", STARTS_WITH)\n+wait-for: \"#search-tabs\"\n+assert-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+assert-text: (\"#search-tabs > button:nth-of-type(1)\", \"In Names\", STARTS_WITH)\n assert: \"input.search-input:focus\"\n // Use left-right keys\n press-key: \"ArrowDown\"\n assert: \"#results > .search-results.active > a:nth-of-type(1):focus\"\n press-key: \"ArrowRight\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(2)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(2)\", {\"class\": \"selected\"})\n press-key: \"ArrowRight\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(3)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(3)\", {\"class\": \"selected\"})\n press-key: \"ArrowRight\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n press-key: \"ArrowLeft\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(3)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(3)\", {\"class\": \"selected\"})\n \n // Now try search-by-return\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"-> String\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n-assert-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n-assert-text: (\"#titles > button:nth-of-type(1)\", \"In Function Return Types\", STARTS_WITH)\n+wait-for: \"#search-tabs\"\n+assert-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+assert-text: (\"#search-tabs > button:nth-of-type(1)\", \"In Function Return Types\", STARTS_WITH)\n assert: \"input.search-input:focus\"\n // Use left-right keys\n press-key: \"ArrowDown\"\n assert: \"#results > .search-results.active > a:nth-of-type(1):focus\"\n press-key: \"ArrowRight\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n press-key: \"ArrowRight\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n press-key: \"ArrowRight\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n press-key: \"ArrowLeft\"\n-wait-for-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+wait-for-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n \n // Try with a search-by-return with no results\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"-> Something\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n-assert-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n-assert-text: (\"#titles > button:nth-of-type(1)\", \"In Function Return Types\", STARTS_WITH)\n+wait-for: \"#search-tabs\"\n+assert-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+assert-text: (\"#search-tabs > button:nth-of-type(1)\", \"In Function Return Types\", STARTS_WITH)\n \n // Try with a search-by-parameter\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"usize pattern\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n-assert-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n-assert-text: (\"#titles > button:nth-of-type(1)\", \"In Function Parameters\", STARTS_WITH)\n+wait-for: \"#search-tabs\"\n+assert-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+assert-text: (\"#search-tabs > button:nth-of-type(1)\", \"In Function Parameters\", STARTS_WITH)\n \n // Try with a search-by-parameter-and-return\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"pattern -> str\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n // Waiting for the search results to appear...\n-wait-for: \"#titles\"\n-assert-attribute: (\"#titles > button:nth-of-type(1)\", {\"class\": \"selected\"})\n-assert-text: (\"#titles > button:nth-of-type(1)\", \"In Function Signatures\", STARTS_WITH)\n+wait-for: \"#search-tabs\"\n+assert-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n+assert-text: (\"#search-tabs > button:nth-of-type(1)\", \"In Function Signatures\", STARTS_WITH)"}]}