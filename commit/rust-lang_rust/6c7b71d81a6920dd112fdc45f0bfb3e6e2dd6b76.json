{"sha": "6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjN2I3MWQ4MWE2OTIwZGQxMTJmZGM0NWYwYmZiM2U2ZTJkZDZiNzY=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-12-02T11:59:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-02T11:59:37Z"}, "message": "Merge pull request #2255 from topecongiro/rustup-2017-12-01\n\nRustup to rustc 1.24.0-nightly (bb42071f6 2017-12-01)", "tree": {"sha": "c1ca0d1395074a6f5b2b36036d0413c17b6db8f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1ca0d1395074a6f5b2b36036d0413c17b6db8f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaIpWpCRBK7hj4Ov3rIwAAdHIIAHGw+4NSaGbq5XlV5L0+cjkY\n31qM2U6HWNZxy5kwZYMfGBJ6oXQqPSQfnm0m/f8RQ8schgTC5FbmNnDe734MCgyl\nHlQQxplEn6hky7zwcicSw08KnA4v+IDnktgf+jHMBbg/r6QpJYg5snMNAKv3QvZb\nL03Q3JICg2ebRlrQxkTN9Mspng4EpG9xuMwcul54H8DU4aMbyBn0shUT5jEQo045\n2yeb5iOWyZz1juiH9mZB1CX+bBoAT2YVv9TJBwW1SHEkxluQzNHcXmYO26SN0WEs\nb6myFHXukKLtKSKz6iBwB7xyXouLcTf2iGZ+l7iPFzF3Zqi2mg1n4VsOpw+tIGM=\n=BweE\n-----END PGP SIGNATURE-----\n", "payload": "tree c1ca0d1395074a6f5b2b36036d0413c17b6db8f3\nparent 6bb661b8c858d6a99421f0fb59a68069f0758ee3\nparent 4121507a48906753d79071f36a8821760e68527c\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1512215977 +0100\ncommitter GitHub <noreply@github.com> 1512215977 +0100\n\nMerge pull request #2255 from topecongiro/rustup-2017-12-01\n\nRustup to rustc 1.24.0-nightly (bb42071f6 2017-12-01)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76", "html_url": "https://github.com/rust-lang/rust/commit/6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bb661b8c858d6a99421f0fb59a68069f0758ee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bb661b8c858d6a99421f0fb59a68069f0758ee3", "html_url": "https://github.com/rust-lang/rust/commit/6bb661b8c858d6a99421f0fb59a68069f0758ee3"}, {"sha": "4121507a48906753d79071f36a8821760e68527c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4121507a48906753d79071f36a8821760e68527c", "html_url": "https://github.com/rust-lang/rust/commit/4121507a48906753d79071f36a8821760e68527c"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "637df96180a565261140538fb633bb580433e484", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=6c7b71d81a6920dd112fdc45f0bfb3e6e2dd6b76", "patch": "@@ -35,26 +35,27 @@ impl LintPass for UnsafeNameRemoval {\n \n impl EarlyLintPass for UnsafeNameRemoval {\n     fn check_item(&mut self, cx: &EarlyContext, item: &Item) {\n-        if let ItemKind::Use(ref item_use) = item.node {\n-            match item_use.node {\n-                ViewPath_::ViewPathSimple(ref name, ref path) => {\n-                    unsafe_to_safe_check(\n-                        path.segments\n-                            .last()\n-                            .expect(\"use paths cannot be empty\")\n-                            .identifier,\n-                        *name,\n-                        cx,\n-                        &item.span,\n-                    );\n-                },\n-                ViewPath_::ViewPathList(_, ref path_list_items) => for path_list_item in path_list_items.iter() {\n-                    let plid = path_list_item.node;\n-                    if let Some(rename) = plid.rename {\n-                        unsafe_to_safe_check(plid.name, rename, cx, &item.span);\n-                    };\n-                },\n-                ViewPath_::ViewPathGlob(_) => {},\n+        if let ItemKind::Use(ref use_tree) = item.node {\n+            check_use_tree(use_tree, cx, &item.span);\n+        }\n+    }\n+}\n+\n+fn check_use_tree(use_tree: &UseTree, cx: &EarlyContext, span: &Span) {\n+    match use_tree.kind {\n+        UseTreeKind::Simple(new_name) => {\n+            let old_name = use_tree\n+                .prefix\n+                .segments\n+                .last()\n+                .expect(\"use paths cannot be empty\")\n+                .identifier;\n+            unsafe_to_safe_check(old_name, new_name, cx, span);\n+        }\n+        UseTreeKind::Glob => {},\n+        UseTreeKind::Nested(ref nested_use_tree) => {\n+            for &(ref use_tree, _) in nested_use_tree {\n+                check_use_tree(use_tree, cx, span);\n             }\n         }\n     }"}]}