{"sha": "80732444203b86f7c2967d43bf4a067a1b6269cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNzMyNDQ0MjAzYjg2ZjdjMjk2N2Q0M2JmNGEwNjdhMWI2MjY5Y2I=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-10-07T07:43:50Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-10-07T07:43:50Z"}, "message": "improve detection of URL inside a string that is being rewritten. (#3809)", "tree": {"sha": "17912fa1dc6d405d051748336ddac49d9d7dbe21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17912fa1dc6d405d051748336ddac49d9d7dbe21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80732444203b86f7c2967d43bf4a067a1b6269cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80732444203b86f7c2967d43bf4a067a1b6269cb", "html_url": "https://github.com/rust-lang/rust/commit/80732444203b86f7c2967d43bf4a067a1b6269cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80732444203b86f7c2967d43bf4a067a1b6269cb/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "160c3aafc53912352988887ed764ed4c862a14b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/160c3aafc53912352988887ed764ed4c862a14b2", "html_url": "https://github.com/rust-lang/rust/commit/160c3aafc53912352988887ed764ed4c862a14b2"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "080c4f17788237879a01a27657b5d1bbe05562e8", "filename": "src/string.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/80732444203b86f7c2967d43bf4a067a1b6269cb/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80732444203b86f7c2967d43bf4a067a1b6269cb/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=80732444203b86f7c2967d43bf4a067a1b6269cb", "patch": "@@ -153,21 +153,22 @@ pub(crate) fn rewrite_string<'a>(\n     wrap_str(result, fmt.config.max_width(), fmt.shape)\n }\n \n-/// Returns the index to the end of the URL if the given string includes an\n-/// URL or alike. Otherwise, returns `None`;\n+/// Returns the index to the end of the URL if the split at index of the given string includes an\n+/// URL or alike. Otherwise, returns `None`.\n fn detect_url(s: &[&str], index: usize) -> Option<usize> {\n     let start = match s[..=index].iter().rposition(|g| is_whitespace(g)) {\n         Some(pos) => pos + 1,\n         None => 0,\n     };\n+    // 8 = minimum length for a string to contain a URL\n     if s.len() < start + 8 {\n         return None;\n     }\n-    let prefix = s[start..start + 8].concat();\n-    if prefix.starts_with(\"https://\")\n-        || prefix.starts_with(\"http://\")\n-        || prefix.starts_with(\"ftp://\")\n-        || prefix.starts_with(\"file://\")\n+    let split = s[start..].concat();\n+    if split.contains(\"https://\")\n+        || split.contains(\"http://\")\n+        || split.contains(\"ftp://\")\n+        || split.contains(\"file://\")\n     {\n         match s[index..].iter().position(|g| is_whitespace(g)) {\n             Some(pos) => Some(index + pos - 1),"}, {"sha": "bcdc131a05e9e22a58aacd54020d6c0273025653", "filename": "tests/source/issue-3787.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/80732444203b86f7c2967d43bf4a067a1b6269cb/tests%2Fsource%2Fissue-3787.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80732444203b86f7c2967d43bf4a067a1b6269cb/tests%2Fsource%2Fissue-3787.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3787.rs?ref=80732444203b86f7c2967d43bf4a067a1b6269cb", "patch": "@@ -0,0 +1,9 @@\n+// rustfmt-wrap_comments: true\n+\n+//! URLs in items\n+//! * [This is a link with a very loooooooooooooooooooooooooooooooooooooooooong URL.](https://example.com/This/is/a/link/with/a/very/loooooooooooooooooooooooooooooooooooooooooong/URL)\n+//! * This is a [link](https://example.com/This/is/a/link/with/a/very/loooooooooooooooooooooooooooooooooooooooooong/URL) with a very loooooooooooooooooooooooooooooooooooooooooong URL.\n+//! * there is no link here: In hac habitasse platea dictumst. Maecenas in ligula. Duis tincidunt odio sollicitudin quam. Nullam non mauris. Phasellus lacinia, velit sit amet bibendum euismod, leo diam interdum ligula, eu scelerisque sem purus in tellus.\n+fn main() {\n+    println!(\"Hello, world!\");\n+}"}, {"sha": "32cf7e3d7559e890d0e3f43052df60dd82641f74", "filename": "tests/target/issue-3787.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/80732444203b86f7c2967d43bf4a067a1b6269cb/tests%2Ftarget%2Fissue-3787.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80732444203b86f7c2967d43bf4a067a1b6269cb/tests%2Ftarget%2Fissue-3787.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3787.rs?ref=80732444203b86f7c2967d43bf4a067a1b6269cb", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-wrap_comments: true\n+\n+//! URLs in items\n+//! * [This is a link with a very loooooooooooooooooooooooooooooooooooooooooong URL.](https://example.com/This/is/a/link/with/a/very/loooooooooooooooooooooooooooooooooooooooooong/URL)\n+//! * This is a [link](https://example.com/This/is/a/link/with/a/very/loooooooooooooooooooooooooooooooooooooooooong/URL)\n+//!   with a very loooooooooooooooooooooooooooooooooooooooooong URL.\n+//! * there is no link here: In hac habitasse platea dictumst. Maecenas in\n+//!   ligula. Duis tincidunt odio sollicitudin quam. Nullam non mauris.\n+//!   Phasellus lacinia, velit sit amet bibendum euismod, leo diam interdum\n+//!   ligula, eu scelerisque sem purus in tellus.\n+fn main() {\n+    println!(\"Hello, world!\");\n+}"}]}