{"sha": "dac76020a5a33fa723d578043e422455e598620b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYzc2MDIwYTVhMzNmYTcyM2Q1NzgwNDNlNDIyNDU1ZTU5ODYyMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-09T04:00:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-09T04:00:21Z"}, "message": "Auto merge of #53960 - estebank:issue-51303, r=nagisa\n\nFix incorrect outer function type parameter message\n\nFix #51303.", "tree": {"sha": "a01edd1737815d8dbf4b27c8c4b818233baa7de4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a01edd1737815d8dbf4b27c8c4b818233baa7de4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac76020a5a33fa723d578043e422455e598620b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac76020a5a33fa723d578043e422455e598620b", "html_url": "https://github.com/rust-lang/rust/commit/dac76020a5a33fa723d578043e422455e598620b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac76020a5a33fa723d578043e422455e598620b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "004bc5a33cd44cd0896cae917a75488579126da5", "url": "https://api.github.com/repos/rust-lang/rust/commits/004bc5a33cd44cd0896cae917a75488579126da5", "html_url": "https://github.com/rust-lang/rust/commit/004bc5a33cd44cd0896cae917a75488579126da5"}, {"sha": "bebecf850ab2a8c9df298bd3ab3b12ca8ea83c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/bebecf850ab2a8c9df298bd3ab3b12ca8ea83c41", "html_url": "https://github.com/rust-lang/rust/commit/bebecf850ab2a8c9df298bd3ab3b12ca8ea83c41"}], "stats": {"total": 78, "additions": 66, "deletions": 12}, "files": [{"sha": "453e7421ff1b323a12d8b129bb1a0a3e96851473", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dac76020a5a33fa723d578043e422455e598620b/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac76020a5a33fa723d578043e422455e598620b/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=dac76020a5a33fa723d578043e422455e598620b", "patch": "@@ -198,12 +198,25 @@ fn resolve_struct_error<'sess, 'a>(resolver: &'sess Resolver,\n \n             let cm = resolver.session.source_map();\n             match outer_def {\n-                Def::SelfTy(_, maybe_impl_defid) => {\n-                    if let Some(impl_span) = maybe_impl_defid.map_or(None,\n-                            |def_id| resolver.definitions.opt_span(def_id)) {\n-                        err.span_label(reduce_impl_span_to_impl_keyword(cm, impl_span),\n-                                    \"`Self` type implicitly declared here, on the `impl`\");\n+                Def::SelfTy(maybe_trait_defid, maybe_impl_defid) => {\n+                    if let Some(impl_span) = maybe_impl_defid.and_then(|def_id| {\n+                        resolver.definitions.opt_span(def_id)\n+                    }) {\n+                        err.span_label(\n+                            reduce_impl_span_to_impl_keyword(cm, impl_span),\n+                            \"`Self` type implicitly declared here, by this `impl`\",\n+                        );\n+                    }\n+                    match (maybe_trait_defid, maybe_impl_defid) {\n+                        (Some(_), None) => {\n+                            err.span_label(span, \"can't use `Self` here\");\n+                        }\n+                        (_, Some(_)) => {\n+                            err.span_label(span, \"use a type here instead\");\n+                        }\n+                        (None, None) => bug!(\"`impl` without trait nor type?\"),\n                     }\n+                    return err;\n                 },\n                 Def::TyParam(typaram_defid) => {\n                     if let Some(typaram_span) = resolver.definitions.opt_span(typaram_defid) {"}, {"sha": "53eeb3e9c1337430a33c8af6b673b33386941f00", "filename": "src/test/ui/error-codes/E0401.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Ferror-codes%2FE0401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Ferror-codes%2FE0401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0401.stderr?ref=dac76020a5a33fa723d578043e422455e598620b", "patch": "@@ -24,12 +24,13 @@ error[E0401]: can't use type parameters from outer function\n   --> $DIR/E0401.rs:32:25\n    |\n LL | impl<T> Iterator for A<T> {\n-   | ---- `Self` type implicitly declared here, on the `impl`\n+   | ---- `Self` type implicitly declared here, by this `impl`\n ...\n LL |         fn helper(sel: &Self) -> u8 { //~ ERROR E0401\n-   |            ------       ^^^^ use of type variable from outer function\n-   |            |\n-   |            help: try using a local type parameter instead: `helper<Self>`\n+   |                         ^^^^\n+   |                         |\n+   |                         use of type variable from outer function\n+   |                         use a type here instead\n \n error: aborting due to 3 previous errors\n "}, {"sha": "0c369c6ab9717682cfeb6abd35670687ce13f33e", "filename": "src/test/ui/issues/issue-12796.stderr", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Fissues%2Fissue-12796.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Fissues%2Fissue-12796.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12796.stderr?ref=dac76020a5a33fa723d578043e422455e598620b", "patch": "@@ -2,9 +2,10 @@ error[E0401]: can't use type parameters from outer function\n   --> $DIR/issue-12796.rs:13:22\n    |\n LL |         fn inner(_: &Self) {\n-   |            -----     ^^^^ use of type variable from outer function\n-   |            |\n-   |            help: try using a local type parameter instead: `inner<Self>`\n+   |                      ^^^^\n+   |                      |\n+   |                      use of type variable from outer function\n+   |                      can't use `Self` here\n \n error: aborting due to previous error\n "}, {"sha": "fea6958d7eb0923e3e2cc9c634091f34f8fda6c6", "filename": "src/test/ui/use-self-in-inner-fn.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Fuse-self-in-inner-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Fuse-self-in-inner-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse-self-in-inner-fn.rs?ref=dac76020a5a33fa723d578043e422455e598620b", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct A;\n+\n+impl A {\n+//~^ NOTE `Self` type implicitly declared here, by this `impl`\n+    fn banana(&mut self) {\n+        fn peach(this: &Self) {\n+        //~^ ERROR can't use type parameters from outer function\n+        //~| NOTE use of type variable from outer function\n+        //~| NOTE use a type here instead\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "cef030aec460c6bc3369dc935c719f6c4aa741b9", "filename": "src/test/ui/use-self-in-inner-fn.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Fuse-self-in-inner-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dac76020a5a33fa723d578043e422455e598620b/src%2Ftest%2Fui%2Fuse-self-in-inner-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse-self-in-inner-fn.stderr?ref=dac76020a5a33fa723d578043e422455e598620b", "patch": "@@ -0,0 +1,15 @@\n+error[E0401]: can't use type parameters from outer function\n+  --> $DIR/use-self-in-inner-fn.rs:16:25\n+   |\n+LL | impl A {\n+   | ---- `Self` type implicitly declared here, by this `impl`\n+...\n+LL |         fn peach(this: &Self) {\n+   |                         ^^^^\n+   |                         |\n+   |                         use of type variable from outer function\n+   |                         use a type here instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0401`."}]}