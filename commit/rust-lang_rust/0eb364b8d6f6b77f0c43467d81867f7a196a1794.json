{"sha": "0eb364b8d6f6b77f0c43467d81867f7a196a1794", "node_id": "C_kwDOAAsO6NoAKDBlYjM2NGI4ZDZmNmI3N2YwYzQzNDY3ZDgxODY3ZjdhMTk2YTE3OTQ", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-05-17T17:47:23Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-05-17T21:53:58Z"}, "message": "Exclude inherent projections from some alias ty matches", "tree": {"sha": "4bdf29bfe7186b4842df4677d327600301287650", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bdf29bfe7186b4842df4677d327600301287650"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eb364b8d6f6b77f0c43467d81867f7a196a1794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb364b8d6f6b77f0c43467d81867f7a196a1794", "html_url": "https://github.com/rust-lang/rust/commit/0eb364b8d6f6b77f0c43467d81867f7a196a1794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eb364b8d6f6b77f0c43467d81867f7a196a1794/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "506b50ee39229772305c9e279f6609cf4546d569", "url": "https://api.github.com/repos/rust-lang/rust/commits/506b50ee39229772305c9e279f6609cf4546d569", "html_url": "https://github.com/rust-lang/rust/commit/506b50ee39229772305c9e279f6609cf4546d569"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "b65e6c7261a57b3ed339abe49f97f8854b649c60", "filename": "tests/ui/issue-111399.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0eb364b8d6f6b77f0c43467d81867f7a196a1794/tests%2Fui%2Fissue-111399.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb364b8d6f6b77f0c43467d81867f7a196a1794/tests%2Fui%2Fissue-111399.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue-111399.rs?ref=0eb364b8d6f6b77f0c43467d81867f7a196a1794", "patch": "@@ -0,0 +1,13 @@\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+// Check that rustc doesn't crash on the trait bound `Self::Ty: std::marker::Freeze`.\n+\n+pub struct Struct;\n+\n+impl Struct {\n+    pub type Ty = usize;\n+    pub const CT: Self::Ty = 42;\n+}\n+\n+fn main() {}"}]}