{"sha": "e42c97919cd5a7fe856865cfd1034dfe14206ceb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MmM5NzkxOWNkNWE3ZmU4NTY4NjVjZmQxMDM0ZGZlMTQyMDZjZWI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-08-15T11:29:23Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-10-06T10:19:32Z"}, "message": "Don't require lifetime super-bounds on traits apply to trait objects of that trait", "tree": {"sha": "2480b6702640fd050134e7969534c164a4680bc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2480b6702640fd050134e7969534c164a4680bc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e42c97919cd5a7fe856865cfd1034dfe14206ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e42c97919cd5a7fe856865cfd1034dfe14206ceb", "html_url": "https://github.com/rust-lang/rust/commit/e42c97919cd5a7fe856865cfd1034dfe14206ceb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e42c97919cd5a7fe856865cfd1034dfe14206ceb/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e674cf0200347c5e58f8a3867657187b12e7b496", "url": "https://api.github.com/repos/rust-lang/rust/commits/e674cf0200347c5e58f8a3867657187b12e7b496", "html_url": "https://github.com/rust-lang/rust/commit/e674cf0200347c5e58f8a3867657187b12e7b496"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "7f9525c842a0c611ddc647902f46c4387849563c", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e42c97919cd5a7fe856865cfd1034dfe14206ceb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e42c97919cd5a7fe856865cfd1034dfe14206ceb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=e42c97919cd5a7fe856865cfd1034dfe14206ceb", "patch": "@@ -439,26 +439,29 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n \n         let upcast_trait_ref = upcast_trait_ref.unwrap();\n \n-        // Check supertraits hold\n+        // Check supertraits hold. This is so that their associated type bounds\n+        // will be checked in the code below.\n         for super_trait in tcx\n             .super_predicates_of(trait_predicate.def_id())\n             .instantiate(tcx, trait_predicate.trait_ref.substs)\n             .predicates\n             .into_iter()\n         {\n-            let normalized_super_trait = normalize_with_depth_to(\n-                self,\n-                obligation.param_env,\n-                obligation.cause.clone(),\n-                obligation.recursion_depth + 1,\n-                &super_trait,\n-                &mut nested,\n-            );\n-            nested.push(Obligation::new(\n-                obligation.cause.clone(),\n-                obligation.param_env.clone(),\n-                normalized_super_trait,\n-            ));\n+            if let ty::PredicateAtom::Trait(..) = super_trait.skip_binders() {\n+                let normalized_super_trait = normalize_with_depth_to(\n+                    self,\n+                    obligation.param_env,\n+                    obligation.cause.clone(),\n+                    obligation.recursion_depth + 1,\n+                    &super_trait,\n+                    &mut nested,\n+                );\n+                nested.push(Obligation::new(\n+                    obligation.cause.clone(),\n+                    obligation.param_env.clone(),\n+                    normalized_super_trait,\n+                ));\n+            }\n         }\n \n         let assoc_types: Vec<_> = tcx"}, {"sha": "9d834727a4a1bcf45754ec6db1ccef66ba9f78fc", "filename": "src/test/ui/traits/trait-object-supertrait-lifetime-bound.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e42c97919cd5a7fe856865cfd1034dfe14206ceb/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-supertrait-lifetime-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e42c97919cd5a7fe856865cfd1034dfe14206ceb/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-supertrait-lifetime-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-supertrait-lifetime-bound.rs?ref=e42c97919cd5a7fe856865cfd1034dfe14206ceb", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+\n+use std::any::Any;\n+\n+trait A<T>: Any {\n+    fn m(&self) {}\n+}\n+\n+impl<S, T: 'static> A<S> for T {}\n+\n+fn call_obj<'a>() {\n+    let obj: &dyn A<&'a ()> = &();\n+    obj.m();\n+}\n+\n+fn main() {}"}]}