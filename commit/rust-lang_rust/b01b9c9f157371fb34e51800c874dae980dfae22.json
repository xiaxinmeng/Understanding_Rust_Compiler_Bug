{"sha": "b01b9c9f157371fb34e51800c874dae980dfae22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMWI5YzlmMTU3MzcxZmIzNGU1MTgwMGM4NzRkYWU5ODBkZmFlMjI=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-01-05T00:50:57Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-01-05T01:00:13Z"}, "message": "Condition EH ABI on target_arch, not target_os.\nMore precise unwinder private data size specification.", "tree": {"sha": "78f4aa7c301aa6dcae9e10167149f0abd5f1f9d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78f4aa7c301aa6dcae9e10167149f0abd5f1f9d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b01b9c9f157371fb34e51800c874dae980dfae22", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b01b9c9f157371fb34e51800c874dae980dfae22", "html_url": "https://github.com/rust-lang/rust/commit/b01b9c9f157371fb34e51800c874dae980dfae22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b01b9c9f157371fb34e51800c874dae980dfae22/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19cff913f369343182b83f9d05c6c7418890fd40", "url": "https://api.github.com/repos/rust-lang/rust/commits/19cff913f369343182b83f9d05c6c7418890fd40", "html_url": "https://github.com/rust-lang/rust/commit/19cff913f369343182b83f9d05c6c7418890fd40"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "217782195e6cfe7c9e7e02b9ef59ba99e73a5885", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b01b9c9f157371fb34e51800c874dae980dfae22/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01b9c9f157371fb34e51800c874dae980dfae22/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=b01b9c9f157371fb34e51800c874dae980dfae22", "patch": "@@ -77,7 +77,7 @@ mod libunwind {\n \n     use libc::{uintptr_t, uint64_t};\n \n-    #[cfg(not(target_os = \"android\"))]\n+    #[cfg(not(target_arch = \"arm\"))]\n     #[repr(C)]\n     pub enum _Unwind_Action\n     {\n@@ -88,7 +88,7 @@ mod libunwind {\n         _UA_END_OF_STACK = 16,\n     }\n \n-    #[cfg(target_os = \"android\")]\n+    #[cfg(target_arch = \"arm\")]\n     #[repr(C)]\n     pub enum _Unwind_State\n     {\n@@ -118,10 +118,16 @@ mod libunwind {\n \n     pub type _Unwind_Word = uintptr_t;\n \n+    #[cfg(not(target_arch = \"arm\"))]\n+    pub static unwinder_private_data_size: int = 2;\n+\n+    #[cfg(target_arch = \"arm\")]\n+    pub static unwinder_private_data_size: int = 20;\n+\n     pub struct _Unwind_Exception {\n         exception_class: _Unwind_Exception_Class,\n         exception_cleanup: _Unwind_Exception_Cleanup_Fn,\n-        private: [_Unwind_Word, ..20],\n+        private: [_Unwind_Word, ..unwinder_private_data_size],\n     }\n \n     pub enum _Unwind_Context {}\n@@ -202,7 +208,7 @@ impl Unwinder {\n                 let exception = ~uw::_Unwind_Exception {\n                     exception_class: rust_exception_class(),\n                     exception_cleanup: exception_cleanup,\n-                    private: [0, ..20],\n+                    private: [0, ..uw::unwinder_private_data_size],\n                 };\n                 let error = uw::_Unwind_RaiseException(cast::transmute(exception));\n                 rtabort!(\"Could not unwind stack, error = {}\", error as int)\n@@ -253,7 +259,7 @@ fn rust_exception_class() -> uw::_Unwind_Exception_Class {\n //   This is achieved by overriding the return value in search phase to always\n //   say \"catch!\".\n \n-#[cfg(not(target_os = \"android\"))]\n+#[cfg(not(target_arch = \"arm\"))]\n pub mod eabi {\n     use uw = super::libunwind;\n     use libc::c_int;\n@@ -310,7 +316,7 @@ pub mod eabi {\n \n // ARM EHABI uses a slightly different personality routine signature,\n // but otherwise works the same.\n-#[cfg(target_os = \"android\")]\n+#[cfg(target_arch = \"arm\")]\n pub mod eabi {\n     use uw = super::libunwind;\n     use libc::c_int;"}]}