{"sha": "7795b155e04dcf245f240f4486485b1099fb4a99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OTViMTU1ZTA0ZGNmMjQ1ZjI0MGY0NDg2NDg1YjEwOTlmYjRhOTk=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-04T14:57:40Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-09T19:44:55Z"}, "message": "Inline raw method", "tree": {"sha": "488cbc22afccd30c5cb9373c4dd85920d1af168a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/488cbc22afccd30c5cb9373c4dd85920d1af168a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7795b155e04dcf245f240f4486485b1099fb4a99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7795b155e04dcf245f240f4486485b1099fb4a99", "html_url": "https://github.com/rust-lang/rust/commit/7795b155e04dcf245f240f4486485b1099fb4a99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7795b155e04dcf245f240f4486485b1099fb4a99/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20efb19043335587e27a1c11bfeb596611e4bef7", "url": "https://api.github.com/repos/rust-lang/rust/commits/20efb19043335587e27a1c11bfeb596611e4bef7", "html_url": "https://github.com/rust-lang/rust/commit/20efb19043335587e27a1c11bfeb596611e4bef7"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "d5ce389ed5f7f0203e5521694eb2a0c236fc6b23", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7795b155e04dcf245f240f4486485b1099fb4a99/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7795b155e04dcf245f240f4486485b1099fb4a99/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=7795b155e04dcf245f240f4486485b1099fb4a99", "patch": "@@ -302,22 +302,19 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    fn raw(&self) -> usize {\n-        self.style.map(|raw| raw + 1).unwrap_or(0)\n-    }\n-\n     fn to_span_index(&self, pos: usize) -> SpanIndex {\n         let mut pos = pos;\n+        let raw = self.style.map(|raw| raw + 1).unwrap_or(0);\n         for skip in &self.skips {\n             if pos > *skip {\n                 pos += 1;\n-            } else if pos == *skip && self.raw() == 0 {\n+            } else if pos == *skip && raw == 0 {\n                 pos += 1;\n             } else {\n                 break;\n             }\n         }\n-        SpanIndex(self.raw() + pos + 1)\n+        SpanIndex(raw + pos + 1)\n     }\n \n     /// Forces consumption of the specified character. If the character is not"}]}