{"sha": "68cb17097ae92dd50ff076d4b34d955836c4977c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4Y2IxNzA5N2FlOTJkZDUwZmYwNzZkNGIzNGQ5NTU4MzZjNDk3N2M=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2015-01-06T15:42:26Z"}, "committer": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2015-01-06T18:07:49Z"}, "message": "std: prevent `CreateProcess()` race on Windows\n\nBelieve or not, `CreateProcess()` is racy if several threads create\nchild processes: [0], [1], [2].\n\nThis caused some tests show crash dialogs during\n`make check-stage#-rpass`.\n\nMore explanation:\n\nOn Windows, `SetErrorMode()` controls display of error dialogs: it\naccepts new error mode and returns old error mode.\nThe error mode is process-global and automatically inherited to child\nprocess when created.\n\nMSYS2 bash shell internally sets it to not show error dialogs, therefore\n`make check-stage#-rpass` should not show them either.\n\nHowever, [1] says that `CreateProcess()` internally invokes\n`SetErrorMode()` twice: at first it sets mode `0x8001` and saves\noriginal mode, and at second it restores original mode.\nSo if two threads simultaneously call `CreateProcess()`, the first\nthread sets error mode to `0x8001` then the second thread recognizes\nthat current error mode is `0x8001`. Therefore, The second thread will\ncreate process with wrong error mode.\n\nThis really occurs inside `compiletest`: it creates several processes on\neach thread, so some `run-pass` tests are invoked with wrong error mode\ntherefore show crash dialog.\n\nThis commit adds `StaticMutex` for `CreateProcess()` call. This seems\nto fix the \"dialog annoyance\" issue.\n\n[0]: http://support.microsoft.com/kb/315939\n[1]: https://code.google.com/p/nativeclient/issues/detail?id=2968\n[2]: https://ghc.haskell.org/trac/ghc/ticket/2650", "tree": {"sha": "0ba7d671462242289af48b73c0fee971855a7134", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ba7d671462242289af48b73c0fee971855a7134"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68cb17097ae92dd50ff076d4b34d955836c4977c", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68cb17097ae92dd50ff076d4b34d955836c4977c", "html_url": "https://github.com/rust-lang/rust/commit/68cb17097ae92dd50ff076d4b34d955836c4977c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68cb17097ae92dd50ff076d4b34d955836c4977c/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8efd9901b628d687d11a4d0ccc153553b38ada49", "url": "https://api.github.com/repos/rust-lang/rust/commits/8efd9901b628d687d11a4d0ccc153553b38ada49", "html_url": "https://github.com/rust-lang/rust/commit/8efd9901b628d687d11a4d0ccc153553b38ada49"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "8e1f169b5cdcc05864d79a05fb26e6198fda9a41", "filename": "src/libstd/sys/windows/process.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/68cb17097ae92dd50ff076d4b34d955836c4977c/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68cb17097ae92dd50ff076d4b34d955836c4977c/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=68cb17097ae92dd50ff076d4b34d955836c4977c", "patch": "@@ -25,13 +25,19 @@ use path::BytesContainer;\n use ptr;\n use str;\n use sys::fs::FileDesc;\n+use sync::{StaticMutex, MUTEX_INIT};\n+\n use sys::fs;\n use sys::{self, retry, c, wouldblock, set_nonblocking, ms_to_timeval, timer};\n use sys_common::helper_thread::Helper;\n use sys_common::{AsInner, mkerr_libc, timeout};\n \n pub use sys_common::ProcessConfig;\n \n+// `CreateProcess` is racy!\n+// http://support.microsoft.com/kb/315939\n+static CREATE_PROCESS_LOCK: StaticMutex = MUTEX_INIT;\n+\n /// A value representing a child process.\n ///\n /// The lifetime of this value is linked to the lifetime of the actual\n@@ -224,6 +230,7 @@ impl Process {\n                 with_dirp(cfg.cwd(), |dirp| {\n                     let mut cmd_str: Vec<u16> = cmd_str.utf16_units().collect();\n                     cmd_str.push(0);\n+                    let _lock = CREATE_PROCESS_LOCK.lock().unwrap();\n                     let created = CreateProcessW(ptr::null(),\n                                                  cmd_str.as_mut_ptr(),\n                                                  ptr::null_mut(),"}]}