{"sha": "cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNzFkODNiZDIyYTlhYWM0NzU3ZjliYzE0NGI0MmYzYmJmZjZhYWU=", "commit": {"author": {"name": "Chris Pardy", "email": "chrispardy36@gmail.com", "date": "2021-01-26T22:39:30Z"}, "committer": {"name": "Chris Pardy", "email": "chrispardy36@gmail.com", "date": "2021-01-26T22:39:30Z"}, "message": "add tests", "tree": {"sha": "352cc4c5d300707edd7f203c3d10728dce02252f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/352cc4c5d300707edd7f203c3d10728dce02252f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "html_url": "https://github.com/rust-lang/rust/commit/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/comments", "author": {"login": "ChrisPardy", "id": 25291724, "node_id": "MDQ6VXNlcjI1MjkxNzI0", "avatar_url": "https://avatars.githubusercontent.com/u/25291724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisPardy", "html_url": "https://github.com/ChrisPardy", "followers_url": "https://api.github.com/users/ChrisPardy/followers", "following_url": "https://api.github.com/users/ChrisPardy/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisPardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisPardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisPardy/subscriptions", "organizations_url": "https://api.github.com/users/ChrisPardy/orgs", "repos_url": "https://api.github.com/users/ChrisPardy/repos", "events_url": "https://api.github.com/users/ChrisPardy/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisPardy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisPardy", "id": 25291724, "node_id": "MDQ6VXNlcjI1MjkxNzI0", "avatar_url": "https://avatars.githubusercontent.com/u/25291724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisPardy", "html_url": "https://github.com/ChrisPardy", "followers_url": "https://api.github.com/users/ChrisPardy/followers", "following_url": "https://api.github.com/users/ChrisPardy/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisPardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisPardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisPardy/subscriptions", "organizations_url": "https://api.github.com/users/ChrisPardy/orgs", "repos_url": "https://api.github.com/users/ChrisPardy/repos", "events_url": "https://api.github.com/users/ChrisPardy/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisPardy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8115b8f67996aae101faadadefa7bc282ec2f21", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8115b8f67996aae101faadadefa7bc282ec2f21", "html_url": "https://github.com/rust-lang/rust/commit/b8115b8f67996aae101faadadefa7bc282ec2f21"}], "stats": {"total": 195, "additions": 195, "deletions": 0}, "files": [{"sha": "817ade899e2a0bc290e2f76fa65e368a85cc3479", "filename": "src/test/ui/closures/2229_closure_analysis/capture-analysis-3.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-3.rs?ref=cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "patch": "@@ -0,0 +1,35 @@\n+#![feature(capture_disjoint_fields)]\n+//~^ WARNING: the feature `capture_disjoint_fields` is incomplete\n+//~| NOTE: `#[warn(incomplete_features)]` on by default\n+//~| NOTE: see issue #53488 <https://github.com/rust-lang/rust/issues/53488>\n+#![feature(rustc_attrs)]\n+\n+#[derive(Debug)]\n+struct Child {\n+    c: String,\n+    d: String,\n+}\n+\n+#[derive(Debug)]\n+struct Parent {\n+    b: Child,\n+}\n+\n+fn main() {\n+    let mut a = Parent { b: Child {c: String::new(), d: String::new()} };\n+\n+    let c = #[rustc_capture_analysis]\n+    //~^ ERROR: attributes on expressions are experimental\n+    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n+    || {\n+    //~^ First Pass analysis includes:\n+    //~| Min Capture analysis includes:\n+        let _x = a.b.c;\n+        //~^ NOTE: Capturing a[(0, 0),(0, 0)] -> ByValue\n+        //~| NOTE: a[(0, 0)] captured as ByValue here\n+        println!(\"{:?}\", a.b);\n+        //~^ NOTE: Capturing a[(0, 0)] -> ImmBorrow\n+        //~| NOTE: Min Capture a[(0, 0)] -> ByValue\n+        //~| NOTE: a[(0, 0)] used here\n+    };\n+}"}, {"sha": "263e9ca56ebf6e840fe97cf4d83d29d1490c2348", "filename": "src/test/ui/closures/2229_closure_analysis/capture-analysis-3.stderr", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-3.stderr?ref=cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "patch": "@@ -0,0 +1,65 @@\n+error[E0658]: attributes on expressions are experimental\n+  --> $DIR/capture-analysis-3.rs:21:13\n+   |\n+LL |     let c = #[rustc_capture_analysis]\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n+\n+warning: the feature `capture_disjoint_fields` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/capture-analysis-3.rs:1:12\n+   |\n+LL | #![feature(capture_disjoint_fields)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #53488 <https://github.com/rust-lang/rust/issues/53488> for more information\n+\n+error: First Pass analysis includes:\n+  --> $DIR/capture-analysis-3.rs:24:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         let _x = a.b.c;\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing a[(0, 0),(0, 0)] -> ByValue\n+  --> $DIR/capture-analysis-3.rs:27:18\n+   |\n+LL |         let _x = a.b.c;\n+   |                  ^^^^^\n+note: Capturing a[(0, 0)] -> ImmBorrow\n+  --> $DIR/capture-analysis-3.rs:30:26\n+   |\n+LL |         println!(\"{:?}\", a.b);\n+   |                          ^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/capture-analysis-3.rs:24:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         let _x = a.b.c;\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture a[(0, 0)] -> ByValue\n+  --> $DIR/capture-analysis-3.rs:27:18\n+   |\n+LL |         let _x = a.b.c;\n+   |                  ^^^^^ a[(0, 0)] captured as ByValue here\n+...\n+LL |         println!(\"{:?}\", a.b);\n+   |                          ^^^ a[(0, 0)] used here\n+\n+error: aborting due to 3 previous errors; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "e8401299b30ada6f0f4b0fbdaca5694780f5430d", "filename": "src/test/ui/closures/2229_closure_analysis/capture-analysis-4.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-4.rs?ref=cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "patch": "@@ -0,0 +1,33 @@\n+#![feature(capture_disjoint_fields)]\n+//~^ WARNING: the feature `capture_disjoint_fields` is incomplete\n+//~| NOTE: `#[warn(incomplete_features)]` on by default\n+//~| NOTE: see issue #53488 <https://github.com/rust-lang/rust/issues/53488>\n+#![feature(rustc_attrs)]\n+\n+#[derive(Debug)]\n+struct Child {\n+    c: String,\n+    d: String,\n+}\n+\n+#[derive(Debug)]\n+struct Parent {\n+    b: Child,\n+}\n+\n+fn main() {\n+    let mut a = Parent { b: Child {c: String::new(), d: String::new()} };\n+\n+    let c = #[rustc_capture_analysis]\n+    //~^ ERROR: attributes on expressions are experimental\n+    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n+    || {\n+    //~^ First Pass analysis includes:\n+    //~| Min Capture analysis includes:\n+        let _x = a.b;\n+        //~^ NOTE: Capturing a[(0, 0)] -> ByValue\n+        //~| NOTE: Min Capture a[(0, 0)] -> ByValue\n+        println!(\"{:?}\", a.b.c);\n+        //~^ NOTE: Capturing a[(0, 0),(0, 0)] -> ImmBorrow\n+    };\n+}"}, {"sha": "f4605c1d51b760225a032691c9bdc1e0cc0a1146", "filename": "src/test/ui/closures/2229_closure_analysis/capture-analysis-4.stderr", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf71d83bd22a9aac4757f9bc144b42f3bbff6aae/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fcapture-analysis-4.stderr?ref=cf71d83bd22a9aac4757f9bc144b42f3bbff6aae", "patch": "@@ -0,0 +1,62 @@\n+error[E0658]: attributes on expressions are experimental\n+  --> $DIR/capture-analysis-4.rs:21:13\n+   |\n+LL |     let c = #[rustc_capture_analysis]\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n+\n+warning: the feature `capture_disjoint_fields` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/capture-analysis-4.rs:1:12\n+   |\n+LL | #![feature(capture_disjoint_fields)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #53488 <https://github.com/rust-lang/rust/issues/53488> for more information\n+\n+error: First Pass analysis includes:\n+  --> $DIR/capture-analysis-4.rs:24:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         let _x = a.b;\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing a[(0, 0)] -> ByValue\n+  --> $DIR/capture-analysis-4.rs:27:18\n+   |\n+LL |         let _x = a.b;\n+   |                  ^^^\n+note: Capturing a[(0, 0),(0, 0)] -> ImmBorrow\n+  --> $DIR/capture-analysis-4.rs:30:26\n+   |\n+LL |         println!(\"{:?}\", a.b.c);\n+   |                          ^^^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/capture-analysis-4.rs:24:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         let _x = a.b;\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture a[(0, 0)] -> ByValue\n+  --> $DIR/capture-analysis-4.rs:27:18\n+   |\n+LL |         let _x = a.b;\n+   |                  ^^^\n+\n+error: aborting due to 3 previous errors; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0658`."}]}