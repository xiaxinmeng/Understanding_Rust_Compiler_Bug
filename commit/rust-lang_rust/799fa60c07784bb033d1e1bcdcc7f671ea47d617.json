{"sha": "799fa60c07784bb033d1e1bcdcc7f671ea47d617", "node_id": "C_kwDOAAsO6NoAKDc5OWZhNjBjMDc3ODRiYjAzM2QxZTFiY2RjYzdmNjcxZWE0N2Q2MTc", "commit": {"author": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2022-12-24T08:19:20Z"}, "committer": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2023-01-02T14:31:05Z"}, "message": "llvm-wrapper: adapt for LLVM API change\n\nNo functional changes intended.\n\nThe LLVM commit https://github.com/llvm/llvm-project/commit/e6b02214c68df2c9f826e02310c9352ac652e456 added `TargetExtTyID` to the `TypeID` enum. This adapts `RustWrapper` accordingly.", "tree": {"sha": "74e85f3f082ef1581eccfaa501d3d87b4da2b2f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74e85f3f082ef1581eccfaa501d3d87b4da2b2f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/799fa60c07784bb033d1e1bcdcc7f671ea47d617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/799fa60c07784bb033d1e1bcdcc7f671ea47d617", "html_url": "https://github.com/rust-lang/rust/commit/799fa60c07784bb033d1e1bcdcc7f671ea47d617", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/799fa60c07784bb033d1e1bcdcc7f671ea47d617/comments", "author": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f4d0586ad20c66a16d547581ca379beafece93a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f4d0586ad20c66a16d547581ca379beafece93a", "html_url": "https://github.com/rust-lang/rust/commit/4f4d0586ad20c66a16d547581ca379beafece93a"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "a26da9d548fb60f7b05b7ce1b36914025f3bfe08", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/799fa60c07784bb033d1e1bcdcc7f671ea47d617/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/799fa60c07784bb033d1e1bcdcc7f671ea47d617/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=799fa60c07784bb033d1e1bcdcc7f671ea47d617", "patch": "@@ -1349,18 +1349,16 @@ extern \"C\" LLVMTypeKind LLVMRustGetTypeKind(LLVMTypeRef Ty) {\n     return LLVMBFloatTypeKind;\n   case Type::X86_AMXTyID:\n     return LLVMX86_AMXTypeKind;\n-#if LLVM_VERSION_GE(15, 0) && LLVM_VERSION_LT(16, 0)\n-  case Type::DXILPointerTyID:\n-    report_fatal_error(\"Rust does not support DirectX typed pointers.\");\n-    break;\n-#endif\n-#if LLVM_VERSION_GE(16, 0)\n-  case Type::TypedPointerTyID:\n-    report_fatal_error(\"Rust does not support typed pointers.\");\n-    break;\n-#endif\n+  default:\n+    {\n+      std::string error;\n+      llvm::raw_string_ostream stream(error);\n+      stream << \"Rust does not support the TypeID: \" << unwrap(Ty)->getTypeID()\n+             << \" for the type: \" << *unwrap(Ty);\n+      stream.flush();\n+      report_fatal_error(error.c_str());\n+    }\n   }\n-  report_fatal_error(\"Unhandled TypeID.\");\n }\n \n DEFINE_SIMPLE_CONVERSION_FUNCTIONS(SMDiagnostic, LLVMSMDiagnosticRef)"}]}