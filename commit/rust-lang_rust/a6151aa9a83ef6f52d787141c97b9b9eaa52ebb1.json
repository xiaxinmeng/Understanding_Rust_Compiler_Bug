{"sha": "a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MTUxYWE5YTgzZWY2ZjUyZDc4NzE0MWM5N2I5YjllYWE1MmViYjE=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-29T17:31:20Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-29T17:33:00Z"}, "message": "Formatting tweaks.", "tree": {"sha": "66fc5db1ee0383192e5248ed6bf5ada5cd0561ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66fc5db1ee0383192e5248ed6bf5ada5cd0561ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1", "html_url": "https://github.com/rust-lang/rust/commit/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdf2daee1e6b1e9093b31c3ce1f94af73ef6b36b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdf2daee1e6b1e9093b31c3ce1f94af73ef6b36b", "html_url": "https://github.com/rust-lang/rust/commit/bdf2daee1e6b1e9093b31c3ce1f94af73ef6b36b"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "a3a2fbec25b2215a28232b8a0744920a09bff39b", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1", "patch": "@@ -2382,30 +2382,27 @@ fn check_expr(fcx: &@fn_ctxt, expr: &@ast::expr) {\n \n             // Inner methods.\n \n-            // Typecheck 'inner_obj'.  If it exists, it had better have\n-            // object type.\n+            // Typecheck 'inner_obj'.  If it exists, it had better have object\n+            // type.\n             let inner_obj_methods: ty::method[] = ~[];\n             let inner_obj_ty: ty::t = ty::mk_nil(fcx.ccx.tcx);\n             let inner_obj_sty: option::t[ty::sty] = none;\n             alt ao.inner_obj {\n               none. { }\n               some(e) {\n-                // If there's a inner_obj, we push it onto the\n-                // obj_infos stack so that self-calls can be checked\n-                // within its context later.\n+                // If there's a inner_obj, we push it onto the obj_infos stack\n+                // so that self-calls can be checked within its context later.\n                 check_expr(fcx, e);\n                 inner_obj_ty = expr_ty(fcx.ccx.tcx, e);\n                 inner_obj_sty = some(structure_of(fcx, e.span, inner_obj_ty));\n \n-\n                 alt inner_obj_sty {\n                   none. { }\n                   some(sty) {\n                     alt sty {\n                       ty::ty_obj(ms) { inner_obj_methods = ms; }\n                       _ {\n-                        // The user is trying to extend a\n-                        // non-object.\n+                        // The user is trying to extend a non-object.\n                         fcx.ccx.tcx.sess.span_fatal\n                             (e.span, syntax::print::pprust::expr_to_str(e) +\n                              \" does not have object type\");"}]}