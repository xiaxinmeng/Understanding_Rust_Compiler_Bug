{"sha": "687e40a959417c9713f04cc88a7ab73672778165", "node_id": "C_kwDOAAsO6NoAKDY4N2U0MGE5NTk0MTdjOTcxM2YwNGNjODhhN2FiNzM2NzI3NzgxNjU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-06T23:59:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-06T23:59:23Z"}, "message": "Rollup merge of #95709 - nnethercote:improve-terse-test-output, r=Dylan-DPC\n\nImprove terse test output.\n\nThe current terse output gives 112 chars per line, which causes\nwraparound for people using 100 char wide terminals, which is very\ncommon.\n\nThis commit changes it to be exactly 100 wide, which makes the output\nlook much nicer.", "tree": {"sha": "8c8ed44e9f9f0125ed324d97c1307cd5d267c4ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c8ed44e9f9f0125ed324d97c1307cd5d267c4ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/687e40a959417c9713f04cc88a7ab73672778165", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiTilbCRBK7hj4Ov3rIwAAoXYIAFxdr8rIv0GeTb/tVI0GLztM\n0VAO8wMNfWxixBBRr1J2Q+DDsjK2sbJt/2ZUV/fA4CN9/O7Fq1NmieA2M/ErzZuQ\nxaIhoSmEBoQDDvF9JJKpcYurfyhBNtZa27YEtUdITq6b4M0UlzKHGbr6TGrI3UPg\nkVdik/iio4tcZPQ3aNY4sjgyEg9HgdlwK4yjC9nCFZ8sPbS+ozLlatKhPsoZQMCW\nmDq+hozQBwV2yMrip14HRanWt3vEGTkmhpTiaQv5Ih39G83VhwBn1vItqjBMFDRN\nrlg8ymfSPzswwnyWOI2/Aa7SKyoXHQ/ijywLlHlgx/Jr+AoG+lQM58meH2jLlas=\n=gt2a\n-----END PGP SIGNATURE-----\n", "payload": "tree 8c8ed44e9f9f0125ed324d97c1307cd5d267c4ca\nparent 64e7bf9faed35585e8054f968abae792b1b690ce\nparent b72a7fbcdc6978f73f6e16d0c0cfad8551dc6afe\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649289563 +0200\ncommitter GitHub <noreply@github.com> 1649289563 +0200\n\nRollup merge of #95709 - nnethercote:improve-terse-test-output, r=Dylan-DPC\n\nImprove terse test output.\n\nThe current terse output gives 112 chars per line, which causes\nwraparound for people using 100 char wide terminals, which is very\ncommon.\n\nThis commit changes it to be exactly 100 wide, which makes the output\nlook much nicer.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/687e40a959417c9713f04cc88a7ab73672778165", "html_url": "https://github.com/rust-lang/rust/commit/687e40a959417c9713f04cc88a7ab73672778165", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/687e40a959417c9713f04cc88a7ab73672778165/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64e7bf9faed35585e8054f968abae792b1b690ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/64e7bf9faed35585e8054f968abae792b1b690ce", "html_url": "https://github.com/rust-lang/rust/commit/64e7bf9faed35585e8054f968abae792b1b690ce"}, {"sha": "b72a7fbcdc6978f73f6e16d0c0cfad8551dc6afe", "url": "https://api.github.com/repos/rust-lang/rust/commits/b72a7fbcdc6978f73f6e16d0c0cfad8551dc6afe", "html_url": "https://github.com/rust-lang/rust/commit/b72a7fbcdc6978f73f6e16d0c0cfad8551dc6afe"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "5dace8baef7f823054d29b93305922b4b8b2c667", "filename": "library/test/src/formatters/terse.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/687e40a959417c9713f04cc88a7ab73672778165/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/687e40a959417c9713f04cc88a7ab73672778165/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs?ref=687e40a959417c9713f04cc88a7ab73672778165", "patch": "@@ -11,8 +11,9 @@ use crate::{\n     types::TestDesc,\n };\n \n-// insert a '\\n' after 100 tests in quiet mode\n-const QUIET_MODE_MAX_COLUMN: usize = 100;\n+// We insert a '\\n' when the output hits 100 columns in quiet mode. 88 test\n+// result chars leaves 12 chars for a progress count like \" 11704/12853\".\n+const QUIET_MODE_MAX_COLUMN: usize = 88;\n \n pub(crate) struct TerseFormatter<T> {\n     out: OutputLocation<T>,\n@@ -65,7 +66,7 @@ impl<T: Write> TerseFormatter<T> {\n     ) -> io::Result<()> {\n         self.write_pretty(result, color)?;\n         if self.test_count % QUIET_MODE_MAX_COLUMN == QUIET_MODE_MAX_COLUMN - 1 {\n-            // we insert a new line every 100 dots in order to flush the\n+            // We insert a new line regularly in order to flush the\n             // screen when dealing with line-buffered output (e.g., piping to\n             // `stamp` in the rust CI).\n             let out = format!(\" {}/{}\\n\", self.test_count + 1, self.total_test_count);"}]}