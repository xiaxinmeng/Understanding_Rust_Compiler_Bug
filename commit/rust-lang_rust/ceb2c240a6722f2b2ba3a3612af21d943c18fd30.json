{"sha": "ceb2c240a6722f2b2ba3a3612af21d943c18fd30", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlYjJjMjQwYTY3MjJmMmIyYmEzYTM2MTJhZjIxZDk0M2MxOGZkMzA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-08-17T12:58:01Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-08-17T12:58:01Z"}, "message": "Include the closing paren to the span of ast::NestedMetaItem", "tree": {"sha": "335be79594730f8e31451b795c484041bb601861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/335be79594730f8e31451b795c484041bb601861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ceb2c240a6722f2b2ba3a3612af21d943c18fd30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ceb2c240a6722f2b2ba3a3612af21d943c18fd30", "html_url": "https://github.com/rust-lang/rust/commit/ceb2c240a6722f2b2ba3a3612af21d943c18fd30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ceb2c240a6722f2b2ba3a3612af21d943c18fd30/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea222160d0384a0b231624e80301397874d6b21c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea222160d0384a0b231624e80301397874d6b21c", "html_url": "https://github.com/rust-lang/rust/commit/ea222160d0384a0b231624e80301397874d6b21c"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "ca87c807103fd95c32a105e7122dab6cf95221b2", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ceb2c240a6722f2b2ba3a3612af21d943c18fd30/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceb2c240a6722f2b2ba3a3612af21d943c18fd30/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=ceb2c240a6722f2b2ba3a3612af21d943c18fd30", "patch": "@@ -1064,26 +1064,21 @@ impl MetaItem {\n             },\n             _ => return None,\n         };\n+        let list_closing_paren_pos = tokens.peek().map(|tt| tt.span().hi);\n         let node = match MetaItemKind::from_tokens(tokens) {\n             Some(node) => node,\n             _ => return None,\n         };\n-        if let Some(last_span) = node.last_span() {\n-            span.hi = last_span.hi;\n-        }\n+        span.hi = match node {\n+            MetaItemKind::NameValue(ref lit) => lit.span.hi,\n+            MetaItemKind::List(..) => list_closing_paren_pos.unwrap_or(span.hi),\n+            _ => span.hi,\n+        };\n         Some(MetaItem { name: name, span: span, node: node })\n     }\n }\n \n impl MetaItemKind {\n-    fn last_span(&self) -> Option<Span> {\n-        match *self {\n-            MetaItemKind::Word => None,\n-            MetaItemKind::List(ref list) => list.last().map(NestedMetaItem::span),\n-            MetaItemKind::NameValue(ref lit) => Some(lit.span),\n-        }\n-    }\n-\n     pub fn tokens(&self, span: Span) -> TokenStream {\n         match *self {\n             MetaItemKind::Word => TokenStream::empty(),"}]}