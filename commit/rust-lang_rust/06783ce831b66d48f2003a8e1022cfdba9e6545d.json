{"sha": "06783ce831b66d48f2003a8e1022cfdba9e6545d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NzgzY2U4MzFiNjZkNDhmMjAwM2E4ZTEwMjJjZmRiYTllNjU0NWQ=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-08T21:07:24Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-08T21:07:24Z"}, "message": "std::vec: Fix typo in fn ne", "tree": {"sha": "96fd66d68e60c25031c214edc702c7d9eacc1051", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96fd66d68e60c25031c214edc702c7d9eacc1051"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06783ce831b66d48f2003a8e1022cfdba9e6545d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06783ce831b66d48f2003a8e1022cfdba9e6545d", "html_url": "https://github.com/rust-lang/rust/commit/06783ce831b66d48f2003a8e1022cfdba9e6545d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06783ce831b66d48f2003a8e1022cfdba9e6545d/comments", "author": null, "committer": null, "parents": [{"sha": "8ed8a41c62f51fd7b64a9a61e31c595f7b9497d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed8a41c62f51fd7b64a9a61e31c595f7b9497d7", "html_url": "https://github.com/rust-lang/rust/commit/8ed8a41c62f51fd7b64a9a61e31c595f7b9497d7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e088fd9a647dd084e6daed30e8c2a78ad176fd8a", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06783ce831b66d48f2003a8e1022cfdba9e6545d/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06783ce831b66d48f2003a8e1022cfdba9e6545d/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=06783ce831b66d48f2003a8e1022cfdba9e6545d", "patch": "@@ -574,7 +574,7 @@ pub mod traits {\n                 order::eq(self.iter(), other.iter())\n         }\n         fn ne(&self, other: & &'self [T]) -> bool {\n-            self.len() != other.len() !=\n+            self.len() != other.len() ||\n                 order::ne(self.iter(), other.iter())\n         }\n     }"}]}