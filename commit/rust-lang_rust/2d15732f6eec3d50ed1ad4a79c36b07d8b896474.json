{"sha": "2d15732f6eec3d50ed1ad4a79c36b07d8b896474", "node_id": "C_kwDOAAsO6NoAKDJkMTU3MzJmNmVlYzNkNTBlZDFhZDRhNzljMzZiMDdkOGI4OTY0NzQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-22T03:08:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-22T03:08:01Z"}, "message": "Auto merge of #95127 - notriddle:notriddle/option-content-move-from-tuple-match, r=estebank\n\ndiagnostics: do not give Option::as_ref suggestion for complex match\n\nFixes #82528", "tree": {"sha": "036d4de38c4a54e9e5a8fc09ba1b9820cc15ed15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/036d4de38c4a54e9e5a8fc09ba1b9820cc15ed15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d15732f6eec3d50ed1ad4a79c36b07d8b896474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d15732f6eec3d50ed1ad4a79c36b07d8b896474", "html_url": "https://github.com/rust-lang/rust/commit/2d15732f6eec3d50ed1ad4a79c36b07d8b896474", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d15732f6eec3d50ed1ad4a79c36b07d8b896474/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf8531064e44a335c7da75c745279457f42660c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf8531064e44a335c7da75c745279457f42660c5", "html_url": "https://github.com/rust-lang/rust/commit/cf8531064e44a335c7da75c745279457f42660c5"}, {"sha": "306dcd6efa72c5f06c0f62ac90618d1f60cd7000", "url": "https://api.github.com/repos/rust-lang/rust/commits/306dcd6efa72c5f06c0f62ac90618d1f60cd7000", "html_url": "https://github.com/rust-lang/rust/commit/306dcd6efa72c5f06c0f62ac90618d1f60cd7000"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "a58c788eb57bd95f022132a4b1482d217dde4801", "filename": "compiler/rustc_borrowck/src/diagnostics/move_errors.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2d15732f6eec3d50ed1ad4a79c36b07d8b896474/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d15732f6eec3d50ed1ad4a79c36b07d8b896474/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmove_errors.rs?ref=2d15732f6eec3d50ed1ad4a79c36b07d8b896474", "patch": "@@ -218,18 +218,29 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n \n     fn report(&mut self, error: GroupedMoveError<'tcx>) {\n         let (mut err, err_span) = {\n-            let (span, use_spans, original_path, kind): (\n+            let (span, use_spans, original_path, kind, has_complex_bindings): (\n                 Span,\n                 Option<UseSpans<'tcx>>,\n                 Place<'tcx>,\n                 &IllegalMoveOriginKind<'_>,\n+                bool,\n             ) = match error {\n-                GroupedMoveError::MovesFromPlace { span, original_path, ref kind, .. }\n-                | GroupedMoveError::MovesFromValue { span, original_path, ref kind, .. } => {\n-                    (span, None, original_path, kind)\n+                GroupedMoveError::MovesFromPlace {\n+                    span,\n+                    original_path,\n+                    ref kind,\n+                    ref binds_to,\n+                    ..\n                 }\n+                | GroupedMoveError::MovesFromValue {\n+                    span,\n+                    original_path,\n+                    ref kind,\n+                    ref binds_to,\n+                    ..\n+                } => (span, None, original_path, kind, !binds_to.is_empty()),\n                 GroupedMoveError::OtherIllegalMove { use_spans, original_path, ref kind } => {\n-                    (use_spans.args_or_use(), Some(use_spans), original_path, kind)\n+                    (use_spans.args_or_use(), Some(use_spans), original_path, kind, false)\n                 }\n             };\n             debug!(\n@@ -248,6 +259,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                             target_place,\n                             span,\n                             use_spans,\n+                            has_complex_bindings,\n                         ),\n                     &IllegalMoveOriginKind::InteriorOfTypeWithDestructor { container_ty: ty } => {\n                         self.cannot_move_out_of_interior_of_drop(span, ty)\n@@ -290,6 +302,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n         deref_target_place: Place<'tcx>,\n         span: Span,\n         use_spans: Option<UseSpans<'tcx>>,\n+        has_complex_bindings: bool,\n     ) -> DiagnosticBuilder<'a, ErrorGuaranteed> {\n         // Inspect the type of the content behind the\n         // borrow to provide feedback about why this\n@@ -399,6 +412,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n         let diag_name = self.infcx.tcx.get_diagnostic_name(def_id);\n         if matches!(diag_name, Some(sym::Option | sym::Result))\n             && use_spans.map_or(true, |v| !v.for_closure())\n+            && !has_complex_bindings\n         {\n             err.span_suggestion_verbose(\n                 span.shrink_to_hi(),"}, {"sha": "7f22d81360b34b6f447095e609c75b8d6a8acc6b", "filename": "src/test/ui/suggestions/option-content-move-from-tuple-match.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2d15732f6eec3d50ed1ad4a79c36b07d8b896474/src%2Ftest%2Fui%2Fsuggestions%2Foption-content-move-from-tuple-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d15732f6eec3d50ed1ad4a79c36b07d8b896474/src%2Ftest%2Fui%2Fsuggestions%2Foption-content-move-from-tuple-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Foption-content-move-from-tuple-match.rs?ref=2d15732f6eec3d50ed1ad4a79c36b07d8b896474", "patch": "@@ -0,0 +1,9 @@\n+fn foo(a: &Option<String>, b: &Option<String>) {\n+    match (a, b) {\n+        //~^ ERROR cannot move out of a shared reference\n+        (None, &c) => &c.unwrap(),\n+        (&Some(ref c), _) => c,\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "debb8cabaea027b557bccdb05753adc85d2678cf", "filename": "src/test/ui/suggestions/option-content-move-from-tuple-match.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2d15732f6eec3d50ed1ad4a79c36b07d8b896474/src%2Ftest%2Fui%2Fsuggestions%2Foption-content-move-from-tuple-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2d15732f6eec3d50ed1ad4a79c36b07d8b896474/src%2Ftest%2Fui%2Fsuggestions%2Foption-content-move-from-tuple-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Foption-content-move-from-tuple-match.stderr?ref=2d15732f6eec3d50ed1ad4a79c36b07d8b896474", "patch": "@@ -0,0 +1,15 @@\n+error[E0507]: cannot move out of a shared reference\n+  --> $DIR/option-content-move-from-tuple-match.rs:2:11\n+   |\n+LL |     match (a, b) {\n+   |           ^^^^^^\n+LL |\n+LL |         (None, &c) => &c.unwrap(),\n+   |                 -\n+   |                 |\n+   |                 data moved here\n+   |                 move occurs because `c` has type `Option<String>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}]}