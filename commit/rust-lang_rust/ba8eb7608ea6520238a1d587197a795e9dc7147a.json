{"sha": "ba8eb7608ea6520238a1d587197a795e9dc7147a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhOGViNzYwOGVhNjUyMDIzOGExZDU4NzE5N2E3OTVlOWRjNzE0N2E=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-12T18:30:35Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-15T08:35:40Z"}, "message": "add an interesting demo for &mut being unique", "tree": {"sha": "480ddbbca11af0f36853530eb1c92f5218c1a394", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/480ddbbca11af0f36853530eb1c92f5218c1a394"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba8eb7608ea6520238a1d587197a795e9dc7147a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba8eb7608ea6520238a1d587197a795e9dc7147a", "html_url": "https://github.com/rust-lang/rust/commit/ba8eb7608ea6520238a1d587197a795e9dc7147a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba8eb7608ea6520238a1d587197a795e9dc7147a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a801c0dc1620948108e23ab9c75b75137eb7691", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a801c0dc1620948108e23ab9c75b75137eb7691", "html_url": "https://github.com/rust-lang/rust/commit/5a801c0dc1620948108e23ab9c75b75137eb7691"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "255e35b145588df57cc0d848d4bd677a7e5eaf1e", "filename": "tests/compile-fail/stacked_borrows/mut_exclusive_violation1.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ba8eb7608ea6520238a1d587197a795e9dc7147a/tests%2Fcompile-fail%2Fstacked_borrows%2Fmut_exclusive_violation1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba8eb7608ea6520238a1d587197a795e9dc7147a/tests%2Fcompile-fail%2Fstacked_borrows%2Fmut_exclusive_violation1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fmut_exclusive_violation1.rs?ref=ba8eb7608ea6520238a1d587197a795e9dc7147a", "patch": "@@ -0,0 +1,29 @@\n+fn demo_mut_advanced_unique(our: &mut i32) -> i32 {\n+  unknown_code_1(&*our);\n+\n+  // This \"re-asserts\" uniqueness of the reference: After writing, we know\n+  // our tag is at the top of the stack.\n+  *our = 5;\n+\n+  unknown_code_2();\n+\n+  // We know this will return 5\n+  *our\n+}\n+\n+// Now comes the evil context\n+use std::ptr;\n+\n+static mut LEAK: *mut i32 = ptr::null_mut();\n+\n+fn unknown_code_1(x: &i32) { unsafe {\n+    LEAK = x as *const _ as *mut _;\n+} }\n+\n+fn unknown_code_2() { unsafe {\n+    *LEAK = 7; //~ ERROR does not exist on the stack\n+} }\n+\n+fn main() {\n+    assert_eq!(demo_mut_advanced_unique(&mut 0), 5);\n+}"}]}