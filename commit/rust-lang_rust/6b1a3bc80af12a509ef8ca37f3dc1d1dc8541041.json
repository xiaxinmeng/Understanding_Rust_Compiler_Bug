{"sha": "6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMWEzYmM4MGFmMTJhNTA5ZWY4Y2EzN2YzZGMxZDFkYzg1NDEwNDE=", "commit": {"author": {"name": "Dan Gohman", "email": "sunfish@mozilla.com", "date": "2017-11-16T21:08:17Z"}, "committer": {"name": "Dan Gohman", "email": "sunfish@mozilla.com", "date": "2017-11-17T00:12:36Z"}, "message": "Optimize `read_to_end`.\n\nThis patch makes `read_to_end` use Vec's memory-growth pattern rather\nthan using a custom pattern.\n\nThis has some interesting effects:\n\n - If memory is reserved up front, `read_to_end` can be faster, as it\n   starts reading at the buffer size, rather than always starting at 32\n   bytes. This speeds up file reading by 2x in one of my use cases.\n\n - It can reduce the number of syscalls when reading large files.\n   Previously, `read_to_end` would settle into a sequence of 8192-byte\n   reads. With this patch, the read size follows Vec's allocation\n   pattern. For example, on a 16MiB file, it can do 21 read syscalls\n   instead of 2057. In simple benchmarks of large files though, overall\n   speed is still dominated by the actual I/O.\n\n - A downside is that Read implementations that don't implement\n   `initializer()` may see increased memory zeroing overhead.\n\nI benchmarked this on a variety of data sizes, with and without\npreallocated buffers. Most benchmarks see no difference, but reading\na small/medium file with a pre-allocated buffer is faster.", "tree": {"sha": "4da310afd7e5d26127abd51ceeeadc5d6f257a03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4da310afd7e5d26127abd51ceeeadc5d6f257a03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041", "html_url": "https://github.com/rust-lang/rust/commit/6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "481b42b50745d433c5bcfd90e7a03a4b9110a677", "url": "https://api.github.com/repos/rust-lang/rust/commits/481b42b50745d433c5bcfd90e7a03a4b9110a677", "html_url": "https://github.com/rust-lang/rust/commit/481b42b50745d433c5bcfd90e7a03a4b9110a677"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "61491389015257e731c7d825c258e590e5fadf1b", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=6b1a3bc80af12a509ef8ca37f3dc1d1dc8541041", "patch": "@@ -366,16 +366,13 @@ fn append_to_string<F>(buf: &mut String, f: F) -> Result<usize>\n fn read_to_end<R: Read + ?Sized>(r: &mut R, buf: &mut Vec<u8>) -> Result<usize> {\n     let start_len = buf.len();\n     let mut g = Guard { len: buf.len(), buf: buf };\n-    let mut new_write_size = 16;\n     let ret;\n     loop {\n         if g.len == g.buf.len() {\n-            if new_write_size < DEFAULT_BUF_SIZE {\n-                new_write_size *= 2;\n-            }\n             unsafe {\n-                g.buf.reserve(new_write_size);\n-                g.buf.set_len(g.len + new_write_size);\n+                g.buf.reserve(32);\n+                let capacity = g.buf.capacity();\n+                g.buf.set_len(capacity);\n                 r.initializer().initialize(&mut g.buf[g.len..]);\n             }\n         }"}]}