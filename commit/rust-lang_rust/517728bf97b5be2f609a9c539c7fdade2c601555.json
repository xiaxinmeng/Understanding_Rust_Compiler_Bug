{"sha": "517728bf97b5be2f609a9c539c7fdade2c601555", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNzcyOGJmOTdiNWJlMmY2MDlhOWM1MzljN2ZkYWRlMmM2MDE1NTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-11-19T08:36:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-11-19T08:36:33Z"}, "message": "avoid fallback logic (and we do not need the flag value currently anyway)", "tree": {"sha": "d4315e0c8a051fa19f17cd3669635a8329ada268", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4315e0c8a051fa19f17cd3669635a8329ada268"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/517728bf97b5be2f609a9c539c7fdade2c601555", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/517728bf97b5be2f609a9c539c7fdade2c601555", "html_url": "https://github.com/rust-lang/rust/commit/517728bf97b5be2f609a9c539c7fdade2c601555", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/517728bf97b5be2f609a9c539c7fdade2c601555/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdb7adb4b32168b79a44f332ceace67aee727c42", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb7adb4b32168b79a44f332ceace67aee727c42", "html_url": "https://github.com/rust-lang/rust/commit/cdb7adb4b32168b79a44f332ceace67aee727c42"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "23dc02a6affd30976a95ae7780fffa1e4130acca", "filename": "src/shims/posix/linux/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/517728bf97b5be2f609a9c539c7fdade2c601555/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/517728bf97b5be2f609a9c539c7fdade2c601555/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs?ref=517728bf97b5be2f609a9c539c7fdade2c601555", "patch": "@@ -208,11 +208,9 @@ fn getrandom<'tcx>(\n \n     // The only supported flags are GRND_RANDOM and GRND_NONBLOCK,\n     // neither of which have any effect on our current PRNG.\n-    let flags = this.read_scalar(flags)?;\n-    // Either `i32` or `isize` is fine.\n-    if flags.to_machine_isize(this).is_err() {\n-        flags.to_i32()?;\n-    }\n+    let _flags = this.read_scalar(flags)?;\n+    // FIXME: Check that this is an integer type of the right size.\n+    // Currently, some callers pass i32 and some usize, is that even allowed?\n \n     this.gen_random(ptr, len)?;\n     this.write_scalar(Scalar::from_machine_usize(len, this), dest)?;"}]}