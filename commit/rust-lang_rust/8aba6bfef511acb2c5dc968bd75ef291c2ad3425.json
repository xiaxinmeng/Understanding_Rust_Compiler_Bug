{"sha": "8aba6bfef511acb2c5dc968bd75ef291c2ad3425", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYmE2YmZlZjUxMWFjYjJjNWRjOTY4YmQ3NWVmMjkxYzJhZDM0MjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T08:14:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T08:14:08Z"}, "message": "Simplify", "tree": {"sha": "8f278d6a23234a8b7a0b304c3eb5cad4b92b1e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f278d6a23234a8b7a0b304c3eb5cad4b92b1e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aba6bfef511acb2c5dc968bd75ef291c2ad3425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aba6bfef511acb2c5dc968bd75ef291c2ad3425", "html_url": "https://github.com/rust-lang/rust/commit/8aba6bfef511acb2c5dc968bd75ef291c2ad3425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aba6bfef511acb2c5dc968bd75ef291c2ad3425/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0de2475208765a171f335dfffde764f96243d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0de2475208765a171f335dfffde764f96243d41", "html_url": "https://github.com/rust-lang/rust/commit/e0de2475208765a171f335dfffde764f96243d41"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d2487acc3b9c4b6d449db01cc1599e384c3c2060", "filename": "crates/ra_parser/src/parser.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8aba6bfef511acb2c5dc968bd75ef291c2ad3425/crates%2Fra_parser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aba6bfef511acb2c5dc968bd75ef291c2ad3425/crates%2Fra_parser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fparser.rs?ref=8aba6bfef511acb2c5dc968bd75ef291c2ad3425", "patch": "@@ -269,8 +269,8 @@ impl Marker {\n     pub(crate) fn complete(mut self, p: &mut Parser, kind: SyntaxKind) -> CompletedMarker {\n         self.bomb.defuse();\n         let idx = self.pos as usize;\n-        match p.events[idx] {\n-            Event::Start { kind: ref mut slot, .. } => {\n+        match &mut p.events[idx] {\n+            Event::Start { kind: slot, .. } => {\n                 *slot = kind;\n             }\n             _ => unreachable!(),\n@@ -320,8 +320,8 @@ impl CompletedMarker {\n     pub(crate) fn precede(self, p: &mut Parser) -> Marker {\n         let new_pos = p.start();\n         let idx = self.start_pos as usize;\n-        match p.events[idx] {\n-            Event::Start { ref mut forward_parent, .. } => {\n+        match &mut p.events[idx] {\n+            Event::Start { forward_parent, .. } => {\n                 *forward_parent = Some(new_pos.pos - self.start_pos);\n             }\n             _ => unreachable!(),\n@@ -333,12 +333,12 @@ impl CompletedMarker {\n     pub(crate) fn undo_completion(self, p: &mut Parser) -> Marker {\n         let start_idx = self.start_pos as usize;\n         let finish_idx = self.finish_pos as usize;\n-        match p.events[start_idx] {\n-            Event::Start { ref mut kind, forward_parent: None } => *kind = TOMBSTONE,\n+        match &mut p.events[start_idx] {\n+            Event::Start { kind, forward_parent: None } => *kind = TOMBSTONE,\n             _ => unreachable!(),\n         }\n-        match p.events[finish_idx] {\n-            ref mut slot @ Event::Finish => *slot = Event::tombstone(),\n+        match &mut p.events[finish_idx] {\n+            slot @ Event::Finish => *slot = Event::tombstone(),\n             _ => unreachable!(),\n         }\n         Marker::new(self.start_pos)"}]}