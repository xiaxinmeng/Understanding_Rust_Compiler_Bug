{"sha": "18cc0f9f374e4dcd6e933164037654b39e841148", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4Y2MwZjlmMzc0ZTRkY2Q2ZTkzMzE2NDAzNzY1NGIzOWU4NDExNDg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-22T21:53:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-04T14:14:38Z"}, "message": "document `closure_base_def_id`", "tree": {"sha": "636beb53548dbdea3c638ec52dd68980e2c20eda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/636beb53548dbdea3c638ec52dd68980e2c20eda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18cc0f9f374e4dcd6e933164037654b39e841148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18cc0f9f374e4dcd6e933164037654b39e841148", "html_url": "https://github.com/rust-lang/rust/commit/18cc0f9f374e4dcd6e933164037654b39e841148", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18cc0f9f374e4dcd6e933164037654b39e841148/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e63bb34199545042c049f67be3e3253520a85fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e63bb34199545042c049f67be3e3253520a85fc", "html_url": "https://github.com/rust-lang/rust/commit/2e63bb34199545042c049f67be3e3253520a85fc"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "129badc46d8c10fff1fdb43b34560f5cb28be330", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18cc0f9f374e4dcd6e933164037654b39e841148/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18cc0f9f374e4dcd6e933164037654b39e841148/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=18cc0f9f374e4dcd6e933164037654b39e841148", "patch": "@@ -624,6 +624,13 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         self.def_key(def_id).disambiguated_data.data == DefPathData::ClosureExpr\n     }\n \n+    /// Given the `DefId` of a fn or closure, returns the `DefId` of\n+    /// the innermost fn item that the closure is contained within.\n+    /// This is a significant def-id because, when we do\n+    /// type-checking, we type-check this fn item and all of its\n+    /// (transitive) closures together.  Therefore, when we fetch the\n+    /// `typeck_tables_of` the closure, for example, we really wind up\n+    /// fetching the `typeck_tables_of` the enclosing fn item.\n     pub fn closure_base_def_id(self, def_id: DefId) -> DefId {\n         let mut def_id = def_id;\n         while self.is_closure(def_id) {"}]}