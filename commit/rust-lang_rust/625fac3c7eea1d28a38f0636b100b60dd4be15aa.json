{"sha": "625fac3c7eea1d28a38f0636b100b60dd4be15aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNWZhYzNjN2VlYTFkMjhhMzhmMDYzNmIxMDBiNjBkZDRiZTE1YWE=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-12T04:07:29Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-12T04:49:49Z"}, "message": "core: Rewrite last_os_error in Rust for windows as well.", "tree": {"sha": "a8a712c4c8cf9caafca4cba9e76223c83b742c91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8a712c4c8cf9caafca4cba9e76223c83b742c91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/625fac3c7eea1d28a38f0636b100b60dd4be15aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/625fac3c7eea1d28a38f0636b100b60dd4be15aa", "html_url": "https://github.com/rust-lang/rust/commit/625fac3c7eea1d28a38f0636b100b60dd4be15aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/625fac3c7eea1d28a38f0636b100b60dd4be15aa/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9877d98b8f91be7e1494e84d685882996b84c877", "url": "https://api.github.com/repos/rust-lang/rust/commits/9877d98b8f91be7e1494e84d685882996b84c877", "html_url": "https://github.com/rust-lang/rust/commit/9877d98b8f91be7e1494e84d685882996b84c877"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "d067a83c2e6ea4bcb82483cb008f7e3986e0c154", "filename": "src/libcore/os.rs", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/625fac3c7eea1d28a38f0636b100b60dd4be15aa/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/625fac3c7eea1d28a38f0636b100b60dd4be15aa/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=625fac3c7eea1d28a38f0636b100b60dd4be15aa", "patch": "@@ -808,7 +808,7 @@ pub fn errno() -> uint {\n     }\n \n     unsafe {\n-        GetLastError() as uint;\n+        GetLastError() as uint\n     }\n }\n \n@@ -852,15 +852,45 @@ pub fn last_os_error() -> ~str {\n             if err < 0 {\n                 die!(~\"strerror_r failure\");\n             }\n-            \n+\n             str::raw::from_c_str(&buf[0])\n         }\n     }\n \n     #[cfg(windows)]\n     fn strerror() -> ~str {\n+        use libc::types::os::arch::extra::DWORD;\n+        use libc::types::os::arch::extra::LPSTR;\n+        use libc::types::os::arch::extra::LPVOID;\n+\n+        #[link_name = \"kernel32\"]\n+        #[abi = \"stdcall\"]\n+        extern {\n+            unsafe fn FormatMessageA(flags: DWORD, lpSrc: LPVOID,\n+                                     msgId: DWORD, langId: DWORD,\n+                                     buf: LPSTR, nsize: DWORD,\n+                                     args: *c_void) -> DWORD;\n+        }\n+\n+        const FORMAT_MESSAGE_FROM_SYSTEM: DWORD = 0x00001000;\n+        const FORMAT_MESSAGE_IGNORE_INSERTS: DWORD = 0x00000200;\n+\n+        let mut buf = [0 as c_char, ..TMPBUF_SZ];\n+\n+        // This value is calculated from the macro\n+        // MAKELANGID(LANG_SYSTEM_DEFAULT, SUBLANG_SYS_DEFAULT)\n+        let langId = 0x0800 as DWORD;\n+        let err = errno() as DWORD;\n         unsafe {\n-            rustrt::last_os_error()\n+            let res = FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM |\n+                                     FORMAT_MESSAGE_IGNORE_INSERTS,\n+                                     ptr::mut_null(), err, langId,\n+                                     &mut buf[0], TMPBUF_SZ as DWORD, ptr::null());\n+            if res == 0 {\n+                die!(fmt!(\"[%?] FormatMessage failure\", errno()));\n+            }\n+\n+            str::raw::from_c_str(&buf[0])\n         }\n     }\n "}]}