{"sha": "d38bf1624d335651dc297fdd92672cdb0ee2ef4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOGJmMTYyNGQzMzU2NTFkYzI5N2ZkZDkyNjcyY2RiMGVlMmVmNGY=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-12T11:06:26Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-12T11:09:42Z"}, "message": "Return snapshots to tests", "tree": {"sha": "1495d3bd160360bcd7adad554a8313559d03ae92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1495d3bd160360bcd7adad554a8313559d03ae92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d38bf1624d335651dc297fdd92672cdb0ee2ef4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d38bf1624d335651dc297fdd92672cdb0ee2ef4f", "html_url": "https://github.com/rust-lang/rust/commit/d38bf1624d335651dc297fdd92672cdb0ee2ef4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d38bf1624d335651dc297fdd92672cdb0ee2ef4f/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f123539ad20c6c082a5e6aa69816429c3f73935a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f123539ad20c6c082a5e6aa69816429c3f73935a", "html_url": "https://github.com/rust-lang/rust/commit/f123539ad20c6c082a5e6aa69816429c3f73935a"}], "stats": {"total": 52, "additions": 34, "deletions": 18}, "files": [{"sha": "feaa438afcbb56f918754262247fee0dbe1c251d", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 34, "deletions": 18, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/d38bf1624d335651dc297fdd92672cdb0ee2ef4f/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38bf1624d335651dc297fdd92672cdb0ee2ef4f/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=d38bf1624d335651dc297fdd92672cdb0ee2ef4f", "patch": "@@ -118,43 +118,59 @@ mod tests {\n         },\n         CompletionItemKind,\n     };\n-    use insta::{assert_snapshot, assert_debug_snapshot};\n-    use rustc_hash::FxHashSet;\n+    use insta::assert_debug_snapshot;\n \n     fn do_keyword_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Keyword)\n     }\n \n-    fn assert_completion_keyword(code: &str, keywords: &[(&str, &str)]) {\n+    fn get_completion_text_and_assert_positions(code: &str) -> Vec<(String, String)> {\n         let (position, completion_items) =\n             do_completion_with_position(code, CompletionKind::Keyword);\n-        let mut expected_keywords = FxHashSet::<(String, String)>::default();\n-        for (key, value) in keywords {\n-            expected_keywords.insert(((*key).to_string(), (*value).to_string()));\n-        }\n-        let mut returned_keywords = FxHashSet::<(String, String)>::default();\n-        \n+        let mut returned_keywords = Vec::<(String, String)>::new();\n+\n         for item in completion_items {\n-            assert!(item.text_edit().len() == 1);\n+            debug_assert!(item.text_edit().len() == 1);\n             assert!(item.kind() == Some(CompletionItemKind::Keyword));\n             let atom = item.text_edit().iter().next().unwrap().clone();\n             assert!(atom.delete.start() == position.offset);\n             assert!(atom.delete.end() == position.offset);\n             let pair = (item.label().to_string(), atom.insert);\n-            returned_keywords.insert(pair);\n+            returned_keywords.push(pair);\n         }\n-        let assert_failed_message = format!(\"Expected keywords: {:#?}\\nReceived keywords: {:#?}\", expected_keywords, returned_keywords);\n-        debug_assert!(returned_keywords == expected_keywords, assert_failed_message);\n+        returned_keywords.sort();\n+        returned_keywords\n     }\n \n     #[test]\n     fn completes_keywords_in_use_stmt_new_approach() {\n-        assert_completion_keyword(\n-            r\"\n-        use <|>\n-        \",\n-            &[(\"crate\", \"crate::\"), (\"self\", \"self\"), (\"super\", \"super::\")],\n+        assert_debug_snapshot!(\n+            get_completion_text_and_assert_positions(r\"\n+            use <|>\n+            \"),\n+            @r###\"\n+        [\n+            (\n+                \"crate\",\n+                \"crate::\",\n+            ),\n+            (\n+                \"self\",\n+                \"self\",\n+            ),\n+            (\n+                \"super\",\n+                \"super::\",\n+            ),\n+        ]\n+        \"###\n         );\n+        // assert_completion_keyword(\n+        //     r\"\n+        // use <|>\n+        // \",\n+        //     &[(\"crate\", \"crate::\"), (\"self\", \"self\"), (\"super\", \"super::\")],\n+        // );\n     }\n \n     #[test]"}]}