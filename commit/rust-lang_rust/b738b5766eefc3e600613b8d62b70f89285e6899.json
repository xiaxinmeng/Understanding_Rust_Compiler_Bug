{"sha": "b738b5766eefc3e600613b8d62b70f89285e6899", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MzhiNTc2NmVlZmMzZTYwMDYxM2I4ZDYyYjcwZjg5Mjg1ZTY4OTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-28T09:59:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-28T09:59:03Z"}, "message": "auto merge of #6754 : thestinger/rust/noalias, r=nikomatsakis\n\nThe compiler guarantees that there are no other references to a unique pointer when it's passed by-value to a function.\r\n\r\nThe existence of the header and annihilator don't matter since it's not relevant to the call:\r\n\r\n> For a call to the parent function, dependencies between memory references from before or after the call and from those during the call are \u201cirrelevant\u201d to the noalias keyword for the arguments and return value used in that call.\r\n\r\n@graydon's tracing garbage collector stores the metadata outside of the boxes, so that won't be a problem. I'm unsure if updating the header while inside a function where it's marked as `noalias` would be a problem anyway since you never actually read or write to the header.\r\n\r\n@nikomatsakis: r?", "tree": {"sha": "96b7fb0cbce4656c81a930bb3821870f4c454c7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96b7fb0cbce4656c81a930bb3821870f4c454c7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b738b5766eefc3e600613b8d62b70f89285e6899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b738b5766eefc3e600613b8d62b70f89285e6899", "html_url": "https://github.com/rust-lang/rust/commit/b738b5766eefc3e600613b8d62b70f89285e6899", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b738b5766eefc3e600613b8d62b70f89285e6899/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ee329e97a24d259f76c1a6e910f32aa11e07862", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee329e97a24d259f76c1a6e910f32aa11e07862", "html_url": "https://github.com/rust-lang/rust/commit/7ee329e97a24d259f76c1a6e910f32aa11e07862"}, {"sha": "c302010ef0016b6e7d1d869afe489c6ff3735b7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c302010ef0016b6e7d1d869afe489c6ff3735b7e", "html_url": "https://github.com/rust-lang/rust/commit/c302010ef0016b6e7d1d869afe489c6ff3735b7e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "28aed5368183c7f0876b814c664596359fb51315", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b738b5766eefc3e600613b8d62b70f89285e6899/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b738b5766eefc3e600613b8d62b70f89285e6899/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=b738b5766eefc3e600613b8d62b70f89285e6899", "patch": "@@ -1701,6 +1701,9 @@ pub fn create_llargs_for_fn_args(cx: fn_ctxt,\n                         llvm::LLVMAddAttribute(llarg, lib::llvm::NoAliasAttribute as c_uint);\n                     }\n                 }\n+                ast::ty_uniq(_) => {\n+                    llvm::LLVMAddAttribute(llarg, lib::llvm::NoAliasAttribute as c_uint);\n+                }\n                 _ => {}\n             }\n "}]}