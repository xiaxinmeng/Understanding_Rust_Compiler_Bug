{"sha": "b47dada167dea3d889abd77b7ff584afdaaf0a86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0N2RhZGExNjdkZWEzZDg4OWFiZDc3YjdmZjU4NGFmZGFhZjBhODY=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-07T21:24:41Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-12T08:34:28Z"}, "message": "Apply review comments", "tree": {"sha": "a33b8ddf8324fa3080c46ba933673a6003e1c125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a33b8ddf8324fa3080c46ba933673a6003e1c125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b47dada167dea3d889abd77b7ff584afdaaf0a86", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl5DuJQACgkQaTCGhp1Q\nZjde0A//cZLc1Zg67J6CUBM6xsS5TG8pU3y3j23WXST3UX4vVtp3lx2NQDxIL1FL\nrfK+2re8IiQVU2iv3wovaEc/tUvhgfd6aC+3GcbjDZaSkl4OVqsI10UvcCvNui0v\nEK6u9J/VZQxaMgKlsWWtlPtphIdEp6c9P3LY6PE2ulvp9fZi2MCalcBhOssl9z7s\nMZeY1zDzdk8OAL51h8x+HfTeZOjevqW1XwS4dtM+8pF1gIxbpVMMdBsiJK25SQux\nYdcAxPWNZMhTMg19rvih/V8YJwUfq646HqGmZgBLyxgzoP2qaGm0ds078q45ftNn\nMGVxpQqa7z+YV45pxq9ZyExGL8r7lYM9fy/hj2R2lxZ0XR9t6Xx/GB1M2XtmZAbl\nDe3kYNHrK5pbeCr8ZzQccZ3/s9Uh+TskCJ24ciabC/zaKG8AOB3k8Vauk5Qh4fBD\nPk7WJwlDDszG7BFhVieTQ2w0W6mJEEG3M+lKnSZjkV7fVODCVJ1lLXodZ2UUHBVl\nLGKHp1J3XjK7LHUFR31Vy1+8KlpVPiQbnjEUE+Vx/psAddUZ3HAeVPVz+3Sc9oSL\n6OdHvZzbTg8vmR+KD3Z/7lkuPuKBYzFoizpBZHr8Y99umjiOO2ayEQCj/u9oUa29\nxl4mM/3JnOuTWU+5psRykNEH1qEW31Q6eGl7rLYvM6Nc5Wm7Z4c=\n=Lj6a\n-----END PGP SIGNATURE-----", "payload": "tree a33b8ddf8324fa3080c46ba933673a6003e1c125\nparent abb095ddedd3c918d7c55d028d7f134bf4a507d3\nauthor flip1995 <hello@philkrones.com> 1581110681 +0100\ncommitter flip1995 <hello@philkrones.com> 1581496468 +0100\n\nApply review comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b47dada167dea3d889abd77b7ff584afdaaf0a86", "html_url": "https://github.com/rust-lang/rust/commit/b47dada167dea3d889abd77b7ff584afdaaf0a86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b47dada167dea3d889abd77b7ff584afdaaf0a86/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abb095ddedd3c918d7c55d028d7f134bf4a507d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/abb095ddedd3c918d7c55d028d7f134bf4a507d3", "html_url": "https://github.com/rust-lang/rust/commit/abb095ddedd3c918d7c55d028d7f134bf4a507d3"}], "stats": {"total": 79, "additions": 74, "deletions": 5}, "files": [{"sha": "4fcff830aa6ffcdf220b5f9f15b2c694941e73a7", "filename": ".github/deploy.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fdeploy.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fdeploy.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdeploy.sh?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -1,4 +1,4 @@\n-#! /bin/bash\n+#!/bin/bash\n \n set -ex\n "}, {"sha": "a2e87f5eb3745837c4a71cc2dad41a3473677bd3", "filename": ".github/driver.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fdriver.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fdriver.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdriver.sh?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -1,4 +1,4 @@\n-#! /bin/bash\n+#!/bin/bash\n \n set -ex\n "}, {"sha": "fb945060980d7b4d812de295cca5d9dde154e836", "filename": ".github/workflows/clippy.yml", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fclippy.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fclippy.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy.yml?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -21,61 +21,76 @@ on:\n env:\n   RUST_BACKTRACE: 1\n   CARGO_TARGET_DIR: '${{ github.workspace }}/target'\n-  GHA_CI: 1\n+  NO_FMT_TEST: 1\n \n jobs:\n   base:\n     runs-on: ubuntu-latest\n \n     steps:\n+    # Setup\n     - uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master\n       with:\n         github_token: \"${{ secrets.github_token }}\"\n+\n     - name: rust-toolchain\n       uses: actions-rs/toolchain@v1.0.3\n       with:\n         toolchain: nightly\n         target: x86_64-unknown-linux-gnu\n         profile: minimal\n+\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n+\n     - name: Run cargo update\n       run: cargo update\n+\n     - name: Cache cargo dir\n       uses: actions/cache@v1\n       with:\n         path: ~/.cargo\n         key: ${{ runner.os }}-x86_64-unknown-linux-gnu-${{ hashFiles('Cargo.lock') }}\n         restore-keys: |\n           ${{ runner.os }}-x86_64-unknown-linux-gnu\n+\n     - name: Master Toolchain Setup\n       run: bash setup-toolchain.sh\n \n+    # Run\n     - name: Set LD_LIBRARY_PATH (Linux)\n       run: |\n         SYSROOT=$(rustc --print sysroot)\n         echo \"::set-env name=LD_LIBRARY_PATH::${SYSROOT}/lib${LD_LIBRARY_PATH+:${LD_LIBRARY_PATH}}\"\n+\n     - name: Build\n       run: cargo build --features deny-warnings\n+\n     - name: Test\n       run: cargo test --features deny-warnings\n+\n     - name: Test clippy_lints\n       run: cargo test --features deny-warnings\n       working-directory: clippy_lints\n+\n     - name: Test rustc_tools_util\n       run: cargo test --features deny-warnings\n       working-directory: rustc_tools_util\n+\n     - name: Test clippy_dev\n       run: cargo test --features deny-warnings\n       working-directory: clippy_dev\n+\n     - name: Test cargo-clippy\n       run: ../target/debug/cargo-clippy\n       working-directory: clippy_workspace_tests\n+\n     - name: Test clippy-driver\n       run: bash .github/driver.sh\n       env:\n         OS: ${{ runner.os }}\n \n+    # Cleanup\n     - name: Run cargo-cache --autoclean\n       run: |\n         cargo install cargo-cache --debug"}, {"sha": "a690573180f02db6038972d665ad05fce5cf184a", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -7,7 +7,7 @@ on:\n env:\n   RUST_BACKTRACE: 1\n   CARGO_TARGET_DIR: '${{ github.workspace }}/target'\n-  GHA_CI: 1\n+  NO_FMT_TEST: 1\n \n jobs:\n   changelog:\n@@ -21,6 +21,8 @@ jobs:\n       uses: actions/checkout@v2.0.0\n       with:\n         ref: ${{ github.ref }}\n+\n+    # Run\n     - name: Check Changelog\n       run: |\n         MESSAGE=$(git log --format=%B -n 1)\n@@ -64,38 +66,46 @@ jobs:\n     runs-on: ${{ matrix.os }}\n \n     steps:\n+    # Setup\n     - uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master\n       with:\n         github_token: \"${{ secrets.github_token }}\"\n+\n     - name: Install dependencies (Linux-i686)\n       run: |\n         sudo dpkg --add-architecture i386\n         sudo apt-get update\n         sudo apt-get install gcc-multilib libssl-dev:i386 libgit2-dev:i386\n       if: matrix.host == 'i686-unknown-linux-gnu'\n+\n     - name: rust-toolchain\n       uses: actions-rs/toolchain@v1.0.3\n       with:\n         toolchain: nightly\n         target: ${{ matrix.host }}\n         profile: minimal\n+\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n+\n     - name: Run cargo update\n       run: cargo update\n+\n     - name: Cache cargo dir\n       uses: actions/cache@v1\n       with:\n         path: ~/.cargo\n         key: ${{ runner.os }}-${{ matrix.host }}-${{ hashFiles('Cargo.lock') }}\n         restore-keys: |\n           ${{ runner.os }}-${{ matrix.host }}\n+\n     - name: Master Toolchain Setup\n       run: bash setup-toolchain.sh\n       env:\n         HOST_TOOLCHAIN: ${{ matrix.host }}\n       shell: bash\n \n+    # Run\n     - name: Set LD_LIBRARY_PATH (Linux)\n       if: runner.os == 'Linux'\n       run: |\n@@ -113,34 +123,42 @@ jobs:\n         $sysroot = rustc --print sysroot\n         $env:PATH += ';' + $sysroot + '\\bin'\n         echo \"::set-env name=PATH::$env:PATH\"\n+\n     - name: Build\n       run: cargo build --features deny-warnings\n       shell: bash\n+\n     - name: Test\n       run: cargo test --features deny-warnings\n       shell: bash\n+\n     - name: Test clippy_lints\n       run: cargo test --features deny-warnings\n       shell: bash\n       working-directory: clippy_lints\n+\n     - name: Test rustc_tools_util\n       run: cargo test --features deny-warnings\n       shell: bash\n       working-directory: rustc_tools_util\n+\n     - name: Test clippy_dev\n       run: cargo test --features deny-warnings\n       shell: bash\n       working-directory: clippy_dev\n+\n     - name: Test cargo-clippy\n       run: ../target/debug/cargo-clippy\n       shell: bash\n       working-directory: clippy_workspace_tests\n+\n     - name: Test clippy-driver\n       run: bash .github/driver.sh\n       shell: bash\n       env:\n         OS: ${{ runner.os }}\n \n+    # Cleanup\n     - name: Run cargo-cache --autoclean\n       run: |\n         cargo install cargo-cache --debug\n@@ -152,42 +170,53 @@ jobs:\n     runs-on: ubuntu-latest\n \n     steps:\n+    # Setup\n     - uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master\n       with:\n         github_token: \"${{ secrets.github_token }}\"\n+\n     - name: rust-toolchain\n       uses: actions-rs/toolchain@v1.0.3\n       with:\n         toolchain: nightly\n         target: x86_64-unknown-linux-gnu\n         profile: minimal\n+\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n+\n     - name: Run cargo update\n       run: cargo update\n+\n     - name: Cache cargo dir\n       uses: actions/cache@v1\n       with:\n         path: ~/.cargo\n         key: ${{ runner.os }}-x86_64-unknown-linux-gnu-${{ hashFiles('Cargo.lock') }}\n         restore-keys: |\n           ${{ runner.os }}-x86_64-unknown-linux-gnu\n+\n     - name: Master Toolchain Setup\n       run: bash setup-toolchain.sh\n \n+    # Run\n     - name: Build Integration Test\n       run: cargo test --test integration --features integration --no-run\n+\n+    # Upload\n     - name: Extract Binaries\n       run: |\n         DIR=$CARGO_TARGET_DIR/debug\n         find $DIR ! -executable -o -type d ! -path $DIR | xargs rm -rf\n         mv $DIR/integration-* $DIR/integration\n+\n     - name: Upload Binaries\n       uses: actions/upload-artifact@v1\n       with:\n         name: target\n         path: target\n \n+    # Cleanup\n     - name: Run cargo-cache --autoclean\n       run: |\n         cargo install cargo-cache --debug\n@@ -219,42 +248,53 @@ jobs:\n     runs-on: ubuntu-latest\n \n     steps:\n+    # Setup\n     - uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master\n       with:\n         github_token: \"${{ secrets.github_token }}\"\n+\n     - name: rust-toolchain\n       uses: actions-rs/toolchain@v1.0.3\n       with:\n         toolchain: nightly\n         target: x86_64-unknown-linux-gnu\n         profile: minimal\n+\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n+\n     - name: Run cargo update\n       run: cargo update\n+\n     - name: Cache cargo dir\n       uses: actions/cache@v1\n       with:\n         path: ~/.cargo\n         key: ${{ runner.os }}-x86_64-unknown-linux-gnu-${{ hashFiles('Cargo.lock') }}\n         restore-keys: |\n           ${{ runner.os }}-x86_64-unknown-linux-gnu\n+\n     - name: Master Toolchain Setup\n       run: bash setup-toolchain.sh\n \n+    # Download\n     - name: Download target dir\n       uses: actions/download-artifact@v1\n       with:\n         name: target\n         path: target\n+\n     - name: Make Binaries Executable\n       run: chmod +x $CARGO_TARGET_DIR/debug/*\n+\n+    # Run\n     - name: Test ${{ matrix.integration }}\n       run: $CARGO_TARGET_DIR/debug/integration\n       env:\n         INTEGRATION: ${{ matrix.integration }}\n         RUSTUP_TOOLCHAIN: master\n \n+    # Cleanup\n     - name: Run cargo-cache --autoclean\n       run: |\n         cargo install cargo-cache --debug"}, {"sha": "d6f5db014a43c3d6bc601cd5f52b6dbf5bf08283", "filename": ".github/workflows/clippy_dev.yml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fclippy_dev.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fclippy_dev.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_dev.yml?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -19,23 +19,29 @@ jobs:\n     runs-on: ubuntu-latest\n \n     steps:\n+    # Setup\n     - name: rust-toolchain\n       uses: actions-rs/toolchain@v1.0.3\n       with:\n         toolchain: nightly\n         target: x86_64-unknown-linux-gnu\n         profile: minimal\n         components: rustfmt\n+\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n \n+    # Run\n     - name: Build\n       run: cargo build --features deny-warnings\n       working-directory: clippy_dev\n+\n     - name: Test limit-stderr-length\n       run: cargo dev --limit-stderr-length\n+\n     - name: Test update_lints\n       run: cargo dev update_lints --check\n+\n     - name: Test fmt\n       run: cargo dev fmt --check\n "}, {"sha": "6f79891358eb27197179c4d1bcd9426cf361416b", "filename": ".github/workflows/deploy.yml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fdeploy.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fdeploy.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fdeploy.yml?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -17,13 +17,17 @@ jobs:\n     runs-on: ubuntu-latest\n \n     steps:\n+    # Setup\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n+\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n       with:\n         ref: ${{ env.TARGET_BRANCH }}\n         path: 'out'\n+\n+    # Run\n     - name: Deploy\n       run: |\n         eval \"$(ssh-agent -s)\""}, {"sha": "3544053d399a355f246e05edaf6bb1d4389d48f4", "filename": ".github/workflows/remark.yml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fremark.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/.github%2Fworkflows%2Fremark.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fremark.yml?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -12,13 +12,17 @@ jobs:\n     runs-on: ubuntu-latest\n \n     steps:\n+    # Setup\n     - name: Checkout\n       uses: actions/checkout@v2.0.0\n+\n     - name: Setup Node.js\n       uses: actions/setup-node@v1.1.0\n+\n     - name: Install remark\n       run: npm install remark-cli remark-lint remark-lint-maximum-line-length remark-preset-lint-recommended\n \n+    # Run\n     - name: Check *.md files\n       run: git ls-files -z '*.md' | xargs -0 -n 1 -I {} ./node_modules/.bin/remark {} -u lint -f > /dev/null\n "}, {"sha": "3aff8741f6051d7e6b95e525bc1a37812b3e2173", "filename": "tests/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47dada167dea3d889abd77b7ff584afdaaf0a86/tests%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47dada167dea3d889abd77b7ff584afdaaf0a86/tests%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffmt.rs?ref=b47dada167dea3d889abd77b7ff584afdaaf0a86", "patch": "@@ -3,7 +3,7 @@ use std::process::Command;\n \n #[test]\n fn fmt() {\n-    if option_env!(\"RUSTC_TEST_SUITE\").is_some() || option_env!(\"GHA_CI\").is_some() {\n+    if option_env!(\"RUSTC_TEST_SUITE\").is_some() || option_env!(\"NO_FMT_TEST\").is_some() {\n         return;\n     }\n "}]}