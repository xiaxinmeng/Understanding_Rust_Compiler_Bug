{"sha": "7853b780fc678e670362690ddeb8648d552db0bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NTNiNzgwZmM2NzhlNjcwMzYyNjkwZGRlYjg2NDhkNTUyZGIwYmY=", "commit": {"author": {"name": "Blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2018-12-22T04:00:11Z"}, "committer": {"name": "Blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2019-01-09T01:57:22Z"}, "message": "Some more refactoring.\n\nChange the key of UpvarListMap from DefId to ast::NodeId", "tree": {"sha": "091290c197612288e388a89b2db4f44442abe7e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/091290c197612288e388a89b2db4f44442abe7e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7853b780fc678e670362690ddeb8648d552db0bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7853b780fc678e670362690ddeb8648d552db0bf", "html_url": "https://github.com/rust-lang/rust/commit/7853b780fc678e670362690ddeb8648d552db0bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7853b780fc678e670362690ddeb8648d552db0bf/comments", "author": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "410b52958da4434c2638da15e6c6c9a7ef665761", "url": "https://api.github.com/repos/rust-lang/rust/commits/410b52958da4434c2638da15e6c6c9a7ef665761", "html_url": "https://github.com/rust-lang/rust/commit/410b52958da4434c2638da15e6c6c9a7ef665761"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8afe0241ac8638db66b3d2e182107398c0b42ecd", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7853b780fc678e670362690ddeb8648d552db0bf/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7853b780fc678e670362690ddeb8648d552db0bf/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=7853b780fc678e670362690ddeb8648d552db0bf", "patch": "@@ -589,8 +589,6 @@ impl<'a, 'gcx> HashStable<StableHashingContext<'a>> for ty::TyS<'gcx> {\n \n pub type Ty<'tcx> = &'tcx TyS<'tcx>;\n \n-pub type UpvarListMap<'tcx> = FxHashMap<DefId, Vec<UpvarId>>;\n-\n impl<'tcx> serialize::UseSpecializedEncodable for Ty<'tcx> {}\n impl<'tcx> serialize::UseSpecializedDecodable for Ty<'tcx> {}\n \n@@ -810,6 +808,7 @@ pub struct UpvarBorrow<'tcx> {\n     pub region: ty::Region<'tcx>,\n }\n \n+pub type UpvarListMap<'tcx> = FxHashMap<ast::NodeId, Vec<UpvarId>>;\n pub type UpvarCaptureMap<'tcx> = FxHashMap<UpvarId, UpvarCapture<'tcx>>;\n \n #[derive(Copy, Clone)]"}, {"sha": "4b0907f808364c749e32146d53da832eb7e77507", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7853b780fc678e670362690ddeb8648d552db0bf/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7853b780fc678e670362690ddeb8648d552db0bf/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=7853b780fc678e670362690ddeb8648d552db0bf", "patch": "@@ -642,6 +642,7 @@ fn construct_fn<'a, 'gcx, 'tcx, A>(hir: Cx<'a, 'gcx, 'tcx>,\n     let tcx = hir.tcx();\n     let span = tcx.hir().span(fn_id);\n \n+    // hir.tables().upvar_list[fn_id].\n     // Gather the upvars of a closure, if any.\n     let upvar_decls: Vec<_> = tcx.with_freevars(fn_id, |freevars| {\n         freevars.iter().map(|fv| {"}, {"sha": "24d13d9c2acfa3d38b064776aea00f9a27602f9e", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7853b780fc678e670362690ddeb8648d552db0bf/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7853b780fc678e670362690ddeb8648d552db0bf/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=7853b780fc678e670362690ddeb8648d552db0bf", "patch": "@@ -159,7 +159,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             self.tables\n                 .borrow_mut()\n                 .upvar_list\n-                .insert(closure_def_id, freevar_list);\n+                .insert(closure_node_id, freevar_list);\n         });\n \n         let body_owner_def_id = self.tcx.hir().body_owner_def_id(body.id());"}]}