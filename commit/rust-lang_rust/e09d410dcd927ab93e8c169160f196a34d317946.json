{"sha": "e09d410dcd927ab93e8c169160f196a34d317946", "node_id": "C_kwDOAAsO6NoAKGUwOWQ0MTBkY2Q5MjdhYjkzZThjMTY5MTYwZjE5NmEzNGQzMTc5NDY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-07T14:06:56Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-07T14:06:56Z"}, "message": "Simplify", "tree": {"sha": "12faa7734bb045472ce81c259d32b5b27fc454d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12faa7734bb045472ce81c259d32b5b27fc454d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e09d410dcd927ab93e8c169160f196a34d317946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e09d410dcd927ab93e8c169160f196a34d317946", "html_url": "https://github.com/rust-lang/rust/commit/e09d410dcd927ab93e8c169160f196a34d317946", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e09d410dcd927ab93e8c169160f196a34d317946/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b66f181bc07c5d3b22755dc997e4c1fc2d6b84c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b66f181bc07c5d3b22755dc997e4c1fc2d6b84c2", "html_url": "https://github.com/rust-lang/rust/commit/b66f181bc07c5d3b22755dc997e4c1fc2d6b84c2"}], "stats": {"total": 71, "additions": 35, "deletions": 36}, "files": [{"sha": "50799738d16f7f3043f1de4ba360c731f6b96db6", "filename": "crates/ide/src/navigation_target.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fnavigation_target.rs?ref=e09d410dcd927ab93e8c169160f196a34d317946", "patch": "@@ -9,7 +9,6 @@ use hir::{\n };\n use ide_db::{\n     base_db::{FileId, FileRange},\n-    symbol_index::FileSymbolKind,\n     SymbolKind,\n };\n use ide_db::{defs::Definition, RootDatabase};\n@@ -174,18 +173,7 @@ impl TryToNav for FileSymbol {\n         Some(NavigationTarget {\n             file_id: full_range.file_id,\n             name: self.name.clone(),\n-            kind: Some(match self.kind {\n-                FileSymbolKind::Function => SymbolKind::Function,\n-                FileSymbolKind::Struct => SymbolKind::Struct,\n-                FileSymbolKind::Enum => SymbolKind::Enum,\n-                FileSymbolKind::Trait => SymbolKind::Trait,\n-                FileSymbolKind::Module => SymbolKind::Module,\n-                FileSymbolKind::TypeAlias => SymbolKind::TypeAlias,\n-                FileSymbolKind::Const => SymbolKind::Const,\n-                FileSymbolKind::Static => SymbolKind::Static,\n-                FileSymbolKind::Macro => SymbolKind::Macro,\n-                FileSymbolKind::Union => SymbolKind::Union,\n-            }),\n+            kind: Some(self.kind.into()),\n             full_range: full_range.range,\n             focus_range: Some(name_range.range),\n             container_name: self.container_name.clone(),\n@@ -367,13 +355,7 @@ impl TryToNav for hir::MacroDef {\n         let mut res = NavigationTarget::from_named(\n             db,\n             src.as_ref().with_value(name_owner),\n-            match self.kind() {\n-                hir::MacroKind::Declarative\n-                | hir::MacroKind::BuiltIn\n-                | hir::MacroKind::ProcMacro => SymbolKind::Macro,\n-                hir::MacroKind::Derive => SymbolKind::Derive,\n-                hir::MacroKind::Attr => SymbolKind::Attribute,\n-            },\n+            self.kind().into(),\n         );\n         res.docs = self.docs(db);\n         Some(res)"}, {"sha": "05d2732251ff70866c60694fa14ed558cb3bd7c9", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=e09d410dcd927ab93e8c169160f196a34d317946", "patch": "@@ -375,13 +375,7 @@ fn highlight_def(\n ) -> Highlight {\n     let db = sema.db;\n     let mut h = match def {\n-        Definition::Macro(m) => Highlight::new(HlTag::Symbol(match m.kind() {\n-            hir::MacroKind::Declarative | hir::MacroKind::BuiltIn | hir::MacroKind::ProcMacro => {\n-                SymbolKind::Macro\n-            }\n-            hir::MacroKind::Derive => SymbolKind::Derive,\n-            hir::MacroKind::Attr => SymbolKind::Attribute,\n-        })),\n+        Definition::Macro(m) => Highlight::new(HlTag::Symbol(m.kind().into())),\n         Definition::Field(_) => Highlight::new(HlTag::Symbol(SymbolKind::Field)),\n         Definition::Module(module) => {\n             let mut h = Highlight::new(HlTag::Symbol(SymbolKind::Module));"}, {"sha": "4b505b3f5ad3c18200155bc87bc086186d82b7cd", "filename": "crates/ide_completion/src/render/macro_.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs?ref=e09d410dcd927ab93e8c169160f196a34d317946", "patch": "@@ -52,14 +52,8 @@ impl<'a> MacroRender<'a> {\n         } else {\n             Some(self.ctx.source_range())\n         }?;\n-        let kind = match self.macro_.kind() {\n-            hir::MacroKind::Derive => SymbolKind::Derive,\n-            hir::MacroKind::Attr => SymbolKind::Attribute,\n-            hir::MacroKind::BuiltIn | hir::MacroKind::Declarative | hir::MacroKind::ProcMacro => {\n-                SymbolKind::Macro\n-            }\n-        };\n-        let mut item = CompletionItem::new(kind, source_range, self.label());\n+        let mut item =\n+            CompletionItem::new(SymbolKind::from(self.macro_.kind()), source_range, self.label());\n         item.set_deprecated(self.ctx.is_deprecated(self.macro_)).set_detail(self.detail());\n \n         if let Some(import_to_add) = import_to_add {"}, {"sha": "bcbb09e31b5a33a0a6d88c1b9bcc90f1d0718e32", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=e09d410dcd927ab93e8c169160f196a34d317946", "patch": "@@ -171,6 +171,18 @@ pub enum SymbolKind {\n     Variant,\n }\n \n+impl From<hir::MacroKind> for SymbolKind {\n+    fn from(it: hir::MacroKind) -> Self {\n+        match it {\n+            hir::MacroKind::Declarative | hir::MacroKind::BuiltIn | hir::MacroKind::ProcMacro => {\n+                SymbolKind::Macro\n+            }\n+            hir::MacroKind::Derive => SymbolKind::Derive,\n+            hir::MacroKind::Attr => SymbolKind::Attribute,\n+        }\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     mod sourcegen_lints;"}, {"sha": "e8c6ec3e0ee864bbf488b6001ea7356b5971e554", "filename": "crates/ide_db/src/symbol_index.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09d410dcd927ab93e8c169160f196a34d317946/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=e09d410dcd927ab93e8c169160f196a34d317946", "patch": "@@ -44,7 +44,7 @@ use rayon::prelude::*;\n use rustc_hash::FxHashSet;\n use syntax::{ast::HasName, AstNode, SmolStr, SyntaxNode, SyntaxNodePtr};\n \n-use crate::RootDatabase;\n+use crate::{RootDatabase, SymbolKind};\n \n #[derive(Debug)]\n pub struct Query {\n@@ -430,6 +430,23 @@ impl FileSymbolKind {\n     }\n }\n \n+impl From<FileSymbolKind> for SymbolKind {\n+    fn from(it: FileSymbolKind) -> Self {\n+        match it {\n+            FileSymbolKind::Const => SymbolKind::Const,\n+            FileSymbolKind::Enum => SymbolKind::Enum,\n+            FileSymbolKind::Function => SymbolKind::Function,\n+            FileSymbolKind::Macro => SymbolKind::Macro,\n+            FileSymbolKind::Module => SymbolKind::Module,\n+            FileSymbolKind::Static => SymbolKind::Static,\n+            FileSymbolKind::Struct => SymbolKind::Struct,\n+            FileSymbolKind::Trait => SymbolKind::Trait,\n+            FileSymbolKind::TypeAlias => SymbolKind::TypeAlias,\n+            FileSymbolKind::Union => SymbolKind::Union,\n+        }\n+    }\n+}\n+\n /// Represents an outstanding module that the symbol collector must collect symbols from.\n struct SymbolCollectorWork {\n     module_id: ModuleId,"}]}