{"sha": "67d1f0a9aafaa7dcd63b86032127ab660e630c46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZDFmMGE5YWFmYWE3ZGNkNjNiODYwMzIxMjdhYjY2MGU2MzBjNDY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T22:43:55Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T22:43:55Z"}, "message": "Emit gc glue and rearrange crate glue offsets slightly to have a regular order.", "tree": {"sha": "c563f52cefc275b0e9d4fd56fdb74d224cd70df7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c563f52cefc275b0e9d4fd56fdb74d224cd70df7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67d1f0a9aafaa7dcd63b86032127ab660e630c46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67d1f0a9aafaa7dcd63b86032127ab660e630c46", "html_url": "https://github.com/rust-lang/rust/commit/67d1f0a9aafaa7dcd63b86032127ab660e630c46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67d1f0a9aafaa7dcd63b86032127ab660e630c46/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e3fa5bd68677762c619d83dfdf1a83ba7f0e749", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e3fa5bd68677762c619d83dfdf1a83ba7f0e749", "html_url": "https://github.com/rust-lang/rust/commit/2e3fa5bd68677762c619d83dfdf1a83ba7f0e749"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "1a432086a650dd9d7245299214b551dc98925eef", "filename": "src/boot/be/abi.ml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fbe%2Fabi.ml", "raw_url": "https://github.com/rust-lang/rust/raw/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fbe%2Fabi.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fabi.ml?ref=67d1f0a9aafaa7dcd63b86032127ab660e630c46", "patch": "@@ -145,6 +145,7 @@ type abi =\n     abi_activate: (Il.emitter -> unit);\n     abi_yield: (Il.emitter -> unit);\n     abi_unwind: (Il.emitter -> Common.nabi -> Common.fixup -> unit);\n+    abi_gc: (Il.emitter -> unit);\n     abi_get_next_pc_thunk:\n       ((Il.reg                   (* output            *)\n         * Common.fixup           (* thunk in objfile  *)"}, {"sha": "57382c882cb4e10c03a0211d54dc56cb843acea4", "filename": "src/boot/be/x86.ml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fbe%2Fx86.ml", "raw_url": "https://github.com/rust-lang/rust/raw/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fbe%2Fx86.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fx86.ml?ref=67d1f0a9aafaa7dcd63b86032127ab660e630c46", "patch": "@@ -1627,6 +1627,7 @@ let (abi:Abi.abi) =\n     Abi.abi_activate = activate_glue;\n     Abi.abi_yield = yield_glue;\n     Abi.abi_unwind = unwind_glue;\n+    Abi.abi_gc = gc_glue;\n     Abi.abi_get_next_pc_thunk = Some get_next_pc_thunk;\n \n     Abi.abi_sp_reg = (Il.Hreg esp);"}, {"sha": "6a2c6a05f69ae8e718d62e6f05a07a0d37276f0f", "filename": "src/boot/llvm/llabi.ml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fllvm%2Fllabi.ml", "raw_url": "https://github.com/rust-lang/rust/raw/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fllvm%2Fllabi.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Fllabi.ml?ref=67d1f0a9aafaa7dcd63b86032127ab660e630c46", "patch": "@@ -23,9 +23,10 @@ let declare_abi (llctx:Llvm.llcontext) (llmod:Llvm.llmodule) : abi =\n         i32;                              (* ptrdiff_t debug_info_off *)\n         i32;                              (* size_t debug_info_sz *)\n         i32;                              (* size_t activate_glue_off *)\n-        i32;                              (* size_t main_exit_task_glue_off *)\n-        i32;                              (* size_t unwind_glue_off *)\n         i32;                              (* size_t yield_glue_off *)\n+        i32;                              (* size_t unwind_glue_off *)\n+        i32;                              (* size_t gc_glue_off *)\n+        i32;                              (* size_t main_exit_task_glue_off *)\n         i32;                              (* int n_rust_syms *)\n         i32;                              (* int n_c_syms *)\n         i32                               (* int n_libs *)"}, {"sha": "fd65fa6b089f1a2bb97d804eed0abf2cf7245e64", "filename": "src/boot/llvm/llfinal.ml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fllvm%2Fllfinal.ml", "raw_url": "https://github.com/rust-lang/rust/raw/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fllvm%2Fllfinal.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Fllfinal.ml?ref=67d1f0a9aafaa7dcd63b86032127ab660e630c46", "patch": "@@ -53,9 +53,10 @@ let finalize_module\n       Llvm.const_int i32 0;             (* ptrdiff_t debug_info_off *)\n       Llvm.const_int i32 0;             (* size_t debug_info_sz *)\n       activate_glue_off;                (* size_t activate_glue_off *)\n-      exit_task_glue_off;               (* size_t main_exit_task_glue_off *)\n-      Llvm.const_int i32 0;             (* size_t unwind_glue_off *)\n       yield_glue_off;                   (* size_t yield_glue_off *)\n+      Llvm.const_int i32 0;             (* size_t unwind_glue_off *)\n+      Llvm.const_int i32 0;             (* size_t gc_glue_off *)\n+      exit_task_glue_off;               (* size_t main_exit_task_glue_off *)\n       Llvm.const_int i32 rust_fn_count; (* int n_rust_syms *)\n       Llvm.const_int i32 c_fn_count;    (* int n_c_syms *)\n       Llvm.const_int i32 0              (* int n_libs *)"}, {"sha": "41e6a55a63009a6614ec9d00e1010de6b4a25330", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=67d1f0a9aafaa7dcd63b86032127ab660e630c46", "patch": "@@ -30,6 +30,7 @@ type glue =\n   | GLUE_write of Ast.ty\n   | GLUE_read of Ast.ty\n   | GLUE_unwind\n+  | GLUE_gc\n   | GLUE_get_next_pc\n   | GLUE_mark_frame of node_id    (* node is the frame                 *)\n   | GLUE_drop_frame of node_id    (* node is the frame                 *)\n@@ -135,6 +136,7 @@ type ctxt =\n       ctxt_spill_fixups: (node_id,fixup) Hashtbl.t;\n       ctxt_abi: Abi.abi;\n       ctxt_activate_fixup: fixup;\n+      ctxt_gc_fixup: fixup;\n       ctxt_yield_fixup: fixup;\n       ctxt_unwind_fixup: fixup;\n       ctxt_exit_task_fixup: fixup;\n@@ -218,6 +220,7 @@ let new_ctxt sess abi crate =\n     ctxt_activate_fixup = new_fixup \"activate glue\";\n     ctxt_yield_fixup = new_fixup \"yield glue\";\n     ctxt_unwind_fixup = new_fixup \"unwind glue\";\n+    ctxt_gc_fixup = new_fixup \"gc glue\";\n     ctxt_exit_task_fixup = new_fixup \"exit-task glue\";\n \n     ctxt_debug_aranges_fixup = new_fixup \"debug_aranges section\";\n@@ -1989,6 +1992,7 @@ let glue_str (cx:ctxt) (g:glue) : string =\n     | GLUE_write ty -> \"glue$write$\" ^ (ty_str ty)\n     | GLUE_read ty -> \"glue$read$\" ^ (ty_str ty)\n     | GLUE_unwind -> \"glue$unwind\"\n+    | GLUE_gc -> \"glue$gc\"\n     | GLUE_get_next_pc -> \"glue$get_next_pc\"\n     | GLUE_mark_frame i -> \"glue$mark_frame$\" ^ (item_str cx i)\n     | GLUE_drop_frame i -> \"glue$drop_frame$\" ^ (item_str cx i)"}, {"sha": "a00f0b251f9ba995f6562d0b8f1adb34738cfdb7", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=67d1f0a9aafaa7dcd63b86032127ab660e630c46", "patch": "@@ -4891,9 +4891,10 @@ let trans_visitor\n             Asm.WORD (word_ty_mach, Asm.M_SZ cx.ctxt_debug_info_fixup);\n \n             crate_rel_word cx.ctxt_activate_fixup;\n-            crate_rel_word cx.ctxt_exit_task_fixup;\n-            crate_rel_word cx.ctxt_unwind_fixup;\n             crate_rel_word cx.ctxt_yield_fixup;\n+            crate_rel_word cx.ctxt_unwind_fixup;\n+            crate_rel_word cx.ctxt_gc_fixup;\n+            crate_rel_word cx.ctxt_exit_task_fixup;\n \n             tab_sz cx.ctxt_required_rust_sym_num;\n             tab_sz cx.ctxt_required_c_sym_num;\n@@ -4915,6 +4916,10 @@ let trans_visitor\n         (fun e -> abi.Abi.abi_unwind\n            e nabi_rust (upcall_fixup \"upcall_exit\"));\n \n+      emit_aux_global_glue cx GLUE_gc\n+        cx.ctxt_gc_fixup\n+        abi.Abi.abi_gc;\n+\n       ignore (get_exit_task_glue ());\n \n       begin"}, {"sha": "3c4fde2a24cf10ab1cf44ee823c2a01ed31f6beb", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/67d1f0a9aafaa7dcd63b86032127ab660e630c46/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=67d1f0a9aafaa7dcd63b86032127ab660e630c46", "patch": "@@ -263,9 +263,10 @@ rust_crate\n     size_t debug_info_sz;         // Size of .debug_info.\n \n     ptrdiff_t activate_glue_off;\n-    ptrdiff_t exit_task_glue_off;\n-    ptrdiff_t unwind_glue_off;\n     ptrdiff_t yield_glue_off;\n+    ptrdiff_t unwind_glue_off;\n+    ptrdiff_t gc_glue_off;\n+    ptrdiff_t exit_task_glue_off;\n \n public:\n \n@@ -278,9 +279,11 @@ rust_crate\n     uintptr_t get_image_base() const;\n     ptrdiff_t get_relocation_diff() const;\n     activate_glue_ty get_activate_glue() const;\n-    uintptr_t get_exit_task_glue() const;\n-    uintptr_t get_unwind_glue() const;\n     uintptr_t get_yield_glue() const;\n+    uintptr_t get_unwind_glue() const;\n+    uintptr_t get_gc_glue() const;\n+    uintptr_t get_exit_task_glue() const;\n+\n     struct mem_area\n     {\n       rust_dom *dom;"}]}