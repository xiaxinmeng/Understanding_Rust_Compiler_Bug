{"sha": "0549516230e9286ed75e3c59cd928e8ba1d6969c", "node_id": "C_kwDOAAsO6NoAKDA1NDk1MTYyMzBlOTI4NmVkNzVlM2M1OWNkOTI4ZThiYTFkNjk2OWM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-22T21:26:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-22T21:26:09Z"}, "message": "Rollup merge of #99602 - RalfJung:xsv, r=Mark-Simulacrum\n\ncargotest: do not run quickcheck tests in xsv\n\nFixes https://github.com/rust-lang/rust/issues/73514\nI know https://github.com/rust-lang/rust/issues/70659 discusses a larger overhaul of cargotest, but that seems to have stalled and I'd like to fix the immediate issue of PRs failing due to random test failures in xsv.\n\nThis still runs the vast majority of tests by numbers:\n```\ntest result: ok. 394 passed; 0 failed; 0 ignored; 0 measured; 32 filtered out; finished in 1.84s\n```\nSo the loss in test coverage is hopefully not too big.", "tree": {"sha": "b7f3c11c05c8cbdc171dc4bc9a40f47237145709", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7f3c11c05c8cbdc171dc4bc9a40f47237145709"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0549516230e9286ed75e3c59cd928e8ba1d6969c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi2xXxCRBK7hj4Ov3rIwAAnkoIAHV0mRfbpHod32c/9Y/dAQyD\nWpc+BBFWX0Ji/jnvZxJKP45a0467QQ8ZVQayl6vW9zM5RAdwTReswxCHQOOdEJCj\n0WJMOUcHLgl+KQREiHxv9AUKzXGnZXU5bZgL3nq6s4jiT6YUsOx9aDUkBnbeatDl\nlTlkTXBo5Dr6rUxdZ/EtfyxIBAEMsdnkksgGEBYgcj3dHOG1N/TbBJBogndnpVDC\niWaLes5Agth1Y+ukXzLBM+US/xe2hW4MWSDj5O4BGREDSGjHKxkIWxlzN6x0VdAP\njZJ9Oz5SoTRMaDyCGu/kRHJRHWK8xjUZlQK/e73RwRZUzaxRYsVdAT2cT0OVpJo=\n=NukJ\n-----END PGP SIGNATURE-----\n", "payload": "tree b7f3c11c05c8cbdc171dc4bc9a40f47237145709\nparent e51a4762b57aa7cfe23434d07af62545485159c8\nparent 77be253c9bd255becf8b86c48e08919e8f825bdc\nauthor Ralf Jung <post@ralfj.de> 1658525169 -0400\ncommitter GitHub <noreply@github.com> 1658525169 -0400\n\nRollup merge of #99602 - RalfJung:xsv, r=Mark-Simulacrum\n\ncargotest: do not run quickcheck tests in xsv\n\nFixes https://github.com/rust-lang/rust/issues/73514\nI know https://github.com/rust-lang/rust/issues/70659 discusses a larger overhaul of cargotest, but that seems to have stalled and I'd like to fix the immediate issue of PRs failing due to random test failures in xsv.\n\nThis still runs the vast majority of tests by numbers:\n```\ntest result: ok. 394 passed; 0 failed; 0 ignored; 0 measured; 32 filtered out; finished in 1.84s\n```\nSo the loss in test coverage is hopefully not too big.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0549516230e9286ed75e3c59cd928e8ba1d6969c", "html_url": "https://github.com/rust-lang/rust/commit/0549516230e9286ed75e3c59cd928e8ba1d6969c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0549516230e9286ed75e3c59cd928e8ba1d6969c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e51a4762b57aa7cfe23434d07af62545485159c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e51a4762b57aa7cfe23434d07af62545485159c8", "html_url": "https://github.com/rust-lang/rust/commit/e51a4762b57aa7cfe23434d07af62545485159c8"}, {"sha": "77be253c9bd255becf8b86c48e08919e8f825bdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/77be253c9bd255becf8b86c48e08919e8f825bdc", "html_url": "https://github.com/rust-lang/rust/commit/77be253c9bd255becf8b86c48e08919e8f825bdc"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "95fe98a683ffdb66748054c965dc9159e7a91e54", "filename": "src/tools/cargotest/main.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0549516230e9286ed75e3c59cd928e8ba1d6969c/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0549516230e9286ed75e3c59cd928e8ba1d6969c/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=0549516230e9286ed75e3c59cd928e8ba1d6969c", "patch": "@@ -11,6 +11,8 @@ struct Test {\n     packages: &'static [&'static str],\n     features: Option<&'static [&'static str]>,\n     manifest_path: Option<&'static str>,\n+    /// `filters` are passed to libtest (i.e., after a `--` in the `cargo test` invocation).\n+    filters: &'static [&'static str],\n }\n \n const TEST_REPOS: &[Test] = &[\n@@ -22,6 +24,7 @@ const TEST_REPOS: &[Test] = &[\n         packages: &[],\n         features: None,\n         manifest_path: None,\n+        filters: &[],\n     },\n     Test {\n         name: \"ripgrep\",\n@@ -31,6 +34,7 @@ const TEST_REPOS: &[Test] = &[\n         packages: &[],\n         features: None,\n         manifest_path: None,\n+        filters: &[],\n     },\n     Test {\n         name: \"tokei\",\n@@ -40,6 +44,7 @@ const TEST_REPOS: &[Test] = &[\n         packages: &[],\n         features: None,\n         manifest_path: None,\n+        filters: &[],\n     },\n     Test {\n         name: \"xsv\",\n@@ -49,6 +54,21 @@ const TEST_REPOS: &[Test] = &[\n         packages: &[],\n         features: None,\n         manifest_path: None,\n+        // Many tests here use quickcheck and some of them can fail randomly, so only run deterministic tests.\n+        filters: &[\n+            \"test_flatten::\",\n+            \"test_fmt::\",\n+            \"test_headers::\",\n+            \"test_index::\",\n+            \"test_join::\",\n+            \"test_partition::\",\n+            \"test_search::\",\n+            \"test_select::\",\n+            \"test_slice::\",\n+            \"test_split::\",\n+            \"test_stats::\",\n+            \"test_table::\",\n+        ],\n     },\n     Test {\n         name: \"servo\",\n@@ -60,6 +80,7 @@ const TEST_REPOS: &[Test] = &[\n         packages: &[\"selectors\"],\n         features: None,\n         manifest_path: None,\n+        filters: &[],\n     },\n     Test {\n         name: \"diesel\",\n@@ -75,6 +96,7 @@ const TEST_REPOS: &[Test] = &[\n         // not any other crate present in the diesel workspace\n         // (This is required to set the feature flags above)\n         manifest_path: Some(\"diesel/Cargo.toml\"),\n+        filters: &[],\n     },\n ];\n \n@@ -97,7 +119,8 @@ fn test_repo(cargo: &Path, out_dir: &Path, test: &Test) {\n     if let Some(lockfile) = test.lock {\n         fs::write(&dir.join(\"Cargo.lock\"), lockfile).unwrap();\n     }\n-    if !run_cargo_test(cargo, &dir, test.packages, test.features, test.manifest_path) {\n+    if !run_cargo_test(cargo, &dir, test.packages, test.features, test.manifest_path, test.filters)\n+    {\n         panic!(\"tests failed for {}\", test.repo);\n     }\n }\n@@ -155,6 +178,7 @@ fn run_cargo_test(\n     packages: &[&str],\n     features: Option<&[&str]>,\n     manifest_path: Option<&str>,\n+    filters: &[&str],\n ) -> bool {\n     let mut command = Command::new(cargo_path);\n     command.arg(\"test\");\n@@ -174,6 +198,9 @@ fn run_cargo_test(\n         command.arg(\"-p\").arg(name);\n     }\n \n+    command.arg(\"--\");\n+    command.args(filters);\n+\n     let status = command\n         // Disable rust-lang/cargo's cross-compile tests\n         .env(\"CFG_DISABLE_CROSS_TESTS\", \"1\")"}]}