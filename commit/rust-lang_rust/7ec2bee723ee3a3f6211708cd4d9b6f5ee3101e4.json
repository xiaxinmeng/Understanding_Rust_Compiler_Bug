{"sha": "7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYzJiZWU3MjNlZTNhM2Y2MjExNzA4Y2Q0ZDliNmY1ZWUzMTAxZTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-22T16:31:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-22T16:31:12Z"}, "message": "Auto merge of #1874 - steffahn:a_an, r=RalfJung\n\nFix typos \u201ca\u201d\u2192\u201can\u201d\n\nSee rust-lang/rust#88230", "tree": {"sha": "16dc1b8e59a39c889914cdf21744b29dfebe62ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16dc1b8e59a39c889914cdf21744b29dfebe62ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "html_url": "https://github.com/rust-lang/rust/commit/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19691b2de84f0f35a6633d5409101f7f4b93662a", "url": "https://api.github.com/repos/rust-lang/rust/commits/19691b2de84f0f35a6633d5409101f7f4b93662a", "html_url": "https://github.com/rust-lang/rust/commit/19691b2de84f0f35a6633d5409101f7f4b93662a"}, {"sha": "c79f6dd5a0769aa753bf04442cf70e1af98f0962", "url": "https://api.github.com/repos/rust-lang/rust/commits/c79f6dd5a0769aa753bf04442cf70e1af98f0962", "html_url": "https://github.com/rust-lang/rust/commit/c79f6dd5a0769aa753bf04442cf70e1af98f0962"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9e5dfd9dbaf0d39596a82932164169fb777ba62d", "filename": "src/data_race.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4/src%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4/src%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdata_race.rs?ref=7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "patch": "@@ -42,7 +42,7 @@\n //!    order exists in which all threads observe all modifications in the same\n //!    order (see Sequentially-consistent ordering below) \"\n //! So in the absence of weak memory effects a seq-cst load & a seq-cst store is identical\n-//! to a acquire load and a release store given the global sequentially consistent order\n+//! to an acquire load and a release store given the global sequentially consistent order\n //! of the schedule.\n //!\n //! The timestamps used in the data-race detector assign each sequence of non-atomic operations\n@@ -142,7 +142,7 @@ impl ThreadClockSet {\n         self.fence_release.clone_from(&self.clock);\n     }\n \n-    /// Apply the effects of a acquire fence to this\n+    /// Apply the effects of an acquire fence to this\n     /// set of thread vector clocks.\n     #[inline]\n     fn apply_acquire_fence(&mut self) {\n@@ -503,7 +503,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: MiriEvalContextExt<'mir, 'tcx> {\n         this.validate_atomic_store(dest, atomic)\n     }\n \n-    /// Perform a atomic operation on a memory location.\n+    /// Perform an atomic operation on a memory location.\n     fn atomic_op_immediate(\n         &mut self,\n         place: &MPlaceTy<'tcx, Tag>,\n@@ -695,7 +695,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: MiriEvalContextExt<'mir, 'tcx> {\n                 log::trace!(\"Atomic fence on {:?} with ordering {:?}\", index, atomic);\n \n                 // Apply data-race detection for the current fences\n-                // this treats AcqRel and SeqCst as the same as a acquire\n+                // this treats AcqRel and SeqCst as the same as an acquire\n                 // and release fence applied in the same timestamp.\n                 if atomic != AtomicFenceOp::Release {\n                     // Either Acquire | AcqRel | SeqCst"}, {"sha": "1b683169023563000f19f35b41dbb00446e83449", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "patch": "@@ -78,7 +78,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         self.eval_context_mut().eval_path_scalar(&[\"std\", \"sys\", \"windows\", module, name])\n     }\n \n-    /// Helper function to get a `windows` constant as an `u64`.\n+    /// Helper function to get a `windows` constant as a `u64`.\n     fn eval_windows_u64(&mut self, module: &str, name: &str) -> InterpResult<'tcx, u64> {\n         // TODO: Cache the result.\n         self.eval_windows(module, name)?.to_u64()"}]}