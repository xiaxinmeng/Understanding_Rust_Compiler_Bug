{"sha": "3c1a1c622776da5741f178658c611ccf0f75755f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMWExYzYyMjc3NmRhNTc0MWYxNzg2NThjNjExY2NmMGY3NTc1NWY=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2021-01-02T22:38:18Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2021-01-24T20:28:28Z"}, "message": "Add tests", "tree": {"sha": "84a12649f9252ea7aa3958624845bc0227e62dfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84a12649f9252ea7aa3958624845bc0227e62dfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c1a1c622776da5741f178658c611ccf0f75755f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c1a1c622776da5741f178658c611ccf0f75755f", "html_url": "https://github.com/rust-lang/rust/commit/3c1a1c622776da5741f178658c611ccf0f75755f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c1a1c622776da5741f178658c611ccf0f75755f/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d3818152d8ab5649d2e5cc6d7851ed7c03055fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d3818152d8ab5649d2e5cc6d7851ed7c03055fe", "html_url": "https://github.com/rust-lang/rust/commit/7d3818152d8ab5649d2e5cc6d7851ed7c03055fe"}], "stats": {"total": 100, "additions": 90, "deletions": 10}, "files": [{"sha": "f51ba683cab2bd91a7728ef8bd28f58df522bbb9", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs?ref=3c1a1c622776da5741f178658c611ccf0f75755f", "patch": "@@ -48,6 +48,22 @@ fn main() {\n         (1 | 1,) => {} //~ ERROR unreachable\n         _ => {}\n     }\n+    match 0 {\n+        (0 | 1) | 1 => {} //~ ERROR unreachable\n+        _ => {}\n+    }\n+    match 0 {\n+        0 | (0 | 0) => {}\n+        //~^ ERROR unreachable\n+        _ => {}\n+    }\n+    match None {\n+        // There is only one error that correctly points to the whole subpattern\n+        Some(0) |\n+            Some( //~ ERROR unreachable\n+                0 | 0) => {}\n+        _ => {}\n+    }\n     match [0; 2] {\n         [0\n             | 0 //~ ERROR unreachable"}, {"sha": "f61e7f2281afc86d7a0fa8cc3a27e9f601a6c25b", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.stderr", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr?ref=3c1a1c622776da5741f178658c611ccf0f75755f", "patch": "@@ -77,58 +77,77 @@ LL |         (1 | 1,) => {}\n    |              ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:53:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:52:19\n+   |\n+LL |         (0 | 1) | 1 => {}\n+   |                   ^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:56:14\n+   |\n+LL |         0 | (0 | 0) => {}\n+   |              ^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:63:13\n+   |\n+LL | /             Some(\n+LL | |                 0 | 0) => {}\n+   | |______________________^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:69:15\n    |\n LL |             | 0\n    |               ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:55:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:71:15\n    |\n LL |             | 0] => {}\n    |               ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:63:10\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:79:10\n    |\n LL |         [1\n    |          ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:75:10\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:91:10\n    |\n LL |         [true\n    |          ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:82:36\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:98:36\n    |\n LL |         (true | false, None | Some(true\n    |                                    ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:98:14\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:114:14\n    |\n LL |         Some(0\n    |              ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:117:19\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:133:19\n    |\n LL |                 | false) => {}\n    |                   ^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:125:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:141:15\n    |\n LL |             | true) => {}\n    |               ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:131:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:147:15\n    |\n LL |             | true,\n    |               ^^^^\n \n-error: aborting due to 21 previous errors\n+error: aborting due to 24 previous errors\n "}, {"sha": "483edcebd6254443b53ecefdef45a91fddabcaa8", "filename": "src/test/ui/pattern/usefulness/issue-80501-or-pat-and-macro.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-80501-or-pat-and-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-80501-or-pat-and-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-80501-or-pat-and-macro.rs?ref=3c1a1c622776da5741f178658c611ccf0f75755f", "patch": "@@ -0,0 +1,27 @@\n+#![deny(unreachable_patterns)]\n+//~^ NOTE: lint level is defined here\n+pub enum TypeCtor {\n+    Slice,\n+    Array,\n+}\n+\n+pub struct ApplicationTy(TypeCtor);\n+\n+macro_rules! ty_app {\n+    ($ctor:pat) => {\n+        ApplicationTy($ctor) //~ ERROR unreachable pattern\n+    };\n+}\n+\n+fn _foo(ty: ApplicationTy) {\n+    match ty {\n+        ty_app!(TypeCtor::Array) | ty_app!(TypeCtor::Slice) => {} //~ NOTE: in this expansion\n+    }\n+\n+    // same as above, with the macro expanded\n+    match ty {\n+        ApplicationTy(TypeCtor::Array) | ApplicationTy(TypeCtor::Slice) => {}\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "9d12b4a20e953dbf6f56f0ca3cf1670859eb9dd3", "filename": "src/test/ui/pattern/usefulness/issue-80501-or-pat-and-macro.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-80501-or-pat-and-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c1a1c622776da5741f178658c611ccf0f75755f/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-80501-or-pat-and-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-80501-or-pat-and-macro.stderr?ref=3c1a1c622776da5741f178658c611ccf0f75755f", "patch": "@@ -0,0 +1,18 @@\n+error: unreachable pattern\n+  --> $DIR/issue-80501-or-pat-and-macro.rs:12:9\n+   |\n+LL |         ApplicationTy($ctor)\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |         ty_app!(TypeCtor::Array) | ty_app!(TypeCtor::Slice) => {}\n+   |                                    ------------------------ in this macro invocation\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-80501-or-pat-and-macro.rs:1:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}