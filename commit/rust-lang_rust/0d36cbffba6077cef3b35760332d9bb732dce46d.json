{"sha": "0d36cbffba6077cef3b35760332d9bb732dce46d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMzZjYmZmYmE2MDc3Y2VmM2IzNTc2MDMzMmQ5YmI3MzJkY2U0NmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-29T05:47:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-29T05:47:50Z"}, "message": "Merge pull request #2408 from rust-lang-nursery/rustup\n\nRustup to rustc 1.25.0-nightly (21882aad7 2018-01-28)", "tree": {"sha": "61e6244eee9c940abe74d2a3c233257473c5487f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61e6244eee9c940abe74d2a3c233257473c5487f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d36cbffba6077cef3b35760332d9bb732dce46d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJabrWGCRBK7hj4Ov3rIwAAdHIIABuGiiu+tmApwJUgkFASYLAu\n0shTzbZKowiTlm+bBiXCdrbfaD0+nnG81GraiWY4JwKzb1ReRM2T/WhVSbMnJdd3\nFg+5YxJjgPSZa6yV2U/LSh6ygXplwS2ImxeG4d+3K9lWU5iNILY2qnMZVfxzdJd9\n+pihwg4ccLzMAapHky4tj261FR8//78M0IPPZXxcN++SbJBTHmH8C6vrDcrp8K5r\nglazKlzAolZcFKCEUfjVWGEOOQ10qlvqw93im5mr0IsRURewS1Utxg7u13VQyE8d\nUny/TsRGakSxABvmBeH8jNJjHGAaUms4hijFCSK6pjMKCG74scctpecXGsXGxGg=\n=34F4\n-----END PGP SIGNATURE-----\n", "payload": "tree 61e6244eee9c940abe74d2a3c233257473c5487f\nparent 0a4634397ccf6a67196a567144bd107ca93b1267\nparent 4b9a0b86441a92e5f83a2c5c941590846ab7e2ff\nauthor Manish Goregaokar <manishsmail@gmail.com> 1517204870 +0530\ncommitter GitHub <noreply@github.com> 1517204870 +0530\n\nMerge pull request #2408 from rust-lang-nursery/rustup\n\nRustup to rustc 1.25.0-nightly (21882aad7 2018-01-28)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d36cbffba6077cef3b35760332d9bb732dce46d", "html_url": "https://github.com/rust-lang/rust/commit/0d36cbffba6077cef3b35760332d9bb732dce46d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d36cbffba6077cef3b35760332d9bb732dce46d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a4634397ccf6a67196a567144bd107ca93b1267", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a4634397ccf6a67196a567144bd107ca93b1267", "html_url": "https://github.com/rust-lang/rust/commit/0a4634397ccf6a67196a567144bd107ca93b1267"}, {"sha": "4b9a0b86441a92e5f83a2c5c941590846ab7e2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9a0b86441a92e5f83a2c5c941590846ab7e2ff", "html_url": "https://github.com/rust-lang/rust/commit/4b9a0b86441a92e5f83a2c5c941590846ab7e2ff"}], "stats": {"total": 421, "additions": 155, "deletions": 266}, "files": [{"sha": "04a5f157cf3dde3960542182dbcc3c3f4c360a11", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d36cbffba6077cef3b35760332d9bb732dce46d/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d36cbffba6077cef3b35760332d9bb732dce46d/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=0d36cbffba6077cef3b35760332d9bb732dce46d", "patch": "@@ -1167,7 +1167,8 @@ fn lint_unnecessary_fold(cx: &LateContext, expr: &hir::Expr, fold_args: &[hir::E\n \n             then {\n                 // Span containing `.fold(...)`\n-                let fold_span = fold_args[0].span.next_point().with_hi(fold_args[2].span.hi() + BytePos(1));\n+                let next_point = cx.sess().codemap().next_point(fold_args[0].span);\n+                let fold_span = next_point.with_hi(fold_args[2].span.hi() + BytePos(1));\n \n                 let sugg = if replacement_has_args {\n                     format!("}, {"sha": "e18c12744981cad302927511a01ab2de267ce0ef", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0d36cbffba6077cef3b35760332d9bb732dce46d/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d36cbffba6077cef3b35760332d9bb732dce46d/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=0d36cbffba6077cef3b35760332d9bb732dce46d", "patch": "@@ -502,9 +502,8 @@ impl<'a, 'b, 'c, T: LintContext<'c>> DiagnosticBuilderExt<'c, T> for rustc_error\n \n     fn suggest_remove_item(&mut self, cx: &T, item: Span, msg: &str) {\n         let mut remove_span = item;\n-        let fmpos = cx.sess()\n-            .codemap()\n-            .lookup_byte_offset(remove_span.next_point().hi());\n+        let hi = cx.sess().codemap().next_point(remove_span).hi();\n+        let fmpos = cx.sess().codemap().lookup_byte_offset(hi);\n \n         if let Some(ref src) = fmpos.fm.src {\n             let non_whitespace_offset = src[fmpos.pos.to_usize()..].find(|c| c != ' ' && c != '\\t' && c != '\\n');"}, {"sha": "c5f9f914d330b3c6b79f628870eb5a91bc944bcb", "filename": "main", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0a4634397ccf6a67196a567144bd107ca93b1267/main", "raw_url": "https://github.com/rust-lang/rust/raw/0a4634397ccf6a67196a567144bd107ca93b1267/main", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/main?ref=0a4634397ccf6a67196a567144bd107ca93b1267"}, {"sha": "a6473b0f909e1261658f1f7a9ec658a666f7126b", "filename": "tests/mut_mut_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmut_mut_macro.rs?ref=0d36cbffba6077cef3b35760332d9bb732dce46d", "patch": "@@ -1,5 +1,5 @@\n-\n-\n+#![feature(plugin)]\n+#![plugin(clippy)]\n #![deny(mut_mut, zero_ptr, cmp_nan)]\n #![allow(dead_code)]\n "}, {"sha": "261a403de57a8485e366a2c9db47bf29df502cea", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 116, "deletions": 194, "changes": 310, "blob_url": "https://github.com/rust-lang/rust/blob/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=0d36cbffba6077cef3b35760332d9bb732dce46d", "patch": "@@ -25,12 +25,10 @@ error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is\n    = help: consider replacing `for x in option.ok_or(\"x not found\")` with `if let Ok(x) = option.ok_or(\"x not found\")`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-  --> $DIR/for_loop.rs:32:5\n+  --> $DIR/for_loop.rs:32:14\n    |\n-32 | /     for x in v.iter().next() {\n-33 | |         println!(\"{}\", x);\n-34 | |     }\n-   | |_____^\n+32 |     for x in v.iter().next() {\n+   |              ^^^^^^^^^^^^^^^\n    |\n    = note: `-D iter-next-loop` implied by `-D warnings`\n \n@@ -71,12 +69,10 @@ error: this loop never actually loops\n    | |_____^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:86:5\n+  --> $DIR/for_loop.rs:86:14\n    |\n-86 | /     for i in 0..vec.len() {\n-87 | |         println!(\"{}\", vec[i]);\n-88 | |     }\n-   | |_____^\n+86 |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n    |\n    = note: `-D needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n@@ -85,156 +81,130 @@ help: consider using an iterator\n    |\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:95:5\n+  --> $DIR/for_loop.rs:95:14\n    |\n-95 | /     for i in 0..vec.len() {\n-96 | |         let _ = vec[i];\n-97 | |     }\n-   | |_____^\n+95 |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n 95 |     for <item> in &vec {\n    |\n \n error: the loop variable `j` is only used to index `STATIC`.\n-   --> $DIR/for_loop.rs:100:5\n+   --> $DIR/for_loop.rs:100:14\n     |\n-100 | /     for j in 0..4 {\n-101 | |         println!(\"{:?}\", STATIC[j]);\n-102 | |     }\n-    | |_____^\n+100 |     for j in 0..4 {\n+    |              ^^^^\n help: consider using an iterator\n     |\n 100 |     for <item> in STATIC.iter().take(4) {\n     |\n \n error: the loop variable `j` is only used to index `CONST`.\n-   --> $DIR/for_loop.rs:104:5\n+   --> $DIR/for_loop.rs:104:14\n     |\n-104 | /     for j in 0..4 {\n-105 | |         println!(\"{:?}\", CONST[j]);\n-106 | |     }\n-    | |_____^\n+104 |     for j in 0..4 {\n+    |              ^^^^\n help: consider using an iterator\n     |\n 104 |     for <item> in CONST.iter().take(4) {\n     |\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:108:5\n+   --> $DIR/for_loop.rs:108:14\n     |\n-108 | /     for i in 0..vec.len() {\n-109 | |         println!(\"{} {}\", vec[i], i);\n-110 | |     }\n-    | |_____^\n+108 |     for i in 0..vec.len() {\n+    |              ^^^^^^^^^^^^\n help: consider using an iterator\n     |\n 108 |     for (i, <item>) in vec.iter().enumerate() {\n     |\n \n error: the loop variable `i` is only used to index `vec2`.\n-   --> $DIR/for_loop.rs:116:5\n+   --> $DIR/for_loop.rs:116:14\n     |\n-116 | /     for i in 0..vec.len() {\n-117 | |         println!(\"{}\", vec2[i]);\n-118 | |     }\n-    | |_____^\n+116 |     for i in 0..vec.len() {\n+    |              ^^^^^^^^^^^^\n help: consider using an iterator\n     |\n 116 |     for <item> in vec2.iter().take(vec.len()) {\n     |\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:120:5\n+   --> $DIR/for_loop.rs:120:14\n     |\n-120 | /     for i in 5..vec.len() {\n-121 | |         println!(\"{}\", vec[i]);\n-122 | |     }\n-    | |_____^\n+120 |     for i in 5..vec.len() {\n+    |              ^^^^^^^^^^^^\n help: consider using an iterator\n     |\n 120 |     for <item> in vec.iter().skip(5) {\n     |\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:124:5\n+   --> $DIR/for_loop.rs:124:14\n     |\n-124 | /     for i in 0..MAX_LEN {\n-125 | |         println!(\"{}\", vec[i]);\n-126 | |     }\n-    | |_____^\n+124 |     for i in 0..MAX_LEN {\n+    |              ^^^^^^^^^^\n help: consider using an iterator\n     |\n 124 |     for <item> in vec.iter().take(MAX_LEN) {\n     |\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:128:5\n+   --> $DIR/for_loop.rs:128:14\n     |\n-128 | /     for i in 0..=MAX_LEN {\n-129 | |         println!(\"{}\", vec[i]);\n-130 | |     }\n-    | |_____^\n+128 |     for i in 0..=MAX_LEN {\n+    |              ^^^^^^^^^^^\n help: consider using an iterator\n     |\n 128 |     for <item> in vec.iter().take(MAX_LEN + 1) {\n     |\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:132:5\n+   --> $DIR/for_loop.rs:132:14\n     |\n-132 | /     for i in 5..10 {\n-133 | |         println!(\"{}\", vec[i]);\n-134 | |     }\n-    | |_____^\n+132 |     for i in 5..10 {\n+    |              ^^^^^\n help: consider using an iterator\n     |\n 132 |     for <item> in vec.iter().take(10).skip(5) {\n     |\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:136:5\n+   --> $DIR/for_loop.rs:136:14\n     |\n-136 | /     for i in 5..=10 {\n-137 | |         println!(\"{}\", vec[i]);\n-138 | |     }\n-    | |_____^\n+136 |     for i in 5..=10 {\n+    |              ^^^^^^\n help: consider using an iterator\n     |\n 136 |     for <item> in vec.iter().take(10 + 1).skip(5) {\n     |\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:140:5\n+   --> $DIR/for_loop.rs:140:14\n     |\n-140 | /     for i in 5..vec.len() {\n-141 | |         println!(\"{} {}\", vec[i], i);\n-142 | |     }\n-    | |_____^\n+140 |     for i in 5..vec.len() {\n+    |              ^^^^^^^^^^^^\n help: consider using an iterator\n     |\n 140 |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n     |\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:144:5\n+   --> $DIR/for_loop.rs:144:14\n     |\n-144 | /     for i in 5..10 {\n-145 | |         println!(\"{} {}\", vec[i], i);\n-146 | |     }\n-    | |_____^\n+144 |     for i in 5..10 {\n+    |              ^^^^^\n help: consider using an iterator\n     |\n 144 |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n     |\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:148:5\n+   --> $DIR/for_loop.rs:148:14\n     |\n-148 | /     for i in 10..0 {\n-149 | |         println!(\"{}\", i);\n-150 | |     }\n-    | |_____^\n+148 |     for i in 10..0 {\n+    |              ^^^^^\n     |\n     = note: `-D reverse-range-loop` implied by `-D warnings`\n help: consider using the following if you are attempting to iterate over this range in reverse\n@@ -243,68 +213,56 @@ help: consider using the following if you are attempting to iterate over this ra\n     |              ^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:152:5\n+   --> $DIR/for_loop.rs:152:14\n     |\n-152 | /     for i in 10..=0 {\n-153 | |         println!(\"{}\", i);\n-154 | |     }\n-    | |_____^\n+152 |     for i in 10..=0 {\n+    |              ^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n 152 |     for i in (0...10).rev() {\n     |              ^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:156:5\n+   --> $DIR/for_loop.rs:156:14\n     |\n-156 | /     for i in MAX_LEN..0 {\n-157 | |         println!(\"{}\", i);\n-158 | |     }\n-    | |_____^\n+156 |     for i in MAX_LEN..0 {\n+    |              ^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n 156 |     for i in (0..MAX_LEN).rev() {\n     |              ^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:160:5\n+   --> $DIR/for_loop.rs:160:14\n     |\n-160 | /     for i in 5..5 {\n-161 | |         println!(\"{}\", i);\n-162 | |     }\n-    | |_____^\n+160 |     for i in 5..5 {\n+    |              ^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:185:5\n+   --> $DIR/for_loop.rs:185:14\n     |\n-185 | /     for i in 10..5 + 4 {\n-186 | |         println!(\"{}\", i);\n-187 | |     }\n-    | |_____^\n+185 |     for i in 10..5 + 4 {\n+    |              ^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n 185 |     for i in (5 + 4..10).rev() {\n     |              ^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:189:5\n+   --> $DIR/for_loop.rs:189:14\n     |\n-189 | /     for i in (5 + 2)..(3 - 1) {\n-190 | |         println!(\"{}\", i);\n-191 | |     }\n-    | |_____^\n+189 |     for i in (5 + 2)..(3 - 1) {\n+    |              ^^^^^^^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n 189 |     for i in ((3 - 1)..(5 + 2)).rev() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:193:5\n+   --> $DIR/for_loop.rs:193:14\n     |\n-193 | /     for i in (5 + 2)..(8 - 1) {\n-194 | |         println!(\"{}\", i);\n-195 | |     }\n-    | |_____^\n+193 |     for i in (5 + 2)..(8 - 1) {\n+    |              ^^^^^^^^^^^^^^^^\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:215:15\n@@ -389,10 +347,10 @@ error: it is more idiomatic to loop over references to containers instead of usi\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-   --> $DIR/for_loop.rs:257:5\n+   --> $DIR/for_loop.rs:257:15\n     |\n 257 |     for _v in vec.iter().next() {}\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |               ^^^^^^^^^^^^^^^^^\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n    --> $DIR/for_loop.rs:264:5\n@@ -403,30 +361,24 @@ error: you are collect()ing an iterator and throwing away the result. Consider u\n     = note: `-D unused-collect` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> $DIR/for_loop.rs:269:5\n+   --> $DIR/for_loop.rs:269:15\n     |\n-269 | /     for _v in &vec {\n-270 | |         _index += 1\n-271 | |     }\n-    | |_____^\n+269 |     for _v in &vec {\n+    |               ^^^^\n     |\n     = note: `-D explicit-counter-loop` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> $DIR/for_loop.rs:275:5\n+   --> $DIR/for_loop.rs:275:15\n     |\n-275 | /     for _v in &vec {\n-276 | |         _index += 1\n-277 | |     }\n-    | |_____^\n+275 |     for _v in &vec {\n+    |               ^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:385:5\n+   --> $DIR/for_loop.rs:385:19\n     |\n-385 | /     for (_, v) in &m {\n-386 | |         let _v = v;\n-387 | |     }\n-    | |_____^\n+385 |     for (_, v) in &m {\n+    |                   ^^\n     |\n     = note: `-D for-kv-map` implied by `-D warnings`\n help: use the corresponding method\n@@ -435,135 +387,105 @@ help: use the corresponding method\n     |\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:390:5\n-    |\n-390 | /     for (_, v) in &*m {\n-391 | |         let _v = v;\n-392 | |         // Here the `*` is not actually necesarry, but the test tests that we don't\n-393 | |         // suggest\n-394 | |         // `in *m.values()` as we used to\n-395 | |     }\n-    | |_____^\n+   --> $DIR/for_loop.rs:390:19\n+    |\n+390 |     for (_, v) in &*m {\n+    |                   ^^^\n help: use the corresponding method\n     |\n 390 |     for v in (*m).values() {\n     |\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:398:5\n+   --> $DIR/for_loop.rs:398:19\n     |\n-398 | /     for (_, v) in &mut m {\n-399 | |         let _v = v;\n-400 | |     }\n-    | |_____^\n+398 |     for (_, v) in &mut m {\n+    |                   ^^^^^^\n help: use the corresponding method\n     |\n 398 |     for v in m.values_mut() {\n     |\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:403:5\n+   --> $DIR/for_loop.rs:403:19\n     |\n-403 | /     for (_, v) in &mut *m {\n-404 | |         let _v = v;\n-405 | |     }\n-    | |_____^\n+403 |     for (_, v) in &mut *m {\n+    |                   ^^^^^^^\n help: use the corresponding method\n     |\n 403 |     for v in (*m).values_mut() {\n     |\n \n error: you seem to want to iterate on a map's keys\n-   --> $DIR/for_loop.rs:409:5\n+   --> $DIR/for_loop.rs:409:24\n     |\n-409 | /     for (k, _value) in rm {\n-410 | |         let _k = k;\n-411 | |     }\n-    | |_____^\n+409 |     for (k, _value) in rm {\n+    |                        ^^\n help: use the corresponding method\n     |\n 409 |     for k in rm.keys() {\n     |\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:462:5\n+   --> $DIR/for_loop.rs:462:14\n     |\n-462 | /     for i in 0..src.len() {\n-463 | |         dst[i] = src[i];\n-464 | |     }\n-    | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n+462 |     for i in 0..src.len() {\n+    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n     |\n     = note: `-D manual-memcpy` implied by `-D warnings`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:467:5\n+   --> $DIR/for_loop.rs:467:14\n     |\n-467 | /     for i in 0..src.len() {\n-468 | |         dst[i + 10] = src[i];\n-469 | |     }\n-    | |_____^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..])`\n+467 |     for i in 0..src.len() {\n+    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:472:5\n+   --> $DIR/for_loop.rs:472:14\n     |\n-472 | /     for i in 0..src.len() {\n-473 | |         dst[i] = src[i + 10];\n-474 | |     }\n-    | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..])`\n+472 |     for i in 0..src.len() {\n+    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:477:5\n+   --> $DIR/for_loop.rs:477:14\n     |\n-477 | /     for i in 11..src.len() {\n-478 | |         dst[i] = src[i - 10];\n-479 | |     }\n-    | |_____^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)])`\n+477 |     for i in 11..src.len() {\n+    |              ^^^^^^^^^^^^^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:482:5\n+   --> $DIR/for_loop.rs:482:14\n     |\n-482 | /     for i in 0..dst.len() {\n-483 | |         dst[i] = src[i];\n-484 | |     }\n-    | |_____^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()])`\n+482 |     for i in 0..dst.len() {\n+    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:495:5\n+   --> $DIR/for_loop.rs:495:14\n     |\n-495 | /     for i in 10..256 {\n-496 | |         dst[i] = src[i - 5];\n-497 | |         dst2[i + 500] = src[i]\n-498 | |     }\n-    | |_____^\n+495 |     for i in 10..256 {\n+    |              ^^^^^^^\n help: try replacing the loop by\n     |\n-495 |     dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n-496 |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256])\n+495 |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n+496 |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n     |\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:507:5\n+   --> $DIR/for_loop.rs:507:14\n     |\n-507 | /     for i in 10..LOOP_OFFSET {\n-508 | |         dst[i + LOOP_OFFSET] = src[i - some_var];\n-509 | |     }\n-    | |_____^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)])`\n+507 |     for i in 10..LOOP_OFFSET {\n+    |              ^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:520:5\n+   --> $DIR/for_loop.rs:520:14\n     |\n-520 | /     for i in 0..src_vec.len() {\n-521 | |         dst_vec[i] = src_vec[i];\n-522 | |     }\n-    | |_____^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..])`\n+520 |     for i in 0..src_vec.len() {\n+    |              ^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:547:5\n+   --> $DIR/for_loop.rs:547:14\n     |\n-547 | /     for i in 0..src.len() {\n-548 | |         dst[i] = src[i].clone();\n-549 | |     }\n-    | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n+547 |     for i in 0..src.len() {\n+    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n \n error: aborting due to 59 previous errors\n "}, {"sha": "84ccd5d4620953c59efd5126dd259f0dffefd5f5", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=0d36cbffba6077cef3b35760332d9bb732dce46d", "patch": "@@ -1,37 +1,30 @@\n error: the loop variable `i` is only used to index `ns`.\n-  --> $DIR/needless_range_loop.rs:8:5\n-   |\n-8  | /     for i in 3..10 {\n-9  | |         println!(\"{}\", ns[i]);\n-10 | |     }\n-   | |_____^\n-   |\n-   = note: `-D needless-range-loop` implied by `-D warnings`\n+ --> $DIR/needless_range_loop.rs:8:14\n+  |\n+8 |     for i in 3..10 {\n+  |              ^^^^^\n+  |\n+  = note: `-D needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n-   |\n-8  |     for <item> in ns.iter().take(10).skip(3) {\n-   |\n+  |\n+8 |     for <item> in ns.iter().take(10).skip(3) {\n+  |\n \n error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:29:5\n+  --> $DIR/needless_range_loop.rs:29:14\n    |\n-29 | /     for i in 0..ms.len() {\n-30 | |         ms[i] *= 2;\n-31 | |     }\n-   | |_____^\n+29 |     for i in 0..ms.len() {\n+   |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n 29 |     for <item> in &mut ms {\n    |\n \n error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:35:5\n+  --> $DIR/needless_range_loop.rs:35:14\n    |\n-35 | /     for i in 0..ms.len() {\n-36 | |         let x = &mut ms[i];\n-37 | |         *x *= 2;\n-38 | |     }\n-   | |_____^\n+35 |     for i in 0..ms.len() {\n+   |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n 35 |     for <item> in &mut ms {"}, {"sha": "80dfcddbe05534f42c487d466665d845aff48d83", "filename": "tests/ui/range_plus_minus_one.stderr", "status": "modified", "additions": 7, "deletions": 28, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Frange_plus_minus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Frange_plus_minus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.stderr?ref=0d36cbffba6077cef3b35760332d9bb732dce46d", "patch": "@@ -2,68 +2,47 @@ error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:12:14\n    |\n 12 |     for _ in 0..3+1 { }\n-   |              ------\n-   |              |\n-   |              help: use: `0..=3`\n-   |              in this macro invocation\n+   |              ^^^^^^ help: use: `0..=3`\n    |\n    = note: `-D range-plus-one` implied by `-D warnings`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:15:14\n    |\n 15 |     for _ in 0..1+5 { }\n-   |              ------\n-   |              |\n-   |              help: use: `0..=5`\n-   |              in this macro invocation\n+   |              ^^^^^^ help: use: `0..=5`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:18:14\n    |\n 18 |     for _ in 1..1+1 { }\n-   |              ------\n-   |              |\n-   |              help: use: `1..=1`\n-   |              in this macro invocation\n+   |              ^^^^^^ help: use: `1..=1`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:24:14\n    |\n 24 |     for _ in 0..(1+f()) { }\n-   |              ----------\n-   |              |\n-   |              help: use: `0..=f()`\n-   |              in this macro invocation\n+   |              ^^^^^^^^^^ help: use: `0..=f()`\n \n error: an exclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:28:13\n    |\n 28 |     let _ = ..=11-1;\n-   |             -------\n-   |             |\n-   |             help: use: `..11`\n-   |             in this macro invocation\n+   |             ^^^^^^^ help: use: `..11`\n    |\n    = note: `-D range-minus-one` implied by `-D warnings`\n \n error: an exclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:29:13\n    |\n 29 |     let _ = ..=(11-1);\n-   |             ---------\n-   |             |\n-   |             help: use: `..11`\n-   |             in this macro invocation\n+   |             ^^^^^^^^^ help: use: `..11`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:30:13\n    |\n 30 |     let _ = (f()+1)..(f()+1);\n-   |             ----------------\n-   |             |\n-   |             help: use: `(f()+1)..=f()`\n-   |             in this macro invocation\n+   |             ^^^^^^^^^^^^^^^^ help: use: `(f()+1)..=f()`\n \n error: aborting due to 7 previous errors\n "}, {"sha": "e495fefbdd84ef65b428cba4f99ead1c4e211b25", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d36cbffba6077cef3b35760332d9bb732dce46d/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=0d36cbffba6077cef3b35760332d9bb732dce46d", "patch": "@@ -60,28 +60,24 @@ error: this loop could be written as a `while let` loop\n    | |_____^ help: try: `while let Some(word) = \"\".split_whitespace().next() { .. }`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:68:5\n+  --> $DIR/while_loop.rs:68:33\n    |\n-68 | /     while let Option::Some(x) = iter.next() {\n-69 | |         println!(\"{}\", x);\n-70 | |     }\n-   | |_____^ help: try: `for x in iter { .. }`\n+68 |     while let Option::Some(x) = iter.next() {\n+   |                                 ^^^^^^^^^^^ help: try: `for x in iter { .. }`\n    |\n    = note: `-D while-let-on-iterator` implied by `-D warnings`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:73:5\n+  --> $DIR/while_loop.rs:73:25\n    |\n-73 | /     while let Some(x) = iter.next() {\n-74 | |         println!(\"{}\", x);\n-75 | |     }\n-   | |_____^ help: try: `for x in iter { .. }`\n+73 |     while let Some(x) = iter.next() {\n+   |                         ^^^^^^^^^^^ help: try: `for x in iter { .. }`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:78:5\n+  --> $DIR/while_loop.rs:78:25\n    |\n 78 |     while let Some(_) = iter.next() {}\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in iter { .. }`\n+   |                         ^^^^^^^^^^^ help: try: `for _ in iter { .. }`\n \n error: this loop could be written as a `while let` loop\n    --> $DIR/while_loop.rs:118:5\n@@ -104,11 +100,10 @@ error: empty `loop {}` detected. You may want to either use `panic!()` or add `s\n     = note: `-D empty-loop` implied by `-D warnings`\n \n error: this loop could be written as a `for` loop\n-   --> $DIR/while_loop.rs:183:9\n+   --> $DIR/while_loop.rs:183:29\n     |\n-183 | /         while let Some(v) = y.next() { // use a for loop here\n-184 | |         }\n-    | |_________^ help: try: `for v in y { .. }`\n+183 |         while let Some(v) = y.next() { // use a for loop here\n+    |                             ^^^^^^^^ help: try: `for v in y { .. }`\n \n error: aborting due to 11 previous errors\n "}]}