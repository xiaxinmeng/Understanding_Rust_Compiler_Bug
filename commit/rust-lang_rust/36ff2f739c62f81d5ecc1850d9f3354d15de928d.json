{"sha": "36ff2f739c62f81d5ecc1850d9f3354d15de928d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZmYyZjczOWM2MmY4MWQ1ZWNjMTg1MGQ5ZjMzNTRkMTVkZTkyOGQ=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-01-15T03:02:04Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-01-15T03:02:04Z"}, "message": "Rename function", "tree": {"sha": "3f3414fe14d624f14e19c0e52d328398453bfe0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f3414fe14d624f14e19c0e52d328398453bfe0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36ff2f739c62f81d5ecc1850d9f3354d15de928d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF0EABYKAAYFAmABBawACgkQ2lnoZDo37QYJHwD1EwFcADdJ59KcAz56+EVsdkCZ\n0dS9lHMaGoG5Pu9ZXQEA5h2LOsFLCPA85+g3+zYmgRn8tgo71X3H/s0KRI9+FwE=\n=zpXC\n-----END PGP SIGNATURE-----", "payload": "tree 3f3414fe14d624f14e19c0e52d328398453bfe0a\nparent 85edd65bf69266dd7cec2ca6d7bb6941b6f85444\nauthor Jason Newcomb <jsnewcomb@pm.me> 1610679724 -0500\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1610679724 -0500\n\nRename function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36ff2f739c62f81d5ecc1850d9f3354d15de928d", "html_url": "https://github.com/rust-lang/rust/commit/36ff2f739c62f81d5ecc1850d9f3354d15de928d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36ff2f739c62f81d5ecc1850d9f3354d15de928d/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85edd65bf69266dd7cec2ca6d7bb6941b6f85444", "url": "https://api.github.com/repos/rust-lang/rust/commits/85edd65bf69266dd7cec2ca6d7bb6941b6f85444", "html_url": "https://github.com/rust-lang/rust/commit/85edd65bf69266dd7cec2ca6d7bb6941b6f85444"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "02021b873695f9dfc858e8a67955e7e2c809f775", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36ff2f739c62f81d5ecc1850d9f3354d15de928d/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36ff2f739c62f81d5ecc1850d9f3354d15de928d/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=36ff2f739c62f81d5ecc1850d9f3354d15de928d", "patch": "@@ -4,7 +4,7 @@ use crate::utils::usage::is_unused;\n use crate::utils::{\n     expr_block, get_arg_name, get_parent_expr, implements_trait, in_macro, indent_of, is_allowed, is_expn_of,\n     is_refutable, is_type_diagnostic_item, is_wild, match_qpath, match_type, match_var, meets_msrv, multispan_sugg,\n-    peel_hir_pat_refs, peel_mid_ty_refs, peeln_hir_expr_refs, remove_blocks, snippet, snippet_block, snippet_opt,\n+    peel_hir_pat_refs, peel_mid_ty_refs, peel_n_hir_expr_refs, remove_blocks, snippet, snippet_block, snippet_opt,\n     snippet_with_applicability, span_lint_and_help, span_lint_and_note, span_lint_and_sugg, span_lint_and_then,\n };\n use crate::utils::{paths, search_same, SpanlessEq, SpanlessHash};\n@@ -748,7 +748,7 @@ fn report_single_match_single_pattern(\n             let ref_count_diff = ty_ref_count - pat_ref_count;\n \n             // Try to remove address of expressions first.\n-            let (ex, removed) = peeln_hir_expr_refs(ex, ref_count_diff);\n+            let (ex, removed) = peel_n_hir_expr_refs(ex, ref_count_diff);\n             let ref_count_diff = ref_count_diff - removed;\n \n             let msg = \"you seem to be trying to use `match` for an equality check. Consider using `if`\";"}, {"sha": "f81bf088ec4c0906a2c9cb7ba98dfb2852b3e25b", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36ff2f739c62f81d5ecc1850d9f3354d15de928d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36ff2f739c62f81d5ecc1850d9f3354d15de928d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=36ff2f739c62f81d5ecc1850d9f3354d15de928d", "patch": "@@ -1683,7 +1683,7 @@ pub fn peel_hir_pat_refs(pat: &'a Pat<'a>) -> (&'a Pat<'a>, usize) {\n \n /// Peels off up to the given number of references on the expression. Returns the underlying\n /// expression and the number of references removed.\n-pub fn peeln_hir_expr_refs(expr: &'a Expr<'a>, count: usize) -> (&'a Expr<'a>, usize) {\n+pub fn peel_n_hir_expr_refs(expr: &'a Expr<'a>, count: usize) -> (&'a Expr<'a>, usize) {\n     fn f(expr: &'a Expr<'a>, count: usize, target: usize) -> (&'a Expr<'a>, usize) {\n         match expr.kind {\n             ExprKind::AddrOf(_, _, expr) if count != target => f(expr, count + 1, target),"}]}