{"sha": "d75365619212983d2b7abf7b5b5e73c70dd07fb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NTM2NTYxOTIxMjk4M2QyYjdhYmY3YjViNWU3M2M3MGRkMDdmYjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-31T13:05:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T19:15:35Z"}, "message": "introduce MacrosDatabase", "tree": {"sha": "682195cf8aa63b43f6d9518505a31b46b7672a86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/682195cf8aa63b43f6d9518505a31b46b7672a86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d75365619212983d2b7abf7b5b5e73c70dd07fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d75365619212983d2b7abf7b5b5e73c70dd07fb4", "html_url": "https://github.com/rust-lang/rust/commit/d75365619212983d2b7abf7b5b5e73c70dd07fb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d75365619212983d2b7abf7b5b5e73c70dd07fb4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4ffd7b31780b1f2ac6dcb731566b583bf562647", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ffd7b31780b1f2ac6dcb731566b583bf562647", "html_url": "https://github.com/rust-lang/rust/commit/e4ffd7b31780b1f2ac6dcb731566b583bf562647"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "e89410a76c05fe80e566b0d28b71e19c8d1ed2a9", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d75365619212983d2b7abf7b5b5e73c70dd07fb4/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75365619212983d2b7abf7b5b5e73c70dd07fb4/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=d75365619212983d2b7abf7b5b5e73c70dd07fb4", "patch": "@@ -22,6 +22,7 @@ mod path;\n mod arena;\n pub mod source_binder;\n \n+mod macros;\n mod name;\n mod krate;\n mod module;"}, {"sha": "050b97081f214fd5d173ee8e8539128c135214ee", "filename": "crates/ra_hir/src/macros.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/d75365619212983d2b7abf7b5b5e73c70dd07fb4/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75365619212983d2b7abf7b5b5e73c70dd07fb4/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=d75365619212983d2b7abf7b5b5e73c70dd07fb4", "patch": "@@ -0,0 +1,57 @@\n+use std::sync::Arc;\n+\n+use ra_db::SyntaxDatabase;\n+use ra_syntax::{TextRange, TextUnit, SourceFileNode, AstNode, ast};\n+\n+// Hard-coded defs for now :-(\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub enum MacroDef {\n+    CTry,\n+}\n+\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct MacroInput {\n+    // Should be token trees\n+    text: String,\n+}\n+\n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub struct MacroExpansion {\n+    text: String,\n+    ranges_map: Vec<(TextRange, TextRange)>,\n+}\n+\n+salsa::query_group! {\n+\n+pub trait MacrosDatabase: SyntaxDatabase {\n+    fn expand_macro(def: MacroDef, input: MacroInput) -> Option<Arc<MacroExpansion>> {\n+        type ExpandMacroQuery;\n+    }\n+}\n+\n+}\n+\n+fn expand_macro(\n+    _db: &impl MacrosDatabase,\n+    def: MacroDef,\n+    input: MacroInput,\n+) -> Option<Arc<MacroExpansion>> {\n+    let MacroDef::CTry = def;\n+    let text = format!(\n+        r\"\n+        fn dummy() {{\n+            match {} {{\n+                None => return Ok(None),\n+                Some(it) => it,\n+            }}\n+        }}\",\n+        input.text\n+    );\n+    let file = SourceFileNode::parse(&text);\n+    let match_expr = file.syntax().descendants().find_map(ast::MatchExpr::cast)?;\n+    let match_arg = match_expr.expr()?;\n+    let src_range = TextRange::offset_len(0.into(), TextUnit::of_str(&input.text));\n+    let ranges_map = vec![(src_range, match_arg.syntax().range())];\n+    let res = MacroExpansion { text, ranges_map };\n+    Some(Arc::new(res))\n+}"}]}