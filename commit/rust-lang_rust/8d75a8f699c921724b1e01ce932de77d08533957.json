{"sha": "8d75a8f699c921724b1e01ce932de77d08533957", "node_id": "C_kwDOAAsO6NoAKDhkNzVhOGY2OTljOTIxNzI0YjFlMDFjZTkzMmRlNzdkMDg1MzM5NTc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-18T19:25:57Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-18T19:25:57Z"}, "message": "Test downstream errors from bad index expr", "tree": {"sha": "ba6227b73425d781da58cb77ddc8baa93c898b5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba6227b73425d781da58cb77ddc8baa93c898b5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d75a8f699c921724b1e01ce932de77d08533957", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d75a8f699c921724b1e01ce932de77d08533957", "html_url": "https://github.com/rust-lang/rust/commit/8d75a8f699c921724b1e01ce932de77d08533957", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d75a8f699c921724b1e01ce932de77d08533957/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d84b5f9b3d18cd6f6c273c4fe6ab09dba1edd6fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d84b5f9b3d18cd6f6c273c4fe6ab09dba1edd6fb", "html_url": "https://github.com/rust-lang/rust/commit/d84b5f9b3d18cd6f6c273c4fe6ab09dba1edd6fb"}], "stats": {"total": 103, "additions": 75, "deletions": 28}, "files": [{"sha": "2564b530004e5f61e3b6b0fad4c5641c2d94e600", "filename": "tests/ui/typeck/bad-index-due-to-nested.rs", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8d75a8f699c921724b1e01ce932de77d08533957/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d75a8f699c921724b1e01ce932de77d08533957/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.rs?ref=8d75a8f699c921724b1e01ce932de77d08533957", "patch": "@@ -1,15 +1,27 @@\n-use std::collections::HashMap;\n+use std::hash::Hash;\n+use std::marker::PhantomData;\n+use std::ops::Index;\n \n-pub struct Graph<V> {\n-    node_index_map: HashMap<V, usize>,\n-}\n+struct HashMap<K, V>(PhantomData<(K, V)>);\n+\n+impl<K, V> Index<&K> for HashMap<K, V>\n+where\n+    K: Hash,\n+    V: Copy,\n+{\n+    type Output = V;\n \n-impl<V> Graph<V> {\n-    pub fn node_index(&self, node: V) -> usize {\n-        self.node_index_map[&node]\n-        //~^ ERROR the trait bound `V: Eq` is not satisfied\n-        //~| ERROR the trait bound `V: Hash` is not satisfied\n+    fn index(&self, k: &K) -> &V {\n+        todo!()\n     }\n }\n \n+fn index<'a, K, V>(map: &'a HashMap<K, V>, k: K) -> &'a V {\n+    map[k]\n+    //~^ ERROR the trait bound `K: Hash` is not satisfied\n+    //~| ERROR the trait bound `V: Copy` is not satisfied\n+    //~| ERROR mismatched types\n+    //~| ERROR mismatched types\n+}\n+\n fn main() {}"}, {"sha": "e03b06b336eefc0d989275b87816796ffede031c", "filename": "tests/ui/typeck/bad-index-due-to-nested.stderr", "status": "modified", "additions": 54, "deletions": 19, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/8d75a8f699c921724b1e01ce932de77d08533957/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d75a8f699c921724b1e01ce932de77d08533957/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.stderr?ref=8d75a8f699c921724b1e01ce932de77d08533957", "patch": "@@ -1,29 +1,64 @@\n-error[E0277]: the trait bound `V: Eq` is not satisfied\n-  --> $DIR/bad-index-due-to-nested.rs:9:9\n+error[E0277]: the trait bound `K: Hash` is not satisfied\n+  --> $DIR/bad-index-due-to-nested.rs:20:5\n    |\n-LL |         self.node_index_map[&node]\n-   |         ^^^^^^^^^^^^^^^^^^^ the trait `Eq` is not implemented for `V`\n+LL |     map[k]\n+   |     ^^^ the trait `Hash` is not implemented for `K`\n    |\n-note: required by a bound in `<HashMap<K, V, S> as Index<&Q>>`\n-  --> $SRC_DIR/std/src/collections/hash/map.rs:LL:COL\n-help: consider restricting type parameter `V`\n+note: required by a bound in `<HashMap<K, V> as Index<&K>>`\n+  --> $DIR/bad-index-due-to-nested.rs:9:8\n+   |\n+LL |     K: Hash,\n+   |        ^^^^ required by this bound in `<HashMap<K, V> as Index<&K>>`\n+help: consider restricting type parameter `K`\n    |\n-LL | impl<V: std::cmp::Eq> Graph<V> {\n-   |       ++++++++++++++\n+LL | fn index<'a, K: std::hash::Hash, V>(map: &'a HashMap<K, V>, k: K) -> &'a V {\n+   |               +++++++++++++++++\n \n-error[E0277]: the trait bound `V: Hash` is not satisfied\n-  --> $DIR/bad-index-due-to-nested.rs:9:9\n+error[E0277]: the trait bound `V: Copy` is not satisfied\n+  --> $DIR/bad-index-due-to-nested.rs:20:5\n+   |\n+LL |     map[k]\n+   |     ^^^ the trait `Copy` is not implemented for `V`\n    |\n-LL |         self.node_index_map[&node]\n-   |         ^^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `V`\n+note: required by a bound in `<HashMap<K, V> as Index<&K>>`\n+  --> $DIR/bad-index-due-to-nested.rs:10:8\n    |\n-note: required by a bound in `<HashMap<K, V, S> as Index<&Q>>`\n-  --> $SRC_DIR/std/src/collections/hash/map.rs:LL:COL\n+LL |     V: Copy,\n+   |        ^^^^ required by this bound in `<HashMap<K, V> as Index<&K>>`\n help: consider restricting type parameter `V`\n    |\n-LL | impl<V: std::hash::Hash> Graph<V> {\n-   |       +++++++++++++++++\n+LL | fn index<'a, K, V: std::marker::Copy>(map: &'a HashMap<K, V>, k: K) -> &'a V {\n+   |                  +++++++++++++++++++\n+\n+error[E0308]: mismatched types\n+  --> $DIR/bad-index-due-to-nested.rs:20:9\n+   |\n+LL | fn index<'a, K, V>(map: &'a HashMap<K, V>, k: K) -> &'a V {\n+   |              - this type parameter\n+LL |     map[k]\n+   |         ^\n+   |         |\n+   |         expected `&K`, found type parameter `K`\n+   |         help: consider borrowing here: `&k`\n+   |\n+   = note:   expected reference `&K`\n+           found type parameter `K`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/bad-index-due-to-nested.rs:20:5\n+   |\n+LL | fn index<'a, K, V>(map: &'a HashMap<K, V>, k: K) -> &'a V {\n+   |                 - this type parameter               ----- expected `&'a V` because of return type\n+LL |     map[k]\n+   |     ^^^^^^\n+   |     |\n+   |     expected `&V`, found type parameter `V`\n+   |     help: consider borrowing here: `&map[k]`\n+   |\n+   = note:   expected reference `&'a V`\n+           found type parameter `V`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0277`.\n+Some errors have detailed explanations: E0277, E0308.\n+For more information about an error, try `rustc --explain E0277`."}]}