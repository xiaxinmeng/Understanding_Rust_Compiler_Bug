{"sha": "7c1d5f286a971484fc1f1d367e762853471873e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMWQ1ZjI4NmE5NzE0ODRmYzFmMWQzNjdlNzYyODUzNDcxODczZTQ=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-05-04T17:04:30Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-05-04T17:04:30Z"}, "message": "Fix line index rebuild during incremental changes", "tree": {"sha": "092c6ec57b56f2edfef7416981a8f68d2c5f248c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/092c6ec57b56f2edfef7416981a8f68d2c5f248c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c1d5f286a971484fc1f1d367e762853471873e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c1d5f286a971484fc1f1d367e762853471873e4", "html_url": "https://github.com/rust-lang/rust/commit/7c1d5f286a971484fc1f1d367e762853471873e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c1d5f286a971484fc1f1d367e762853471873e4/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "191abf368563d6229c5e6025f7cde2e7d4c22ab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/191abf368563d6229c5e6025f7cde2e7d4c22ab0", "html_url": "https://github.com/rust-lang/rust/commit/191abf368563d6229c5e6025f7cde2e7d4c22ab0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b163ea848f73845a0b1f24e3380d26cbb8cba302", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c1d5f286a971484fc1f1d367e762853471873e4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c1d5f286a971484fc1f1d367e762853471873e4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=7c1d5f286a971484fc1f1d367e762853471873e4", "patch": "@@ -676,13 +676,13 @@ fn apply_document_changes(\n     // remember the last valid line in the index and only rebuild it if needed.\n     enum IndexValid {\n         All,\n-        UpToLine(u64),\n+        UpToLineExclusive(u64),\n     }\n \n     impl IndexValid {\n         fn covers(&self, line: u64) -> bool {\n             match *self {\n-                IndexValid::UpToLine(to) => to >= line,\n+                IndexValid::UpToLineExclusive(to) => to > line,\n                 _ => true,\n             }\n         }\n@@ -692,10 +692,10 @@ fn apply_document_changes(\n     for change in content_changes {\n         match change.range {\n             Some(range) => {\n-                if !index_valid.covers(range.start.line) {\n+                if !index_valid.covers(range.end.line) {\n                     line_index = Cow::Owned(LineIndex::new(&old_text));\n                 }\n-                index_valid = IndexValid::UpToLine(range.start.line);\n+                index_valid = IndexValid::UpToLineExclusive(range.start.line);\n                 let range = range.conv_with(&line_index);\n                 let mut text = old_text.to_owned();\n                 match std::panic::catch_unwind(move || {\n@@ -713,7 +713,7 @@ fn apply_document_changes(\n             }\n             None => {\n                 *old_text = change.text;\n-                index_valid = IndexValid::UpToLine(0);\n+                index_valid = IndexValid::UpToLineExclusive(0);\n             }\n         }\n     }"}]}