{"sha": "68d05b2a073d2679ec1621ea1ebc49b7814cf250", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZDA1YjJhMDczZDI2NzllYzE2MjFlYTFlYmM0OWI3ODE0Y2YyNTA=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-10-19T06:12:37Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-10-19T06:12:37Z"}, "message": "impl FromIterator<()> for ()\n\nThis just collapses all unit items from an iterator into one.  This is\nmore useful when combined with higher-level abstractions, like\ncollecting to a `Result<(), E>` where you only care about errors:\n\n```rust\nuse std::io::*;\ndata = vec![1, 2, 3, 4, 5];\nlet res: Result<()> = data.iter()\n    .map(|x| writeln!(stdout(), \"{}\", x))\n    .collect();\nassert!(res.is_ok());\n```", "tree": {"sha": "8ab664f4a4f9833cc0c97c8a9cbfe2f204d51b65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ab664f4a4f9833cc0c97c8a9cbfe2f204d51b65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68d05b2a073d2679ec1621ea1ebc49b7814cf250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68d05b2a073d2679ec1621ea1ebc49b7814cf250", "html_url": "https://github.com/rust-lang/rust/commit/68d05b2a073d2679ec1621ea1ebc49b7814cf250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68d05b2a073d2679ec1621ea1ebc49b7814cf250/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7960878ba77124505aabe7dc99d0a898354c326", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7960878ba77124505aabe7dc99d0a898354c326", "html_url": "https://github.com/rust-lang/rust/commit/b7960878ba77124505aabe7dc99d0a898354c326"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "dc7ec29ce45276577e9cc0aecb88d117c9699d8b", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/68d05b2a073d2679ec1621ea1ebc49b7814cf250/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68d05b2a073d2679ec1621ea1ebc49b7814cf250/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=68d05b2a073d2679ec1621ea1ebc49b7814cf250", "patch": "@@ -190,3 +190,4 @@ pub mod fmt;\n mod char_private;\n mod iter_private;\n mod tuple;\n+mod unit;"}, {"sha": "087ddf9688ab7da8fe40aeaee334ceaa5907402c", "filename": "src/libcore/unit.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/68d05b2a073d2679ec1621ea1ebc49b7814cf250/src%2Flibcore%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68d05b2a073d2679ec1621ea1ebc49b7814cf250/src%2Flibcore%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funit.rs?ref=68d05b2a073d2679ec1621ea1ebc49b7814cf250", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use iter::FromIterator;\n+\n+/// Collapses all unit items from an iterator into one.\n+///\n+/// This is more useful when combined with higher-level abstractions, like\n+/// collecting to a `Result<(), E>` where you only care about errors:\n+///\n+/// ```\n+/// use std::io::*;\n+/// let data = vec![1, 2, 3, 4, 5];\n+/// let res: Result<()> = data.iter()\n+///     .map(|x| writeln!(stdout(), \"{}\", x))\n+///     .collect();\n+/// assert!(res.is_ok());\n+/// ```\n+#[stable(feature = \"unit_from_iter\", since = \"1.23.0\")]\n+impl FromIterator<()> for () {\n+    fn from_iter<I: IntoIterator<Item=()>>(iter: I) -> Self {\n+        iter.into_iter().for_each(|()| {})\n+    }\n+}"}]}