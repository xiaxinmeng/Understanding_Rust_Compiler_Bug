{"sha": "0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZDExMWY4YmI5YmY1MzRjOWQyYTliYTQ2ZDY4NTA5MDdjNzU3ZTM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-03T06:06:42Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-04T04:23:30Z"}, "message": "Remove `LocalInternedString` uses from `librustc/ty/`.\n\nThis is not a compelling change in isolation, but it is a necessary\nstep.", "tree": {"sha": "97876dc70c629cde39d036798ca5203908190d7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97876dc70c629cde39d036798ca5203908190d7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "html_url": "https://github.com/rust-lang/rust/commit/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8975a0752d52741615728394a0a8a867187ae01", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8975a0752d52741615728394a0a8a867187ae01", "html_url": "https://github.com/rust-lang/rust/commit/a8975a0752d52741615728394a0a8a867187ae01"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "2da50f37409ae2a68433f11e86ff98628761442d", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -46,7 +46,7 @@ use std::ops::Range;\n use syntax::ast::{self, Name, Ident, NodeId};\n use syntax::attr;\n use syntax::ext::hygiene::ExpnId;\n-use syntax::symbol::{kw, sym, Symbol, LocalInternedString, InternedString};\n+use syntax::symbol::{kw, sym, Symbol, InternedString};\n use syntax_pos::Span;\n \n use smallvec;\n@@ -3386,10 +3386,6 @@ impl SymbolName {\n             name: InternedString::intern(name)\n         }\n     }\n-\n-    pub fn as_str(&self) -> LocalInternedString {\n-        self.name.as_str()\n-    }\n }\n \n impl fmt::Display for SymbolName {"}, {"sha": "35d5107842d5b3464b2d7b6f8a86b6bffdb62f12", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -37,7 +37,7 @@ pub fn get_fn(\n         return llfn;\n     }\n \n-    let sym = tcx.symbol_name(instance).as_str();\n+    let sym = tcx.symbol_name(instance).name.as_str();\n     debug!(\"get_fn({:?}: {:?}) => {}\", instance, sig, sym);\n \n     // Create a fn pointer with the substituted signature."}, {"sha": "d2362a3da6fa80dba787cf143dbcb3ae9fc0be4e", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -203,7 +203,7 @@ impl CodegenCx<'ll, 'tcx> {\n                  def_id);\n \n         let ty = instance.ty(self.tcx);\n-        let sym = self.tcx.symbol_name(instance).as_str();\n+        let sym = self.tcx.symbol_name(instance).name.as_str();\n \n         debug!(\"get_static: sym={} instance={:?}\", sym, instance);\n "}, {"sha": "d0b607bd88ee4f9d5023b8d653d5b80b6768c694", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -2251,7 +2251,7 @@ pub fn create_global_var_metadata(\n         None\n     } else {\n         let linkage_name = mangled_name_of_instance(cx, Instance::mono(tcx, def_id));\n-        Some(SmallCStr::new(&linkage_name.as_str()))\n+        Some(SmallCStr::new(&linkage_name.name.as_str()))\n     };\n \n     let global_align = cx.align_of(variable_type);"}, {"sha": "cad2bcdc05fc948a491230f5bfd3ce1383ecf370", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -290,7 +290,7 @@ impl DebugInfoMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         let scope_line = span_start(self, span).line;\n \n         let function_name = CString::new(name).unwrap();\n-        let linkage_name = SmallCStr::new(&linkage_name.as_str());\n+        let linkage_name = SmallCStr::new(&linkage_name.name.as_str());\n \n         let mut flags = DIFlags::FlagPrototyped;\n "}, {"sha": "7e700e6819426c2ba29170df616edd1dd6be74fb", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -121,7 +121,7 @@ fn reachable_non_generics_provider(\n         })\n         .map(|def_id| {\n             let export_level = if special_runtime_crate {\n-                let name = tcx.symbol_name(Instance::mono(tcx, def_id)).as_str();\n+                let name = tcx.symbol_name(Instance::mono(tcx, def_id)).name.as_str();\n                 // We can probably do better here by just ensuring that\n                 // it has hidden visibility rather than public\n                 // visibility, as this is primarily here to ensure it's"}, {"sha": "5801963c101ef1079dc773e837b7ca58c50fa656", "filename": "src/librustc_codegen_ssa/mono_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmono_item.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -58,7 +58,7 @@ impl<'a, 'tcx: 'a> MonoItemExt<'a, 'tcx> for MonoItem<'tcx> {\n                self.to_raw_string(),\n                cx.codegen_unit().name());\n \n-        let symbol_name = self.symbol_name(cx.tcx()).as_str();\n+        let symbol_name = self.symbol_name(cx.tcx()).name.as_str();\n \n         debug!(\"symbol {}\", &symbol_name);\n "}, {"sha": "51269be4e9f409f25f5165939b858adb677a894a", "filename": "src/librustc_codegen_utils/symbol_names_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -40,7 +40,7 @@ impl SymbolNamesTest<'tcx> {\n                 let instance = Instance::mono(tcx, def_id);\n                 let mangled = self.tcx.symbol_name(instance);\n                 tcx.sess.span_err(attr.span, &format!(\"symbol-name({})\", mangled));\n-                if let Ok(demangling) = rustc_demangle::try_demangle(&mangled.as_str()) {\n+                if let Ok(demangling) = rustc_demangle::try_demangle(&mangled.name.as_str()) {\n                     tcx.sess.span_err(attr.span, &format!(\"demangling({})\", demangling));\n                     tcx.sess.span_err(attr.span, &format!(\"demangling-alt({:#})\", demangling));\n                 }"}, {"sha": "c193911247e2bea5bb4219c1461214ab7476bf5d", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad111f8bb9bf534c9d2a9ba46d6850907c757e3/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=0ad111f8bb9bf534c9d2a9ba46d6850907c757e3", "patch": "@@ -777,7 +777,7 @@ where\n             debug!(\"CodegenUnit {}:\", cgu.name());\n \n             for (mono_item, linkage) in cgu.items() {\n-                let symbol_name = mono_item.symbol_name(tcx).as_str();\n+                let symbol_name = mono_item.symbol_name(tcx).name.as_str();\n                 let symbol_hash_start = symbol_name.rfind('h');\n                 let symbol_hash = symbol_hash_start.map(|i| &symbol_name[i ..])\n                                                    .unwrap_or(\"<no hash>\");"}]}