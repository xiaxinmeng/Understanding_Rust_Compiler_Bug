{"sha": "c2c37b401e65ec33b738f7725d5c8dd794ef1b1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYzM3YjQwMWU2NWVjMzNiNzM4Zjc3MjVkNWM4ZGQ3OTRlZjFiMWU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-28T22:18:30Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-28T22:18:30Z"}, "message": "Fix more spans in deriving::generic", "tree": {"sha": "b8e63e47d14cf00f003545351c600845b0be2aaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8e63e47d14cf00f003545351c600845b0be2aaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2c37b401e65ec33b738f7725d5c8dd794ef1b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2c37b401e65ec33b738f7725d5c8dd794ef1b1e", "html_url": "https://github.com/rust-lang/rust/commit/c2c37b401e65ec33b738f7725d5c8dd794ef1b1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2c37b401e65ec33b738f7725d5c8dd794ef1b1e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e1d36c0851b6cb47a215a8fe94178fd39eab04", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e1d36c0851b6cb47a215a8fe94178fd39eab04", "html_url": "https://github.com/rust-lang/rust/commit/16e1d36c0851b6cb47a215a8fe94178fd39eab04"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "e6b63be3efc0d963f063d7b665c56966f38bf8b3", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c2c37b401e65ec33b738f7725d5c8dd794ef1b1e/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2c37b401e65ec33b738f7725d5c8dd794ef1b1e/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=c2c37b401e65ec33b738f7725d5c8dd794ef1b1e", "patch": "@@ -1546,7 +1546,7 @@ impl<'a> TraitDef<'a> {\n                             cx.span_bug(sp, \"a braced struct with unnamed fields in `derive`\");\n                         }\n                         codemap::Spanned {\n-                            span: pat.span,\n+                            span: Span { expn_id: self.span.expn_id, ..pat.span },\n                             node: ast::FieldPat {\n                                 ident: ident.unwrap(),\n                                 pat: pat,\n@@ -1577,7 +1577,8 @@ impl<'a> TraitDef<'a> {\n          mutbl: ast::Mutability)\n          -> (P<ast::Pat>, Vec<(Span, Option<Ident>, P<Expr>, &'a [ast::Attribute])>) {\n         let variant_ident = variant.node.name;\n-        let variant_path = cx.path(variant.span, vec![enum_ident, variant_ident]);\n+        let sp = Span { expn_id: self.span.expn_id, ..variant.span };\n+        let variant_path = cx.path(sp, vec![enum_ident, variant_ident]);\n         self.create_struct_pattern(cx, variant_path, &variant.node.data, prefix, mutbl)\n     }\n }"}]}