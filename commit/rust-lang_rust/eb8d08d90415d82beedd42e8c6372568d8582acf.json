{"sha": "eb8d08d90415d82beedd42e8c6372568d8582acf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOGQwOGQ5MDQxNWQ4MmJlZWRkNDJlOGM2MzcyNTY4ZDg1ODJhY2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-22T01:54:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-22T01:54:51Z"}, "message": "Auto merge of #49246 - kennytm:download-gcc-stuff-from-https, r=alexcrichton\n\n Download the GCC artifacts from the HTTP server instead of FTP server.\n\nTry to bring back the `dist-i686-linux` and `dist-x86_64-linux alt` builders which has mysteriously lost their cache 14 hours ago and stuck forever unable to download `mpfr-2.4.2.tar.bz2` since it keeps getting\n\n```\n==> PASV ... couldn't connect to 209.132.180.131 port 10058: Connection timed out\n```", "tree": {"sha": "21c3b8d865dec2603c265d0961770e31aa47ff59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21c3b8d865dec2603c265d0961770e31aa47ff59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb8d08d90415d82beedd42e8c6372568d8582acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb8d08d90415d82beedd42e8c6372568d8582acf", "html_url": "https://github.com/rust-lang/rust/commit/eb8d08d90415d82beedd42e8c6372568d8582acf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb8d08d90415d82beedd42e8c6372568d8582acf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c19264fa835a1eca86de4fd2e86a87b3919e57cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c19264fa835a1eca86de4fd2e86a87b3919e57cf", "html_url": "https://github.com/rust-lang/rust/commit/c19264fa835a1eca86de4fd2e86a87b3919e57cf"}, {"sha": "9f792e199bc53a75afdad72547a151a0bc86ec5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f792e199bc53a75afdad72547a151a0bc86ec5d", "html_url": "https://github.com/rust-lang/rust/commit/9f792e199bc53a75afdad72547a151a0bc86ec5d"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "08020e533ff191ca565868062cef8f7d5ab55967", "filename": "src/ci/docker/dist-i686-linux/build-gcc.sh", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh?ref=eb8d08d90415d82beedd42e8c6372568d8582acf", "patch": "@@ -17,6 +17,23 @@ GCC=4.8.5\n \n curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.bz2 | tar xjf -\n cd gcc-$GCC\n+\n+# FIXME(#49246): Remove the `sed` below.\n+#\n+# On 2018 March 21st, two Travis builders' cache for Docker are suddenly invalidated. Normally this\n+# is fine, because we just need to rebuild the Docker image. However, it reveals a network issue:\n+# downloading from `ftp://gcc.gnu.org/` from Travis (using passive mode) often leads to \"Connection\n+# timed out\" error, and even when the download completed, the file is usually corrupted. This causes\n+# nothing to be landed that day.\n+#\n+# We observed that the `gcc-4.8.5.tar.bz2` above can be downloaded successfully, so as a stability\n+# improvement we try to download from the HTTPS mirror instead. Turns out this uncovered the third\n+# bug: the host `gcc.gnu.org` and `cygwin.com` share the same IP, and the TLS certificate of the\n+# latter host is presented to `wget`! Therefore, we choose to download from the insecure HTTP server\n+# instead here.\n+#\n+sed -i'' 's|ftp://gcc\\.gnu\\.org/|http://gcc.gnu.org/|g' ./contrib/download_prerequisites\n+\n ./contrib/download_prerequisites\n mkdir ../gcc-build\n cd ../gcc-build"}, {"sha": "aa31f50ba0343134bfbece006ad3faf6c13afc72", "filename": "src/ci/docker/dist-i686-linux/build-git.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh", "raw_url": "https://github.com/rust-lang/rust/raw/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh?ref=eb8d08d90415d82beedd42e8c6372568d8582acf", "patch": "@@ -12,7 +12,7 @@\n set -ex\n source shared.sh\n \n-curl https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz | tar xzf -\n+curl -L https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz | tar xzf -\n \n cd git-2.10.0\n make configure"}, {"sha": "08020e533ff191ca565868062cef8f7d5ab55967", "filename": "src/ci/docker/dist-x86_64-linux/build-gcc.sh", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh?ref=eb8d08d90415d82beedd42e8c6372568d8582acf", "patch": "@@ -17,6 +17,23 @@ GCC=4.8.5\n \n curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.bz2 | tar xjf -\n cd gcc-$GCC\n+\n+# FIXME(#49246): Remove the `sed` below.\n+#\n+# On 2018 March 21st, two Travis builders' cache for Docker are suddenly invalidated. Normally this\n+# is fine, because we just need to rebuild the Docker image. However, it reveals a network issue:\n+# downloading from `ftp://gcc.gnu.org/` from Travis (using passive mode) often leads to \"Connection\n+# timed out\" error, and even when the download completed, the file is usually corrupted. This causes\n+# nothing to be landed that day.\n+#\n+# We observed that the `gcc-4.8.5.tar.bz2` above can be downloaded successfully, so as a stability\n+# improvement we try to download from the HTTPS mirror instead. Turns out this uncovered the third\n+# bug: the host `gcc.gnu.org` and `cygwin.com` share the same IP, and the TLS certificate of the\n+# latter host is presented to `wget`! Therefore, we choose to download from the insecure HTTP server\n+# instead here.\n+#\n+sed -i'' 's|ftp://gcc\\.gnu\\.org/|http://gcc.gnu.org/|g' ./contrib/download_prerequisites\n+\n ./contrib/download_prerequisites\n mkdir ../gcc-build\n cd ../gcc-build"}, {"sha": "aa31f50ba0343134bfbece006ad3faf6c13afc72", "filename": "src/ci/docker/dist-x86_64-linux/build-git.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "raw_url": "https://github.com/rust-lang/rust/raw/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh?ref=eb8d08d90415d82beedd42e8c6372568d8582acf", "patch": "@@ -12,7 +12,7 @@\n set -ex\n source shared.sh\n \n-curl https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz | tar xzf -\n+curl -L https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz | tar xzf -\n \n cd git-2.10.0\n make configure"}, {"sha": "afa6d1fa0aea5e9d38aaecf67617dc3194528607", "filename": "src/ci/run.sh", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/eb8d08d90415d82beedd42e8c6372568d8582acf/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=eb8d08d90415d82beedd42e8c6372568d8582acf", "patch": "@@ -105,7 +105,15 @@ fi\n travis_fold end log-system-info\n \n if [ ! -z \"$SCRIPT\" ]; then\n-  sh -x -c \"$SCRIPT\"\n+  # FIXME(#49246): Re-enable these tools after #49246 has been merged and thus fixing the cache.\n+  if [ \"$DEPLOY_ALT\" = 1 ]; then\n+    sh -x -c \"$SCRIPT \\\n+       --exclude src/tools/rls \\\n+       --exclude src/tools/rustfmt \\\n+       --exclude src/tools/clippy\"\n+  else\n+    sh -x -c \"$SCRIPT\"\n+  fi\n else\n   do_make() {\n     travis_fold start \"make-$1\""}]}