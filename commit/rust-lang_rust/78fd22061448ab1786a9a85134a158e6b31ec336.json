{"sha": "78fd22061448ab1786a9a85134a158e6b31ec336", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZmQyMjA2MTQ0OGFiMTc4NmE5YTg1MTM0YTE1OGU2YjMxZWMzMzY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-06T21:58:23Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-06T21:58:23Z"}, "message": "ICH: Add test case for closure expressions.", "tree": {"sha": "5e577bc096f74628f9cd9cccdb79e43d3e9478bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e577bc096f74628f9cd9cccdb79e43d3e9478bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78fd22061448ab1786a9a85134a158e6b31ec336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78fd22061448ab1786a9a85134a158e6b31ec336", "html_url": "https://github.com/rust-lang/rust/commit/78fd22061448ab1786a9a85134a158e6b31ec336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78fd22061448ab1786a9a85134a158e6b31ec336/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1692c0b587e1d91bb96a99f9f2588d7d2b247e3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1692c0b587e1d91bb96a99f9f2588d7d2b247e3f", "html_url": "https://github.com/rust-lang/rust/commit/1692c0b587e1d91bb96a99f9f2588d7d2b247e3f"}], "stats": {"total": 144, "additions": 144, "deletions": 0}, "files": [{"sha": "38fe5cdffebd0a7f2bc0c15aa6ca8768c9dae688", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/78fd22061448ab1786a9a85134a158e6b31ec336/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78fd22061448ab1786a9a85134a158e6b31ec336/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=78fd22061448ab1786a9a85134a158e6b31ec336", "patch": "@@ -0,0 +1,144 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test case tests the incremental compilation hash (ICH) implementation\n+// for closure expression.\n+\n+// The general pattern followed here is: Change one thing between rev1 and rev2\n+// and make sure that the hash has changed, then change nothing between rev2 and\n+// rev3 and make sure that the hash has not changed.\n+\n+// must-compile-successfully\n+// revisions: cfail1 cfail2 cfail3\n+// compile-flags: -Z query-dep-graph\n+\n+#![allow(warnings)]\n+#![feature(rustc_attrs)]\n+#![crate_type=\"rlib\"]\n+\n+\n+// Change closure body ---------------------------------------------------------\n+#[cfg(cfail1)]\n+fn change_closure_body() {\n+    let _ = || 1u32;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+fn change_closure_body() {\n+    let _ = || 3u32;\n+}\n+\n+\n+\n+// Add parameter ---------------------------------------------------------------\n+#[cfg(cfail1)]\n+fn add_parameter() {\n+    let x = 0u32;\n+    let _ = || x + 1;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+fn add_parameter() {\n+    let x = 0u32;\n+    let _ = |x: u32| x + 1;\n+}\n+\n+\n+\n+// Change parameter pattern ----------------------------------------------------\n+#[cfg(cfail1)]\n+fn change_parameter_pattern() {\n+    let _ = |x: &u32| x;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+fn change_parameter_pattern() {\n+    let _ = |&x: &u32| x;\n+}\n+\n+\n+\n+// Add `move` to closure -------------------------------------------------------\n+#[cfg(cfail1)]\n+fn add_move() {\n+    let _ = || 1;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+fn add_move() {\n+    let _ = move || 1;\n+}\n+\n+\n+\n+// Add type ascription to parameter --------------------------------------------\n+#[cfg(cfail1)]\n+fn add_type_ascription_to_parameter() {\n+    let closure = |x| x + 1u32;\n+    let _: u32 = closure(1);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+fn add_type_ascription_to_parameter() {\n+    let closure = |x: u32| x + 1u32;\n+    let _: u32 = closure(1);\n+}\n+\n+\n+\n+// Change parameter type -------------------------------------------------------\n+#[cfg(cfail1)]\n+fn change_parameter_type() {\n+    let closure = |x: u32| (x as u64) + 1;\n+    let _ = closure(1);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+fn change_parameter_type() {\n+    let closure = |x: u16| (x as u64) + 1;\n+    let _ = closure(1);\n+}"}]}