{"sha": "429dad72b64c9bc274a884b2a69162b051b16c0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyOWRhZDcyYjY0YzliYzI3NGE4ODRiMmE2OTE2MmIwNTFiMTZjMGY=", "commit": {"author": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-02-03T18:55:50Z"}, "committer": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-02-12T16:17:43Z"}, "message": "Formatting snippets without configuration option marked as skip", "tree": {"sha": "21f31f80b0f3511a5c18f7934d17b05896c28be5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21f31f80b0f3511a5c18f7934d17b05896c28be5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/429dad72b64c9bc274a884b2a69162b051b16c0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/429dad72b64c9bc274a884b2a69162b051b16c0f", "html_url": "https://github.com/rust-lang/rust/commit/429dad72b64c9bc274a884b2a69162b051b16c0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/429dad72b64c9bc274a884b2a69162b051b16c0f/comments", "author": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ebe1b13ef0876f40fc2a99baa64dde2d030213", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ebe1b13ef0876f40fc2a99baa64dde2d030213", "html_url": "https://github.com/rust-lang/rust/commit/63ebe1b13ef0876f40fc2a99baa64dde2d030213"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "4390d49d1254e6b8ef56ec6e72603eb380df441f", "filename": "Configurations.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/429dad72b64c9bc274a884b2a69162b051b16c0f/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/429dad72b64c9bc274a884b2a69162b051b16c0f/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=429dad72b64c9bc274a884b2a69162b051b16c0f", "patch": "@@ -1931,6 +1931,8 @@ lines are found, they are trimmed down to match this integer.\n Original Code:\n \n ```rust\n+#![rustfmt_skip]\n+\n fn foo() {\n     println!(\"a\");\n }\n@@ -1988,6 +1990,8 @@ them, additional blank lines are inserted.\n Original Code (rustfmt will not change it with the default value of `0`):\n \n ```rust\n+#![rustfmt_skip]\n+\n fn foo() {\n     println!(\"a\");\n }"}, {"sha": "c618ab9c7604bc025812257fba807977c8c60394", "filename": "rustfmt-core/tests/lib.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/429dad72b64c9bc274a884b2a69162b051b16c0f/rustfmt-core%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/429dad72b64c9bc274a884b2a69162b051b16c0f/rustfmt-core%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Ftests%2Flib.rs?ref=429dad72b64c9bc274a884b2a69162b051b16c0f", "patch": "@@ -664,26 +664,36 @@ impl ConfigCodeBlock {\n \n     fn get_block_config(&self) -> Config {\n         let mut config = Config::default();\n-        config.override_value(\n-            self.config_name.as_ref().unwrap(),\n-            self.config_value.as_ref().unwrap(),\n-        );\n+        if self.config_value.is_some() && self.config_value.is_some() {\n+            config.override_value(\n+                self.config_name.as_ref().unwrap(),\n+                self.config_value.as_ref().unwrap(),\n+            );\n+        }\n         config\n     }\n \n     fn code_block_valid(&self) -> bool {\n         // We never expect to not have a code block.\n         assert!(self.code_block.is_some() && self.code_block_start.is_some());\n \n-        if self.config_name.is_none() {\n+        // See if code block begins with #![rustfmt_skip].\n+        let fmt_skip = self.code_block\n+            .as_ref()\n+            .unwrap()\n+            .split(\"\\n\")\n+            .nth(0)\n+            .unwrap_or(\"\") == \"#![rustfmt_skip]\";\n+\n+        if self.config_name.is_none() && !fmt_skip {\n             write_message(&format!(\n                 \"No configuration name for {}:{}\",\n                 CONFIGURATIONS_FILE_NAME,\n                 self.code_block_start.unwrap()\n             ));\n             return false;\n         }\n-        if self.config_value.is_none() {\n+        if self.config_value.is_none() && !fmt_skip {\n             write_message(&format!(\n                 \"No configuration value for {}:{}\",\n                 CONFIGURATIONS_FILE_NAME,\n@@ -752,7 +762,7 @@ impl ConfigCodeBlock {\n     // - Rust code blocks are identifed by lines beginning with \"```rust\".\n     // - One explicit configuration setting is supported per code block.\n     // - Rust code blocks with no configuration setting are illegal and cause an\n-    //   assertion failure.\n+    //   assertion failure, unless the snippet begins with #![rustfmt_skip].\n     // - Configuration names in Configurations.md must be in the form of\n     //   \"## `NAME`\".\n     // - Configuration values in Configurations.md must be in the form of"}]}