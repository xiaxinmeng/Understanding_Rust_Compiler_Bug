{"sha": "52d7dc5e0a218f1495da2057ac064811853a4c9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZDdkYzVlMGEyMThmMTQ5NWRhMjA1N2FjMDY0ODExODUzYTRjOWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-05T04:40:34Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-05T04:40:34Z"}, "message": "rt: Update 32-bit __morestack for recent LLVM changes", "tree": {"sha": "fb814a8fa135a66f49957813ab3b279aa5c6a4c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb814a8fa135a66f49957813ab3b279aa5c6a4c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52d7dc5e0a218f1495da2057ac064811853a4c9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52d7dc5e0a218f1495da2057ac064811853a4c9c", "html_url": "https://github.com/rust-lang/rust/commit/52d7dc5e0a218f1495da2057ac064811853a4c9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52d7dc5e0a218f1495da2057ac064811853a4c9c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "html_url": "https://github.com/rust-lang/rust/commit/a69eab16ec3435bd505a7dafcb9a82b5eace49a2"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "5ed305d95901216024ae8c7297f6717183a83963", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/52d7dc5e0a218f1495da2057ac064811853a4c9c/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/52d7dc5e0a218f1495da2057ac064811853a4c9c/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=52d7dc5e0a218f1495da2057ac064811853a4c9c", "patch": "@@ -25,11 +25,6 @@\n #endif\n #endif\n \n-// FIXME: Future LLVM patches remove these 8 alignment bytes from\n-// the function prologue in order to match gcc's behavior\n-#define ALIGNMENT 8\n-#define RETURN_OFFSET   7\n-\n .globl UPCALL_NEW_STACK\n .globl UPCALL_DEL_STACK\n .globl RUST_GET_TASK\n@@ -57,17 +52,17 @@ MORESTACK:\n \t\n \t// FIXME (1226): main is compiled with the split-stack prologue,\n \t// causing it to call __morestack, so we have to jump back out\n-\tsubl $20,%esp\n+\tsubl $28,%esp\n \tcalll RUST_GET_TASK\n \ttestl %eax,%eax\n \tjz .L$bail\n \n \t// The arguments to rust_new_stack2\n-\tmovl 32(%esp),%eax  // Size of stack arguments\n+\tmovl 40(%esp),%eax  // Size of stack arguments\n \tmovl %eax,16(%esp)\n-\tleal 40+ALIGNMENT(%esp),%eax // Address of stack arguments\n+\tleal 48(%esp),%eax // Address of stack arguments\n \tmovl %eax,12(%esp)\n-\tmovl 28(%esp),%eax // The amount of stack needed\n+\tmovl 36(%esp),%eax // The amount of stack needed\n \tmovl %eax,8(%esp)\n \n #ifdef __APPLE__\n@@ -83,8 +78,8 @@ MORESTACK:\n \tmovl %eax,(%esp)\n \tcall UPCALL_CALL_C\n \n-\tmovl 24(%esp),%edx          // Grab the return pointer.\n-\taddl $RETURN_OFFSET,%edx    // Skip past the `add esp,4` and the `ret`.\n+\tmovl 32(%esp),%edx          // Grab the return pointer.\n+\tinc  %edx    // Skip past the ret instruction in the parent fn\n \n \tmovl %eax,%esp          // Switch stacks.\n \tcall *%edx             // Re-enter the function that called us.\n@@ -95,6 +90,8 @@ MORESTACK:\n \t// Switch back to the rust stack\n \tmovl %ebp, %esp\n \n+\tsubl $8, %esp // Alignment\n+\n #ifdef __APPLE__\n \tcall 1f\n 1:\tpopl %ebx\n@@ -107,17 +104,17 @@ MORESTACK:\n \tpushl $0\n \tcall UPCALL_CALL_C\n \n-\taddl $8,%esp\n+\taddl $16,%esp\n \tpopl %ebp\n \tretl $8\n \n .L$bail:\n-\tmovl 24(%esp),%edx\n-\taddl $RETURN_OFFSET,%edx\n+\tmovl 32(%esp),%edx\n+\tinc %edx\n \t\n-\taddl $20, %esp\n+\taddl $28, %esp\n \tpopl %ebp\n-\taddl $4+8+ALIGNMENT,%esp\n+\taddl $4+8,%esp\n \t\n \tjmpl *%edx\n "}, {"sha": "f0ab8c57c35dbe695f9c7489a981f2de14f426d7", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/52d7dc5e0a218f1495da2057ac064811853a4c9c/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/52d7dc5e0a218f1495da2057ac064811853a4c9c/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=52d7dc5e0a218f1495da2057ac064811853a4c9c", "patch": "@@ -598,10 +598,17 @@ rust_task::del_stack() {\n \n void\n rust_task::record_stack_limit() {\n-    // FIXME: Future LLVM patches expect us to add an additional 256 bytes\n-    // here so that, if the frame size is < 256 it can generate the\n-    // comparison against esp directly, instead of some offset from esp\n-    record_sp(stk->data + RED_ZONE_SIZE);\n+    // The function prolog compares the amount of stack needed to the end of\n+    // the stack. As an optimization, when the frame size is less than 256\n+    // bytes, it will simply compare %esp to to the stack limit instead of\n+    // subtracting the frame size. As a result we need our stack limit to\n+    // account for those 256 bytes.\n+    const unsigned LIMIT_OFFSET = 256;\n+    A(sched,\n+      (uintptr_t)stk->limit - RED_ZONE_SIZE\n+      - (uintptr_t)stk->data >= LIMIT_OFFSET,\n+      \"Stack size must be greater than LIMIT_OFFSET\");\n+    record_sp(stk->data + LIMIT_OFFSET + RED_ZONE_SIZE);\n }\n //\n // Local Variables:"}]}