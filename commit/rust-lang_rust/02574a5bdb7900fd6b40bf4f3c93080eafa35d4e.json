{"sha": "02574a5bdb7900fd6b40bf4f3c93080eafa35d4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNTc0YTViZGI3OTAwZmQ2YjQwYmY0ZjNjOTMwODBlYWZhMzVkNGU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-21T10:34:00Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-21T11:07:40Z"}, "message": "Close hole in safe-reference analysis", "tree": {"sha": "9dac290ad36825f3d79464286d641b174665d92c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dac290ad36825f3d79464286d641b174665d92c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02574a5bdb7900fd6b40bf4f3c93080eafa35d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02574a5bdb7900fd6b40bf4f3c93080eafa35d4e", "html_url": "https://github.com/rust-lang/rust/commit/02574a5bdb7900fd6b40bf4f3c93080eafa35d4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02574a5bdb7900fd6b40bf4f3c93080eafa35d4e/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4217b383bbbebafbdc621f31716d5bee3cd0c72", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4217b383bbbebafbdc621f31716d5bee3cd0c72", "html_url": "https://github.com/rust-lang/rust/commit/b4217b383bbbebafbdc621f31716d5bee3cd0c72"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "89efd15ef2951dc427fb0f54c77ba239442bf85e", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/02574a5bdb7900fd6b40bf4f3c93080eafa35d4e/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02574a5bdb7900fd6b40bf4f3c93080eafa35d4e/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=02574a5bdb7900fd6b40bf4f3c93080eafa35d4e", "patch": "@@ -110,7 +110,7 @@ fn visit_expr(cx: @ctx, ex: @ast::expr, sc: scope, v: vt<scope>) {\n     let handled = true;\n     alt ex.node {\n       ast::expr_call(f, args, _) {\n-        check_call(*cx, f, args);\n+        check_call(*cx, sc, f, args);\n         handled = false;\n       }\n       ast::expr_alt(input, arms) { check_alt(*cx, input, arms, sc, v); }\n@@ -234,7 +234,8 @@ fn cant_copy(cx: ctx, b: binding) -> bool {\n     } else { ret true; }\n }\n \n-fn check_call(cx: ctx, f: @ast::expr, args: [@ast::expr]) -> [binding] {\n+fn check_call(cx: ctx, sc: scope, f: @ast::expr, args: [@ast::expr])\n+    -> [binding] {\n     let fty = ty::expr_ty(cx.tcx, f);\n     let by_ref = alt ty::ty_fn_ret_style(cx.tcx, fty) {\n       ast::return_ref(_, arg_n) { arg_n } _ { 0u }\n@@ -276,7 +277,18 @@ fn check_call(cx: ctx, f: @ast::expr, args: [@ast::expr]) -> [binding] {\n     if f_may_close {\n         let i = 0u;\n         for b in bindings {\n-            if vec::len(b.unsafe_tys) > 0u && cant_copy(cx, b) {\n+            let unsfe = vec::len(b.unsafe_tys) > 0u;\n+            alt b.root_var {\n+              some(rid) {\n+                for o in sc.bs {\n+                    if o.node_id == rid && vec::len(o.unsafe_tys) > 0u {\n+                        unsfe = true; break;\n+                    }\n+                }\n+              }\n+              _ {}\n+            }\n+            if unsfe && cant_copy(cx, b) {\n                 err(cx, f.span, #fmt[\"function may alias with argument \\\n                                      %u, which is not immutably rooted\", i]);\n             }"}]}