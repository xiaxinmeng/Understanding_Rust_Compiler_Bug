{"sha": "a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYjBhM2FlYjgwNjFmYzY1OTUxZGQ1NDBiYzkyYjk0YTk2YjRmMmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-19T11:46:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-19T11:46:34Z"}, "message": "Minor cleanups", "tree": {"sha": "78fa29f5d455f29224ef2d8342835d404240d14f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78fa29f5d455f29224ef2d8342835d404240d14f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b", "html_url": "https://github.com/rust-lang/rust/commit/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ac896655b75bc42d488cb5d4153ba770535ac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ac896655b75bc42d488cb5d4153ba770535ac5", "html_url": "https://github.com/rust-lang/rust/commit/63ac896655b75bc42d488cb5d4153ba770535ac5"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "621ebcbe3868c59176ed23438289699d6001f5c9", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=a3b0a3aeb8061fc65951dd540bc92b94a96b4f2b", "patch": "@@ -613,14 +613,13 @@ impl<'db> SemanticsImpl<'db> {\n         InFile::new(file_id, node)\n     }\n \n-    pub fn is_unsafe_method_call(&self, method_call_expr: &ast::MethodCallExpr) -> bool {\n+    fn is_unsafe_method_call(&self, method_call_expr: &ast::MethodCallExpr) -> bool {\n         method_call_expr\n             .expr()\n             .and_then(|expr| {\n-                let field_expr = if let ast::Expr::FieldExpr(field_expr) = expr {\n-                    field_expr\n-                } else {\n-                    return None;\n+                let field_expr = match expr {\n+                    ast::Expr::FieldExpr(field_expr) => field_expr,\n+                    _ => return None,\n                 };\n                 let ty = self.type_of_expr(&field_expr.expr()?)?;\n                 if !ty.is_packed(self.db) {\n@@ -635,7 +634,7 @@ impl<'db> SemanticsImpl<'db> {\n             .unwrap_or(false)\n     }\n \n-    pub fn is_unsafe_ref_expr(&self, ref_expr: &ast::RefExpr) -> bool {\n+    fn is_unsafe_ref_expr(&self, ref_expr: &ast::RefExpr) -> bool {\n         ref_expr\n             .expr()\n             .and_then(|expr| {\n@@ -654,7 +653,7 @@ impl<'db> SemanticsImpl<'db> {\n         // more than it should with the current implementation.\n     }\n \n-    pub fn is_unsafe_ident_pat(&self, ident_pat: &ast::IdentPat) -> bool {\n+    fn is_unsafe_ident_pat(&self, ident_pat: &ast::IdentPat) -> bool {\n         if !ident_pat.ref_token().is_some() {\n             return false;\n         }"}]}