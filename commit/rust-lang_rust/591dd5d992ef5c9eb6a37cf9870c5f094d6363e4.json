{"sha": "591dd5d992ef5c9eb6a37cf9870c5f094d6363e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MWRkNWQ5OTJlZjVjOWViNmEzN2NmOTg3MGM1ZjA5NGQ2MzYzZTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-03-16T16:38:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-04-02T21:47:00Z"}, "message": "Add Iterator::find_map", "tree": {"sha": "6f9d9b15e368fde649c6ba05113eeae221526217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f9d9b15e368fde649c6ba05113eeae221526217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4", "html_url": "https://github.com/rust-lang/rust/commit/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14ac1b5faab32d268a85dfde6c6592b7183c5864", "url": "https://api.github.com/repos/rust-lang/rust/commits/14ac1b5faab32d268a85dfde6c6592b7183c5864", "html_url": "https://github.com/rust-lang/rust/commit/14ac1b5faab32d268a85dfde6c6592b7183c5864"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "f039d1730eb3b9761599bebd399e98779ac92997", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=591dd5d992ef5c9eb6a37cf9870c5f094d6363e4", "patch": "@@ -1745,6 +1745,38 @@ pub trait Iterator {\n         }).break_value()\n     }\n \n+    /// Applies function to the elements of iterator and returns\n+    /// the first non-none result.\n+    ///\n+    /// `iter.find_map(f)` is equivalent to `iter.filter_map(f).next()`.\n+    ///\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(iterator_find_map)]\n+    /// let a = [\"lol\", \"NaN\", \"2\", \"5\"];\n+    ///\n+    /// let mut first_number = a.iter().find_map(|s| s.parse().ok());\n+    ///\n+    /// assert_eq!(first_number, Some(2));\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"iterator_find_map\",\n+               reason = \"unstable new API\",\n+               issue = \"49602\")]\n+    fn find_map<B, F>(&mut self, mut f: F) -> Option<B> where\n+        Self: Sized,\n+        F: FnMut(Self::Item) -> Option<B>,\n+    {\n+        self.try_for_each(move |x| {\n+            match f(x) {\n+                Some(x) => LoopState::Break(x),\n+                None => LoopState::Continue(()),\n+            }\n+        }).break_value()\n+    }\n+\n     /// Searches for an element in an iterator, returning its index.\n     ///\n     /// `position()` takes a closure that returns `true` or `false`. It applies"}, {"sha": "2abac0cf1d5b93bd01ca47407eb4e0b997e3ce69", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=591dd5d992ef5c9eb6a37cf9870c5f094d6363e4", "patch": "@@ -1146,6 +1146,33 @@ fn test_find() {\n     assert!(v.iter().find(|&&x| x % 12 == 0).is_none());\n }\n \n+#[test]\n+fn test_find_map() {\n+    let xs: &[isize] = &[];\n+    assert_eq!(xs.iter().find_map(half_if_even), None);\n+    let xs: &[isize] = &[3, 5];\n+    assert_eq!(xs.iter().find_map(half_if_even), None);\n+    let xs: &[isize] = &[4, 5];\n+    assert_eq!(xs.iter().find_map(half_if_even), Some(2));\n+    let xs: &[isize] = &[3, 6];\n+    assert_eq!(xs.iter().find_map(half_if_even), Some(3));\n+\n+    let xs: &[isize] = &[1, 2, 3, 4, 5, 6, 7];\n+    let mut iter = xs.iter();\n+    assert_eq!(iter.find_map(half_if_even), Some(1));\n+    assert_eq!(iter.find_map(half_if_even), Some(2));\n+    assert_eq!(iter.find_map(half_if_even), Some(3));\n+    assert_eq!(iter.next(), Some(&7));\n+\n+    fn half_if_even(x: &isize) -> Option<isize> {\n+        if x % 2 == 0 {\n+            Some(x / 2)\n+        } else {\n+            None\n+        }\n+    }\n+}\n+\n #[test]\n fn test_position() {\n     let v = &[1, 3, 9, 27, 103, 14, 11];"}, {"sha": "9dfe12a979e17a1364bc2931607dc89d2a2b0fb2", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591dd5d992ef5c9eb6a37cf9870c5f094d6363e4/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=591dd5d992ef5c9eb6a37cf9870c5f094d6363e4", "patch": "@@ -49,6 +49,7 @@\n #![feature(atomic_nand)]\n #![feature(reverse_bits)]\n #![feature(inclusive_range_fields)]\n+#![feature(iterator_find_map)]\n \n extern crate core;\n extern crate test;"}]}