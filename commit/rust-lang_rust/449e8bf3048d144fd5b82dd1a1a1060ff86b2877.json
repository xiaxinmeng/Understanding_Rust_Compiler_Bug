{"sha": "449e8bf3048d144fd5b82dd1a1a1060ff86b2877", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0OWU4YmYzMDQ4ZDE0NGZkNWI4MmRkMWExYTEwNjBmZjg2YjI4Nzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-30T16:47:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-30T16:47:08Z"}, "message": "Auto merge of #31286 - oli-obk:fix/mir_box, r=nagisa\n\nthe previous code generated a temporary of the inner type and assigned the box-memory to it. So if you did `let x: Box<usize> = box 5;` you got a\n\n```rust\nlet var0: Box<usize>; // x\nlet mut tmp0: Box<usize>;\nlet mut tmp1: usize;\n...\ntmp1 = Box(usize);\n(*tmp1) = const 5;\ntmp0 = tmp1;\nvar0 = tmp0;\n```\n\nr? @nagisa", "tree": {"sha": "7b1eb302df38159c74df3ea4a791035a32edc131", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b1eb302df38159c74df3ea4a791035a32edc131"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/449e8bf3048d144fd5b82dd1a1a1060ff86b2877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/449e8bf3048d144fd5b82dd1a1a1060ff86b2877", "html_url": "https://github.com/rust-lang/rust/commit/449e8bf3048d144fd5b82dd1a1a1060ff86b2877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/449e8bf3048d144fd5b82dd1a1a1060ff86b2877/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bda7ea81d38945b353816611fa9d23b62427f0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bda7ea81d38945b353816611fa9d23b62427f0c", "html_url": "https://github.com/rust-lang/rust/commit/9bda7ea81d38945b353816611fa9d23b62427f0c"}, {"sha": "9b81d03114b54d9dbc594d558c907f3c5efd53be", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b81d03114b54d9dbc594d558c907f3c5efd53be", "html_url": "https://github.com/rust-lang/rust/commit/9b81d03114b54d9dbc594d558c907f3c5efd53be"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "e556d707a2d48d27ac68eae1a7defdce785b7e64", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/449e8bf3048d144fd5b82dd1a1a1060ff86b2877/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/449e8bf3048d144fd5b82dd1a1a1060ff86b2877/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=449e8bf3048d144fd5b82dd1a1a1060ff86b2877", "patch": "@@ -61,16 +61,15 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n             }\n             ExprKind::Box { value } => {\n                 let value = this.hir.mirror(value);\n-                let value_ty = value.ty.clone();\n-                let result = this.temp(value_ty.clone());\n+                let result = this.temp(expr.ty);\n \n                 // to start, malloc some memory of suitable type (thus far, uninitialized):\n-                let rvalue = Rvalue::Box(value.ty.clone());\n+                let rvalue = Rvalue::Box(value.ty);\n                 this.cfg.push_assign(block, expr_span, &result, rvalue);\n \n                 // schedule a shallow free of that memory, lest we unwind:\n                 let extent = this.extent_of_innermost_scope();\n-                this.schedule_drop(expr_span, extent, DropKind::Free, &result, value_ty);\n+                this.schedule_drop(expr_span, extent, DropKind::Free, &result, value.ty);\n \n                 // initialize the box contents:\n                 let contents = result.clone().deref();"}, {"sha": "1d635e9f778df62aee4552f18f6c31626f579398", "filename": "src/test/run-pass/mir_boxing.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/449e8bf3048d144fd5b82dd1a1a1060ff86b2877/src%2Ftest%2Frun-pass%2Fmir_boxing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/449e8bf3048d144fd5b82dd1a1a1060ff86b2877/src%2Ftest%2Frun-pass%2Fmir_boxing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_boxing.rs?ref=449e8bf3048d144fd5b82dd1a1a1060ff86b2877", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs, box_syntax)]\n+\n+#[rustc_mir]\n+fn test() -> Box<i32> {\n+    box 42\n+}\n+\n+fn main() {\n+    assert_eq!(*test(), 42);\n+}"}]}