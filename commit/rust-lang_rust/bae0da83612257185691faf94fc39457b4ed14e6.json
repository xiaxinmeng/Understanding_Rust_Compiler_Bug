{"sha": "bae0da83612257185691faf94fc39457b4ed14e6", "node_id": "C_kwDOAAsO6NoAKGJhZTBkYTgzNjEyMjU3MTg1NjkxZmFmOTRmYzM5NDU3YjRlZDE0ZTY", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2021-12-12T09:55:41Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2021-12-16T20:30:13Z"}, "message": "Implement data and vtable getters for `RawWaker`", "tree": {"sha": "68e5519224b5baa7108261450890e4378a065ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68e5519224b5baa7108261450890e4378a065ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bae0da83612257185691faf94fc39457b4ed14e6", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAmG7odYACgkQztOS3gxI\nPQAKNg/9EkciJM9s3FCsCal1le3te8CNBLQzxr5yfu0mJSTgS51zJx2e8nP/T8xF\nfJhhrN71nv9mjlwkod5DF4cLkUf4YHdjgLnVV5aJ266YRGWqQHpeU44F4rTZs6wh\nqbQhvm7SckfNjm3fKaXIJn4IIf0o8u5n2xzrbV3NdT9cj81BgEFez3EPJ4cs+dEr\nRstXVx6iuPHnmdAQATQYV++EDDWKLtDug7t/X98pSG32Pi7vhnKZv4/e0yJS2wP4\nUlPaya/HqbWj3I9Bnfr8iY9ukyotfbwnL+0ONamolsppsMGSMZB1Rxw2bkFM1/oK\ngzbCCdYSaMEEwXZJbERZAh9NB1gW7mKElABgCESKn0nF54GQKr+C1G9RP8JwuDBz\ncZzVDxKDbazD1BFXKvBS5xT/wbZQPv/j4d+7s7ebD8Fwwg67lPJJhu2tFeoQ9Auw\nMfaI1AaIhbX22ql1VdiC1gAtV1NyT9A7z6DgEXfyEmGXF4KImYBOz6FThYa4fsJC\ngu7MEOG1AX1AFjATWd5T3wSDtEEWs4+Dm5BDCeVSx7ApC0xyLN/fLK2/I9tuf44C\nD4mppXaP3SV8CseIeTgg8HE6gkTn3Z6ejpsHesSDhzF23JsLb8HHe8A4Tm1xHtL8\nyhg801Drf3cXxTj08O4NAzMtYEAOTx78d4CUFyKzdxKAQnJP4kE=\n=2AFN\n-----END PGP SIGNATURE-----", "payload": "tree 68e5519224b5baa7108261450890e4378a065ec5\nparent 58457bbfd3b08e015bdb03862a1d3cf2d48a800a\nauthor oxalica <oxalicc@pm.me> 1639302941 +0800\ncommitter oxalica <oxalicc@pm.me> 1639686613 +0800\n\nImplement data and vtable getters for `RawWaker`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bae0da83612257185691faf94fc39457b4ed14e6", "html_url": "https://github.com/rust-lang/rust/commit/bae0da83612257185691faf94fc39457b4ed14e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bae0da83612257185691faf94fc39457b4ed14e6/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "url": "https://api.github.com/repos/rust-lang/rust/commits/58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "html_url": "https://github.com/rust-lang/rust/commit/58457bbfd3b08e015bdb03862a1d3cf2d48a800a"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "27af227a1f27f0804b305945dacd1abd7b56924d", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bae0da83612257185691faf94fc39457b4ed14e6/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bae0da83612257185691faf94fc39457b4ed14e6/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=bae0da83612257185691faf94fc39457b4ed14e6", "patch": "@@ -43,6 +43,22 @@ impl RawWaker {\n     pub const fn new(data: *const (), vtable: &'static RawWakerVTable) -> RawWaker {\n         RawWaker { data, vtable }\n     }\n+\n+    /// Get the `data` pointer used to create this `RawWaker`.\n+    #[inline]\n+    #[must_use]\n+    #[unstable(feature = \"waker_getters\", issue = \"87021\")]\n+    pub fn data(&self) -> *const () {\n+        self.data\n+    }\n+\n+    /// Get the `vtable` pointer used to create this `RawWaker`.\n+    #[inline]\n+    #[must_use]\n+    #[unstable(feature = \"waker_getters\", issue = \"87021\")]\n+    pub fn vtable(&self) -> &'static RawWakerVTable {\n+        self.vtable\n+    }\n }\n \n /// A virtual function pointer table (vtable) that specifies the behavior\n@@ -260,6 +276,14 @@ impl Waker {\n     pub unsafe fn from_raw(waker: RawWaker) -> Waker {\n         Waker { waker }\n     }\n+\n+    /// Get a reference to the underlying [`RawWaker`].\n+    #[inline]\n+    #[must_use]\n+    #[unstable(feature = \"waker_getters\", issue = \"87021\")]\n+    pub fn as_raw(&self) -> &RawWaker {\n+        &self.waker\n+    }\n }\n \n #[stable(feature = \"futures_api\", since = \"1.36.0\")]"}, {"sha": "40d4fa60d0bc73283def1e809df6d1f8d3ba07af", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bae0da83612257185691faf94fc39457b4ed14e6/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bae0da83612257185691faf94fc39457b4ed14e6/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=bae0da83612257185691faf94fc39457b4ed14e6", "patch": "@@ -81,6 +81,7 @@\n #![feature(unzip_option)]\n #![feature(const_array_from_ref)]\n #![feature(const_slice_from_ref)]\n+#![feature(waker_getters)]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n extern crate test;\n@@ -121,3 +122,4 @@ mod task;\n mod time;\n mod tuple;\n mod unicode;\n+mod waker;"}, {"sha": "6602ab36ba714c04a748ca4797a1a13a0a6b3efa", "filename": "library/core/tests/waker.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bae0da83612257185691faf94fc39457b4ed14e6/library%2Fcore%2Ftests%2Fwaker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bae0da83612257185691faf94fc39457b4ed14e6/library%2Fcore%2Ftests%2Fwaker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fwaker.rs?ref=bae0da83612257185691faf94fc39457b4ed14e6", "patch": "@@ -0,0 +1,22 @@\n+use std::ptr;\n+use std::task::{RawWaker, RawWakerVTable, Waker};\n+\n+#[test]\n+fn test_waker_getters() {\n+    let raw_waker = RawWaker::new(42usize as *mut (), &WAKER_VTABLE);\n+    assert_eq!(raw_waker.data() as usize, 42);\n+    assert!(ptr::eq(raw_waker.vtable(), &WAKER_VTABLE));\n+\n+    let waker = unsafe { Waker::from_raw(raw_waker) };\n+    let waker2 = waker.clone();\n+    let raw_waker2 = waker2.as_raw();\n+    assert_eq!(raw_waker2.data() as usize, 43);\n+    assert!(ptr::eq(raw_waker2.vtable(), &WAKER_VTABLE));\n+}\n+\n+static WAKER_VTABLE: RawWakerVTable = RawWakerVTable::new(\n+    |data| RawWaker::new((data as usize + 1) as *mut (), &WAKER_VTABLE),\n+    |_| {},\n+    |_| {},\n+    |_| {},\n+);"}]}