{"sha": "1646fc907e474b12a1887c7d684fde25c9c9a3f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NDZmYzkwN2U0NzRiMTJhMTg4N2M3ZDY4NGZkZTI1YzljOWEzZjE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-11-22T09:37:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-22T09:37:51Z"}, "message": "Rollup merge of #56063 - 0xrgb:patch-1, r=joshtriplett\n\nUpdate any.rs documentation using keyword dyn\n\nThis will fix #56062.", "tree": {"sha": "72e9b4802ee4b024944efcea69f204ff597826ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72e9b4802ee4b024944efcea69f204ff597826ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1646fc907e474b12a1887c7d684fde25c9c9a3f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb9njwCRBK7hj4Ov3rIwAAdHIIAJpXtWSPB/lCLoND7f0ZKx8B\nYJYGG/CEDijQ4vY8M3GSj93ecKVzm3f3DZ6GM9S3Bu+3MZDJli6KOMtiN0Jr0vbT\nyiC1Pt9AKcHQPbFyv7eqoAXnaxnW7Y1tmFhy1n6Syo/SwGyYSGBc+HVPL5kn6J/U\nq6DKYkSGir90JDaFPaJBPbbyvwxd9va+0XNiDjCiw5Jr1N8xw22eXZY0IcCdhiTz\nrFZaihYM0jm7i0evUa9CqFTwF2iCFRsjupjCpgia71Y61/fRcKa4QmSCYdjuFgr3\nQGBSSdij2kPCtgjKqOPE40ckTdM+ldSwrIe0hIhb3PcgVxe/37P92mWm8tVB5I0=\n=oIa+\n-----END PGP SIGNATURE-----\n", "payload": "tree 72e9b4802ee4b024944efcea69f204ff597826ed\nparent 75d226ed768629dbee0ee3be13519454bc1c89e6\nparent 7c9bcc52668a8865f5ed71f1bc3dcead1367e148\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1542879471 +0100\ncommitter GitHub <noreply@github.com> 1542879471 +0100\n\nRollup merge of #56063 - 0xrgb:patch-1, r=joshtriplett\n\nUpdate any.rs documentation using keyword dyn\n\nThis will fix #56062.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1646fc907e474b12a1887c7d684fde25c9c9a3f1", "html_url": "https://github.com/rust-lang/rust/commit/1646fc907e474b12a1887c7d684fde25c9c9a3f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1646fc907e474b12a1887c7d684fde25c9c9a3f1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75d226ed768629dbee0ee3be13519454bc1c89e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d226ed768629dbee0ee3be13519454bc1c89e6", "html_url": "https://github.com/rust-lang/rust/commit/75d226ed768629dbee0ee3be13519454bc1c89e6"}, {"sha": "7c9bcc52668a8865f5ed71f1bc3dcead1367e148", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9bcc52668a8865f5ed71f1bc3dcead1367e148", "html_url": "https://github.com/rust-lang/rust/commit/7c9bcc52668a8865f5ed71f1bc3dcead1367e148"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "c2113dfd2a06714e5224dc58a59585b4a9d5b74c", "filename": "src/libcore/any.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1646fc907e474b12a1887c7d684fde25c9c9a3f1/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1646fc907e474b12a1887c7d684fde25c9c9a3f1/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=1646fc907e474b12a1887c7d684fde25c9c9a3f1", "patch": "@@ -39,7 +39,7 @@\n //!\n //! // Logger function for any type that implements Debug.\n //! fn log<T: Any + Debug>(value: &T) {\n-//!     let value_any = value as &Any;\n+//!     let value_any = value as &dyn Any;\n //!\n //!     // try to convert our value to a String.  If successful, we want to\n //!     // output the String's length as well as its value.  If not, it's a\n@@ -95,7 +95,7 @@ pub trait Any: 'static {\n     ///\n     /// use std::any::{Any, TypeId};\n     ///\n-    /// fn is_string(s: &Any) -> bool {\n+    /// fn is_string(s: &dyn Any) -> bool {\n     ///     TypeId::of::<String>() == s.get_type_id()\n     /// }\n     ///\n@@ -151,7 +151,7 @@ impl dyn Any {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn is_string(s: &Any) {\n+    /// fn is_string(s: &dyn Any) {\n     ///     if s.is::<String>() {\n     ///         println!(\"It's a string!\");\n     ///     } else {\n@@ -185,7 +185,7 @@ impl dyn Any {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn print_if_string(s: &Any) {\n+    /// fn print_if_string(s: &dyn Any) {\n     ///     if let Some(string) = s.downcast_ref::<String>() {\n     ///         println!(\"It's a string({}): '{}'\", string.len(), string);\n     ///     } else {\n@@ -218,7 +218,7 @@ impl dyn Any {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn modify_if_u32(s: &mut Any) {\n+    /// fn modify_if_u32(s: &mut dyn Any) {\n     ///     if let Some(num) = s.downcast_mut::<u32>() {\n     ///         *num = 42;\n     ///     }\n@@ -256,7 +256,7 @@ impl dyn Any+Send {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn is_string(s: &(Any + Send)) {\n+    /// fn is_string(s: &(dyn Any + Send)) {\n     ///     if s.is::<String>() {\n     ///         println!(\"It's a string!\");\n     ///     } else {\n@@ -282,7 +282,7 @@ impl dyn Any+Send {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn print_if_string(s: &(Any + Send)) {\n+    /// fn print_if_string(s: &(dyn Any + Send)) {\n     ///     if let Some(string) = s.downcast_ref::<String>() {\n     ///         println!(\"It's a string({}): '{}'\", string.len(), string);\n     ///     } else {\n@@ -308,7 +308,7 @@ impl dyn Any+Send {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn modify_if_u32(s: &mut (Any + Send)) {\n+    /// fn modify_if_u32(s: &mut (dyn Any + Send)) {\n     ///     if let Some(num) = s.downcast_mut::<u32>() {\n     ///         *num = 42;\n     ///     }\n@@ -340,7 +340,7 @@ impl dyn Any+Send+Sync {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn is_string(s: &(Any + Send + Sync)) {\n+    /// fn is_string(s: &(dyn Any + Send + Sync)) {\n     ///     if s.is::<String>() {\n     ///         println!(\"It's a string!\");\n     ///     } else {\n@@ -366,7 +366,7 @@ impl dyn Any+Send+Sync {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn print_if_string(s: &(Any + Send + Sync)) {\n+    /// fn print_if_string(s: &(dyn Any + Send + Sync)) {\n     ///     if let Some(string) = s.downcast_ref::<String>() {\n     ///         println!(\"It's a string({}): '{}'\", string.len(), string);\n     ///     } else {\n@@ -392,7 +392,7 @@ impl dyn Any+Send+Sync {\n     /// ```\n     /// use std::any::Any;\n     ///\n-    /// fn modify_if_u32(s: &mut (Any + Send + Sync)) {\n+    /// fn modify_if_u32(s: &mut (dyn Any + Send + Sync)) {\n     ///     if let Some(num) = s.downcast_mut::<u32>() {\n     ///         *num = 42;\n     ///     }"}]}