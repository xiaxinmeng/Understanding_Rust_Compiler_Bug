{"sha": "89afb1a841c83d41ca3da72217c377932cdf5e93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YWZiMWE4NDFjODNkNDFjYTNkYTcyMjE3YzM3NzkzMmNkZjVlOTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T13:11:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T13:11:01Z"}, "message": "Remove two stage constuction", "tree": {"sha": "21b54de0bec23693bb39e84a7dcf8be85312f291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21b54de0bec23693bb39e84a7dcf8be85312f291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89afb1a841c83d41ca3da72217c377932cdf5e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89afb1a841c83d41ca3da72217c377932cdf5e93", "html_url": "https://github.com/rust-lang/rust/commit/89afb1a841c83d41ca3da72217c377932cdf5e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89afb1a841c83d41ca3da72217c377932cdf5e93/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "978bea2b3110cf84defae37a56157b8b7016bd3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/978bea2b3110cf84defae37a56157b8b7016bd3d", "html_url": "https://github.com/rust-lang/rust/commit/978bea2b3110cf84defae37a56157b8b7016bd3d"}], "stats": {"total": 36, "additions": 15, "deletions": 21}, "files": [{"sha": "21f1025cf3a30058f67f7f838b9bea3230066926", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/89afb1a841c83d41ca3da72217c377932cdf5e93/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/89afb1a841c83d41ca3da72217c377932cdf5e93/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=89afb1a841c83d41ca3da72217c377932cdf5e93", "patch": "@@ -1,6 +1,5 @@\n import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n-import { strict as assert } from \"assert\";\n \n import { Config } from './config';\n import { createClient } from './client';\n@@ -15,23 +14,21 @@ export class Ctx {\n     // FIXME: this actually needs syncronization of some kind (check how\n     // vscode deals with `deactivate()` call when extension has some work scheduled\n     // on the event loop to get a better picture of what we can do here)\n-    client: lc.LanguageClient | null = null;\n+    client: lc.LanguageClient;\n     private extCtx: vscode.ExtensionContext;\n \n-    constructor(extCtx: vscode.ExtensionContext) {\n-        this.config = new Config(extCtx);\n-        this.extCtx = extCtx;\n-    }\n-\n-    async startServer(serverPath: string) {\n-        assert(this.client == null);\n-\n-        const client = await createClient(this.config, serverPath);\n-\n-        this.pushCleanup(client.start());\n+    static async create(config: Config, extCtx: vscode.ExtensionContext, serverPath: string): Promise<Ctx> {\n+        const client = await createClient(config, serverPath);\n+        const res = new Ctx(config, extCtx, client);\n+        res.pushCleanup(client.start());\n         await client.onReady();\n+        return res;\n+    }\n \n-        this.client = client;\n+    private constructor(config: Config, extCtx: vscode.ExtensionContext, client: lc.LanguageClient) {\n+        this.config = config;\n+        this.extCtx = extCtx;\n+        this.client = client\n     }\n \n     get activeRustEditor(): vscode.TextEditor | undefined {"}, {"sha": "0ad7ef1bbd0049aadd2cc576fb9a141623ae69b3", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/89afb1a841c83d41ca3da72217c377932cdf5e93/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/89afb1a841c83d41ca3da72217c377932cdf5e93/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=89afb1a841c83d41ca3da72217c377932cdf5e93", "patch": "@@ -6,13 +6,14 @@ import { activateStatusDisplay } from './status_display';\n import { Ctx } from './ctx';\n import { activateHighlighting } from './highlighting';\n import { ensureServerBinary } from './installation/server';\n+import { Config } from './config';\n \n let ctx: Ctx | undefined;\n \n export async function activate(context: vscode.ExtensionContext) {\n-    ctx = new Ctx(context);\n+    const config = new Config(context)\n \n-    const serverPath = await ensureServerBinary(ctx.config.serverSource);\n+    const serverPath = await ensureServerBinary(config.serverSource);\n     if (serverPath == null) {\n         throw new Error(\n             \"Rust Analyzer Language Server is not available. \" +\n@@ -24,11 +25,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     // registers its `onDidChangeDocument` handler before us.\n     //\n     // This a horribly, horribly wrong way to deal with this problem.\n-    try {\n-        await ctx.startServer(serverPath);\n-    } catch (e) {\n-        vscode.window.showErrorMessage(e.message);\n-    }\n+    ctx = await Ctx.create(config, context, serverPath);\n \n     // Commands which invokes manually via command palette, shortcut, etc.\n     ctx.registerCommand('reload', (ctx) => {"}]}