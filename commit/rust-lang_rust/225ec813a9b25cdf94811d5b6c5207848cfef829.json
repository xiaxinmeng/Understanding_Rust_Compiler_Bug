{"sha": "225ec813a9b25cdf94811d5b6c5207848cfef829", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNWVjODEzYTliMjVjZGY5NDgxMWQ1YjZjNTIwNzg0OGNmZWY4Mjk=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2020-08-27T17:51:33Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2020-10-01T11:53:38Z"}, "message": "Add a cross-compiling aarch64-apple-darwin CI builder", "tree": {"sha": "3895b7aa4d61a28b9641557a2fc843a8f2075ff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3895b7aa4d61a28b9641557a2fc843a8f2075ff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/225ec813a9b25cdf94811d5b6c5207848cfef829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/225ec813a9b25cdf94811d5b6c5207848cfef829", "html_url": "https://github.com/rust-lang/rust/commit/225ec813a9b25cdf94811d5b6c5207848cfef829", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/225ec813a9b25cdf94811d5b6c5207848cfef829/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc42fb8e70af6ad63998f4bfbf62451551eda073", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc42fb8e70af6ad63998f4bfbf62451551eda073", "html_url": "https://github.com/rust-lang/rust/commit/fc42fb8e70af6ad63998f4bfbf62451551eda073"}], "stats": {"total": 83, "additions": 80, "deletions": 3}, "files": [{"sha": "e218ac6e8c1bd29fbeff0b701003ee19e1f814ed", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/225ec813a9b25cdf94811d5b6c5207848cfef829/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/225ec813a9b25cdf94811d5b6c5207848cfef829/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=225ec813a9b25cdf94811d5b6c5207848cfef829", "patch": "@@ -89,6 +89,9 @@ jobs:\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n         if: success() && !env.SKIP_JOB\n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         if: success() && !env.SKIP_JOB\n@@ -300,6 +303,18 @@ jobs:\n               NO_LLVM_ASSERTIONS: 1\n               NO_DEBUG_ASSERTIONS: 1\n             os: macos-latest\n+          - name: dist-aarch64-apple\n+            env:\n+              SCRIPT: \"./x.py dist --stage 2\"\n+              RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --host=aarch64-apple-darwin --target=aarch64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false --tools=rls,clippy,rustfmt,analysis,src\"\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              SELECT_XCODE: /Applications/Xcode_12_beta.app\n+              USE_XCODE_CLANG: 1\n+              MACOSX_DEPLOYMENT_TARGET: 11.0\n+              MACOSX_STD_DEPLOYMENT_TARGET: 11.0\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            os: macos-latest\n           - name: x86_64-msvc-1\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --enable-profiler\"\n@@ -437,6 +452,9 @@ jobs:\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n         if: success() && !env.SKIP_JOB\n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         if: success() && !env.SKIP_JOB\n@@ -544,6 +562,9 @@ jobs:\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n         if: success() && !env.SKIP_JOB\n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         if: success() && !env.SKIP_JOB\n@@ -648,6 +669,9 @@ jobs:\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n         if: success() && !env.SKIP_JOB\n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         if: success() && !env.SKIP_JOB"}, {"sha": "82a13eb345e4b6a382c2a7c79f8c1e5ca6bad4fb", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/225ec813a9b25cdf94811d5b6c5207848cfef829/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/225ec813a9b25cdf94811d5b6c5207848cfef829/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=225ec813a9b25cdf94811d5b6c5207848cfef829", "patch": "@@ -149,6 +149,10 @@ x--expand-yaml-anchors--remove:\n         run: src/ci/scripts/install-sccache.sh\n         <<: *step\n \n+      - name: select Xcode\n+        run: src/ci/scripts/select-xcode.sh\n+        <<: *step\n+\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n         <<: *step\n@@ -457,6 +461,34 @@ jobs:\n               NO_DEBUG_ASSERTIONS: 1\n             <<: *job-macos-xl\n \n+          # This target only needs to support 11.0 and up as nothing else supports the hardware\n+          - name: dist-aarch64-apple\n+            env:\n+              SCRIPT: ./x.py dist --stage 2\n+              RUST_CONFIGURE_ARGS: >-\n+                --build=x86_64-apple-darwin\n+                --host=aarch64-apple-darwin\n+                --target=aarch64-apple-darwin\n+                --enable-sanitizers\n+                --enable-profiler\n+                --set rust.jemalloc\n+                --set llvm.ninja=false\n+                --tools=rls,clippy,rustfmt,analysis,src\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              SELECT_XCODE: /Applications/Xcode_12_beta.app\n+              USE_XCODE_CLANG: 1\n+              MACOSX_DEPLOYMENT_TARGET: 11.0\n+              MACOSX_STD_DEPLOYMENT_TARGET: 11.0\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+              # TODO: Cargo is disabled until OpenSSL 1.1.1 can be\n+              # compiled for aarch64-apple-darwin::\n+              # https://github.com/openssl/openssl/pull/12369. Once\n+              # fixed, remove `--tools`, add back\n+              # `--enable-full-tools`, and enable this again\n+              # DIST_REQUIRE_ALL_TOOLS: 1\n+            <<: *job-macos-xl\n+\n           ######################\n           #  Windows Builders  #\n           ######################"}, {"sha": "8070e90f155df885251218a1731545c4e776b40e", "filename": "src/ci/scripts/install-clang.sh", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/225ec813a9b25cdf94811d5b6c5207848cfef829/src%2Fci%2Fscripts%2Finstall-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/225ec813a9b25cdf94811d5b6c5207848cfef829/src%2Fci%2Fscripts%2Finstall-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-clang.sh?ref=225ec813a9b25cdf94811d5b6c5207848cfef829", "patch": "@@ -12,10 +12,18 @@ source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n LLVM_VERSION=\"10.0.0\"\n \n if isMacOS; then\n-    curl -f \"${MIRRORS_BASE}/clang%2Bllvm-${LLVM_VERSION}-x86_64-apple-darwin.tar.xz\" | tar xJf -\n+    # If the job selects a specific Xcode version, use that instead of\n+    # downloading our own version.\n+    if [[ ${USE_XCODE_CLANG-0} -eq 1 ]]; then\n+        bindir=\"$(xcode-select --print-path)/Toolchains/XcodeDefault.xctoolchain/usr/bin\"\n+    else\n+        file=\"${MIRRORS_BASE}/clang%2Bllvm-${LLVM_VERSION}-x86_64-apple-darwin.tar.xz\"\n+        curl -f \"${file}\" | tar xJf -\n+        bindir=\"$(pwd)/clang+llvm-${LLVM_VERSION}-x86_64-apple-darwin/bin\"\n+    fi\n \n-    ciCommandSetEnv CC \"$(pwd)/clang+llvm-${LLVM_VERSION}-x86_64-apple-darwin/bin/clang\"\n-    ciCommandSetEnv CXX \"$(pwd)/clang+llvm-${LLVM_VERSION}-x86_64-apple-darwin/bin/clang++\"\n+    ciCommandSetEnv CC \"${bindir}/clang\"\n+    ciCommandSetEnv CXX \"${bindir}/clang++\"\n \n     # macOS 10.15 onwards doesn't have libraries in /usr/include anymore: those\n     # are now located deep into the filesystem, under Xcode's own files. The"}, {"sha": "3b9c77d42ba5f74995e2ed1117de32881318ec12", "filename": "src/ci/scripts/select-xcode.sh", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/225ec813a9b25cdf94811d5b6c5207848cfef829/src%2Fci%2Fscripts%2Fselect-xcode.sh", "raw_url": "https://github.com/rust-lang/rust/raw/225ec813a9b25cdf94811d5b6c5207848cfef829/src%2Fci%2Fscripts%2Fselect-xcode.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fselect-xcode.sh?ref=225ec813a9b25cdf94811d5b6c5207848cfef829", "patch": "@@ -0,0 +1,13 @@\n+#!/bin/bash\n+# This script selects the Xcode instance to use.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+if isMacOS; then\n+    if [[ -s \"${SELECT_XCODE-}\" ]]; then\n+        sudo xcode-select -s \"${SELECT_XCODE}\"\n+    fi\n+fi"}]}