{"sha": "b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "node_id": "C_kwDOAAsO6NoAKGI3YWZiNmZjNmNlNmM5NDM3OWM1N2QzYmI2NGZlYTJhMjA2NGVlYWM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-07T15:44:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-07T15:44:05Z"}, "message": "Merge #10958\n\n10958: internal: add \"Shuffle Crate Graph\" command r=jonas-schievink a=jonas-schievink\n\nMay be useful for debugging issues like https://github.com/rust-analyzer/rust-analyzer/issues/10084\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "a064390222c78e7211f36849f6b10d3ec5b2e61c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a064390222c78e7211f36849f6b10d3ec5b2e61c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhr4FFCRBK7hj4Ov3rIwAAnBwIACbfqK1hXZkNUVNZ0x3kaz8O\nRTGT/bPyFhUlBzJ7cbowIeZlTtSaq06QOUnsGPaKLN5mDxZoi5UJ+FPbvKiFaUQY\n75bgbzwphVaLYATOUA4FitQqd0WNw3xNY5NTIuyXUET1I+6x07hgURhKNEH5ilrE\nhxQJez4GyF6qrCOfe/AtdBBEAcu1ncrrvZJRlXkSbhpXAWkQ+jhzrK47xR1r0eF4\nAHETmiirlr/txLzBgesTcDOzumM7exP2iqegbWQoO0BsUyQqFYAV8xw/bgi66SHD\nOTH+Ykq4NWvnXKLz7joGcwOLrtuGCCXMcqs3qa1GXiosUB9lMYWREKFFfQ94oEg=\n=ZS8z\n-----END PGP SIGNATURE-----\n", "payload": "tree a064390222c78e7211f36849f6b10d3ec5b2e61c\nparent bf484d9d99256a04564519516ae012bae4d777fc\nparent 0db5aacfcd3e59b14474ab43b5cde919a1acfc8e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638891845 +0000\ncommitter GitHub <noreply@github.com> 1638891845 +0000\n\nMerge #10958\n\n10958: internal: add \"Shuffle Crate Graph\" command r=jonas-schievink a=jonas-schievink\n\nMay be useful for debugging issues like https://github.com/rust-analyzer/rust-analyzer/issues/10084\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "html_url": "https://github.com/rust-lang/rust/commit/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf484d9d99256a04564519516ae012bae4d777fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf484d9d99256a04564519516ae012bae4d777fc", "html_url": "https://github.com/rust-lang/rust/commit/bf484d9d99256a04564519516ae012bae4d777fc"}, {"sha": "0db5aacfcd3e59b14474ab43b5cde919a1acfc8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0db5aacfcd3e59b14474ab43b5cde919a1acfc8e", "html_url": "https://github.com/rust-lang/rust/commit/0db5aacfcd3e59b14474ab43b5cde919a1acfc8e"}], "stats": {"total": 116, "additions": 115, "deletions": 1}, "files": [{"sha": "68c87a6b1ed4156fd7ba602dac1ee52edc2e2f0e", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -13,3 +13,4 @@ generated_diagnostic.adoc\n .DS_Store\n /out/\n /dump.lsif\n+.envrc"}, {"sha": "5bd9f054dd34f3750b989d07b9e6227671eaefdc", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -56,6 +56,7 @@ mod typing;\n mod view_crate_graph;\n mod view_hir;\n mod view_item_tree;\n+mod shuffle_crate_graph;\n \n use std::sync::Arc;\n \n@@ -177,6 +178,10 @@ impl AnalysisHost {\n     pub fn raw_database_mut(&mut self) -> &mut RootDatabase {\n         &mut self.db\n     }\n+\n+    pub fn shuffle_crate_graph(&mut self) {\n+        shuffle_crate_graph::shuffle_crate_graph(&mut self.db);\n+    }\n }\n \n impl Default for AnalysisHost {"}, {"sha": "9c3cce5dfe4dc7f7a1bc2900fa24bf35f2a18743", "filename": "crates/ide/src/shuffle_crate_graph.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Fide%2Fsrc%2Fshuffle_crate_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Fide%2Fsrc%2Fshuffle_crate_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fshuffle_crate_graph.rs?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -0,0 +1,70 @@\n+use std::sync::Arc;\n+\n+use ide_db::base_db::salsa::Durability;\n+use ide_db::base_db::{CrateGraph, SourceDatabase};\n+use ide_db::RootDatabase;\n+use rustc_hash::FxHashMap;\n+\n+// Feature: Shuffle Crate Graph\n+//\n+// Randomizes all crate IDs in the crate graph, for debugging.\n+//\n+// |===\n+// | Editor  | Action Name\n+//\n+// | VS Code | **Rust Analyzer: Shuffle Crate Graph**\n+// |===\n+pub(crate) fn shuffle_crate_graph(db: &mut RootDatabase) {\n+    let crate_graph = db.crate_graph();\n+\n+    let mut shuffled_ids = crate_graph.iter().collect::<Vec<_>>();\n+    shuffle(&mut shuffled_ids);\n+\n+    let mut new_graph = CrateGraph::default();\n+\n+    let mut map = FxHashMap::default();\n+    for old_id in shuffled_ids.iter().copied() {\n+        let data = &crate_graph[old_id];\n+        let new_id = new_graph.add_crate_root(\n+            data.root_file_id,\n+            data.edition,\n+            data.display_name.clone(),\n+            data.version.clone(),\n+            data.cfg_options.clone(),\n+            data.potential_cfg_options.clone(),\n+            data.env.clone(),\n+            data.proc_macro.clone(),\n+            data.origin.clone(),\n+        );\n+        map.insert(old_id, new_id);\n+    }\n+\n+    for old_id in shuffled_ids.iter().copied() {\n+        let data = &crate_graph[old_id];\n+        for dep in &data.dependencies {\n+            let mut new_dep = dep.clone();\n+            new_dep.crate_id = map[&dep.crate_id];\n+            new_graph.add_dep(map[&old_id], new_dep).unwrap();\n+        }\n+    }\n+\n+    db.set_crate_graph_with_durability(Arc::new(new_graph), Durability::HIGH);\n+}\n+\n+fn shuffle<T>(slice: &mut [T]) {\n+    let mut rng = oorandom::Rand32::new(seed());\n+\n+    let mut remaining = slice.len() - 1;\n+    while remaining > 0 {\n+        let index = rng.rand_range(0..remaining as u32);\n+        slice.swap(remaining, index as usize);\n+        remaining -= 1;\n+    }\n+}\n+\n+fn seed() -> u64 {\n+    use std::collections::hash_map::RandomState;\n+    use std::hash::{BuildHasher, Hasher};\n+\n+    RandomState::new().build_hasher().finish()\n+}"}, {"sha": "ab3c9e8227d9d180aaf5e9d0fc2cda8d95269d88", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -97,6 +97,11 @@ pub(crate) fn handle_memory_usage(state: &mut GlobalState, _: ()) -> Result<Stri\n     Ok(out)\n }\n \n+pub(crate) fn handle_shuffle_crate_graph(state: &mut GlobalState, _: ()) -> Result<()> {\n+    state.analysis_host.shuffle_crate_graph();\n+    Ok(())\n+}\n+\n pub(crate) fn handle_syntax_tree(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::SyntaxTreeParams,"}, {"sha": "0e23094199f9ab44a728b4d9fe6106a98f87faf8", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -31,6 +31,14 @@ impl Request for MemoryUsage {\n     const METHOD: &'static str = \"rust-analyzer/memoryUsage\";\n }\n \n+pub enum ShuffleCrateGraph {}\n+\n+impl Request for ShuffleCrateGraph {\n+    type Params = ();\n+    type Result = ();\n+    const METHOD: &'static str = \"rust-analyzer/shuffleCrateGraph\";\n+}\n+\n pub enum ReloadWorkspace {}\n \n impl Request for ReloadWorkspace {"}, {"sha": "65f9c873673c62a180c3834c6976688b306f2ad2", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -567,6 +567,7 @@ impl GlobalState {\n                 Ok(())\n             })?\n             .on_sync_mut::<lsp_ext::MemoryUsage>(handlers::handle_memory_usage)?\n+            .on_sync_mut::<lsp_ext::ShuffleCrateGraph>(handlers::handle_shuffle_crate_graph)?\n             .on_sync::<lsp_ext::JoinLines>(handlers::handle_join_lines)?\n             .on_sync::<lsp_ext::OnEnter>(handlers::handle_on_enter)?\n             .on_sync::<lsp_types::request::SelectionRangeRequest>(handlers::handle_selection_range)?"}, {"sha": "c92395553c0adc9ec5c56fd5b132501b7418dac2", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: c6568e4035333f3a\n+lsp_ext.rs hash: 49ffd619919ed74\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this issue:\n@@ -526,6 +526,14 @@ Renders rust-analyzer's crate graph as an SVG image.\n \n If `full` is `true`, the graph includes non-workspace crates (crates.io dependencies as well as sysroot crates).\n \n+## Shuffle Crate Graph\n+\n+**Method:** `rust-analyzer/shuffleCrateGraph`\n+\n+**Request:** `null`\n+\n+Shuffles the crate IDs in the crate graph, for debugging purposes.\n+\n ## Expand Macro\n \n **Method:** `rust-analyzer/expandMacro`"}, {"sha": "4b6e5ef33328fca19b10c1844ad65adfe61661e2", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -171,6 +171,11 @@\n                 \"title\": \"Memory Usage (Clears Database)\",\n                 \"category\": \"Rust Analyzer\"\n             },\n+            {\n+                \"command\": \"rust-analyzer.shuffleCrateGraph\",\n+                \"title\": \"Shuffle Crate Graph\",\n+                \"category\": \"Rust Analyzer\"\n+            },\n             {\n                 \"command\": \"rust-analyzer.reloadWorkspace\",\n                 \"title\": \"Reload workspace\","}, {"sha": "fe006a63e279108ac480a9272375ad6a13bcae68", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -85,6 +85,15 @@ export function memoryUsage(ctx: Ctx): Cmd {\n     };\n }\n \n+export function shuffleCrateGraph(ctx: Ctx): Cmd {\n+    return async () => {\n+        const client = ctx.client;\n+        if (!client) return;\n+\n+        await client.sendRequest(ra.shuffleCrateGraph);\n+    };\n+}\n+\n export function matchingBrace(ctx: Ctx): Cmd {\n     return async () => {\n         const editor = ctx.activeRustEditor;"}, {"sha": "a21a742a571641673c3c7c1a072006c0b6abf88a", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -9,6 +9,7 @@ export interface AnalyzerStatusParams {\n }\n export const analyzerStatus = new lc.RequestType<AnalyzerStatusParams, string, void>(\"rust-analyzer/analyzerStatus\");\n export const memoryUsage = new lc.RequestType0<string, void>(\"rust-analyzer/memoryUsage\");\n+export const shuffleCrateGraph = new lc.RequestType0<null, void>(\"rust-analyzer/shuffleCrateGraph\");\n \n export interface ServerStatusParams {\n     health: \"ok\" | \"warning\" | \"error\";"}, {"sha": "a06fc09fc8e2859a41727eff2c26c25c95c24928", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=b7afb6fc6ce6c94379c57d3bb64fea2a2064eeac", "patch": "@@ -117,6 +117,7 @@ async function initCommonContext(context: vscode.ExtensionContext, ctx: Ctx) {\n \n     ctx.registerCommand('analyzerStatus', commands.analyzerStatus);\n     ctx.registerCommand('memoryUsage', commands.memoryUsage);\n+    ctx.registerCommand('shuffleCrateGraph', commands.shuffleCrateGraph);\n     ctx.registerCommand('reloadWorkspace', commands.reloadWorkspace);\n     ctx.registerCommand('matchingBrace', commands.matchingBrace);\n     ctx.registerCommand('joinLines', commands.joinLines);"}]}