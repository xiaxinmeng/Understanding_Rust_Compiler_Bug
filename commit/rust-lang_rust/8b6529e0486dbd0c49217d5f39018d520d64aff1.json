{"sha": "8b6529e0486dbd0c49217d5f39018d520d64aff1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNjUyOWUwNDg2ZGJkMGM0OTIxN2Q1ZjM5MDE4ZDUyMGQ2NGFmZjE=", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T16:15:49Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T16:15:49Z"}, "message": "Fix typos \u201can\u201d\u2192\u201ca\u201d and a few different ones that appeared in the same search", "tree": {"sha": "8d076819d5ebce77141af2361da65e8e07b90007", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d076819d5ebce77141af2361da65e8e07b90007"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b6529e0486dbd0c49217d5f39018d520d64aff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b6529e0486dbd0c49217d5f39018d520d64aff1", "html_url": "https://github.com/rust-lang/rust/commit/8b6529e0486dbd0c49217d5f39018d520d64aff1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b6529e0486dbd0c49217d5f39018d520d64aff1/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21da42ce29c33e4a33b215a93b19bf8b5f06228d", "url": "https://api.github.com/repos/rust-lang/rust/commits/21da42ce29c33e4a33b215a93b19bf8b5f06228d", "html_url": "https://github.com/rust-lang/rust/commit/21da42ce29c33e4a33b215a93b19bf8b5f06228d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3258c9fb3fed0ef244813e52bf47f6d3a65f9722", "filename": "clippy_lints/src/ptr_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b6529e0486dbd0c49217d5f39018d520d64aff1/clippy_lints%2Fsrc%2Fptr_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b6529e0486dbd0c49217d5f39018d520d64aff1/clippy_lints%2Fsrc%2Fptr_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_eq.rs?ref=8b6529e0486dbd0c49217d5f39018d520d64aff1", "patch": "@@ -74,7 +74,7 @@ impl LateLintPass<'_> for PtrEq {\n     }\n }\n \n-// If the given expression is a cast to an usize, return the lhs of the cast\n+// If the given expression is a cast to a usize, return the lhs of the cast\n // E.g., `foo as *const _ as usize` returns `foo as *const _`.\n fn expr_as_cast_to_usize<'tcx>(cx: &LateContext<'tcx>, cast_expr: &'tcx Expr<'_>) -> Option<&'tcx Expr<'tcx>> {\n     if cx.typeck_results().expr_ty(cast_expr) == cx.tcx.types.usize {"}]}