{"sha": "92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyZmRhOTI1ZTNjOTQ1ZGNjYjFlNWI2YzNmNjYyYmZkOWFhZGVkYzM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-23T23:30:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-23T23:30:25Z"}, "message": "Rollup merge of #61098 - varkor:fix-overflowing-literal-in-loop, r=estebank\n\nFix overflowing literal lint in loops\n\nFixes https://github.com/rust-lang/rust/issues/60459.\n\nr? @estebank", "tree": {"sha": "5db319d20adad6fa85a397e105052e6186fdcca6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5db319d20adad6fa85a397e105052e6186fdcca6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc5y0RCRBK7hj4Ov3rIwAAdHIIADhI8HRC5RhkVoc/Xod6pE/H\nAQdgPGE430SGiGQ4Zb0N11nMder84IJUp1xEG56aQ/QGpB0IQm7Tl6/S7bUhQiEg\nqjUOQPbWtIvJBbWvFjFNsIPqVW/agB92Fej6URRN6uxfUxepwGBwr2mxgpu/Yt6I\n6RJjLHiENaCdZgLEjWEBy7rew1Fbx8nl1A20eW0XW5vT3fuzWIFWSCS85LZ5xHtW\nNTdykao7ALAKqhLWh/oY0lcH9qMJaHWfBavNRZB+JmrOdGL3mmE3xiyCef1mY4oP\ncE40ibik3NPNNMuxTMrpJ6IdrGRNtQiNZzjOUxfr5IVaktftrhSOdiOnN2KiN0k=\n=FtBH\n-----END PGP SIGNATURE-----\n", "payload": "tree 5db319d20adad6fa85a397e105052e6186fdcca6\nparent 3388028776ef606335d0b04373323c02248e6c7e\nparent 12de24ce81fbbcc1a2b170a719cc792dfa559c81\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1558654225 +0200\ncommitter GitHub <noreply@github.com> 1558654225 +0200\n\nRollup merge of #61098 - varkor:fix-overflowing-literal-in-loop, r=estebank\n\nFix overflowing literal lint in loops\n\nFixes https://github.com/rust-lang/rust/issues/60459.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "html_url": "https://github.com/rust-lang/rust/commit/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3388028776ef606335d0b04373323c02248e6c7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3388028776ef606335d0b04373323c02248e6c7e", "html_url": "https://github.com/rust-lang/rust/commit/3388028776ef606335d0b04373323c02248e6c7e"}, {"sha": "12de24ce81fbbcc1a2b170a719cc792dfa559c81", "url": "https://api.github.com/repos/rust-lang/rust/commits/12de24ce81fbbcc1a2b170a719cc792dfa559c81", "html_url": "https://github.com/rust-lang/rust/commit/12de24ce81fbbcc1a2b170a719cc792dfa559c81"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "c3afca35303c93e8272d1a5681317f48af448eb2", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "patch": "@@ -35,7 +35,7 @@ use crate::util::nodemap::NodeMap;\n use errors::{DiagnosticBuilder, DiagnosticId};\n use std::{hash, ptr};\n use syntax::ast;\n-use syntax::source_map::{MultiSpan, ExpnFormat};\n+use syntax::source_map::{MultiSpan, ExpnFormat, CompilerDesugaringKind};\n use syntax::early_buffered_lints::BufferedEarlyLintId;\n use syntax::edition::Edition;\n use syntax::symbol::{Symbol, sym};\n@@ -887,21 +887,22 @@ pub fn in_external_macro(sess: &Session, span: Span) -> bool {\n     };\n \n     match info.format {\n-        ExpnFormat::MacroAttribute(..) => return true, // definitely a plugin\n-        ExpnFormat::CompilerDesugaring(_) => return true, // well, it's \"external\"\n-        ExpnFormat::MacroBang(..) => {} // check below\n-    }\n-\n-    let def_site = match info.def_site {\n-        Some(span) => span,\n-        // no span for the def_site means it's an external macro\n-        None => return true,\n-    };\n+        ExpnFormat::MacroAttribute(..) => true, // definitely a plugin\n+        ExpnFormat::CompilerDesugaring(CompilerDesugaringKind::ForLoop) => false,\n+        ExpnFormat::CompilerDesugaring(_) => true, // well, it's \"external\"\n+        ExpnFormat::MacroBang(..) => {\n+            let def_site = match info.def_site {\n+                Some(span) => span,\n+                // no span for the def_site means it's an external macro\n+                None => return true,\n+            };\n \n-    match sess.source_map().span_to_snippet(def_site) {\n-        Ok(code) => !code.starts_with(\"macro_rules\"),\n-        // no snippet = external macro or compiler-builtin expansion\n-        Err(_) => true,\n+            match sess.source_map().span_to_snippet(def_site) {\n+                Ok(code) => !code.starts_with(\"macro_rules\"),\n+                // no snippet = external macro or compiler-builtin expansion\n+                Err(_) => true,\n+            }\n+        }\n     }\n }\n "}, {"sha": "21c8ba7d6ce4e6be5f4343f47ba277afc5d0b516", "filename": "src/test/ui/lint/deny-overflowing-literals.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.rs?ref=92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "patch": "@@ -1,4 +1,7 @@\n fn main() {\n     let x: u8 = 256;\n     //~^ error: literal out of range for `u8`\n+\n+    for _ in 0..256u8 {}\n+    //~^ error: range endpoint is out of range for `u8`\n }"}, {"sha": "c97872b5222e82c2f250f8f7b6f5866d432bb8a7", "filename": "src/test/ui/lint/deny-overflowing-literals.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr?ref=92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "patch": "@@ -6,5 +6,11 @@ LL |     let x: u8 = 256;\n    |\n    = note: #[deny(overflowing_literals)] on by default\n \n-error: aborting due to previous error\n+error: range endpoint is out of range for `u8`\n+  --> $DIR/deny-overflowing-literals.rs:5:14\n+   |\n+LL |     for _ in 0..256u8 {}\n+   |              ^^^^^^^^ help: use an inclusive range instead: `0..=255u8`\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "56ab1a270a75d4f3db5788345d58cc104841ac5f", "filename": "src/test/ui/unreachable/unreachable-loop-patterns.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Funreachable%2Funreachable-loop-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Funreachable%2Funreachable-loop-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funreachable%2Funreachable-loop-patterns.rs?ref=92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "patch": "@@ -19,4 +19,5 @@ impl Iterator for Void {\n fn main() {\n     for _ in unimplemented!() as Void {}\n     //~^ ERROR unreachable pattern\n+    //~^^ ERROR unreachable pattern\n }"}, {"sha": "254d1178d142e39c67ddab6de71d5cc9270cae3e", "filename": "src/test/ui/unreachable/unreachable-loop-patterns.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Funreachable%2Funreachable-loop-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/92fda925e3c945dccb1e5b6c3f662bfd9aadedc3/src%2Ftest%2Fui%2Funreachable%2Funreachable-loop-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funreachable%2Funreachable-loop-patterns.stderr?ref=92fda925e3c945dccb1e5b6c3f662bfd9aadedc3", "patch": "@@ -10,5 +10,11 @@ note: lint level defined here\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: unreachable pattern\n+  --> $DIR/unreachable-loop-patterns.rs:20:14\n+   |\n+LL |     for _ in unimplemented!() as Void {}\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n "}]}