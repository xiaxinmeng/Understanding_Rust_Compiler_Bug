{"sha": "829154f9807801b55317c4c4eea887829434c758", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyOTE1NGY5ODA3ODAxYjU1MzE3YzRjNGVlYTg4NzgyOTQzNGM3NTg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-05T16:47:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-05T16:47:44Z"}, "message": "Rollup merge of #67797 - Aaron1011:feature/instance-query, r=nikomatsakis\n\nQuery-ify Instance::resolve\n\nSplit off from #65989\n\nInstance::resolve is now a wrapper for a new `resolve_instance` query.\nThis greatly improves performance on several benchmarks", "tree": {"sha": "070b2a965b8b6f2670144f88e6f733569aa95bd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/070b2a965b8b6f2670144f88e6f733569aa95bd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/829154f9807801b55317c4c4eea887829434c758", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeiguwCRBK7hj4Ov3rIwAAdHIIAC/IEV2LxxoOfvH2IicgzV7F\nUU6miEa+v1q/ytg/2Gy9D/SbPQnmykKpx1pFF0dbm2Xnm9NXn8XNpvtZyOZxkkO1\n/5eSAEzZYtRxap+E/17wyyYR9DfzcNMy1a6R1zC6NaizvNKv2dpL88bZ9edVxIyB\nqzrrn4jEWppCmUMEwC3SKkHA3sKZUOtqQt6eEmwNesKIMKEu+kWnbWoM3MK2hnnk\nIgGpU36j7JkhiVnCKXy02Bq0Ei0XidQqJTmoSmeLVvR/sinhE+kLxjOyaafis1i3\nfgAeiV81ga/m4avZVxxhbP9eVUcVmh1LzEfTmIp0nyoTQMmbgZiI6ics/OKgrbM=\n=tnYa\n-----END PGP SIGNATURE-----\n", "payload": "tree 070b2a965b8b6f2670144f88e6f733569aa95bd0\nparent e6cef0445779724b469ab7b9a8d3c05d9e848ca8\nparent 63d6ef65af06ee7a62c7b0a87d955d608d0e7826\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586105264 +0200\ncommitter GitHub <noreply@github.com> 1586105264 +0200\n\nRollup merge of #67797 - Aaron1011:feature/instance-query, r=nikomatsakis\n\nQuery-ify Instance::resolve\n\nSplit off from #65989\n\nInstance::resolve is now a wrapper for a new `resolve_instance` query.\nThis greatly improves performance on several benchmarks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/829154f9807801b55317c4c4eea887829434c758", "html_url": "https://github.com/rust-lang/rust/commit/829154f9807801b55317c4c4eea887829434c758", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/829154f9807801b55317c4c4eea887829434c758/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6cef0445779724b469ab7b9a8d3c05d9e848ca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6cef0445779724b469ab7b9a8d3c05d9e848ca8", "html_url": "https://github.com/rust-lang/rust/commit/e6cef0445779724b469ab7b9a8d3c05d9e848ca8"}, {"sha": "63d6ef65af06ee7a62c7b0a87d955d608d0e7826", "url": "https://api.github.com/repos/rust-lang/rust/commits/63d6ef65af06ee7a62c7b0a87d955d608d0e7826", "html_url": "https://github.com/rust-lang/rust/commit/63d6ef65af06ee7a62c7b0a87d955d608d0e7826"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "913c67d045e5980e24b03bbe8d3f9e650e163f85", "filename": "src/librustc_interface/callbacks.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_interface%2Fcallbacks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_interface%2Fcallbacks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fcallbacks.rs?ref=829154f9807801b55317c4c4eea887829434c758", "patch": "@@ -58,5 +58,4 @@ pub fn setup_callbacks() {\n     rustc_span::SPAN_DEBUG.swap(&(span_debug as fn(_, &mut fmt::Formatter<'_>) -> _));\n     rustc_hir::def_id::DEF_ID_DEBUG.swap(&(def_id_debug as fn(_, &mut fmt::Formatter<'_>) -> _));\n     TRACK_DIAGNOSTICS.swap(&(track_diagnostic as fn(&_)));\n-    rustc_middle::ty::RESOLVE_INSTANCE.swap(&(rustc_ty::instance::resolve_instance as _));\n }"}, {"sha": "c26c043994f54dbefb0f494e38e4fb83dc40725c", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=829154f9807801b55317c4c4eea887829434c758", "patch": "@@ -1257,5 +1257,9 @@ rustc_queries! {\n             eval_always\n             desc { \"looking up enabled feature gates\" }\n         }\n+\n+        query resolve_instance(key: (ty::ParamEnv<'tcx>, DefId, SubstsRef<'tcx>)) -> Option<ty::Instance<'tcx>> {\n+            desc { \"resolving instance `{:?}` `{:?}` with {:?}\", key.1, key.2, key.0 }\n+        }\n     }\n }"}, {"sha": "cf0222370f288f2871cb713732a9f8709fec5567", "filename": "src/librustc_middle/ty/instance.rs", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Finstance.rs?ref=829154f9807801b55317c4c4eea887829434c758", "patch": "@@ -1,7 +1,6 @@\n use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use crate::ty::print::{FmtPrinter, Printer};\n use crate::ty::{self, SubstsRef, Ty, TyCtxt, TypeFoldable};\n-use rustc_data_structures::AtomicRef;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::lang_items::DropInPlaceFnLangItem;\n@@ -289,7 +288,9 @@ impl<'tcx> Instance<'tcx> {\n         def_id: DefId,\n         substs: SubstsRef<'tcx>,\n     ) -> Option<Instance<'tcx>> {\n-        (*RESOLVE_INSTANCE)(tcx, param_env, def_id, substs)\n+        // All regions in the result of this query are erased, so it's\n+        // fine to erase all of the input regions.\n+        tcx.resolve_instance((tcx.erase_regions(&param_env), def_id, tcx.erase_regions(&substs)))\n     }\n \n     pub fn resolve_for_fn_ptr(\n@@ -440,21 +441,3 @@ fn needs_fn_once_adapter_shim(\n         (ty::ClosureKind::FnMut, _) | (ty::ClosureKind::FnOnce, _) => Err(()),\n     }\n }\n-\n-fn resolve_instance_default(\n-    _tcx: TyCtxt<'tcx>,\n-    _param_env: ty::ParamEnv<'tcx>,\n-    _def_id: DefId,\n-    _substs: SubstsRef<'tcx>,\n-) -> Option<Instance<'tcx>> {\n-    unimplemented!()\n-}\n-\n-pub static RESOLVE_INSTANCE: AtomicRef<\n-    for<'tcx> fn(\n-        TyCtxt<'tcx>,\n-        ty::ParamEnv<'tcx>,\n-        DefId,\n-        SubstsRef<'tcx>,\n-    ) -> Option<Instance<'tcx>>,\n-> = AtomicRef::new(&(resolve_instance_default as _));"}, {"sha": "0ebd55a6c024c86dc5821f63b2039d38c1763020", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=829154f9807801b55317c4c4eea887829434c758", "patch": "@@ -81,7 +81,6 @@ pub use self::context::{\n     CtxtInterners, GeneratorInteriorTypeCause, GlobalCtxt, Lift, TypeckTables,\n };\n \n-pub use self::instance::RESOLVE_INSTANCE;\n pub use self::instance::{Instance, InstanceDef};\n \n pub use self::trait_def::TraitDef;"}, {"sha": "438e7ed4331a3e433e6af11ee51056d6a0cc10a8", "filename": "src/librustc_middle/ty/query/keys.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fty%2Fquery%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_middle%2Fty%2Fquery%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fkeys.rs?ref=829154f9807801b55317c4c4eea887829434c758", "patch": "@@ -296,3 +296,14 @@ impl Key for (Symbol, u32, u32) {\n         DUMMY_SP\n     }\n }\n+\n+impl<'tcx> Key for (ty::ParamEnv<'tcx>, DefId, SubstsRef<'tcx>) {\n+    type CacheSelector = DefaultCacheSelector;\n+\n+    fn query_crate(&self) -> CrateNum {\n+        self.1.krate\n+    }\n+    fn default_span(&self, tcx: TyCtxt<'_>) -> Span {\n+        tcx.def_span(self.1)\n+    }\n+}"}, {"sha": "955e2e3615909dc1fd708f50bb396b8ab936f33d", "filename": "src/librustc_ty/instance.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_ty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_ty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Finstance.rs?ref=829154f9807801b55317c4c4eea887829434c758", "patch": "@@ -11,9 +11,7 @@ use log::debug;\n \n pub fn resolve_instance<'tcx>(\n     tcx: TyCtxt<'tcx>,\n-    param_env: ty::ParamEnv<'tcx>,\n-    def_id: DefId,\n-    substs: SubstsRef<'tcx>,\n+    (param_env, def_id, substs): (ty::ParamEnv<'tcx>, DefId, SubstsRef<'tcx>),\n ) -> Option<Instance<'tcx>> {\n     debug!(\"resolve(def_id={:?}, substs={:?})\", def_id, substs);\n     let result = if let Some(trait_def_id) = tcx.trait_of_item(def_id) {\n@@ -199,3 +197,7 @@ fn resolve_associated_item<'tcx>(\n         traits::VtableAutoImpl(..) | traits::VtableParam(..) | traits::VtableTraitAlias(..) => None,\n     }\n }\n+\n+pub fn provide(providers: &mut ty::query::Providers<'_>) {\n+    *providers = ty::query::Providers { resolve_instance, ..*providers };\n+}"}, {"sha": "75e62e796408a6b3822ef13dca1f3bb37c235374", "filename": "src/librustc_ty/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_ty%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829154f9807801b55317c4c4eea887829434c758/src%2Flibrustc_ty%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Flib.rs?ref=829154f9807801b55317c4c4eea887829434c758", "patch": "@@ -25,4 +25,5 @@ pub fn provide(providers: &mut Providers<'_>) {\n     common_traits::provide(providers);\n     needs_drop::provide(providers);\n     ty::provide(providers);\n+    instance::provide(providers);\n }"}]}