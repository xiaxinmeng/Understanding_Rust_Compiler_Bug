{"sha": "456283c95dfc21a94a3f48e26a0809bc8976afbe", "node_id": "C_kwDOAAsO6NoAKDQ1NjI4M2M5NWRmYzIxYTk0YTNmNDhlMjZhMDgwOWJjODk3NmFmYmU", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-10-19T12:58:21Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-10-19T12:58:21Z"}, "message": "Make new symbol mangling scheme default for compiler itself.", "tree": {"sha": "ae4d2222aecf0de9dce988e8d80384dfe5f10f71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae4d2222aecf0de9dce988e8d80384dfe5f10f71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/456283c95dfc21a94a3f48e26a0809bc8976afbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/456283c95dfc21a94a3f48e26a0809bc8976afbe", "html_url": "https://github.com/rust-lang/rust/commit/456283c95dfc21a94a3f48e26a0809bc8976afbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/456283c95dfc21a94a3f48e26a0809bc8976afbe/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d45ed7502ad225739270a368528725930f54b7b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d45ed7502ad225739270a368528725930f54b7b6", "html_url": "https://github.com/rust-lang/rust/commit/d45ed7502ad225739270a368528725930f54b7b6"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "97289befd3100238b382c392c4a87ac24521e9e2", "filename": "config.toml.example", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/456283c95dfc21a94a3f48e26a0809bc8976afbe/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/456283c95dfc21a94a3f48e26a0809bc8976afbe/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=456283c95dfc21a94a3f48e26a0809bc8976afbe", "patch": "@@ -603,7 +603,11 @@ changelog-seen = 2\n \n # Enable symbol-mangling-version v0. This can be helpful when profiling rustc,\n # as generics will be preserved in symbols (rather than erased into opaque T).\n-#new-symbol-mangling = false\n+# When no setting is given, the new scheme will be used when compiling the\n+# compiler and its tools and the legacy scheme will be used when compiling the\n+# standard library.\n+# If an explicit setting is given, it will be used for all parts of the codebase.\n+#new-symbol-mangling = true|false (see comment)\n \n # =============================================================================\n # Options for specific targets"}, {"sha": "d5656f0f37e0389f336276d4942016847e60bc3a", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/456283c95dfc21a94a3f48e26a0809bc8976afbe/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456283c95dfc21a94a3f48e26a0809bc8976afbe/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=456283c95dfc21a94a3f48e26a0809bc8976afbe", "patch": "@@ -972,8 +972,26 @@ impl<'a> Builder<'a> {\n             }\n         }\n \n-        if self.config.rust_new_symbol_mangling {\n+        let use_new_symbol_mangling = match self.config.rust_new_symbol_mangling {\n+            Some(setting) => {\n+                // If an explicit setting is given, use that\n+                setting\n+            }\n+            None => {\n+                if mode == Mode::Std {\n+                    // The standard library defaults to the legacy scheme\n+                    false\n+                } else {\n+                    // The compiler and tools default to the new scheme\n+                    true\n+                }\n+            }\n+        };\n+\n+        if use_new_symbol_mangling {\n             rustflags.arg(\"-Zsymbol-mangling-version=v0\");\n+        } else {\n+            rustflags.arg(\"-Zsymbol-mangling-version=legacy\");\n         }\n \n         // FIXME: It might be better to use the same value for both `RUSTFLAGS` and `RUSTDOCFLAGS`,"}, {"sha": "6585152ab31a785301cc13ae4ce5b36313ddc4bf", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/456283c95dfc21a94a3f48e26a0809bc8976afbe/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456283c95dfc21a94a3f48e26a0809bc8976afbe/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=456283c95dfc21a94a3f48e26a0809bc8976afbe", "patch": "@@ -140,7 +140,7 @@ pub struct Config {\n     pub rust_verify_llvm_ir: bool,\n     pub rust_thin_lto_import_instr_limit: Option<u32>,\n     pub rust_remap_debuginfo: bool,\n-    pub rust_new_symbol_mangling: bool,\n+    pub rust_new_symbol_mangling: Option<bool>,\n     pub rust_profile_use: Option<String>,\n     pub rust_profile_generate: Option<String>,\n     pub llvm_profile_use: Option<String>,\n@@ -870,7 +870,7 @@ impl Config {\n             config.rust_run_dsymutil = rust.run_dsymutil.unwrap_or(false);\n             optimize = rust.optimize;\n             ignore_git = rust.ignore_git;\n-            set(&mut config.rust_new_symbol_mangling, rust.new_symbol_mangling);\n+            config.rust_new_symbol_mangling = rust.new_symbol_mangling;\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n             set(&mut config.rust_rpath, rust.rpath);"}]}