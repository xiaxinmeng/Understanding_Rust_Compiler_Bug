{"sha": "c57481001ea81665b1ca23368b710a0435d28653", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NzQ4MTAwMWVhODE2NjViMWNhMjMzNjhiNzEwYTA0MzVkMjg2NTM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-10T19:20:21Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-11T14:36:46Z"}, "message": "Remove ReentrantMutex\n\nThis drops the parking_lot dependency; the ReentrantMutex type appeared\nto be unused (at least, no compilation failures occurred).\n\nThis is technically a possible change in behavior of its users, as\nlock() would wait on other threads releasing their guards, but since we\ndidn't actually remove any threading or such in this code, it appears\nthat we never used that behavior (the behavior change is only noticeable\nif the type previously was used in two threads, in a single thread\nReentrantMutex is useless).", "tree": {"sha": "119381b099f7b5c229a26f2eae616044e805b610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/119381b099f7b5c229a26f2eae616044e805b610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c57481001ea81665b1ca23368b710a0435d28653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c57481001ea81665b1ca23368b710a0435d28653", "html_url": "https://github.com/rust-lang/rust/commit/c57481001ea81665b1ca23368b710a0435d28653", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c57481001ea81665b1ca23368b710a0435d28653/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f80a8d7d564b17fe3831c4b5e5404d93a013bf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f80a8d7d564b17fe3831c4b5e5404d93a013bf5", "html_url": "https://github.com/rust-lang/rust/commit/8f80a8d7d564b17fe3831c4b5e5404d93a013bf5"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "ab6731e4d433d583bcfa0c7dccbeff6c631216bf", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c57481001ea81665b1ca23368b710a0435d28653/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c57481001ea81665b1ca23368b710a0435d28653/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=c57481001ea81665b1ca23368b710a0435d28653", "patch": "@@ -3252,7 +3252,6 @@ name = \"rustdoc\"\n version = \"0.0.0\"\n dependencies = [\n  \"minifier 0.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pulldown-cmark 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "0eb8b73016d1048493b682d6b33f86cee31ed05f", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=c57481001ea81665b1ca23368b710a0435d28653", "patch": "@@ -13,4 +13,3 @@ pulldown-cmark = { version = \"0.5.3\", default-features = false }\n minifier = \"0.0.33\"\n rayon = { version = \"0.2.0\", package = \"rustc-rayon\" }\n tempfile = \"3\"\n-parking_lot = \"0.7\""}, {"sha": "a8336607f7ae9978d3daecc09dea5a8ae76ebd66", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=c57481001ea81665b1ca23368b710a0435d28653", "patch": "@@ -574,8 +574,7 @@ pub fn record_extern_trait(cx: &DocContext<'_>, did: DefId) {\n     }\n \n     {\n-        let external_traits = cx.external_traits.lock();\n-        if external_traits.borrow().contains_key(&did) ||\n+        if cx.external_traits.borrow().contains_key(&did) ||\n             cx.active_extern_traits.borrow().contains(&did)\n         {\n             return;\n@@ -588,8 +587,7 @@ pub fn record_extern_trait(cx: &DocContext<'_>, did: DefId) {\n     let trait_ = build_external_trait(cx, did);\n \n     {\n-        let external_traits = cx.external_traits.lock();\n-        external_traits.borrow_mut().insert(did, trait_);\n+        cx.external_traits.borrow_mut().insert(did, trait_);\n     }\n     cx.active_extern_traits.borrow_mut().remove_item(&did);\n }"}, {"sha": "ee76bf35cab9157b2b707f745e98c3da220e66f3", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c57481001ea81665b1ca23368b710a0435d28653", "patch": "@@ -45,8 +45,6 @@ use std::cell::RefCell;\n use std::sync::Arc;\n use std::u32;\n \n-use parking_lot::ReentrantMutex;\n-\n use crate::core::{self, DocContext};\n use crate::doctree;\n use crate::html::render::{cache, ExternalLocation};\n@@ -133,7 +131,7 @@ pub struct Crate {\n     pub primitives: Vec<(DefId, PrimitiveType, Attributes)>,\n     // These are later on moved into `CACHEKEY`, leaving the map empty.\n     // Only here so that they can be filtered through the rustdoc passes.\n-    pub external_traits: Arc<ReentrantMutex<RefCell<FxHashMap<DefId, Trait>>>>,\n+    pub external_traits: Arc<RefCell<FxHashMap<DefId, Trait>>>,\n     pub masked_crates: FxHashSet<CrateNum>,\n }\n "}, {"sha": "6b524e1206f330a4a0d30853a8dec3e697c2312c", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=c57481001ea81665b1ca23368b710a0435d28653", "patch": "@@ -22,7 +22,6 @@ use syntax::json::JsonEmitter;\n use syntax::symbol::sym;\n use errors;\n use errors::emitter::{Emitter, EmitterWriter};\n-use parking_lot::ReentrantMutex;\n \n use std::cell::RefCell;\n use std::mem;\n@@ -50,7 +49,7 @@ pub struct DocContext<'tcx> {\n     /// Later on moved into `html::render::CACHE_KEY`\n     pub renderinfo: RefCell<RenderInfo>,\n     /// Later on moved through `clean::Crate` into `html::render::CACHE_KEY`\n-    pub external_traits: Arc<ReentrantMutex<RefCell<FxHashMap<DefId, clean::Trait>>>>,\n+    pub external_traits: Arc<RefCell<FxHashMap<DefId, clean::Trait>>>,\n     /// Used while populating `external_traits` to ensure we don't process the same trait twice at\n     /// the same time.\n     pub active_extern_traits: RefCell<Vec<DefId>>,"}, {"sha": "5482239c7ce28dd2b1ac3da5be0ba57f341b82f8", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=c57481001ea81665b1ca23368b710a0435d28653", "patch": "@@ -105,12 +105,12 @@ pub trait DocFolder : Sized {\n         c.module = c.module.take().and_then(|module| self.fold_item(module));\n \n         {\n-            let guard = c.external_traits.lock();\n-            let traits = guard.replace(Default::default());\n-            guard.borrow_mut().extend(traits.into_iter().map(|(k, mut v)| {\n+            let mut guard = c.external_traits.borrow_mut();\n+            let external_traits = std::mem::replace(&mut *guard, Default::default());\n+            *guard = external_traits.into_iter().map(|(k, mut v)| {\n                 v.items = v.items.into_iter().filter_map(|i| self.fold_item(i)).collect();\n                 (k, v)\n-            }));\n+            }).collect();\n         }\n         c\n     }"}, {"sha": "211f1e325b9ec095fcdfbcc102ab780febc4cf70", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57481001ea81665b1ca23368b710a0435d28653/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c57481001ea81665b1ca23368b710a0435d28653", "patch": "@@ -659,7 +659,7 @@ pub fn run(mut krate: clean::Crate,\n         crate_version: krate.version.take(),\n         orphan_impl_items: Vec::new(),\n         orphan_trait_impls: Vec::new(),\n-        traits: krate.external_traits.lock().replace(Default::default()),\n+        traits: krate.external_traits.replace(Default::default()),\n         deref_trait_did,\n         deref_mut_trait_did,\n         owned_box_did,"}]}