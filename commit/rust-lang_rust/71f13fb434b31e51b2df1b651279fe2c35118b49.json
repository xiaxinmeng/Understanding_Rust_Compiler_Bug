{"sha": "71f13fb434b31e51b2df1b651279fe2c35118b49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZjEzZmI0MzRiMzFlNTFiMmRmMWI2NTEyNzlmZTJjMzUxMThiNDk=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-26T19:43:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-26T19:43:24Z"}, "message": "Rollup merge of #81325 - osa1:issue81293, r=estebank\n\ntypeck: Don't suggest converting LHS exprs\n\nConverting LHS of an assignment does not work, so avoid suggesting that.\n\nFixes #81293", "tree": {"sha": "94f2eec1df148f7d74bb0e3f61cee99972c343ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94f2eec1df148f7d74bb0e3f61cee99972c343ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71f13fb434b31e51b2df1b651279fe2c35118b49", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEHDcCRBK7hj4Ov3rIwAAdHIIAJhExw1iSYzUv0uP3E74CRIj\nXA1WryWvvLoC9AgxV7tQxysMRos/jt8ickhK06vi7CIC/qmFjNZ7Pwygx1jAOkZ8\nfVtVn/ui4hVzN3gnBMS0G2YtyEj2VYiovNORr+Otnc/nJv2lPeNjLrzEvsif5HFy\nVh3lx7FFStP5TQyNrZsYxhOOLLlYhthjz1QSbKtLcE3JycqhrIAS5nTg5cc0uv7G\nyby1g3niUh3vwodN9sgtIsRcVKZRmESdx5ejAHM9BTTALIUacKSRNI6lZgysEW7Z\nHdpTmYEh0G6R2wikf7OBFB7www4eRWWKzsNQwuLgNePUhaW273zPqQZG3iKz44o=\n=VjGw\n-----END PGP SIGNATURE-----\n", "payload": "tree 94f2eec1df148f7d74bb0e3f61cee99972c343ef\nparent 1308c1445c032e2fbebc5cb72c5949091cb78228\nparent d035be8e6f7f618ad2e78f2d5a3790c6e310fd67\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611690204 +0900\ncommitter GitHub <noreply@github.com> 1611690204 +0900\n\nRollup merge of #81325 - osa1:issue81293, r=estebank\n\ntypeck: Don't suggest converting LHS exprs\n\nConverting LHS of an assignment does not work, so avoid suggesting that.\n\nFixes #81293\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71f13fb434b31e51b2df1b651279fe2c35118b49", "html_url": "https://github.com/rust-lang/rust/commit/71f13fb434b31e51b2df1b651279fe2c35118b49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71f13fb434b31e51b2df1b651279fe2c35118b49/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1308c1445c032e2fbebc5cb72c5949091cb78228", "url": "https://api.github.com/repos/rust-lang/rust/commits/1308c1445c032e2fbebc5cb72c5949091cb78228", "html_url": "https://github.com/rust-lang/rust/commit/1308c1445c032e2fbebc5cb72c5949091cb78228"}, {"sha": "d035be8e6f7f618ad2e78f2d5a3790c6e310fd67", "url": "https://api.github.com/repos/rust-lang/rust/commits/d035be8e6f7f618ad2e78f2d5a3790c6e310fd67", "html_url": "https://github.com/rust-lang/rust/commit/d035be8e6f7f618ad2e78f2d5a3790c6e310fd67"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "26b35e87ac491575e0e80b27f710aa7d354aabeb", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/71f13fb434b31e51b2df1b651279fe2c35118b49/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f13fb434b31e51b2df1b651279fe2c35118b49/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=71f13fb434b31e51b2df1b651279fe2c35118b49", "patch": "@@ -566,6 +566,17 @@ impl<'hir> Map<'hir> {\n         )\n     }\n \n+    /// Checks if the node is left-hand side of an assignment.\n+    pub fn is_lhs(&self, id: HirId) -> bool {\n+        match self.find(self.get_parent_node(id)) {\n+            Some(Node::Expr(expr)) => match expr.kind {\n+                ExprKind::Assign(lhs, _rhs, _span) => lhs.hir_id == id,\n+                _ => false,\n+            },\n+            _ => false,\n+        }\n+    }\n+\n     /// Whether the expression pointed at by `hir_id` belongs to a `const` evaluation context.\n     /// Used exclusively for diagnostics, to avoid suggestion function calls.\n     pub fn is_inside_const_context(&self, hir_id: HirId) -> bool {"}, {"sha": "3c9c683f4b0cb4c89bcc75da7aa18c3673734af4", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/71f13fb434b31e51b2df1b651279fe2c35118b49/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f13fb434b31e51b2df1b651279fe2c35118b49/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=71f13fb434b31e51b2df1b651279fe2c35118b49", "patch": "@@ -816,6 +816,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             |err: &mut DiagnosticBuilder<'_>,\n              found_to_exp_is_fallible: bool,\n              exp_to_found_is_fallible: bool| {\n+                let exp_is_lhs =\n+                    expected_ty_expr.map(|e| self.tcx.hir().is_lhs(e.hir_id)).unwrap_or(false);\n+\n+                if exp_is_lhs {\n+                    return;\n+                }\n+\n                 let always_fallible = found_to_exp_is_fallible\n                     && (exp_to_found_is_fallible || expected_ty_expr.is_none());\n                 let msg = if literal_is_ty_suffixed(expr) {"}, {"sha": "076b8c944b8a4d79869e1058f148dd72ca5428e8", "filename": "src/test/ui/typeck/issue-81293.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/71f13fb434b31e51b2df1b651279fe2c35118b49/src%2Ftest%2Fui%2Ftypeck%2Fissue-81293.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f13fb434b31e51b2df1b651279fe2c35118b49/src%2Ftest%2Fui%2Ftypeck%2Fissue-81293.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-81293.rs?ref=71f13fb434b31e51b2df1b651279fe2c35118b49", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    let a: u16;\n+    let b: u16 = 42;\n+    let c: usize = 5;\n+\n+    a = c + b * 5; //~ ERROR: mismatched types [E0308]\n+                   //~| ERROR: mismatched types [E0308]\n+                   //~| ERROR: cannot add `u16` to `usize` [E0277]\n+}"}, {"sha": "1e6ff3b5f9ee752ed72fc8dc2a7bdb11d1dc056c", "filename": "src/test/ui/typeck/issue-81293.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/71f13fb434b31e51b2df1b651279fe2c35118b49/src%2Ftest%2Fui%2Ftypeck%2Fissue-81293.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/71f13fb434b31e51b2df1b651279fe2c35118b49/src%2Ftest%2Fui%2Ftypeck%2Fissue-81293.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-81293.stderr?ref=71f13fb434b31e51b2df1b651279fe2c35118b49", "patch": "@@ -0,0 +1,24 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-81293.rs:6:13\n+   |\n+LL |     a = c + b * 5;\n+   |             ^^^^^ expected `usize`, found `u16`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-81293.rs:6:9\n+   |\n+LL |     a = c + b * 5;\n+   |         ^^^^^^^^^ expected `u16`, found `usize`\n+\n+error[E0277]: cannot add `u16` to `usize`\n+  --> $DIR/issue-81293.rs:6:11\n+   |\n+LL |     a = c + b * 5;\n+   |           ^ no implementation for `usize + u16`\n+   |\n+   = help: the trait `Add<u16>` is not implemented for `usize`\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0277, E0308.\n+For more information about an error, try `rustc --explain E0277`."}]}