{"sha": "6edc59685382d3ec0b6b89b05897a22a597c48a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZGM1OTY4NTM4MmQzZWMwYjZiODliMDU4OTdhMjJhNTk3YzQ4YTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-11T08:57:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-11T08:57:39Z"}, "message": "Auto merge of #41168 - Shizmob:jemalloc-musl, r=alexcrichton\n\nFix jemalloc support for musl\n\nJust like DragonFlyBSD, using the same symbols as the system allocator will result in a segmentation fault at runtime due to allocator mismatches. As such, it's better to prefix the jemalloc symbols instead, avoiding crashes.\n\nWe encountered this problem on a dynamically-linked musl target (with patches to Rust to make that possible, see #40113). It may not show up immediately obviously on the current statically-linked CRT targets.", "tree": {"sha": "0ab50b47109274afac573f535ae5325f9b8f6c9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab50b47109274afac573f535ae5325f9b8f6c9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6edc59685382d3ec0b6b89b05897a22a597c48a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6edc59685382d3ec0b6b89b05897a22a597c48a1", "html_url": "https://github.com/rust-lang/rust/commit/6edc59685382d3ec0b6b89b05897a22a597c48a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6edc59685382d3ec0b6b89b05897a22a597c48a1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d85504410e3e5dec2ea5fffd64b182d7a85750f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d85504410e3e5dec2ea5fffd64b182d7a85750f", "html_url": "https://github.com/rust-lang/rust/commit/8d85504410e3e5dec2ea5fffd64b182d7a85750f"}, {"sha": "536011d929ecbd1170baf34e09580e567c971f95", "url": "https://api.github.com/repos/rust-lang/rust/commits/536011d929ecbd1170baf34e09580e567c971f95", "html_url": "https://github.com/rust-lang/rust/commit/536011d929ecbd1170baf34e09580e567c971f95"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f3a0eebe6984d2a11ca73d93871b6c4314683c15", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6edc59685382d3ec0b6b89b05897a22a597c48a1/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6edc59685382d3ec0b6b89b05897a22a597c48a1/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=6edc59685382d3ec0b6b89b05897a22a597c48a1", "patch": "@@ -129,7 +129,7 @@ fn main() {\n         // should be good to go!\n         cmd.arg(\"--with-jemalloc-prefix=je_\");\n         cmd.arg(\"--disable-tls\");\n-    } else if target.contains(\"dragonfly\") {\n+    } else if target.contains(\"dragonfly\") || target.contains(\"musl\") {\n         cmd.arg(\"--with-jemalloc-prefix=je_\");\n     }\n "}, {"sha": "83cc1ef09c29c2fdf93e1085a1dda309ec7879dd", "filename": "src/liballoc_jemalloc/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6edc59685382d3ec0b6b89b05897a22a597c48a1/src%2Fliballoc_jemalloc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6edc59685382d3ec0b6b89b05897a22a597c48a1/src%2Fliballoc_jemalloc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Flib.rs?ref=6edc59685382d3ec0b6b89b05897a22a597c48a1", "patch": "@@ -35,23 +35,23 @@ mod imp {\n     // request it as unprefixing cause segfaults (mismatches in allocators).\n     extern \"C\" {\n         #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                       target_os = \"dragonfly\", target_os = \"windows\"),\n+                       target_os = \"dragonfly\", target_os = \"windows\", target_env = \"musl\"),\n                    link_name = \"je_mallocx\")]\n         fn mallocx(size: size_t, flags: c_int) -> *mut c_void;\n         #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                       target_os = \"dragonfly\", target_os = \"windows\"),\n+                       target_os = \"dragonfly\", target_os = \"windows\", target_env = \"musl\"),\n                    link_name = \"je_rallocx\")]\n         fn rallocx(ptr: *mut c_void, size: size_t, flags: c_int) -> *mut c_void;\n         #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                       target_os = \"dragonfly\", target_os = \"windows\"),\n+                       target_os = \"dragonfly\", target_os = \"windows\", target_env = \"musl\"),\n                    link_name = \"je_xallocx\")]\n         fn xallocx(ptr: *mut c_void, size: size_t, extra: size_t, flags: c_int) -> size_t;\n         #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                       target_os = \"dragonfly\", target_os = \"windows\"),\n+                       target_os = \"dragonfly\", target_os = \"windows\", target_env = \"musl\"),\n                    link_name = \"je_sdallocx\")]\n         fn sdallocx(ptr: *mut c_void, size: size_t, flags: c_int);\n         #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n-                       target_os = \"dragonfly\", target_os = \"windows\"),\n+                       target_os = \"dragonfly\", target_os = \"windows\", target_env = \"musl\"),\n                    link_name = \"je_nallocx\")]\n         fn nallocx(size: size_t, flags: c_int) -> size_t;\n     }"}]}