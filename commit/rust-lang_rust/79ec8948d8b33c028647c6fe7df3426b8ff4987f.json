{"sha": "79ec8948d8b33c028647c6fe7df3426b8ff4987f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZWM4OTQ4ZDhiMzNjMDI4NjQ3YzZmZTdkZjM0MjZiOGZmNDk4N2Y=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-18T19:26:41Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-18T19:26:41Z"}, "message": "Fix some warnings", "tree": {"sha": "91bf62f3b69edfc4a768f6bd0a57a9f1cfef7e29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91bf62f3b69edfc4a768f6bd0a57a9f1cfef7e29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79ec8948d8b33c028647c6fe7df3426b8ff4987f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79ec8948d8b33c028647c6fe7df3426b8ff4987f", "html_url": "https://github.com/rust-lang/rust/commit/79ec8948d8b33c028647c6fe7df3426b8ff4987f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79ec8948d8b33c028647c6fe7df3426b8ff4987f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfff2a50fdcf96a3a3f26a345833c083902460f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfff2a50fdcf96a3a3f26a345833c083902460f1", "html_url": "https://github.com/rust-lang/rust/commit/bfff2a50fdcf96a3a3f26a345833c083902460f1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cfcb091afb5a2f4a909ab383e327b75c8734de28", "filename": "src/allocator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79ec8948d8b33c028647c6fe7df3426b8ff4987f/src%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ec8948d8b33c028647c6fe7df3426b8ff4987f/src%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fallocator.rs?ref=79ec8948d8b33c028647c6fe7df3426b8ff4987f", "patch": "@@ -21,14 +21,14 @@ pub fn codegen(tcx: TyCtxt<'_>, module: &mut Module<impl Backend + 'static>) ->\n     if any_dynamic_crate {\n         false\n     } else if let Some(kind) = tcx.allocator_kind() {\n-        codegen_inner(tcx.sess, module, kind);\n+        codegen_inner(module, kind);\n         true\n     } else {\n         false\n     }\n }\n \n-pub fn codegen_inner(sess: &Session, module: &mut Module<impl Backend + 'static>, kind: AllocatorKind) {\n+pub fn codegen_inner(module: &mut Module<impl Backend + 'static>, kind: AllocatorKind) {\n     let usize_ty = module.target_config().pointer_type();\n \n     for method in ALLOCATOR_METHODS {"}, {"sha": "97bb2e0caecb4adcc58757c33daed71cc8765a84", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79ec8948d8b33c028647c6fe7df3426b8ff4987f/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ec8948d8b33c028647c6fe7df3426b8ff4987f/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=79ec8948d8b33c028647c6fe7df3426b8ff4987f", "patch": "@@ -74,7 +74,7 @@ pub struct CommentWriter {\n \n impl CommentWriter {\n     pub fn new<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx>) -> Self {\n-        let mut global_comments = if cfg!(debug_assertions) {\n+        let global_comments = if cfg!(debug_assertions) {\n             vec![\n                 format!(\"symbol {}\", tcx.symbol_name(instance).name.as_str()),\n                 format!(\"instance {:?}\", instance),"}]}