{"sha": "5fc4045d789ed752c49b9368a2cc9a1cd8c341d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYzQwNDVkNzg5ZWQ3NTJjNDliOTM2OGEyY2M5YTFjZDhjMzQxZDU=", "commit": {"author": {"name": "Flaper Fesp", "email": "flaper87@gmail.com", "date": "2013-08-19T23:26:05Z"}, "committer": {"name": "Flaper Fesp", "email": "flaper87@gmail.com", "date": "2013-08-26T22:35:39Z"}, "message": "Don't make the runtime exit on illegal calls", "tree": {"sha": "1860876ee4ed3beba8d73845bb0c1598a746ce4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1860876ee4ed3beba8d73845bb0c1598a746ce4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5", "html_url": "https://github.com/rust-lang/rust/commit/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4093b4a83dc1660257c88ca7834c46530010985", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4093b4a83dc1660257c88ca7834c46530010985", "html_url": "https://github.com/rust-lang/rust/commit/c4093b4a83dc1660257c88ca7834c46530010985"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "afef699390b74ec7ecce703764b5f450aad80561", "filename": "src/libstd/rt/kill.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5/src%2Flibstd%2Frt%2Fkill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5/src%2Flibstd%2Frt%2Fkill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fkill.rs?ref=5fc4045d789ed752c49b9368a2cc9a1cd8c341d5", "patch": "@@ -647,7 +647,9 @@ impl Death {\n     /// All calls must be paired with a preceding call to inhibit_kill.\n     #[inline]\n     pub fn allow_kill(&mut self, already_failing: bool) {\n-        rtassert!(self.unkillable != 0);\n+        if self.unkillable == 0 {\n+            fail!(\"illegal call of rekillable\");\n+        }\n         self.unkillable -= 1;\n         if self.unkillable == 0 {\n             rtassert!(self.kill_handle.is_some());"}, {"sha": "d094623b57ba302849898f0a37351c42b08f4d05", "filename": "src/libstd/task/mod.rs", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5/src%2Flibstd%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fc4045d789ed752c49b9368a2cc9a1cd8c341d5/src%2Flibstd%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fmod.rs?ref=5fc4045d789ed752c49b9368a2cc9a1cd8c341d5", "patch": "@@ -671,7 +671,39 @@ fn test_kill_rekillable_task() {\n     }\n }\n \n-#[test] #[should_fail]\n+#[test]\n+#[ignore(cfg(windows))]\n+#[should_fail]\n+fn test_rekillable_not_nested() {\n+    do rekillable {\n+        // This should fail before\n+        // receiving anything since\n+        // this block should be nested\n+        // into a unkillable block.\n+        yield();\n+    }\n+}\n+\n+\n+#[test]\n+#[ignore(cfg(windows))]\n+fn test_rekillable_nested_failure() {\n+\n+    let result = do task::try {\n+        do unkillable {\n+            do rekillable {\n+                let (port,chan) = comm::stream();\n+                do task::spawn { chan.send(()); fail!(); }\n+                port.recv(); // wait for child to exist\n+                port.recv(); // block forever, expect to get killed.\n+            } \n+        }\n+    };\n+    assert!(result.is_err());\n+}\n+\n+\n+#[test] #[should_fail] #[ignore(cfg(windows))]\n fn test_cant_dup_task_builder() {\n     let mut builder = task();\n     builder.unlinked();\n@@ -1239,20 +1271,6 @@ fn test_unkillable_nested() {\n     po.recv();\n }\n \n-#[ignore(reason = \"linked failure\")]\n-#[test]\n-#[ignore(cfg(windows))]\n-#[should_fail]\n-fn test_rekillable_not_nested() {\n-    do rekillable {\n-        // This should fail before\n-        // receiving anything since\n-        // this block should be nested\n-        // into a unkillable block.\n-        yield();\n-    }\n-}\n-\n #[test]\n fn test_child_doesnt_ref_parent() {\n     // If the child refcounts the parent task, this will stack overflow when"}, {"sha": "f67442eee27d3d075a65cf7f9a70f7ec6649ffd1", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=5fc4045d789ed752c49b9368a2cc9a1cd8c341d5", "patch": "@@ -1 +1 @@\n-Subproject commit 0964c68ddf2c67ce455e7443a06f4bb3db9e92bb\n+Subproject commit f67442eee27d3d075a65cf7f9a70f7ec6649ffd1"}]}