{"sha": "3e04fed6fad401705c41f6f4ab24637d7c32c679", "node_id": "C_kwDOAAsO6NoAKDNlMDRmZWQ2ZmFkNDAxNzA1YzQxZjZmNGFiMjQ2MzdkN2MzMmM2Nzk", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-07-29T00:16:25Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-16T02:13:23Z"}, "message": "Remove `{ast,hir}::WhereEqPredicate::id`.\n\nThese fields are unused.", "tree": {"sha": "e1cc667bb4e1165f95e3052299534c3892c04282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1cc667bb4e1165f95e3052299534c3892c04282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e04fed6fad401705c41f6f4ab24637d7c32c679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e04fed6fad401705c41f6f4ab24637d7c32c679", "html_url": "https://github.com/rust-lang/rust/commit/3e04fed6fad401705c41f6f4ab24637d7c32c679", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e04fed6fad401705c41f6f4ab24637d7c32c679/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40336865fe7d4a01139a3336639c6971647e885c", "url": "https://api.github.com/repos/rust-lang/rust/commits/40336865fe7d4a01139a3336639c6971647e885c", "html_url": "https://github.com/rust-lang/rust/commit/40336865fe7d4a01139a3336639c6971647e885c"}], "stats": {"total": 20, "additions": 4, "deletions": 16}, "files": [{"sha": "f7a18b27999b754fa507a1ecc97329f639c164a0", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=3e04fed6fad401705c41f6f4ab24637d7c32c679", "patch": "@@ -497,7 +497,6 @@ pub struct WhereRegionPredicate {\n /// E.g., `T = int`.\n #[derive(Clone, Encodable, Decodable, Debug)]\n pub struct WhereEqPredicate {\n-    pub id: NodeId,\n     pub span: Span,\n     pub lhs_ty: P<Ty>,\n     pub rhs_ty: P<Ty>,"}, {"sha": "defa22cb63e12c3d89a413339be87c33874d6b93", "filename": "compiler/rustc_ast/src/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs?ref=3e04fed6fad401705c41f6f4ab24637d7c32c679", "patch": "@@ -933,8 +933,7 @@ pub fn noop_visit_where_predicate<T: MutVisitor>(pred: &mut WherePredicate, vis:\n             visit_vec(bounds, |bound| noop_visit_param_bound(bound, vis));\n         }\n         WherePredicate::EqPredicate(ep) => {\n-            let WhereEqPredicate { id, span, lhs_ty, rhs_ty } = ep;\n-            vis.visit_id(id);\n+            let WhereEqPredicate { span, lhs_ty, rhs_ty } = ep;\n             vis.visit_span(span);\n             vis.visit_ty(lhs_ty);\n             vis.visit_ty(rhs_ty);"}, {"sha": "0f1bab24f96ca8036673d4c203790376df0ea8f3", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=3e04fed6fad401705c41f6f4ab24637d7c32c679", "patch": "@@ -1498,9 +1498,8 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 ),\n                 in_where_clause: true,\n             }),\n-            WherePredicate::EqPredicate(WhereEqPredicate { id, ref lhs_ty, ref rhs_ty, span }) => {\n+            WherePredicate::EqPredicate(WhereEqPredicate { ref lhs_ty, ref rhs_ty, span }) => {\n                 hir::WherePredicate::EqPredicate(hir::WhereEqPredicate {\n-                    hir_id: self.lower_node_id(id),\n                     lhs_ty: self\n                         .lower_ty(lhs_ty, ImplTraitContext::Disallowed(ImplTraitPosition::Type)),\n                     rhs_ty: self"}, {"sha": "9f3a80ea7cbdce84b935a897d593c41531131fa5", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs?ref=3e04fed6fad401705c41f6f4ab24637d7c32c679", "patch": "@@ -640,11 +640,7 @@ impl<'a> TraitDef<'a> {\n                 }\n                 ast::WherePredicate::EqPredicate(we) => {\n                     let span = we.span.with_ctxt(ctxt);\n-                    ast::WherePredicate::EqPredicate(ast::WhereEqPredicate {\n-                        id: ast::DUMMY_NODE_ID,\n-                        span,\n-                        ..we.clone()\n-                    })\n+                    ast::WherePredicate::EqPredicate(ast::WhereEqPredicate { span, ..we.clone() })\n                 }\n             }\n         }));"}, {"sha": "76ffbebddd7e43707a9fb4fbf87a24330b5dde45", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=3e04fed6fad401705c41f6f4ab24637d7c32c679", "patch": "@@ -778,7 +778,6 @@ impl<'hir> WhereRegionPredicate<'hir> {\n /// An equality predicate (e.g., `T = int`); currently unsupported.\n #[derive(Debug, HashStable_Generic)]\n pub struct WhereEqPredicate<'hir> {\n-    pub hir_id: HirId,\n     pub span: Span,\n     pub lhs_ty: &'hir Ty<'hir>,\n     pub rhs_ty: &'hir Ty<'hir>,"}, {"sha": "3d5e22add7187db19a2a52c1245976c028b83bc4", "filename": "compiler/rustc_hir/src/intravisit.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs?ref=3e04fed6fad401705c41f6f4ab24637d7c32c679", "patch": "@@ -876,10 +876,7 @@ pub fn walk_where_predicate<'v, V: Visitor<'v>>(\n             visitor.visit_lifetime(lifetime);\n             walk_list!(visitor, visit_param_bound, bounds);\n         }\n-        WherePredicate::EqPredicate(WhereEqPredicate {\n-            hir_id, ref lhs_ty, ref rhs_ty, ..\n-        }) => {\n-            visitor.visit_id(hir_id);\n+        WherePredicate::EqPredicate(WhereEqPredicate { ref lhs_ty, ref rhs_ty, .. }) => {\n             visitor.visit_ty(lhs_ty);\n             visitor.visit_ty(rhs_ty);\n         }"}, {"sha": "5e5f2fd7d9f8df7faed6c3e53719c9547029f8a2", "filename": "compiler/rustc_parse/src/parser/generics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e04fed6fad401705c41f6f4ab24637d7c32c679/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs?ref=3e04fed6fad401705c41f6f4ab24637d7c32c679", "patch": "@@ -314,7 +314,6 @@ impl<'a> Parser<'a> {\n                 span: lo.to(self.prev_token.span),\n                 lhs_ty: ty,\n                 rhs_ty,\n-                id: ast::DUMMY_NODE_ID,\n             }))\n         } else {\n             self.maybe_recover_bounds_doubled_colon(&ty)?;"}]}