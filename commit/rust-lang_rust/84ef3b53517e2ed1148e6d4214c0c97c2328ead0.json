{"sha": "84ef3b53517e2ed1148e6d4214c0c97c2328ead0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZWYzYjUzNTE3ZTJlZDExNDhlNmQ0MjE0YzBjOTdjMjMyOGVhZDA=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "root@localhost", "date": "2015-04-26T20:13:58Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "root@localhost", "date": "2015-04-27T00:10:42Z"}, "message": "collections: Improve example for as_string and as_vec", "tree": {"sha": "5e091545cf5aca5d896a6ccf98c5cf764cdfbe3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e091545cf5aca5d896a6ccf98c5cf764cdfbe3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84ef3b53517e2ed1148e6d4214c0c97c2328ead0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84ef3b53517e2ed1148e6d4214c0c97c2328ead0", "html_url": "https://github.com/rust-lang/rust/commit/84ef3b53517e2ed1148e6d4214c0c97c2328ead0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84ef3b53517e2ed1148e6d4214c0c97c2328ead0/comments", "author": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "committer": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f191f924214aa1dcd342ada1d99775ccbb01ddd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f191f924214aa1dcd342ada1d99775ccbb01ddd7", "html_url": "https://github.com/rust-lang/rust/commit/f191f924214aa1dcd342ada1d99775ccbb01ddd7"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "be6405dc85a1498fcbffba5194c8397c1754ebd9", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/84ef3b53517e2ed1148e6d4214c0c97c2328ead0/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84ef3b53517e2ed1148e6d4214c0c97c2328ead0/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=84ef3b53517e2ed1148e6d4214c0c97c2328ead0", "patch": "@@ -951,12 +951,13 @@ impl<'a> Deref for DerefString<'a> {\n /// # #![feature(collections)]\n /// use std::string::as_string;\n ///\n-/// fn string_consumer(s: String) {\n-///     assert_eq!(s, \"foo\".to_string());\n+/// // Let's pretend we have a function that requires `&String`\n+/// fn string_consumer(s: &String) {\n+///     assert_eq!(s, \"foo\");\n /// }\n ///\n-/// let string = as_string(\"foo\").clone();\n-/// string_consumer(string);\n+/// // Provide a `&String` from a `&str` without allocating\n+/// string_consumer(&as_string(\"foo\"));\n /// ```\n #[unstable(feature = \"collections\")]\n pub fn as_string<'a>(x: &'a str) -> DerefString<'a> {"}, {"sha": "98819e0d7ce6fb5549765309c24743ac4a58b874", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/84ef3b53517e2ed1148e6d4214c0c97c2328ead0/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84ef3b53517e2ed1148e6d4214c0c97c2328ead0/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=84ef3b53517e2ed1148e6d4214c0c97c2328ead0", "patch": "@@ -1919,6 +1919,22 @@ impl<'a, T> Drop for DerefVec<'a, T> {\n }\n \n /// Converts a slice to a wrapper type providing a `&Vec<T>` reference.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// # #![feature(collections)]\n+/// use std::vec::as_vec;\n+///\n+/// // Let's pretend we have a function that requires `&Vec<i32>`\n+/// fn vec_consumer(s: &Vec<i32>) {\n+///     assert_eq!(s, &[1, 2, 3]);\n+/// }\n+///\n+/// // Provide a `&Vec<i32>` from a `&[i32]` without allocating\n+/// let values = [1, 2, 3];\n+/// vec_consumer(&as_vec(&values));\n+/// ```\n #[unstable(feature = \"collections\")]\n pub fn as_vec<'a, T>(x: &'a [T]) -> DerefVec<'a, T> {\n     unsafe {"}]}