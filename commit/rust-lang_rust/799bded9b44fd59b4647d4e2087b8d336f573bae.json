{"sha": "799bded9b44fd59b4647d4e2087b8d336f573bae", "node_id": "C_kwDOAAsO6NoAKDc5OWJkZWQ5YjQ0ZmQ1OWI0NjQ3ZDRlMjA4N2I4ZDMzNmY1NzNiYWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-02T18:34:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-02T18:34:06Z"}, "message": "Rollup merge of #93574 - compiler-errors:bad-let-suggestion, r=lcnr\n\ndon't suggest adding `let` due to bad assignment expressions inside of `while` loop\n\nadds a check that our `lhs` expression is actually within the conditional part of the `while` loop, instead of anywhere in the `while` body.\n\nfixes #93486", "tree": {"sha": "3ded20415ccfc668b343cd95a93446cdff130825", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ded20415ccfc668b343cd95a93446cdff130825"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/799bded9b44fd59b4647d4e2087b8d336f573bae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+s6eCRBK7hj4Ov3rIwAAQF4IABt0BLPmf+ZVFBSGRgL05QXB\nGuZkdKpFEtMkD4Ub/KmHUbDHgqyXm+nGh1QVp5ZiTHJ8lmtNCUtKp/Lkxc+s0xpO\nKiZ7iqcrCzreFdO3fHihhGytOdXC6SA5mwYnHbhNA/7fYxD/8EYm4U11Sd7J9dt6\nW344Mek90YYazGizHDLUtyQsjBiQfFl3QB5e8H+fmMeDCfpYjvtT8nD/XBXgmP51\nog/beaRpeI/jbSpczlV45jDxDcSr6nFJTTvMQ+kNQObGFdmzxMFwvXJzgYOCSdTG\nRvkzjU1biwkkndAsgligNqOAUxWlfMxWb3ymzZPhr7kI3e0Abf8MrOErEOhNnFk=\n=kWGX\n-----END PGP SIGNATURE-----\n", "payload": "tree 3ded20415ccfc668b343cd95a93446cdff130825\nparent ef500863bd7a701506d275289af23f62eb931b40\nparent bc23bbb99034b762870d3e4372b53f2772ae5dee\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643826846 +0100\ncommitter GitHub <noreply@github.com> 1643826846 +0100\n\nRollup merge of #93574 - compiler-errors:bad-let-suggestion, r=lcnr\n\ndon't suggest adding `let` due to bad assignment expressions inside of `while` loop\n\nadds a check that our `lhs` expression is actually within the conditional part of the `while` loop, instead of anywhere in the `while` body.\n\nfixes #93486\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/799bded9b44fd59b4647d4e2087b8d336f573bae", "html_url": "https://github.com/rust-lang/rust/commit/799bded9b44fd59b4647d4e2087b8d336f573bae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/799bded9b44fd59b4647d4e2087b8d336f573bae/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef500863bd7a701506d275289af23f62eb931b40", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef500863bd7a701506d275289af23f62eb931b40", "html_url": "https://github.com/rust-lang/rust/commit/ef500863bd7a701506d275289af23f62eb931b40"}, {"sha": "bc23bbb99034b762870d3e4372b53f2772ae5dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc23bbb99034b762870d3e4372b53f2772ae5dee", "html_url": "https://github.com/rust-lang/rust/commit/bc23bbb99034b762870d3e4372b53f2772ae5dee"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "82cda5a2f2e738fdee2b2c9c3571127c76b31e90", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/799bded9b44fd59b4647d4e2087b8d336f573bae/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799bded9b44fd59b4647d4e2087b8d336f573bae/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=799bded9b44fd59b4647d4e2087b8d336f573bae", "patch": "@@ -865,14 +865,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         ),\n                     ..\n                 }) => {\n-                    // We have a situation like `while Some(0) = value.get(0) {`, where `while let`\n-                    // was more likely intended.\n-                    err.span_suggestion_verbose(\n-                        expr.span.shrink_to_lo(),\n-                        \"you might have meant to use pattern destructuring\",\n-                        \"let \".to_string(),\n-                        Applicability::MachineApplicable,\n-                    );\n+                    // Check if our lhs is a child of the condition of a while loop\n+                    let expr_is_ancestor = std::iter::successors(Some(lhs.hir_id), |id| {\n+                        self.tcx.hir().find_parent_node(*id)\n+                    })\n+                    .take_while(|id| *id != parent)\n+                    .any(|id| id == expr.hir_id);\n+                    // if it is, then we have a situation like `while Some(0) = value.get(0) {`,\n+                    // where `while let` was more likely intended.\n+                    if expr_is_ancestor {\n+                        err.span_suggestion_verbose(\n+                            expr.span.shrink_to_lo(),\n+                            \"you might have meant to use pattern destructuring\",\n+                            \"let \".to_string(),\n+                            Applicability::MachineApplicable,\n+                        );\n+                    }\n                     break;\n                 }\n                 hir::Node::Item(_)"}, {"sha": "f8f98d5c1c7dcd038e1efb7f52f48d1309756f0d", "filename": "src/test/ui/typeck/issue-93486.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/799bded9b44fd59b4647d4e2087b8d336f573bae/src%2Ftest%2Fui%2Ftypeck%2Fissue-93486.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799bded9b44fd59b4647d4e2087b8d336f573bae/src%2Ftest%2Fui%2Ftypeck%2Fissue-93486.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-93486.rs?ref=799bded9b44fd59b4647d4e2087b8d336f573bae", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    while let 1 = 1 {\n+        vec![].last_mut().unwrap() = 3_u8;\n+        //~^ ERROR invalid left-hand side of assignment\n+    }\n+}"}, {"sha": "70b5b63f1cba7ccb7034b6ecf3e1068e5ada37ad", "filename": "src/test/ui/typeck/issue-93486.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/799bded9b44fd59b4647d4e2087b8d336f573bae/src%2Ftest%2Fui%2Ftypeck%2Fissue-93486.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/799bded9b44fd59b4647d4e2087b8d336f573bae/src%2Ftest%2Fui%2Ftypeck%2Fissue-93486.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-93486.stderr?ref=799bded9b44fd59b4647d4e2087b8d336f573bae", "patch": "@@ -0,0 +1,11 @@\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/issue-93486.rs:3:36\n+   |\n+LL |         vec![].last_mut().unwrap() = 3_u8;\n+   |         -------------------------- ^\n+   |         |\n+   |         cannot assign to this expression\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0070`."}]}