{"sha": "6e67c4b2531690bd796b9529af4e90b72faea9d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNjdjNGIyNTMxNjkwYmQ3OTZiOTUyOWFmNGU5MGI3MmZhZWE5ZDI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T23:42:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T23:42:13Z"}, "message": "Cleanse usage of some unsafe functions on win32", "tree": {"sha": "d214287ba5aef1d751d23201e0f822735ace2302", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d214287ba5aef1d751d23201e0f822735ace2302"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e67c4b2531690bd796b9529af4e90b72faea9d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e67c4b2531690bd796b9529af4e90b72faea9d2", "html_url": "https://github.com/rust-lang/rust/commit/6e67c4b2531690bd796b9529af4e90b72faea9d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e67c4b2531690bd796b9529af4e90b72faea9d2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8a0e592da3e8f5cadc0c854c61b0934d10bc0a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a0e592da3e8f5cadc0c854c61b0934d10bc0a4", "html_url": "https://github.com/rust-lang/rust/commit/e8a0e592da3e8f5cadc0c854c61b0934d10bc0a4"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "bb98c0731f81ce9430c4f4713cc9ff78dd1d051f", "filename": "src/lib/generic_os.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e67c4b2531690bd796b9529af4e90b72faea9d2/src%2Flib%2Fgeneric_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e67c4b2531690bd796b9529af4e90b72faea9d2/src%2Flib%2Fgeneric_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fgeneric_os.rs?ref=6e67c4b2531690bd796b9529af4e90b72faea9d2", "patch": "@@ -38,14 +38,18 @@ fn getenv(n: str) -> option::t<str> {\n         let res =\n             str::as_buf(n,\n                         {|nbuf|\n+                            unsafe {\n                             let vbuf = vec::to_ptr(v);\n                             os::kernel32::GetEnvironmentVariableA(nbuf, vbuf,\n                                                                   nsize)\n+                        }\n                         });\n         if res == 0u {\n             ret option::none;\n         } else if res < nsize {\n-            vec::unsafe::set_len(v, res);\n+            unsafe {\n+                vec::unsafe::set_len(v, res);\n+            }\n             ret option::some(str::unsafe_from_bytes(v));\n         } else { nsize = res; }\n     }"}]}