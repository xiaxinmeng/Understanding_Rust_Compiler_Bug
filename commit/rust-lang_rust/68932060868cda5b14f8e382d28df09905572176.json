{"sha": "68932060868cda5b14f8e382d28df09905572176", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4OTMyMDYwODY4Y2RhNWIxNGY4ZTM4MmQyOGRmMDk5MDU1NzIxNzY=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-12-16T17:10:40Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-12-16T17:10:40Z"}, "message": "Revert \"Auto merge of #78790 - Gankra:rust-src-vendor, r=Mark-Simulacrum\"\n\nThis reverts commit 7afc5172305cdae588a0318ce545749cf4ed947d, reversing\nchanges made to d4ea0b3e46a0303d5802b632e88ba1ba84d9d16f.", "tree": {"sha": "dbef09654d4c465b7fcbc542c79db9eae370cb67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbef09654d4c465b7fcbc542c79db9eae370cb67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68932060868cda5b14f8e382d28df09905572176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68932060868cda5b14f8e382d28df09905572176", "html_url": "https://github.com/rust-lang/rust/commit/68932060868cda5b14f8e382d28df09905572176", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68932060868cda5b14f8e382d28df09905572176/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ba7ca2bbbff6cd424aebc654308febc00b9497a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba7ca2bbbff6cd424aebc654308febc00b9497a", "html_url": "https://github.com/rust-lang/rust/commit/2ba7ca2bbbff6cd424aebc654308febc00b9497a"}], "stats": {"total": 47, "additions": 2, "deletions": 45}, "files": [{"sha": "393715e5561ec826be04018fdb1d3143c6f09e36", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/68932060868cda5b14f8e382d28df09905572176/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68932060868cda5b14f8e382d28df09905572176/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=68932060868cda5b14f8e382d28df09905572176", "patch": "@@ -1043,30 +1043,6 @@ impl Step for Src {\n             builder.copy(&builder.src.join(file), &dst_src.join(file));\n         }\n \n-        // libtest includes std and everything else, so vendoring it\n-        // creates exactly what's needed for `cargo -Zbuild-std` or any\n-        // other analysis of the stdlib's source. Cargo also needs help\n-        // finding the lock, so we copy it to libtest temporarily.\n-        //\n-        // Note that this requires std to only have one version of each\n-        // crate. e.g. two versions of getopts won't be patchable.\n-        let dst_libtest = dst_src.join(\"library/test\");\n-        let dst_vendor = dst_src.join(\"vendor\");\n-        let root_lock = dst_src.join(\"Cargo.lock\");\n-        let temp_lock = dst_libtest.join(\"Cargo.lock\");\n-\n-        // `cargo vendor` will delete everything from the lockfile that\n-        // isn't used by libtest, so we need to not use any links!\n-        builder.really_copy(&root_lock, &temp_lock);\n-\n-        let mut cmd = Command::new(&builder.initial_cargo);\n-        cmd.arg(\"vendor\").arg(dst_vendor).current_dir(&dst_libtest);\n-        builder.info(\"Dist src\");\n-        let _time = timeit(builder);\n-        builder.run(&mut cmd);\n-\n-        builder.remove(&temp_lock);\n-\n         // Create source tarball in rust-installer format\n         let mut cmd = rust_installer(builder);\n         cmd.arg(\"generate\")\n@@ -1083,6 +1059,8 @@ impl Step for Src {\n             .arg(\"--component-name=rust-src\")\n             .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n \n+        builder.info(\"Dist src\");\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n \n         builder.remove_dir(&image);"}, {"sha": "ece9bdc7a6499f43d4ff3ab88931744e79c312e8", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/68932060868cda5b14f8e382d28df09905572176/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68932060868cda5b14f8e382d28df09905572176/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=68932060868cda5b14f8e382d28df09905572176", "patch": "@@ -1182,27 +1182,6 @@ impl Build {\n         paths\n     }\n \n-    /// Copies a file from `src` to `dst` and doesn't use links, so\n-    /// that the copy can be modified without affecting the original.\n-    pub fn really_copy(&self, src: &Path, dst: &Path) {\n-        if self.config.dry_run {\n-            return;\n-        }\n-        self.verbose_than(1, &format!(\"Copy {:?} to {:?}\", src, dst));\n-        if src == dst {\n-            return;\n-        }\n-        let _ = fs::remove_file(&dst);\n-        let metadata = t!(src.symlink_metadata());\n-        if let Err(e) = fs::copy(src, dst) {\n-            panic!(\"failed to copy `{}` to `{}`: {}\", src.display(), dst.display(), e)\n-        }\n-        t!(fs::set_permissions(dst, metadata.permissions()));\n-        let atime = FileTime::from_last_access_time(&metadata);\n-        let mtime = FileTime::from_last_modification_time(&metadata);\n-        t!(filetime::set_file_times(dst, atime, mtime));\n-    }\n-\n     /// Copies a file from `src` to `dst`\n     pub fn copy(&self, src: &Path, dst: &Path) {\n         if self.config.dry_run {"}]}