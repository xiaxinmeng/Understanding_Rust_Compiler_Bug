{"sha": "a57c15bf88cfa8a684947af5d28c8154ef2f6456", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1N2MxNWJmODhjZmE4YTY4NDk0N2FmNWQyOGM4MTU0ZWYyZjY0NTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T20:00:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T20:00:49Z"}, "message": "rustdoc: Add various sorting passes", "tree": {"sha": "1a83590cb7a6d811c0b7ca6f0d257e2713d40ae5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a83590cb7a6d811c0b7ca6f0d257e2713d40ae5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a57c15bf88cfa8a684947af5d28c8154ef2f6456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a57c15bf88cfa8a684947af5d28c8154ef2f6456", "html_url": "https://github.com/rust-lang/rust/commit/a57c15bf88cfa8a684947af5d28c8154ef2f6456", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a57c15bf88cfa8a684947af5d28c8154ef2f6456/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c976b7c623e242ab2400d3c641cb082c814690fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/c976b7c623e242ab2400d3c641cb082c814690fe", "html_url": "https://github.com/rust-lang/rust/commit/c976b7c623e242ab2400d3c641cb082c814690fe"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "036a21906571dca35c0ae2e372608ec8ce294b8b", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=a57c15bf88cfa8a684947af5d28c8154ef2f6456", "patch": "@@ -30,4 +30,6 @@ mod unindent_pass;\n mod trim_pass;\n mod astsrv;\n mod demo;\n-mod sort_pass;\n\\ No newline at end of file\n+mod sort_pass;\n+mod sort_item_name_pass;\n+mod sort_item_type_pass;\n\\ No newline at end of file"}, {"sha": "eb210d2f4ac6c583bae5f20fa15b0f8280a72da6", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=a57c15bf88cfa8a684947af5d28c8154ef2f6456", "patch": "@@ -106,6 +106,8 @@ fn run(source_file: str) {\n         desc_to_brief_pass::mk_pass(),\n         trim_pass::mk_pass(),\n         unindent_pass::mk_pass(),\n+        sort_item_name_pass::mk_pass(),\n+        sort_item_type_pass::mk_pass(),\n         markdown_pass::mk_pass {|f| f(std::io:: stdout()) }\n     ]);\n }\n\\ No newline at end of file"}, {"sha": "be0478f330283be0e56722868329174247cd00cf", "filename": "src/rustdoc/sort_item_name_pass.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Fsort_item_name_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Fsort_item_name_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fsort_item_name_pass.rs?ref=a57c15bf88cfa8a684947af5d28c8154ef2f6456", "patch": "@@ -0,0 +1,19 @@\n+#[doc = \"Sorts items by name\"];\n+\n+export mk_pass;\n+\n+fn mk_pass() -> pass {\n+    sort_pass::mk_pass { |item1, item2|\n+        str::le(item1.name(), item2.name())\n+    }\n+}\n+\n+#[test]\n+fn test() {\n+    let source = \"mod z { } fn y() { }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = mk_pass()(srv, doc);\n+    assert doc.topmod.items[0].name() == \"y\";\n+    assert doc.topmod.items[1].name() == \"z\";\n+}"}, {"sha": "af6212c24dd90c2e28c4de6ce31d2308ee103979", "filename": "src/rustdoc/sort_item_type_pass.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Fsort_item_type_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a57c15bf88cfa8a684947af5d28c8154ef2f6456/src%2Frustdoc%2Fsort_item_type_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fsort_item_type_pass.rs?ref=a57c15bf88cfa8a684947af5d28c8154ef2f6456", "patch": "@@ -0,0 +1,47 @@\n+#[doc = \"Sorts items by type\"];\n+\n+export mk_pass;\n+\n+fn mk_pass() -> pass {\n+    sort_pass::mk_pass { |item1, item2|\n+        fn score(item: doc::itemtag) -> int {\n+            alt item {\n+              doc::consttag(_) { 0 }\n+              doc::tytag(_) { 1 }\n+              doc::enumtag(_) { 2 }\n+              doc::restag(_) { 3 }\n+              doc::ifacetag(_) { 4 }\n+              doc::impltag(_) { 5 }\n+              doc::fntag(_) { 6 }\n+              doc::modtag(_) { 7 }\n+              _ { fail }\n+            }\n+        }\n+\n+        score(item1) <= score(item2)\n+    }\n+}\n+\n+#[test]\n+fn test() {\n+    let source =\n+        \"mod imod { } \\\n+         const iconst: int = 0; \\\n+         fn ifn() { } \\\n+         enum ienum { ivar } \\\n+         resource ires(a: bool) { } \\\n+         iface iiface { fn a(); } \\\n+         impl iimpl for int { fn a() { } } \\\n+         type itype = int;\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = mk_pass()(srv, doc);\n+    assert doc.topmod.items[0].name() == \"iconst\";\n+    assert doc.topmod.items[1].name() == \"itype\";\n+    assert doc.topmod.items[2].name() == \"ienum\";\n+    assert doc.topmod.items[3].name() == \"ires\";\n+    assert doc.topmod.items[4].name() == \"iiface\";\n+    assert doc.topmod.items[5].name() == \"iimpl\";\n+    assert doc.topmod.items[6].name() == \"ifn\";\n+    assert doc.topmod.items[7].name() == \"imod\";\n+}"}]}