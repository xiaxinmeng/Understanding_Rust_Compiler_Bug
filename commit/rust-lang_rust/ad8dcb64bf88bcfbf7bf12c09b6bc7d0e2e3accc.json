{"sha": "ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkOGRjYjY0YmY4OGJjZmJmN2JmMTJjMDliNmJjN2QwZTJlM2FjY2M=", "commit": {"author": {"name": "Marcell Pardavi", "email": "marcell.pardavi@gmail.com", "date": "2015-10-27T23:56:27Z"}, "committer": {"name": "Marcell Pardavi", "email": "marcell.pardavi@gmail.com", "date": "2015-10-27T23:56:27Z"}, "message": "Mention in the docs, that `assert!` has a second version with a custom message\n\nI recently discovered that this is not mentioned in the docs, only in\nthe examples, and it's not evident for people coming from C++\n\nr? @steveklabnik", "tree": {"sha": "3907f22b21af57ff16dfe7a3ed2569c3cc4b5fa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3907f22b21af57ff16dfe7a3ed2569c3cc4b5fa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc", "html_url": "https://github.com/rust-lang/rust/commit/ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc/comments", "author": {"login": "pmarcelll", "id": 1909968, "node_id": "MDQ6VXNlcjE5MDk5Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/1909968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmarcelll", "html_url": "https://github.com/pmarcelll", "followers_url": "https://api.github.com/users/pmarcelll/followers", "following_url": "https://api.github.com/users/pmarcelll/following{/other_user}", "gists_url": "https://api.github.com/users/pmarcelll/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmarcelll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmarcelll/subscriptions", "organizations_url": "https://api.github.com/users/pmarcelll/orgs", "repos_url": "https://api.github.com/users/pmarcelll/repos", "events_url": "https://api.github.com/users/pmarcelll/events{/privacy}", "received_events_url": "https://api.github.com/users/pmarcelll/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmarcelll", "id": 1909968, "node_id": "MDQ6VXNlcjE5MDk5Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/1909968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmarcelll", "html_url": "https://github.com/pmarcelll", "followers_url": "https://api.github.com/users/pmarcelll/followers", "following_url": "https://api.github.com/users/pmarcelll/following{/other_user}", "gists_url": "https://api.github.com/users/pmarcelll/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmarcelll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmarcelll/subscriptions", "organizations_url": "https://api.github.com/users/pmarcelll/orgs", "repos_url": "https://api.github.com/users/pmarcelll/repos", "events_url": "https://api.github.com/users/pmarcelll/events{/privacy}", "received_events_url": "https://api.github.com/users/pmarcelll/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eab5ad529bf1d0406b25c52cc1b5281bc54c5679", "url": "https://api.github.com/repos/rust-lang/rust/commits/eab5ad529bf1d0406b25c52cc1b5281bc54c5679", "html_url": "https://github.com/rust-lang/rust/commit/eab5ad529bf1d0406b25c52cc1b5281bc54c5679"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "5b5f59d5ddbb7ffdf754ef6fc46644b02c4b3058", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=ad8dcb64bf88bcfbf7bf12c09b6bc7d0e2e3accc", "patch": "@@ -34,6 +34,8 @@ macro_rules! panic {\n /// This will invoke the `panic!` macro if the provided expression cannot be\n /// evaluated to `true` at runtime.\n ///\n+/// This macro has a second version, where a custom panic message can be provided.\n+///\n /// # Examples\n ///\n /// ```\n@@ -99,6 +101,9 @@ macro_rules! assert_eq {\n /// This will invoke the `panic!` macro if the provided expression cannot be\n /// evaluated to `true` at runtime.\n ///\n+/// Like `assert!`, this macro also has a second version, where a custom panic\n+/// message can be provided.\n+///\n /// Unlike `assert!`, `debug_assert!` statements are only enabled in non\n /// optimized builds by default. An optimized build will omit all\n /// `debug_assert!` statements unless `-C debug-assertions` is passed to the"}]}