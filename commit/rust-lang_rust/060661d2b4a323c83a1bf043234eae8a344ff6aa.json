{"sha": "060661d2b4a323c83a1bf043234eae8a344ff6aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MDY2MWQyYjRhMzIzYzgzYTFiZjA0MzIzNGVhZThhMzQ0ZmY2YWE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-02-25T12:12:22Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-02-27T01:52:43Z"}, "message": "Add some missing stability attributes on struct fields.", "tree": {"sha": "043176504d4c42aecb765d4feb7b08c177773a92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/043176504d4c42aecb765d4feb7b08c177773a92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/060661d2b4a323c83a1bf043234eae8a344ff6aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/060661d2b4a323c83a1bf043234eae8a344ff6aa", "html_url": "https://github.com/rust-lang/rust/commit/060661d2b4a323c83a1bf043234eae8a344ff6aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/060661d2b4a323c83a1bf043234eae8a344ff6aa/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eafdc7135b79d2e51da740b67946512d949632a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/eafdc7135b79d2e51da740b67946512d949632a1", "html_url": "https://github.com/rust-lang/rust/commit/eafdc7135b79d2e51da740b67946512d949632a1"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "b354116993c23a1e750be1fa8c900dc95261ab85", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/060661d2b4a323c83a1bf043234eae8a344ff6aa/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060661d2b4a323c83a1bf043234eae8a344ff6aa/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=060661d2b4a323c83a1bf043234eae8a344ff6aa", "patch": "@@ -939,6 +939,7 @@ impl<'a, P: Pattern<'a>> Iterator for SplitStr<'a, P> {\n     type Item = &'a str;\n \n     #[inline]\n+    #[allow(deprecated)]\n     fn next(&mut self) -> Option<&'a str> {\n         Iterator::next(&mut self.0)\n     }"}, {"sha": "1310d476f8ee20f15540b6bc75f7df4a64eb7acc", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/060661d2b4a323c83a1bf043234eae8a344ff6aa/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060661d2b4a323c83a1bf043234eae8a344ff6aa/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=060661d2b4a323c83a1bf043234eae8a344ff6aa", "patch": "@@ -384,7 +384,7 @@ impl<T> !Sync for SyncSender<T> {}\n /// contains the data being sent as a payload so it can be recovered.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[derive(PartialEq, Eq, Clone, Copy)]\n-pub struct SendError<T>(pub T);\n+pub struct SendError<T>(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub T);\n \n /// An error returned from the `recv` function on a `Receiver`.\n ///"}, {"sha": "764c7d730cb0e448d4c20c390c08769e3624fa49", "filename": "src/libstd/thread_local/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/060661d2b4a323c83a1bf043234eae8a344ff6aa/src%2Flibstd%2Fthread_local%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060661d2b4a323c83a1bf043234eae8a344ff6aa/src%2Flibstd%2Fthread_local%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread_local%2Fmod.rs?ref=060661d2b4a323c83a1bf043234eae8a344ff6aa", "patch": "@@ -105,10 +105,12 @@ pub struct Key<T> {\n     // This is trivially devirtualizable by LLVM because we never store anything\n     // to this field and rustc can declare the `static` as constant as well.\n     #[doc(hidden)]\n+    #[unstable(feature = \"thread_local_internals\")]\n     pub inner: fn() -> &'static __impl::KeyInner<UnsafeCell<Option<T>>>,\n \n     // initialization routine to invoke to create a value\n     #[doc(hidden)]\n+    #[unstable(feature = \"thread_local_internals\")]\n     pub init: fn() -> T,\n }\n "}]}