{"sha": "51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "node_id": "C_kwDOAAsO6NoAKDUxYmE3YjRlNDMxNzlmMTI2MmM3Njg0YWQzYzBhMDRkZGI3MDNlOWQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-22T17:51:45Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-22T17:51:45Z"}, "message": "Use separate files instead of revisions", "tree": {"sha": "cbe52cb47cd9d461aabb9ffc30198f0254133008", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbe52cb47cd9d461aabb9ffc30198f0254133008"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "html_url": "https://github.com/rust-lang/rust/commit/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f5334dff2cf7be2f1cc33565c55925b58950694", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f5334dff2cf7be2f1cc33565c55925b58950694", "html_url": "https://github.com/rust-lang/rust/commit/2f5334dff2cf7be2f1cc33565c55925b58950694"}], "stats": {"total": 61, "additions": 37, "deletions": 24}, "files": [{"sha": "a6589348d301eed4fab5fa461a68a89d616624df", "filename": "src/test/ui/generator/unresolved-ct-var-drop-tracking.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var-drop-tracking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var-drop-tracking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var-drop-tracking.rs?ref=51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "patch": "@@ -0,0 +1,15 @@\n+// incremental\n+// edition:2021\n+// compile-flags: -Zdrop-tracking\n+\n+fn main() {\n+    let _ = async {\n+        let s = std::array::from_fn(|_| ()).await;\n+        //~^ ERROR `[(); _]` is not a future\n+        //~| ERROR type inside `async` block must be known in this context\n+        //~| ERROR type inside `async` block must be known in this context\n+        //~| ERROR type inside `async` block must be known in this context\n+        //~| ERROR type inside `async` block must be known in this context\n+        //~| ERROR type inside `async` block must be known in this context\n+    };\n+}"}, {"sha": "9e1fed54c548a5e3d5e2cb0f70997241a0fdb082", "filename": "src/test/ui/generator/unresolved-ct-var-drop-tracking.stderr", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var-drop-tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var-drop-tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var-drop-tracking.stderr?ref=51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `[(); _]` is not a future\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ---------------------------^^^^^^\n@@ -13,61 +13,61 @@ LL |         let s = std::array::from_fn(|_| ()).await;\n    = note: required for `[(); _]` to implement `IntoFuture`\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var-drop-tracking.rs:7:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^", "previous_filename": "src/test/ui/generator/unresolved-ct-var.stock.stderr"}, {"sha": "0a1570fc2395ec43658061c387aa6a97a49da787", "filename": "src/test/ui/generator/unresolved-ct-var.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.rs?ref=51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "patch": "@@ -1,7 +1,5 @@\n // incremental\n // edition:2021\n-// revisions: drop_tracking stock\n-//[drop_tracking] compile-flags: -Zdrop-tracking\n \n fn main() {\n     let _ = async {"}, {"sha": "fdf00dfad7ab7eed36024ff78f1376d8ff351969", "filename": "src/test/ui/generator/unresolved-ct-var.stderr", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51ba7b4e43179f1262c7684ad3c0a04ddb703e9d/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.stderr?ref=51ba7b4e43179f1262c7684ad3c0a04ddb703e9d", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `[(); _]` is not a future\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var.rs:6:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ---------------------------^^^^^^\n@@ -13,61 +13,61 @@ LL |         let s = std::array::from_fn(|_| ()).await;\n    = note: required for `[(); _]` to implement `IntoFuture`\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var.rs:6:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var.rs:6:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var.rs:6:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var.rs:6:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var.rs:6:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var.rs:6:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var.rs:6:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var.rs:6:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:8:17\n+  --> $DIR/unresolved-ct-var.rs:6:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:8:44\n+  --> $DIR/unresolved-ct-var.rs:6:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^", "previous_filename": "src/test/ui/generator/unresolved-ct-var.drop_tracking.stderr"}]}