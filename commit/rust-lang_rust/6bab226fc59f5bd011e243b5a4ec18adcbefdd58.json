{"sha": "6bab226fc59f5bd011e243b5a4ec18adcbefdd58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYWIyMjZmYzU5ZjViZDAxMWUyNDNiNWE0ZWMxOGFkY2JlZmRkNTg=", "commit": {"author": {"name": "Jesse Jones", "email": "jesse9jones@gmail.com", "date": "2012-12-09T05:34:26Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-16T06:38:20Z"}, "message": "Check for realloc failure and bad subscripts", "tree": {"sha": "9e28e62ca2e021fda21dede60b8fa90d114c1529", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e28e62ca2e021fda21dede60b8fa90d114c1529"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bab226fc59f5bd011e243b5a4ec18adcbefdd58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bab226fc59f5bd011e243b5a4ec18adcbefdd58", "html_url": "https://github.com/rust-lang/rust/commit/6bab226fc59f5bd011e243b5a4ec18adcbefdd58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bab226fc59f5bd011e243b5a4ec18adcbefdd58/comments", "author": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf1c3d2da0cb6ebc4c34c122cde3a76523417ed4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1c3d2da0cb6ebc4c34c122cde3a76523417ed4", "html_url": "https://github.com/rust-lang/rust/commit/cf1c3d2da0cb6ebc4c34c122cde3a76523417ed4"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "fed22f8d03602e095d0693c712cc2a4670e8eb57", "filename": "src/rt/util/array_list.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6bab226fc59f5bd011e243b5a4ec18adcbefdd58/src%2Frt%2Futil%2Farray_list.h", "raw_url": "https://github.com/rust-lang/rust/raw/6bab226fc59f5bd011e243b5a4ec18adcbefdd58/src%2Frt%2Futil%2Farray_list.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Futil%2Farray_list.h?ref=6bab226fc59f5bd011e243b5a4ec18adcbefdd58", "patch": "@@ -14,6 +14,7 @@\n \n #include <inttypes.h>\n #include <stddef.h>\n+#include <new>\n \n /**\n  * A simple, resizable array list. Note that this only works with POD types\n@@ -69,8 +70,12 @@ array_list<T>::append(T value) {\n template<typename T> int32_t\n array_list<T>::push(T value) {\n     if (_size == _capacity) {\n-        _capacity = _capacity * 2;\n-        _data = (T *) realloc(_data, _capacity * sizeof(T));\n+        size_t new_capacity = _capacity * 2;\n+        void* buffer = realloc(_data, new_capacity * sizeof(T));\n+        if (buffer == NULL)\n+            throw std::bad_alloc();\n+        _data = (T *) buffer;\n+        _capacity = new_capacity;\n     }\n     _data[_size ++] = value;\n     return _size - 1;\n@@ -115,11 +120,13 @@ array_list<T>::index_of(T value) const {\n \n template<typename T> T &\n array_list<T>::operator[](size_t index) {\n+    assert(index < size());\n     return _data[index];\n }\n \n template<typename T> const T &\n array_list<T>::operator[](size_t index) const {\n+    assert(index < size());\n     return _data[index];\n }\n "}]}