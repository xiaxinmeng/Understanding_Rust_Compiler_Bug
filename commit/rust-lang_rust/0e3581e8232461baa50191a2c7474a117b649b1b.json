{"sha": "0e3581e8232461baa50191a2c7474a117b649b1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMzU4MWU4MjMyNDYxYmFhNTAxOTFhMmM3NDc0YTExN2I2NDliMWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-18T18:10:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-18T18:15:48Z"}, "message": "NavTarget doesn't assume that it points to a symbol", "tree": {"sha": "4e78794bf926ef2a0878abd6058f2958713725b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e78794bf926ef2a0878abd6058f2958713725b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e3581e8232461baa50191a2c7474a117b649b1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e3581e8232461baa50191a2c7474a117b649b1b", "html_url": "https://github.com/rust-lang/rust/commit/0e3581e8232461baa50191a2c7474a117b649b1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e3581e8232461baa50191a2c7474a117b649b1b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53f81e4e8c8307069d89cee58cb12142350b09c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/53f81e4e8c8307069d89cee58cb12142350b09c2", "html_url": "https://github.com/rust-lang/rust/commit/53f81e4e8c8307069d89cee58cb12142350b09c2"}], "stats": {"total": 277, "additions": 196, "deletions": 81}, "files": [{"sha": "9b92959556526053cfce4463a4998d9698b97df2", "filename": "crates/ide/src/display/navigation_target.rs", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=0e3581e8232461baa50191a2c7474a117b649b1b", "patch": "@@ -35,8 +35,6 @@ pub enum SymbolKind {\n     TypeAlias,\n     Trait,\n     Macro,\n-    // Do we actually need this?\n-    DocTest,\n }\n \n /// `NavigationTarget` represents and element in the editor's UI which you can\n@@ -64,7 +62,7 @@ pub struct NavigationTarget {\n     /// Clients should place the cursor on this range when navigating to this target.\n     pub focus_range: Option<TextRange>,\n     pub name: SmolStr,\n-    pub kind: SymbolKind,\n+    pub kind: Option<SymbolKind>,\n     pub container_name: Option<SmolStr>,\n     pub description: Option<String>,\n     pub docs: Option<Documentation>,\n@@ -110,8 +108,13 @@ impl NavigationTarget {\n \n     #[cfg(test)]\n     pub(crate) fn debug_render(&self) -> String {\n-        let mut buf =\n-            format!(\"{} {:?} {:?} {:?}\", self.name, self.kind, self.file_id, self.full_range);\n+        let mut buf = format!(\n+            \"{} {:?} {:?} {:?}\",\n+            self.name,\n+            self.kind.unwrap(),\n+            self.file_id,\n+            self.full_range\n+        );\n         if let Some(focus_range) = self.focus_range {\n             buf.push_str(&format!(\" {:?}\", focus_range))\n         }\n@@ -146,7 +149,7 @@ impl NavigationTarget {\n         NavigationTarget {\n             file_id,\n             name,\n-            kind,\n+            kind: Some(kind),\n             full_range,\n             focus_range,\n             container_name: None,\n@@ -161,7 +164,7 @@ impl ToNav for FileSymbol {\n         NavigationTarget {\n             file_id: self.file_id,\n             name: self.name.clone(),\n-            kind: match self.kind {\n+            kind: Some(match self.kind {\n                 FileSymbolKind::Function => SymbolKind::Function,\n                 FileSymbolKind::Struct => SymbolKind::Struct,\n                 FileSymbolKind::Enum => SymbolKind::Enum,\n@@ -171,7 +174,7 @@ impl ToNav for FileSymbol {\n                 FileSymbolKind::Const => SymbolKind::Const,\n                 FileSymbolKind::Static => SymbolKind::Static,\n                 FileSymbolKind::Macro => SymbolKind::Macro,\n-            },\n+            }),\n             full_range: self.range,\n             focus_range: self.name_range,\n             container_name: self.container_name.clone(),\n@@ -386,7 +389,7 @@ impl ToNav for hir::Local {\n         NavigationTarget {\n             file_id: full_range.file_id,\n             name,\n-            kind: SymbolKind::Local,\n+            kind: Some(SymbolKind::Local),\n             full_range: full_range.range,\n             focus_range: None,\n             container_name: None,\n@@ -410,7 +413,7 @@ impl ToNav for hir::TypeParam {\n         NavigationTarget {\n             file_id: src.file_id.original_file(db),\n             name: self.name(db).to_string().into(),\n-            kind: SymbolKind::TypeParam,\n+            kind: Some(SymbolKind::TypeParam),\n             full_range,\n             focus_range,\n             container_name: None,\n@@ -427,7 +430,7 @@ impl ToNav for hir::LifetimeParam {\n         NavigationTarget {\n             file_id: src.file_id.original_file(db),\n             name: self.name(db).to_string().into(),\n-            kind: SymbolKind::LifetimeParam,\n+            kind: Some(SymbolKind::LifetimeParam),\n             full_range,\n             focus_range: Some(full_range),\n             container_name: None,\n@@ -488,7 +491,9 @@ fn foo() { enum FooInner { } }\n                         5..13,\n                     ),\n                     name: \"FooInner\",\n-                    kind: Enum,\n+                    kind: Some(\n+                        Enum,\n+                    ),\n                     container_name: None,\n                     description: Some(\n                         \"enum FooInner\",\n@@ -504,7 +509,9 @@ fn foo() { enum FooInner { } }\n                         34..42,\n                     ),\n                     name: \"FooInner\",\n-                    kind: Enum,\n+                    kind: Some(\n+                        Enum,\n+                    ),\n                     container_name: Some(\n                         \"foo\",\n                     ),"}, {"sha": "7a12e99652f6a0f4d4eaf572f5dae027701b259f", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=0e3581e8232461baa50191a2c7474a117b649b1b", "patch": "@@ -86,7 +86,7 @@ fn self_to_nav_target(self_param: ast::SelfParam, file_id: FileId) -> Option<Nav\n         full_range: self_param.syntax().text_range(),\n         focus_range: Some(self_token.text_range()),\n         name: self_token.text().clone(),\n-        kind: SymbolKind::SelfParam,\n+        kind: Some(SymbolKind::SelfParam),\n         container_name: None,\n         description: None,\n         docs: None,"}, {"sha": "413b1526ac3f2fff57a3fec94f1efb9da82f5bd9", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 111, "deletions": 37, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=0e3581e8232461baa50191a2c7474a117b649b1b", "patch": "@@ -2191,7 +2191,9 @@ fn foo_<|>test() {}\n                                     11..19,\n                                 ),\n                                 name: \"foo_test\",\n-                                kind: Function,\n+                                kind: Some(\n+                                    Function,\n+                                ),\n                                 container_name: None,\n                                 description: None,\n                                 docs: None,\n@@ -2234,7 +2236,9 @@ mod tests<|> {\n                                     4..9,\n                                 ),\n                                 name: \"tests\",\n-                                kind: Module,\n+                                kind: Some(\n+                                    Module,\n+                                ),\n                                 container_name: None,\n                                 description: None,\n                                 docs: None,\n@@ -2273,7 +2277,9 @@ fn main() { let s<|>t = S{ f1:0 }; }\n                                         7..8,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -2312,7 +2318,9 @@ fn main() { let s<|>t = S{ f1:Arg(0) }; }\n                                         24..25,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -2331,7 +2339,9 @@ fn main() { let s<|>t = S{ f1:Arg(0) }; }\n                                         7..10,\n                                     ),\n                                     name: \"Arg\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct Arg\",\n@@ -2370,7 +2380,9 @@ fn main() { let s<|>t = S{ f1: S{ f1: Arg(0) } }; }\n                                         24..25,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -2389,7 +2401,9 @@ fn main() { let s<|>t = S{ f1: S{ f1: Arg(0) } }; }\n                                         7..10,\n                                     ),\n                                     name: \"Arg\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct Arg\",\n@@ -2431,7 +2445,9 @@ fn main() { let s<|>t = (A(1), B(2), M::C(3) ); }\n                                         7..8,\n                                     ),\n                                     name: \"A\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct A\",\n@@ -2450,7 +2466,9 @@ fn main() { let s<|>t = (A(1), B(2), M::C(3) ); }\n                                         22..23,\n                                     ),\n                                     name: \"B\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct B\",\n@@ -2469,7 +2487,9 @@ fn main() { let s<|>t = (A(1), B(2), M::C(3) ); }\n                                         53..54,\n                                     ),\n                                     name: \"C\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"pub struct C\",\n@@ -2508,7 +2528,9 @@ fn main() { let s<|>t = foo(); }\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -2548,7 +2570,9 @@ fn main() { let s<|>t = foo(); }\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -2567,7 +2591,9 @@ fn main() { let s<|>t = foo(); }\n                                         23..24,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -2607,7 +2633,9 @@ fn main() { let s<|>t = foo(); }\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -2626,7 +2654,9 @@ fn main() { let s<|>t = foo(); }\n                                         19..22,\n                                     ),\n                                     name: \"Bar\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Bar\",\n@@ -2669,7 +2699,9 @@ fn main() { let s<|>t = foo(); }\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -2688,7 +2720,9 @@ fn main() { let s<|>t = foo(); }\n                                         22..25,\n                                     ),\n                                     name: \"Bar\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Bar\",\n@@ -2707,7 +2741,9 @@ fn main() { let s<|>t = foo(); }\n                                         39..41,\n                                     ),\n                                     name: \"S1\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S1\",\n@@ -2726,7 +2762,9 @@ fn main() { let s<|>t = foo(); }\n                                         52..54,\n                                     ),\n                                     name: \"S2\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S2\",\n@@ -2763,7 +2801,9 @@ fn foo(ar<|>g: &impl Foo) {}\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -2803,7 +2843,9 @@ fn foo(ar<|>g: &impl Foo + Bar<S>) {}\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -2822,7 +2864,9 @@ fn foo(ar<|>g: &impl Foo + Bar<S>) {}\n                                         19..22,\n                                     ),\n                                     name: \"Bar\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Bar\",\n@@ -2841,7 +2885,9 @@ fn foo(ar<|>g: &impl Foo + Bar<S>) {}\n                                         36..37,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -2886,7 +2932,9 @@ mod future {\n                                         140..146,\n                                     ),\n                                     name: \"Future\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"pub trait Future\",\n@@ -2905,7 +2953,9 @@ mod future {\n                                         7..8,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -2943,7 +2993,9 @@ fn foo(ar<|>g: &impl Foo<S>) {}\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -2962,7 +3014,9 @@ fn foo(ar<|>g: &impl Foo<S>) {}\n                                         23..24,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -3005,7 +3059,9 @@ fn main() { let s<|>t = foo(); }\n                                         49..50,\n                                     ),\n                                     name: \"B\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct B\",\n@@ -3024,7 +3080,9 @@ fn main() { let s<|>t = foo(); }\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -3061,7 +3119,9 @@ fn foo(ar<|>g: &dyn Foo) {}\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -3099,7 +3159,9 @@ fn foo(ar<|>g: &dyn Foo<S>) {}\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\",\n@@ -3118,7 +3180,9 @@ fn foo(ar<|>g: &dyn Foo<S>) {}\n                                         23..24,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -3159,7 +3223,9 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                         6..15,\n                                     ),\n                                     name: \"ImplTrait\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait ImplTrait\",\n@@ -3178,7 +3244,9 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                         50..51,\n                                     ),\n                                     name: \"B\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct B\",\n@@ -3197,7 +3265,9 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                         28..36,\n                                     ),\n                                     name: \"DynTrait\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait DynTrait\",\n@@ -3216,7 +3286,9 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                         65..66,\n                                     ),\n                                     name: \"S\",\n-                                    kind: Struct,\n+                                    kind: Some(\n+                                        Struct,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"struct S\",\n@@ -3264,7 +3336,9 @@ fn main() { let s<|>t = test().get(); }\n                                         6..9,\n                                     ),\n                                     name: \"Foo\",\n-                                    kind: Trait,\n+                                    kind: Some(\n+                                        Trait,\n+                                    ),\n                                     container_name: None,\n                                     description: Some(\n                                         \"trait Foo\","}, {"sha": "8c00a71058c6bac32901eeca661d67bd4dcdccd2", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=0e3581e8232461baa50191a2c7474a117b649b1b", "patch": "@@ -278,7 +278,7 @@ fn try_find_self_references(\n             full_range: self_param.syntax().text_range(),\n             focus_range: Some(param_self_token.text_range()),\n             name: param_self_token.text().clone(),\n-            kind: SymbolKind::SelfParam,\n+            kind: Some(SymbolKind::SelfParam),\n             container_name: None,\n             description: None,\n             docs: None,"}, {"sha": "99f11c295c9feff01da79eb57533d8fe884f7858", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 54, "deletions": 22, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=0e3581e8232461baa50191a2c7474a117b649b1b", "patch": "@@ -208,7 +208,7 @@ fn module_def_doctest(sema: &Semantics<RootDatabase>, def: hir::ModuleDef) -> Op\n     nav.focus_range = None;\n     nav.description = None;\n     nav.docs = None;\n-    nav.kind = SymbolKind::DocTest;\n+    nav.kind = None;\n     let res = Runnable { nav, kind: RunnableKind::DocTest { test_id }, cfg: attrs.cfg() };\n     Some(res)\n }\n@@ -356,7 +356,9 @@ fn bench() {}\n                                 4..8,\n                             ),\n                             name: \"main\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -374,7 +376,9 @@ fn bench() {}\n                                 26..34,\n                             ),\n                             name: \"test_foo\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -399,7 +403,9 @@ fn bench() {}\n                                 62..70,\n                             ),\n                             name: \"test_foo\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -424,7 +430,9 @@ fn bench() {}\n                                 89..94,\n                             ),\n                             name: \"bench\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -521,7 +529,9 @@ struct StructWithRunnable(String);\n                                 4..8,\n                             ),\n                             name: \"main\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -537,7 +547,7 @@ struct StructWithRunnable(String);\n                             full_range: 15..74,\n                             focus_range: None,\n                             name: \"should_have_runnable\",\n-                            kind: DocTest,\n+                            kind: None,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -557,7 +567,7 @@ struct StructWithRunnable(String);\n                             full_range: 76..148,\n                             focus_range: None,\n                             name: \"should_have_runnable_1\",\n-                            kind: DocTest,\n+                            kind: None,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -577,7 +587,7 @@ struct StructWithRunnable(String);\n                             full_range: 150..254,\n                             focus_range: None,\n                             name: \"should_have_runnable_2\",\n-                            kind: DocTest,\n+                            kind: None,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -597,7 +607,7 @@ struct StructWithRunnable(String);\n                             full_range: 756..821,\n                             focus_range: None,\n                             name: \"StructWithRunnable\",\n-                            kind: DocTest,\n+                            kind: None,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -643,7 +653,9 @@ impl Data {\n                                 4..8,\n                             ),\n                             name: \"main\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -659,7 +671,7 @@ impl Data {\n                             full_range: 44..98,\n                             focus_range: None,\n                             name: \"foo\",\n-                            kind: DocTest,\n+                            kind: None,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -700,7 +712,9 @@ mod test_mod {\n                                 5..13,\n                             ),\n                             name: \"test_mod\",\n-                            kind: Module,\n+                            kind: Some(\n+                                Module,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -720,7 +734,9 @@ mod test_mod {\n                                 35..44,\n                             ),\n                             name: \"test_foo1\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -780,7 +796,9 @@ mod root_tests {\n                                 26..40,\n                             ),\n                             name: \"nested_tests_0\",\n-                            kind: Module,\n+                            kind: Some(\n+                                Module,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -800,7 +818,9 @@ mod root_tests {\n                                 55..69,\n                             ),\n                             name: \"nested_tests_1\",\n-                            kind: Module,\n+                            kind: Some(\n+                                Module,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -820,7 +840,9 @@ mod root_tests {\n                                 107..121,\n                             ),\n                             name: \"nested_test_11\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -845,7 +867,9 @@ mod root_tests {\n                                 163..177,\n                             ),\n                             name: \"nested_test_12\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -870,7 +894,9 @@ mod root_tests {\n                                 206..220,\n                             ),\n                             name: \"nested_tests_2\",\n-                            kind: Module,\n+                            kind: Some(\n+                                Module,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -890,7 +916,9 @@ mod root_tests {\n                                 258..271,\n                             ),\n                             name: \"nested_test_2\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -933,7 +961,9 @@ fn test_foo1() {}\n                                 36..45,\n                             ),\n                             name: \"test_foo1\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -983,7 +1013,9 @@ fn test_foo1() {}\n                                 58..67,\n                             ),\n                             name: \"test_foo1\",\n-                            kind: Function,\n+                            kind: Some(\n+                                Function,\n+                            ),\n                             container_name: None,\n                             description: None,\n                             docs: None,"}, {"sha": "66f8bee991579feea8218dca29cc620d8a67e44b", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=0e3581e8232461baa50191a2c7474a117b649b1b", "patch": "@@ -385,7 +385,10 @@ pub(crate) fn handle_workspace_symbol(\n             #[allow(deprecated)]\n             let info = SymbolInformation {\n                 name: nav.name.to_string(),\n-                kind: to_proto::symbol_kind(nav.kind),\n+                kind: nav\n+                    .kind\n+                    .map(to_proto::symbol_kind)\n+                    .unwrap_or(lsp_types::SymbolKind::Variable),\n                 tags: None,\n                 location: to_proto::location_from_nav(snap, nav)?,\n                 container_name,\n@@ -1263,7 +1266,7 @@ pub(crate) fn handle_call_hierarchy_prepare(\n     let RangeInfo { range: _, info: navs } = nav_info;\n     let res = navs\n         .into_iter()\n-        .filter(|it| it.kind == SymbolKind::Function)\n+        .filter(|it| it.kind == Some(SymbolKind::Function))\n         .map(|it| to_proto::call_hierarchy_item(&snap, it))\n         .collect::<Result<Vec<_>>>()?;\n "}, {"sha": "6b2302803a64360323d4e1fcb4af5d10ed5bffa3", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3581e8232461baa50191a2c7474a117b649b1b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=0e3581e8232461baa50191a2c7474a117b649b1b", "patch": "@@ -43,10 +43,9 @@ pub(crate) fn symbol_kind(symbol_kind: SymbolKind) -> lsp_types::SymbolKind {\n         SymbolKind::Static => lsp_types::SymbolKind::Constant,\n         SymbolKind::Const => lsp_types::SymbolKind::Constant,\n         SymbolKind::Impl => lsp_types::SymbolKind::Object,\n-        SymbolKind::Local\n-        | SymbolKind::SelfParam\n-        | SymbolKind::LifetimeParam\n-        | SymbolKind::DocTest => lsp_types::SymbolKind::Variable,\n+        SymbolKind::Local | SymbolKind::SelfParam | SymbolKind::LifetimeParam => {\n+            lsp_types::SymbolKind::Variable\n+        }\n         SymbolKind::Union => lsp_types::SymbolKind::Struct,\n     }\n }\n@@ -722,7 +721,7 @@ pub(crate) fn call_hierarchy_item(\n ) -> Result<lsp_types::CallHierarchyItem> {\n     let name = target.name.to_string();\n     let detail = target.description.clone();\n-    let kind = symbol_kind(target.kind);\n+    let kind = target.kind.map(symbol_kind).unwrap_or(lsp_types::SymbolKind::Function);\n     let (uri, range, selection_range) = location_info(snap, target)?;\n     Ok(lsp_types::CallHierarchyItem {\n         name,"}]}