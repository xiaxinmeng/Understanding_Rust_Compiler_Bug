{"sha": "6c4b551403624b064c4a5836dfa59971a215cf4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNGI1NTE0MDM2MjRiMDY0YzRhNTgzNmRmYTU5OTcxYTIxNWNmNGE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-31T06:48:59Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-31T06:56:06Z"}, "message": "Cleanup `Resolver::disallowed_shadowing`.", "tree": {"sha": "690a1ce16cc1b9670892fd7de593bb4c101ebcaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/690a1ce16cc1b9670892fd7de593bb4c101ebcaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c4b551403624b064c4a5836dfa59971a215cf4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4b551403624b064c4a5836dfa59971a215cf4a", "html_url": "https://github.com/rust-lang/rust/commit/6c4b551403624b064c4a5836dfa59971a215cf4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c4b551403624b064c4a5836dfa59971a215cf4a/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5a702dc785760c74960007af389caa47546fa58", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a702dc785760c74960007af389caa47546fa58", "html_url": "https://github.com/rust-lang/rust/commit/f5a702dc785760c74960007af389caa47546fa58"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "fcd299b56b0a55821443cb8aada8e2611b1fd555", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6c4b551403624b064c4a5836dfa59971a215cf4a/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4b551403624b064c4a5836dfa59971a215cf4a/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=6c4b551403624b064c4a5836dfa59971a215cf4a", "patch": "@@ -77,7 +77,7 @@ use std::mem::replace;\n use std::rc::Rc;\n \n use resolve_imports::{ImportDirective, NameResolution};\n-use macros::{InvocationData, LegacyBinding, LegacyScope};\n+use macros::{InvocationData, LegacyBinding};\n \n // NB: This module needs to be declared first so diagnostics are\n // registered before they are used.\n@@ -1067,7 +1067,7 @@ pub struct Resolver<'a> {\n \n     privacy_errors: Vec<PrivacyError<'a>>,\n     ambiguity_errors: Vec<AmbiguityError<'a>>,\n-    disallowed_shadowing: Vec<(Name, Span, LegacyScope<'a>)>,\n+    disallowed_shadowing: Vec<&'a LegacyBinding<'a>>,\n \n     arenas: &'a ResolverArenas<'a>,\n     dummy_binding: &'a NameBinding<'a>,\n@@ -3364,11 +3364,11 @@ impl<'a> Resolver<'a> {\n \n     fn report_shadowing_errors(&mut self) {\n         let mut reported_errors = FnvHashSet();\n-        for (name, span, scope) in replace(&mut self.disallowed_shadowing, Vec::new()) {\n-            if self.resolve_macro_name(scope, name, false).is_some() &&\n-               reported_errors.insert((name, span)) {\n-                let msg = format!(\"`{}` is already in scope\", name);\n-                self.session.struct_span_err(span, &msg)\n+        for binding in replace(&mut self.disallowed_shadowing, Vec::new()) {\n+            if self.resolve_macro_name(binding.parent, binding.name, false).is_some() &&\n+               reported_errors.insert((binding.name, binding.span)) {\n+                let msg = format!(\"`{}` is already in scope\", binding.name);\n+                self.session.struct_span_err(binding.span, &msg)\n                     .note(\"macro-expanded `macro_rules!`s may not shadow \\\n                            existing macros (see RFC 1560)\")\n                     .emit();"}, {"sha": "eb72145b774e11a1f196654c94e681740f943efc", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c4b551403624b064c4a5836dfa59971a215cf4a/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4b551403624b064c4a5836dfa59971a215cf4a/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=6c4b551403624b064c4a5836dfa59971a215cf4a", "patch": "@@ -74,10 +74,10 @@ impl<'a> LegacyScope<'a> {\n }\n \n pub struct LegacyBinding<'a> {\n-    parent: LegacyScope<'a>,\n-    name: ast::Name,\n+    pub parent: LegacyScope<'a>,\n+    pub name: ast::Name,\n     ext: Rc<SyntaxExtension>,\n-    span: Span,\n+    pub span: Span,\n }\n \n pub type LegacyImports = FnvHashMap<ast::Name, (Rc<SyntaxExtension>, Span)>;\n@@ -213,7 +213,7 @@ impl<'a> Resolver<'a> {\n                 LegacyScope::Binding(binding) => {\n                     if binding.name == name {\n                         if record_used && relative_depth > 0 {\n-                            self.disallowed_shadowing.push((name, binding.span, binding.parent));\n+                            self.disallowed_shadowing.push(binding);\n                         }\n                         return Some(binding.ext.clone());\n                     }"}]}