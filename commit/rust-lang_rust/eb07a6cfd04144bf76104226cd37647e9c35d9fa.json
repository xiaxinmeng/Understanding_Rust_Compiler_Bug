{"sha": "eb07a6cfd04144bf76104226cd37647e9c35d9fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMDdhNmNmZDA0MTQ0YmY3NjEwNDIyNmNkMzc2NDdlOWMzNWQ5ZmE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2016-10-08T12:44:51Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2016-10-08T12:44:51Z"}, "message": "Add ICH test case for consts\n\nFixes #37000.", "tree": {"sha": "e44ab5bebe7fde04150abe949ee5824b34c42558", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e44ab5bebe7fde04150abe949ee5824b34c42558"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb07a6cfd04144bf76104226cd37647e9c35d9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb07a6cfd04144bf76104226cd37647e9c35d9fa", "html_url": "https://github.com/rust-lang/rust/commit/eb07a6cfd04144bf76104226cd37647e9c35d9fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb07a6cfd04144bf76104226cd37647e9c35d9fa/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a30f0c728ec538312094b9fc3e9b7f6149b0286", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a30f0c728ec538312094b9fc3e9b7f6149b0286", "html_url": "https://github.com/rust-lang/rust/commit/5a30f0c728ec538312094b9fc3e9b7f6149b0286"}], "stats": {"total": 132, "additions": 132, "deletions": 0}, "files": [{"sha": "10c02d84b385e7105723652a177694a4c6700e13", "filename": "src/test/incremental/hashes/consts.rs", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/eb07a6cfd04144bf76104226cd37647e9c35d9fa/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb07a6cfd04144bf76104226cd37647e9c35d9fa/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs?ref=eb07a6cfd04144bf76104226cd37647e9c35d9fa", "patch": "@@ -0,0 +1,132 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test case tests the incremental compilation hash (ICH) implementation\n+// for consts.\n+\n+// The general pattern followed here is: Change one thing between rev1 and rev2\n+// and make sure that the hash has changed, then change nothing between rev2 and\n+// rev3 and make sure that the hash has not changed.\n+\n+// must-compile-successfully\n+// revisions: cfail1 cfail2 cfail3\n+// compile-flags: -Z query-dep-graph\n+\n+#![allow(warnings)]\n+#![feature(rustc_attrs)]\n+#![crate_type=\"rlib\"]\n+\n+\n+// Change const visibility ---------------------------------------------------\n+#[cfg(cfail1)]\n+const CONST_VISIBILITY: u8 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub const CONST_VISIBILITY: u8 = 0;\n+\n+\n+// Change type from i32 to u32 ------------------------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_TYPE_1: i32 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_TYPE_1: u32 = 0;\n+\n+\n+// Change type from Option<u32> to Option<u64> --------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_TYPE_2: Option<u32> = None;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_TYPE_2: Option<u64> = None;\n+\n+\n+// Change value between simple literals ---------------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_1: i16 = 1;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_1: i16 = 2;\n+\n+\n+// Change value between expressions -------------------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_2: i16 = 1 + 1;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_2: i16 = 1 + 2;\n+\n+\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_3: i16 = 2 + 3;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_3: i16 = 2 * 3;\n+\n+\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_4: i16 = 1 + 2 * 3;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_4: i16 = 1 + 2 * 4;\n+\n+\n+// Change type indirectly -----------------------------------------------------\n+struct ReferencedType1;\n+struct ReferencedType2;\n+\n+mod const_change_type_indirectly {\n+    #[cfg(cfail1)]\n+    use super::ReferencedType1 as Type;\n+\n+    #[cfg(not(cfail1))]\n+    use super::ReferencedType2 as Type;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    const CONST_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    const CONST_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n+}"}]}