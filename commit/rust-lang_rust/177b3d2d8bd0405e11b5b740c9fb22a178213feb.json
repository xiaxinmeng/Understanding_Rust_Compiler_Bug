{"sha": "177b3d2d8bd0405e11b5b740c9fb22a178213feb", "node_id": "C_kwDOAAsO6NoAKDE3N2IzZDJkOGJkMDQwNWUxMWI1Yjc0MGM5ZmIyMmExNzgyMTNmZWI", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-03T03:20:03Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-03T04:57:23Z"}, "message": "Add some more operator cases to `dump-debug-span-debug.rs`.", "tree": {"sha": "296e5fa07b52b5c043fe8ed5671803c1901c9fb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/296e5fa07b52b5c043fe8ed5671803c1901c9fb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/177b3d2d8bd0405e11b5b740c9fb22a178213feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/177b3d2d8bd0405e11b5b740c9fb22a178213feb", "html_url": "https://github.com/rust-lang/rust/commit/177b3d2d8bd0405e11b5b740c9fb22a178213feb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/177b3d2d8bd0405e11b5b740c9fb22a178213feb/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e5ddf1adf09c5d1c425b1afeef8f1ac19f05562", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5ddf1adf09c5d1c425b1afeef8f1ac19f05562", "html_url": "https://github.com/rust-lang/rust/commit/4e5ddf1adf09c5d1c425b1afeef8f1ac19f05562"}], "stats": {"total": 134, "additions": 102, "deletions": 32}, "files": [{"sha": "102bd6b7b1757996ba2f991776bb102f5507fa4c", "filename": "src/test/ui/proc-macro/debug/dump-debug-span-debug.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/177b3d2d8bd0405e11b5b740c9fb22a178213feb/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177b3d2d8bd0405e11b5b740c9fb22a178213feb/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.rs?ref=177b3d2d8bd0405e11b5b740c9fb22a178213feb", "patch": "@@ -2,14 +2,19 @@\n // aux-build:macro-dump-debug.rs\n // compile-flags: -Z span-debug\n \n+\n extern crate macro_dump_debug;\n use macro_dump_debug::dump_debug;\n \n dump_debug! {\n     ident   // ident\n     r#ident // raw ident\n     ,       // alone punct\n-    ==>     // joint punct\n+    &&      // joint punct, two-char op\n+    ||>     // joint punct, two-char op + one-char op\n+    ||<<    // joint punct, two-char op + two-char op\n+    ..=     // joint punct, three-char op\n+    <<=!    // joint punct, three-char op + one-char-op\n     ()      // empty group\n     [_]     // nonempty group\n "}, {"sha": "55f18fa86c733fb7888fca61509b6a3c06d9ff87", "filename": "src/test/ui/proc-macro/debug/dump-debug-span-debug.stderr", "status": "modified", "additions": 96, "deletions": 31, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/177b3d2d8bd0405e11b5b740c9fb22a178213feb/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/177b3d2d8bd0405e11b5b740c9fb22a178213feb/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.stderr?ref=177b3d2d8bd0405e11b5b740c9fb22a178213feb", "patch": "@@ -1,166 +1,231 @@\n-TokenStream [Ident { ident: \"ident\", span: $DIR/dump-debug-span-debug.rs:9:5: 9:10 (#0) }, Ident { ident: \"r#ident\", span: $DIR/dump-debug-span-debug.rs:10:5: 10:12 (#0) }, Punct { ch: ',', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:11:5: 11:6 (#0) }, Punct { ch: '=', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:12:5: 12:7 (#0) }, Punct { ch: '=', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:12:5: 12:7 (#0) }, Punct { ch: '>', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:12:7: 12:8 (#0) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0) }, Group { delimiter: Bracket, stream: TokenStream [Ident { ident: \"_\", span: $DIR/dump-debug-span-debug.rs:14:6: 14:7 (#0) }], span: $DIR/dump-debug-span-debug.rs:14:5: 14:8 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:17:5: 17:6 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:18:5: 18:8 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: None, span: $DIR/dump-debug-span-debug.rs:19:5: 19:8 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:20:5: 20:9 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:21:5: 21:9 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:22:5: 22:13 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:23:5: 23:11 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:24:5: 24:15 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: None, span: $DIR/dump-debug-span-debug.rs:25:5: 25:8 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:26:5: 26:9 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:29:5: 29:7 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:30:5: 30:9 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:31:5: 31:9 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:32:5: 32:10 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:33:5: 33:10 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:34:5: 34:14 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:35:5: 35:12 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:36:5: 36:16 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:37:5: 37:9 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:38:5: 38:10 (#0) }]\n+TokenStream [Ident { ident: \"ident\", span: $DIR/dump-debug-span-debug.rs:10:5: 10:10 (#0) }, Ident { ident: \"r#ident\", span: $DIR/dump-debug-span-debug.rs:11:5: 11:12 (#0) }, Punct { ch: ',', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:12:5: 12:6 (#0) }, Punct { ch: '&', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0) }, Punct { ch: '&', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0) }, Punct { ch: '>', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:14:7: 14:8 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0) }, Punct { ch: '<', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0) }, Punct { ch: '.', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0) }, Punct { ch: '.', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0) }, Punct { ch: '=', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0) }, Punct { ch: '=', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0) }, Punct { ch: '!', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:17:8: 17:9 (#0) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/dump-debug-span-debug.rs:18:5: 18:7 (#0) }, Group { delimiter: Bracket, stream: TokenStream [Ident { ident: \"_\", span: $DIR/dump-debug-span-debug.rs:19:6: 19:7 (#0) }], span: $DIR/dump-debug-span-debug.rs:19:5: 19:8 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:22:5: 22:6 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:23:5: 23:8 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: None, span: $DIR/dump-debug-span-debug.rs:24:5: 24:8 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:25:5: 25:9 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:26:5: 26:9 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:27:5: 27:13 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:28:5: 28:11 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:29:5: 29:15 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: None, span: $DIR/dump-debug-span-debug.rs:30:5: 30:8 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:31:5: 31:9 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:34:5: 34:7 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:35:5: 35:9 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:36:5: 36:9 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:37:5: 37:10 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:38:5: 38:10 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:39:5: 39:14 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:40:5: 40:12 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:41:5: 41:16 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:42:5: 42:9 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:43:5: 43:10 (#0) }]\n TokenStream [\n     Ident {\n         ident: \"ident\",\n-        span: $DIR/dump-debug-span-debug.rs:9:5: 9:10 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:10:5: 10:10 (#0),\n     },\n     Ident {\n         ident: \"r#ident\",\n-        span: $DIR/dump-debug-span-debug.rs:10:5: 10:12 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:11:5: 11:12 (#0),\n     },\n     Punct {\n         ch: ',',\n         spacing: Alone,\n-        span: $DIR/dump-debug-span-debug.rs:11:5: 11:6 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:12:5: 12:6 (#0),\n+    },\n+    Punct {\n+        ch: '&',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0),\n+    },\n+    Punct {\n+        ch: '&',\n+        spacing: Alone,\n+        span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0),\n+    },\n+    Punct {\n+        ch: '|',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0),\n+    },\n+    Punct {\n+        ch: '|',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0),\n+    },\n+    Punct {\n+        ch: '>',\n+        spacing: Alone,\n+        span: $DIR/dump-debug-span-debug.rs:14:7: 14:8 (#0),\n+    },\n+    Punct {\n+        ch: '|',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0),\n+    },\n+    Punct {\n+        ch: '|',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0),\n+    },\n+    Punct {\n+        ch: '<',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0),\n+    },\n+    Punct {\n+        ch: '<',\n+        spacing: Alone,\n+        span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0),\n+    },\n+    Punct {\n+        ch: '.',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0),\n+    },\n+    Punct {\n+        ch: '.',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0),\n     },\n     Punct {\n         ch: '=',\n+        spacing: Alone,\n+        span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0),\n+    },\n+    Punct {\n+        ch: '<',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:12:5: 12:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0),\n+    },\n+    Punct {\n+        ch: '<',\n+        spacing: Joint,\n+        span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0),\n     },\n     Punct {\n         ch: '=',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:12:5: 12:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0),\n     },\n     Punct {\n-        ch: '>',\n+        ch: '!',\n         spacing: Alone,\n-        span: $DIR/dump-debug-span-debug.rs:12:7: 12:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:17:8: 17:9 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:18:5: 18:7 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"_\",\n-                span: $DIR/dump-debug-span-debug.rs:14:6: 14:7 (#0),\n+                span: $DIR/dump-debug-span-debug.rs:19:6: 19:7 (#0),\n             },\n         ],\n-        span: $DIR/dump-debug-span-debug.rs:14:5: 14:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:19:5: 19:8 (#0),\n     },\n     Literal {\n         kind: Integer,\n         symbol: \"0\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:17:5: 17:6 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:22:5: 22:6 (#0),\n     },\n     Literal {\n         kind: Float,\n         symbol: \"1.0\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:18:5: 18:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:23:5: 23:8 (#0),\n     },\n     Literal {\n         kind: Str,\n         symbol: \"S\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:19:5: 19:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:24:5: 24:8 (#0),\n     },\n     Literal {\n         kind: ByteStr,\n         symbol: \"B\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:20:5: 20:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:25:5: 25:9 (#0),\n     },\n     Literal {\n         kind: StrRaw(0),\n         symbol: \"R\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:21:5: 21:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:26:5: 26:9 (#0),\n     },\n     Literal {\n         kind: StrRaw(2),\n         symbol: \"R\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:22:5: 22:13 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:27:5: 27:13 (#0),\n     },\n     Literal {\n         kind: ByteStrRaw(0),\n         symbol: \"BR\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:23:5: 23:11 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:28:5: 28:11 (#0),\n     },\n     Literal {\n         kind: ByteStrRaw(2),\n         symbol: \"BR\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:24:5: 24:15 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:29:5: 29:15 (#0),\n     },\n     Literal {\n         kind: Char,\n         symbol: \"C\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:25:5: 25:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:30:5: 30:8 (#0),\n     },\n     Literal {\n         kind: Byte,\n         symbol: \"B\",\n         suffix: None,\n-        span: $DIR/dump-debug-span-debug.rs:26:5: 26:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:31:5: 31:9 (#0),\n     },\n     Literal {\n         kind: Integer,\n         symbol: \"0\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:29:5: 29:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:34:5: 34:7 (#0),\n     },\n     Literal {\n         kind: Float,\n         symbol: \"1.0\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:30:5: 30:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:35:5: 35:9 (#0),\n     },\n     Literal {\n         kind: Str,\n         symbol: \"S\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:31:5: 31:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:36:5: 36:9 (#0),\n     },\n     Literal {\n         kind: ByteStr,\n         symbol: \"B\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:32:5: 32:10 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:37:5: 37:10 (#0),\n     },\n     Literal {\n         kind: StrRaw(0),\n         symbol: \"R\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:33:5: 33:10 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:38:5: 38:10 (#0),\n     },\n     Literal {\n         kind: StrRaw(2),\n         symbol: \"R\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:34:5: 34:14 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:39:5: 39:14 (#0),\n     },\n     Literal {\n         kind: ByteStrRaw(0),\n         symbol: \"BR\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:35:5: 35:12 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:40:5: 40:12 (#0),\n     },\n     Literal {\n         kind: ByteStrRaw(2),\n         symbol: \"BR\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:36:5: 36:16 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:41:5: 41:16 (#0),\n     },\n     Literal {\n         kind: Char,\n         symbol: \"C\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:37:5: 37:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:42:5: 42:9 (#0),\n     },\n     Literal {\n         kind: Byte,\n         symbol: \"B\",\n         suffix: Some(\"q\"),\n-        span: $DIR/dump-debug-span-debug.rs:38:5: 38:10 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:43:5: 43:10 (#0),\n     },\n ]"}]}