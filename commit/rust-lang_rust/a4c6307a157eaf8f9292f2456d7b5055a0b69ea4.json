{"sha": "a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YzYzMDdhMTU3ZWFmOGY5MjkyZjI0NTZkN2I1MDU1YTBiNjllYTQ=", "commit": {"author": {"name": "Knight", "email": "knight42@mail.ustc.edu.cn", "date": "2016-08-22T05:57:10Z"}, "committer": {"name": "Knight", "email": "knight42@mail.ustc.edu.cn", "date": "2016-08-22T05:57:10Z"}, "message": " Updated E0432 to new format", "tree": {"sha": "a55cc1f4993d0a3a788de753e8b12487098f90b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a55cc1f4993d0a3a788de753e8b12487098f90b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "html_url": "https://github.com/rust-lang/rust/commit/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/comments", "author": null, "committer": null, "parents": [{"sha": "820c8101077c430e6fc10481782f5df0862c279c", "url": "https://api.github.com/repos/rust-lang/rust/commits/820c8101077c430e6fc10481782f5df0862c279c", "html_url": "https://github.com/rust-lang/rust/commit/820c8101077c430e6fc10481782f5df0862c279c"}], "stats": {"total": 128, "additions": 83, "deletions": 45}, "files": [{"sha": "e2c9e4aca57dce2dda5ce89211a52a87f133582f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -418,10 +418,14 @@ fn resolve_struct_error<'b, 'a: 'b, 'c>(resolver: &'b Resolver<'a>,\n         }\n         ResolutionError::UnresolvedImport(name) => {\n             let msg = match name {\n-                Some((n, p)) => format!(\"unresolved import `{}`{}\", n, p),\n+                Some((n, _)) => format!(\"unresolved import `{}`\", n),\n                 None => \"unresolved import\".to_owned(),\n             };\n-            struct_span_err!(resolver.session, span, E0432, \"{}\", msg)\n+            let mut err = struct_span_err!(resolver.session, span, E0432, \"{}\", msg);\n+            if let Some((_, p)) = name {\n+                err.span_label(span, &p);\n+            }\n+            err\n         }\n         ResolutionError::FailedToResolve(msg) => {\n             let mut err = struct_span_err!(resolver.session, span, E0433,"}, {"sha": "8c6d89c29bde14f68b4d42c1e8d08d2b5b93de54", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -423,7 +423,7 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n             if let Failed(err) = self.finalize_import(import) {\n                 errors = true;\n                 let (span, help) = match err {\n-                    Some((span, msg)) => (span, format!(\". {}\", msg)),\n+                    Some((span, msg)) => (span, msg),\n                     None => (import.span, String::new()),\n                 };\n \n@@ -596,9 +596,9 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n                 };\n                 let module_str = module_to_string(module);\n                 let msg = if &module_str == \"???\" {\n-                    format!(\"There is no `{}` in the crate root{}\", name, lev_suggestion)\n+                    format!(\"no `{}` in the root{}\", name, lev_suggestion)\n                 } else {\n-                    format!(\"There is no `{}` in `{}`{}\", name, module_str, lev_suggestion)\n+                    format!(\"no `{}` in `{}`{}\", name, module_str, lev_suggestion)\n                 };\n                 Failed(Some((directive.span, msg)))\n             } else {"}, {"sha": "220b255bde419e9371f58c092c2f31e63cd15ed3", "filename": "src/test/compile-fail/import-from-missing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use spam::{ham, eggs};\n-//~^ ERROR unresolved import `spam::eggs`. There is no `eggs` in `spam`\n+use spam::{ham, eggs}; //~ ERROR unresolved import `spam::eggs` [E0432]\n+                       //~^ no `eggs` in `spam`\n \n mod spam {\n     pub fn ham() { }"}, {"sha": "1ca1c060410adb1b44fecc132103d2fc78680000", "filename": "src/test/compile-fail/import.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -9,13 +9,14 @@\n // except according to those terms.\n \n use zed::bar;\n-use zed::baz;\n-//~^ ERROR unresolved import `zed::baz`. There is no `baz` in `zed`\n+use zed::baz; //~ ERROR unresolved import `zed::baz` [E0432]\n+              //~^ no `baz` in `zed`. Did you mean to use `bar`?\n \n \n mod zed {\n     pub fn bar() { println!(\"bar\"); }\n-    use foo; //~ ERROR unresolved import\n+    use foo; //~ ERROR unresolved import `foo` [E0432]\n+             //~^ no `foo` in the root\n }\n \n fn main() {"}, {"sha": "f5b03f9b2e97158ec104827b6d7ed94ef9687cf4", "filename": "src/test/compile-fail/import2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport2.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use baz::zed::bar;\n-//~^ ERROR unresolved import `baz::zed::bar`. Could not find `zed` in `baz`\n+use baz::zed::bar; //~ ERROR unresolved import `baz::zed::bar` [E0432]\n+                   //~^ Could not find `zed` in `baz`\n \n mod baz {}\n mod zed {"}, {"sha": "20943bd0ea0773f8737ad45f264f81af41f89756", "filename": "src/test/compile-fail/issue-12612.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -15,8 +15,8 @@ extern crate issue_12612_1 as foo;\n use foo::bar;\n \n mod test {\n-    use bar::foo;\n-    //~^ ERROR unresolved import `bar::foo`. Maybe a missing `extern crate bar`?\n+    use bar::foo; //~ ERROR unresolved import `bar::foo` [E0432]\n+                  //~^ Maybe a missing `extern crate bar`?\n }\n \n fn main() {}"}, {"sha": "0059e92e07f07a8aa29ae13cfb8ff78e6395509e", "filename": "src/test/compile-fail/issue-13404.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-13404.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-13404.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13404.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n use a::f;\n-use b::f;\n-//~^ ERROR: unresolved import `b::f`. There is no `f` in `b`\n+use b::f; //~ ERROR: unresolved import `b::f` [E0432]\n+          //~^ no `f` in `b`\n \n mod a { pub fn f() {} }\n mod b { }"}, {"sha": "dc09af0ada66f0cb03285baf96f3d8e2eeabbc61", "filename": "src/test/compile-fail/issue-1697.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -10,6 +10,7 @@\n \n // Testing that we don't fail abnormally after hitting the errors\n \n-use unresolved::*; //~ ERROR unresolved import `unresolved::*`. Maybe a missing `extern crate unres\n+use unresolved::*; //~ ERROR unresolved import `unresolved::*` [E0432]\n+                   //~^ Maybe a missing `extern crate unresolved`?\n \n fn main() {}"}, {"sha": "0d684ec5ae19b4593f2a5b379857e62a989a09e1", "filename": "src/test/compile-fail/issue-2937.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2937.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use m::f as x; //~ ERROR unresolved import `m::f`. There is no `f` in `m`\n+use m::f as x; //~ ERROR unresolved import `m::f` [E0432]\n+               //~^ no `f` in `m`\n \n mod m {}\n "}, {"sha": "b0cfd8714fc028969d84f8515ac3372c587f8f7b", "filename": "src/test/compile-fail/issue-30560.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-30560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-30560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30560.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -9,8 +9,12 @@\n // except according to those terms.\n \n type Alias = ();\n-use Alias::*; //~ ERROR Not a module\n-use std::io::Result::*; //~ ERROR Not a module\n+use Alias::*;\n+//~^ ERROR unresolved import `Alias::*` [E0432]\n+//~| Not a module `Alias`\n+use std::io::Result::*;\n+//~^ ERROR unresolved import `std::io::Result::*` [E0432]\n+//~| Not a module `Result`\n \n trait T {}\n use T::*; //~ ERROR items in traits are not importable"}, {"sha": "d610e8b483798af81cf2c1df4a57f5054a925b72", "filename": "src/test/compile-fail/issue-32833.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -8,9 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use bar::Foo; //~ ERROR There is no `Foo` in `bar` [E0432]\n+use bar::Foo; //~ ERROR unresolved import `bar::Foo` [E0432]\n+              //~^ no `Foo` in `bar`\n mod bar {\n-    use Foo; //~ ERROR There is no `Foo` in the crate root [E0432]\n+    use Foo; //~ ERROR unresolved import `Foo` [E0432]\n+             //~^ no `Foo` in the root\n }\n \n fn main() {}"}, {"sha": "7a36012925eed415f3c836f067946553e1bd9f33", "filename": "src/test/compile-fail/issue-5035.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -14,7 +14,8 @@ impl K for isize {} //~ ERROR: `K` is not a trait\n                     //~| NOTE: not a trait\n                     //~| NOTE: aliases cannot be used for traits\n \n-use ImportError; //~ ERROR unresolved\n+use ImportError; //~ ERROR unresolved import `ImportError` [E0432]\n+                 //~^ no `ImportError` in the root\n impl ImportError for () {} // check that this is not an additional error (c.f. #35142)\n \n fn main() {}"}, {"sha": "670b6bd46e7d82a88455b82ce017c47d8b7f590c", "filename": "src/test/compile-fail/issue-8208.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-8208.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fissue-8208.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8208.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -8,14 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use self::*; //~ ERROR: unresolved import `self::*`. Cannot glob-import a module into itself.\n+use self::*; //~ ERROR: unresolved import `self::*` [E0432]\n+             //~^ Cannot glob-import a module into itself.\n \n mod foo {\n-    use foo::*; //~ ERROR: unresolved import `foo::*`. Cannot glob-import a module into itself.\n+    use foo::*; //~ ERROR: unresolved import `foo::*` [E0432]\n+                //~^ Cannot glob-import a module into itself.\n \n     mod bar {\n         use super::bar::*;\n-        //~^ ERROR: unresolved import `super::bar::*`. Cannot glob-import a module into itself.\n+        //~^ ERROR: unresolved import `super::bar::*` [E0432]\n+        //~| Cannot glob-import a module into itself.\n     }\n \n }"}, {"sha": "376e95312b8fbf6b1cc7df7034e1bf42cbae3edc", "filename": "src/test/compile-fail/privacy2.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -25,12 +25,14 @@ pub fn foo() {}\n \n fn test1() {\n     use bar::foo;\n-    //~^ ERROR unresolved import `bar::foo`. There is no `foo` in `bar`\n+    //~^ ERROR unresolved import `bar::foo` [E0432]\n+    //~| no `foo` in `bar`\n }\n \n fn test2() {\n     use bar::glob::foo;\n-    //~^ ERROR unresolved import `bar::glob::foo`. There is no `foo` in `bar::glob`\n+    //~^ ERROR unresolved import `bar::glob::foo` [E0432]\n+    //~| no `foo` in `bar::glob`\n }\n \n #[start] fn main(_: isize, _: *const *const u8) -> isize { 3 }"}, {"sha": "b841717bd11d8c24675b93ae3d93d521e0228e20", "filename": "src/test/compile-fail/privacy3.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -26,7 +26,8 @@ pub fn foo() {}\n \n fn test1() {\n     use bar::gpriv;\n-    //~^ ERROR unresolved import `bar::gpriv`. There is no `gpriv` in `bar`\n+    //~^ ERROR unresolved import `bar::gpriv` [E0432]\n+    //~| no `gpriv` in `bar`\n \n     // This should pass because the compiler will insert a fake name binding\n     // for `gpriv`"}, {"sha": "a23ac80fca62071490dc4cd51f015a08b94cffdb", "filename": "src/test/compile-fail/resolve_self_super_hint.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fresolve_self_super_hint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fresolve_self_super_hint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve_self_super_hint.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -11,16 +11,20 @@\n mod a {\n     extern crate collections;\n     use collections::HashMap;\n-//~^ ERROR unresolved import `collections::HashMap`. Did you mean `self::collections`?\n+    //~^ ERROR unresolved import `collections::HashMap` [E0432]\n+    //~| Did you mean `self::collections`?\n     mod b {\n         use collections::HashMap;\n-//~^ ERROR unresolved import `collections::HashMap`. Did you mean `a::collections`?\n+        //~^ ERROR unresolved import `collections::HashMap` [E0432]\n+        //~| Did you mean `a::collections`?\n         mod c {\n             use collections::HashMap;\n-//~^ ERROR unresolved import `collections::HashMap`. Did you mean `a::collections`?\n+            //~^ ERROR unresolved import `collections::HashMap` [E0432]\n+            //~| Did you mean `a::collections`?\n             mod d {\n                 use collections::HashMap;\n-//~^ ERROR unresolved import `collections::HashMap`. Did you mean `a::collections`?\n+                //~^ ERROR unresolved import `collections::HashMap` [E0432]\n+                //~| Did you mean `a::collections`?\n             }\n         }\n     }"}, {"sha": "7d11ff6c9b54dae32081a2b2dbce8192af15b75c", "filename": "src/test/compile-fail/super-at-top-level.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use super::f; //~ ERROR unresolved import `super::f`. There are too many initial `super`s.\n+use super::f; //~ ERROR unresolved import `super::f` [E0432]\n+              //~^ There are too many initial `super`s.\n \n fn main() {\n }"}, {"sha": "d1254f3f5241b98c134cb9136cfcaf37702c329c", "filename": "src/test/compile-fail/unresolved-import.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -10,13 +10,17 @@\n \n // ignore-tidy-linelength\n \n-use foo::bar; //~ ERROR unresolved import `foo::bar`. Maybe a missing `extern crate foo`?\n+use foo::bar; //~ ERROR unresolved import `foo::bar` [E0432]\n+              //~^ Maybe a missing `extern crate foo`?\n \n-use bar::Baz as x; //~ ERROR unresolved import `bar::Baz`. There is no `Baz` in `bar`. Did you mean to use `Bar`?\n+use bar::Baz as x; //~ ERROR unresolved import `bar::Baz` [E0432]\n+                   //~^ no `Baz` in `bar`. Did you mean to use `Bar`?\n \n-use food::baz; //~ ERROR unresolved import `food::baz`. There is no `baz` in `food`. Did you mean to use `bag`?\n+use food::baz; //~ ERROR unresolved import `food::baz`\n+               //~^ no `baz` in `food`. Did you mean to use `bag`?\n \n-use food::{beens as Foo}; //~ ERROR unresolved import `food::beens`. There is no `beens` in `food`. Did you mean to use `beans`?\n+use food::{beens as Foo}; //~ ERROR unresolved import `food::beens` [E0432]\n+                          //~^ no `beens` in `food`. Did you mean to use `beans`?\n \n mod bar {\n     pub struct Bar;"}, {"sha": "58e37bbfa3ea7c7729d56545777f2aff02527e81", "filename": "src/test/compile-fail/use-from-trait.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -18,10 +18,12 @@ use Trait::C;\n //~^ ERROR `C` is not directly importable\n \n use Foo::new;\n-//~^ ERROR unresolved import `Foo::new`. Not a module `Foo`\n+//~^ ERROR unresolved import `Foo::new` [E0432]\n+//~| Not a module `Foo`\n \n use Foo::C2;\n-//~^ ERROR unresolved import `Foo::C2`. Not a module `Foo`\n+//~^ ERROR unresolved import `Foo::C2` [E0432]\n+//~| Not a module `Foo`\n \n pub trait Trait {\n     fn foo();"}, {"sha": "6df20d414a788f919f0744ecc45d00a67de60791", "filename": "src/test/compile-fail/use-keyword.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fuse-keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fuse-keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-keyword.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -14,9 +14,14 @@\n mod a {\n     mod b {\n         use self as A; //~ ERROR `self` imports are only allowed within a { } list\n-        //~^ ERROR unresolved import `self`. There is no `self` in the crate root\n-        use super as B; //~ ERROR unresolved import `super`. There is no `super` in the crate root\n-        use super::{self as C}; //~ERROR unresolved import `super`. There is no `super` in the crate\n+        //~^ ERROR unresolved import `self` [E0432]\n+        //~| no `self` in the root\n+        use super as B;\n+        //~^ ERROR unresolved import `super` [E0432]\n+        //~| no `super` in the root\n+        use super::{self as C};\n+        //~^ ERROR unresolved import `super` [E0432]\n+        //~| no `super` in the root\n     }\n }\n "}, {"sha": "5f8842a521abd80d940d04e31a350abed4d6dcb5", "filename": "src/test/compile-fail/use-mod-2.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fuse-mod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4c6307a157eaf8f9292f2456d7b5055a0b69ea4/src%2Ftest%2Fcompile-fail%2Fuse-mod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-mod-2.rs?ref=a4c6307a157eaf8f9292f2456d7b5055a0b69ea4", "patch": "@@ -10,10 +10,12 @@\n \n mod foo {\n     use self::{self};\n-    //~^ ERROR unresolved import `self`. There is no `self` in the crate root\n+    //~^ ERROR unresolved import `self` [E0432]\n+    //~| no `self` in the root\n \n     use super::{self};\n-    //~^ ERROR unresolved import `super`. There is no `super` in the crate root\n+    //~^ ERROR unresolved import `super` [E0432]\n+    //~| no `super` in the root\n }\n \n fn main() {}"}]}