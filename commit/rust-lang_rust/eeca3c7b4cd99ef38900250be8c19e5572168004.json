{"sha": "eeca3c7b4cd99ef38900250be8c19e5572168004", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlY2EzYzdiNGNkOTllZjM4OTAwMjUwYmU4YzE5ZTU1NzIxNjgwMDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-09T15:11:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-09T15:11:43Z"}, "message": "auto merge of #18756 : jbcrail/rust/add-enum-set-bitxor, r=alexcrichton\n\nI implemented BitXor, and also added tests for BitAnd and BitXor.\r\n\r\ncc #18424", "tree": {"sha": "f1e12ba2e6b4f699891c01fd5dbfbdfb6c20a6ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1e12ba2e6b4f699891c01fd5dbfbdfb6c20a6ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeca3c7b4cd99ef38900250be8c19e5572168004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeca3c7b4cd99ef38900250be8c19e5572168004", "html_url": "https://github.com/rust-lang/rust/commit/eeca3c7b4cd99ef38900250be8c19e5572168004", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeca3c7b4cd99ef38900250be8c19e5572168004/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "946225d77f65e307de3c216cbc2c686b880a6791", "url": "https://api.github.com/repos/rust-lang/rust/commits/946225d77f65e307de3c216cbc2c686b880a6791", "html_url": "https://github.com/rust-lang/rust/commit/946225d77f65e307de3c216cbc2c686b880a6791"}, {"sha": "12db4de554faf8e2f6baca4514b1e5983cb60783", "url": "https://api.github.com/repos/rust-lang/rust/commits/12db4de554faf8e2f6baca4514b1e5983cb60783", "html_url": "https://github.com/rust-lang/rust/commit/12db4de554faf8e2f6baca4514b1e5983cb60783"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "ee0c4644b36a59f28bee7dea5dbd5797fa434fb0", "filename": "src/libcollections/enum_set.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/eeca3c7b4cd99ef38900250be8c19e5572168004/src%2Flibcollections%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeca3c7b4cd99ef38900250be8c19e5572168004/src%2Flibcollections%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fenum_set.rs?ref=eeca3c7b4cd99ef38900250be8c19e5572168004", "patch": "@@ -16,7 +16,6 @@\n use core::prelude::*;\n use core::fmt;\n \n-// FIXME(conventions): implement BitXor\n // FIXME(contentions): implement union family of methods? (general design may be wrong here)\n \n #[deriving(Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n@@ -201,6 +200,12 @@ impl<E:CLike> BitAnd<EnumSet<E>, EnumSet<E>> for EnumSet<E> {\n     }\n }\n \n+impl<E:CLike> BitXor<EnumSet<E>, EnumSet<E>> for EnumSet<E> {\n+    fn bitxor(&self, e: &EnumSet<E>) -> EnumSet<E> {\n+        EnumSet {bits: self.bits ^ e.bits}\n+    }\n+}\n+\n /// An iterator over an EnumSet\n pub struct Items<E> {\n     index: uint,\n@@ -433,9 +438,29 @@ mod test {\n         let elems = e_intersection.iter().collect();\n         assert_eq!(vec![C], elems)\n \n+        // Another way to express intersection\n+        let e_intersection = e1 - (e1 - e2);\n+        let elems = e_intersection.iter().collect();\n+        assert_eq!(vec![C], elems)\n+\n         let e_subtract = e1 - e2;\n         let elems = e_subtract.iter().collect();\n         assert_eq!(vec![A], elems)\n+\n+        // Bitwise XOR of two sets, aka symmetric difference\n+        let e_symmetric_diff = e1 ^ e2;\n+        let elems = e_symmetric_diff.iter().collect();\n+        assert_eq!(vec![A,B], elems)\n+\n+        // Another way to express symmetric difference\n+        let e_symmetric_diff = (e1 - e2) | (e2 - e1);\n+        let elems = e_symmetric_diff.iter().collect();\n+        assert_eq!(vec![A,B], elems)\n+\n+        // Yet another way to express symmetric difference\n+        let e_symmetric_diff = (e1 | e2) - (e1 & e2);\n+        let elems = e_symmetric_diff.iter().collect();\n+        assert_eq!(vec![A,B], elems)\n     }\n \n     #[test]"}]}