{"sha": "77c995b96afbb0572763660b356ed9ee0363422a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Yzk5NWI5NmFmYmIwNTcyNzYzNjYwYjM1NmVkOWVlMDM2MzQyMmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-24T01:42:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-24T01:42:31Z"}, "message": "Auto merge of #30001 - Detegr:master, r=Manishearth\n\nr? @Manishearth", "tree": {"sha": "466c8f7fd3652debc80cae171fa11662040e00df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/466c8f7fd3652debc80cae171fa11662040e00df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77c995b96afbb0572763660b356ed9ee0363422a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77c995b96afbb0572763660b356ed9ee0363422a", "html_url": "https://github.com/rust-lang/rust/commit/77c995b96afbb0572763660b356ed9ee0363422a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77c995b96afbb0572763660b356ed9ee0363422a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "html_url": "https://github.com/rust-lang/rust/commit/a9d15a6e92f2f68dad632b20ad26d3698dec75f8"}, {"sha": "210c435752e3579c9c63c65a95f2e88a252edffd", "url": "https://api.github.com/repos/rust-lang/rust/commits/210c435752e3579c9c63c65a95f2e88a252edffd", "html_url": "https://github.com/rust-lang/rust/commit/210c435752e3579c9c63c65a95f2e88a252edffd"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "988d5537e5db779b253e11361e881b235ba60586", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77c995b96afbb0572763660b356ed9ee0363422a/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77c995b96afbb0572763660b356ed9ee0363422a/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=77c995b96afbb0572763660b356ed9ee0363422a", "patch": "@@ -231,6 +231,17 @@ fn confirm_builtin_call<'a,'tcx>(fcx: &FnCtxt<'a,'tcx>,\n                 format!(\"expected function, found `{}`\", actual)\n             }, callee_ty, None);\n \n+            if let hir::ExprCall(ref expr, _) = call_expr.node {\n+                let tcx = fcx.tcx();\n+                if let Some(pr) = tcx.def_map.borrow().get(&expr.id) {\n+                    if pr.depth == 0 {\n+                        if let Some(span) = tcx.map.span_if_local(pr.def_id()) {\n+                            tcx.sess.span_note(span, \"defined here\")\n+                        }\n+                    }\n+                }\n+            }\n+\n             // This is the \"default\" function signature, used in case of error.\n             // In that case, we check each argument against \"error\" in order to\n             // set up all the node type bindings."}, {"sha": "0851020b1f1d8ab64f33d26b1460d4e4e7dfc441", "filename": "src/test/compile-fail/issue-10969.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/77c995b96afbb0572763660b356ed9ee0363422a/src%2Ftest%2Fcompile-fail%2Fissue-10969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77c995b96afbb0572763660b356ed9ee0363422a/src%2Ftest%2Fcompile-fail%2Fissue-10969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10969.rs?ref=77c995b96afbb0572763660b356ed9ee0363422a", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn func(i: i32) { //~NOTE defined here\n+    i(); //~ERROR expected function, found `i32`\n+}\n+fn main() {\n+    let i = 0i32; //~NOTE defined here\n+    i(); //~ERROR expected function, found `i32`\n+}"}]}