{"sha": "b64c4f9560e370eb718dfd266d9251d0394e6857", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NGM0Zjk1NjBlMzcwZWI3MThkZmQyNjZkOTI1MWQwMzk0ZTY4NTc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-09T14:45:50Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-28T14:12:25Z"}, "message": "Add new const_format_args!() macro and use it in panics.", "tree": {"sha": "cc6672ce7f93f6aed242595e8cd84dee1bdafee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc6672ce7f93f6aed242595e8cd84dee1bdafee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b64c4f9560e370eb718dfd266d9251d0394e6857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b64c4f9560e370eb718dfd266d9251d0394e6857", "html_url": "https://github.com/rust-lang/rust/commit/b64c4f9560e370eb718dfd266d9251d0394e6857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b64c4f9560e370eb718dfd266d9251d0394e6857/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76cf1b8bd03142eacee3bd31ca4651f0ce0431ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/76cf1b8bd03142eacee3bd31ca4651f0ce0431ca", "html_url": "https://github.com/rust-lang/rust/commit/76cf1b8bd03142eacee3bd31ca4651f0ce0431ca"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "b1be50b0bf9905c9c73d0df2b8fc76423d17e08e", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -72,6 +72,7 @@ pub fn register_builtin_macros(resolver: &mut dyn ResolverExpand) {\n         file: source_util::expand_file,\n         format_args_nl: format::expand_format_args_nl,\n         format_args: format::expand_format_args,\n+        const_format_args: format::expand_format_args,\n         global_asm: asm::expand_global_asm,\n         include_bytes: source_util::expand_include_bytes,\n         include_str: source_util::expand_include_str,"}, {"sha": "114750d9b7b3aa4ad0a8d9ce55fec0500acfb1ae", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -410,6 +410,7 @@ symbols! {\n         const_fn_transmute,\n         const_fn_union,\n         const_fn_unsize,\n+        const_format_args,\n         const_generic_defaults,\n         const_generics,\n         const_generics_defaults,"}, {"sha": "6ad10990840c2807eb9ffd9e45714be95a68371e", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -337,6 +337,7 @@ impl<'a> Arguments<'a> {\n     #[doc(hidden)]\n     #[inline]\n     #[unstable(feature = \"fmt_internals\", reason = \"internal to format_args!\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_fmt_arguments_new\", issue = \"none\")]\n     pub const fn new_v1(pieces: &'a [&'static str], args: &'a [ArgumentV1<'a>]) -> Arguments<'a> {\n         Arguments { pieces, fmt: None, args }\n     }\n@@ -350,6 +351,7 @@ impl<'a> Arguments<'a> {\n     #[doc(hidden)]\n     #[inline]\n     #[unstable(feature = \"fmt_internals\", reason = \"internal to format_args!\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_fmt_arguments_new\", issue = \"none\")]\n     pub const fn new_v1_formatted(\n         pieces: &'a [&'static str],\n         args: &'a [ArgumentV1<'a>],"}, {"sha": "dbaec2a91d20e8dd9eb5ac900a81166bc1b10a56", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -837,6 +837,16 @@ pub(crate) mod builtin {\n         ($fmt:expr, $($args:tt)*) => {{ /* compiler built-in */ }};\n     }\n \n+    /// Same as `format_args`, but can be used in some const contexts.\n+    #[unstable(feature = \"const_format_args\", issue = \"none\")]\n+    #[allow_internal_unstable(fmt_internals, const_fmt_arguments_new)]\n+    #[rustc_builtin_macro]\n+    #[macro_export]\n+    macro_rules! const_format_args {\n+        ($fmt:expr) => {{ /* compiler built-in */ }};\n+        ($fmt:expr, $($args:tt)*) => {{ /* compiler built-in */ }};\n+    }\n+\n     /// Same as `format_args`, but adds a newline in the end.\n     #[unstable(\n         feature = \"format_args_nl\","}, {"sha": "4b72f9ed169ec41be3550997fe41360c026241d1", "filename": "library/core/src/panic.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fcore%2Fsrc%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fcore%2Fsrc%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpanic.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -7,7 +7,7 @@ use crate::fmt;\n \n #[doc(hidden)]\n #[unstable(feature = \"edition_panic\", issue = \"none\", reason = \"use panic!() instead\")]\n-#[allow_internal_unstable(core_panic)]\n+#[allow_internal_unstable(core_panic, const_format_args)]\n #[rustc_diagnostic_item = \"core_panic_2015_macro\"]\n #[rustc_macro_transparency = \"semitransparent\"]\n pub macro panic_2015 {\n@@ -21,21 +21,21 @@ pub macro panic_2015 {\n         $crate::panicking::panic_str($msg)\n     ),\n     ($fmt:expr, $($arg:tt)+) => (\n-        $crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))\n+        $crate::panicking::panic_fmt($crate::const_format_args!($fmt, $($arg)+))\n     ),\n }\n \n #[doc(hidden)]\n #[unstable(feature = \"edition_panic\", issue = \"none\", reason = \"use panic!() instead\")]\n-#[allow_internal_unstable(core_panic)]\n+#[allow_internal_unstable(core_panic, const_format_args)]\n #[rustc_diagnostic_item = \"core_panic_2021_macro\"]\n #[rustc_macro_transparency = \"semitransparent\"]\n pub macro panic_2021 {\n     () => (\n         $crate::panicking::panic(\"explicit panic\")\n     ),\n     ($($t:tt)+) => (\n-        $crate::panicking::panic_fmt($crate::format_args!($($t)+))\n+        $crate::panicking::panic_fmt($crate::const_format_args!($($t)+))\n     ),\n }\n "}, {"sha": "808a2202b3e9f6c39cd8b3d0d77eb2d61eac3318", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -247,6 +247,7 @@\n #![feature(const_fn_floating_point_arithmetic)]\n #![feature(const_fn_fn_ptr_basics)]\n #![cfg_attr(bootstrap, feature(const_fn_transmute))]\n+#![feature(const_format_args)]\n #![feature(const_io_structs)]\n #![feature(const_ip)]\n #![feature(const_ipv4)]\n@@ -556,9 +557,9 @@ pub use core::{\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n #[allow(deprecated)]\n pub use core::{\n-    assert, assert_matches, cfg, column, compile_error, concat, concat_idents, env, file,\n-    format_args, format_args_nl, include, include_bytes, include_str, line, llvm_asm, log_syntax,\n-    module_path, option_env, stringify, trace_macros,\n+    assert, assert_matches, cfg, column, compile_error, concat, concat_idents, const_format_args,\n+    env, file, format_args, format_args_nl, include, include_bytes, include_str, line, llvm_asm,\n+    log_syntax, module_path, option_env, stringify, trace_macros,\n };\n \n #[stable(feature = \"core_primitive\", since = \"1.43.0\")]"}, {"sha": "3b3996e437c2b6fc2717a6cf56e2b44cc707797f", "filename": "library/std/src/panic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fstd%2Fsrc%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/library%2Fstd%2Fsrc%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanic.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -20,7 +20,7 @@ use crate::thread::Result;\n \n #[doc(hidden)]\n #[unstable(feature = \"edition_panic\", issue = \"none\", reason = \"use panic!() instead\")]\n-#[allow_internal_unstable(libstd_sys_internals)]\n+#[allow_internal_unstable(libstd_sys_internals, const_format_args)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"std_panic_2015_macro\")]\n #[rustc_macro_transparency = \"semitransparent\"]\n pub macro panic_2015 {\n@@ -31,7 +31,7 @@ pub macro panic_2015 {\n         $crate::rt::begin_panic($msg)\n     }),\n     ($fmt:expr, $($arg:tt)+) => ({\n-        $crate::rt::begin_panic_fmt(&$crate::format_args!($fmt, $($arg)+))\n+        $crate::rt::begin_panic_fmt(&$crate::const_format_args!($fmt, $($arg)+))\n     }),\n }\n "}, {"sha": "9e70a847457c0e91ab9106fb19602ffff24665ff", "filename": "src/test/ui/borrowck/issue-64453.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.rs?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -3,6 +3,7 @@ struct Value;\n \n static settings_dir: String = format!(\"\");\n //~^ ERROR calls in statics are limited to constant functions\n+//~| ERROR is not yet stable as a const\n \n fn from_string(_: String) -> Value {\n     Value"}, {"sha": "5513c3d217e2a3c4a35b22c8ae2f7899106c81ba", "filename": "src/test/ui/borrowck/issue-64453.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b64c4f9560e370eb718dfd266d9251d0394e6857/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b64c4f9560e370eb718dfd266d9251d0394e6857/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.stderr?ref=b64c4f9560e370eb718dfd266d9251d0394e6857", "patch": "@@ -1,9 +1,18 @@\n error[E0507]: cannot move out of static item `settings_dir`\n-  --> $DIR/issue-64453.rs:13:37\n+  --> $DIR/issue-64453.rs:14:37\n    |\n LL |     let settings_data = from_string(settings_dir);\n    |                                     ^^^^^^^^^^^^ move occurs because `settings_dir` has type `String`, which does not implement the `Copy` trait\n \n+error: `Arguments::<'a>::new_v1` is not yet stable as a const fn\n+  --> $DIR/issue-64453.rs:4:31\n+   |\n+LL | static settings_dir: String = format!(\"\");\n+   |                               ^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(const_fmt_arguments_new)]` to the crate attributes to enable\n+   = note: this error originates in the macro `$crate::__export::format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n   --> $DIR/issue-64453.rs:4:31\n    |\n@@ -12,7 +21,7 @@ LL | static settings_dir: String = format!(\"\");\n    |\n    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0015, E0507.\n For more information about an error, try `rustc --explain E0015`."}]}