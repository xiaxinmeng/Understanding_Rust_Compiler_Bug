{"sha": "86df9039b2a49dde3a2453d75c4c58540a568a1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZGY5MDM5YjJhNDlkZGUzYTI0NTNkNzVjNGM1ODU0MGE1NjhhMWE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-10-21T21:25:09Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-10-23T15:02:57Z"}, "message": "Tweak \"use `.await`\" suggestion", "tree": {"sha": "945ec11598c29d00307a1ad4e980d9d8194ed844", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/945ec11598c29d00307a1ad4e980d9d8194ed844"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86df9039b2a49dde3a2453d75c4c58540a568a1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86df9039b2a49dde3a2453d75c4c58540a568a1a", "html_url": "https://github.com/rust-lang/rust/commit/86df9039b2a49dde3a2453d75c4c58540a568a1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86df9039b2a49dde3a2453d75c4c58540a568a1a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07a63e6d1fabf3560e8e1e17c1d56b10a06152d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a63e6d1fabf3560e8e1e17c1d56b10a06152d9", "html_url": "https://github.com/rust-lang/rust/commit/07a63e6d1fabf3560e8e1e17c1d56b10a06152d9"}], "stats": {"total": 108, "additions": 55, "deletions": 53}, "files": [{"sha": "fa837e04db35eaa4c42cb8351703ffb8d982f757", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -21,7 +21,7 @@ use rustc_middle::ty::{\n };\n use rustc_middle::ty::{TypeAndMut, TypeckResults};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{MultiSpan, Span, DUMMY_SP};\n+use rustc_span::{BytePos, MultiSpan, Span, DUMMY_SP};\n use rustc_target::spec::abi;\n use std::fmt;\n \n@@ -2114,10 +2114,10 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 if self.predicate_may_hold(&try_obligation) && impls_future {\n                     if let Ok(snippet) = self.tcx.sess.source_map().span_to_snippet(span) {\n                         if snippet.ends_with('?') {\n-                            err.span_suggestion(\n-                                span,\n-                                \"consider using `.await` here\",\n-                                format!(\"{}.await?\", snippet.trim_end_matches('?')),\n+                            err.span_suggestion_verbose(\n+                                span.with_hi(span.hi() - BytePos(1)).shrink_to_hi(),\n+                                \"consider `await`ing on the `Future`\",\n+                                \".await\".to_string(),\n                                 Applicability::MaybeIncorrect,\n                             );\n                         }"}, {"sha": "18db8d63850b22d2aa7065817c6fc7b4cbb0c4ca", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -497,16 +497,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n                 if self.infcx.predicate_may_hold(&obligation) {\n                     debug!(\"suggest_missing_await: obligation held: {:?}\", obligation);\n-                    if let Ok(code) = self.sess().source_map().span_to_snippet(sp) {\n-                        err.span_suggestion(\n-                            sp,\n-                            \"consider using `.await` here\",\n-                            format!(\"{}.await\", code),\n-                            Applicability::MaybeIncorrect,\n-                        );\n-                    } else {\n-                        debug!(\"suggest_missing_await: no snippet for {:?}\", sp);\n-                    }\n+                    err.span_suggestion_verbose(\n+                        sp.shrink_to_hi(),\n+                        \"consider `await`ing on the `Future`\",\n+                        \".await\".to_string(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n                 } else {\n                     debug!(\"suggest_missing_await: obligation did not hold: {:?}\", obligation)\n                 }"}, {"sha": "d90ce0f1bb482d7c82f02d7c1c470771adb2f06b", "filename": "src/test/ui/async-await/await-keyword/incorrect-syntax-suggestions.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -237,13 +237,14 @@ error[E0277]: the `?` operator can only be applied to values that implement `Try\n   --> $DIR/incorrect-syntax-suggestions.rs:16:19\n    |\n LL |     let _ = await bar()?;\n-   |                   ^^^^^^\n-   |                   |\n-   |                   the `?` operator cannot be applied to type `impl Future`\n-   |                   help: consider using `.await` here: `bar().await?`\n+   |                   ^^^^^^ the `?` operator cannot be applied to type `impl Future`\n    |\n    = help: the trait `Try` is not implemented for `impl Future`\n    = note: required by `into_result`\n+help: consider `await`ing on the `Future`\n+   |\n+LL |     let _ = await bar().await?;\n+   |                        ^^^^^^\n \n error[E0277]: the `?` operator can only be applied to values that implement `Try`\n   --> $DIR/incorrect-syntax-suggestions.rs:63:19"}, {"sha": "afba889f014fe0cf66c8c14d6a42f80b451837e5", "filename": "src/test/ui/async-await/issue-61076.stderr", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fissue-61076.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fissue-61076.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-61076.stderr?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -2,25 +2,27 @@ error[E0277]: the `?` operator can only be applied to values that implement `Try\n   --> $DIR/issue-61076.rs:42:5\n    |\n LL |     foo()?;\n-   |     ^^^^^^\n-   |     |\n-   |     the `?` operator cannot be applied to type `impl Future`\n-   |     help: consider using `.await` here: `foo().await?`\n+   |     ^^^^^^ the `?` operator cannot be applied to type `impl Future`\n    |\n    = help: the trait `Try` is not implemented for `impl Future`\n    = note: required by `into_result`\n+help: consider `await`ing on the `Future`\n+   |\n+LL |     foo().await?;\n+   |          ^^^^^^\n \n error[E0277]: the `?` operator can only be applied to values that implement `Try`\n   --> $DIR/issue-61076.rs:56:5\n    |\n LL |     t?;\n-   |     ^^\n-   |     |\n-   |     the `?` operator cannot be applied to type `T`\n-   |     help: consider using `.await` here: `t.await?`\n+   |     ^^ the `?` operator cannot be applied to type `T`\n    |\n    = help: the trait `Try` is not implemented for `T`\n    = note: required by `into_result`\n+help: consider `await`ing on the `Future`\n+   |\n+LL |     t.await?;\n+   |      ^^^^^^\n \n error[E0609]: no field `0` on type `impl Future`\n   --> $DIR/issue-61076.rs:58:26"}, {"sha": "febcd0218426199e16831bc29e3c711437d0b18a", "filename": "src/test/ui/async-await/suggest-missing-await-closure.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.fixed?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -15,8 +15,8 @@ async fn suggest_await_in_async_closure() {\n         let x = make_u32();\n         take_u32(x.await)\n         //~^ ERROR mismatched types [E0308]\n-        //~| HELP consider using `.await` here\n-        //~| SUGGESTION x.await\n+        //~| HELP consider `await`ing on the `Future`\n+        //~| SUGGESTION .await\n     };\n }\n "}, {"sha": "faabf6ee3f16f1c06e19747d209d45df389254b1", "filename": "src/test/ui/async-await/suggest-missing-await-closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.rs?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -15,8 +15,8 @@ async fn suggest_await_in_async_closure() {\n         let x = make_u32();\n         take_u32(x)\n         //~^ ERROR mismatched types [E0308]\n-        //~| HELP consider using `.await` here\n-        //~| SUGGESTION x.await\n+        //~| HELP consider `await`ing on the `Future`\n+        //~| SUGGESTION .await\n     };\n }\n "}, {"sha": "2151057aa7fc0a8c70f908e9ba3d4b8622db0f12", "filename": "src/test/ui/async-await/suggest-missing-await-closure.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.stderr?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -5,13 +5,14 @@ LL | async fn make_u32() -> u32 {\n    |                        --- the `Output` of this `async fn`'s found opaque type\n ...\n LL |         take_u32(x)\n-   |                  ^\n-   |                  |\n-   |                  expected `u32`, found opaque type\n-   |                  help: consider using `.await` here: `x.await`\n+   |                  ^ expected `u32`, found opaque type\n    |\n    = note:     expected type `u32`\n            found opaque type `impl Future`\n+help: consider `await`ing on the `Future`\n+   |\n+LL |         take_u32(x.await)\n+   |                   ^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e548fda7cb4f59719c303efbe87f20a9e2fd7f74", "filename": "src/test/ui/async-await/suggest-missing-await.fixed", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.fixed?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -12,8 +12,8 @@ async fn suggest_await_in_async_fn() {\n     let x = make_u32();\n     take_u32(x.await)\n     //~^ ERROR mismatched types [E0308]\n-    //~| HELP consider using `.await` here\n-    //~| SUGGESTION x.await\n+    //~| HELP consider `await`ing on the `Future`\n+    //~| SUGGESTION .await\n }\n \n async fn dummy() {}\n@@ -23,8 +23,8 @@ async fn suggest_await_in_async_fn_return() {\n     dummy().await;\n     //~^ ERROR mismatched types [E0308]\n     //~| HELP try adding a semicolon\n-    //~| HELP consider using `.await` here\n-    //~| SUGGESTION dummy().await\n+    //~| HELP consider `await`ing on the `Future`\n+    //~| SUGGESTION .await\n }\n \n fn main() {}"}, {"sha": "464a9602119e1269f97bd01040e4d1e6c4c2bd6f", "filename": "src/test/ui/async-await/suggest-missing-await.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -12,8 +12,8 @@ async fn suggest_await_in_async_fn() {\n     let x = make_u32();\n     take_u32(x)\n     //~^ ERROR mismatched types [E0308]\n-    //~| HELP consider using `.await` here\n-    //~| SUGGESTION x.await\n+    //~| HELP consider `await`ing on the `Future`\n+    //~| SUGGESTION .await\n }\n \n async fn dummy() {}\n@@ -23,8 +23,8 @@ async fn suggest_await_in_async_fn_return() {\n     dummy()\n     //~^ ERROR mismatched types [E0308]\n     //~| HELP try adding a semicolon\n-    //~| HELP consider using `.await` here\n-    //~| SUGGESTION dummy().await\n+    //~| HELP consider `await`ing on the `Future`\n+    //~| SUGGESTION .await\n }\n \n fn main() {}"}, {"sha": "d729420e93019d215384b03f52046177d04286d3", "filename": "src/test/ui/async-await/suggest-missing-await.stderr", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -5,13 +5,14 @@ LL | async fn make_u32() -> u32 {\n    |                        --- the `Output` of this `async fn`'s found opaque type\n ...\n LL |     take_u32(x)\n-   |              ^\n-   |              |\n-   |              expected `u32`, found opaque type\n-   |              help: consider using `.await` here: `x.await`\n+   |              ^ expected `u32`, found opaque type\n    |\n    = note:     expected type `u32`\n            found opaque type `impl Future`\n+help: consider `await`ing on the `Future`\n+   |\n+LL |     take_u32(x.await)\n+   |               ^^^^^^\n \n error[E0308]: mismatched types\n   --> $DIR/suggest-missing-await.rs:23:5\n@@ -28,10 +29,10 @@ help: try adding a semicolon\n    |\n LL |     dummy();\n    |            ^\n-help: consider using `.await` here\n+help: consider `await`ing on the `Future`\n    |\n LL |     dummy().await\n-   |\n+   |            ^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5c9c549fa0779ca0c7d78350938e907b3309f6ca", "filename": "src/test/ui/suggestions/issue-72766.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86df9039b2a49dde3a2453d75c4c58540a568a1a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-72766.stderr?ref=86df9039b2a49dde3a2453d75c4c58540a568a1a", "patch": "@@ -2,13 +2,14 @@ error[E0277]: the `?` operator can only be applied to values that implement `Try\n   --> $DIR/issue-72766.rs:14:5\n    |\n LL |     SadGirl {}.call()?;\n-   |     ^^^^^^^^^^^^^^^^^^\n-   |     |\n-   |     the `?` operator cannot be applied to type `impl Future`\n-   |     help: consider using `.await` here: `SadGirl {}.call().await?`\n+   |     ^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl Future`\n    |\n    = help: the trait `Try` is not implemented for `impl Future`\n    = note: required by `into_result`\n+help: consider `await`ing on the `Future`\n+   |\n+LL |     SadGirl {}.call().await?;\n+   |                      ^^^^^^\n \n error: aborting due to previous error\n "}]}