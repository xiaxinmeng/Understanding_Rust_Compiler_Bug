{"sha": "e286090d7a66f0213aafdc90d5fbd856dd5c05b5", "node_id": "C_kwDOAAsO6NoAKGUyODYwOTBkN2E2NmYwMjEzYWFmZGM5MGQ1ZmJkODU2ZGQ1YzA1YjU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-23T17:57:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-23T18:04:57Z"}, "message": "make rustfmt mandatory and used pinned toolchain", "tree": {"sha": "298e8a2cc0ae102a134decfe7d7dbc45ddeaa44c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/298e8a2cc0ae102a134decfe7d7dbc45ddeaa44c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e286090d7a66f0213aafdc90d5fbd856dd5c05b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e286090d7a66f0213aafdc90d5fbd856dd5c05b5", "html_url": "https://github.com/rust-lang/rust/commit/e286090d7a66f0213aafdc90d5fbd856dd5c05b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e286090d7a66f0213aafdc90d5fbd856dd5c05b5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35023f50c05896b703dc736b2dc56f7a776a095e", "url": "https://api.github.com/repos/rust-lang/rust/commits/35023f50c05896b703dc736b2dc56f7a776a095e", "html_url": "https://github.com/rust-lang/rust/commit/35023f50c05896b703dc736b2dc56f7a776a095e"}], "stats": {"total": 43, "additions": 17, "deletions": 26}, "files": [{"sha": "85937a8e444587a1f9968cb219621e093560ab50", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 17, "deletions": 26, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/e286090d7a66f0213aafdc90d5fbd856dd5c05b5/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e286090d7a66f0213aafdc90d5fbd856dd5c05b5/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=e286090d7a66f0213aafdc90d5fbd856dd5c05b5", "patch": "@@ -86,42 +86,33 @@ jobs:\n       - name: Test\n         run: bash ./ci.sh\n \n-  clippy:\n-    name: clippy + rustdoc\n+  style:\n+    name: style checks\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@v3\n       - name: Install required toolchain\n         # We need a toolchain that can actually build Miri, just a nightly won't do.\n         run: |\n           cargo install rustup-toolchain-install-master # TODO: cache this?\n-          ./rustup-toolchain \"\" -c clippy\n-      - name: Clippy (miri)\n+          ./rustup-toolchain \"\" -c clippy -c rustfmt\n+      - name: rustfmt (miri, ui_test)\n+        run: cargo fmt --all --check\n+      - name: rustfmt (everything else)\n+        # TODO: Add `tests` (work in progress).\n+        # Maybe change to `find . -name '*.rs'`, superseding the previous step.\n+        run: |\n+          find bench-cargo-miri benches cargo-miri test-cargo-miri -name '*.rs' \\\n+            | xargs rustfmt --edition=2021 --config-path ./rustfmt.toml --check\n+      - name: clippy (miri)\n         run: cargo clippy --all-targets -- -D warnings\n       #- name: Clippy (ui_test)\n       #  run: cargo clippy --manifest-path ui_test/Cargo.toml --all-targets -- -D warnings\n-      - name: Clippy (cargo-miri)\n+      - name: clippy (cargo-miri)\n         run: cargo clippy --manifest-path cargo-miri/Cargo.toml --all-targets -- -D warnings\n-      - name: Rustdoc\n+      - name: rustdoc\n         run: RUSTDOCFLAGS=\"-Dwarnings\" cargo doc --document-private-items\n \n-  fmt:\n-    name: formatting (ignored by bors)\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: actions/checkout@v3\n-      - name: Install latest nightly\n-        run: |\n-          rustup toolchain install nightly --component rustfmt\n-          rustup override set nightly\n-      - name: Formatting (miri, ui_test)\n-        run: cargo fmt --all --check\n-      - name: Formatting (everything else)\n-        # TODO: Add `tests` (work in progress).\n-        # Maybe change to `find . -name '*.rs'`, superseding the previous step.\n-        run: find bench-cargo-miri benches cargo-miri test-cargo-miri -name '*.rs'\n-          | xargs rustfmt --edition=2021 --config-path ./rustfmt.toml --check\n-\n   # These jobs doesn't actually test anything, but they're only used to tell\n   # bors the build completed, as there is no practical way to detect when a\n   # workflow is successful listening to webhooks only.\n@@ -131,15 +122,15 @@ jobs:\n   end-success:\n     name: bors build finished\n     runs-on: ubuntu-latest\n-    needs: [build, clippy]\n+    needs: [build, style]\n     if: github.event.pusher.name == 'bors' && success()\n     steps:\n       - name: mark the job as a success\n         run: exit 0\n   end-failure:\n     name: bors build finished\n     runs-on: ubuntu-latest\n-    needs: [build, clippy]\n+    needs: [build, style]\n     if: github.event.pusher.name == 'bors' && (failure() || cancelled())\n     steps:\n       - name: mark the job as a failure\n@@ -149,7 +140,7 @@ jobs:\n   cron-fail-notify:\n     name: cronjob failure notification\n     runs-on: ubuntu-latest\n-    needs: [build, clippy]\n+    needs: [build, style]\n     if: github.event_name == 'schedule' && (failure() || cancelled())\n     steps:\n       - name: Install zulip-send"}]}