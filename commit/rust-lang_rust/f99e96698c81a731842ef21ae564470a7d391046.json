{"sha": "f99e96698c81a731842ef21ae564470a7d391046", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5OWU5NjY5OGM4MWE3MzE4NDJlZjIxYWU1NjQ0NzBhN2QzOTEwNDY=", "commit": {"author": {"name": "Hirokazu Hata", "email": "h.hata.ai.t@gmail.com", "date": "2019-01-03T09:27:02Z"}, "committer": {"name": "Hirokazu Hata", "email": "h.hata.ai.t@gmail.com", "date": "2019-01-03T09:27:02Z"}, "message": "Remove unnecessary mock functions", "tree": {"sha": "58c2be0c0b8bce548cb51c32f9777666785e8407", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c2be0c0b8bce548cb51c32f9777666785e8407"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f99e96698c81a731842ef21ae564470a7d391046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f99e96698c81a731842ef21ae564470a7d391046", "html_url": "https://github.com/rust-lang/rust/commit/f99e96698c81a731842ef21ae564470a7d391046", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f99e96698c81a731842ef21ae564470a7d391046/comments", "author": {"login": "h-michael", "id": 4556097, "node_id": "MDQ6VXNlcjQ1NTYwOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4556097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-michael", "html_url": "https://github.com/h-michael", "followers_url": "https://api.github.com/users/h-michael/followers", "following_url": "https://api.github.com/users/h-michael/following{/other_user}", "gists_url": "https://api.github.com/users/h-michael/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-michael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-michael/subscriptions", "organizations_url": "https://api.github.com/users/h-michael/orgs", "repos_url": "https://api.github.com/users/h-michael/repos", "events_url": "https://api.github.com/users/h-michael/events{/privacy}", "received_events_url": "https://api.github.com/users/h-michael/received_events", "type": "User", "site_admin": false}, "committer": {"login": "h-michael", "id": 4556097, "node_id": "MDQ6VXNlcjQ1NTYwOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4556097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-michael", "html_url": "https://github.com/h-michael", "followers_url": "https://api.github.com/users/h-michael/followers", "following_url": "https://api.github.com/users/h-michael/following{/other_user}", "gists_url": "https://api.github.com/users/h-michael/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-michael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-michael/subscriptions", "organizations_url": "https://api.github.com/users/h-michael/orgs", "repos_url": "https://api.github.com/users/h-michael/repos", "events_url": "https://api.github.com/users/h-michael/events{/privacy}", "received_events_url": "https://api.github.com/users/h-michael/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5992964edb0e6dba7970c344b46bfd75f57e9a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5992964edb0e6dba7970c344b46bfd75f57e9a0", "html_url": "https://github.com/rust-lang/rust/commit/f5992964edb0e6dba7970c344b46bfd75f57e9a0"}], "stats": {"total": 28, "additions": 1, "deletions": 27}, "files": [{"sha": "9605294046de9e98b0706f0f152461718b336f74", "filename": "crates/ra_analysis/src/mock_analysis.rs", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f99e96698c81a731842ef21ae564470a7d391046/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99e96698c81a731842ef21ae564470a7d391046/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs?ref=f99e96698c81a731842ef21ae564470a7d391046", "patch": "@@ -55,26 +55,6 @@ impl MockAnalysis {\n         (res, position)\n     }\n \n-    /// Same as `with_files`, but requires that a single file contains two `<|>` marker,\n-    /// whose range is also returned.\n-    pub fn with_files_and_range(fixture: &str) -> (MockAnalysis, FileRange) {\n-        let mut range = None;\n-        let mut res = MockAnalysis::new();\n-        for entry in parse_fixture(fixture) {\n-            if entry.text.contains(CURSOR_MARKER) {\n-                assert!(\n-                    range.is_none(),\n-                    \"only two marker (<|>) per fixture is allowed\"\n-                );\n-                range = Some(res.add_file_with_range(&entry.meta, &entry.text));\n-            } else {\n-                res.add_file(&entry.meta, &entry.text);\n-            }\n-        }\n-        let range = range.expect(\"expected two marker (<|>)\");\n-        (res, range)\n-    }\n-\n     pub fn add_file(&mut self, path: &str, text: &str) -> FileId {\n         let file_id = FileId((self.files.len() + 1) as u32);\n         self.files.push((path.to_string(), text.to_string()));\n@@ -122,18 +102,12 @@ impl MockAnalysis {\n     }\n }\n \n-/// Creates analysis from a multi-file fixture, returns positions marked with a <|>.\n+/// Creates analysis from a multi-file fixture, returns positions marked with <|>.\n pub fn analysis_and_position(fixture: &str) -> (Analysis, FilePosition) {\n     let (mock, position) = MockAnalysis::with_files_and_position(fixture);\n     (mock.analysis(), position)\n }\n \n-/// Creates analysis from a multi-file fixture, returns ranges marked with two <|>.\n-pub fn analysis_and_range(fixture: &str) -> (Analysis, FileRange) {\n-    let (mock, range) = MockAnalysis::with_files_and_range(fixture);\n-    (mock.analysis(), range)\n-}\n-\n /// Creates analysis for a single file.\n pub fn single_file(code: &str) -> (Analysis, FileId) {\n     let mut mock = MockAnalysis::new();"}]}