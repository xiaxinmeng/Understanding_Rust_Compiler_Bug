{"sha": "f6a27cbda273d5d39af953bca12990cc4930382c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YTI3Y2JkYTI3M2Q1ZDM5YWY5NTNiY2ExMjk5MGNjNDkzMDM4MmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-06-26T22:54:51Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-28T14:47:56Z"}, "message": "libextra: Fix even more merge fallout.", "tree": {"sha": "de84234349180c768e96fc1a5c905c1d8a645250", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de84234349180c768e96fc1a5c905c1d8a645250"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6a27cbda273d5d39af953bca12990cc4930382c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a27cbda273d5d39af953bca12990cc4930382c", "html_url": "https://github.com/rust-lang/rust/commit/f6a27cbda273d5d39af953bca12990cc4930382c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6a27cbda273d5d39af953bca12990cc4930382c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3625781cfe20db713158236f5d03e0c249f5137f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3625781cfe20db713158236f5d03e0c249f5137f", "html_url": "https://github.com/rust-lang/rust/commit/3625781cfe20db713158236f5d03e0c249f5137f"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "d401710a466d68cd0360502ac3fa4322f7ccca0f", "filename": "src/libextra/ebml.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Febml.rs?ref=f6a27cbda273d5d39af953bca12990cc4930382c", "patch": "@@ -94,7 +94,6 @@ pub mod reader {\n \n     use serialize;\n \n-    use core::prelude::*;\n     use core::cast::transmute;\n     use core::int;\n     use core::io;\n@@ -106,6 +105,8 @@ pub mod reader {\n \n     #[cfg(target_arch = \"x86\")]\n     #[cfg(target_arch = \"x86_64\")]\n+    use core::option::{None, Option, Some};\n+    use core::ptr::offset;\n     use core::unstable::intrinsics::bswap32;\n \n     // ebml reading"}, {"sha": "002d8a7f9567a42c139db8cba799b7698ea7fe1d", "filename": "src/libextra/num/bigint.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Fnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Fnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Fbigint.rs?ref=f6a27cbda273d5d39af953bca12990cc4930382c", "patch": "@@ -382,8 +382,6 @@ impl Integer for BigUint {\n             while m >= b {\n                 let (d0, d_unit, b_unit) = div_estimate(&m, &b, n);\n                 let mut d0 = d0;\n-                let mut d_unit = d_unit;\n-                let mut b_unit = b_unit;\n                 let mut prod = b * d0;\n                 while prod > m {\n                     // FIXME(#6050): overloaded operators force moves with generic types"}, {"sha": "209b46809ce31d24308ba8dbb2a96cc140f601d0", "filename": "src/libextra/test.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=f6a27cbda273d5d39af953bca12990cc4930382c", "patch": "@@ -751,9 +751,6 @@ impl BenchHarness {\n }\n \n pub mod bench {\n-    use core::prelude::*;\n-\n-    use core::vec;\n     use test::{BenchHarness, BenchSamples};\n \n     pub fn benchmark(f: &fn(&mut BenchHarness)) -> BenchSamples {"}, {"sha": "e23f9113319d0281014a73ccb2d2ddd847e188b4", "filename": "src/libextra/timer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Ftimer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibextra%2Ftimer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftimer.rs?ref=f6a27cbda273d5d39af953bca12990cc4930382c", "patch": "@@ -125,7 +125,6 @@ pub fn recv_timeout<T:Copy + Send>(iotask: &IoTask,\n                                    -> Option<T> {\n     let (timeout_po, timeout_ch) = stream::<()>();\n     let mut timeout_po = timeout_po;\n-    let mut timeout_ch = timeout_ch;\n     delayed_send(iotask, msecs, &timeout_ch, ());\n \n     // XXX: Workaround due to ports and channels not being &mut. They should"}, {"sha": "8f06fede05722d794f1a172c7cc727f47f0d50c3", "filename": "src/libstd/task/spawn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibstd%2Ftask%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a27cbda273d5d39af953bca12990cc4930382c/src%2Flibstd%2Ftask%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fspawn.rs?ref=f6a27cbda273d5d39af953bca12990cc4930382c", "patch": "@@ -637,7 +637,6 @@ fn spawn_raw_oldsched(mut opts: TaskOpts, f: ~fn()) {\n         let result: ~fn() = || {\n             // Agh. Get move-mode items into the closure. FIXME (#2829)\n             let (notify_chan, child_arc, ancestors) = child_data.take();\n-            let mut child_arc = child_arc;\n             let mut ancestors = ancestors;\n             // Child task runs this code.\n "}]}