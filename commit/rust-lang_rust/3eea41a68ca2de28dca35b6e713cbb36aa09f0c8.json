{"sha": "3eea41a68ca2de28dca35b6e713cbb36aa09f0c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZWE0MWE2OGNhMmRlMjhkY2EzNWI2ZTcxM2NiYjM2YWEwOWYwYzg=", "commit": {"author": {"name": "David Lattimore", "email": "dml@google.com", "date": "2020-08-05T21:36:03Z"}, "committer": {"name": "David Lattimore", "email": "dml@google.com", "date": "2020-08-05T21:36:03Z"}, "message": "Use SyntaxNode.ancestors instead of a loop", "tree": {"sha": "c42396497d275e6113b461130218cddd89c7ef42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c42396497d275e6113b461130218cddd89c7ef42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eea41a68ca2de28dca35b6e713cbb36aa09f0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eea41a68ca2de28dca35b6e713cbb36aa09f0c8", "html_url": "https://github.com/rust-lang/rust/commit/3eea41a68ca2de28dca35b6e713cbb36aa09f0c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eea41a68ca2de28dca35b6e713cbb36aa09f0c8/comments", "author": {"login": "davidlattimore", "id": 8983542, "node_id": "MDQ6VXNlcjg5ODM1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/8983542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlattimore", "html_url": "https://github.com/davidlattimore", "followers_url": "https://api.github.com/users/davidlattimore/followers", "following_url": "https://api.github.com/users/davidlattimore/following{/other_user}", "gists_url": "https://api.github.com/users/davidlattimore/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlattimore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlattimore/subscriptions", "organizations_url": "https://api.github.com/users/davidlattimore/orgs", "repos_url": "https://api.github.com/users/davidlattimore/repos", "events_url": "https://api.github.com/users/davidlattimore/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlattimore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidlattimore", "id": 8983542, "node_id": "MDQ6VXNlcjg5ODM1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/8983542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlattimore", "html_url": "https://github.com/davidlattimore", "followers_url": "https://api.github.com/users/davidlattimore/followers", "following_url": "https://api.github.com/users/davidlattimore/following{/other_user}", "gists_url": "https://api.github.com/users/davidlattimore/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlattimore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlattimore/subscriptions", "organizations_url": "https://api.github.com/users/davidlattimore/orgs", "repos_url": "https://api.github.com/users/davidlattimore/repos", "events_url": "https://api.github.com/users/davidlattimore/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlattimore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bbeffc8c56893548f5667844f59ce5a76f9fd98", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bbeffc8c56893548f5667844f59ce5a76f9fd98", "html_url": "https://github.com/rust-lang/rust/commit/6bbeffc8c56893548f5667844f59ce5a76f9fd98"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "df60048eb2e6e0a41acb8cee0d83fd42aad47d55", "filename": "crates/ra_ssr/src/resolving.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3eea41a68ca2de28dca35b6e713cbb36aa09f0c8/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eea41a68ca2de28dca35b6e713cbb36aa09f0c8/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fresolving.rs?ref=3eea41a68ca2de28dca35b6e713cbb36aa09f0c8", "patch": "@@ -176,13 +176,7 @@ impl<'db> ResolutionScope<'db> {\n \n     /// Returns the function in which SSR was invoked, if any.\n     pub(crate) fn current_function(&self) -> Option<SyntaxNode> {\n-        let mut node = self.node.clone();\n-        loop {\n-            if node.kind() == SyntaxKind::FN {\n-                return Some(node);\n-            }\n-            node = node.parent()?;\n-        }\n+        self.node.ancestors().find(|node| node.kind() == SyntaxKind::FN).map(|node| node.clone())\n     }\n \n     fn resolve_path(&self, path: &ast::Path) -> Option<hir::PathResolution> {"}]}