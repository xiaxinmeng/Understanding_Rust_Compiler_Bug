{"sha": "5194984812bf38d73094da36e1932f503958effc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOTQ5ODQ4MTJiZjM4ZDczMDk0ZGEzNmUxOTMyZjUwMzk1OGVmZmM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-20T02:02:44Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-20T02:02:44Z"}, "message": "Add a verbose-diff option\n\nAnd don't print end of line characters by default in diffs\n\ncc #2536", "tree": {"sha": "d4f4eb8ba082a15e367d72b737385fa9c80c3bea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4f4eb8ba082a15e367d72b737385fa9c80c3bea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5194984812bf38d73094da36e1932f503958effc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5194984812bf38d73094da36e1932f503958effc", "html_url": "https://github.com/rust-lang/rust/commit/5194984812bf38d73094da36e1932f503958effc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5194984812bf38d73094da36e1932f503958effc/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a886e8fe5f3551b9614c8131709267256eaa229", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a886e8fe5f3551b9614c8131709267256eaa229", "html_url": "https://github.com/rust-lang/rust/commit/7a886e8fe5f3551b9614c8131709267256eaa229"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "024c41370a544b722468fe8018a7817f1f8546ff", "filename": "src/bin/main.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5194984812bf38d73094da36e1932f503958effc/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5194984812bf38d73094da36e1932f503958effc/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=5194984812bf38d73094da36e1932f503958effc", "patch": "@@ -93,6 +93,7 @@ enum Operation {\n struct CliOptions {\n     skip_children: Option<bool>,\n     verbose: bool,\n+    verbose_diff: bool,\n     write_mode: Option<WriteMode>,\n     color: Option<Color>,\n     file_lines: FileLines, // Default is all lines in all files.\n@@ -104,6 +105,8 @@ impl CliOptions {\n     fn from_matches(matches: &Matches) -> FmtResult<CliOptions> {\n         let mut options = CliOptions::default();\n         options.verbose = matches.opt_present(\"verbose\");\n+        options.verbose_diff = matches.opt_present(\"verbose-diff\");\n+\n         let unstable_features = matches.opt_present(\"unstable-features\");\n         let rust_nightly = option_env!(\"CFG_RELEASE_CHANNEL\")\n             .map(|c| c == \"nightly\")\n@@ -150,6 +153,7 @@ impl CliOptions {\n \n     fn apply_to(self, config: &mut Config) {\n         config.set().verbose(self.verbose);\n+        config.set().verbose_diff(self.verbose_diff);\n         config.set().file_lines(self.file_lines);\n         config.set().unstable_features(self.unstable_features);\n         if let Some(skip_children) = self.skip_children {\n@@ -227,6 +231,11 @@ fn make_opts() -> Options {\n         \"Format specified line ranges. See README for more detail on the JSON format.\",\n         \"JSON\",\n     );\n+    opts.optflag(\n+        \"\",\n+        \"verbose-diff\",\n+        \"Emit a more verbose diff, indicating the end of lines.\",\n+    );\n     opts.optflag(\"h\", \"help\", \"Show this message\");\n     opts.optflag(\"\", \"skip-children\", \"Don't reformat child modules\");\n     opts.optflag("}, {"sha": "5fc0328695566de9bda7a53728750bbba37470a5", "filename": "src/config/config_type.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5194984812bf38d73094da36e1932f503958effc/src%2Fconfig%2Fconfig_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5194984812bf38d73094da36e1932f503958effc/src%2Fconfig%2Fconfig_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fconfig_type.rs?ref=5194984812bf38d73094da36e1932f503958effc", "patch": "@@ -356,7 +356,8 @@ macro_rules! create_config {\n             }\n \n             pub fn is_hidden_option(name: &str) -> bool {\n-                const HIDE_OPTIONS: [&str; 3] = [\"verbose\", \"file_lines\", \"width_heuristics\"];\n+                const HIDE_OPTIONS: [&str; 4] =\n+                    [\"verbose\", \"verbose_diff\", \"file_lines\", \"width_heuristics\"];\n                 HIDE_OPTIONS.contains(&name)\n             }\n "}, {"sha": "f81bbfccd1e12c2298172128781ce3cf82ac37a2", "filename": "src/config/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5194984812bf38d73094da36e1932f503958effc/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5194984812bf38d73094da36e1932f503958effc/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=5194984812bf38d73094da36e1932f503958effc", "patch": "@@ -143,6 +143,7 @@ create_config! {\n \n     // Not user-facing\n     verbose: bool, false, false, \"Use verbose output\";\n+    verbose_diff: bool, false, false, \"Emit verbose diffs\";\n     file_lines: FileLines, FileLines::all(), false,\n         \"Lines to format; this is not supported in rustfmt.toml, and can only be specified \\\n          via the --file-lines option\";"}, {"sha": "54bfe7996b1f4d59d597c19ba2661ce07f8d2b66", "filename": "src/filemap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5194984812bf38d73094da36e1932f503958effc/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5194984812bf38d73094da36e1932f503958effc/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=5194984812bf38d73094da36e1932f503958effc", "patch": "@@ -159,7 +159,7 @@ where\n                 print_diff(\n                     mismatch,\n                     |line_num| format!(\"Diff in {} at line {}:\", filename.display(), line_num),\n-                    config.color(),\n+                    config,\n                 );\n                 return Ok(has_diff);\n             }\n@@ -186,7 +186,7 @@ where\n                 print_diff(\n                     mismatch,\n                     |line_num| format!(\"Diff in {} at line {}:\", filename.display(), line_num),\n-                    config.color(),\n+                    config,\n                 );\n                 return Ok(has_diff);\n             }"}, {"sha": "426f7da96a23477f37fd633f634d0db92dc5d45c", "filename": "src/rustfmt_diff.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5194984812bf38d73094da36e1932f503958effc/src%2Frustfmt_diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5194984812bf38d73094da36e1932f503958effc/src%2Frustfmt_diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustfmt_diff.rs?ref=5194984812bf38d73094da36e1932f503958effc", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use config::Color;\n+use config::{Color, Config};\n use diff;\n use std::collections::VecDeque;\n use std::io;\n@@ -149,10 +149,13 @@ pub fn make_diff(expected: &str, actual: &str, context_size: usize) -> Vec<Misma\n     results\n }\n \n-pub fn print_diff<F>(diff: Vec<Mismatch>, get_section_title: F, color: Color)\n+pub fn print_diff<F>(diff: Vec<Mismatch>, get_section_title: F, config: &Config)\n where\n     F: Fn(u32) -> String,\n {\n+    let color = config.color();\n+    let line_terminator = if config.verbose_diff() { \"\u23ce\" } else { \"\" };\n+\n     let mut writer = OutputWriter::new(color);\n \n     for mismatch in diff {\n@@ -161,13 +164,17 @@ where\n \n         for line in mismatch.lines {\n             match line {\n-                DiffLine::Context(ref str) => writer.writeln(&format!(\" {}\u23ce\", str), None),\n-                DiffLine::Expected(ref str) => {\n-                    writer.writeln(&format!(\"+{}\u23ce\", str), Some(term::color::GREEN))\n-                }\n-                DiffLine::Resulting(ref str) => {\n-                    writer.writeln(&format!(\"-{}\u23ce\", str), Some(term::color::RED))\n+                DiffLine::Context(ref str) => {\n+                    writer.writeln(&format!(\" {}{}\", str, line_terminator), None)\n                 }\n+                DiffLine::Expected(ref str) => writer.writeln(\n+                    &format!(\"+{}{}\", str, line_terminator),\n+                    Some(term::color::GREEN),\n+                ),\n+                DiffLine::Resulting(ref str) => writer.writeln(\n+                    &format!(\"-{}{}\", str, line_terminator),\n+                    Some(term::color::RED),\n+                ),\n             }\n         }\n     }"}, {"sha": "7e2947929dea4d4c6d995c012e7219aabbf36435", "filename": "tests/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5194984812bf38d73094da36e1932f503958effc/tests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5194984812bf38d73094da36e1932f503958effc/tests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Flib.rs?ref=5194984812bf38d73094da36e1932f503958effc", "patch": "@@ -337,7 +337,7 @@ fn print_mismatches_default_message(result: HashMap<PathBuf, Vec<Mismatch>>) {\n     for (file_name, diff) in result {\n         let mismatch_msg_formatter =\n             |line_num| format!(\"\\nMismatch at {}:{}:\", file_name.display(), line_num);\n-        print_diff(diff, &mismatch_msg_formatter, Color::Auto);\n+        print_diff(diff, &mismatch_msg_formatter, &Default::default());\n     }\n \n     if let Some(mut t) = term::stdout() {\n@@ -350,7 +350,7 @@ fn print_mismatches<T: Fn(u32) -> String>(\n     mismatch_msg_formatter: T,\n ) {\n     for (_file_name, diff) in result {\n-        print_diff(diff, &mismatch_msg_formatter, Color::Auto);\n+        print_diff(diff, &mismatch_msg_formatter, &Default::default());\n     }\n \n     if let Some(mut t) = term::stdout() {"}]}