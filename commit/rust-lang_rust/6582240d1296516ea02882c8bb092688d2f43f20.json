{"sha": "6582240d1296516ea02882c8bb092688d2f43f20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ODIyNDBkMTI5NjUxNmVhMDI4ODJjOGJiMDkyNjg4ZDJmNDNmMjA=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-07T01:10:51Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-07T01:10:51Z"}, "message": "Remove `Compiler::compile()`.\n\nIt's unused.", "tree": {"sha": "e2a643547bac734afabb01237e96edecbadd7a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2a643547bac734afabb01237e96edecbadd7a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6582240d1296516ea02882c8bb092688d2f43f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6582240d1296516ea02882c8bb092688d2f43f20", "html_url": "https://github.com/rust-lang/rust/commit/6582240d1296516ea02882c8bb092688d2f43f20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6582240d1296516ea02882c8bb092688d2f43f20/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2753fab7ce3647033146b07c8b6c9f4856a910b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2753fab7ce3647033146b07c8b6c9f4856a910b0", "html_url": "https://github.com/rust-lang/rust/commit/2753fab7ce3647033146b07c8b6c9f4856a910b0"}], "stats": {"total": 34, "additions": 0, "deletions": 34}, "files": [{"sha": "4265e6dca6a240acfbda3cad626052c7ea0b1d03", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6582240d1296516ea02882c8bb092688d2f43f20/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6582240d1296516ea02882c8bb092688d2f43f20/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=6582240d1296516ea02882c8bb092688d2f43f20", "patch": "@@ -18,7 +18,6 @@ use rustc_session::{output::find_crate_name, Session};\n use rustc_span::symbol::sym;\n use std::any::Any;\n use std::cell::{Ref, RefCell, RefMut};\n-use std::mem;\n use std::rc::Rc;\n \n /// Represent the result of a query.\n@@ -395,37 +394,4 @@ impl Compiler {\n \n         ret\n     }\n-\n-    // This method is different to all the other methods in `Compiler` because\n-    // it lacks a `Queries` entry. It's also not currently used. It does serve\n-    // as an example of how `Compiler` can be used, with additional steps added\n-    // between some passes. And see `rustc_driver::run_compiler` for a more\n-    // complex example.\n-    pub fn compile(&self) -> Result<()> {\n-        let linker = self.enter(|queries| {\n-            queries.prepare_outputs()?;\n-\n-            if self.session().opts.output_types.contains_key(&OutputType::DepInfo)\n-                && self.session().opts.output_types.len() == 1\n-            {\n-                return Ok(None);\n-            }\n-\n-            queries.global_ctxt()?;\n-\n-            // Drop AST after creating GlobalCtxt to free memory.\n-            mem::drop(queries.expansion()?.take());\n-\n-            queries.ongoing_codegen()?;\n-\n-            let linker = queries.linker()?;\n-            Ok(Some(linker))\n-        })?;\n-\n-        if let Some(linker) = linker {\n-            linker.link()?\n-        }\n-\n-        Ok(())\n-    }\n }"}]}