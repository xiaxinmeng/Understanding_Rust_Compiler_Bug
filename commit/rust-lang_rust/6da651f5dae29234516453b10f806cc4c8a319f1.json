{"sha": "6da651f5dae29234516453b10f806cc4c8a319f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYTY1MWY1ZGFlMjkyMzQ1MTY0NTNiMTBmODA2Y2M0YzhhMzE5ZjE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-02T19:18:28Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-02T19:18:28Z"}, "message": "Don't prime caches when just opening a file", "tree": {"sha": "399803bc9b52eea44a4353fed4b10f705d150ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/399803bc9b52eea44a4353fed4b10f705d150ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6da651f5dae29234516453b10f806cc4c8a319f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6da651f5dae29234516453b10f806cc4c8a319f1", "html_url": "https://github.com/rust-lang/rust/commit/6da651f5dae29234516453b10f806cc4c8a319f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6da651f5dae29234516453b10f806cc4c8a319f1/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3043cf53feffef3f69f25c2617801d2fc66ce75", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3043cf53feffef3f69f25c2617801d2fc66ce75", "html_url": "https://github.com/rust-lang/rust/commit/a3043cf53feffef3f69f25c2617801d2fc66ce75"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "55d46b09e78c7ffedc96b27a7321bc40ddec28ae", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6da651f5dae29234516453b10f806cc4c8a319f1/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6da651f5dae29234516453b10f806cc4c8a319f1/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=6da651f5dae29234516453b10f806cc4c8a319f1", "patch": "@@ -506,7 +506,7 @@ impl GlobalState {\n                         .write()\n                         .0\n                         .set_file_contents(path, Some(params.text_document.text.into_bytes()));\n-                    this.update_file_notifications_on_threadpool();\n+                    this.maybe_update_diagnostics();\n                 }\n                 Ok(())\n             })?\n@@ -616,6 +616,23 @@ impl GlobalState {\n         Ok(())\n     }\n     fn update_file_notifications_on_threadpool(&mut self) {\n+        self.maybe_update_diagnostics();\n+        self.task_pool.handle.spawn_with_sender({\n+            let snap = self.snapshot();\n+            move |sender| {\n+                snap.analysis\n+                    .prime_caches(|progress| {\n+                        sender.send(Task::PrimeCaches(progress)).unwrap();\n+                    })\n+                    .unwrap_or_else(|_: Canceled| {\n+                        // Pretend that we're done, so that the progress bar is removed. Otherwise\n+                        // the editor may complain about it already existing.\n+                        sender.send(Task::PrimeCaches(PrimeCachesProgress::Finished)).unwrap()\n+                    });\n+            }\n+        });\n+    }\n+    fn maybe_update_diagnostics(&mut self) {\n         let subscriptions = self\n             .mem_docs\n             .keys()\n@@ -644,19 +661,5 @@ impl GlobalState {\n                 Task::Diagnostics(diagnostics)\n             })\n         }\n-        self.task_pool.handle.spawn_with_sender({\n-            let snap = self.snapshot();\n-            move |sender| {\n-                snap.analysis\n-                    .prime_caches(|progress| {\n-                        sender.send(Task::PrimeCaches(progress)).unwrap();\n-                    })\n-                    .unwrap_or_else(|_: Canceled| {\n-                        // Pretend that we're done, so that the progress bar is removed. Otherwise\n-                        // the editor may complain about it already existing.\n-                        sender.send(Task::PrimeCaches(PrimeCachesProgress::Finished)).unwrap()\n-                    });\n-            }\n-        });\n     }\n }"}]}