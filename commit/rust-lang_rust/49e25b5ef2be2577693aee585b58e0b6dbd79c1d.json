{"sha": "49e25b5ef2be2577693aee585b58e0b6dbd79c1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZTI1YjVlZjJiZTI1Nzc2OTNhZWU1ODViNThlMGI2ZGJkNzljMWQ=", "commit": {"author": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2021-05-29T08:18:19Z"}, "committer": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2021-05-29T08:18:19Z"}, "message": "Add IoSlice(Mut)::advance\n\nAdvance the internal cursor of a single slice.", "tree": {"sha": "13c40488a7a95cbfd8646761bff69f70e6f8d37e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13c40488a7a95cbfd8646761bff69f70e6f8d37e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49e25b5ef2be2577693aee585b58e0b6dbd79c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49e25b5ef2be2577693aee585b58e0b6dbd79c1d", "html_url": "https://github.com/rust-lang/rust/commit/49e25b5ef2be2577693aee585b58e0b6dbd79c1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49e25b5ef2be2577693aee585b58e0b6dbd79c1d/comments", "author": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3803c090f85b3601414e7b6ed4467b38e1de8bf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3803c090f85b3601414e7b6ed4467b38e1de8bf4", "html_url": "https://github.com/rust-lang/rust/commit/3803c090f85b3601414e7b6ed4467b38e1de8bf4"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "4746db5a9fdefa2f4a517cba42abf85cde9ade13", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/49e25b5ef2be2577693aee585b58e0b6dbd79c1d/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e25b5ef2be2577693aee585b58e0b6dbd79c1d/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=49e25b5ef2be2577693aee585b58e0b6dbd79c1d", "patch": "@@ -1045,6 +1045,32 @@ impl<'a> IoSliceMut<'a> {\n \n     /// Advance the internal cursor of the slice.\n     ///\n+    /// Also see [`IoSliceMut::advance_slice`] to advance the cursors of\n+    /// multiple buffers.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(io_slice_advance)]\n+    ///\n+    /// use std::io::IoSliceMut;\n+    /// use std::ops::Deref;\n+    ///\n+    /// let mut data = [1; 8];\n+    /// let mut buf = IoSliceMut::new(&mut data);\n+    ///\n+    /// // Mark 10 bytes as read.\n+    /// buf.advance(3);\n+    /// assert_eq!(buf.deref(), [1; 5].as_ref());\n+    /// ```\n+    #[unstable(feature = \"io_slice_advance\", issue = \"62726\")]\n+    #[inline]\n+    pub fn advance(&mut self, n: usize) {\n+        self.0.advance(n)\n+    }\n+\n+    /// Advance the internal cursor of the slices.\n+    ///\n     /// # Notes\n     ///\n     /// Elements in the slice may be modified if the cursor is not advanced to\n@@ -1093,7 +1119,7 @@ impl<'a> IoSliceMut<'a> {\n \n         *bufs = &mut replace(bufs, &mut [])[remove..];\n         if !bufs.is_empty() {\n-            bufs[0].0.advance(n - accumulated_len)\n+            bufs[0].advance(n - accumulated_len)\n         }\n     }\n }\n@@ -1153,6 +1179,32 @@ impl<'a> IoSlice<'a> {\n \n     /// Advance the internal cursor of the slice.\n     ///\n+    /// Also see [`IoSlice::advance_slice`] to advance the cursors of multiple\n+    /// buffers.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(io_slice_advance)]\n+    ///\n+    /// use std::io::IoSlice;\n+    /// use std::ops::Deref;\n+    ///\n+    /// let mut data = [1; 8];\n+    /// let mut buf = IoSlice::new(&mut data);\n+    ///\n+    /// // Mark 10 bytes as read.\n+    /// buf.advance(3);\n+    /// assert_eq!(buf.deref(), [1; 5].as_ref());\n+    /// ```\n+    #[unstable(feature = \"io_slice_advance\", issue = \"62726\")]\n+    #[inline]\n+    pub fn advance(&mut self, n: usize) {\n+        self.0.advance(n)\n+    }\n+\n+    /// Advance the internal cursor of the slices.\n+    ///\n     /// # Notes\n     ///\n     /// Elements in the slice may be modified if the cursor is not advanced to\n@@ -1200,7 +1252,7 @@ impl<'a> IoSlice<'a> {\n \n         *bufs = &mut replace(bufs, &mut [])[remove..];\n         if !bufs.is_empty() {\n-            bufs[0].0.advance(n - accumulated_len)\n+            bufs[0].advance(n - accumulated_len)\n         }\n     }\n }"}]}