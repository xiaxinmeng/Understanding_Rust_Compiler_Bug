{"sha": "854995313a029df89381449bb168bf61c88c546c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NDk5NTMxM2EwMjlkZjg5MzgxNDQ5YmIxNjhiZjYxYzg4YzU0NmM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-27T13:05:29Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-28T20:35:20Z"}, "message": "Reintroduce `TypeError::FixedArraySize`", "tree": {"sha": "a86f003a8c4e4c25f914ffe2e3650e9ea3a8f676", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a86f003a8c4e4c25f914ffe2e3650e9ea3a8f676"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/854995313a029df89381449bb168bf61c88c546c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/854995313a029df89381449bb168bf61c88c546c", "html_url": "https://github.com/rust-lang/rust/commit/854995313a029df89381449bb168bf61c88c546c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/854995313a029df89381449bb168bf61c88c546c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f13317ca2ee16163ee121fbdf28eb2184840b6dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f13317ca2ee16163ee121fbdf28eb2184840b6dd", "html_url": "https://github.com/rust-lang/rust/commit/f13317ca2ee16163ee121fbdf28eb2184840b6dd"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "3d9e9cd6902238f62ef2b3d16a9893ec5c9007ee", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/854995313a029df89381449bb168bf61c88c546c/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854995313a029df89381449bb168bf61c88c546c/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=854995313a029df89381449bb168bf61c88c546c", "patch": "@@ -23,6 +23,7 @@ pub enum TypeError<'tcx> {\n     AbiMismatch(ExpectedFound<abi::Abi>),\n     Mutability,\n     TupleSize(ExpectedFound<usize>),\n+    FixedArraySize(ExpectedFound<u64>),\n     ArgCount,\n \n     RegionsDoesNotOutlive(Region<'tcx>, Region<'tcx>),\n@@ -99,6 +100,12 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n                        values.expected,\n                        values.found)\n             }\n+            FixedArraySize(values) => {\n+                write!(f, \"expected an array with a fixed size of {} elements, \\\n+                           found one with {} elements\",\n+                       values.expected,\n+                       values.found)\n+            }\n             ArgCount => {\n                 write!(f, \"incorrect number of function parameters\")\n             }"}, {"sha": "5a284e54396292377f872f663dcaf6c26cca4ed4", "filename": "src/librustc/ty/relate.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/854995313a029df89381449bb168bf61c88c546c/src%2Flibrustc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854995313a029df89381449bb168bf61c88c546c/src%2Flibrustc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Frelate.rs?ref=854995313a029df89381449bb168bf61c88c546c", "patch": "@@ -472,8 +472,22 @@ pub fn super_relate_tys<'a, 'gcx, 'tcx, R>(relation: &mut R,\n         (&ty::Array(a_t, sz_a), &ty::Array(b_t, sz_b)) =>\n         {\n             let t = relation.relate(&a_t, &b_t)?;\n-            let sz = relation.relate(&sz_a, &sz_b)?;\n-            Ok(tcx.mk_ty(ty::Array(t, sz)))\n+            match relation.relate(&sz_a, &sz_b) {\n+                Ok(sz) => Ok(tcx.mk_ty(ty::Array(t, sz))),\n+                Err(err) => {\n+                    // Check whether the lengths are both `usize`s,\n+                    // but differ in value, for better diagnostics.\n+                    // FIXME(eddyb) get the right param_env.\n+                    match (sz_a.assert_usize(tcx), sz_b.assert_usize(tcx)) {\n+                        (Some(sz_a_val), Some(sz_b_val)) => {\n+                            Err(TypeError::FixedArraySize(\n+                                expected_found(relation, &sz_a_val, &sz_b_val)\n+                            ))\n+                        }\n+                        _ => return Err(err),\n+                    }\n+                }\n+            }\n         }\n \n         (&ty::Slice(a_t), &ty::Slice(b_t)) =>"}, {"sha": "0daa567052d5662ec881cad2b4c366f30b6c5ca4", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854995313a029df89381449bb168bf61c88c546c/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854995313a029df89381449bb168bf61c88c546c/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=854995313a029df89381449bb168bf61c88c546c", "patch": "@@ -716,6 +716,7 @@ impl<'a, 'tcx> Lift<'tcx> for ty::error::TypeError<'a> {\n             AbiMismatch(x) => AbiMismatch(x),\n             Mutability => Mutability,\n             TupleSize(x) => TupleSize(x),\n+            FixedArraySize(x) => FixedArraySize(x),\n             ArgCount => ArgCount,\n             RegionsDoesNotOutlive(a, b) => {\n                 return tcx.lift(&(a, b)).map(|(a, b)| RegionsDoesNotOutlive(a, b))\n@@ -1294,6 +1295,7 @@ EnumTypeFoldableImpl! {\n         (ty::error::TypeError::AbiMismatch)(x),\n         (ty::error::TypeError::Mutability),\n         (ty::error::TypeError::TupleSize)(x),\n+        (ty::error::TypeError::FixedArraySize)(x),\n         (ty::error::TypeError::ArgCount),\n         (ty::error::TypeError::RegionsDoesNotOutlive)(a, b),\n         (ty::error::TypeError::RegionsInsufficientlyPolymorphic)(a, b),"}, {"sha": "00286b0b0e0f8c439659539fbce03a569d245a0b", "filename": "src/test/ui/consts/const-array-oob-arith.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854995313a029df89381449bb168bf61c88c546c/src%2Ftest%2Fui%2Fconsts%2Fconst-array-oob-arith.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854995313a029df89381449bb168bf61c88c546c/src%2Ftest%2Fui%2Fconsts%2Fconst-array-oob-arith.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-array-oob-arith.stderr?ref=854995313a029df89381449bb168bf61c88c546c", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/const-array-oob-arith.rs:7:45\n    |\n LL | const BLUB: [i32; (ARR[0] - 40) as usize] = [5];\n-   |                                             ^^^ expected `2usize`, found `1usize`\n+   |                                             ^^^ expected an array with a fixed size of 2 elements, found one with 1 elements\n    |\n    = note: expected type `[i32; 2]`\n               found type `[i32; 1]`\n@@ -11,7 +11,7 @@ error[E0308]: mismatched types\n   --> $DIR/const-array-oob-arith.rs:8:44\n    |\n LL | const BOO: [i32; (ARR[0] - 41) as usize] = [5, 99];\n-   |                                            ^^^^^^^ expected `1usize`, found `2usize`\n+   |                                            ^^^^^^^ expected an array with a fixed size of 1 elements, found one with 2 elements\n    |\n    = note: expected type `[i32; 1]`\n               found type `[i32; 2]`"}]}