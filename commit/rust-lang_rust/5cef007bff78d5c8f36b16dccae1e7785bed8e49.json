{"sha": "5cef007bff78d5c8f36b16dccae1e7785bed8e49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZWYwMDdiZmY3OGQ1YzhmMzZiMTZkY2NhZTFlNzc4NWJlZDhlNDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-22T10:15:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-22T10:15:18Z"}, "message": "internal: improve consistency\n\nload and load_proc_macro do similar things", "tree": {"sha": "0185a280904546c75e664bdf0d6e746e9600f594", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0185a280904546c75e664bdf0d6e746e9600f594"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cef007bff78d5c8f36b16dccae1e7785bed8e49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cef007bff78d5c8f36b16dccae1e7785bed8e49", "html_url": "https://github.com/rust-lang/rust/commit/5cef007bff78d5c8f36b16dccae1e7785bed8e49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cef007bff78d5c8f36b16dccae1e7785bed8e49/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cd171cd949f6c82a9ce50645f6ca68b1249c4c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cd171cd949f6c82a9ce50645f6ca68b1249c4c8", "html_url": "https://github.com/rust-lang/rust/commit/8cd171cd949f6c82a9ce50645f6ca68b1249c4c8"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "bf216342b3ca23ba420be80f51a3f5e53e4a6f42", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5cef007bff78d5c8f36b16dccae1e7785bed8e49/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cef007bff78d5c8f36b16dccae1e7785bed8e49/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=5cef007bff78d5c8f36b16dccae1e7785bed8e49", "patch": "@@ -354,15 +354,15 @@ impl ProjectWorkspace {\n         load: &mut dyn FnMut(&AbsPath) -> Option<FileId>,\n     ) -> CrateGraph {\n         let _p = profile::span(\"ProjectWorkspace::to_crate_graph\");\n-        let proc_macro_loader = |path: &AbsPath| match proc_macro_client {\n+        let proc_macro_loader = &mut |path: &AbsPath| match proc_macro_client {\n             Some(client) => client.by_dylib_path(path),\n             None => Vec::new(),\n         };\n \n         let mut crate_graph = match self {\n             ProjectWorkspace::Json { project, sysroot, rustc_cfg } => project_json_to_crate_graph(\n                 rustc_cfg.clone(),\n-                &proc_macro_loader,\n+                proc_macro_loader,\n                 load,\n                 project,\n                 sysroot,\n@@ -377,7 +377,7 @@ impl ProjectWorkspace {\n             } => cargo_to_crate_graph(\n                 rustc_cfg.clone(),\n                 cfg_overrides,\n-                &proc_macro_loader,\n+                proc_macro_loader,\n                 load,\n                 cargo,\n                 build_scripts,\n@@ -399,7 +399,7 @@ impl ProjectWorkspace {\n \n fn project_json_to_crate_graph(\n     rustc_cfg: Vec<CfgFlag>,\n-    proc_macro_loader: &dyn Fn(&AbsPath) -> Vec<ProcMacro>,\n+    proc_macro_loader: &mut dyn FnMut(&AbsPath) -> Vec<ProcMacro>,\n     load: &mut dyn FnMut(&AbsPath) -> Option<FileId>,\n     project: &ProjectJson,\n     sysroot: &Option<Sysroot>,\n@@ -476,7 +476,7 @@ fn project_json_to_crate_graph(\n fn cargo_to_crate_graph(\n     rustc_cfg: Vec<CfgFlag>,\n     override_cfg: &CfgOverrides,\n-    proc_macro_loader: &dyn Fn(&AbsPath) -> Vec<ProcMacro>,\n+    proc_macro_loader: &mut dyn FnMut(&AbsPath) -> Vec<ProcMacro>,\n     load: &mut dyn FnMut(&AbsPath) -> Option<FileId>,\n     cargo: &CargoWorkspace,\n     build_scripts: &WorkspaceBuildScripts,\n@@ -658,7 +658,7 @@ fn handle_rustc_crates(\n     load: &mut dyn FnMut(&AbsPath) -> Option<FileId>,\n     crate_graph: &mut CrateGraph,\n     cfg_options: &CfgOptions,\n-    proc_macro_loader: &dyn Fn(&AbsPath) -> Vec<ProcMacro>,\n+    proc_macro_loader: &mut dyn FnMut(&AbsPath) -> Vec<ProcMacro>,\n     pkg_to_lib_crate: &mut FxHashMap<la_arena::Idx<crate::PackageData>, CrateId>,\n     public_deps: &[(CrateName, CrateId)],\n     cargo: &CargoWorkspace,\n@@ -750,7 +750,7 @@ fn add_target_crate_root(\n     pkg: &PackageData,\n     build_data: Option<&BuildScriptOutput>,\n     cfg_options: &CfgOptions,\n-    proc_macro_loader: &dyn Fn(&AbsPath) -> Vec<ProcMacro>,\n+    proc_macro_loader: &mut dyn FnMut(&AbsPath) -> Vec<ProcMacro>,\n     file_id: FileId,\n     cargo_name: &str,\n ) -> CrateId {"}]}