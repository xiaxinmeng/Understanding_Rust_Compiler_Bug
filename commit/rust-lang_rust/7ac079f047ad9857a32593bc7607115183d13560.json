{"sha": "7ac079f047ad9857a32593bc7607115183d13560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYzA3OWYwNDdhZDk4NTdhMzI1OTNiYzc2MDcxMTUxODNkMTM1NjA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-09T18:06:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-09T18:06:51Z"}, "message": "Rollup merge of #78566 - JRF63:polly, r=Mark-Simulacrum\n\nEnable LLVM Polly via llvm-args.\n\nI think doing it this way is better than in #51061. Polly has other useful options and we probably don't want to create a `-Z` flag for each one of them.\n\n![results](https://user-images.githubusercontent.com/7283601/97695555-338f7180-1adf-11eb-82bd-5130e0e6fa89.png)\n\n[Benchmark](https://gist.github.com/JRF63/9a6268b91720958e90dbe7abffe20298)\n\nI noticed that `-lto` seems to interfere with polly in this specific microbenchmark, as enabling it causes the perf to drop to that of non-polly builds.\n\nOther related PRs: #75615", "tree": {"sha": "2503ded9fb1b8c40df9249b733c87c1766dedca1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2503ded9fb1b8c40df9249b733c87c1766dedca1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ac079f047ad9857a32593bc7607115183d13560", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqYU8CRBK7hj4Ov3rIwAAdHIIAAmW6dpjeCP8BtRM/zoa0j2e\nqEEtIXjkqGYz8axfGLQQkhshyWnX9Gg+VCVI6lN4/XohDEe9IH/Xv0FsLHgt+l/a\nfV6Jm5bh1oSoOd90X+wAuKeUwpNuKNwdnwxWW3kpqBxJK9X1L3faDRY0y8jkO/Qc\n/AbPuKazjJPm53qHEjLoYGA1d4qK+GCf1ONV86UhLhcjk0Ly29TH2cq0o/5/K4ii\ntPfD+6k+2F7+28UjyrZdDVC09IG9UZ7W2dPKSQpomQDITli2R02jJiwSGBrlsABI\nJoTB1NUC4dUhUnmMvycYGr7S3giR0Jbz4EDcWewjqBFLHToq3u+8V3oA9lbY13o=\n=Nya1\n-----END PGP SIGNATURE-----\n", "payload": "tree 2503ded9fb1b8c40df9249b733c87c1766dedca1\nparent 62d3a4f9c25afe5251e1ba4165aefaf90d948b91\nparent 301bb123f424954cd3faee11bbbfb0605e5ae0e8\nauthor Dylan DPC <dylan.dpc@gmail.com> 1604945211 +0100\ncommitter GitHub <noreply@github.com> 1604945211 +0100\n\nRollup merge of #78566 - JRF63:polly, r=Mark-Simulacrum\n\nEnable LLVM Polly via llvm-args.\n\nI think doing it this way is better than in #51061. Polly has other useful options and we probably don't want to create a `-Z` flag for each one of them.\n\n![results](https://user-images.githubusercontent.com/7283601/97695555-338f7180-1adf-11eb-82bd-5130e0e6fa89.png)\n\n[Benchmark](https://gist.github.com/JRF63/9a6268b91720958e90dbe7abffe20298)\n\nI noticed that `-lto` seems to interfere with polly in this specific microbenchmark, as enabling it causes the perf to drop to that of non-polly builds.\n\nOther related PRs: #75615\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac079f047ad9857a32593bc7607115183d13560", "html_url": "https://github.com/rust-lang/rust/commit/7ac079f047ad9857a32593bc7607115183d13560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ac079f047ad9857a32593bc7607115183d13560/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62d3a4f9c25afe5251e1ba4165aefaf90d948b91", "url": "https://api.github.com/repos/rust-lang/rust/commits/62d3a4f9c25afe5251e1ba4165aefaf90d948b91", "html_url": "https://github.com/rust-lang/rust/commit/62d3a4f9c25afe5251e1ba4165aefaf90d948b91"}, {"sha": "301bb123f424954cd3faee11bbbfb0605e5ae0e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/301bb123f424954cd3faee11bbbfb0605e5ae0e8", "html_url": "https://github.com/rust-lang/rust/commit/301bb123f424954cd3faee11bbbfb0605e5ae0e8"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "1dcc5f13415dc8680ee00e119e33c3817c57635c", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ac079f047ad9857a32593bc7607115183d13560/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/7ac079f047ad9857a32593bc7607115183d13560/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=7ac079f047ad9857a32593bc7607115183d13560", "patch": "@@ -138,6 +138,9 @@ changelog-seen = 2\n # Whether or not to specify `-DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=YES`\n #allow-old-toolchain = false\n \n+# Whether to include the Polly optimizer.\n+#polly = false\n+\n # =============================================================================\n # General build configuration options\n # ============================================================================="}, {"sha": "2fc121a2e8613aecbfdbd004985e7af832be1cf4", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ac079f047ad9857a32593bc7607115183d13560/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac079f047ad9857a32593bc7607115183d13560/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=7ac079f047ad9857a32593bc7607115183d13560", "patch": "@@ -99,6 +99,7 @@ pub struct Config {\n     pub llvm_version_suffix: Option<String>,\n     pub llvm_use_linker: Option<String>,\n     pub llvm_allow_old_toolchain: Option<bool>,\n+    pub llvm_polly: Option<bool>,\n     pub llvm_from_ci: bool,\n \n     pub use_lld: bool,\n@@ -418,6 +419,7 @@ struct Llvm {\n     use_libcxx: Option<bool>,\n     use_linker: Option<String>,\n     allow_old_toolchain: Option<bool>,\n+    polly: Option<bool>,\n     download_ci_llvm: Option<StringOrBool>,\n }\n \n@@ -762,6 +764,7 @@ impl Config {\n             set(&mut config.llvm_use_libcxx, llvm.use_libcxx);\n             config.llvm_use_linker = llvm.use_linker.clone();\n             config.llvm_allow_old_toolchain = llvm.allow_old_toolchain;\n+            config.llvm_polly = llvm.polly;\n             config.llvm_from_ci = match llvm.download_ci_llvm {\n                 Some(StringOrBool::String(s)) => {\n                     assert!(s == \"if-available\", \"unknown option `{}` for download-ci-llvm\", s);\n@@ -795,6 +798,7 @@ impl Config {\n                 check_ci_llvm!(llvm.use_libcxx);\n                 check_ci_llvm!(llvm.use_linker);\n                 check_ci_llvm!(llvm.allow_old_toolchain);\n+                check_ci_llvm!(llvm.polly);\n \n                 // CI-built LLVM is shared\n                 config.llvm_link_shared = true;"}, {"sha": "6dc83c7d70af69c04868779bacb615ebc05ba31f", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ac079f047ad9857a32593bc7607115183d13560/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac079f047ad9857a32593bc7607115183d13560/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=7ac079f047ad9857a32593bc7607115183d13560", "patch": "@@ -257,6 +257,10 @@ impl Step for Llvm {\n             enabled_llvm_projects.push(\"compiler-rt\");\n         }\n \n+        if let Some(true) = builder.config.llvm_polly {\n+            enabled_llvm_projects.push(\"polly\");\n+        }\n+\n         // We want libxml to be disabled.\n         // See https://github.com/rust-lang/rust/pull/50104\n         cfg.define(\"LLVM_ENABLE_LIBXML2\", \"OFF\");"}]}