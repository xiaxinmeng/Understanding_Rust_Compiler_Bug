{"sha": "e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MWMxZDZiZmY3Y2RiMjZmOGJhMmY4NDI5YzkxZTFjZGZjYzEyMzY=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-08-05T19:15:44Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-08-10T18:35:10Z"}, "message": "Improvements to emacs inlay hints\n\n - only send request if workspace is initialized (emacs-lsp doesn't seem to\n   prevent sending requests before the initialized notification is sent)\n - check whether we're still in the correct buffer before sending request", "tree": {"sha": "09a9d2e13064220cd6c6d7a470f909774a2b06f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09a9d2e13064220cd6c6d7a470f909774a2b06f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236", "html_url": "https://github.com/rust-lang/rust/commit/e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3f8e6023d66ceb37040833bf317d77019bb10f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f8e6023d66ceb37040833bf317d77019bb10f1", "html_url": "https://github.com/rust-lang/rust/commit/e3f8e6023d66ceb37040833bf317d77019bb10f1"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "075cbd82d7913c6f000cf61fd28622e8f8ee1e90", "filename": "editors/emacs/ra-emacs-lsp.el", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236/editors%2Femacs%2Fra-emacs-lsp.el", "raw_url": "https://github.com/rust-lang/rust/raw/e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236/editors%2Femacs%2Fra-emacs-lsp.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Femacs%2Fra-emacs-lsp.el?ref=e51c1d6bff7cdb26f8ba2f8429c91e1cdfcc1236", "patch": "@@ -79,6 +79,10 @@\n   :ignore-messages nil\n   :server-id 'rust-analyzer))\n \n+(defun rust-analyzer--initialized? ()\n+  (when-let ((workspace (lsp-find-workspace 'rust-analyzer (buffer-file-name))))\n+    (eq 'initialized (lsp--workspace-status workspace))))\n+\n (with-eval-after-load 'company-lsp\n   ;; company-lsp provides a snippet handler for rust by default that adds () after function calls, which RA does better\n   (setq company-lsp--snippet-functions (cl-delete \"rust\" company-lsp--snippet-functions :key #'car :test #'equal)))\n@@ -229,21 +233,22 @@\n           (pop-to-buffer buf))))))\n \n ;; inlay hints\n-(defun rust-analyzer--update-inlay-hints ()\n-  (lsp-send-request-async\n-   (lsp-make-request \"rust-analyzer/inlayHints\"\n-                     (list :textDocument (lsp--text-document-identifier)))\n-   (lambda (res)\n-     (remove-overlays (point-min) (point-max) 'rust-analyzer--inlay-hint t)\n-     (dolist (hint res)\n-       (-let* (((&hash \"range\" \"label\" \"kind\") hint)\n-               ((beg . end) (lsp--range-to-region range))\n-               (overlay (make-overlay beg end)))\n-         (overlay-put overlay 'rust-analyzer--inlay-hint t)\n-         (overlay-put overlay 'evaporate t)\n-         (overlay-put overlay 'after-string (propertize (concat \": \" label)\n-                                                        'font-lock-face 'font-lock-comment-face)))))\n-   'tick)\n+(defun rust-analyzer--update-inlay-hints (buffer)\n+  (if (and (rust-analyzer--initialized?) (eq buffer (current-buffer)))\n+    (lsp-send-request-async\n+     (lsp-make-request \"rust-analyzer/inlayHints\"\n+                       (list :textDocument (lsp--text-document-identifier)))\n+     (lambda (res)\n+       (remove-overlays (point-min) (point-max) 'rust-analyzer--inlay-hint t)\n+       (dolist (hint res)\n+         (-let* (((&hash \"range\" \"label\" \"kind\") hint)\n+                 ((beg . end) (lsp--range-to-region range))\n+                 (overlay (make-overlay beg end)))\n+           (overlay-put overlay 'rust-analyzer--inlay-hint t)\n+           (overlay-put overlay 'evaporate t)\n+           (overlay-put overlay 'after-string (propertize (concat \": \" label)\n+                                                          'font-lock-face 'font-lock-comment-face)))))\n+     'tick))\n   nil)\n \n (defvar-local rust-analyzer--inlay-hints-timer nil)\n@@ -252,17 +257,19 @@\n   (when rust-analyzer--inlay-hints-timer\n     (cancel-timer rust-analyzer--inlay-hints-timer))\n   (setq rust-analyzer--inlay-hints-timer\n-        (run-with-idle-timer 0.1 nil #'rust-analyzer--update-inlay-hints)))\n+        (run-with-idle-timer 0.1 nil #'rust-analyzer--update-inlay-hints (current-buffer))))\n \n (define-minor-mode rust-analyzer-inlay-hints-mode\n   \"Mode for showing inlay hints.\"\n   nil nil nil\n   (cond\n    (rust-analyzer-inlay-hints-mode\n-    (rust-analyzer--update-inlay-hints)\n+    (rust-analyzer--update-inlay-hints (current-buffer))\n+    (add-hook 'lsp-after-initialize-hook #'rust-analyzer--inlay-hints-change-handler nil t)\n     (add-hook 'after-change-functions #'rust-analyzer--inlay-hints-change-handler nil t))\n    (t\n     (remove-overlays (point-min) (point-max) 'rust-analyzer--inlay-hint t)\n+    (remove-hook 'lsp-after-initialize-hook #'rust-analyzer--inlay-hints-change-handler t)\n     (remove-hook 'after-change-functions #'rust-analyzer--inlay-hints-change-handler t))))\n \n "}]}