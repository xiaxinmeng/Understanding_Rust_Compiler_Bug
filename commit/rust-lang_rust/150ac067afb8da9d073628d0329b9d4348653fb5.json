{"sha": "150ac067afb8da9d073628d0329b9d4348653fb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MGFjMDY3YWZiOGRhOWQwNzM2MjhkMDMyOWI5ZDQzNDg2NTNmYjU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-02-28T14:24:32Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-03-03T03:22:49Z"}, "message": "Provide more useful information for E0152", "tree": {"sha": "19936ca25c4aa34f6ca46d1faa662bcc7743d0bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19936ca25c4aa34f6ca46d1faa662bcc7743d0bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/150ac067afb8da9d073628d0329b9d4348653fb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/150ac067afb8da9d073628d0329b9d4348653fb5", "html_url": "https://github.com/rust-lang/rust/commit/150ac067afb8da9d073628d0329b9d4348653fb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/150ac067afb8da9d073628d0329b9d4348653fb5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "095f5e7c81ae2894bdad8b614297b281b67fd2fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/095f5e7c81ae2894bdad8b614297b281b67fd2fc", "html_url": "https://github.com/rust-lang/rust/commit/095f5e7c81ae2894bdad8b614297b281b67fd2fc"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "9c890c76aa08b7af88effde6977dc28575fd68a6", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/150ac067afb8da9d073628d0329b9d4348653fb5/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/150ac067afb8da9d073628d0329b9d4348653fb5/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=150ac067afb8da9d073628d0329b9d4348653fb5", "patch": "@@ -32,7 +32,7 @@ use util::nodemap::FnvHashMap;\n \n use syntax::ast;\n use syntax::attr::AttrMetaMethods;\n-use syntax::codemap::{DUMMY_SP, Span};\n+use syntax::codemap::Span;\n use syntax::parse::token::InternedString;\n use rustc_front::intravisit::Visitor;\n use rustc_front::hir;\n@@ -185,10 +185,21 @@ impl<'a, 'tcx> LanguageItemCollector<'a, 'tcx> {\n         match self.items.items[item_index] {\n             Some(original_def_id) if original_def_id != item_def_id => {\n                 let cstore = &self.session.cstore;\n-                span_err!(self.session, span, E0152,\n-                          \"duplicate entry for `{}`, first definition found in `{}`\",\n-                          LanguageItems::item_name(item_index),\n-                          cstore.crate_name(item_def_id.krate));\n+                let span = self.ast_map.span_if_local(original_def_id).unwrap_or(span);\n+                let mut err = struct_span_err!(self.session,\n+                                                span,\n+                                                E0152,\n+                                                \"Duplicate lang item found: `{}`.\",\n+                                                LanguageItems::item_name(item_index));\n+                if let Some(span) = self.ast_map.span_if_local(item_def_id) {\n+                    span_note!(&mut err, span,\n+                               \"First defined here.\");\n+                } else {\n+                    span_note!(&mut err, span,\n+                               \"First defined in crate `{}`.\",\n+                               cstore.crate_name(item_def_id.krate));\n+                }\n+                err.emit();\n             }\n             _ => {\n                 // OK.\n@@ -203,19 +214,19 @@ impl<'a, 'tcx> LanguageItemCollector<'a, 'tcx> {\n         krate.visit_all_items(self);\n     }\n \n-    pub fn collect_external_language_items(&mut self) {\n+    pub fn collect_external_language_items(&mut self, krate: &hir::Crate) {\n         let cstore = &self.session.cstore;\n         for cnum in cstore.crates() {\n             for (index, item_index) in cstore.lang_items(cnum) {\n                 let def_id = DefId { krate: cnum, index: index };\n-                self.collect_item(item_index, def_id, DUMMY_SP);\n+                self.collect_item(item_index, def_id, krate.span);\n             }\n         }\n     }\n \n     pub fn collect(&mut self, krate: &hir::Crate) {\n         self.collect_local_language_items(krate);\n-        self.collect_external_language_items();\n+        self.collect_external_language_items(krate);\n     }\n }\n "}, {"sha": "0c649b1b4126dab6b42e16f52fa3890f177da6ec", "filename": "src/test/compile-fail/duplicate_entry_error.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/150ac067afb8da9d073628d0329b9d4348653fb5/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/150ac067afb8da9d073628d0329b9d4348653fb5/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs?ref=150ac067afb8da9d073628d0329b9d4348653fb5", "patch": "@@ -8,14 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Test for issue #31788\n-\n-// error-pattern: duplicate entry for `panic_fmt`, first definition found in `std`\n+// Test for issue #31788 and E0152\n \n #![feature(lang_items)]\n \n #[lang = \"panic_fmt\"]\n fn panic_fmt() -> ! {\n+//~^ ERROR: Duplicate lang item found: `panic_fmt`.\n+//~| NOTE First defined in crate `std`.\n     loop {}\n }\n "}]}