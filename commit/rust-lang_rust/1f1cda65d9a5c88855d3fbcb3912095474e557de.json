{"sha": "1f1cda65d9a5c88855d3fbcb3912095474e557de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMWNkYTY1ZDlhNWM4ODg1NWQzZmJjYjM5MTIwOTU0NzRlNTU3ZGU=", "commit": {"author": {"name": "Ashley Mannix", "email": "ashleymannix@live.com.au", "date": "2020-06-30T08:36:10Z"}, "committer": {"name": "Ashley Mannix", "email": "ashleymannix@live.com.au", "date": "2020-07-16T21:25:32Z"}, "message": "appease tidy", "tree": {"sha": "4dd79785212c00f84285ae6253e9186ac67c44aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dd79785212c00f84285ae6253e9186ac67c44aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f1cda65d9a5c88855d3fbcb3912095474e557de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1cda65d9a5c88855d3fbcb3912095474e557de", "html_url": "https://github.com/rust-lang/rust/commit/1f1cda65d9a5c88855d3fbcb3912095474e557de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f1cda65d9a5c88855d3fbcb3912095474e557de/comments", "author": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1017940d77f35f841008c3e108e3da5e48a592f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1017940d77f35f841008c3e108e3da5e48a592f", "html_url": "https://github.com/rust-lang/rust/commit/d1017940d77f35f841008c3e108e3da5e48a592f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "094eff17f89160d6ee897d362b95182315b47183", "filename": "src/libstd/lazy.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f1cda65d9a5c88855d3fbcb3912095474e557de/src%2Flibstd%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f1cda65d9a5c88855d3fbcb3912095474e557de/src%2Flibstd%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flazy.rs?ref=1f1cda65d9a5c88855d3fbcb3912095474e557de", "patch": "@@ -116,10 +116,7 @@ impl<T> SyncOnceCell<T> {\n     /// Creates a new empty cell.\n     #[unstable(feature = \"once_cell\", issue = \"68198\")]\n     pub const fn new() -> SyncOnceCell<T> {\n-        SyncOnceCell {\n-            once: Once::new(),\n-            value: UnsafeCell::new(MaybeUninit::uninit()),\n-        }\n+        SyncOnceCell { once: Once::new(), value: UnsafeCell::new(MaybeUninit::uninit()) }\n     }\n \n     /// Gets the reference to the underlying value."}, {"sha": "64260990824b86fdc9e51afeed8aeca6dea34ff9", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f1cda65d9a5c88855d3fbcb3912095474e557de/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f1cda65d9a5c88855d3fbcb3912095474e557de/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=1f1cda65d9a5c88855d3fbcb3912095474e557de", "patch": "@@ -414,7 +414,10 @@ impl Once {\n                     };\n                     // Run the initialization function, letting it know if we're\n                     // poisoned or not.\n-                    let init_state = OnceState { poisoned: state_and_queue == POISONED, set_state_on_drop_to: Cell::new(COMPLETE) };\n+                    let init_state = OnceState {\n+                        poisoned: state_and_queue == POISONED,\n+                        set_state_on_drop_to: Cell::new(COMPLETE),\n+                    };\n                     init(&init_state);\n                     waiter_queue.set_state_on_drop_to = init_state.set_state_on_drop_to.get();\n                     break;"}]}