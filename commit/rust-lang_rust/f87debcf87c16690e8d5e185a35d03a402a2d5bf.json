{"sha": "f87debcf87c16690e8d5e185a35d03a402a2d5bf", "node_id": "C_kwDOAAsO6NoAKGY4N2RlYmNmODdjMTY2OTBlOGQ1ZTE4NWEzNWQwM2E0MDJhMmQ1YmY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-14T10:56:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-14T10:56:08Z"}, "message": "Merge #10434\n\n10434: Allow `Locate parent module` command in Cargo.toml r=Veykril a=rainy-me\n\nclose #10355\n\nCo-authored-by: rainy-me <github@rainy.me>\nCo-authored-by: rainy-me <github@yue.coffee>", "tree": {"sha": "9961aee1029f5c23a0fcf8b0380bc124935fc831", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9961aee1029f5c23a0fcf8b0380bc124935fc831"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f87debcf87c16690e8d5e185a35d03a402a2d5bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhaAzICRBK7hj4Ov3rIwAAvrQIAKOfE2FFMkLHHMHdkgLI/Ub8\nMPKyMtiGFL5UB1MI2FGkU1Mn9sPHG4H2iwFtmFTdlqhvxjXUn4q56e27hXKjyWNe\n/j3tT7Syz9YijSuMN4EYZ0akaqRkbPcWR1720fRaj3s9zO1DRn/YFwSyRm9Evo18\nTtIhPwL/8HdO9c4JSkx7H+s/wD+uEUUrLrNyvExQGg9SBszBZ1PWxLXXkLukgUfU\nLzZBpNVA1fg1eV6/kqY5WE9+k6z9wgVUnaVbBFR0+h5RoLiEaElPTWLQXqz7Y/VX\nh3v/6nXATDBOMuH73h1O8vcpXIv3pa1CTTxRmAPmb4ZLTCElkaLuZgkjR520xSI=\n=Khle\n-----END PGP SIGNATURE-----\n", "payload": "tree 9961aee1029f5c23a0fcf8b0380bc124935fc831\nparent 641fa374edca00e33df51b05ffcbebbbef41cac5\nparent 59c755227d3f6903095cf03bce5e76b7747138ec\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1634208968 +0000\ncommitter GitHub <noreply@github.com> 1634208968 +0000\n\nMerge #10434\n\n10434: Allow `Locate parent module` command in Cargo.toml r=Veykril a=rainy-me\n\nclose #10355\n\nCo-authored-by: rainy-me <github@rainy.me>\nCo-authored-by: rainy-me <github@yue.coffee>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f87debcf87c16690e8d5e185a35d03a402a2d5bf", "html_url": "https://github.com/rust-lang/rust/commit/f87debcf87c16690e8d5e185a35d03a402a2d5bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f87debcf87c16690e8d5e185a35d03a402a2d5bf/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "641fa374edca00e33df51b05ffcbebbbef41cac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/641fa374edca00e33df51b05ffcbebbbef41cac5", "html_url": "https://github.com/rust-lang/rust/commit/641fa374edca00e33df51b05ffcbebbbef41cac5"}, {"sha": "59c755227d3f6903095cf03bce5e76b7747138ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/59c755227d3f6903095cf03bce5e76b7747138ec", "html_url": "https://github.com/rust-lang/rust/commit/59c755227d3f6903095cf03bce5e76b7747138ec"}], "stats": {"total": 117, "additions": 108, "deletions": 9}, "files": [{"sha": "a55901a8f7524046982902c16fd9a5e1e4687fb9", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f87debcf87c16690e8d5e185a35d03a402a2d5bf/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f87debcf87c16690e8d5e185a35d03a402a2d5bf/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=f87debcf87c16690e8d5e185a35d03a402a2d5bf", "patch": "@@ -1,6 +1,6 @@\n //! See [`CargoWorkspace`].\n \n-use std::convert::TryInto;\n+use std::convert::{TryFrom, TryInto};\n use std::iter;\n use std::path::PathBuf;\n use std::{ops, process::Command};\n@@ -400,6 +400,39 @@ impl CargoWorkspace {\n         }\n     }\n \n+    pub fn parent_manifests(&self, manifest_path: &ManifestPath) -> Option<Vec<ManifestPath>> {\n+        let mut found = false;\n+        let parent_manifests = self\n+            .packages()\n+            .filter_map(|pkg| {\n+                if !found && &self[pkg].manifest == manifest_path {\n+                    found = true\n+                }\n+                self[pkg].dependencies.iter().find_map(|dep| {\n+                    if &self[dep.pkg].manifest == manifest_path {\n+                        return Some(self[pkg].manifest.clone());\n+                    }\n+                    None\n+                })\n+            })\n+            .collect::<Vec<ManifestPath>>();\n+\n+        // some packages has this pkg as dep. return their manifests\n+        if parent_manifests.len() > 0 {\n+            return Some(parent_manifests);\n+        }\n+\n+        // this pkg is inside this cargo workspace, fallback to workspace root\n+        if found {\n+            return Some(vec![\n+                ManifestPath::try_from(self.workspace_root().join(\"Cargo.toml\")).ok()?\n+            ]);\n+        }\n+\n+        // not in this workspace\n+        None\n+    }\n+\n     fn is_unique(&self, name: &str) -> bool {\n         self.packages.iter().filter(|(_, v)| v.name == name).count() == 1\n     }"}, {"sha": "c8352660bcbe069d90aa78ee572f9f8c54f82df5", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 64, "deletions": 5, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/f87debcf87c16690e8d5e185a35d03a402a2d5bf/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f87debcf87c16690e8d5e185a35d03a402a2d5bf/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=f87debcf87c16690e8d5e185a35d03a402a2d5bf", "patch": "@@ -3,6 +3,7 @@\n //! `ide` crate.\n \n use std::{\n+    convert::TryFrom,\n     io::Write as _,\n     process::{self, Stdio},\n };\n@@ -20,15 +21,17 @@ use lsp_types::{\n     CallHierarchyIncomingCall, CallHierarchyIncomingCallsParams, CallHierarchyItem,\n     CallHierarchyOutgoingCall, CallHierarchyOutgoingCallsParams, CallHierarchyPrepareParams,\n     CodeLens, CompletionItem, Diagnostic, DiagnosticTag, DocumentFormattingParams, FoldingRange,\n-    FoldingRangeParams, HoverContents, Location, NumberOrString, Position, PrepareRenameResponse,\n-    Range, RenameParams, SemanticTokensDeltaParams, SemanticTokensFullDeltaResult,\n-    SemanticTokensParams, SemanticTokensRangeParams, SemanticTokensRangeResult,\n-    SemanticTokensResult, SymbolInformation, SymbolTag, TextDocumentIdentifier, Url, WorkspaceEdit,\n+    FoldingRangeParams, HoverContents, Location, LocationLink, NumberOrString, Position,\n+    PrepareRenameResponse, Range, RenameParams, SemanticTokensDeltaParams,\n+    SemanticTokensFullDeltaResult, SemanticTokensParams, SemanticTokensRangeParams,\n+    SemanticTokensRangeResult, SemanticTokensResult, SymbolInformation, SymbolTag,\n+    TextDocumentIdentifier, Url, WorkspaceEdit,\n };\n-use project_model::TargetKind;\n+use project_model::{ManifestPath, ProjectWorkspace, TargetKind};\n use serde_json::json;\n use stdx::{format_to, never};\n use syntax::{algo, ast, AstNode, TextRange, TextSize, T};\n+use vfs::AbsPathBuf;\n \n use crate::{\n     cargo_target_spec::CargoTargetSpec,\n@@ -601,6 +604,62 @@ pub(crate) fn handle_parent_module(\n     params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Option<lsp_types::GotoDefinitionResponse>> {\n     let _p = profile::span(\"handle_parent_module\");\n+    if let Ok(file_path) = &params.text_document.uri.to_file_path() {\n+        if file_path.file_name().unwrap_or_default() == \"Cargo.toml\" {\n+            // search workspaces for parent packages or fallback to workspace root\n+            let abs_path_buf = match AbsPathBuf::try_from(file_path.to_path_buf()).ok() {\n+                Some(abs_path_buf) => abs_path_buf,\n+                None => return Ok(None),\n+            };\n+\n+            let manifest_path = match ManifestPath::try_from(abs_path_buf).ok() {\n+                Some(manifest_path) => manifest_path,\n+                None => return Ok(None),\n+            };\n+\n+            let links: Vec<LocationLink> = snap\n+                .workspaces\n+                .iter()\n+                .filter_map(|ws| match ws {\n+                    ProjectWorkspace::Cargo { cargo, .. } => cargo.parent_manifests(&manifest_path),\n+                    _ => None,\n+                })\n+                .flatten()\n+                .map(|parent_manifest_path| LocationLink {\n+                    origin_selection_range: None,\n+                    target_uri: to_proto::url_from_abs_path(&parent_manifest_path),\n+                    target_range: Range::default(),\n+                    target_selection_range: Range::default(),\n+                })\n+                .collect::<_>();\n+            return Ok(Some(links.into()));\n+        }\n+\n+        // check if invoked at the crate root\n+        let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n+        let crate_id = match snap.analysis.crate_for(file_id)?.first() {\n+            Some(&crate_id) => crate_id,\n+            None => return Ok(None),\n+        };\n+        let cargo_spec = match CargoTargetSpec::for_file(&snap, file_id)? {\n+            Some(it) => it,\n+            None => return Ok(None),\n+        };\n+\n+        if snap.analysis.crate_root(crate_id)? == file_id {\n+            let cargo_toml_url = to_proto::url_from_abs_path(&cargo_spec.cargo_toml);\n+            let res = vec![LocationLink {\n+                origin_selection_range: None,\n+                target_uri: cargo_toml_url,\n+                target_range: Range::default(),\n+                target_selection_range: Range::default(),\n+            }]\n+            .into();\n+            return Ok(Some(res));\n+        }\n+    }\n+\n+    // locate parent module by semantics\n     let position = from_proto::file_position(&snap, params)?;\n     let navs = snap.analysis.parent_module(position)?;\n     let res = to_proto::goto_definition_response(&snap, None, navs)?;"}, {"sha": "c9385361f88c9eabc203aa0cfb45848940608238", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f87debcf87c16690e8d5e185a35d03a402a2d5bf/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f87debcf87c16690e8d5e185a35d03a402a2d5bf/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=f87debcf87c16690e8d5e185a35d03a402a2d5bf", "patch": "@@ -8,7 +8,7 @@ import { applySnippetWorkspaceEdit, applySnippetTextEdits } from './snippets';\n import { spawnSync } from 'child_process';\n import { RunnableQuickPick, selectRunnable, createTask, createArgs } from './run';\n import { AstInspector } from './ast_inspector';\n-import { isRustDocument, sleep, isRustEditor } from './util';\n+import { isRustDocument, isCargoTomlDocument, sleep, isRustEditor } from './util';\n import { startDebugSession, makeDebugConfig } from './debug';\n import { LanguageClient } from 'vscode-languageclient/node';\n \n@@ -185,16 +185,18 @@ export function onEnter(ctx: Ctx): Cmd {\n \n export function parentModule(ctx: Ctx): Cmd {\n     return async () => {\n-        const editor = ctx.activeRustEditor;\n+        const editor = vscode.window.activeTextEditor;\n         const client = ctx.client;\n         if (!editor || !client) return;\n+        if (!(isRustDocument(editor.document) || isCargoTomlDocument(editor.document))) return;\n \n         const locations = await client.sendRequest(ra.parentModule, {\n             textDocument: ctx.client.code2ProtocolConverter.asTextDocumentIdentifier(editor.document),\n             position: client.code2ProtocolConverter.asPosition(\n                 editor.selection.active,\n             ),\n         });\n+        if (!locations) return;\n \n         if (locations.length === 1) {\n             const loc = locations[0];"}, {"sha": "90796e611e69e48d3e1f8511efc9c523a3d93018", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f87debcf87c16690e8d5e185a35d03a402a2d5bf/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f87debcf87c16690e8d5e185a35d03a402a2d5bf/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=f87debcf87c16690e8d5e185a35d03a402a2d5bf", "patch": "@@ -62,7 +62,7 @@ export interface MatchingBraceParams {\n }\n export const matchingBrace = new lc.RequestType<MatchingBraceParams, lc.Position[], void>(\"experimental/matchingBrace\");\n \n-export const parentModule = new lc.RequestType<lc.TextDocumentPositionParams, lc.LocationLink[], void>(\"experimental/parentModule\");\n+export const parentModule = new lc.RequestType<lc.TextDocumentPositionParams, lc.LocationLink[] | null, void>(\"experimental/parentModule\");\n \n export interface JoinLinesParams {\n     textDocument: lc.TextDocumentIdentifier;"}, {"sha": "057a3d2e1949b566e6596232056e77fce7b973cb", "filename": "editors/code/src/util.ts", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f87debcf87c16690e8d5e185a35d03a402a2d5bf/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f87debcf87c16690e8d5e185a35d03a402a2d5bf/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=f87debcf87c16690e8d5e185a35d03a402a2d5bf", "patch": "@@ -104,6 +104,11 @@ export function isRustDocument(document: vscode.TextDocument): document is RustD\n     return document.languageId === 'rust' && document.uri.scheme === 'file';\n }\n \n+export function isCargoTomlDocument(document: vscode.TextDocument): document is RustDocument {\n+    // ideally `document.languageId` should be 'toml' but user maybe not have toml extension installed\n+    return document.uri.scheme === 'file' && document.fileName.endsWith('Cargo.toml');\n+}\n+\n export function isRustEditor(editor: vscode.TextEditor): editor is RustEditor {\n     return isRustDocument(editor.document);\n }"}]}