{"sha": "5fbdf57c4fe7ee99ba94549766a2644431f61b26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYmRmNTdjNGZlN2VlOTliYTk0NTQ5NzY2YTI2NDQ0MzFmNjFiMjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-09T20:21:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-09T20:21:27Z"}, "message": "Merge #1800\n\n1800: make all traits non-enumerable r=flodiebold a=nikomatsakis\n\nAs discussed on Zulip, this actually matches the present behavior of rustc.\r\n\r\nr? @flodiebold \n\nCo-authored-by: Niko Matsakis <niko@alum.mit.edu>", "tree": {"sha": "97eb439759494abecc9587a0473b9dc2e39b3a5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97eb439759494abecc9587a0473b9dc2e39b3a5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fbdf57c4fe7ee99ba94549766a2644431f61b26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJddrRHCRBK7hj4Ov3rIwAAdHIIAGz5ipK156F3MlpUhmRUTYgv\nbawfHKOazChGjJmoMA84FyisLfCP4iBKw3a3pAtl3wdo0Ex441I3b+1x47YAvgJP\nciXgFnclulnqKzyS3emlfXe8mABZNGUQk6NOBaD3lEktWpBuCSVqPwCmJAp7gTH3\nM/hsbq6cvR6befE9AV5Sx20ZafPAz9PfGkmm7cvg9t1i7FZN2g06JQqSYjOTQtnb\nrJFp+fcPGgaA4AKJHT2+ag4B4PPzMRdEpFhnbwvxyQbYw4Ky/AOogyEm4+Bh90Gq\nyv6UaGJSilpRMeu4WO13PtnVXc4jQz1jVC713vrbG6V49qiWYULFSLLjG/EkgLo=\n=9Uag\n-----END PGP SIGNATURE-----\n", "payload": "tree 97eb439759494abecc9587a0473b9dc2e39b3a5b\nparent 8316193647f256d3e623d3a86a503298aab91b8f\nparent 85fdf57dbd2cacba6320b55ef1cd57f7795c8ea5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568060487 +0000\ncommitter GitHub <noreply@github.com> 1568060487 +0000\n\nMerge #1800\n\n1800: make all traits non-enumerable r=flodiebold a=nikomatsakis\n\nAs discussed on Zulip, this actually matches the present behavior of rustc.\r\n\r\nr? @flodiebold \n\nCo-authored-by: Niko Matsakis <niko@alum.mit.edu>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fbdf57c4fe7ee99ba94549766a2644431f61b26", "html_url": "https://github.com/rust-lang/rust/commit/5fbdf57c4fe7ee99ba94549766a2644431f61b26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fbdf57c4fe7ee99ba94549766a2644431f61b26/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8316193647f256d3e623d3a86a503298aab91b8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8316193647f256d3e623d3a86a503298aab91b8f", "html_url": "https://github.com/rust-lang/rust/commit/8316193647f256d3e623d3a86a503298aab91b8f"}, {"sha": "85fdf57dbd2cacba6320b55ef1cd57f7795c8ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/85fdf57dbd2cacba6320b55ef1cd57f7795c8ea5", "html_url": "https://github.com/rust-lang/rust/commit/85fdf57dbd2cacba6320b55ef1cd57f7795c8ea5"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "2c7d94bce24a18b44677c2f8460979194841b676", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5fbdf57c4fe7ee99ba94549766a2644431f61b26/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbdf57c4fe7ee99ba94549766a2644431f61b26/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=5fbdf57c4fe7ee99ba94549766a2644431f61b26", "patch": "@@ -3007,7 +3007,7 @@ impl<T, U> Into<U> for T where U: From<T> {}\n fn test() { S2.into()<|>; }\n \"#,\n     );\n-    assert_eq!(t, \"S1\");\n+    assert_eq!(t, \"{unknown}\");\n }\n \n #[test]\n@@ -3024,7 +3024,7 @@ impl<T, U: From<T>> Into<U> for T {}\n fn test() { S2.into()<|>; }\n \"#,\n     );\n-    assert_eq!(t, \"S1\");\n+    assert_eq!(t, \"{unknown}\");\n }\n \n #[test]\n@@ -3066,7 +3066,7 @@ impl<B, C> Trait for S<B, C> where C: FnX, B: SendX {}\n fn test() { (S {}).method()<|>; }\n \"#,\n     );\n-    assert_eq!(t, \"{unknown}\");\n+    assert_eq!(t, \"()\");\n }\n \n #[test]\n@@ -3546,11 +3546,11 @@ fn test(x: Trait, y: &Trait) -> u64 {\n     [129; 132) 'bar': fn bar() -> {unknown}\n     [129; 134) 'bar()': {unknown}\n     [140; 141) 'x': {unknown}\n-    [140; 147) 'x.foo()': {unknown}\n+    [140; 147) 'x.foo()': u64\n     [153; 154) 'y': &{unknown}\n-    [153; 160) 'y.foo()': {unknown}\n+    [153; 160) 'y.foo()': u64\n     [166; 167) 'z': {unknown}\n-    [166; 173) 'z.foo()': {unknown}\n+    [166; 173) 'z.foo()': u64\n     \"###\n     );\n }"}, {"sha": "0367c65609327c7cfd82a9429c7e46279294a7e0", "filename": "crates/ra_hir/src/ty/traits/chalk.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5fbdf57c4fe7ee99ba94549766a2644431f61b26/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbdf57c4fe7ee99ba94549766a2644431f61b26/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs?ref=5fbdf57c4fe7ee99ba94549766a2644431f61b26", "patch": "@@ -356,14 +356,6 @@ fn make_binders<T>(value: T, num_vars: usize) -> chalk_ir::Binders<T> {\n     }\n }\n \n-fn is_non_enumerable_trait(db: &impl HirDatabase, trait_: Trait) -> bool {\n-    let name = trait_.name(db).unwrap_or_else(crate::Name::missing).to_string();\n-    match &*name {\n-        \"Sized\" => true,\n-        _ => false,\n-    }\n-}\n-\n fn convert_where_clauses(\n     db: &impl HirDatabase,\n     def: GenericDef,\n@@ -486,7 +478,7 @@ pub(crate) fn trait_datum_query(\n             associated_ty_ids: Vec::new(),\n             where_clauses: Vec::new(),\n             flags: chalk_rust_ir::TraitFlags {\n-                non_enumerable: false,\n+                non_enumerable: true,\n                 auto: false,\n                 marker: false,\n                 upstream: true,\n@@ -503,7 +495,7 @@ pub(crate) fn trait_datum_query(\n     let flags = chalk_rust_ir::TraitFlags {\n         auto: trait_.is_auto(db),\n         upstream: trait_.module(db).krate(db) != Some(krate),\n-        non_enumerable: is_non_enumerable_trait(db, trait_),\n+        non_enumerable: true,\n         // FIXME set these flags correctly\n         marker: false,\n         fundamental: false,"}]}