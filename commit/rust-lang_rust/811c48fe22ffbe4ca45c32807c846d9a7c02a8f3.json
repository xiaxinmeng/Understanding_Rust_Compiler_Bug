{"sha": "811c48fe22ffbe4ca45c32807c846d9a7c02a8f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMWM0OGZlMjJmZmJlNGNhNDVjMzI4MDdjODQ2ZDlhN2MwMmE4ZjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T19:13:38Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T20:08:40Z"}, "message": "For now, accept the `i`, `u`, `is`, and `us` suffixes, but warn when\nthey are used without a feature-gate. This is both kinder to existing\ncode and should make it easier to land this PR, since we don't\nhave to catch EVERY SINGLE SUFFIX.", "tree": {"sha": "57ae57975750ae6674ed286857dd457f1ac99530", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57ae57975750ae6674ed286857dd457f1ac99530"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3", "html_url": "https://github.com/rust-lang/rust/commit/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "362d71302615b07c96189e998a554e90d3f3506c", "url": "https://api.github.com/repos/rust-lang/rust/commits/362d71302615b07c96189e998a554e90d3f3506c", "html_url": "https://github.com/rust-lang/rust/commit/362d71302615b07c96189e998a554e90d3f3506c"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "0110823ae98c1df2ffa9fc69437d55e09d7cd88d", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=811c48fe22ffbe4ca45c32807c846d9a7c02a8f3", "patch": "@@ -588,11 +588,11 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                 match lit.node {\n                     ast::LitInt(_, ty) => {\n                         let msg = if let ast::SignedIntLit(ast::TyIs(true), _) = ty {\n-                            Some(\"the `i` suffix on integers is deprecated; use `is` \\\n-                                  or one of the fixed-sized suffixes\")\n+                            Some(\"the `i` and `is` suffixes on integers are deprecated; \\\n+                                  use `isize` or one of the fixed-sized suffixes\")\n                         } else if let ast::UnsignedIntLit(ast::TyUs(true)) = ty {\n-                            Some(\"the `u` suffix on integers is deprecated; use `us` \\\n-                                 or one of the fixed-sized suffixes\")\n+                            Some(\"the `u` and `us` suffixes on integers are deprecated; \\\n+                                  use `usize` or one of the fixed-sized suffixes\")\n                         } else {\n                             None\n                         };"}, {"sha": "6ea23cf3f04a5791410a1cc54fdcfa8dd90c84ce", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=811c48fe22ffbe4ca45c32807c846d9a7c02a8f3", "patch": "@@ -711,6 +711,8 @@ pub fn integer_lit(s: &str, suffix: Option<&str>, sd: &SpanHandler, sp: Span) ->\n             \"u16\" => ast::UnsignedIntLit(ast::TyU16),\n             \"u32\" => ast::UnsignedIntLit(ast::TyU32),\n             \"u64\" => ast::UnsignedIntLit(ast::TyU64),\n+            \"i\" | \"is\" => ast::SignedIntLit(ast::TyIs(true), ast::Plus),\n+            \"u\" | \"us\" => ast::UnsignedIntLit(ast::TyUs(true)),\n             _ => {\n                 // i<digits> and u<digits> look like widths, so lets\n                 // give an error message along those lines\n@@ -720,17 +722,8 @@ pub fn integer_lit(s: &str, suffix: Option<&str>, sd: &SpanHandler, sp: Span) ->\n                                               &suf[1..]));\n                 } else {\n                     sd.span_err(sp, &*format!(\"illegal suffix `{}` for numeric literal\", suf));\n-\n-                    if suf == \"i\" || suf == \"is\" {\n-                        sd.span_help(sp, \"per RFC 544/573, the suffix \\\n-                                          for `isize` literals is now `isize`\");\n-                    } else if suf == \"u\" || suf == \"us\" {\n-                        sd.span_help(sp, \"per RFC 544/573, the suffix \\\n-                                          for `usize` literals is now `usize`\");\n-                    } else {\n-                        sd.span_help(sp, \"the suffix must be one of the integral types \\\n-                                          (`u32`, `isize`, etc)\");\n-                    }\n+                    sd.span_help(sp, \"the suffix must be one of the integral types \\\n+                                      (`u32`, `isize`, etc)\");\n                 }\n \n                 ty"}, {"sha": "948e485ccf5148effb18b51c60ee5f2f08f2c3dc", "filename": "src/test/compile-fail/feature-gate-int-uint.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-int-uint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811c48fe22ffbe4ca45c32807c846d9a7c02a8f3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-int-uint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-int-uint.rs?ref=811c48fe22ffbe4ca45c32807c846d9a7c02a8f3", "patch": "@@ -8,15 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(dead_code)]\n+#![allow(dead_code, unused_variables)]\n+#![feature(rustc_attrs)]\n \n mod u {\n     type X = uint; //~ WARN the `uint` type is deprecated\n     struct Foo {\n         x: uint //~ WARN the `uint` type is deprecated\n     }\n     fn bar(x: uint) { //~ WARN the `uint` type is deprecated\n-        1_usize;\n+        1_u; //~ WARN the `u` and `us` suffixes on integers are deprecated\n+        1_us; //~ WARN the `u` and `us` suffixes on integers are deprecated\n     }\n }\n mod i {\n@@ -25,11 +27,11 @@ mod i {\n         x: int //~ WARN the `int` type is deprecated\n     }\n     fn bar(x: int) { //~ WARN the `int` type is deprecated\n-        1_isize;\n+        1_i; //~ WARN the `i` and `is` suffixes on integers are deprecated\n+        1_is; //~ WARN the `i` and `is` suffixes on integers are deprecated\n     }\n }\n \n-fn main() {\n-    // make compilation fail, after feature gating\n-    let () = 1u8; //~ ERROR\n+#[rustc_error]\n+fn main() { //~ ERROR compilation successful\n }"}]}