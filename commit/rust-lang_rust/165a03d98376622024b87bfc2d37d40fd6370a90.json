{"sha": "165a03d98376622024b87bfc2d37d40fd6370a90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NWEwM2Q5ODM3NjYyMjAyNGI4N2JmYzJkMzdkNDBmZDYzNzBhOTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-05T02:51:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-05T02:51:08Z"}, "message": "Auto merge of #36942 - arielb1:cast-lifetimes, r=eddyb\n\nstop having identity casts be lexprs\n\nthat made no sense (see test), and was incompatible with borrowck.\n\nFixes #36936.\n\nbeta-nominated since (bad) regression.\n\nr? @eddyb", "tree": {"sha": "b81d12f4f70b4a8068937a0c06551e41ec66afd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b81d12f4f70b4a8068937a0c06551e41ec66afd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/165a03d98376622024b87bfc2d37d40fd6370a90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/165a03d98376622024b87bfc2d37d40fd6370a90", "html_url": "https://github.com/rust-lang/rust/commit/165a03d98376622024b87bfc2d37d40fd6370a90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/165a03d98376622024b87bfc2d37d40fd6370a90/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd065a838180aaf00cbeca46c9529a0e22747fc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd065a838180aaf00cbeca46c9529a0e22747fc1", "html_url": "https://github.com/rust-lang/rust/commit/fd065a838180aaf00cbeca46c9529a0e22747fc1"}, {"sha": "c2a0859b3e589ec551b4d581fc0900e458bf6b6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a0859b3e589ec551b4d581fc0900e458bf6b6b", "html_url": "https://github.com/rust-lang/rust/commit/c2a0859b3e589ec551b4d581fc0900e458bf6b6b"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "118b23cf987e5b813b7f25e154ba0ae57da91052", "filename": "src/librustc_mir/build/expr/as_lvalue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_lvalue.rs?ref=165a03d98376622024b87bfc2d37d40fd6370a90", "patch": "@@ -96,6 +96,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             ExprKind::LogicalOp { .. } |\n             ExprKind::Box { .. } |\n             ExprKind::Cast { .. } |\n+            ExprKind::Use { .. } |\n             ExprKind::NeverToAny { .. } |\n             ExprKind::ReifyFnPointer { .. } |\n             ExprKind::UnsafeFnPointer { .. } |"}, {"sha": "9b7f3468c19e5f9e7eaaae6cbf291f7188404ab1", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=165a03d98376622024b87bfc2d37d40fd6370a90", "patch": "@@ -115,6 +115,10 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 let source = unpack!(block = this.as_operand(block, source));\n                 block.and(Rvalue::Cast(CastKind::Misc, source, expr.ty))\n             }\n+            ExprKind::Use { source } => {\n+                let source = unpack!(block = this.as_operand(block, source));\n+                block.and(Rvalue::Use(source))\n+            }\n             ExprKind::ReifyFnPointer { source } => {\n                 let source = unpack!(block = this.as_operand(block, source));\n                 block.and(Rvalue::Cast(CastKind::ReifyFnPointer, source, expr.ty))"}, {"sha": "9671f80f48ba737e9ab888d16e8dd9242b44029e", "filename": "src/librustc_mir/build/expr/category.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fcategory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fcategory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fcategory.rs?ref=165a03d98376622024b87bfc2d37d40fd6370a90", "patch": "@@ -68,6 +68,7 @@ impl Category {\n             ExprKind::Binary { .. } |\n             ExprKind::Box { .. } |\n             ExprKind::Cast { .. } |\n+            ExprKind::Use { .. } |\n             ExprKind::ReifyFnPointer { .. } |\n             ExprKind::UnsafeFnPointer { .. } |\n             ExprKind::Unsize { .. } |"}, {"sha": "58265b5b0d36ba09c793fe9992e2365a0ec684d6", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=165a03d98376622024b87bfc2d37d40fd6370a90", "patch": "@@ -249,6 +249,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             ExprKind::Binary { .. } |\n             ExprKind::Box { .. } |\n             ExprKind::Cast { .. } |\n+            ExprKind::Use { .. } |\n             ExprKind::ReifyFnPointer { .. } |\n             ExprKind::UnsafeFnPointer { .. } |\n             ExprKind::Unsize { .. } |"}, {"sha": "f23c9d3caf096de2f9bb6f0fb6c6dbacf0fce28d", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=165a03d98376622024b87bfc2d37d40fd6370a90", "patch": "@@ -600,8 +600,8 @@ fn make_mirror_unadjusted<'a, 'gcx, 'tcx>(cx: &mut Cx<'a, 'gcx, 'tcx>,\n             // Check to see if this cast is a \"coercion cast\", where the cast is actually done\n             // using a coercion (or is a no-op).\n             if let Some(&TyCastKind::CoercionCast) = cx.tcx.cast_kinds.borrow().get(&source.id) {\n-                // Skip the actual cast itexpr, as it's now a no-op.\n-                return source.make_mirror(cx);\n+                // Convert the lexpr to a vexpr.\n+                ExprKind::Use { source: source.to_ref() }\n             } else {\n                 ExprKind::Cast { source: source.to_ref() }\n             }"}, {"sha": "59137e2bcd78fd2d9d55b7c408f71859c58c84e2", "filename": "src/librustc_mir/hair/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fmod.rs?ref=165a03d98376622024b87bfc2d37d40fd6370a90", "patch": "@@ -139,6 +139,9 @@ pub enum ExprKind<'tcx> {\n     Cast {\n         source: ExprRef<'tcx>,\n     },\n+    Use {\n+        source: ExprRef<'tcx>,\n+    }, // Use a lexpr to get a vexpr.\n     NeverToAny {\n         source: ExprRef<'tcx>,\n     },"}, {"sha": "34a9c2916683f07dbea655dd7f4700114b0892ef", "filename": "src/test/run-pass/issue-36936.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Ftest%2Frun-pass%2Fissue-36936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165a03d98376622024b87bfc2d37d40fd6370a90/src%2Ftest%2Frun-pass%2Fissue-36936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-36936.rs?ref=165a03d98376622024b87bfc2d37d40fd6370a90", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// check that casts are not being treated as lexprs.\n+\n+fn main() {\n+    let mut a = 0i32;\n+    let b = &(a as i32);\n+    a = 1;\n+    assert_ne!(&a as *const i32, b as *const i32);\n+    assert_eq!(*b, 0);\n+\n+    assert_eq!(issue_36936(), 1);\n+}\n+\n+\n+struct A(u32);\n+\n+impl Drop for A {\n+    fn drop(&mut self) {\n+        self.0 = 0;\n+    }\n+}\n+\n+fn issue_36936() -> u32 {\n+    let a = &(A(1) as A);\n+    a.0\n+}"}]}