{"sha": "42000c6cf9e229092076501aacd868d18a707e93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMDAwYzZjZjllMjI5MDkyMDc2NTAxYWFjZDg2OGQxOGE3MDdlOTM=", "commit": {"author": {"name": "Alex Butler", "email": "alexheretic@gmail.com", "date": "2018-03-01T15:15:41Z"}, "committer": {"name": "Alex Butler", "email": "alexheretic@gmail.com", "date": "2018-03-01T15:26:39Z"}, "message": "Fix #2494 add suggestion for unreadable_literal\n\nAdd `rustc --explain E0308` line to relevant tests", "tree": {"sha": "f140179aac10385db4e02b38e7655b7b6792dbd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f140179aac10385db4e02b38e7655b7b6792dbd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42000c6cf9e229092076501aacd868d18a707e93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJKBAABCAA0FiEEHSaYhBqUOsW1O/YE4TVaL45BVSEFAlqYG68WHGFsZXhoZXJl\ndGljQGdtYWlsLmNvbQAKCRDhNVovjkFVIZgND/40ln6wRr0iLH5g2muMWXn+J4hE\nA4vwOYtlkJOPANv/B1ZFJL4+2yy8w3QaZ5YKORNuQOndy/PRiP5qx/mHShJ8tptP\nuX3NKV0zicGoc9uQpotQzVJM9AyaX3UeAQZSU6gC+RW/yWWERh1GCRupJ5Ttb4g2\nzNIkBsQMtqLbT/dKcDfKxqxd/Pdi0A0EZa7OJx4D6mWlvsnjFAb/huSW6HmBpc7H\nYp7pJ9/nTqZyap/gDKMZ2pbrM4Lw9Wv9Bk/VG6f0KAiX6IE1eZsMr+iV4+hmrIHT\nRrTe6j7pbkG4kLF9NDo5hVVg17e7spJ7/XAQGZqMLYGj+Pfp3CyL4HyKnmmx/a5f\nX8Dhny02hlRnWVVmhhaO/RcM40UY1Ejg+HYrUlYp0TbU1totLiSzZd50pbqSZfl4\nvhEFGgNgnQE+5UDMe6ne5YL7+WnBCJTCIbLDwIus4qnzwQbzzCuyWMfx12LFoBnt\nF+NoDNIJecgJbpphStd6MGQ/A8junQcTAXOgBKkxQsZ9emrhAt36k1jIsQxLf1BU\ndLiVZ7led+C2cDkvisqaquvFfoVbQU+7kXNXiAOAF9JvIqi/on+NRWtej0LqW9L+\niQ6eFz3lWchfq1h4Y54w562iTRTzrMdNbCYkMQVY+AKTXkmxiPKC8SrqPyPfSga0\nJAqNvtTrTv0+u8ZUdg==\n=DKuD\n-----END PGP SIGNATURE-----", "payload": "tree f140179aac10385db4e02b38e7655b7b6792dbd5\nparent adb8f7ee4b9d19ab8cb2aeb4fcd09b8360f854fb\nauthor Alex Butler <alexheretic@gmail.com> 1519917341 +0000\ncommitter Alex Butler <alexheretic@gmail.com> 1519917999 +0000\n\nFix #2494 add suggestion for unreadable_literal\n\nAdd `rustc --explain E0308` line to relevant tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42000c6cf9e229092076501aacd868d18a707e93", "html_url": "https://github.com/rust-lang/rust/commit/42000c6cf9e229092076501aacd868d18a707e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42000c6cf9e229092076501aacd868d18a707e93/comments", "author": {"login": "alexheretic", "id": 2331607, "node_id": "MDQ6VXNlcjIzMzE2MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2331607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexheretic", "html_url": "https://github.com/alexheretic", "followers_url": "https://api.github.com/users/alexheretic/followers", "following_url": "https://api.github.com/users/alexheretic/following{/other_user}", "gists_url": "https://api.github.com/users/alexheretic/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexheretic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexheretic/subscriptions", "organizations_url": "https://api.github.com/users/alexheretic/orgs", "repos_url": "https://api.github.com/users/alexheretic/repos", "events_url": "https://api.github.com/users/alexheretic/events{/privacy}", "received_events_url": "https://api.github.com/users/alexheretic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexheretic", "id": 2331607, "node_id": "MDQ6VXNlcjIzMzE2MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2331607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexheretic", "html_url": "https://github.com/alexheretic", "followers_url": "https://api.github.com/users/alexheretic/followers", "following_url": "https://api.github.com/users/alexheretic/following{/other_user}", "gists_url": "https://api.github.com/users/alexheretic/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexheretic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexheretic/subscriptions", "organizations_url": "https://api.github.com/users/alexheretic/orgs", "repos_url": "https://api.github.com/users/alexheretic/repos", "events_url": "https://api.github.com/users/alexheretic/events{/privacy}", "received_events_url": "https://api.github.com/users/alexheretic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adb8f7ee4b9d19ab8cb2aeb4fcd09b8360f854fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/adb8f7ee4b9d19ab8cb2aeb4fcd09b8360f854fb", "html_url": "https://github.com/rust-lang/rust/commit/adb8f7ee4b9d19ab8cb2aeb4fcd09b8360f854fb"}], "stats": {"total": 105, "additions": 40, "deletions": 65}, "files": [{"sha": "1b93f6bf3f49ccbc51d0f6cb0f8da90cd5faa173", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -4,7 +4,7 @@\n use rustc::lint::*;\n use syntax::ast::*;\n use syntax_pos;\n-use utils::{in_external_macro, snippet_opt, span_help_and_lint};\n+use utils::{in_external_macro, snippet_opt, span_lint_and_sugg};\n \n /// **What it does:** Warns if a long integral or floating-point constant does\n /// not contain underscores.\n@@ -222,33 +222,37 @@ enum WarningType {\n impl WarningType {\n     pub fn display(&self, grouping_hint: &str, cx: &EarlyContext, span: &syntax_pos::Span) {\n         match *self {\n-            WarningType::UnreadableLiteral => span_help_and_lint(\n+            WarningType::UnreadableLiteral => span_lint_and_sugg(\n                 cx,\n                 UNREADABLE_LITERAL,\n                 *span,\n                 \"long literal lacking separators\",\n-                &format!(\"consider: {}\", grouping_hint),\n+                \"consider\",\n+                grouping_hint.to_owned(),\n             ),\n-            WarningType::LargeDigitGroups => span_help_and_lint(\n+            WarningType::LargeDigitGroups => span_lint_and_sugg(\n                 cx,\n                 LARGE_DIGIT_GROUPS,\n                 *span,\n                 \"digit groups should be smaller\",\n-                &format!(\"consider: {}\", grouping_hint),\n+                \"consider\",\n+                grouping_hint.to_owned(),\n             ),\n-            WarningType::InconsistentDigitGrouping => span_help_and_lint(\n+            WarningType::InconsistentDigitGrouping => span_lint_and_sugg(\n                 cx,\n                 INCONSISTENT_DIGIT_GROUPING,\n                 *span,\n                 \"digits grouped inconsistently by underscores\",\n-                &format!(\"consider: {}\", grouping_hint),\n+                \"consider\",\n+                grouping_hint.to_owned(),\n             ),\n-            WarningType::DecimalRepresentation => span_help_and_lint(\n+            WarningType::DecimalRepresentation => span_lint_and_sugg(\n                 cx,\n                 DECIMAL_LITERAL_REPRESENTATION,\n                 *span,\n                 \"integer literal has a better hexadecimal representation\",\n-                &format!(\"consider: {}\", grouping_hint),\n+                \"consider\",\n+                grouping_hint.to_owned(),\n             ),\n         };\n     }"}, {"sha": "85595fb0233aa6e36d206304872fa05d2f69925a", "filename": "tests/ui/builtin-type-shadow.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fbuiltin-type-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fbuiltin-type-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -19,3 +19,4 @@ error[E0308]: mismatched types\n \n error: aborting due to 2 previous errors\n \n+If you want more information on this error, try using \"rustc --explain E0308\""}, {"sha": "30a87e23275038dac8721c497666a5ee91c1f364", "filename": "tests/ui/conf_bad_arg.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_bad_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_bad_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_arg.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -8,3 +8,4 @@ error[E0658]: compiler plugins are experimental and possibly buggy (see issue #2\n \n error: aborting due to previous error\n \n+If you want more information on this error, try using \"rustc --explain E0658\""}, {"sha": "f01b5605a5197c808921dc140b28e21aa275da38", "filename": "tests/ui/conf_bad_toml.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_bad_toml.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_bad_toml.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_toml.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -8,3 +8,4 @@ error[E0658]: compiler plugins are experimental and possibly buggy (see issue #2\n \n error: aborting due to previous error\n \n+If you want more information on this error, try using \"rustc --explain E0658\""}, {"sha": "ea9cf0acdd8d588f42af6ace5e0b191a25e5d523", "filename": "tests/ui/conf_bad_type.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_bad_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_bad_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_type.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -8,3 +8,4 @@ error[E0658]: compiler plugins are experimental and possibly buggy (see issue #2\n \n error: aborting due to previous error\n \n+If you want more information on this error, try using \"rustc --explain E0658\""}, {"sha": "d09ae43301c8a44219d1e026432c9ece52fae826", "filename": "tests/ui/conf_french_blacklisted_name.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_french_blacklisted_name.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -8,3 +8,4 @@ error[E0658]: compiler plugins are experimental and possibly buggy (see issue #2\n \n error: aborting due to previous error\n \n+If you want more information on this error, try using \"rustc --explain E0658\""}, {"sha": "6af3b595921fa5a88e9dcfa9e7de8591151c4d53", "filename": "tests/ui/conf_path_non_string.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_path_non_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_path_non_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_path_non_string.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -8,3 +8,4 @@ error[E0658]: compiler plugins are experimental and possibly buggy (see issue #2\n \n error: aborting due to previous error\n \n+If you want more information on this error, try using \"rustc --explain E0658\""}, {"sha": "80a60bd8f2e6c531b37ea5c32b9a6e91b73f8ee4", "filename": "tests/ui/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_unknown_key.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -8,3 +8,4 @@ error[E0658]: compiler plugins are experimental and possibly buggy (see issue #2\n \n error: aborting due to previous error\n \n+If you want more information on this error, try using \"rustc --explain E0658\""}, {"sha": "baed3c41180ce0758c8b4deba5626fbc0caaa603", "filename": "tests/ui/decimal_literal_representation.stderr", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fdecimal_literal_representation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Fdecimal_literal_representation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -2,42 +2,33 @@ error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:18:9\n    |\n 18 |         32_773,        // 0x8005\n-   |         ^^^^^^\n+   |         ^^^^^^ help: consider: `0x8005`\n    |\n    = note: `-D decimal-literal-representation` implied by `-D warnings`\n-   = help: consider: 0x8005\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:19:9\n    |\n 19 |         65_280,        // 0xFF00\n-   |         ^^^^^^\n-   |\n-   = help: consider: 0xFF00\n+   |         ^^^^^^ help: consider: `0xFF00`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:20:9\n    |\n 20 |         2_131_750_927, // 0x7F0F_F00F\n-   |         ^^^^^^^^^^^^^\n-   |\n-   = help: consider: 0x7F0F_F00F\n+   |         ^^^^^^^^^^^^^ help: consider: `0x7F0F_F00F`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:21:9\n    |\n 21 |         2_147_483_647, // 0x7FFF_FFFF\n-   |         ^^^^^^^^^^^^^\n-   |\n-   = help: consider: 0x7FFF_FFFF\n+   |         ^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:22:9\n    |\n 22 |         4_042_322_160, // 0xF0F0_F0F0\n-   |         ^^^^^^^^^^^^^\n-   |\n-   = help: consider: 0xF0F0_F0F0\n+   |         ^^^^^^^^^^^^^ help: consider: `0xF0F0_F0F0`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "4d30529d820af40d2330e22a3578427b5695200d", "filename": "tests/ui/inconsistent_digit_grouping.stderr", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -2,42 +2,33 @@ error: digits grouped inconsistently by underscores\n  --> $DIR/inconsistent_digit_grouping.rs:7:16\n   |\n 7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n-  |                ^^^^^^^^\n+  |                ^^^^^^^^ help: consider: `123_456`\n   |\n   = note: `-D inconsistent-digit-grouping` implied by `-D warnings`\n-  = help: consider: 123_456\n \n error: digits grouped inconsistently by underscores\n  --> $DIR/inconsistent_digit_grouping.rs:7:26\n   |\n 7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n-  |                          ^^^^^^^^^^\n-  |\n-  = help: consider: 12_345_678\n+  |                          ^^^^^^^^^^ help: consider: `12_345_678`\n \n error: digits grouped inconsistently by underscores\n  --> $DIR/inconsistent_digit_grouping.rs:7:38\n   |\n 7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n-  |                                      ^^^^^^^^\n-  |\n-  = help: consider: 1_234_567\n+  |                                      ^^^^^^^^ help: consider: `1_234_567`\n \n error: digits grouped inconsistently by underscores\n  --> $DIR/inconsistent_digit_grouping.rs:7:48\n   |\n 7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n-  |                                                ^^^^^^^^^^^^^^\n-  |\n-  = help: consider: 1_234.567_8_f32\n+  |                                                ^^^^^^^^^^^^^^ help: consider: `1_234.567_8_f32`\n \n error: digits grouped inconsistently by underscores\n  --> $DIR/inconsistent_digit_grouping.rs:7:64\n   |\n 7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n-  |                                                                ^^^^^^^^^^^^^^\n-  |\n-  = help: consider: 1.234_567_8_f32\n+  |                                                                ^^^^^^^^^^^^^^ help: consider: `1.234_567_8_f32`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "284c5ecf3395359aee7cfbe26dce203fbf4e12a9", "filename": "tests/ui/large_digit_groups.stderr", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -2,50 +2,39 @@ error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:16\n   |\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-  |                ^^^^^^^^^^^^^\n+  |                ^^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n   |\n   = note: `-D large-digit-groups` implied by `-D warnings`\n-  = help: consider: 0b11_0110_i64\n \n error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:31\n   |\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-  |                               ^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: consider: 0x123_4567_8901_usize\n+  |                               ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x123_4567_8901_usize`\n \n error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:54\n   |\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-  |                                                      ^^^^^^^^^^^\n-  |\n-  = help: consider: 123_456_f32\n+  |                                                      ^^^^^^^^^^^ help: consider: `123_456_f32`\n \n error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:67\n   |\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-  |                                                                   ^^^^^^^^^^^^^^\n-  |\n-  = help: consider: 123_456.12_f32\n+  |                                                                   ^^^^^^^^^^^^^^ help: consider: `123_456.12_f32`\n \n error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:83\n   |\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-  |                                                                                   ^^^^^^^^^^^^^^^^^\n-  |\n-  = help: consider: 123_456.123_45_f32\n+  |                                                                                   ^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_45_f32`\n \n error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:102\n   |\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-  |                                                                                                      ^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: consider: 123_456.123_456_f32\n+  |                                                                                                      ^^^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_456_f32`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "4fcae9bf725bc92326b801ec55e2e0ced6521be2", "filename": "tests/ui/unreadable_literal.stderr", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42000c6cf9e229092076501aacd868d18a707e93/tests%2Fui%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.stderr?ref=42000c6cf9e229092076501aacd868d18a707e93", "patch": "@@ -2,34 +2,27 @@ error: long literal lacking separators\n  --> $DIR/unreadable_literal.rs:7:16\n   |\n 7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n-  |                ^^^^^^^^^^^\n+  |                ^^^^^^^^^^^ help: consider: `0b1_0110_i64`\n   |\n   = note: `-D unreadable-literal` implied by `-D warnings`\n-  = help: consider: 0b1_0110_i64\n \n error: long literal lacking separators\n  --> $DIR/unreadable_literal.rs:7:29\n   |\n 7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n-  |                             ^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: consider: 0x123_4567_8901_usize\n+  |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `0x123_4567_8901_usize`\n \n error: long literal lacking separators\n  --> $DIR/unreadable_literal.rs:7:50\n   |\n 7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n-  |                                                  ^^^^^^^^^\n-  |\n-  = help: consider: 12_345_f32\n+  |                                                  ^^^^^^^^^ help: consider: `12_345_f32`\n \n error: long literal lacking separators\n  --> $DIR/unreadable_literal.rs:7:61\n   |\n 7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n-  |                                                             ^^^^^^^^^^^\n-  |\n-  = help: consider: 1.234_56_f32\n+  |                                                             ^^^^^^^^^^^ help: consider: `1.234_56_f32`\n \n error: aborting due to 4 previous errors\n "}]}