{"sha": "1f65e4a1d54417cebaed30816c75ae1cb0334566", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNjVlNGExZDU0NDE3Y2ViYWVkMzA4MTZjNzVhZTFjYjAzMzQ1NjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-04T07:48:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-04T07:48:37Z"}, "message": "auto merge of #6230 : thestinger/rust/whitespace, r=catamorphism\n\nI just had `git apply` fix most of them and then did a quick skim over the diff to fix a few cases where it did the wrong thing (mostly replacing tabs with 4 spaces, when someone's editor had them at 8 spaces).", "tree": {"sha": "c02bcddccfb86b2f4e8083f0fb29846e8d549044", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c02bcddccfb86b2f4e8083f0fb29846e8d549044"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f65e4a1d54417cebaed30816c75ae1cb0334566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f65e4a1d54417cebaed30816c75ae1cb0334566", "html_url": "https://github.com/rust-lang/rust/commit/1f65e4a1d54417cebaed30816c75ae1cb0334566", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f65e4a1d54417cebaed30816c75ae1cb0334566/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a47e4cb22fbced2391845f7bfc7a458bca8c8273", "url": "https://api.github.com/repos/rust-lang/rust/commits/a47e4cb22fbced2391845f7bfc7a458bca8c8273", "html_url": "https://github.com/rust-lang/rust/commit/a47e4cb22fbced2391845f7bfc7a458bca8c8273"}, {"sha": "86efd97a10fda1f81f5bead0de36e3343a9faa0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/86efd97a10fda1f81f5bead0de36e3343a9faa0e", "html_url": "https://github.com/rust-lang/rust/commit/86efd97a10fda1f81f5bead0de36e3343a9faa0e"}], "stats": {"total": 793, "additions": 196, "deletions": 597}, "files": [{"sha": "52370e4a509b0f3a3c642a560fb036aac0262687", "filename": ".gitattributes", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -0,0 +1,9 @@\n+[attr]rust text eol=lf whitespace=tab-in-indent,trailing-space,tabwidth=4\n+\n+* text=auto\n+*.cpp rust\n+*.h rust\n+*.rs rust\n+src/rt/msvc/* -whitespace\n+src/rt/vg/* -whitespace\n+src/rt/linenoise/* -whitespace"}, {"sha": "ffbfadaa3391bc3f500c3fffcd9ba95c59693f05", "filename": "COPYRIGHT", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/COPYRIGHT", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/COPYRIGHT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/COPYRIGHT?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -367,4 +367,3 @@ their own copyright notices and license terms:\n   has chosen for the collective work, enumerated at the top\n   of this file. The only difference is the retention of\n   copyright itself, held by the contributor.\n-"}, {"sha": "fb2bbb45e7c83508fc4e8d287c17c990cf5f15a1", "filename": "RELEASES.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/RELEASES.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/RELEASES.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.txt?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -250,7 +250,7 @@ Version 0.3  (July 2012)\n       * Slices and fixed-size, interior-allocated vectors\n       * #!-comments for lang versioning, shell execution\n       * Destructors and iface implementation for classes;\n-      \ttype-parameterized classes and class methods\n+        type-parameterized classes and class methods\n       * 'const' type kind for types that can be used to implement\n         shared-memory concurrency patterns\n \n@@ -261,7 +261,7 @@ Version 0.3  (July 2012)\n                  'crust', 'native' (now 'extern'), 'cont' (now 'again')\n \n       * Constructs: do-while loops ('do' repurposed), fn binding,\n-      \t            resources (replaced by destructors)\n+                    resources (replaced by destructors)\n \n    * Compiler reorganization\n       * Syntax-layer of compiler split into separate crate\n@@ -276,7 +276,7 @@ Version 0.3  (July 2012)\n       * Extensive work on libuv interface\n       * Much vector code moved to libraries\n       * Syntax extensions: #line, #col, #file, #mod, #stringify,\n-      \t#include, #include_str, #include_bin\n+        #include, #include_str, #include_bin\n \n    * Tool improvements\n       * Cargo automatically resolves dependencies"}, {"sha": "c3bb28a9e85e949420fd542a1b6ea04693f86e1f", "filename": "doc/README", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2FREADME", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2FREADME", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2FREADME?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1,6 +1,6 @@\n The markdown docs are only generated by make when node is installed (use\n-`make doc`). If you don't have node installed you can generate them yourself. \n-Unfortunately there's no real standard for markdown and all the tools work \n+`make doc`). If you don't have node installed you can generate them yourself.\n+Unfortunately there's no real standard for markdown and all the tools work\n differently. pandoc is one that seems to work well.\n \n To generate an html version of a doc do something like:\n@@ -10,4 +10,4 @@ The syntax for pandoc flavored markdown can be found at:\n http://johnmacfarlane.net/pandoc/README.html#pandocs-markdown\n \n A nice quick reference (for non-pandoc markdown) is at:\n-http://kramdown.rubyforge.org/quickref.html\n\\ No newline at end of file\n+http://kramdown.rubyforge.org/quickref.html"}, {"sha": "ac7125be424d4fcc76835610568a07515c31d121", "filename": "doc/rust.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -3351,4 +3351,3 @@ Additional specific influences can be seen from the following languages:\n * The typeclass system of Haskell.\n * The lexical identifier rule of Python.\n * The block syntax of Ruby.\n-"}, {"sha": "63fa7e06bae77ecf27233db0727c48a317bac981", "filename": "doc/tutorial-macros.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Ftutorial-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Ftutorial-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-macros.md?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -402,4 +402,3 @@ tricky. Invoking the `log_syntax!` macro can help elucidate intermediate\n states, invoking `trace_macros!(true)` will automatically print those\n intermediate states out, and passing the flag `--pretty expanded` as a\n command-line argument to the compiler will show the result of expansion.\n-"}, {"sha": "053d9e6d98813d037a4ec6ed847677a9c0bee182", "filename": "doc/tutorial-tasks.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Ftutorial-tasks.md", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Ftutorial-tasks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-tasks.md?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -511,4 +511,3 @@ The parent task first calls `DuplexStream` to create a pair of bidirectional\n endpoints. It then uses `task::spawn` to create the child task, which captures\n one end of the communication channel.  As a result, both parent and child can\n send and receive data to and from the other.\n-"}, {"sha": "90ae41affc9b9b13d95651e8665fc4eb9f465607", "filename": "doc/tutorial.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1006,9 +1006,9 @@ let mut d = @mut 5; // mutable variable, mutable box\n d = @mut 15;\n ~~~~\n \n-A mutable variable and an immutable variable can refer to the same box, given \n-that their types are compatible. Mutability of a box is a property of its type, \n-however, so for example a mutable handle to an immutable box cannot be \n+A mutable variable and an immutable variable can refer to the same box, given\n+that their types are compatible. Mutability of a box is a property of its type,\n+however, so for example a mutable handle to an immutable box cannot be\n assigned a reference to a mutable box.\n \n ~~~~\n@@ -1041,7 +1041,7 @@ let y = x.clone(); // y is a newly allocated box\n let z = x; // no new memory allocated, x can no longer be used\n ~~~~\n \n-Since in owned boxes mutability is a property of the owner, not the \n+Since in owned boxes mutability is a property of the owner, not the\n box, mutable boxes may become immutable when they are moved, and vice-versa.\n \n ~~~~"}, {"sha": "aa44097a337e94852ab6c3f5583a33ef258e8af2", "filename": "doc/version_info.html.template", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Fversion_info.html.template", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/doc%2Fversion_info.html.template", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fversion_info.html.template?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -7,4 +7,3 @@\n   </center>\n \n </div>\n-"}, {"sha": "e03b7c152478fd86a89ddc5da5f7b3859cd7907d", "filename": "mk/platform.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -11,7 +11,7 @@\n \n # Create variables HOST_<triple> containing the host part\n # of each target triple.  For example, the triple i686-darwin-macos\n-# would create a variable HOST_i686-darwin-macos with the value \n+# would create a variable HOST_i686-darwin-macos with the value\n # i386.\n define DEF_HOST_VAR\n   HOST_$(1) = $(subst i686,i386,$(word 1,$(subst -, ,$(1))))\n@@ -276,8 +276,8 @@ CFG_GCCISH_CFLAGS_i686-pc-mingw32 := -Wall -Werror -g -march=i686\n CFG_GCCISH_CXXFLAGS_i686-pc-mingw32 := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_i686-pc-mingw32 := -shared -fPIC -g\n CFG_GCCISH_DEF_FLAG_i686-pc-mingw32 :=\n-CFG_GCCISH_PRE_LIB_FLAGS_i686-pc-mingw32 := \n-CFG_GCCISH_POST_LIB_FLAGS_i686-pc-mingw32 := \n+CFG_GCCISH_PRE_LIB_FLAGS_i686-pc-mingw32 :=\n+CFG_GCCISH_POST_LIB_FLAGS_i686-pc-mingw32 :=\n CFG_DEF_SUFFIX_i686-pc-mingw32 := .mingw32.def\n CFG_INSTALL_NAME_i686-pc-mingw32 =\n CFG_LIBUV_LINK_FLAGS_i686-pc-mingw32 := -lWs2_32 -lpsapi -liphlpapi"}, {"sha": "30dda2fb276c9dd9a8c2939726e850d2ca7ef82c", "filename": "mk/rt.mk", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1,27 +1,27 @@\n # This is a procedure to define the targets for building\n-# the runtime.  \n+# the runtime.\n #\n # Argument 1 is the target triple.\n #\n # This is not really the right place to explain this, but\n # for those of you who are not Makefile gurus, let me briefly\n-# cover the $ expansion system in use here, because it \n+# cover the $ expansion system in use here, because it\n # confused me for a while!  The variable DEF_RUNTIME_TARGETS\n # will be defined once and then expanded with different\n # values substituted for $(1) each time it is called.\n-# That resulting text is then eval'd. \n+# That resulting text is then eval'd.\n #\n # For most variables, you could use a single $ sign.  The result\n # is that the substitution would occur when the CALL occurs,\n # I believe.  The problem is that the automatic variables $< and $@\n # need to be expanded-per-rule.  Therefore, for those variables at\n-# least, you need $$< and $$@ in the variable text.  This way, after \n+# least, you need $$< and $$@ in the variable text.  This way, after\n # the CALL substitution occurs, you will have $< and $@.  This text\n # will then be evaluated, and all will work as you like.\n #\n # Reader beware, this explanantion could be wrong, but it seems to\n-# fit the experimental data (i.e., I was able to get the system \n-# working under these assumptions). \n+# fit the experimental data (i.e., I was able to get the system\n+# working under these assumptions).\n \n # Hack for passing flags into LIBUV, see below.\n LIBUV_FLAGS_i386 = -m32 -fPIC"}, {"sha": "ac1b3e86ac918285ee35e5723253883dd5447fea", "filename": "mk/stage0.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -7,16 +7,16 @@ $(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)):\t\t\\\n \t\t$(S)src/etc/get-snapshot.py $(MKFILE_DEPS)\n \t@$(call E, fetch: $@)\n #   Note: the variable \"SNAPSHOT_FILE\" is generally not set, and so\n-#   we generally only pass one argument to this script.  \n+#   we generally only pass one argument to this script.\n ifdef CFG_ENABLE_LOCAL_RUST\n \t$(Q)$(S)src/etc/local_stage0.sh $(CFG_BUILD_TRIPLE) $(CFG_LOCAL_RUST_ROOT)\n-else \n+else\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/get-snapshot.py $(CFG_BUILD_TRIPLE) $(SNAPSHOT_FILE)\n ifdef CFG_ENABLE_PAX_FLAGS\n \t@$(call E, apply PaX flags: $@)\n \t@\"$(CFG_PAXCTL)\" -cm \"$@\"\n endif\n-endif \n+endif\n \t$(Q)touch $@\n \n # Host libs will be extracted by the above rule"}, {"sha": "175e33c66541172422d2de86f05d23cec0c6ecbc", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -179,9 +179,9 @@ tidy:\n \t\t$(Q)find $(S)src/etc -name '*.py' \\\n \t\t| xargs -n 10 $(CFG_PYTHON) $(S)src/etc/tidy.py\n \t\t$(Q)echo $(ALL_CS) \\\n-\t  \t| xargs -n 10 $(CFG_PYTHON) $(S)src/etc/tidy.py\n+\t\t| xargs -n 10 $(CFG_PYTHON) $(S)src/etc/tidy.py\n \t\t$(Q)echo $(ALL_HS) \\\n-\t  \t| xargs -n 10 $(CFG_PYTHON) $(S)src/etc/tidy.py\n+\t\t| xargs -n 10 $(CFG_PYTHON) $(S)src/etc/tidy.py\n \n endif\n \n@@ -709,4 +709,3 @@ endef\n \n $(foreach host,$(CFG_HOST_TRIPLES),\t\t\t\\\n  $(eval $(call DEF_CHECK_FAST_FOR_H,$(host))))\n-"}, {"sha": "6492be53d34814a5867ae6f83fc40134e6e16714", "filename": "src/etc/check-links.pl", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fcheck-links.pl", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fcheck-links.pl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcheck-links.pl?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -9,18 +9,17 @@\n my $i = 0;\n foreach $line (@lines) {\n     $i++;\n-    if ($line =~ m/id=\"([^\"]+)\"/) { \n+    if ($line =~ m/id=\"([^\"]+)\"/) {\n         $anchors->{$1} = $i;\n     }\n }\n \n $i = 0;\n foreach $line (@lines) {\n     $i++;\n-    while ($line =~ m/href=\"#([^\"]+)\"/g) { \n+    while ($line =~ m/href=\"#([^\"]+)\"/g) {\n         if (! exists($anchors->{$1})) {\n             print \"$file:$i: $1 referenced\\n\";\n         }\n     }\n }\n-"}, {"sha": "e394f1916088f081c36505288f8b30f500b08307", "filename": "src/etc/gedit/readme.txt", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fgedit%2Freadme.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fgedit%2Freadme.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgedit%2Freadme.txt?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,4 +8,3 @@ Instructions for Ubuntu Linux 12.04+\n 2) Copy the included \"share\" folder into \"~/.local/\"\n \n 3) Open a shell in \"~/.local/share/\" and run \"update-mime-database mime\"\n-"}, {"sha": "a413d0a90622284026065e090064d52156703e49", "filename": "src/etc/gedit/share/gtksourceview-3.0/language-specs/rust.lang", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fgedit%2Fshare%2Fgtksourceview-3.0%2Flanguage-specs%2Frust.lang", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fgedit%2Fshare%2Fgtksourceview-3.0%2Flanguage-specs%2Frust.lang", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgedit%2Fshare%2Fgtksourceview-3.0%2Flanguage-specs%2Frust.lang?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -123,11 +123,11 @@\n \t\t<keyword>mode_t</keyword>\n \t\t<keyword>ssize_t</keyword>\n     </context>\n-    \n+\n     <context id=\"self\" style-ref=\"identifier\">\n \t\t<keyword>self</keyword>\n     </context>\n-    \n+\n     <context id=\"constants\" style-ref=\"constant\">\n \t\t<keyword>true</keyword>\n \t\t<keyword>false</keyword>\n@@ -261,4 +261,3 @@\n   </definitions>\n \n </language>\n-"}, {"sha": "d75cffe960073cf91aba56f504021d5c30e76323", "filename": "src/etc/gedit/share/mime/packages/rust.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fgedit%2Fshare%2Fmime%2Fpackages%2Frust.xml", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fgedit%2Fshare%2Fmime%2Fpackages%2Frust.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgedit%2Fshare%2Fmime%2Fpackages%2Frust.xml?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -2,6 +2,6 @@\n   <mime-type type=\"text/x-rust\">\n     <comment>Rust Source</comment>\n     <glob pattern=\"*.rs\"/>\n-    <glob pattern=\"*.rc\"/>    \n+    <glob pattern=\"*.rc\"/>\n   </mime-type>\n </mime-info>"}, {"sha": "1a3a446533572d421959c7d3ec84b08ec91697cc", "filename": "src/etc/indenter", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Findenter", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Findenter", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Findenter?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ while (<>) {\n         $indent -= 1;\n     }\n }\n-"}, {"sha": "7cecf83716160fedf800485d855598b655a861e7", "filename": "src/etc/latest-unix-snaps.py", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flatest-unix-snaps.py", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flatest-unix-snaps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flatest-unix-snaps.py?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -52,5 +52,3 @@ def download_new_file (date, rev, platform, hsh):\n for ff in newestSet[\"files\"]:\n    download_new_file (newestSet[\"date\"], newestSet[\"rev\"],\n                       ff[\"platform\"], ff[\"hash\"])\n-\n-"}, {"sha": "e341f495eebb9fe608e16223ddda9cf4f3a5dcef", "filename": "src/etc/libc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flibc.c", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flibc.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flibc.c?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -243,4 +243,3 @@ int main() {\n   extra_consts();\n   printf(\"}\\n\");\n }\n-"}, {"sha": "1e0c541cd8927850bee96a62a7a0a689f09e2561", "filename": "src/etc/licenseck.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flicenseck.py", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flicenseck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flicenseck.py?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -96,4 +96,3 @@ def check_license(name, contents):\n         return True\n \n     return False\n-"}, {"sha": "8d2fd887e3ff706321642fd943032551e91ba27a", "filename": "src/etc/local_stage0.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flocal_stage0.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Flocal_stage0.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flocal_stage0.sh?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1,13 +1,13 @@\n #!/bin/sh\n \n-TARG_DIR=$1 \n+TARG_DIR=$1\n PREFIX=$2\n \n BINDIR=bin\n LIBDIR=lib\n \n OS=`uname -s`\n-case $OS in \n+case $OS in\n     (\"Linux\"|\"FreeBSD\")\n \tBIN_SUF=\n \tLIB_SUF=.so"}, {"sha": "3b5f66c41173056e0c9e8cb98e4e3e256683e8d9", "filename": "src/etc/mirror-all-snapshots.py", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fmirror-all-snapshots.py", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fmirror-all-snapshots.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmirror-all-snapshots.py?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -33,6 +33,3 @@\n             print(\"got download with ok hash\")\n         else:\n             raise Exception(\"bad hash on download\")\n-\n-\n-"}, {"sha": "a2d27591cad939f189b96e0561a771494509b83f", "filename": "src/etc/monodebug.pl", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fmonodebug.pl", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fmonodebug.pl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmonodebug.pl?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -77,4 +77,3 @@\n     }\n     print \"\\n\";\n }\n-"}, {"sha": "7bd4175fbf0db9e0d0ac9009137ee188fc06e7fc", "filename": "src/etc/sugarise-doc-comments.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fsugarise-doc-comments.py", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fsugarise-doc-comments.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsugarise-doc-comments.py?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -80,4 +80,3 @@ def sugarise_file(path):\n for (dirpath, dirnames, filenames) in os.walk('.'):\n     for name in fnmatch.filter(filenames, '*.r[sc]'):\n         sugarise_file(os.path.join(dirpath, name))\n-"}, {"sha": "06fcb5cb9458652c0e55fc8cbbdc474d7cfa23b3", "filename": "src/etc/tidy.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Ftidy.py", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Ftidy.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftidy.py?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -81,4 +81,3 @@ def do_license_check(name, contents):\n \n \n sys.exit(err)\n-"}, {"sha": "def1c5a53c1fde79dc5645064c39aacc2091d4b1", "filename": "src/etc/x86.supp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fx86.supp", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fetc%2Fx86.supp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fx86.supp?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -366,7 +366,7 @@\n    ...\n }\n \n-{  \n+{\n    llvm-user-new-leak\n    Memcheck:Leak\n    fun:_Znwj\n@@ -401,7 +401,7 @@\n    Helgrind:Race\n    fun:_ZN15lock_and_signal27lock_held_by_current_threadEv\n    ...\n-}  \n+}\n \n {\n    lock_and_signal-probably-threadsafe-access-outside-of-lock2"}, {"sha": "f34f5218f5febb1653a2e891589eb9134d81f38b", "filename": "src/libcore/cleanup.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcleanup.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -245,4 +245,3 @@ pub mod rustrt {\n         pub unsafe fn rust_get_task() -> *c_void;\n     }\n }\n-"}, {"sha": "afe8338f2ce6a4dbd7ff5b744694719d60307f26", "filename": "src/libcore/logging.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flogging.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -59,4 +59,3 @@ pub fn log_type<T>(level: u32, object: &T) {\n         rustrt::rust_log_str(level, transmute(vec::raw::to_ptr(bytes)), len);\n     }\n }\n-"}, {"sha": "599591e2f6d7afb07e03f83fafcb607607ab8b9c", "filename": "src/libcore/owned.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fowned.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -31,4 +31,3 @@ impl<T:Ord> Ord for ~T {\n     #[inline(always)]\n     fn gt(&self, other: &~T) -> bool { *(*self) > *(*other) }\n }\n-"}, {"sha": "9c1e566f218f6aca93d67b6401f7cf0dd54d10ea", "filename": "src/libcore/rt/context.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fcontext.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -207,4 +207,3 @@ pub fn mut_offset<T>(ptr: *mut T, count: int) -> *mut T {\n     use core::sys::size_of;\n     (ptr as int + count * (size_of::<T>() as int)) as *mut T\n }\n-"}, {"sha": "7e891f1718e2111016751c745a67275906d0b212", "filename": "src/libcore/rt/io/comm_adapters.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fcomm_adapters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fcomm_adapters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fcomm_adapters.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -56,4 +56,3 @@ impl<W: Writer> WriterChan<W> {\n impl<W: Writer> GenericChan<~[u8]> for WriterChan<W> {\n     fn send(&self, _x: ~[u8]) { fail!() }\n }\n-"}, {"sha": "df1dfe4d38ad1b1eb7d028475ca521dde9e5bd88", "filename": "src/libcore/rt/io/net/ip.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Fip.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,4 +12,3 @@ pub enum IpAddr {\n     Ipv4(u8, u8, u8, u8, u16),\n     Ipv6\n }\n-"}, {"sha": "1f1254a7029f0f9e50e91ee5ed2660ea8b7a1eb2", "filename": "src/libcore/rt/io/net/udp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -47,4 +47,3 @@ impl UdpListener {\n impl Listener<UdpStream> for UdpListener {\n     fn accept(&mut self) -> Option<UdpStream> { fail!() }\n }\n-"}, {"sha": "f449a857467ccf103fbe4c1d7cff7c16b0aa1de4", "filename": "src/libcore/rt/io/net/unix.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -47,4 +47,3 @@ impl UnixListener {\n impl Listener<UnixStream> for UnixListener {\n     fn accept(&mut self) -> Option<UnixStream> { fail!() }\n }\n-"}, {"sha": "6bf228a1b2201596aa256497cc9d86752d3b7209", "filename": "src/libcore/rt/local_heap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Flocal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Flocal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Flocal_heap.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -78,4 +78,3 @@ extern {\n                                 size: size_t) -> *OpaqueBox;\n     fn rust_boxed_region_free(region: *BoxedRegion, box: *OpaqueBox);\n }\n-"}, {"sha": "a7e02f30e0167bf5246b39dcdb89432d02182736", "filename": "src/libcore/rt/sched/local_sched.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fsched%2Flocal_sched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Frt%2Fsched%2Flocal_sched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fsched%2Flocal_sched.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -143,4 +143,3 @@ fn borrow_smoke_test() {\n     }\n     let _scheduler = take();\n }\n-"}, {"sha": "272bdca8654f14b196e2dfebafa4c1783dad75f5", "filename": "src/libcore/stackwalk.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Fstackwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Fstackwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstackwalk.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -99,4 +99,3 @@ pub mod rusti {\n         pub fn frame_address(+f: &once fn(x: *u8));\n     }\n }\n-"}, {"sha": "d6e2c5eee6aca8400bd324f4f1cf25e271f97864", "filename": "src/libcore/unicode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -2642,4 +2642,3 @@ pub mod derived_property {\n         bsearch_range_table(c, XID_Start_table)\n     }\n }\n-"}, {"sha": "57ed579e88ddab785234de6f82dc3785c5b14a3f", "filename": "src/libcore/unstable/exchange_alloc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Funstable%2Fexchange_alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Funstable%2Fexchange_alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funstable%2Fexchange_alloc.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -81,4 +81,3 @@ extern {\n     #[rust_stack]\n     fn rust_get_exchange_count_ptr() -> *mut int;\n }\n-"}, {"sha": "6edbdcb51b0cba2f5ee4d4dea1e5f21b0abd1e57", "filename": "src/libcore/unstable/weak_task.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Funstable%2Fweak_task.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibcore%2Funstable%2Fweak_task.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funstable%2Fweak_task.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -205,4 +205,3 @@ fn test_select_stream_and_oneshot() {\n     chan.send(());\n     waitport.recv();\n }\n-"}, {"sha": "d2b71447f47782e9544e20a13f3f34d56e53d663", "filename": "src/librustc/metadata/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcommon.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -169,4 +169,3 @@ pub struct LinkMeta {\n     vers: @str,\n     extras_hash: @str\n }\n-"}, {"sha": "24007380feec1b42ace8ec8bb7630bface2f513c", "filename": "src/librustc/metadata/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmetadata%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmetadata%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fmod.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,4 +18,3 @@ pub mod cstore;\n pub mod csearch;\n pub mod loader;\n pub mod filesearch;\n-"}, {"sha": "4ab24a17d31b2bce7c710b3f569d7976716ed60e", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -802,4 +802,3 @@ fn check_loans_in_block(blk: &ast::blk,\n         visit::visit_block(blk, self, vt);\n     }\n }\n-"}, {"sha": "fd1f6f5c450af53c1bec004cc3575be8f93e2101", "filename": "src/librustc/middle/borrowck/gather_loans.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -639,4 +639,3 @@ fn add_stmt_to_map(stmt: @ast::stmt,\n     }\n     visit::visit_stmt(stmt, self, vt);\n }\n-"}, {"sha": "641571373bda4f5d5a5b7a3e9ca238a62b00f663", "filename": "src/librustc/middle/borrowck/loan.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fborrowck%2Floan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fborrowck%2Floan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Floan.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -309,4 +309,3 @@ pub impl LoanContext {\n         }\n     }\n }\n-"}, {"sha": "f6d138a4a699e1f3fd0d413f34eb73201647c8f0", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -423,4 +423,3 @@ pub fn collect_language_items(crate: @crate,\n     collector.collect();\n     copy items\n }\n-"}, {"sha": "29ca875806f9332a899a676c5d83fb8f96d0022a", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1179,4 +1179,3 @@ pub impl categorization {\n         }\n     }\n }\n-"}, {"sha": "b87adb75bc37a2be6fceab1d5634b05209d62f6c", "filename": "src/librustc/middle/pat_util.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fpat_util.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -86,4 +86,3 @@ pub fn pat_binding_ids(dm: resolve::DefMap, pat: @pat) -> ~[node_id] {\n     pat_bindings(dm, pat, |_bm, b_id, _sp, _pt| found.push(b_id) );\n     return found;\n }\n-"}, {"sha": "083c436c83e84c35f087b27f7f78be2bc6219cbc", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -603,4 +603,3 @@ pub fn check_crate(tcx: ty::ctxt,\n     });\n     visit::visit_crate(crate, method_map, visitor);\n }\n-"}, {"sha": "753a6d25cbb3db4c55b8d307c8b70fee9067c95e", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -968,4 +968,3 @@ pub fn determine_rp_in_crate(sess: Session,\n     // return final set\n     return cx.region_paramd_items;\n }\n-"}, {"sha": "bf64134704a4ca2af9eea66d301d0cff8a932bd4", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -186,4 +186,3 @@ impl Subst for ty::ty_param_bounds_and_ty {\n         }\n     }\n }\n-"}, {"sha": "d49e8e0969a1f9978faf2b1dd4a5815ac0366f9c", "filename": "src/librustc/middle/trans/cabi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -190,4 +190,3 @@ pub impl FnType {\n         Store(bcx, llretval, llretptr);\n     }\n }\n-"}, {"sha": "fc645e2bb6cd45c44b0bbce3b613caceb781abcf", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -799,4 +799,3 @@ pub fn trans_arg_expr(bcx: block,\n     debug!(\"--- trans_arg_expr passing %s\", val_str(bcx.ccx().tn, val));\n     return rslt(bcx, val);\n }\n-"}, {"sha": "84100d7195ea064d37c012375f17fb2ddda477ce", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -599,4 +599,3 @@ pub fn make_opaque_cbox_free_glue(\n         }\n     }\n }\n-"}, {"sha": "c9a4f078c79dbe3f8dde7e01caf4e54d51054487", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -398,4 +398,3 @@ pub fn trans_fail_bounds_check(bcx: block, sp: span,\n     Unreachable(bcx);\n     return bcx;\n }\n-"}, {"sha": "c6b32930c5f71c55d368f373e73ab59bc60b048c", "filename": "src/librustc/middle/trans/datum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -855,4 +855,3 @@ pub impl DatumBlock {\n         self.datum.to_str(self.ccx())\n     }\n }\n-"}, {"sha": "35136410268ffed6d971cf53b2ee3b0a7700e08e", "filename": "src/librustc/middle/trans/inline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -122,4 +122,3 @@ pub fn maybe_instantiate_inline(ccx: @CrateContext, fn_id: ast::def_id,\n       }\n     }\n }\n-"}, {"sha": "b1349104e5490d9f15c37311e96c095a33d3f456", "filename": "src/librustc/middle/trans/machine.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmachine.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -153,4 +153,3 @@ pub fn static_size_of_enum(cx: @CrateContext, t: ty::t) -> uint {\n         _ => cx.sess.bug(~\"static_size_of_enum called on non-enum\")\n     }\n }\n-"}, {"sha": "43cc66c55686714e70a83392b86eb7ee388c1077", "filename": "src/librustc/middle/trans/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmacros.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -51,4 +51,3 @@ macro_rules! trace(\n         }\n     )\n )\n-"}, {"sha": "217eda870be9fc51247520c852d63631fe77f19e", "filename": "src/librustc/middle/trans/reachable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -242,4 +242,3 @@ fn traverse_all_resources_and_impls(cx: &ctx, crate_mod: &_mod) {\n             ..*visit::default_visitor()\n         }));\n }\n-"}, {"sha": "9bae0560918529f23496bb701cfcea4bf6a94f23", "filename": "src/librustc/middle/trans/reflect.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -404,4 +404,3 @@ pub fn ast_purity_constant(purity: ast::purity) -> uint {\n         ast::extern_fn => 3u\n     }\n }\n-"}, {"sha": "6ff9e1cfc57175466a2af747b4ea3e06aa086ce8", "filename": "src/librustc/middle/trans/shape.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fshape.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -74,4 +74,3 @@ pub fn add_substr(dest: &mut ~[u8], src: ~[u8]) {\n     add_u16(&mut *dest, vec::len(src) as u16);\n     *dest += src;\n }\n-"}, {"sha": "794912d8307bc4dab5d29cdd82a7afe384c027ff", "filename": "src/librustc/middle/trans/type_use.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -383,4 +383,3 @@ pub fn handle_body(cx: Context, body: &blk) {\n     });\n     (v.visit_block)(body, cx, v);\n }\n-"}, {"sha": "3a0ad0141b00b4a1cd7e5aa415ade1b8db07d8dd", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -649,4 +649,3 @@ pub fn check_pointer_pat(pcx: &pat_ctxt,\n \n #[deriving(Eq)]\n enum PointerKind { Managed, Owned, Borrowed }\n-"}, {"sha": "3fa551e4b057a15905ec2eb9ca7a3ac013e29805", "filename": "src/librustc/middle/typeck/check/demand.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -66,5 +66,3 @@ pub fn coerce(fcx: @mut FnCtxt,\n       }\n     }\n }\n-\n-"}, {"sha": "7f390de1f49431d6c71b28b1a98ed65774cd615d", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -666,5 +666,3 @@ pub fn resolve_in_block(fcx: @mut FnCtxt, bl: &ast::blk) {\n         .. *visit::default_visitor()\n     }));\n }\n-\n-"}, {"sha": "fe07dc9412db2d454eff30d948d78791e583eaf8", "filename": "src/librustc/middle/typeck/coherence.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1119,4 +1119,3 @@ pub fn check_coherence(crate_context: @mut CrateCtxt, crate: @crate) {\n     let coherence_checker = @CoherenceChecker(crate_context);\n     coherence_checker.check_coherence(crate);\n }\n-"}, {"sha": "362104e98b0bddc6a7efea36221f8c44afd72aba", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -635,4 +635,3 @@ pub fn super_trait_refs<C:Combine>(\n         })\n     }\n }\n-"}, {"sha": "dc1e3e845df4e14deb946b2021c79c07379f5511", "filename": "src/librustc/middle/typeck/infer/glb.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -313,4 +313,3 @@ impl Combine for Glb {\n         super_trait_refs(self, a, b)\n     }\n }\n-"}, {"sha": "306f124be3c8f8f7d53747f22779b9f1d0a775fe", "filename": "src/librustc/middle/typeck/infer/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmacros.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,4 +18,3 @@ macro_rules! if_ok(\n         }\n     )\n )\n-"}, {"sha": "1ee59c3fe0649be3991678811dd3a699d3d824bd", "filename": "src/librustc/middle/typeck/infer/region_inference.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1746,4 +1746,3 @@ fn iterate_until_fixed_point(\n     }\n     debug!(\"---- %s Complete after %u iteration(s)\", tag, iteration);\n }\n-"}, {"sha": "2b88825c49a69df4bae463be4937c8c193dcb76b", "filename": "src/librustc/middle/typeck/infer/resolve.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -278,4 +278,3 @@ pub impl ResolveState {\n         }\n     }\n }\n-"}, {"sha": "48d7765f88ec95cee7335e50dca24260964b6fd7", "filename": "src/librustc/middle/typeck/infer/sub.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -269,4 +269,3 @@ impl Combine for Sub {\n         super_trait_refs(self, a, b)\n     }\n }\n-"}, {"sha": "e50f2089e4fb511e26bcfe3fe47f7215cd580e97", "filename": "src/librustc/middle/typeck/infer/unify.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -265,5 +265,3 @@ impl SimplyUnifiable for ast::float_ty {\n         return ty::terr_float_mismatch(err);\n     }\n }\n-\n-"}, {"sha": "5560f21af61db3ba5d71bb7d46eb7afd4dfde2be", "filename": "src/librustdoc/path_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpath_pass.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -112,4 +112,3 @@ fn should_record_fn_paths() {\n         assert!(doc.cratemod().mods()[0].fns()[0].path() == ~[~\"a\"]);\n     }\n }\n-"}, {"sha": "baeaef1e3c791b278cce3dc9e6abd0caed613d3b", "filename": "src/librustpkg/testsuite/pass/commands.txt", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fcommands.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fcommands.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fcommands.txt?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -32,4 +32,3 @@ Commands that should succeed:\n 15. `rustpkg test foo` runs tests and prints their output, if foo contains #[test]s.\n \n 16. If foo is installed, `rustpkg uninstall foo; rustpkg list` doesn't include foo in the list\n-"}, {"sha": "62785c06db31ab1dcd5af6e101a02a2af4c6aeab", "filename": "src/librustpkg/testsuite/pass/src/deeply/nested/path/foo/src/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fsrc%2Fdeeply%2Fnested%2Fpath%2Ffoo%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fsrc%2Fdeeply%2Fnested%2Fpath%2Ffoo%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fsrc%2Fdeeply%2Fnested%2Fpath%2Ffoo%2Fsrc%2Fmain.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -15,4 +15,3 @@ The test runner should check that, after `rustpkg install deeply/nested/path/foo\n */\n \n fn main() {}\n-"}, {"sha": "cd347098e25117def232970e899076ef70532c20", "filename": "src/libstd/num/bigint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibstd%2Fnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibstd%2Fnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fbigint.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1957,4 +1957,3 @@ mod bigint_tests {\n         assert!(-Zero::zero::<BigInt>() == Zero::zero::<BigInt>());\n     }\n }\n-"}, {"sha": "39fb5a45d7e9c8e1455b9814b88fa88119d916bc", "filename": "src/libstd/serialize.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibstd%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibstd%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fserialize.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1883,4 +1883,3 @@ impl<D:Decoder> DecoderHelpers for D {\n         }\n     }\n }\n-"}, {"sha": "661247df1c1442fd5054bfd0c77739b52d627a67", "filename": "src/libstd/task_pool.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibstd%2Ftask_pool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibstd%2Ftask_pool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask_pool.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -100,4 +100,3 @@ fn test_task_pool() {\n         pool.execute(|i| io::println(fmt!(\"Hello from thread %u!\", *i)));\n     }\n }\n-"}, {"sha": "38e43d1ade562a4469c71e0b63f3f9b7edb8bbc5", "filename": "src/libsyntax/ext/pipes/check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -80,4 +80,3 @@ impl proto::visitor<(), (), ()> for @ext_ctxt {\n         }\n     }\n }\n-"}, {"sha": "18faab8c88d70b072898ff08b17811d772293779", "filename": "src/libsyntax/ext/pipes/liveness.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fliveness.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -104,4 +104,3 @@ pub fn analyze(proto: protocol, _cx: @ext_ctxt) {\n         proto.bounded = Some(true);\n     }\n }\n-"}, {"sha": "85c578bc2ce1af23d77a99ed4ed45c4a6693e6fa", "filename": "src/libsyntax/ext/pipes/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fmod.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -85,4 +85,3 @@ pub fn expand_proto(cx: @ext_ctxt, _sp: span, id: ast::ident,\n     // compile\n     base::MRItem(proto.compile(cx))\n }\n-"}, {"sha": "64e2f1041c1e14ab70ebc183d844c8beadd80d6f", "filename": "src/libsyntax/ext/pipes/proto.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fproto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fpipes%2Fproto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fproto.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -217,4 +217,3 @@ pub fn visit<Tproto, Tstate, Tmessage, V: visitor<Tproto, Tstate, Tmessage>>(\n     };\n     visitor.visit_proto(proto, states)\n }\n-"}, {"sha": "2bf4b05aa6b02ed7025a26be6cc43eb61043dadf", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -760,4 +760,3 @@ fn expand_parse_call(cx: @ext_ctxt,\n                           id_ext(cx, parse_method),\n                           arg_exprs)\n }\n-"}, {"sha": "e486a6254e76a302733a27f91f2471b89e5ca8a7", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -298,4 +298,3 @@ pub impl Parser {\n     }\n \n }\n-"}, {"sha": "b8327de0f1320b7292d97f5ee8c7b4309941c6d4", "filename": "src/libsyntax/syntax.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fsyntax.rc", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Flibsyntax%2Fsyntax.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rc?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -89,4 +89,3 @@ pub mod ext {\n \n     pub mod trace_macros;\n }\n-"}, {"sha": "6441f59a4d30c4371021a1d542a26c4e5200a533", "filename": "src/rt/arch/arm/_context.S", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2F_context.S?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -48,5 +48,3 @@ swap_registers:\n \tmsr cpsr_cxsf, r2\n \n \tmov pc, lr\n-\n-"}, {"sha": "77ec9d5182a17b89efaf56ba75f488b670e024c1", "filename": "src/rt/arch/arm/gpr.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fgpr.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fgpr.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Fgpr.cpp?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ void rust_gpr::load() {\n     LOAD(r8);  LOAD(r9);  LOAD(r10); LOAD(r11);\n     LOAD(r12); LOAD(r13); LOAD(r14); LOAD(r15);\n }\n-"}, {"sha": "c8a3e916a371c0692d356f7a42bdf4cfb692ba49", "filename": "src/rt/arch/arm/gpr.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fgpr.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fgpr.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Fgpr.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,4 +21,3 @@ class rust_gpr : public rust_gpr_base {\n };\n \n #endif\n-"}, {"sha": "f0ec3f4b7a5118e6c6863654eddce2c61ea2d94f", "filename": "src/rt/arch/arm/morestack.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Fmorestack.S?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -35,7 +35,7 @@ __morestack:\n     mov r0, r4         // The amount of stack needed\n     add r1, fp, #20    // Address of stack arguments\n     mov r2, r5         // Size of stack arguments\n-    \n+\n     // Create new stack\n     bl upcall_new_stack@plt\n \n@@ -64,7 +64,7 @@ __morestack:\n     // Restore return value\n \tmov r0, r4\n \tmov r1, r5\n-\t\n+\n     // Return\n     pop {r6, fp, lr}\n     mov pc, lr"}, {"sha": "95fce8746a118f6ed5a239819c328c6ae91e862c", "filename": "src/rt/arch/arm/record_sp.S", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Frecord_sp.S?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -28,4 +28,3 @@ get_sp_limit:\n get_sp:\n \tmov r0, sp\n \tmov pc, lr\n-"}, {"sha": "0d1c24e0fb7495a5f09c4067a7fc38d63d94152a", "filename": "src/rt/arch/arm/regs.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fregs.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Farm%2Fregs.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Fregs.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -19,5 +19,3 @@\n #   define RUSTRT_ARG1_S r1\n #   define RUSTRT_ARG2_S r2\n #   define RUSTRT_ARG3_S r3\n-\n-"}, {"sha": "e2e4ffe35b4e4eb226a015262b1b0e778415bd18", "filename": "src/rt/arch/i386/_context.S", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2F_context.S?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -63,5 +63,3 @@ SWAP_REGISTERS:\n \n     // Return!\n     jmp *48(%eax)\n-\n-"}, {"sha": "e5a59d664b0d02a0f436353c86c8dd2871f3d06e", "filename": "src/rt/arch/i386/gpr.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2Fgpr.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2Fgpr.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fgpr.cpp?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ void rust_gpr::load() {\n     LOAD(eax); LOAD(ebx); LOAD(ecx); LOAD(edx);\n     LOAD(esi); LOAD(edi); LOAD(ebp); LOAD(esi);\n }\n-"}, {"sha": "1953170301c53df3e5e3633c4fb91d8e44e4bd24", "filename": "src/rt/arch/i386/gpr.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2Fgpr.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2Fgpr.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fgpr.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -29,4 +29,3 @@ class rust_gpr : public rust_gpr_base {\n };\n \n #endif\n-"}, {"sha": "c1cd11fa432afe56d65a09d346e57ac65da6ab9b", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -97,7 +97,7 @@\n #endif\n .globl MORESTACK\n \n-// FIXME: What about _WIN32?\t\n+// FIXME: What about _WIN32?\n #if defined(__linux__) || defined(__FreeBSD__)\n \t.hidden MORESTACK\n #else\n@@ -253,4 +253,3 @@ L_upcall_del_stack$stub:\n \n \t.subsections_via_symbols\n #endif\n-"}, {"sha": "b48c1d4e732a506c9021316d7b2121c289a8ea7f", "filename": "src/rt/arch/mips/gpr.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fmips%2Fgpr.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fmips%2Fgpr.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fmips%2Fgpr.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -30,4 +30,3 @@ class rust_gpr : public rust_gpr_base {\n };\n \n #endif\n-"}, {"sha": "f718cac963470402a7844e36dfa34f1ff188fc36", "filename": "src/rt/arch/x86_64/_context.S", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2F_context.S?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -121,4 +121,3 @@ SWAP_REGISTERS:\n         // Jump to the instruction pointer\n         // found in regs:\n         jmp *(RUSTRT_IP*8)(ARG1)\n-"}, {"sha": "37247d1dfdc8b04a3ab550986e1b90ce17b9fc23", "filename": "src/rt/arch/x86_64/gpr.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2Fgpr.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2Fgpr.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fgpr.cpp?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ void rust_gpr::load() {\n     LOAD(r8);  LOAD(r9);  LOAD(r10); LOAD(r11);\n     LOAD(r12); LOAD(r13); LOAD(r14); LOAD(r15);\n }\n-"}, {"sha": "18ef77dbba63198f0527281472fbe6118fe18a53", "filename": "src/rt/arch/x86_64/gpr.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2Fgpr.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2Fgpr.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fgpr.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -30,4 +30,3 @@ class rust_gpr : public rust_gpr_base {\n };\n \n #endif\n-"}, {"sha": "1aca452df108b84e7fb0ccb77c54127e5d7c537c", "filename": "src/rt/arch/x86_64/regs.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2Fregs.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Farch%2Fx86_64%2Fregs.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fregs.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -43,5 +43,3 @@\n #   define RUSTRT_ARG4_S %r8\n #   define RUSTRT_ARG5_S %r9\n #endif\n-\n-"}, {"sha": "c28b35e688d5a11be71eb7099e98121236a84609", "filename": "src/rt/isaac/rand.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Fisaac%2Frand.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Fisaac%2Frand.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fisaac%2Frand.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -52,5 +52,3 @@ void isaac(randctx *r);\n      (r)->randrsl[(r)->randcnt])\n \n #endif  /* RAND */\n-\n-"}, {"sha": "fd1b7860b29a423ce08149853e51e33962fe859a", "filename": "src/rt/rust_abi.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_abi.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_abi.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_abi.cpp?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -86,4 +86,3 @@ symbolicate(const std::vector<frame> &frames) {\n }\n \n }   // end namespace stack_walk\n-"}, {"sha": "4179bf751579f35a01d67b13585c8fb164fddd23", "filename": "src/rt/rust_abi.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_abi.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_abi.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_abi.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -76,4 +76,3 @@ std::string symbolicate(const std::vector<frame> &frames);\n uint32_t get_abi_version();\n \n #endif\n-"}, {"sha": "3d6c949fd34605b4309d12589911a55ec32059d9", "filename": "src/rt/rust_android_dummy.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_android_dummy.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_android_dummy.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_android_dummy.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,4 +12,3 @@ char **backtrace_symbols (void *__const *__array, int __size);\n void backtrace_symbols_fd (void *__const *__array, int __size, int __fd);\n \n #endif\n-"}, {"sha": "f403b0434b649c01dd2fa49fab9c4e569fb2ce2d", "filename": "src/rt/rust_debug.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_debug.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_debug.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_debug.cpp?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -58,4 +58,3 @@ dump_origin(rust_task *task, void *ptr) {\n }\n \n }   // end namespace debug\n-"}, {"sha": "7f025bb908e2ae39e611104e3ab73cfbe34a6225", "filename": "src/rt/rust_debug.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_debug.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_debug.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_debug.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -70,4 +70,3 @@ void dump_origin(rust_task *task, void *ptr);\n }   // end namespace debug\n \n #endif\n-"}, {"sha": "7ec2dda9cd40cf12eeb481dd468e25da1ed314b5", "filename": "src/rt/rust_gpr_base.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_gpr_base.h", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frt%2Frust_gpr_base.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gpr_base.h?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -31,4 +31,3 @@ class rust_gpr_base {\n \n \n #endif\n-"}, {"sha": "c0db3f68a76208904fd788122dfc19fdfaccf099", "filename": "src/rustllvm/README", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frustllvm%2FREADME", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frustllvm%2FREADME", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FREADME?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1,3 +1,2 @@\n This directory currently contains some LLVM support code. This will generally\n be sent upstream to LLVM in time; for now it lives here.\n-"}, {"sha": "04e616de22334c84ff1c06373d0726613970763c", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -120,18 +120,18 @@ void LLVMRustInitializeTargets() {\n   LLVMInitializeX86TargetMC();\n   LLVMInitializeX86AsmPrinter();\n   LLVMInitializeX86AsmParser();\n-\t\n+\n   LLVMInitializeARMTargetInfo();\n   LLVMInitializeARMTarget();\n   LLVMInitializeARMTargetMC();\n   LLVMInitializeARMAsmPrinter();\n-  LLVMInitializeARMAsmParser();\t\n+  LLVMInitializeARMAsmParser();\n \n   LLVMInitializeMipsTargetInfo();\n   LLVMInitializeMipsTarget();\n   LLVMInitializeMipsTargetMC();\n   LLVMInitializeMipsAsmPrinter();\n-  LLVMInitializeMipsAsmParser();\t\n+  LLVMInitializeMipsAsmParser();\n }\n \n // Custom memory manager for MCJITting. It needs special features\n@@ -438,7 +438,7 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n                         const char *path,\n                         TargetMachine::CodeGenFileType FileType,\n                         CodeGenOpt::Level OptLevel,\n-\t\t\tbool EnableSegmentedStacks) {\n+      bool EnableSegmentedStacks) {\n \n   LLVMRustInitializeTargets();\n \n@@ -449,7 +449,7 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n   if (!EnableARMEHABI) {\n     int argc = 3;\n     const char* argv[] = {\"rustc\", \"-arm-enable-ehabi\",\n-\t\t\t  \"-arm-enable-ehabi-descriptors\"};\n+        \"-arm-enable-ehabi-descriptors\"};\n     cl::ParseCommandLineOptions(argc, argv);\n   }\n \n@@ -467,8 +467,8 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n   const Target *TheTarget = TargetRegistry::lookupTarget(Trip, Err);\n   TargetMachine *Target =\n     TheTarget->createTargetMachine(Trip, CPUStr, FeaturesStr,\n-\t\t\t\t   Options, Reloc::PIC_,\n-\t\t\t\t   CodeModel::Default, OptLevel);\n+           Options, Reloc::PIC_,\n+           CodeModel::Default, OptLevel);\n   Target->addAnalysisPasses(*PM);\n \n   bool NoVerify = false;\n@@ -511,10 +511,10 @@ extern \"C\" LLVMValueRef LLVMRustConstSmallInt(LLVMTypeRef IntTy, unsigned N,\n   return LLVMConstInt(IntTy, (unsigned long long)N, SignExtend);\n }\n \n-extern \"C\" LLVMValueRef LLVMRustConstInt(LLVMTypeRef IntTy, \n-\t\t\t\t\t unsigned N_hi,\n-\t\t\t\t\t unsigned N_lo,\n-\t\t\t\t\t LLVMBool SignExtend) {\n+extern \"C\" LLVMValueRef LLVMRustConstInt(LLVMTypeRef IntTy,\n+           unsigned N_hi,\n+           unsigned N_lo,\n+           LLVMBool SignExtend) {\n   unsigned long long N = N_hi;\n   N <<= 32;\n   N |= N_lo;"}, {"sha": "00cabe90d840fccff6eb52dc8cff631f0bfa9ab0", "filename": "src/snapshots.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -151,7 +151,7 @@ S 2012-10-03 5585514\n   winnt-i386 25680d15a358cf4163e08f4e56e54fb497de5eb4\n \n S 2012-10-02 4d30b34\n-  macos-i386 2bcce3cde8a7e53df202972cda85b0b59ce4e50d \n+  macos-i386 2bcce3cde8a7e53df202972cda85b0b59ce4e50d\n   macos-x86_64 fc5592828392f9eabe8b51cc59639be6d709cc26\n   freebsd-x86_64 5e09dad0800f16f5d79286330bcb82b6d2b8782e\n   linux-i386 92fc541d4dde19fe2af5930d72a5a50ca67bad60"}, {"sha": "6e111381cba3423ddbf4754c5f813a90dac51f7b", "filename": "src/test/auxiliary/anon_trait_static_method_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fanon_trait_static_method_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fanon_trait_static_method_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fanon_trait_static_method_lib.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,4 +17,3 @@ pub impl Foo {\n         Foo { x: 3 }\n     }\n }\n-"}, {"sha": "b120a4d759f9037db721ed31c4dc613f674728e8", "filename": "src/test/auxiliary/cci_class_2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_class_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_class_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_class_2.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -27,4 +27,3 @@ pub mod kitties {\n         }\n     }\n }\n-"}, {"sha": "b09606ea1e21d13be6d24c81c8466ea3d3594725", "filename": "src/test/auxiliary/cci_class_6.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_class_6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_class_6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_class_6.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -31,4 +31,3 @@ pub mod kitties {\n         }\n     }\n }\n-"}, {"sha": "ae0407a5bed33bfb046c465d53bef302e9ecbb1d", "filename": "src/test/auxiliary/cci_class_cast.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_class_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_class_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_class_cast.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -56,5 +56,3 @@ pub mod kitty {\n         }\n     }\n }\n-\n-"}, {"sha": "f79227d87cd1f1138a55d9325e7b60df6015858c", "filename": "src/test/auxiliary/cci_no_inline_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_no_inline_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fcci_no_inline_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_no_inline_lib.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -19,4 +19,3 @@ pub fn iter(v: ~[uint], f: &fn(uint)) {\n         i += 1u;\n     }\n }\n-"}, {"sha": "058cb53f9186b73880d6bbea765518309de40811", "filename": "src/test/auxiliary/explicit_self_xcrate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fexplicit_self_xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fexplicit_self_xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fexplicit_self_xcrate.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -23,5 +23,3 @@ impl Foo for Bar {\n         io::println((*self).x);\n     }\n }\n-\n-"}, {"sha": "d04351203da36b33dc68d8dece88484559412d54", "filename": "src/test/auxiliary/extern_mod_ordering_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fextern_mod_ordering_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fextern_mod_ordering_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fextern_mod_ordering_lib.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -3,4 +3,3 @@\n pub mod extern_mod_ordering_lib {\n     pub fn f() {}\n }\n-"}, {"sha": "fe5b9e45593e387a735739173df7a0250d44124b", "filename": "src/test/auxiliary/foreign_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -15,4 +15,3 @@ pub mod rustrt {\n         pub fn rust_get_argc() -> libc::c_int;\n     }\n }\n-"}, {"sha": "4d98c4d9d2b54ed9b2342eb7af9f4d3d9c23f289", "filename": "src/test/auxiliary/impl_privacy_xc_1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -7,4 +7,3 @@ pub struct Fish {\n pub impl Fish {\n     fn swim(&self) {}\n }\n-"}, {"sha": "7ef36b1fb66272d40be8f9ed195d5ba81bfdadfa", "filename": "src/test/auxiliary/impl_privacy_xc_2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -11,5 +11,3 @@ mod unexported {\n         fn ne(&self, _: &Fish) -> bool { false }\n     }\n }\n-\n-"}, {"sha": "54bb39fd2dfad85c8f6dcf7d01d5b8393f511baa", "filename": "src/test/auxiliary/issue-2414-a.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue-2414-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue-2414-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2414-a.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ trait foo {\n impl foo for ~str {\n     fn foo(&self) {}\n }\n-"}, {"sha": "f4ef02a2b7f871f2b8ed91a3998107c0bcdd7abe", "filename": "src/test/auxiliary/issue-2414-b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@\n #[crate_type = \"lib\"];\n \n extern mod a;\n-"}, {"sha": "0e9cf39929f1c6fb10d580a2d0045a319aad5d27", "filename": "src/test/auxiliary/issue-2526.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2526.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -55,4 +55,3 @@ fn context_res() -> context_res {\n }\n \n pub type context = arc_destruct<context_res>;\n-"}, {"sha": "32283e5373ca6e82928881e9b1a5064a59672e1e", "filename": "src/test/auxiliary/issue_2316_b.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,5 +17,3 @@ pub mod cloth {\n         gingham, flannel, calico\n     }\n }\n-\n-"}, {"sha": "55de208cc905a002cc9f8cde6bb63651e3d93545", "filename": "src/test/auxiliary/issue_3136_a.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue_3136_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue_3136_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_3136_a.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,14 +12,13 @@ trait x {\n     fn use_x<T>(&self);\n }\n struct y(());\n-impl x for y { \n+impl x for y {\n     fn use_x<T>(&self) {\n         struct foo { //~ ERROR quux\n             i: ()\n         }\n         fn new_foo<T>(i: ()) -> foo {\n             foo { i: i }\n         }\n-    }   \n+    }\n }\n-"}, {"sha": "bb75758c741e98d0b7de6a4c22d6c6e9a2a05ce4", "filename": "src/test/auxiliary/issue_3882.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue_3882.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fissue_3882.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_3882.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,7 +12,7 @@ mod issue_3882 {\n     struct Completions {\n         len: libc::size_t,\n     }\n-    \n+\n     mod c {\n         extern {\n             fn linenoiseAddCompletion(lc: *mut Completions);"}, {"sha": "857593a84d2c01f342286357470bd0b0ea53a583", "filename": "src/test/auxiliary/moves_based_on_type_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fmoves_based_on_type_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fmoves_based_on_type_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmoves_based_on_type_lib.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -25,4 +25,3 @@ pub fn f() {\n     let y = x;\n     let z = y;\n }\n-"}, {"sha": "e0d2541dbe3d15ceccb4a14de66cc5d2b141601f", "filename": "src/test/auxiliary/newtype_struct_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fnewtype_struct_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fnewtype_struct_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fnewtype_struct_xc.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1,4 +1,3 @@\n #[crate_type=\"lib\"];\n \n pub struct Au(int);\n-"}, {"sha": "e4890f4fe2d8722b16cfd9f6f2ed4aaf314594c7", "filename": "src/test/auxiliary/pub_use_mods_xcrate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fpub_use_mods_xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fpub_use_mods_xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fpub_use_mods_xcrate.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,4 +18,3 @@ pub mod a {\n         }\n     }\n }\n-"}, {"sha": "a17a78bcea77399fa5de152b972aa0e15c116104", "filename": "src/test/auxiliary/static_fn_inline_xc_aux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fstatic_fn_inline_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fstatic_fn_inline_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstatic_fn_inline_xc_aux.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,4 +21,3 @@ pub mod float {\n         fn from_int2(n: int) -> float { return n as float;  }\n     }\n }\n-"}, {"sha": "8887cbee3fe2ba88ff2517cea9f6f4ec0cc64f2b", "filename": "src/test/auxiliary/struct_destructuring_cross_crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fstruct_destructuring_cross_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fstruct_destructuring_cross_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstruct_destructuring_cross_crate.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ pub struct S {\n     x: int,\n     y: int\n }\n-"}, {"sha": "7d6178db485f1dbc4c3123bdeccda0eef238ca67", "filename": "src/test/auxiliary/trait_inheritance_auto_xc_2_aux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_auto_xc_2_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_auto_xc_2_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_auto_xc_2_aux.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,5 +17,3 @@ pub struct A { x: int }\n impl Foo for A { fn f(&self) -> int { 10 } }\n impl Bar for A { fn g(&self) -> int { 20 } }\n impl Baz for A { fn h(&self) -> int { 30 } }\n-\n-"}, {"sha": "1fb0db25b31a881a1f27e6d3175af570132033f9", "filename": "src/test/auxiliary/trait_inheritance_overloading_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_overloading_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_overloading_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_overloading_xc.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -38,4 +38,3 @@ impl Eq for MyInt {\n impl MyNum for MyInt;\n \n fn mi(v: int) -> MyInt { MyInt { val: v } }\n-"}, {"sha": "05325c3b935c436cc7108497f889360396328351", "filename": "src/test/auxiliary/xc_private_method_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fxc_private_method_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fauxiliary%2Fxc_private_method_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fxc_private_method_lib.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -7,4 +7,3 @@ pub struct Foo {\n impl Foo {\n     fn new() -> Foo { Foo { x: 1 } }\n }\n-"}, {"sha": "6cda0a1945a0d4f8ecb3e7e3c724a5a43a2e03ca", "filename": "src/test/bench/msgsend-pipes-shared.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -104,7 +104,7 @@ fn main() {\n         ~[~\"\", ~\"10000\", ~\"4\"]\n     } else {\n         copy args\n-    };        \n+    };\n \n     debug!(\"%?\", args);\n     run(args);"}, {"sha": "a8fb29a47e2fb33537a2acdf9e02d40fdfdca07a", "filename": "src/test/bench/msgsend-pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -101,7 +101,7 @@ fn main() {\n         ~[~\"\", ~\"10000\", ~\"4\"]\n     } else {\n         copy args\n-    };        \n+    };\n \n     debug!(\"%?\", args);\n     run(args);"}, {"sha": "853b057277d8e9b06dfdefd8ffb4ee0816fba432", "filename": "src/test/bench/msgsend-ring-mutex-arcs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -72,7 +72,7 @@ fn main() {\n         ~[~\"\", ~\"10\", ~\"100\"]\n     } else {\n         copy args\n-    }; \n+    };\n \n     let num_tasks = uint::from_str(args[1]).get();\n     let msg_per_task = uint::from_str(args[2]).get();"}, {"sha": "1288ac290787af762625ba248b6ba293482e1ce2", "filename": "src/test/bench/msgsend-ring-pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -65,7 +65,7 @@ fn main() {\n         ~[~\"\", ~\"100\", ~\"1000\"]\n     } else {\n         copy args\n-    }; \n+    };\n \n     let num_tasks = uint::from_str(args[1]).get();\n     let msg_per_task = uint::from_str(args[2]).get();"}, {"sha": "2cf0fbfc397f342ba2c2733b7f58cda1e252ec07", "filename": "src/test/bench/msgsend-ring-rw-arcs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -73,7 +73,7 @@ fn main() {\n         ~[~\"\", ~\"10\", ~\"100\"]\n     } else {\n         copy args\n-    }; \n+    };\n \n     let num_tasks = uint::from_str(args[1]).get();\n     let msg_per_task = uint::from_str(args[2]).get();"}, {"sha": "09e663325ed49d99c681ce670ef24915d97a1c87", "filename": "src/test/bench/pingpong.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fpingpong.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fpingpong.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fpingpong.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -11,7 +11,7 @@\n // Compare bounded and unbounded protocol performance.\n \n // xfail-pretty\n- \n+\n extern mod std;\n \n use core::cell::Cell;"}, {"sha": "5d893d4ec07d08adb08357b463c9546347748b9f", "filename": "src/test/bench/shootout-chameneos-redux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -218,4 +218,3 @@ fn main() {\n     rendezvous(nn,\n         ~[Blue, Red, Yellow, Red, Yellow, Blue, Red, Yellow, Red, Blue]);\n }\n-"}, {"sha": "cb32e0e496e9539beb234b84e506797a9f28b143", "filename": "src/test/bench/shootout-fannkuch-redux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -92,4 +92,3 @@ fn main() {\n     let n: i32 = FromStr::from_str(os::args()[1]).get();\n     println(fmt!(\"Pfannkuchen(%d) = %d\", n as int, fannkuch_redux(n) as int));\n }\n-"}, {"sha": "d6a0f4b8b255e5ed8d47dd32c7af514f41a08cbd", "filename": "src/test/bench/shootout-fasta-redux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -201,4 +201,3 @@ fn main() {\n         fputc('\\n' as c_int, stdout);\n     }\n }\n-"}, {"sha": "d1f3dbf22ce8360b2756dfa584e1b2fa826f0a43", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -222,4 +222,3 @@ fn main() {\n       io::println(from_child[ii].recv());\n    }\n }\n-"}, {"sha": "1791af67ed0408497a314efb9cb06a3ab40c70ea", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -252,7 +252,7 @@ fn generate_frequencies(frequencies: &mut Table,\n                         mut input: &[u8],\n                         frame: i32) {\n     let mut code = Code(0);\n-    \n+\n     // Pull first frame.\n     for (frame as uint).times {\n         code = code.push_char(input[0]);\n@@ -313,4 +313,3 @@ fn main() {\n         print_occurrences(frequencies, occurrence);\n     }\n }\n-"}, {"sha": "7d2b25792ec571ff7f48e5ffddc4bf3bfb7cefca", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -57,4 +57,3 @@ fn main() {\n         }\n     }\n }\n-"}, {"sha": "cb7fa969be7a7575afeedca7a53d54b56ea2c624", "filename": "src/test/bench/shootout-pidigits.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-pidigits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-pidigits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pidigits.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -175,4 +175,3 @@ fn main() {\n     let n: u32 = FromStr::from_str(os::args()[1]).get();\n     pidigits(n);\n }\n-"}, {"sha": "a9cb3c7636a9b4fd24ad588ab5c3241a60c7e19d", "filename": "src/test/bench/shootout-reverse-complement.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -152,4 +152,3 @@ fn main() {\n         fwrite(transmute(out.unsafe_ref(0)), 1, pos as size_t, stdout);\n     }\n }\n-"}, {"sha": "8afddd3a31e9145966169eab96e6b2072a45a5d5", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -274,4 +274,3 @@ fn main() {\n     sudoku.solve();\n     sudoku.write(io::stdout());\n }\n-"}, {"sha": "2b0c3dbf8e80f3acd03df9e9b43c41dbfd46f9c1", "filename": "src/test/compile-fail/alt-tag-nullary.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Falt-tag-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Falt-tag-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falt-tag-nullary.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ enum a { A, }\n enum b { B, }\n \n fn main() { let x: a = A; match x { B => { } } }\n-"}, {"sha": "a129ff19ac63e33ef21781ce9423f47334c368a7", "filename": "src/test/compile-fail/alt-tag-unary.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Falt-tag-unary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Falt-tag-unary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falt-tag-unary.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ enum a { A(int), }\n enum b { B(int), }\n \n fn main() { let x: a = A(0); match x { B(y) => { } } }\n-"}, {"sha": "894b71357b75a424303759dfe0fdb6013de52dd0", "filename": "src/test/compile-fail/auto-ref-borrowck-failure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fauto-ref-borrowck-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fauto-ref-borrowck-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauto-ref-borrowck-failure.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -28,4 +28,3 @@ fn main() {\n     let x = Foo { x: 3 };\n     x.printme();    //~ ERROR illegal borrow\n }\n-"}, {"sha": "89ad7b4245a0747f0730e74f15951c7280a54a98", "filename": "src/test/compile-fail/bogus-tag.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,4 +21,3 @@ fn main() {\n       hsl(h, s, l) => { debug!(\"hsl\"); }\n     }\n }\n-"}, {"sha": "a284cd5b4a791e99ba426895f1bd28a5554ac3bc", "filename": "src/test/compile-fail/borrowck-assign-comp-idx.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp-idx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp-idx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp-idx.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -45,4 +45,3 @@ fn c() {\n \n fn main() {\n }\n-"}, {"sha": "eb832fe738da2f0b7fa55717e02eab389c1b7ae4", "filename": "src/test/compile-fail/borrowck-assign-comp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-comp.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -42,4 +42,3 @@ fn d() {\n \n fn main() {\n }\n-"}, {"sha": "f2c6ae98819e27c23d43548894ce8b3b6a670b73", "filename": "src/test/compile-fail/borrowck-call-method-from-mut-aliasable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-call-method-from-mut-aliasable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-call-method-from-mut-aliasable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-call-method-from-mut-aliasable.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -38,4 +38,3 @@ fn c(x: &const Foo) {\n \n fn main() {\n }\n-"}, {"sha": "1c2bd8dc8e10f8f1a510e6fed1e6adb0f64b46c7", "filename": "src/test/compile-fail/borrowck-loan-local-as-both-mut-and-imm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-local-as-both-mut-and-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-local-as-both-mut-and-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-local-as-both-mut-and-imm.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -30,6 +30,6 @@ use core::either::{Either, Left, Right};\n         let y: &Either<int, float> = &x;\n         let z: &mut Either<int, float> = &mut x; //~ ERROR conflicts with prior loan\n         *z = *y;\n-    } \n+    }\n \n     fn main() {}"}, {"sha": "21bb7434f8d3368ed821c9c3f6dde98567cebe42", "filename": "src/test/compile-fail/borrowck-loan-rcvr-overloaded-op.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct Point { \n+struct Point {\n     x: int,\n     y: int,\n }\n@@ -56,4 +56,3 @@ fn c() {\n \n fn main() {\n }\n-"}, {"sha": "36007abf05ea3667e5e6e75f02929c73fd0eed0b", "filename": "src/test/compile-fail/borrowck-loan-rcvr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -63,4 +63,3 @@ fn c() {\n \n fn main() {\n }\n-"}, {"sha": "e8ed362176f57cd4ab2f9fd1595bc3786bbc9b1d", "filename": "src/test/compile-fail/borrowck-mut-boxed-vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-boxed-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-boxed-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-boxed-vec.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ fn main() {\n         v[1] = 4;\n     }\n }\n-"}, {"sha": "84acd0df20b75fd505a62a86450d6a1e1ed35a0e", "filename": "src/test/compile-fail/borrowck-ref-into-rvalue.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-ref-into-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-ref-into-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-ref-into-rvalue.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -13,9 +13,8 @@ fn main() {\n     match Some(~\"Hello\") { //~ ERROR illegal borrow\n         Some(ref m) => {\n             msg = m;\n-        },  \n+        },\n         None => { fail!() }\n-    }   \n+    }\n     io::println(*msg);\n }\n-"}, {"sha": "97414ff5e786c391d70334424166c14e6eacf0c0", "filename": "src/test/compile-fail/borrowck-uniq-via-box.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-uniq-via-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-uniq-via-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-uniq-via-box.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -52,4 +52,3 @@ fn box_imm_recs(v: @Outer) {\n \n fn main() {\n }\n-"}, {"sha": "805b162f1d3632bf108f18959679a9fb53fa584a", "filename": "src/test/compile-fail/borrowck-vec-pattern-loan-from-mut.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-loan-from-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-loan-from-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-loan-from-mut.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -9,4 +9,3 @@ fn a() {\n }\n \n fn main() {}\n-"}, {"sha": "eef99aafd687c2ced076b97eee6a1e100d53d700", "filename": "src/test/compile-fail/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,4 +18,3 @@ fn b() {\n }\n \n fn main() {}\n-"}, {"sha": "f9e6bc1b22e8c9ef5bd2ed3720ccc86895aaff93", "filename": "src/test/compile-fail/borrowck-wg-borrow-mut-to-imm-fail-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail-2.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -3,4 +3,3 @@ fn main() {\n     let _x = &mut *b;   //~ NOTE prior loan as mutable granted here\n     let _y = &mut *b;   //~ ERROR loan of dereference of mutable ~ pointer as mutable conflicts with prior loan\n }\n-"}, {"sha": "6c82b25a6a1403a3bcedc486a08fb7df45edaf38", "filename": "src/test/compile-fail/borrowck-wg-borrow-mut-to-imm-fail-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail-3.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -5,4 +5,3 @@ fn main() {\n     let mut d = /*move*/ a; //~ ERROR moving out of mutable local variable prohibited due to outstanding loan\n     *d += 1;\n }\n-"}, {"sha": "dc453d981934d41acae3674a8dff0a4c2730c662", "filename": "src/test/compile-fail/borrowck-wg-borrow-mut-to-imm-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-borrow-mut-to-imm-fail.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -4,4 +4,3 @@ fn main() {\n     let mut y = /*move*/ b; //~ ERROR moving out of mutable local variable prohibited\n     *y += 1;\n }\n-"}, {"sha": "0ede523daa4c68e2fcac62a1d2eb9d7f4b92ca36", "filename": "src/test/compile-fail/borrowck-wg-move-base-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-move-base-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-move-base-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-wg-move-base-2.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -7,5 +7,3 @@ fn foo(x: &mut int) {\n \n fn main() {\n }\n-\n-"}, {"sha": "1efed154286ec6ea83761309d5f6f7ea41770849", "filename": "src/test/compile-fail/by-move-pattern-binding.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fby-move-pattern-binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fby-move-pattern-binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fby-move-pattern-binding.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ fn main() {\n         &Bar(ref identifier) => io::println(*identifier)\n     };\n }\n-    "}, {"sha": "97f6149b162fcedf7b8f935e0e30333d55e17515", "filename": "src/test/compile-fail/dead-code-ret.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -15,4 +15,3 @@\n fn f(caller: str) { debug!(caller); }\n \n fn main() { return f(\"main\"); debug!(\"Paul is dead\"); }\n-"}, {"sha": "699baad4d4308b6f9ceb45d580fd387e8c4acc1d", "filename": "src/test/compile-fail/does-nothing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -1,3 +1,2 @@\n // error-pattern: unresolved name: `this_does_nothing_what_the`.\n fn main() { debug!(\"doing\"); this_does_nothing_what_the; debug!(\"boing\"); }\n-"}, {"sha": "b2f87686ac6644e2177b336f7dc742fc8dfc9ef1", "filename": "src/test/compile-fail/drop-on-non-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -19,5 +19,3 @@ impl Drop for Foo {   //~ ERROR the Drop trait may only be implemented\n \n fn main() {\n }\n-\n-"}, {"sha": "24fedaaabe3a0315120580b36883307cab0fd25b", "filename": "src/test/compile-fail/explicit-call-to-dtor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-dtor.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ fn main() {\n     let x = Foo { x: 3 };\n     x.finalize();   //~ ERROR explicit call to destructor\n }\n-"}, {"sha": "fd49889a3f796d2dfeb87a52a4e87caabf8c5571", "filename": "src/test/compile-fail/explicit-call-to-supertrait-dtor.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-supertrait-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-supertrait-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-supertrait-dtor.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -31,5 +31,3 @@ impl Bar for Foo {\n fn main() {\n     let x = Foo { x: 3 };\n }\n-\n-"}, {"sha": "48dbdd86b11f9ed0522646770e0690d83fa391e4", "filename": "src/test/compile-fail/float-literal-inference-restrictions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ffloat-literal-inference-restrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ffloat-literal-inference-restrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffloat-literal-inference-restrictions.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,4 +12,3 @@ fn main() {\n     let x: f32 = 1; //~ ERROR mismatched types\n     let y: f32 = 1f; //~ ERROR mismatched types\n }\n-"}, {"sha": "ed8b8088ee41a11bda2fb0f9b5c9dce7a0f8f785", "filename": "src/test/compile-fail/foreign-unsafe-fn-called.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fforeign-unsafe-fn-called.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fforeign-unsafe-fn-called.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fforeign-unsafe-fn-called.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,4 +21,3 @@ fn main() {\n     test::free();\n     //~^ ERROR access to unsafe function requires unsafe function or block\n }\n-"}, {"sha": "3633267d02c40a68005ca5c0dca2518855d1cc81", "filename": "src/test/compile-fail/foreign-unsafe-fn.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fforeign-unsafe-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fforeign-unsafe-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fforeign-unsafe-fn.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,5 +21,3 @@ fn main() {\n     let x = test::free;\n     //~^ ERROR access to unsafe function requires unsafe function or block\n }\n-\n-"}, {"sha": "a295e8eb7edb01ac0cee3df173d8c09c3274498a", "filename": "src/test/compile-fail/issue-1451.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -30,4 +30,3 @@ fn main() {\n     fooT(T {f: x});\n     fooT(T {f: bar});\n }\n-"}, {"sha": "e57d4f0917579964d2a84a96af2ed4abebd6f787", "filename": "src/test/compile-fail/issue-2951.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-2951.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-2951.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2951.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -15,5 +15,4 @@ fn foo<T, U>(x: T, y: U) {\n }\n \n fn main() {\n-    \n }"}, {"sha": "635d0aa3df1e57653ed411a9bdd1218c5a135053", "filename": "src/test/compile-fail/issue-3044.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,4 +17,3 @@ fn main() {\n     //\n     // the first error is, um, non-ideal.\n }\n-"}, {"sha": "eb58cf3e13b36f47766466b0e8e670d6179c541a", "filename": "src/test/compile-fail/issue-3096-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-3096-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-3096-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3096-2.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-enum bottom { } \n+enum bottom { }\n \n fn main() {\n     let x = ptr::to_unsafe_ptr(&()) as *bottom;"}, {"sha": "d3016f893b467443dee2f141c624e9581c58df32", "filename": "src/test/compile-fail/issue-3991.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-3991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-3991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3991.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,11 +12,11 @@\n struct HasNested {\n     mut nest: ~[~[int]],\n }\n-    \n+\n impl HasNested {\n     fn method_push_local(&self) {\n         self.nest[0].push(0);\n     }\n }\n-    \n+\n fn main() {}"}, {"sha": "e76d211dedace5a289f77f9509d4682021568ccd", "filename": "src/test/compile-fail/issue-4265.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-4265.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-4265.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4265.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -11,12 +11,12 @@\n struct Foo {\n       baz: uint\n }\n-    \n+\n impl Foo {\n     fn bar() {\n         Foo { baz: 0 }.bar();\n     }\n-    \n+\n     fn bar() { //~ ERROR duplicate definition of value bar\n     }\n }"}, {"sha": "f4e571715997afb997c9abc2e848044e3d502337", "filename": "src/test/compile-fail/issue-4366.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-4366.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-4366.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4366.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -37,4 +37,3 @@ mod m1 {\n fn main() {\n     foo(); //~ ERROR: unresolved name: `foo`\n }\n-"}, {"sha": "700d8a61c3a392ac095a118ff31d82c33321087a", "filename": "src/test/compile-fail/issue-4968.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ static A: (int,int) = (4,2);\n fn main() {\n     match 42 { A => () } //~ ERROR mismatched types: expected `<VI0>` but found `(int,int)` (expected integral variable but found tuple)\n }\n-"}, {"sha": "faad36a15d2fac915068e5218fc50d9b0e7ad103", "filename": "src/test/compile-fail/kindck-destructor-owned.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -9,4 +9,3 @@ impl Drop for Foo { //~ ERROR cannot implement a destructor on a struct that is\n }\n \n fn main() { }\n-"}, {"sha": "89b99fcebca5d16a1b790db3dadc2a695a564a35", "filename": "src/test/compile-fail/lint-default-methods.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -5,4 +5,3 @@ trait Foo { //~ ERROR default methods are experimental\n }\n \n fn main() {}\n-"}, {"sha": "2eb794fd1c2961604823038c4d7fc30c801c254a", "filename": "src/test/compile-fail/lint-type-limits.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -32,4 +32,3 @@ fn qux() {\n         i += 1;\n     }\n }\n-"}, {"sha": "22b1b5edbac70795ba4118a11c9e6075f024b34c", "filename": "src/test/compile-fail/liveness-if-no-else.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-if-no-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-if-no-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-if-no-else.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -11,6 +11,6 @@\n fn foo(x: int) { debug!(x); }\n \n fn main() {\n-\tlet x: int; if 1 > 2 { x = 10; }\n-\tfoo(x); //~ ERROR use of possibly uninitialized variable: `x`\n+    let x: int; if 1 > 2 { x = 10; }\n+    foo(x); //~ ERROR use of possibly uninitialized variable: `x`\n }"}, {"sha": "6558bc579685a549b770a610c1dd09fa05caf1b2", "filename": "src/test/compile-fail/liveness-return.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-return.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n fn f() -> int {\n-\tlet x: int;\n-\treturn x; //~ ERROR use of possibly uninitialized variable: `x`\n+    let x: int;\n+    return x; //~ ERROR use of possibly uninitialized variable: `x`\n }\n \n fn main() { f(); }"}, {"sha": "a828b1d6b9f52e0b1850a1d1c2a3f6a26f787992", "filename": "src/test/compile-fail/liveness-uninit-after-item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-uninit-after-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-uninit-after-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-uninit-after-item.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -13,4 +13,3 @@ fn main() {\n     fn baz(_x: int) { }\n     baz(bar); //~ ERROR use of possibly uninitialized variable: `bar`\n }\n-"}, {"sha": "a360f8e85a67d902c9c8e6c84794565199505604", "filename": "src/test/compile-fail/liveness-uninit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fliveness-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-uninit.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -11,6 +11,6 @@\n fn foo(x: int) { debug!(x); }\n \n fn main() {\n-\tlet x: int;\n-\tfoo(x); //~ ERROR use of possibly uninitialized variable: `x`\n+    let x: int;\n+    foo(x); //~ ERROR use of possibly uninitialized variable: `x`\n }"}, {"sha": "95250e36b8685a64ce3fcf84082d8ddc902d82bc", "filename": "src/test/compile-fail/macro-with-seps-err-msg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -13,5 +13,3 @@\n fn main() {\n     globnar::brotz!();\n }\n-\n-"}, {"sha": "eb27d51061fcca5cf6eb9cf8aabab7ee14860345", "filename": "src/test/compile-fail/missing-derivable-attr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmissing-derivable-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmissing-derivable-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-derivable-attr.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -24,4 +24,3 @@ impl MyEq for A;  //~ ERROR missing method\n \n fn main() {\n }\n-"}, {"sha": "1dc817cc6e6be8f24df4d48c59aa2a4be38107b1", "filename": "src/test/compile-fail/missing-return.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmissing-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmissing-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-return.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -13,4 +13,3 @@\n fn f() -> int { }\n \n fn main() { f(); }\n-"}, {"sha": "67eb06ab424c56f0a1923ec7dd14f12e6ba9e0e4", "filename": "src/test/compile-fail/moves-based-on-type-block-bad.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -24,4 +24,3 @@ fn main() {\n         }\n     }\n }\n-"}, {"sha": "6dce011ddc8960aa91cada6c5e99dcdc57cfe6b6", "filename": "src/test/compile-fail/moves-based-on-type-capture-clause-bad.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -5,4 +5,3 @@ fn main() {\n     }\n     io::println(x); //~ ERROR use of moved value\n }\n-"}, {"sha": "2b9291ce3284c47ca10658f2ee261fe790c3413e", "filename": "src/test/compile-fail/moves-based-on-type-cyclic-types-issue-4821.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-cyclic-types-issue-4821.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-cyclic-types-issue-4821.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-cyclic-types-issue-4821.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -29,4 +29,3 @@ fn consume(v: ~List) -> int {\n }\n \n fn main() {}\n-"}, {"sha": "2c8c98ad5d6de21ae9422d52797b01615a65a661", "filename": "src/test/compile-fail/no-capture-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -16,7 +16,7 @@ use std::arc;\n fn main() {\n     let v = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n     let arc_v = arc::ARC(v);\n-    \n+\n     do task::spawn() {\n         let v = *arc::get(&arc_v);\n         assert!(v[3] == 4);"}, {"sha": "95428568e4c35f9ed5d7d581e2cffa1163797893", "filename": "src/test/compile-fail/noexporttypeexe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ fn main() {\n   let x: int = noexporttypelib::foo();\n     //~^ ERROR expected `int` but found `core::option::Option<int>`\n }\n-"}, {"sha": "34fe6b0f678701f63572d58197a09cd7ab84af02", "filename": "src/test/compile-fail/non-exhaustive-match-nested.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-match-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-match-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-exhaustive-match-nested.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ fn main() {\n       b => { fail!(~\"goodbye\"); }\n     }\n }\n-"}, {"sha": "178c04dfc793c6b97a6b39f8d1c0bc23564f9ab8", "filename": "src/test/compile-fail/once-fn-subtyping.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fonce-fn-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fonce-fn-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fonce-fn-subtyping.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ fn main() {\n     let h: &fn() = ||();\n     let i: &once fn() = h;  // ok\n }\n-"}, {"sha": "a6728f82ec3b300ca92e749354f295c2503801a3", "filename": "src/test/compile-fail/private-impl-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-impl-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-impl-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-impl-method.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ fn main() {\n     let s = a::Foo { x: 1 };\n     s.foo();    //~ ERROR method `foo` is private\n }\n-"}, {"sha": "8776739db2d7629ce5ed84215afd739f591c4ea5", "filename": "src/test/compile-fail/private-item-simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-item-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-item-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-item-simple.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -15,4 +15,3 @@ mod a {\n fn main() {\n     a::f(); //~ ERROR unresolved name\n }\n-"}, {"sha": "bc27027e886ba5e8393f4b0c476c01e8754c5104", "filename": "src/test/compile-fail/private-method-inherited.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-method-inherited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-method-inherited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-method-inherited.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,4 +12,3 @@ fn main() {\n     let x = a::Foo;\n     x.f();  //~ ERROR method `f` is private\n }\n-"}, {"sha": "7ab28d72965fa4e49d0a6e7354605752f9c2d78b", "filename": "src/test/compile-fail/private-struct-field-ctor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-ctor.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,4 +17,3 @@ mod a {\n fn main() {\n     let s = a::Foo { x: 1 };    //~ ERROR field `x` is private\n }\n-"}, {"sha": "6f524a8eaa40119dbc634b498a7937b68dbd4ae8", "filename": "src/test/compile-fail/private-struct-field-pattern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-pattern.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -25,4 +25,3 @@ fn main() {\n         Foo { x: _ } => {}  //~ ERROR field `x` is private\n     }\n }\n-"}, {"sha": "4710d9dee452126d4f86696ce3baaaea9f363a57", "filename": "src/test/compile-fail/qquote-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -65,4 +65,3 @@ fn main() {\n fn check_pp<T>(expr: T, f: &fn(pprust::ps, T), expect: str) {\n     fail!();\n }\n-"}, {"sha": "d3773256105981f028149b9fc4a58708b603fcba", "filename": "src/test/compile-fail/qquote-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -60,4 +60,3 @@ fn main() {\n fn check_pp<T>(expr: T, f: &fn(pprust::ps, T), expect: str) {\n     fail!();\n }\n-"}, {"sha": "957925709e179da65800a0b9bbffa6b53dcd17f7", "filename": "src/test/compile-fail/refutable-pattern-in-fn-arg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Frefutable-pattern-in-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Frefutable-pattern-in-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frefutable-pattern-in-fn-arg.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,4 +12,3 @@ fn main() {\n     let f = |3: int| io::println(\"hello\");  //~ ERROR refutable pattern\n     f(4);\n }\n-"}, {"sha": "f96ef639e756c0ecd12458fb07a4be87eaa08cf5", "filename": "src/test/compile-fail/regions-addr-of-self.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-addr-of-self.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -35,4 +35,3 @@ fn main() {\n     d.chase_cat();\n     debug!(\"cats_chased: %u\", d.cats_chased);\n }\n-"}, {"sha": "6ee0216655e92e7ff4defdf3dd4988f83b4f0270", "filename": "src/test/compile-fail/regions-infer-borrow-scope-too-big.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -24,4 +24,3 @@ fn foo(p: @point) -> &int {\n }\n \n fn main() {}\n-"}, {"sha": "602f5dc6983c25adff6acd19c5844a7e1c1d0c64", "filename": "src/test/compile-fail/regions-infer-borrow-scope-within-loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -15,8 +15,8 @@ fn foo(cond: &fn() -> bool, box: &fn() -> @int) {\n     loop {\n         let x = box();\n \n-\t// Here we complain because the resulting region\n-\t// of this borrow is the fn body as a whole.\n+        // Here we complain because the resulting region\n+        // of this borrow is the fn body as a whole.\n         y = borrow(x); //~ ERROR illegal borrow: cannot root managed value long enough\n \n         assert!(*x == *y);"}, {"sha": "cf7cb175bb8a49e47bef08e70b13f6e55ad1f83a", "filename": "src/test/compile-fail/regions-ret.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fregions-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-ret.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ fn f<'a>(_x : &'a int) -> &'a int {\n \n fn main() {\n }\n-"}, {"sha": "e1e1e2313f42a7f94eda36f197f3fe5399c06c3a", "filename": "src/test/compile-fail/repeat-to-run-dtor-twice.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -26,4 +26,3 @@ fn main() {\n     let a = Foo { x: 3 };\n     let _ = [ a, ..5 ];     //~ ERROR copying a value of non-copyable type\n }\n-"}, {"sha": "0fd82b5ace3a7f12aaf10ccd1283e989f2f94ea7", "filename": "src/test/compile-fail/static-method-privacy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fstatic-method-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fstatic-method-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-method-privacy.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,4 +8,3 @@ mod a {\n fn main() {\n     let _ = a::S::new();    //~ ERROR function `new` is private\n }\n-"}, {"sha": "ada3aebb2f420fe8cd0eb1bfb3bad3007427f80a", "filename": "src/test/compile-fail/static-region-bound.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fstatic-region-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fstatic-region-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-region-bound.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -6,4 +6,3 @@ fn main() {\n     let x = &3;\n     f(x);   //~ ERROR instantiating a type parameter with an incompatible type\n }\n-"}, {"sha": "91709e2ea7da086950134346f115b3f4d30a0f8e", "filename": "src/test/compile-fail/struct-like-enum-nonexhaustive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fstruct-like-enum-nonexhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fstruct-like-enum-nonexhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-like-enum-nonexhaustive.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,5 +20,3 @@ fn main() {\n         B { x: None } => {}\n     }\n }\n-\n-"}, {"sha": "f1064a62905619b49794bd50ed8b924944ac44cb", "filename": "src/test/compile-fail/super-at-top-level.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsuper-at-top-level.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -2,6 +2,4 @@ use super::f;   //~ ERROR unresolved name\n //~^ ERROR failed to resolve import\n \n fn main() {\n-    \n }\n-"}, {"sha": "54fa62f7977669ca05afd85a1fa5f6f97176ec37", "filename": "src/test/compile-fail/trait-impl-method-mismatch.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftrait-impl-method-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftrait-impl-method-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-impl-method-mismatch.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -19,7 +19,3 @@ impl Mumbo for uint {\n }\n \n fn main() {}\n-\n-\n-\n-"}, {"sha": "5968c296e1382b3599a7015ca823e05a68a64015", "filename": "src/test/compile-fail/trait-inheritance-missing-requirement.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftrait-inheritance-missing-requirement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftrait-inheritance-missing-requirement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-inheritance-missing-requirement.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -30,4 +30,3 @@ impl Bar for A {\n \n fn main() {\n }\n-"}, {"sha": "de28a06ababcba40b70ed578b6caa8482740d263", "filename": "src/test/compile-fail/tuple-struct-nonexhaustive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftuple-struct-nonexhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftuple-struct-nonexhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftuple-struct-nonexhaustive.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,5 +17,3 @@ fn main() {\n         Foo(2, b) => io::println(fmt!(\"%d\", b))\n     }\n }\n-\n-"}, {"sha": "d92aa8d640ab5a849cf74e51fb8101e73ec533be", "filename": "src/test/compile-fail/tutorial-suffix-inference-test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftutorial-suffix-inference-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Ftutorial-suffix-inference-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftutorial-suffix-inference-test.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,11 +22,11 @@ fn main() {\n     //~^ ERROR mismatched types: expected `u16` but found `i32`\n \n     let a = 3i;\n-    \n+\n     fn identity_i(n: int) -> int { n }\n \n     identity_i(a); // ok\n-    identity_u16(a); \n+    identity_u16(a);\n     //~^ ERROR mismatched types: expected `u16` but found `int`\n \n }"}, {"sha": "95945b0b5baa49598c52604eed56e18b4329334e", "filename": "src/test/compile-fail/unique-object-noncopyable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -31,4 +31,3 @@ fn main() {\n     let y: ~Foo = x as ~Foo;\n     let _z = copy y; //~ ERROR copying a value of non-copyable type\n }\n-"}, {"sha": "3d176bb339d83134466bdb1644afa868c2f3c54e", "filename": "src/test/compile-fail/use-after-move-based-on-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fuse-after-move-based-on-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fuse-after-move-based-on-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-based-on-type.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -13,4 +13,3 @@ fn main() {\n     let _y = x;\n     io::println(x); //~ ERROR use of moved value\n }\n-"}, {"sha": "627b8924b6707426fd37ba715a05a5e8665a3c9e", "filename": "src/test/compile-fail/use-after-move-self-based-on-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -19,4 +19,3 @@ fn main() {\n     let x = S { x: 1 };\n     io::println(x.foo().to_str());\n }\n-"}, {"sha": "11f37df45417cc84c05f083a9c2235e408545dc0", "filename": "src/test/compile-fail/use-after-move-self.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -15,4 +15,3 @@ fn main() {\n     let x = S { x: ~1 };\n     io::println(x.foo().to_str());\n }\n-"}, {"sha": "023be703cca778fef3f19cac18aac1011bc7de92", "filename": "src/test/compile-fail/view-items-at-top.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -19,4 +19,3 @@ use std::net;    //~ ERROR view items must be declared at the top\n \n fn main() {\n }\n-"}, {"sha": "ecab746373a98134fe675ed547140744dd9b4bf8", "filename": "src/test/compile-fail/while-type-error.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fwhile-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fwhile-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhile-type-error.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -11,4 +11,3 @@\n // error-pattern: mismatched types\n \n fn main() { while main { } }\n-"}, {"sha": "e8777a0a9f256ba5d866b225383b7ed4ed47b98a", "filename": "src/test/compile-fail/xc-private-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fxc-private-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fcompile-fail%2Fxc-private-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fxc-private-method.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -6,4 +6,3 @@ extern mod xc_private_method_lib;\n fn main() {\n     let _ = xc_private_method_lib::Foo::new();  //~ ERROR function `new` is private\n }\n-"}, {"sha": "45e242c0ca04934ae6ab60e646bd1800e22292af", "filename": "src/test/pretty/doc-comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fpretty%2Fdoc-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Fpretty%2Fdoc-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdoc-comments.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,7 +22,7 @@ fn b() {\n //////////////////////////////////\n // some single-line non-doc comment preceded by a separator\n \n-//////////////////////////////////           \n+//////////////////////////////////\n /// some single-line outer-docs preceded by a separator\n /// (and trailing whitespaces)\n fn c() { }"}, {"sha": "f715e21f781bd0c515dfd61f94e3c86d8baea986", "filename": "src/test/run-fail/assert-as-macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-as-macro.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -3,4 +3,3 @@\n fn main() {\n     assert!(1 == 2);\n }\n-"}, {"sha": "b239bfc3b3142cedea210a224b916861b4615a1a", "filename": "src/test/run-fail/borrowck-wg-fail-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-3.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -5,4 +5,3 @@ fn main() {\n     let y: &mut int = x;\n     *x = 5;\n }\n-"}, {"sha": "93e7f9275b6cfae6acdd2caf1b8d67cacce12727", "filename": "src/test/run-fail/borrowck-wg-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -10,4 +10,3 @@ fn main() {\n     let x = @mut 3;\n     f(x, x);\n }\n-"}, {"sha": "bfbad0b5aea627c4fd2d1a9b4da498446b94ac58", "filename": "src/test/run-fail/unwind-resource-fail3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,7 +14,7 @@ struct faily_box {\n     i: @int\n }\n // What happens to the box pointer owned by this class?\n- \n+\n fn faily_box(i: @int) -> faily_box { faily_box { i: i } }\n \n #[unsafe_destructor]"}, {"sha": "284195f3f04ec78424146361f82a7457ae775b03", "filename": "src/test/run-pass-fulldeps/qquote.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -85,4 +85,3 @@ fn check_pp<T>(cx: fake_ext_ctxt,\n         assert!(s == expect);\n     }\n }\n-"}, {"sha": "3ec54955229d3e5e98d0c2cde5dac0d04222ced0", "filename": "src/test/run-pass-fulldeps/quote-tokens.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -27,4 +27,3 @@ fn syntax_extension(ext_cx: @ext_ctxt) {\n \n fn main() {\n }\n-"}, {"sha": "91bbbf5c0a0df567e7db0670f8a78baf5a5afdb6", "filename": "src/test/run-pass/anon-trait-static-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fanon-trait-static-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fanon-trait-static-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-trait-static-method.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ pub fn main() {\n     let x = Foo::new();\n     io::println(x.x.to_str());\n }\n-"}, {"sha": "1baeca00083fd660a49fc1697e2d464581ed09de", "filename": "src/test/run-pass/anon_trait_static_method_exe.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fanon_trait_static_method_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fanon_trait_static_method_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon_trait_static_method_exe.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,6 +18,3 @@ pub fn main() {\n     let x = Foo::new();\n     io::println(x.x.to_str());\n }\n-\n-\n-"}, {"sha": "a9fca0ccb158999e9f3c148de9d18507b3130f05", "filename": "src/test/run-pass/auto-ref-newtype.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fauto-ref-newtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fauto-ref-newtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-ref-newtype.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,4 +21,3 @@ pub fn main() {\n     let m = Foo(3);\n     assert!(m.len() == 3);\n }\n-"}, {"sha": "ee250b972190c1251ba126d1aa2c19f7747f11da", "filename": "src/test/run-pass/auto-ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fauto-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fauto-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-ref.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -26,4 +26,3 @@ pub fn main() {\n     let x = Foo { x: 3 };\n     x.printme();\n }\n-"}, {"sha": "2bc6df4703042216f8c57b51a0efe14a5dd7ed1e", "filename": "src/test/run-pass/autoderef-and-borrow-method-receiver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fautoderef-and-borrow-method-receiver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fautoderef-and-borrow-method-receiver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-and-borrow-method-receiver.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ fn g(x: &mut Foo) {\n \n pub fn main() {\n }\n-"}, {"sha": "6208a9c3cc3e4d7c126ac6f8f82168fb2b52ba1f", "filename": "src/test/run-pass/bare-static-string.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fbare-static-string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fbare-static-string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbare-static-string.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,4 +12,3 @@ pub fn main() {\n     let x: &'static str = \"foo\";\n     io::println(x);\n }\n-"}, {"sha": "e755a34f0589e688feefffaeab3291d54bd2ffd5", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -104,7 +104,7 @@ fn p(x: int, y: int) -> p {\n fn test_class() {\n   let mut q = p(1, 2);\n   let mut r = p(1, 2);\n-  \n+\n   unsafe {\n   error!(\"q = %x, r = %x\",\n          (::core::cast::transmute::<*p, uint>(&q)),"}, {"sha": "ad53bd22754517437c8e1271b230987670ae089f", "filename": "src/test/run-pass/block-arg-in-parentheses.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fblock-arg-in-parentheses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fblock-arg-in-parentheses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-in-parentheses.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -33,4 +33,3 @@ pub fn main() {\n     assert!(w_paren2(~[0, 1, 2, 3]) == -4);\n     assert!(w_ret(~[0, 1, 2, 3]) == -4);\n }\n-"}, {"sha": "fb4316ca1f52050dee404005899283a9b48adebb", "filename": "src/test/run-pass/borrow-by-val-method-receiver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ pub fn main() {\n     let items = ~[ 3, 5, 1, 2, 4 ];\n     items.foo();\n }\n-"}, {"sha": "f28b0e4c4ec13f80c8d63e13e84e14fec2927003", "filename": "src/test/run-pass/borrowck-wg-simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fborrowck-wg-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fborrowck-wg-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-wg-simple.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -6,4 +6,3 @@ pub fn main() {\n     let x = @mut 3;\n     f(x);\n }\n-"}, {"sha": "1313a17f81db08b27caf4a373deb9384fa3d7d0d", "filename": "src/test/run-pass/boxed-trait-with-vstore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ pub fn main() {\n     let x = @3 as @Foo;\n     x.foo();\n }\n-"}, {"sha": "a182dcf2ca0b2352d8ec64f2e995b731bfc03225", "filename": "src/test/run-pass/break.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fbreak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fbreak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbreak.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n pub fn main() {\n     let mut i = 0;\n     while i < 20 { i += 1; if i == 10 { break; } }\n@@ -22,8 +20,8 @@ pub fn main() {\n     i = 0;\n     while i < 10 { i += 1; if i % 2 == 0 { loop; } assert!((i % 2 != 0)); }\n     i = 0;\n-    loop { \n-        i += 1; if i % 2 == 0 { loop; } assert!((i % 2 != 0)); \n+    loop {\n+        i += 1; if i % 2 == 0 { loop; } assert!((i % 2 != 0));\n         if i >= 10 { break; }\n     }\n     for vec::each(~[1, 2, 3, 4, 5, 6]) |x| {"}, {"sha": "76f4e3b68f7c2c386403e20378efd41a67fb1762", "filename": "src/test/run-pass/class-cast-to-trait-cross-crate-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -24,4 +24,3 @@ pub fn main() {\n   let nyan : @ToStr = @cat(0u, 2, ~\"nyan\") as @ToStr;\n   print_out(nyan, ~\"nyan\");\n }\n-"}, {"sha": "04784b5c51507a773e55b7622a0df2eac926dfbd", "filename": "src/test/run-pass/class-impl-parameterized-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -48,7 +48,7 @@ class cat : map<int, bool> {\n   }\n \n   fn size() -> uint { self.meows as uint }\n-  fn insert(+k: int, +v: bool) -> bool { \n+  fn insert(+k: int, +v: bool) -> bool {\n     if v { self.meows += k; } else { self.meows -= k; };\n     true\n   }"}, {"sha": "b334f32f344b57d2715357845ff61212809f7ee1", "filename": "src/test/run-pass/cleanup-copy-mode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fcleanup-copy-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fcleanup-copy-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-copy-mode.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -16,4 +16,3 @@ pub fn main() {\n         adder(@2, failer()); ()\n     })));\n }\n-"}, {"sha": "ae2983b15942586c4b56dfd98a4b8465dbd431ed", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,7 +18,7 @@ struct Pair {\n \n pub fn main() {\n     let z = ~Pair { a : 10, b : 12};\n-    \n+\n     let f: ~fn() = || {\n         assert!((z.a == 10));\n         assert!((z.b == 12));"}, {"sha": "73fdb219c1941709a57fdd5f494fd2cb163376b3", "filename": "src/test/run-pass/conditional-compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-compile.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -27,7 +27,7 @@ mod rustrt {\n         // module was translated\n         pub fn bogus();\n     }\n-    \n+\n     #[abi = \"cdecl\"]\n     pub extern {}\n }"}, {"sha": "4c81eaae1d8027355f15a7ef388cfa407cd9e5d4", "filename": "src/test/run-pass/const-enum-vec-index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-enum-vec-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-enum-vec-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-enum-vec-index.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,7 +14,7 @@ static C0: E = C[0];\n static C1: E = C[1];\n \n pub fn main() {\n-    match C0 { \n+    match C0 {\n         V0 => (),\n         _ => fail!()\n     }"}, {"sha": "95c4ed836c7698610affe5f2bd1f2972900e8714", "filename": "src/test/run-pass/const-enum-vec-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-enum-vec-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-enum-vec-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-enum-vec-ptr.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -16,7 +16,7 @@ pub fn main() {\n         V1(n) => assert!(n == 0xDEADBEE),\n         _ => fail!()\n     }\n-    match C[2] { \n+    match C[2] {\n         V0 => (),\n         _ => fail!()\n     }"}, {"sha": "3dc5b918f7f583db6518f2c6b8093caeae0db652", "filename": "src/test/run-pass/const-enum-vector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-enum-vector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-enum-vector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-enum-vector.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -16,7 +16,7 @@ pub fn main() {\n         V1(n) => assert!(n == 0xDEADBEE),\n         _ => fail!()\n     }\n-    match C[2] { \n+    match C[2] {\n         V0 => (),\n         _ => fail!()\n     }"}, {"sha": "48b41d04633074a59434949825c2842b9616d41c", "filename": "src/test/run-pass/const-expr-in-fixed-length-vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-expr-in-fixed-length-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-expr-in-fixed-length-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-expr-in-fixed-length-vec.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Check that constant expressions can be used for declaring the \n+// Check that constant expressions can be used for declaring the\n // type of a fixed length vector.\n \n pub fn main() {"}, {"sha": "f10cef520ad24781e4a6717cf25a54d3f024bd51", "filename": "src/test/run-pass/const-expr-in-vec-repeat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-expr-in-vec-repeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-expr-in-vec-repeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-expr-in-vec-repeat.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Check that constant expressions can be used in vec repeat syntax. \n+// Check that constant expressions can be used in vec repeat syntax.\n \n pub fn main() {\n "}, {"sha": "828c20912a1cb43f7ae557e33bd4766e13c3cbce", "filename": "src/test/run-pass/const-tuple-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-tuple-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ pub fn main() {\n         }\n     }\n }\n-"}, {"sha": "7e6d9f0bee9b92e76509e1479c054def6ac79484", "filename": "src/test/run-pass/const-unit-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-unit-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-unit-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-unit-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,4 +17,3 @@ pub fn main() {\n         Foo => {}\n     }\n }\n-"}, {"sha": "625f6ec30cc13657b3a92490bf89111c90081c83", "filename": "src/test/run-pass/const-vec-syntax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-vec-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconst-vec-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-vec-syntax.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -14,4 +14,3 @@ pub fn main() {\n     let v = [ 1, 2, 3 ];\n     f(v);\n }\n-"}, {"sha": "c0520cf737ffc8bcf296572e8895ef87217324c2", "filename": "src/test/run-pass/consts-in-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ pub fn main() {\n     };\n     assert!(y == 2);\n }\n-"}, {"sha": "0e9be022113d605f6e36a456fb89d55cdce7fbe6", "filename": "src/test/run-pass/cycle-collection.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fcycle-collection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fcycle-collection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcycle-collection.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,4 +21,3 @@ fn f() {\n pub fn main() {\n     f();\n }\n-"}, {"sha": "3f44f3f1ef88c49182068b54c79e7e067acaf8cd", "filename": "src/test/run-pass/default-method-simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -32,4 +32,3 @@ pub fn main() {\n     let a = A { x: 1 };\n     a.f();\n }\n-"}, {"sha": "969e1fb5dd60e0f66a2883f56d9cc133960ff0a6", "filename": "src/test/run-pass/deriving-clone-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-enum.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -16,4 +16,3 @@ enum E {\n }\n \n pub fn main() {}\n-"}, {"sha": "23841017e933e7558176814f6138599b39c88d2b", "filename": "src/test/run-pass/deriving-clone-generic-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-enum.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -6,4 +6,3 @@ enum E<T,U> {\n }\n \n fn main() {}\n-"}, {"sha": "0a7a5a3aa7549f8b7230c17cef3d65d130efd8ac", "filename": "src/test/run-pass/deriving-clone-generic-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -16,4 +16,3 @@ struct S<T> {\n }\n \n pub fn main() {}\n-"}, {"sha": "d6a69e8e6ac522ec24ccb226ddcf0608beea6cea", "filename": "src/test/run-pass/deriving-clone-generic-tuple-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-tuple-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -2,4 +2,3 @@\n struct S<T>(T, ());\n \n fn main() {}\n-"}, {"sha": "1e5c8c80f8c4952608b743a8bbad89879ef2fb05", "filename": "src/test/run-pass/deriving-clone-tuple-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-clone-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-tuple-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -12,4 +12,3 @@\n struct S((), ());\n \n pub fn main() {}\n-"}, {"sha": "81c4ce013f24c559fc6db557de6380bdaba2d17f", "filename": "src/test/run-pass/deriving-via-extension-c-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-c-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-c-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-c-enum.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -23,4 +23,3 @@ pub fn main() {\n     assert!(a.eq(&b));\n     assert!(!a.ne(&b));\n }\n-"}, {"sha": "fac0d402a382622a9d1d43c8a8f261be7c714678", "filename": "src/test/run-pass/deriving-via-extension-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-enum.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ pub fn main() {\n     assert!(a.eq(&b));\n     assert!(!a.ne(&b));\n }\n-"}, {"sha": "b08117b71fa2fbed001aee073473f2bcf7d1fe99", "filename": "src/test/run-pass/deriving-via-extension-iter-bytes-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-enum.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -25,4 +25,3 @@ enum A {\n }\n \n pub fn main(){}\n-"}, {"sha": "8369d12ecddcb40faabd9c62663898c6dd13b59b", "filename": "src/test/run-pass/deriving-via-extension-iter-bytes-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,5 +18,3 @@ struct Foo {\n }\n \n pub fn main() {}\n-\n-"}, {"sha": "4ef8fb6b5d9b75b7e868b7cdfb1bbf086e724179", "filename": "src/test/run-pass/deriving-via-extension-struct-like-enum-variant.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -9,4 +9,3 @@ pub fn main() {\n     assert!(x == x);\n     assert!(!(x != x));\n }\n-"}, {"sha": "c0e7ee36b16daeb329d396dbfe2662de4dfd2da7", "filename": "src/test/run-pass/deriving-via-extension-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -23,4 +23,3 @@ pub fn main() {\n     assert!(a.eq(&b));\n     assert!(!a.ne(&b));\n }\n-"}, {"sha": "85a89c629895df78e39e3063f09d1ac9b645cb11", "filename": "src/test/run-pass/deriving-via-extension-type-params.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -26,4 +26,3 @@ pub fn main() {\n     assert!(a.eq(&b));\n     assert!(!a.ne(&b));\n }\n-"}, {"sha": "65c3faac2b3048a665a60f8617a5f51e8bcfb201", "filename": "src/test/run-pass/drop-trait-generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fdrop-trait-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fdrop-trait-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-trait-generic.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -22,4 +22,3 @@ impl<T> ::core::ops::Drop for S<T> {\n pub fn main() {\n     let x = S { x: 1 };\n }\n-"}, {"sha": "b516c6f6de4bde3739a018832f97f9525ebee579", "filename": "src/test/run-pass/drop-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fdrop-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fdrop-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-trait.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -21,4 +21,3 @@ impl Drop for Foo {\n pub fn main() {\n     let x: Foo = Foo { x: 3 };\n }\n-"}, {"sha": "37e457d547bf919e35065be03542acad44e6af54", "filename": "src/test/run-pass/enum-discrim-range-overflow.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-discrim-range-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-discrim-range-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-discrim-range-overflow.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -9,23 +9,23 @@\n // except according to those terms.\n \n pub enum E64 {\n-\tH64 = 0x7FFF_FFFF_FFFF_FFFF,\n-\tL64 = 0x8000_0000_0000_0000\n+    H64 = 0x7FFF_FFFF_FFFF_FFFF,\n+    L64 = 0x8000_0000_0000_0000\n }\n pub enum E32 {\n-\tH32 = 0x7FFF_FFFF,\n-\tL32 = 0x8000_0000\n+    H32 = 0x7FFF_FFFF,\n+    L32 = 0x8000_0000\n }\n \n pub fn f(e64: E64, e32: E32) -> (bool,bool) {\n-\t(match e64 {\n-\t\tH64 => true,\n-\t\tL64 => false\n-\t},\n-\t match e32 {\n-\t\tH32 => true,\n-\t\tL32 => false\n-\t})\n+    (match e64 {\n+        H64 => true,\n+        L64 => false\n+    },\n+     match e32 {\n+        H32 => true,\n+        L32 => false\n+    })\n }\n \n pub fn main() { }"}, {"sha": "2c61351cf44a5942342690be4b43938009d4ba05", "filename": "src/test/run-pass/enum-disr-val-pretty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-disr-val-pretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-disr-val-pretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-disr-val-pretty.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -23,4 +23,3 @@ fn test_color(color: color, val: int, name: ~str) {\n     assert!(color as int == val);\n     assert!(color as float == val as float);\n }\n-"}, {"sha": "49823155043f4a9bc3a0a587a85bfa455e32378c", "filename": "src/test/run-pass/enum-export-inheritance.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-export-inheritance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-export-inheritance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-export-inheritance.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -19,4 +19,3 @@ mod a {\n pub fn main() {\n     let x = a::Bar;\n }\n-"}, {"sha": "4764dbb9417fb02dc60b5ce313eaf71f7e757cd9", "filename": "src/test/run-pass/enum-nullable-simplifycfg-misopt.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-nullable-simplifycfg-misopt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fenum-nullable-simplifycfg-misopt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-nullable-simplifycfg-misopt.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -17,8 +17,8 @@\n enum List<X> { Nil, Cons(X, @List<X>) }\n pub fn main() {\n     match Cons(10, @Nil) {\n-\tCons(10, _) => {}\n-\tNil => {}\n-\t_ => fail!()\n+        Cons(10, _) => {}\n+        Nil => {}\n+        _ => fail!()\n     }\n }"}, {"sha": "ac19592accf8b0e517c0e0de094fa5d774f780eb", "filename": "src/test/run-pass/explicit-self-generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self-generic.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -40,4 +40,3 @@ pub fn main() {\n     let mut m = ~linear_map::<(),()>();\n     assert!(m.len() == 0);\n }\n-"}, {"sha": "12a1780e029b1a506358aec4aa032616bac5e355", "filename": "src/test/run-pass/explicit-self-objects-box.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-box.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -30,5 +30,3 @@ pub fn main() {\n     y.f();\n     y.f();\n }\n-\n-"}, {"sha": "814365a83542957018cc82fa2fc30003379cb977", "filename": "src/test/run-pass/explicit-self-objects-simple.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-simple.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -27,5 +27,3 @@ pub fn main() {\n     let y = x as @Foo;\n     y.f();\n }\n-\n-"}, {"sha": "dadf53fb9bc6a9e08a01aa00344294cf513dbb3e", "filename": "src/test/run-pass/explicit-self-objects-uniq.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-uniq.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -27,5 +27,3 @@ pub fn main() {\n     let y = x as ~Foo;\n     y.f();\n }\n-\n-"}, {"sha": "6f6520e804043775582f7e0d45f35c78a434c82b", "filename": "src/test/run-pass/explicit_self_xcrate_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit_self_xcrate_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexplicit_self_xcrate_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit_self_xcrate_exe.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -18,4 +18,3 @@ pub fn main() {\n     let x = Bar { x: ~\"hello\" };\n     x.f();\n }\n-"}, {"sha": "e48abc57534928d23e56d627cb18dd72889e97e9", "filename": "src/test/run-pass/expr-repeat-vstore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -20,4 +20,3 @@ fn main() {\n     println((copy v[3]).to_str());\n     println((copy v[4]).to_str());\n }\n-"}, {"sha": "84fd1b40bf7a50eed6bf3a823fae09bec5d45774", "filename": "src/test/run-pass/extern-mod-abi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-mod-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-mod-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-abi.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -13,4 +13,3 @@ extern \"C\" {\n }\n \n pub fn main() {}\n-"}, {"sha": "5836245ff78cff9b1da670db0ed6de67c7be2ea8", "filename": "src/test/run-pass/extern-mod-ordering-exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -8,4 +8,3 @@ use extern_mod_ordering_lib::extern_mod_ordering_lib;\n fn main() {\n     extern_mod_ordering_lib::f();\n }\n-"}, {"sha": "c98b5ebc2385473301da3956f0bef7042aa4c30d", "filename": "src/test/run-pass/extern-mod-syntax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -16,4 +16,3 @@ use std::json::Object;\n pub fn main() {\n     io::println(\"Hello world!\");\n }\n-"}, {"sha": "ec65cbb5670b953d4b35cc9d842d9ae375f58034", "filename": "src/test/run-pass/extern-pass-TwoU16s.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU16s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU16s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU16s.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -29,4 +29,3 @@ pub fn main() {\n         assert!(x == y);\n     }\n }\n-"}, {"sha": "6ac5967c54fd550f186b1861ae6b8b6c18466ebc", "filename": "src/test/run-pass/extern-pass-TwoU32s.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU32s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU32s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU32s.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -27,4 +27,3 @@ pub fn main() {\n         assert!(x == y);\n     }\n }\n-"}, {"sha": "2b18dba90f7feda1d4d5b6afb73cc20ed69808ed", "filename": "src/test/run-pass/extern-pass-TwoU64s-ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -26,4 +26,3 @@ pub fn main() {\n         assert!(x == y);\n     }\n }\n-"}, {"sha": "3a1f4a51238f1b2eaf0896553132f8f87a7f2e1b", "filename": "src/test/run-pass/extern-pass-TwoU64s.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -31,4 +31,3 @@ pub fn main() {\n         assert!(x == y);\n     }\n }\n-"}, {"sha": "7d08b436908dc79948cc72eddbfc51e2ed30bf56", "filename": "src/test/run-pass/extern-pass-TwoU8s.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU8s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f65e4a1d54417cebaed30816c75ae1cb0334566/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU8s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU8s.rs?ref=1f65e4a1d54417cebaed30816c75ae1cb0334566", "patch": "@@ -29,4 +29,3 @@ pub fn main() {\n         assert!(x == y);\n     }\n }\n-"}]}