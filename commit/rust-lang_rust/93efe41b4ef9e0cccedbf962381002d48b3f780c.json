{"sha": "93efe41b4ef9e0cccedbf962381002d48b3f780c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZWZlNDFiNGVmOWUwY2NjZWRiZjk2MjM4MTAwMmQ0OGIzZjc4MGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-10T23:53:54Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-20T10:18:05Z"}, "message": "stabilize transparent_enums", "tree": {"sha": "6acc71b6c09200a251370c096bd9ba4e2bd22818", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6acc71b6c09200a251370c096bd9ba4e2bd22818"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93efe41b4ef9e0cccedbf962381002d48b3f780c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93efe41b4ef9e0cccedbf962381002d48b3f780c", "html_url": "https://github.com/rust-lang/rust/commit/93efe41b4ef9e0cccedbf962381002d48b3f780c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93efe41b4ef9e0cccedbf962381002d48b3f780c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "900811e43047fc5593f39b0363373530b02c87e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/900811e43047fc5593f39b0363373530b02c87e0", "html_url": "https://github.com/rust-lang/rust/commit/900811e43047fc5593f39b0363373530b02c87e0"}], "stats": {"total": 138, "additions": 8, "deletions": 130}, "files": [{"sha": "862411ab392031ee9315d4fc07edf5a61b04c6e9", "filename": "src/doc/unstable-book/src/language-features/transparent-enums.md", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/900811e43047fc5593f39b0363373530b02c87e0/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftransparent-enums.md", "raw_url": "https://github.com/rust-lang/rust/raw/900811e43047fc5593f39b0363373530b02c87e0/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftransparent-enums.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftransparent-enums.md?ref=900811e43047fc5593f39b0363373530b02c87e0", "patch": "@@ -1,93 +0,0 @@\n-# `transparent_enums`\n-\n-The tracking issue for this feature is [#60405]\n-\n-[60405]: https://github.com/rust-lang/rust/issues/60405\n-\n-----\n-\n-The `transparent_enums` feature allows you mark `enum`s as\n-`#[repr(transparent)]`. An `enum` may be `#[repr(transparent)]` if it has\n-exactly one variant, and that variant matches the same conditions which `struct`\n-requires for transparency. Some concrete illustrations follow.\n-\n-```rust\n-#![feature(transparent_enums)]\n-\n-// This enum has the same representation as `f32`.\n-#[repr(transparent)]\n-enum SingleFieldEnum {\n-    Variant(f32)\n-}\n-\n-// This enum has the same representation as `usize`.\n-#[repr(transparent)]\n-enum MultiFieldEnum {\n-    Variant { field: usize, nothing: () },\n-}\n-```\n-\n-For consistency with transparent `struct`s, `enum`s must have exactly one\n-non-zero-sized field. If all fields are zero-sized, the `enum` must not be\n-`#[repr(transparent)]`:\n-\n-```rust\n-#![feature(transparent_enums)]\n-\n-// This (non-transparent) enum is already valid in stable Rust:\n-pub enum GoodEnum {\n-    Nothing,\n-}\n-\n-// Error: transparent enum needs exactly one non-zero-sized field, but has 0\n-// #[repr(transparent)]\n-// pub enum BadEnum {\n-//     Nothing(()),\n-// }\n-\n-// Error: transparent enum needs exactly one non-zero-sized field, but has 0\n-// #[repr(transparent)]\n-// pub enum BadEmptyEnum {\n-//     Nothing,\n-// }\n-```\n-\n-The one exception is if the `enum` is generic over `T` and has a field of type\n-`T`, it may be `#[repr(transparent)]` even if `T` is a zero-sized type:\n-\n-```rust\n-#![feature(transparent_enums)]\n-\n-// This enum has the same representation as `T`.\n-#[repr(transparent)]\n-pub enum GenericEnum<T> {\n-    Variant(T, ()),\n-}\n-\n-// This is okay even though `()` is a zero-sized type.\n-pub const THIS_IS_OKAY: GenericEnum<()> = GenericEnum::Variant((), ());\n-```\n-\n-Transparent `enum`s require exactly one variant:\n-\n-```rust\n-// Error: transparent enum needs exactly one variant, but has 0\n-// #[repr(transparent)]\n-// pub enum TooFewVariants {\n-// }\n-\n-// Error: transparent enum needs exactly one variant, but has 2\n-// #[repr(transparent)]\n-// pub enum TooManyVariants {\n-//     First(usize),\n-//     Second,\n-// }\n-```\n-\n-Like transarent `struct`s, a transparent `enum` of type `E` has the same layout,\n-size, and ABI as its single non-ZST field. If it is generic over a type `T`, and\n-all its fields are ZSTs except for exactly one field of type `T`, then it has\n-the same layout and ABI as `T` (even if `T` is a ZST when monomorphized).\n-\n-Like transparent `struct`s, transparent `enum`s are FFI-safe if and only if\n-their underlying representation type is also FFI-safe."}, {"sha": "18dc3e30db1d4727b97dedb15d470da5017b29e5", "filename": "src/librustc_feature/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Flibrustc_feature%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Flibrustc_feature%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Faccepted.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -257,6 +257,8 @@ declare_features! (\n     /// Allows relaxing the coherence rules such that\n     /// `impl<T> ForeignTrait<LocalType> for ForeignType<T>` is permitted.\n     (accepted, re_rebalance_coherence, \"1.41.0\", Some(55437), None),\n+    /// Allows #[repr(transparent)] on univariant enums (RFC 2645).\n+    (accepted, transparent_enums, \"1.42.0\", Some(60405), None),\n     /// Allows using subslice patterns, `[a, .., b]` and `[a, xs @ .., b]`.\n     (accepted, slice_patterns, \"1.42.0\", Some(62254), None),\n "}, {"sha": "f20a57ea61c429745d4672981b220fb22c4a99aa", "filename": "src/librustc_feature/active.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Flibrustc_feature%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Flibrustc_feature%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Factive.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -468,9 +468,6 @@ declare_features! (\n     /// Allows `if/while p && let q = r && ...` chains.\n     (active, let_chains, \"1.37.0\", Some(53667), None),\n \n-    /// Allows #[repr(transparent)] on enums (RFC 2645).\n-    (active, transparent_enums, \"1.37.0\", Some(60405), None),\n-\n     /// Allows #[repr(transparent)] on unions (RFC 2645).\n     (active, transparent_unions, \"1.37.0\", Some(60405), None),\n "}, {"sha": "0c8830717aa3b7f7a41ede8f185486b776db8bc7", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -2433,16 +2433,6 @@ fn check_transparent(tcx: TyCtxt<'_>, sp: Span, def_id: DefId) {\n     }\n     let sp = tcx.sess.source_map().def_span(sp);\n \n-    if adt.is_enum() && !tcx.features().transparent_enums {\n-        feature_err(\n-            &tcx.sess.parse_sess,\n-            sym::transparent_enums,\n-            sp,\n-            \"transparent enums are unstable\",\n-        )\n-        .emit();\n-    }\n-\n     if adt.is_union() && !tcx.features().transparent_unions {\n         feature_err(\n             &tcx.sess.parse_sess,"}, {"sha": "018a7ba4756a92ffaf0fabf457129891e36b071a", "filename": "src/test/codegen/repr-transparent-aggregates-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -10,7 +10,7 @@\n // ignore-windows\n // See repr-transparent.rs\n \n-#![feature(transparent_enums, transparent_unions)]\n+#![feature(transparent_unions)]\n \n #![crate_type=\"lib\"]\n "}, {"sha": "5669858672074da08a253cd89eb7624321c9c34e", "filename": "src/test/codegen/repr-transparent-aggregates-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-2.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -13,7 +13,7 @@\n // ignore-x86_64\n // See repr-transparent.rs\n \n-#![feature(transparent_enums, transparent_unions)]\n+#![feature(transparent_unions)]\n \n #![crate_type=\"lib\"]\n "}, {"sha": "e538be687801e67e6e07f1588121f3ef6f9cdb5d", "filename": "src/test/codegen/repr-transparent-aggregates-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-3.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -3,7 +3,7 @@\n // only-mips64\n // See repr-transparent.rs\n \n-#![feature(transparent_enums, transparent_unions)]\n+#![feature(transparent_unions)]\n \n #![crate_type=\"lib\"]\n "}, {"sha": "49fd015624ace3933affc473258e3f4a46f987a8", "filename": "src/test/codegen/repr-transparent.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fcodegen%2Frepr-transparent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: -C no-prepopulate-passes\n \n #![crate_type=\"lib\"]\n-#![feature(repr_simd, transparent_enums, transparent_unions)]\n+#![feature(repr_simd, transparent_unions)]\n \n use std::marker::PhantomData;\n "}, {"sha": "0a7a73a168ed5b8d3ff968e017731f0ff2de08cd", "filename": "src/test/ui/feature-gates/feature-gate-transparent_enums.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/900811e43047fc5593f39b0363373530b02c87e0/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/900811e43047fc5593f39b0363373530b02c87e0/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.rs?ref=900811e43047fc5593f39b0363373530b02c87e0", "patch": "@@ -1,6 +0,0 @@\n-#[repr(transparent)]\n-enum OkButUnstableEnum { //~ ERROR transparent enums are unstable\n-    Foo((), String, ()),\n-}\n-\n-fn main() {}"}, {"sha": "8e727c33f20f8eed16b7a87da713ddefa6f04122", "filename": "src/test/ui/feature-gates/feature-gate-transparent_enums.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/900811e43047fc5593f39b0363373530b02c87e0/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/900811e43047fc5593f39b0363373530b02c87e0/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.stderr?ref=900811e43047fc5593f39b0363373530b02c87e0", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: transparent enums are unstable\n-  --> $DIR/feature-gate-transparent_enums.rs:2:1\n-   |\n-LL | enum OkButUnstableEnum {\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: for more information, see https://github.com/rust-lang/rust/issues/60405\n-   = help: add `#![feature(transparent_enums)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "ccda005575c6e6a5ee27209c50589ac1eda92f81", "filename": "src/test/ui/lint/lint-ctypes-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -1,4 +1,4 @@\n-#![feature(transparent_enums, transparent_unions)]\n+#![feature(transparent_unions)]\n #![feature(ptr_internals)]\n #![deny(improper_ctypes)]\n #![allow(dead_code)]"}, {"sha": "969a323238ff53e11003e59da62605f86d621416", "filename": "src/test/ui/repr/repr-transparent.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fui%2Frepr%2Frepr-transparent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93efe41b4ef9e0cccedbf962381002d48b3f780c/src%2Ftest%2Fui%2Frepr%2Frepr-transparent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Frepr-transparent.rs?ref=93efe41b4ef9e0cccedbf962381002d48b3f780c", "patch": "@@ -3,7 +3,7 @@\n // - repr-transparent-other-reprs.rs\n // - repr-transparent-other-items.rs\n \n-#![feature(repr_align, transparent_enums, transparent_unions)]\n+#![feature(transparent_unions)]\n \n use std::marker::PhantomData;\n "}]}