{"sha": "23a4614238b48984dbc8fbcdbb9062b11f24eedb", "node_id": "C_kwDOAAsO6NoAKDIzYTQ2MTQyMzhiNDg5ODRkYmM4ZmJjZGJiOTA2MmIxMWYyNGVlZGI", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-05-17T19:33:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-17T19:33:15Z"}, "message": "Adjust language\n\nCo-authored-by: Who? Me?! <mark-i-m@users.noreply.github.com>", "tree": {"sha": "7d3358614aba4583998d112b2435f13b4c3bf851", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d3358614aba4583998d112b2435f13b4c3bf851"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23a4614238b48984dbc8fbcdbb9062b11f24eedb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJig/h7CRBK7hj4Ov3rIwAAAcYIAHB/tq6VlPeMX7+fkol6w0Rs\nNcO8ghImznsIxYKXgsSYwLFKHttZwZCdWcl3LMXVbe6SWICK/izpG6hAGr85CVqS\nD2jg+AGTDjwIuOaOZ7ARNIpD7W0NizcPUzrbvx2KrL4G9V+fJqwLubF4vcrWI5ya\nsqMnY9gpAafga8DCTNsrVgh4fI9Dw35cBZ7fps0ch3ZKDE21VmBXY33zGAWwqRRy\nsf1mGO2njNbhv51r9wkDpUI0z3zHXl7mB7qSXFN+UuzqScuUCDye1CF1RINhlA0H\nghxkTt09KOKf2iBcaEcNQNdVX3cMx2U0sn2H1qvSeauD+uA0Z1gmZl1BdNQThlc=\n=/qTT\n-----END PGP SIGNATURE-----\n", "payload": "tree 7d3358614aba4583998d112b2435f13b4c3bf851\nparent 4d523a8149ff697ffe1770358291e2b8d8b58fd7\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1652815995 -0400\ncommitter GitHub <noreply@github.com> 1652815995 -0400\n\nAdjust language\n\nCo-authored-by: Who? Me?! <mark-i-m@users.noreply.github.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23a4614238b48984dbc8fbcdbb9062b11f24eedb", "html_url": "https://github.com/rust-lang/rust/commit/23a4614238b48984dbc8fbcdbb9062b11f24eedb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23a4614238b48984dbc8fbcdbb9062b11f24eedb/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d523a8149ff697ffe1770358291e2b8d8b58fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d523a8149ff697ffe1770358291e2b8d8b58fd7", "html_url": "https://github.com/rust-lang/rust/commit/4d523a8149ff697ffe1770358291e2b8d8b58fd7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0e118fb939ff00f1927ff3c79f60eda944c0ef64", "filename": "RELEASES.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23a4614238b48984dbc8fbcdbb9062b11f24eedb/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/23a4614238b48984dbc8fbcdbb9062b11f24eedb/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=23a4614238b48984dbc8fbcdbb9062b11f24eedb", "patch": "@@ -22,7 +22,7 @@ Libraries\n \n - [`ManuallyDrop<T>` is now documented to have the same layout as `T`][88375]\n - [`#[ignore = \"\u2026\"]` messages are printed when running tests][92714]\n-- [Consistently present absent stdio handles on Windows as NULL handles][93263]\n+- [Consistently show absent stdio handles on Windows as NULL handles][93263]\n - [Make `std::io::stdio::lock()` return `'static` handles.][93965] Previously, the creation of locked handles to stdin/stdout/stderr would borrow the handles being locked, which prevented writing `let out = std::io::stdout().lock();` because `out` would outlive the return value of `stdout()`. Such code now works, eliminating a common pitfall that affected many Rust users.\n - [`Vec::from_raw_parts` is now less restrictive about its inputs][95016]\n - [`std::thread::available_parallelism` now takes cgroup quotas into account.][92697] Since `available_parallelism` is often used to create a thread pool for parallel computation, which may be CPU-bound for performance, `available_parallelism` will return a value consistent with the ability to use that many threads continuously, if possible. For instance, in a container with 8 virtual CPUs but quotas only allowing for 50% usage, `available_parallelism` will return 4."}]}