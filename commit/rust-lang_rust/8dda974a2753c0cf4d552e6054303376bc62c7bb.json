{"sha": "8dda974a2753c0cf4d552e6054303376bc62c7bb", "node_id": "C_kwDOAAsO6NoAKDhkZGE5NzRhMjc1M2MwY2Y0ZDU1MmU2MDU0MzAzMzc2YmM2MmM3YmI", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-04-24T14:04:33Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-08-08T01:55:10Z"}, "message": "Add note to the docs on `is_from_proc_macro`", "tree": {"sha": "74d3e4a36bad874bf7a680ed9bf06a971b03edb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74d3e4a36bad874bf7a680ed9bf06a971b03edb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dda974a2753c0cf4d552e6054303376bc62c7bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dda974a2753c0cf4d552e6054303376bc62c7bb", "html_url": "https://github.com/rust-lang/rust/commit/8dda974a2753c0cf4d552e6054303376bc62c7bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dda974a2753c0cf4d552e6054303376bc62c7bb/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "670efd5720b31e235c8e97f49f612e685db97b93", "url": "https://api.github.com/repos/rust-lang/rust/commits/670efd5720b31e235c8e97f49f612e685db97b93", "html_url": "https://github.com/rust-lang/rust/commit/670efd5720b31e235c8e97f49f612e685db97b93"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "9f2c412eb8553299b8eb6889c4bff33f8ade1ac2", "filename": "clippy_utils/src/check_proc_macro.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8dda974a2753c0cf4d552e6054303376bc62c7bb/clippy_utils%2Fsrc%2Fcheck_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dda974a2753c0cf4d552e6054303376bc62c7bb/clippy_utils%2Fsrc%2Fcheck_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fcheck_proc_macro.rs?ref=8dda974a2753c0cf4d552e6054303376bc62c7bb", "patch": "@@ -271,7 +271,10 @@ impl_with_search_pat!(LateContext: ImplItem with impl_item_search_pat);\n impl_with_search_pat!(LateContext: FieldDef with field_def_search_pat);\n impl_with_search_pat!(LateContext: Variant with variant_search_pat);\n \n-/// Checks if the item likely came from a proc-macro\n+/// Checks if the item likely came from a proc-macro.\n+///\n+/// This should be called after `in_external_macro` and the initial pattern matching of the ast as\n+/// it is significantly slower than both of those.\n pub fn is_from_proc_macro<T: WithSearchPat>(cx: &T::Context, item: &T) -> bool {\n     let (start_pat, end_pat) = item.search_pat(cx);\n     !span_matches_pat(cx.sess(), item.span(), start_pat, end_pat)"}]}