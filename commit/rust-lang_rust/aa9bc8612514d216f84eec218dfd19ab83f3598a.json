{"sha": "aa9bc8612514d216f84eec218dfd19ab83f3598a", "node_id": "C_kwDOAAsO6NoAKGFhOWJjODYxMjUxNGQyMTZmODRlZWMyMThkZmQxOWFiODNmMzU5OGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-05T08:33:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-05T08:33:53Z"}, "message": "Auto merge of #14980 - lnicola:sync-from-rust, r=lnicola\n\nSync from downstream", "tree": {"sha": "fdf653c880c21dfeea5f9f56e1749951cab8ca39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdf653c880c21dfeea5f9f56e1749951cab8ca39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa9bc8612514d216f84eec218dfd19ab83f3598a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa9bc8612514d216f84eec218dfd19ab83f3598a", "html_url": "https://github.com/rust-lang/rust/commit/aa9bc8612514d216f84eec218dfd19ab83f3598a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa9bc8612514d216f84eec218dfd19ab83f3598a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6a3fe051a7c4284821c12ffe922087fb8662f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a3fe051a7c4284821c12ffe922087fb8662f2b", "html_url": "https://github.com/rust-lang/rust/commit/c6a3fe051a7c4284821c12ffe922087fb8662f2b"}, {"sha": "c3dbe7c7176963509612012df321334227ba4299", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3dbe7c7176963509612012df321334227ba4299", "html_url": "https://github.com/rust-lang/rust/commit/c3dbe7c7176963509612012df321334227ba4299"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "cead64a33749fb14eee59c5585323d338394a9ef", "filename": "crates/hir-def/src/attr/builtin.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fhir-def%2Fsrc%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fhir-def%2Fsrc%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fattr%2Fbuiltin.rs?ref=aa9bc8612514d216f84eec218dfd19ab83f3598a", "patch": "@@ -200,10 +200,6 @@ pub const INERT_ATTRIBUTES: &[BuiltinAttribute] = &[\n     // Limits:\n     ungated!(recursion_limit, CrateLevel, template!(NameValueStr: \"N\"), FutureWarnFollowing),\n     ungated!(type_length_limit, CrateLevel, template!(NameValueStr: \"N\"), FutureWarnFollowing),\n-    gated!(\n-        const_eval_limit, CrateLevel, template!(NameValueStr: \"N\"), ErrorFollowing,\n-        const_eval_limit, experimental!(const_eval_limit)\n-    ),\n     gated!(\n         move_size_limit, CrateLevel, template!(NameValueStr: \"N\"), ErrorFollowing,\n         large_assignments, experimental!(move_size_limit)"}, {"sha": "977f300636f5e3d816599d6b923d2c3de9b3b640", "filename": "crates/hir-def/src/macro_expansion_tests/builtin_fn_macro.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs?ref=aa9bc8612514d216f84eec218dfd19ab83f3598a", "patch": "@@ -201,7 +201,7 @@ macro_rules! format_args {\n }\n \n fn main() {\n-    ::core::fmt::Arguments::new_v1(&[\"\", \" \", ], &[::core::fmt::ArgumentV1::new(&(arg1(a, b, c)), ::core::fmt::Display::fmt), ::core::fmt::ArgumentV1::new(&(arg2), ::core::fmt::Debug::fmt), ]);\n+    ::core::fmt::Arguments::new_v1(&[\"\", \" \", ], &[::core::fmt::Argument::new(&(arg1(a, b, c)), ::core::fmt::Display::fmt), ::core::fmt::Argument::new(&(arg2), ::core::fmt::Debug::fmt), ]);\n }\n \"##]],\n     );\n@@ -229,7 +229,7 @@ macro_rules! format_args {\n }\n \n fn main() {\n-    ::core::fmt::Arguments::new_v1(&[\"\", \" \", ], &[::core::fmt::ArgumentV1::new(&(a::<A, B>()), ::core::fmt::Display::fmt), ::core::fmt::ArgumentV1::new(&(b), ::core::fmt::Debug::fmt), ]);\n+    ::core::fmt::Arguments::new_v1(&[\"\", \" \", ], &[::core::fmt::Argument::new(&(a::<A, B>()), ::core::fmt::Display::fmt), ::core::fmt::Argument::new(&(b), ::core::fmt::Debug::fmt), ]);\n }\n \"##]],\n     );\n@@ -262,7 +262,7 @@ macro_rules! format_args {\n }\n \n fn main() {\n-    ::core::fmt::Arguments::new_v1(&[r#\"\"#, r#\",mismatch,\"\"#, r#\"\",\"\"#, r#\"\"\"#, ], &[::core::fmt::ArgumentV1::new(&(location_csv_pat(db, &analysis, vfs, &sm, pat_id)), ::core::fmt::Display::fmt), ::core::fmt::ArgumentV1::new(&(mismatch.expected.display(db)), ::core::fmt::Display::fmt), ::core::fmt::ArgumentV1::new(&(mismatch.actual.display(db)), ::core::fmt::Display::fmt), ]);\n+    ::core::fmt::Arguments::new_v1(&[r#\"\"#, r#\",mismatch,\"\"#, r#\"\",\"\"#, r#\"\"\"#, ], &[::core::fmt::Argument::new(&(location_csv_pat(db, &analysis, vfs, &sm, pat_id)), ::core::fmt::Display::fmt), ::core::fmt::Argument::new(&(mismatch.expected.display(db)), ::core::fmt::Display::fmt), ::core::fmt::Argument::new(&(mismatch.actual.display(db)), ::core::fmt::Display::fmt), ]);\n }\n \"##]],\n     );\n@@ -296,7 +296,7 @@ macro_rules! format_args {\n }\n \n fn main() {\n-    ::core::fmt::Arguments::new_v1(&[\"xxx\", \"y\", \"zzz\", ], &[::core::fmt::ArgumentV1::new(&(2), ::core::fmt::Display::fmt), ::core::fmt::ArgumentV1::new(&(b), ::core::fmt::Debug::fmt), ]);\n+    ::core::fmt::Arguments::new_v1(&[\"xxx\", \"y\", \"zzz\", ], &[::core::fmt::Argument::new(&(2), ::core::fmt::Display::fmt), ::core::fmt::Argument::new(&(b), ::core::fmt::Debug::fmt), ]);\n }\n \"##]],\n     );\n@@ -327,7 +327,7 @@ macro_rules! format_args {\n fn main() {\n     let _ =\n         /* error: no rule matches input tokens *//* parse error: expected field name or number */\n-::core::fmt::Arguments::new_v1(&[\"\", \" \", ], &[::core::fmt::ArgumentV1::new(&(a.), ::core::fmt::Display::fmt), ::core::fmt::ArgumentV1::new(&(), ::core::fmt::Debug::fmt), ]);\n+::core::fmt::Arguments::new_v1(&[\"\", \" \", ], &[::core::fmt::Argument::new(&(a.), ::core::fmt::Display::fmt), ::core::fmt::Argument::new(&(), ::core::fmt::Debug::fmt), ]);\n }\n \"##]],\n     );"}, {"sha": "c7643bd0a18eb51311f0854153c67b9f7139949a", "filename": "crates/hir-expand/src/builtin_fn_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs?ref=aa9bc8612514d216f84eec218dfd19ab83f3598a", "patch": "@@ -370,7 +370,7 @@ fn format_args_expand_general(\n                         quote!(::core::fmt::Display::fmt)\n                     }\n                 };\n-                arg_tts.push(quote! { ::core::fmt::ArgumentV1::new(&(#arg_tree), #formatter), });\n+                arg_tts.push(quote! { ::core::fmt::Argument::new(&(#arg_tree), #formatter), });\n             }\n             '}' => {\n                 if format_iter.peek() == Some(&'}') {"}, {"sha": "13f67a0128a7e8f2ecb0870915be012d15666eb2", "filename": "crates/proc-macro-api/src/version.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fproc-macro-api%2Fsrc%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fproc-macro-api%2Fsrc%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-api%2Fsrc%2Fversion.rs?ref=aa9bc8612514d216f84eec218dfd19ab83f3598a", "patch": "@@ -122,7 +122,7 @@ pub fn read_version(dylib_path: &AbsPath) -> io::Result<String> {\n     // https://github.com/rust-lang/rust/commit/0696e79f2740ad89309269b460579e548a5cd632\n     let snappy_portion = match version {\n         5 | 6 => &dot_rustc[8..],\n-        7 => {\n+        7 | 8 => {\n             let len_bytes = &dot_rustc[8..12];\n             let data_len = u32::from_be_bytes(len_bytes.try_into().unwrap()) as usize;\n             &dot_rustc[12..data_len + 12]"}, {"sha": "37a45bcbb83b86c91c50640ede420424f72244dd", "filename": "crates/proc-macro-srv/src/server.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fproc-macro-srv%2Fsrc%2Fserver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9bc8612514d216f84eec218dfd19ab83f3598a/crates%2Fproc-macro-srv%2Fsrc%2Fserver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fserver.rs?ref=aa9bc8612514d216f84eec218dfd19ab83f3598a", "patch": "@@ -20,7 +20,7 @@ use token_stream::TokenStreamBuilder;\n mod symbol;\n pub use symbol::*;\n \n-use std::ops::Bound;\n+use std::ops::{Bound, Range};\n \n use crate::tt;\n \n@@ -300,6 +300,10 @@ impl server::Span for RustAnalyzer {\n         // FIXME handle span\n         span\n     }\n+    fn byte_range(&mut self, _span: Self::Span) -> Range<usize> {\n+        // FIXME handle span\n+        Range { start: 0, end: 0 }\n+    }\n     fn start(&mut self, _span: Self::Span) -> LineColumn {\n         // FIXME handle span\n         LineColumn { line: 0, column: 0 }"}]}