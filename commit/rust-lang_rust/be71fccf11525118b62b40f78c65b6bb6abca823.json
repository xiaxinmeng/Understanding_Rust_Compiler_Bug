{"sha": "be71fccf11525118b62b40f78c65b6bb6abca823", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNzFmY2NmMTE1MjUxMThiNjJiNDBmNzhjNjViNmJiNmFiY2E4MjM=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-09T14:31:47Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-09T14:31:47Z"}, "message": "librustc_codegen_ssa => 2018", "tree": {"sha": "b30c275b05935e0535a54d3927291487ede255e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b30c275b05935e0535a54d3927291487ede255e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be71fccf11525118b62b40f78c65b6bb6abca823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be71fccf11525118b62b40f78c65b6bb6abca823", "html_url": "https://github.com/rust-lang/rust/commit/be71fccf11525118b62b40f78c65b6bb6abca823", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be71fccf11525118b62b40f78c65b6bb6abca823/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "618f5a08a13a90b65455cf8dc42e109e520b5dbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/618f5a08a13a90b65455cf8dc42e109e520b5dbf", "html_url": "https://github.com/rust-lang/rust/commit/618f5a08a13a90b65455cf8dc42e109e520b5dbf"}], "stats": {"total": 166, "additions": 75, "deletions": 91}, "files": [{"sha": "0aba43580f1f6e0132c764db736c1a1f35ecea06", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc_codegen_ssa\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_codegen_ssa\""}, {"sha": "7f1aebace8fc67396907e53c7dd913bbc55bc056", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -9,7 +9,7 @@ use rustc_target::spec::LinkerFlavor;\n use rustc::hir::def_id::CrateNum;\n \n use super::command::Command;\n-use CrateInfo;\n+use crate::CrateInfo;\n \n use cc::windows_registry;\n use std::fs;"}, {"sha": "7f0eba7b0850bc5fd886d0c046e28bb717f94b88", "filename": "src/librustc_codegen_ssa/back/lto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flto.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,6 +1,6 @@\n use super::write::CodegenContext;\n-use traits::*;\n-use ModuleCodegen;\n+use crate::traits::*;\n+use crate::ModuleCodegen;\n \n use rustc::util::time_graph::Timeline;\n use rustc_errors::FatalError;"}, {"sha": "eeb191b09e2494a428f3ccc99c013b6fca4fd8fc", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,12 +1,12 @@\n-use {ModuleCodegen, ModuleKind, CachedModuleCodegen, CompiledModule, CrateInfo, CodegenResults,\n-    RLIB_BYTECODE_EXTENSION};\n+use crate::{ModuleCodegen, ModuleKind, CachedModuleCodegen, CompiledModule, CrateInfo,\n+    CodegenResults, RLIB_BYTECODE_EXTENSION};\n use super::linker::LinkerInfo;\n use super::lto::{self, SerializedModule};\n use super::link::{self, remove, get_linker};\n use super::command::Command;\n use super::symbol_export::ExportedSymbols;\n \n-use memmap;\n+use crate::traits::*;\n use rustc_incremental::{copy_cgu_workproducts_to_incr_comp_cache_dir,\n                         in_incr_comp_dir, in_incr_comp_dir_sess};\n use rustc::dep_graph::{WorkProduct, WorkProductId, WorkProductFileKind};\n@@ -16,7 +16,6 @@ use rustc::session::config::{self, OutputFilenames, OutputType, Passes, Sanitize\n use rustc::session::Session;\n use rustc::util::nodemap::FxHashMap;\n use rustc::util::time_graph::{self, TimeGraph, Timeline};\n-use traits::*;\n use rustc::hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc::ty::TyCtxt;\n use rustc::util::common::{time_depth, set_time_depth, print_time_passes_entry};"}, {"sha": "988e3bbd71d8acf3167b35b4c40044c6ce009d64", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -13,7 +13,7 @@\n //!     but one llvm::Type corresponds to many `Ty`s; for instance, tup(int, int,\n //!     int) and rec(x=int, y=int, z=int) will have the same llvm::Type.\n \n-use {ModuleCodegen, ModuleKind, CachedModuleCodegen};\n+use crate::{ModuleCodegen, ModuleKind, CachedModuleCodegen};\n \n use rustc::dep_graph::cgu_reuse_tracker::CguReuse;\n use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n@@ -28,26 +28,26 @@ use rustc::util::common::{time, print_time_passes_entry};\n use rustc::util::profiling::ProfileCategory;\n use rustc::session::config::{self, EntryFnType, Lto};\n use rustc::session::Session;\n-use mir::place::PlaceRef;\n-use back::write::{OngoingCodegen, start_async_codegen, submit_pre_lto_module_to_llvm,\n-    submit_post_lto_module_to_llvm};\n-use {MemFlags, CrateInfo};\n-use callee;\n use rustc_mir::monomorphize::item::DefPathBasedNames;\n-use common::{RealPredicate, TypeKind, IntPredicate};\n-use meth;\n-use mir;\n use rustc::util::time_graph;\n use rustc_mir::monomorphize::Instance;\n use rustc_mir::monomorphize::partitioning::{CodegenUnit, CodegenUnitExt};\n-use mono_item::MonoItem;\n use rustc::util::nodemap::FxHashMap;\n use rustc_data_structures::indexed_vec::Idx;\n use rustc_data_structures::sync::Lrc;\n use rustc_codegen_utils::{symbol_names_test, check_for_rustc_errors_attr};\n use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n+use crate::mir::place::PlaceRef;\n+use crate::back::write::{OngoingCodegen, start_async_codegen, submit_pre_lto_module_to_llvm,\n+    submit_post_lto_module_to_llvm};\n+use crate::{MemFlags, CrateInfo};\n+use crate::callee;\n+use crate::common::{RealPredicate, TypeKind, IntPredicate};\n+use crate::meth;\n+use crate::mir;\n+use crate::mono_item::MonoItem;\n \n-use traits::*;\n+use crate::traits::*;\n \n use std::any::Any;\n use std::cmp;\n@@ -58,7 +58,7 @@ use syntax_pos::Span;\n use syntax::attr;\n use rustc::hir;\n \n-use mir::operand::OperandValue;\n+use crate::mir::operand::OperandValue;\n \n use std::marker::PhantomData;\n "}, {"sha": "3665d45d1e9c7489e3a1b2fb7436778f1ff9d47b", "filename": "src/librustc_codegen_ssa/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcallee.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,4 +1,4 @@\n-use traits::*;\n+use crate::traits::*;\n use rustc::ty;\n use rustc::ty::subst::Substs;\n use rustc::hir::def_id::DefId;"}, {"sha": "1b87f160cc35dd6025cdc7ef73434a55f92815a7", "filename": "src/librustc_codegen_ssa/common.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcommon.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -5,11 +5,11 @@ use syntax_pos::{DUMMY_SP, Span};\n \n use rustc::hir::def_id::DefId;\n use rustc::middle::lang_items::LangItem;\n-use base;\n-use traits::*;\n+use crate::base;\n+use crate::traits::*;\n \n use rustc::hir;\n-use traits::BuilderMethods;\n+use crate::traits::BuilderMethods;\n \n pub fn type_needs_drop<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bool {\n     ty.needs_drop(tcx, ty::ParamEnv::reveal_all())\n@@ -123,7 +123,7 @@ pub enum TypeKind {\n mod temp_stable_hash_impls {\n     use rustc_data_structures::stable_hasher::{StableHasherResult, StableHasher,\n                                                HashStable};\n-    use ModuleCodegen;\n+    use crate::ModuleCodegen;\n \n     impl<HCX, M> HashStable<HCX> for ModuleCodegen<M> {\n         fn hash_stable<W: StableHasherResult>(&self,"}, {"sha": "e2b49de05bd110d40657ab20188f086c66d48ea6", "filename": "src/librustc_codegen_ssa/glue.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fglue.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -2,12 +2,10 @@\n //\n // Code relating to drop glue.\n \n-use std;\n-\n-use common::IntPredicate;\n-use meth;\n use rustc::ty::{self, Ty};\n-use traits::*;\n+use crate::common::IntPredicate;\n+use crate::meth;\n+use crate::traits::*;\n \n pub fn size_and_align_of_dst<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n     bx: &mut Bx,"}, {"sha": "ad894bfe1cdf1c7be245cb440023df050b79e577", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -10,34 +10,19 @@\n #![feature(nll)]\n #![allow(unused_attributes)]\n #![allow(dead_code)]\n+#![deny(rust_2018_idioms)]\n+#![allow(explicit_outlives_requirements)]\n+#![allow(elided_lifetimes_in_paths)]\n \n #![recursion_limit=\"256\"]\n \n //! This crate contains codegen code that is used by all codegen backends (LLVM and others).\n //! The backend-agnostic functions of this crate use functions defined in various traits that\n //! have to be implemented by each backends.\n \n-#[macro_use] extern crate bitflags;\n #[macro_use] extern crate log;\n-extern crate rustc_apfloat;\n-#[macro_use]  extern crate rustc;\n-extern crate rustc_target;\n-extern crate rustc_mir;\n+#[macro_use] extern crate rustc;\n #[macro_use] extern crate syntax;\n-extern crate syntax_pos;\n-extern crate rustc_incremental;\n-extern crate rustc_codegen_utils;\n-extern crate rustc_data_structures;\n-extern crate rustc_allocator;\n-extern crate rustc_fs_util;\n-extern crate serialize;\n-extern crate rustc_errors;\n-extern crate rustc_demangle;\n-extern crate cc;\n-extern crate libc;\n-extern crate jobserver;\n-extern crate memmap;\n-extern crate num_cpus;\n \n use std::path::PathBuf;\n use rustc::dep_graph::WorkProduct;\n@@ -133,7 +118,7 @@ pub enum ModuleKind {\n     Allocator,\n }\n \n-bitflags! {\n+bitflags::bitflags! {\n     pub struct MemFlags: u8 {\n         const VOLATILE = 1 << 0;\n         const NONTEMPORAL = 1 << 1;"}, {"sha": "49f3c87ee2d9dc8de0eb13820a7d9b2c27a2dcf2", "filename": "src/librustc_codegen_ssa/meth.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmeth.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,8 +1,8 @@\n use rustc_target::abi::call::FnType;\n-use callee;\n use rustc_mir::monomorphize;\n \n-use traits::*;\n+use crate::callee;\n+use crate::traits::*;\n \n use rustc::ty::{self, Ty};\n "}, {"sha": "9fe2e58bc203cffcd13c6961d08095644bd995f3", "filename": "src/librustc_codegen_ssa/mir/analyze.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -10,7 +10,7 @@ use rustc::mir::traversal;\n use rustc::ty;\n use rustc::ty::layout::{LayoutOf, HasTyCtxt};\n use super::FunctionCx;\n-use traits::*;\n+use crate::traits::*;\n \n pub fn non_ssa_locals<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n     fx: &FunctionCx<'a, 'tcx, Bx>"}, {"sha": "af510d402eb8a61ca4551332d5ac0d104dcd025c", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -5,13 +5,13 @@ use rustc::mir;\n use rustc::mir::interpret::EvalErrorKind;\n use rustc_target::abi::call::{ArgType, FnType, PassMode};\n use rustc_target::spec::abi::Abi;\n-use base;\n-use MemFlags;\n-use common::{self, IntPredicate};\n-use meth;\n use rustc_mir::monomorphize;\n+use crate::base;\n+use crate::MemFlags;\n+use crate::common::{self, IntPredicate};\n+use crate::meth;\n \n-use traits::*;\n+use crate::traits::*;\n \n use syntax::symbol::Symbol;\n use syntax_pos::Pos;"}, {"sha": "6bc69efa4a7d5a64ca5d13ca5fc6a6a8241cee48", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -6,7 +6,7 @@ use rustc::mir::interpret::GlobalId;\n use rustc::ty::{self, Ty};\n use rustc::ty::layout;\n use syntax::source_map::Span;\n-use traits::*;\n+use crate::traits::*;\n \n use super::FunctionCx;\n "}, {"sha": "2e2cb3dd46717f0aa11e4de1a4b673f6e1718ab7", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -4,11 +4,11 @@ use rustc::ty::layout::{TyLayout, HasTyCtxt};\n use rustc::mir::{self, Mir};\n use rustc::ty::subst::Substs;\n use rustc::session::config::DebugInfo;\n-use base;\n-use debuginfo::{self, VariableAccess, VariableKind, FunctionDebugContext};\n use rustc_mir::monomorphize::Instance;\n use rustc_target::abi::call::{FnType, PassMode};\n-use traits::*;\n+use crate::base;\n+use crate::debuginfo::{self, VariableAccess, VariableKind, FunctionDebugContext};\n+use crate::traits::*;\n \n use syntax_pos::{DUMMY_SP, NO_EXPANSION, BytePos, Span};\n use syntax::symbol::keywords;"}, {"sha": "2c6d968bb032af5709602cab3c32bc82cfc8f373", "filename": "src/librustc_codegen_ssa/mir/operand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -3,11 +3,11 @@ use rustc::mir;\n use rustc::ty;\n use rustc::ty::layout::{self, Align, LayoutOf, TyLayout};\n \n-use base;\n-use MemFlags;\n-use glue;\n+use crate::base;\n+use crate::MemFlags;\n+use crate::glue;\n \n-use traits::*;\n+use crate::traits::*;\n \n use std::fmt;\n "}, {"sha": "ffc774c38ea3670d20528a55f5dcaaf80df0e07e", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -2,11 +2,11 @@ use rustc::ty::{self, Ty};\n use rustc::ty::layout::{self, Align, TyLayout, LayoutOf, VariantIdx, HasTyCtxt};\n use rustc::mir;\n use rustc::mir::tcx::PlaceTy;\n-use MemFlags;\n-use common::IntPredicate;\n-use glue;\n+use crate::MemFlags;\n+use crate::common::IntPredicate;\n+use crate::glue;\n \n-use traits::*;\n+use crate::traits::*;\n \n use super::{FunctionCx, LocalRef};\n use super::operand::OperandValue;"}, {"sha": "25a7754d118d739c3f2a4427d1950bbd7111491e", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -6,13 +6,13 @@ use rustc::middle::lang_items::ExchangeMallocFnLangItem;\n use rustc_apfloat::{ieee, Float, Status, Round};\n use std::{u128, i128};\n \n-use base;\n-use MemFlags;\n-use callee;\n-use common::{self, RealPredicate, IntPredicate};\n+use crate::base;\n+use crate::MemFlags;\n+use crate::callee;\n+use crate::common::{self, RealPredicate, IntPredicate};\n use rustc_mir::monomorphize;\n \n-use traits::*;\n+use crate::traits::*;\n \n use super::{FunctionCx, LocalRef};\n use super::operand::{OperandRef, OperandValue};"}, {"sha": "a1bd919c433541b89a472542100bc605a77fb06e", "filename": "src/librustc_codegen_ssa/mir/statement.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,10 +1,10 @@\n use rustc::mir;\n \n-use traits::BuilderMethods;\n+use crate::traits::BuilderMethods;\n use super::FunctionCx;\n use super::LocalRef;\n use super::OperandValue;\n-use traits::*;\n+use crate::traits::*;\n \n impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n     pub fn codegen_statement("}, {"sha": "bfb6a9153809a8ea4f951cdf4cd0f7ce018d66d3", "filename": "src/librustc_codegen_ssa/mono_item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmono_item.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,10 +1,10 @@\n-use base;\n use rustc::hir;\n use rustc::hir::def::Def;\n use rustc::mir::mono::{Linkage, Visibility};\n use rustc::ty::layout::HasTyCtxt;\n use std::fmt;\n-use traits::*;\n+use crate::base;\n+use crate::traits::*;\n \n pub use rustc::mir::mono::MonoItem;\n "}, {"sha": "a95bf3af5bf277c10c06e49dbcb7f1a7898821ac", "filename": "src/librustc_codegen_ssa/traits/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fasm.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,5 +1,5 @@\n use super::BackendTypes;\n-use mir::place::PlaceRef;\n+use crate::mir::place::PlaceRef;\n use rustc::hir::{GlobalAsm, InlineAsm};\n \n pub trait AsmBuilderMethods<'tcx>: BackendTypes {"}, {"sha": "bda0f3dc779663165981b06285117e7281eec9d6", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -4,13 +4,14 @@ use super::debuginfo::DebugInfoBuilderMethods;\n use super::intrinsic::IntrinsicCallMethods;\n use super::type_::ArgTypeMethods;\n use super::{HasCodegen, StaticBuilderMethods};\n-use common::{AtomicOrdering, AtomicRmwBinOp, IntPredicate, RealPredicate, SynchronizationScope};\n-use mir::operand::OperandRef;\n-use mir::place::PlaceRef;\n+use crate::common::{AtomicOrdering, AtomicRmwBinOp, IntPredicate, RealPredicate,\n+    SynchronizationScope};\n+use crate::mir::operand::OperandRef;\n+use crate::mir::place::PlaceRef;\n+use crate::MemFlags;\n use rustc::ty::Ty;\n use rustc::ty::layout::{Align, Size};\n use std::ffi::CStr;\n-use MemFlags;\n \n use std::borrow::Cow;\n use std::ops::Range;"}, {"sha": "319f4b4e5e4b5c6b0013328baaab7e9fc370943e", "filename": "src/librustc_codegen_ssa/traits/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,5 +1,5 @@\n use super::BackendTypes;\n-use mir::place::PlaceRef;\n+use crate::mir::place::PlaceRef;\n use rustc::mir::interpret::Allocation;\n use rustc::mir::interpret::Scalar;\n use rustc::ty::layout;"}, {"sha": "0e606e744c6295f7aa9051e4899f8e78ad4b9c98", "filename": "src/librustc_codegen_ssa/traits/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,5 +1,5 @@\n use super::BackendTypes;\n-use debuginfo::{FunctionDebugContext, MirDebugScope, VariableAccess, VariableKind};\n+use crate::debuginfo::{FunctionDebugContext, MirDebugScope, VariableAccess, VariableKind};\n use rustc::hir::def_id::CrateNum;\n use rustc::mir;\n use rustc::ty::{self, Ty};"}, {"sha": "3cd0c39d4139a9c823375307c6f32c1f5c64a0d0", "filename": "src/librustc_codegen_ssa/traits/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,5 +1,5 @@\n use super::BackendTypes;\n-use mir::operand::OperandRef;\n+use crate::mir::operand::OperandRef;\n use rustc::ty::Ty;\n use rustc_target::abi::call::FnType;\n use syntax_pos::Span;"}, {"sha": "122aea035cea5151c1e627b7d6ab1d448c5efa6d", "filename": "src/librustc_codegen_ssa/traits/type_.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,8 +1,8 @@\n use super::misc::MiscMethods;\n use super::Backend;\n use super::HasCodegen;\n-use common::{self, TypeKind};\n-use mir::place::PlaceRef;\n+use crate::common::{self, TypeKind};\n+use crate::mir::place::PlaceRef;\n use rustc::ty::layout::{self, Align, Size, TyLayout};\n use rustc::ty::{self, Ty};\n use rustc::util::nodemap::FxHashMap;"}, {"sha": "e8ef815b32acb39f3dc2ff50e1d422ba91c19d5c", "filename": "src/librustc_codegen_ssa/traits/write.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be71fccf11525118b62b40f78c65b6bb6abca823/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs?ref=be71fccf11525118b62b40f78c65b6bb6abca823", "patch": "@@ -1,6 +1,6 @@\n-use back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n-use back::write::{CodegenContext, ModuleConfig};\n-use {CompiledModule, ModuleCodegen};\n+use crate::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n+use crate::back::write::{CodegenContext, ModuleConfig};\n+use crate::{CompiledModule, ModuleCodegen};\n \n use rustc::dep_graph::WorkProduct;\n use rustc::util::time_graph::Timeline;"}]}