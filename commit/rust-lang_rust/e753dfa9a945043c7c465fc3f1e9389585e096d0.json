{"sha": "e753dfa9a945043c7c465fc3f1e9389585e096d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NTNkZmE5YTk0NTA0M2M3YzQ2NWZjM2YxZTkzODk1ODVlMDk2ZDA=", "commit": {"author": {"name": "Ryan Scott", "email": "ryan@zens.tokyo", "date": "2017-03-28T07:16:23Z"}, "committer": {"name": "Ryan Scott", "email": "ryan@ryan-scott.me", "date": "2017-04-04T05:16:25Z"}, "message": "Fixed ICEs with pattern matching in const fn. Fixes #38199, fixes #31577, fixes #29093, and fixes #40012.", "tree": {"sha": "0eb95732b619bec9c9ebbff583f2a5c4defc4da9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0eb95732b619bec9c9ebbff583f2a5c4defc4da9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e753dfa9a945043c7c465fc3f1e9389585e096d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e753dfa9a945043c7c465fc3f1e9389585e096d0", "html_url": "https://github.com/rust-lang/rust/commit/e753dfa9a945043c7c465fc3f1e9389585e096d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e753dfa9a945043c7c465fc3f1e9389585e096d0/comments", "author": null, "committer": {"login": "ryan-scott-dev", "id": 1508992, "node_id": "MDQ6VXNlcjE1MDg5OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1508992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryan-scott-dev", "html_url": "https://github.com/ryan-scott-dev", "followers_url": "https://api.github.com/users/ryan-scott-dev/followers", "following_url": "https://api.github.com/users/ryan-scott-dev/following{/other_user}", "gists_url": "https://api.github.com/users/ryan-scott-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryan-scott-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryan-scott-dev/subscriptions", "organizations_url": "https://api.github.com/users/ryan-scott-dev/orgs", "repos_url": "https://api.github.com/users/ryan-scott-dev/repos", "events_url": "https://api.github.com/users/ryan-scott-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/ryan-scott-dev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5309a3e31d88def1f3ea966162ed4f81f161d500", "url": "https://api.github.com/repos/rust-lang/rust/commits/5309a3e31d88def1f3ea966162ed4f81f161d500", "html_url": "https://github.com/rust-lang/rust/commit/5309a3e31d88def1f3ea966162ed4f81f161d500"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "cdbc0bd8858a52683eacbab37e8092e3fd0f0b86", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e753dfa9a945043c7c465fc3f1e9389585e096d0/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e753dfa9a945043c7c465fc3f1e9389585e096d0/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=e753dfa9a945043c7c465fc3f1e9389585e096d0", "patch": "@@ -722,11 +722,9 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n             }\n \n             Rvalue::Discriminant(..) => {\n-                // FIXME discriminant\n+                // FIXME implement discriminant const qualify\n                 self.add(Qualif::NOT_CONST);\n-                if self.mode != Mode::Fn {\n-                    bug!(\"implement discriminant const qualify\");\n-                }\n+                // Discriminants in consts will error elsewhere as an unimplemented expression type\n             }\n \n             Rvalue::Box(_) => {"}, {"sha": "9f41373dab1b74ec2cd3b0ae858567818a17cceb", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e753dfa9a945043c7c465fc3f1e9389585e096d0/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e753dfa9a945043c7c465fc3f1e9389585e096d0/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=e753dfa9a945043c7c465fc3f1e9389585e096d0", "patch": "@@ -278,9 +278,12 @@ pub fn check_safety_of_destructor_if_necessary<'a, 'gcx, 'tcx>(\n     debug!(\"check_safety_of_destructor_if_necessary typ: {:?} scope: {:?}\",\n            typ, scope);\n \n-    let parent_scope = rcx.tcx.region_maps.opt_encl_scope(scope).unwrap_or_else(|| {\n-        span_bug!(span, \"no enclosing scope found for scope: {:?}\", scope)\n-    });\n+\n+    let parent_scope = match rcx.tcx.region_maps.opt_encl_scope(scope) {\n+      Some(parent_scope) => parent_scope,\n+      // If no enclosing scope, then it must be the root scope which cannot be outlived.\n+      None => return\n+    };\n \n     let result = iterate_over_potentially_unsafe_regions_in_type(\n         &mut DropckContext {"}, {"sha": "452aa87d6ba56ecc1706b92157ed7b069d1f0fae", "filename": "src/test/compile-fail/const-match-pattern-arm.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e753dfa9a945043c7c465fc3f1e9389585e096d0/src%2Ftest%2Fcompile-fail%2Fconst-match-pattern-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e753dfa9a945043c7c465fc3f1e9389585e096d0/src%2Ftest%2Fcompile-fail%2Fconst-match-pattern-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-match-pattern-arm.rs?ref=e753dfa9a945043c7c465fc3f1e9389585e096d0", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+const x: bool = match Some(true) {\n+    Some(value) => true,\n+    //~^ ERROR: constant contains unimplemented expression type [E0019]\n+    _ => false\n+};\n+\n+const y: bool = {\n+    match Some(true) {\n+        Some(value) => true,\n+        //~^ ERROR: constant contains unimplemented expression type [E0019]\n+        _ => false\n+    }\n+};\n+\n+fn main() {}"}]}