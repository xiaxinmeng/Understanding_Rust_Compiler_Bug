{"sha": "d3f8db6a2f5ae2a4895906f6ed340003affee6d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZjhkYjZhMmY1YWUyYTQ4OTU5MDZmNmVkMzQwMDAzYWZmZWU2ZDU=", "commit": {"author": {"name": "seiya", "email": "r108338@yahoo.co.jp", "date": "2020-04-11T13:34:45Z"}, "committer": {"name": "seiya", "email": "r108338@yahoo.co.jp", "date": "2020-04-19T12:57:35Z"}, "message": "Fix false \"never constructed\" warnings for `Self::` variant paths", "tree": {"sha": "8c4d8dfd921236b7fd5101b71cc799b6763b4db2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c4d8dfd921236b7fd5101b71cc799b6763b4db2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3f8db6a2f5ae2a4895906f6ed340003affee6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f8db6a2f5ae2a4895906f6ed340003affee6d5", "html_url": "https://github.com/rust-lang/rust/commit/d3f8db6a2f5ae2a4895906f6ed340003affee6d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3f8db6a2f5ae2a4895906f6ed340003affee6d5/comments", "author": {"login": "seiyab", "id": 20365512, "node_id": "MDQ6VXNlcjIwMzY1NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/20365512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seiyab", "html_url": "https://github.com/seiyab", "followers_url": "https://api.github.com/users/seiyab/followers", "following_url": "https://api.github.com/users/seiyab/following{/other_user}", "gists_url": "https://api.github.com/users/seiyab/gists{/gist_id}", "starred_url": "https://api.github.com/users/seiyab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seiyab/subscriptions", "organizations_url": "https://api.github.com/users/seiyab/orgs", "repos_url": "https://api.github.com/users/seiyab/repos", "events_url": "https://api.github.com/users/seiyab/events{/privacy}", "received_events_url": "https://api.github.com/users/seiyab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "seiyab", "id": 20365512, "node_id": "MDQ6VXNlcjIwMzY1NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/20365512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seiyab", "html_url": "https://github.com/seiyab", "followers_url": "https://api.github.com/users/seiyab/followers", "following_url": "https://api.github.com/users/seiyab/following{/other_user}", "gists_url": "https://api.github.com/users/seiyab/gists{/gist_id}", "starred_url": "https://api.github.com/users/seiyab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seiyab/subscriptions", "organizations_url": "https://api.github.com/users/seiyab/orgs", "repos_url": "https://api.github.com/users/seiyab/repos", "events_url": "https://api.github.com/users/seiyab/events{/privacy}", "received_events_url": "https://api.github.com/users/seiyab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f742afaca4c5afa3277f7102eac1e7a49048fefe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f742afaca4c5afa3277f7102eac1e7a49048fefe", "html_url": "https://github.com/rust-lang/rust/commit/f742afaca4c5afa3277f7102eac1e7a49048fefe"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ac1f3847d964c9910778311656e207610420cb03", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3f8db6a2f5ae2a4895906f6ed340003affee6d5/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f8db6a2f5ae2a4895906f6ed340003affee6d5/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=d3f8db6a2f5ae2a4895906f6ed340003affee6d5", "patch": "@@ -255,7 +255,9 @@ impl<'a, 'tcx> Visitor<'tcx> for MarkSymbolVisitor<'a, 'tcx> {\n             hir::ExprKind::Field(ref lhs, ..) => {\n                 self.handle_field_access(&lhs, expr.hir_id);\n             }\n-            hir::ExprKind::Struct(_, ref fields, _) => {\n+            hir::ExprKind::Struct(ref qpath, ref fields, _) => {\n+                let res = self.tables.qpath_res(qpath, expr.hir_id);\n+                self.handle_res(res);\n                 if let ty::Adt(ref adt, _) = self.tables.expr_ty(expr).kind {\n                     self.mark_as_used_if_union(adt, fields);\n                 }"}]}