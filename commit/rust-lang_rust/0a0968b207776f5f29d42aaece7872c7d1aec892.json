{"sha": "0a0968b207776f5f29d42aaece7872c7d1aec892", "node_id": "C_kwDOAAsO6NoAKDBhMDk2OGIyMDc3NzZmNWYyOWQ0MmFhZWNlNzg3MmM3ZDFhZWM4OTI", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-09T20:30:24Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-09T20:30:24Z"}, "message": "Allow `modulo_one` on function using cfg consts", "tree": {"sha": "ac86f2304a2c2b7a3efa6c877eca3cf64eb23929", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac86f2304a2c2b7a3efa6c877eca3cf64eb23929"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a0968b207776f5f29d42aaece7872c7d1aec892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0968b207776f5f29d42aaece7872c7d1aec892", "html_url": "https://github.com/rust-lang/rust/commit/0a0968b207776f5f29d42aaece7872c7d1aec892", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a0968b207776f5f29d42aaece7872c7d1aec892/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "968be9875664ba794f27e4a5bfa3b97f09f0582d", "url": "https://api.github.com/repos/rust-lang/rust/commits/968be9875664ba794f27e4a5bfa3b97f09f0582d", "html_url": "https://github.com/rust-lang/rust/commit/968be9875664ba794f27e4a5bfa3b97f09f0582d"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "bd7a86f67800f8d81b306ed3d100fcb8b7ba9fd8", "filename": "compiler/rustc_data_structures/src/sharded.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a0968b207776f5f29d42aaece7872c7d1aec892/compiler%2Frustc_data_structures%2Fsrc%2Fsharded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0968b207776f5f29d42aaece7872c7d1aec892/compiler%2Frustc_data_structures%2Fsrc%2Fsharded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsharded.rs?ref=0a0968b207776f5f29d42aaece7872c7d1aec892", "patch": "@@ -140,6 +140,7 @@ pub fn make_hash<K: Hash + ?Sized>(val: &K) -> u64 {\n /// `hash` can be computed with any hasher, so long as that hasher is used\n /// consistently for each `Sharded` instance.\n #[inline]\n+#[allow(clippy::modulo_one)]\n pub fn get_shard_index_by_hash(hash: u64) -> usize {\n     let hash_len = mem::size_of::<usize>();\n     // Ignore the top 7 bits as hashbrown uses these and get the next SHARD_BITS highest bits."}]}