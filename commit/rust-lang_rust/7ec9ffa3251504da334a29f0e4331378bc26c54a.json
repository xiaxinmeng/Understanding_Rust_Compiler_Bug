{"sha": "7ec9ffa3251504da334a29f0e4331378bc26c54a", "node_id": "C_kwDOAAsO6NoAKDdlYzlmZmEzMjUxNTA0ZGEzMzRhMjlmMGU0MzMxMzc4YmMyNmM1NGE", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-23T20:48:38Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-24T00:33:59Z"}, "message": "Properly support IDE functionality in enum variants", "tree": {"sha": "ab7e5b5e0e76d5fc47f56d338c11f5c1d56147d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab7e5b5e0e76d5fc47f56d338c11f5c1d56147d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ec9ffa3251504da334a29f0e4331378bc26c54a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec9ffa3251504da334a29f0e4331378bc26c54a", "html_url": "https://github.com/rust-lang/rust/commit/7ec9ffa3251504da334a29f0e4331378bc26c54a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ec9ffa3251504da334a29f0e4331378bc26c54a/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14400785acd92d6f1b8ec52179a23839dfe542a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/14400785acd92d6f1b8ec52179a23839dfe542a9", "html_url": "https://github.com/rust-lang/rust/commit/14400785acd92d6f1b8ec52179a23839dfe542a9"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "bb13165257ba416c0d32e909c67750c1e99b6fa2", "filename": "crates/hir-def/src/child_by_source.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ec9ffa3251504da334a29f0e4331378bc26c54a/crates%2Fhir-def%2Fsrc%2Fchild_by_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec9ffa3251504da334a29f0e4331378bc26c54a/crates%2Fhir-def%2Fsrc%2Fchild_by_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fchild_by_source.rs?ref=7ec9ffa3251504da334a29f0e4331378bc26c54a", "patch": "@@ -198,6 +198,10 @@ impl ChildBySource for EnumId {\n impl ChildBySource for DefWithBodyId {\n     fn child_by_source_to(&self, db: &dyn DefDatabase, res: &mut DynMap, file_id: HirFileId) {\n         let body = db.body(*self);\n+        if let &DefWithBodyId::VariantId(v) = self {\n+            VariantId::EnumVariantId(v).child_by_source_to(db, res, file_id)\n+        }\n+\n         for (_, def_map) in body.blocks(db) {\n             // All block expressions are merged into the same map, because they logically all add\n             // inner items to the containing `DefWithBodyId`."}, {"sha": "9fcaac85bce00a6fc519d36c046bc4fbe7bc0376", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ec9ffa3251504da334a29f0e4331378bc26c54a/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec9ffa3251504da334a29f0e4331378bc26c54a/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=7ec9ffa3251504da334a29f0e4331378bc26c54a", "patch": "@@ -377,10 +377,10 @@ impl ModuleDef {\n             ModuleDef::Function(it) => Some(it.into()),\n             ModuleDef::Const(it) => Some(it.into()),\n             ModuleDef::Static(it) => Some(it.into()),\n+            ModuleDef::Variant(it) => Some(it.into()),\n \n             ModuleDef::Module(_)\n             | ModuleDef::Adt(_)\n-            | ModuleDef::Variant(_)\n             | ModuleDef::Trait(_)\n             | ModuleDef::TypeAlias(_)\n             | ModuleDef::Macro(_)\n@@ -1160,7 +1160,7 @@ pub enum DefWithBody {\n     Const(Const),\n     Variant(Variant),\n }\n-impl_from!(Function, Const, Static for DefWithBody);\n+impl_from!(Function, Const, Static, Variant for DefWithBody);\n \n impl DefWithBody {\n     pub fn module(self, db: &dyn HirDatabase) -> Module {"}, {"sha": "fa45e3c12eb009b37a00aaf71ad95d94993897f3", "filename": "crates/hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ec9ffa3251504da334a29f0e4331378bc26c54a/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec9ffa3251504da334a29f0e4331378bc26c54a/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=7ec9ffa3251504da334a29f0e4331378bc26c54a", "patch": "@@ -384,7 +384,7 @@ impl SourceToDefCtx<'_, '_> {\n         } else {\n             let it = ast::Variant::cast(container.value)?;\n             let def = self.enum_variant_to_def(InFile::new(container.file_id, it))?;\n-            VariantId::from(def).into()\n+            DefWithBodyId::from(def).into()\n         };\n         Some(cont)\n     }"}]}