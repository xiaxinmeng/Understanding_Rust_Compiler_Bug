{"sha": "169ef781f9ddc9954a2e1aa58351cd14983c9ae6", "node_id": "C_kwDOAAsO6NoAKDE2OWVmNzgxZjlkZGM5OTU0YTJlMWFhNTgzNTFjZDE0OTgzYzlhZTY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-01T18:10:43Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-01T18:12:51Z"}, "message": "Improve wording", "tree": {"sha": "7fe8d92ecf2b2835231aff43cf3b9c1b3c352ec0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fe8d92ecf2b2835231aff43cf3b9c1b3c352ec0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/169ef781f9ddc9954a2e1aa58351cd14983c9ae6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgbSfWKRQb2tiqhuHtakDJeupmrF\nChDbM0msU+PXaBOk8AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQOUgXLqqU78LiX2CUDbhaU2w39+110YdbFQjOzRXfcVQPu7vH7BthZzwjsM/UnIi5t\ndhS8fe0o6/K85bjFS+bQ0=\n-----END SSH SIGNATURE-----", "payload": "tree 7fe8d92ecf2b2835231aff43cf3b9c1b3c352ec0\nparent b91dc035106f4c203d67d2a0db0077c7a887224b\nauthor Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1664647843 +0200\ncommitter Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1664647971 +0200\n\nImprove wording\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/169ef781f9ddc9954a2e1aa58351cd14983c9ae6", "html_url": "https://github.com/rust-lang/rust/commit/169ef781f9ddc9954a2e1aa58351cd14983c9ae6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/169ef781f9ddc9954a2e1aa58351cd14983c9ae6/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b91dc035106f4c203d67d2a0db0077c7a887224b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b91dc035106f4c203d67d2a0db0077c7a887224b", "html_url": "https://github.com/rust-lang/rust/commit/b91dc035106f4c203d67d2a0db0077c7a887224b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9a48e8d064a52018f07465f74d988839d2328767", "filename": "clippy_lints/src/casts/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/169ef781f9ddc9954a2e1aa58351cd14983c9ae6/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169ef781f9ddc9954a2e1aa58351cd14983c9ae6/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs?ref=169ef781f9ddc9954a2e1aa58351cd14983c9ae6", "patch": "@@ -602,8 +602,8 @@ declare_clippy_lint! {\n     /// Checks for the result of a `&self`-taking `as_ptr` being cast to a mutable pointer\n     ///\n     /// ### Why is this bad?\n-    /// Since `as_ptr` took a `&self`, the pointer won't have write permissions, making it\n-    /// unlikely that having it as a mutable pointer is correct.\n+    /// Since `as_ptr` takes a `&self`, the pointer won't have write permissions unless interior\n+    /// mutability is used, making it unlikely that having it as a mutable pointer is correct.\n     ///\n     /// ### Example\n     /// ```rust\n@@ -620,7 +620,7 @@ declare_clippy_lint! {\n     #[clippy::version = \"1.66.0\"]\n     pub AS_PTR_CAST_MUT,\n     nursery,\n-    \"casting the result of the `&self`-taking as_ptr to a mutabe point\"\n+    \"casting the result of the `&self`-taking `as_ptr` to a mutabe pointer\"\n }\n \n pub struct Casts {"}, {"sha": "83332a2559d1c99a906aa3840ec80d5e8c71c032", "filename": "src/docs/as_ptr_cast_mut.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/169ef781f9ddc9954a2e1aa58351cd14983c9ae6/src%2Fdocs%2Fas_ptr_cast_mut.txt", "raw_url": "https://github.com/rust-lang/rust/raw/169ef781f9ddc9954a2e1aa58351cd14983c9ae6/src%2Fdocs%2Fas_ptr_cast_mut.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdocs%2Fas_ptr_cast_mut.txt?ref=169ef781f9ddc9954a2e1aa58351cd14983c9ae6", "patch": "@@ -2,8 +2,8 @@\n Checks for the result of a `&self`-taking `as_ptr` being cast to a mutable pointer\n \n ### Why is this bad?\n-Since `as_ptr` took a `&self`, the pointer won't have write permissions, making it\n-unlikely that having it as a mutable pointer is correct.\n+Since `as_ptr` takes a `&self`, the pointer won't have write permissions unless interior\n+mutability is used, making it unlikely that having it as a mutable pointer is correct.\n \n ### Example\n ```"}]}