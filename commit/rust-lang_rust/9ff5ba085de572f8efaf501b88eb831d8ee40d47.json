{"sha": "9ff5ba085de572f8efaf501b88eb831d8ee40d47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZjViYTA4NWRlNTcyZjhlZmFmNTAxYjg4ZWI4MzFkOGVlNDBkNDc=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-15T09:19:51Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-15T10:53:32Z"}, "message": "Fix bad line printing for parse errors\n\nThe code that extracted lines from partially-parsed files\nwas broken.\n\nCloses #1848", "tree": {"sha": "03f7e1cbb33736bd9be7e1d0b974cf7f5aaf8711", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03f7e1cbb33736bd9be7e1d0b974cf7f5aaf8711"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ff5ba085de572f8efaf501b88eb831d8ee40d47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff5ba085de572f8efaf501b88eb831d8ee40d47", "html_url": "https://github.com/rust-lang/rust/commit/9ff5ba085de572f8efaf501b88eb831d8ee40d47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ff5ba085de572f8efaf501b88eb831d8ee40d47/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6627890f6bcbf2a2b71229572023cfaec91ab805", "url": "https://api.github.com/repos/rust-lang/rust/commits/6627890f6bcbf2a2b71229572023cfaec91ab805", "html_url": "https://github.com/rust-lang/rust/commit/6627890f6bcbf2a2b71229572023cfaec91ab805"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "8f0570a434959fc600de840fc6f151014efe36b9", "filename": "src/comp/driver/diagnostic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9ff5ba085de572f8efaf501b88eb831d8ee40d47/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff5ba085de572f8efaf501b88eb831d8ee40d47/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fdiagnostic.rs?ref=9ff5ba085de572f8efaf501b88eb831d8ee40d47", "patch": "@@ -204,8 +204,7 @@ fn highlight_lines(cm: codemap::codemap, sp: span,\n     // Print the offending lines\n     for line: uint in display_lines {\n         io::stderr().write_str(#fmt[\"%s:%u \", fm.name, line + 1u]);\n-        let s = codemap::get_line(fm, line as int);\n-        if !str::ends_with(s, \"\\n\") { s += \"\\n\"; }\n+        let s = codemap::get_line(fm, line as int) + \"\\n\";\n         io::stderr().write_str(s);\n     }\n     if elided {"}, {"sha": "7e153839448cb461f3edfa17f96a1e9169c3dabc", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9ff5ba085de572f8efaf501b88eb831d8ee40d47/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff5ba085de572f8efaf501b88eb831d8ee40d47/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=9ff5ba085de572f8efaf501b88eb831d8ee40d47", "patch": "@@ -157,16 +157,11 @@ fn span_to_lines(sp: span, cm: codemap::codemap) -> @file_lines {\n \n fn get_line(fm: filemap, line: int) -> str unsafe {\n     let begin: uint = fm.lines[line].byte - fm.start_pos.byte;\n-    let end: uint;\n-    if line as uint < vec::len(fm.lines) - 1u {\n-        end = fm.lines[line + 1].byte - fm.start_pos.byte;\n-        ret str::unsafe::slice_bytes(*fm.src, begin, end);\n-    } else {\n-        // If we're not done parsing the file, we're at the limit of what's\n-        // parsed. If we just slice the rest of the string, we'll print out\n-        // the remainder of the file, which is undesirable.\n-        ret str::splitn_char(*fm.src, '\\n', 1u)[0];\n-    }\n+    let end = alt str::byte_index(*fm.src, '\\n' as u8, begin) {\n+      some(e) { e }\n+      none { str::len(*fm.src) }\n+    };\n+    str::unsafe::slice_bytes(*fm.src, begin, end)\n }\n \n fn lookup_byte_offset(cm: codemap::codemap, chpos: uint)"}, {"sha": "d71828c79e834fd98e95d185bbf92ebc78e6bda9", "filename": "src/libcore/str.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9ff5ba085de572f8efaf501b88eb831d8ee40d47/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff5ba085de572f8efaf501b88eb831d8ee40d47/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=9ff5ba085de572f8efaf501b88eb831d8ee40d47", "patch": "@@ -68,6 +68,7 @@ export\n \n    // Searching\n    index,\n+   byte_index,\n    rindex,\n    find,\n    find_bytes,\n@@ -852,6 +853,19 @@ fn index(ss: str, cc: char) -> option<uint> {\n     ret option::none;\n }\n \n+// Function: byte_index\n+//\n+// Returns the index of the first matching byte\n+// (as option some/none)\n+fn byte_index(s: str, b: u8, start: uint) -> option<uint> {\n+    let i = start, l = len_bytes(s);\n+    while i < l {\n+        if s[i] == b { ret some(i); }\n+        i += 1u;\n+    }\n+    ret none;\n+}\n+\n // Function: rindex\n //\n // Returns the index of the first matching char"}]}