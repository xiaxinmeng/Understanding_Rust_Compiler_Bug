{"sha": "d769539f428fb48ea9bb0f8c703b805eb9664fee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3Njk1MzlmNDI4ZmI0OGVhOWJiMGY4YzcwM2I4MDVlYjk2NjRmZWU=", "commit": {"author": {"name": "Gauri", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-01-16T20:01:21Z"}, "committer": {"name": "Gauri", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-01-16T20:01:21Z"}, "message": "fix tidy checks", "tree": {"sha": "3a26a75cbad3a95a9f7e640123a3a3fb17f063ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a26a75cbad3a95a9f7e640123a3a3fb17f063ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d769539f428fb48ea9bb0f8c703b805eb9664fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d769539f428fb48ea9bb0f8c703b805eb9664fee", "html_url": "https://github.com/rust-lang/rust/commit/d769539f428fb48ea9bb0f8c703b805eb9664fee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d769539f428fb48ea9bb0f8c703b805eb9664fee/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "html_url": "https://github.com/rust-lang/rust/commit/3c8c5051b18c604a4a1c0a01a6515ff3852341e1"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "aad5373ae00dd874e00006eb22f796b3dda247c4", "filename": "src/test/ui/issue-47377-1.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377-1.stderr?ref=3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "patch": "@@ -1,12 +0,0 @@\n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n-  --> $DIR/issue-47377-1.rs:13:37\n-   |\n-13 |         println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\"; //~ERROR 13:37: 13:51: binary operation `+` cannot be applied to type `&str` [E0369]\n-   |                                          ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n-help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n-   |\n-13 |         println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b.to_owned() + \", World!\"; //~ERROR 13:37: 13:51: binary operation `+` cannot be applied to type `&str` [E0369]\n-   |                                          ^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "f2e18590ddef51e22629d46f3db3663be83586a0", "filename": "src/test/ui/issue-47377.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47377.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47377.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377.rs?ref=d769539f428fb48ea9bb0f8c703b805eb9664fee", "patch": "@@ -7,8 +7,8 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-\n fn main(){\n     let b = \"hello\";\n-    let _a = b + \", World!\"; //~ERROR 13:14: 13:28: binary operation `+` cannot be applied to type `&str` [E0369]\n-}\n\\ No newline at end of file\n+    let _a = b + \", World!\";\n+    //~^ ERROR E0369\n+}"}, {"sha": "b80867f1714a086f1c1c6789ab2f0e01ce86d1fc", "filename": "src/test/ui/issue-47377.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47377.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47377.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377.stderr?ref=d769539f428fb48ea9bb0f8c703b805eb9664fee", "patch": "@@ -1,11 +1,11 @@\n error[E0369]: binary operation `+` cannot be applied to type `&str`\n-  --> $DIR/issue-47377.rs:13:14\n+  --> $DIR/issue-47377.rs:12:14\n    |\n-13 |     let _a = b + \", World!\"; //~ERROR 13:14: 13:28: binary operation `+` cannot be applied to type `&str` [E0369]\n+12 |     let _a = b + \", World!\";\n    |              ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n    |\n-13 |     let _a = b.to_owned() + \", World!\"; //~ERROR 13:14: 13:28: binary operation `+` cannot be applied to type `&str` [E0369]\n+12 |     let _a = b.to_owned() + \", World!\";\n    |              ^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "748891fad5aabcca3fd79016a5790d6177b861aa", "filename": "src/test/ui/issue-47380.rs", "status": "renamed", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47380.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47380.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47380.rs?ref=d769539f428fb48ea9bb0f8c703b805eb9664fee", "patch": "@@ -7,8 +7,9 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-\n+// ignore-tidy-tab\n fn main(){\n     let b = \"hello\";\n-        println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\"; //~ERROR 13:37: 13:51: binary operation `+` cannot be applied to type `&str` [E0369]\n-}\n\\ No newline at end of file\n+    println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\";\n+    //~^ ERROR E0369\n+}", "previous_filename": "src/test/ui/issue-47377-1.rs"}, {"sha": "8ead1697c7f682551a7da3d3a899b73a6d89e8a2", "filename": "src/test/ui/issue-47380.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47380.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d769539f428fb48ea9bb0f8c703b805eb9664fee/src%2Ftest%2Fui%2Fissue-47380.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47380.stderr?ref=d769539f428fb48ea9bb0f8c703b805eb9664fee", "patch": "@@ -0,0 +1,12 @@\n+error[E0369]: binary operation `+` cannot be applied to type `&str`\n+  --> $DIR/blah.rs:13:33\n+   |\n+13 |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\";\n+   |                                      ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n+help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n+   |\n+13 |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b.to_owned() + \", World!\";\n+   |                                      ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}