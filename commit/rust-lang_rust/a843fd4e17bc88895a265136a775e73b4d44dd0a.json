{"sha": "a843fd4e17bc88895a265136a775e73b4d44dd0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NDNmZDRlMTdiYzg4ODk1YTI2NTEzNmE3NzVlNzNiNGQ0NGRkMGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-12T20:50:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-12T21:04:58Z"}, "message": "add test for layout optimizations", "tree": {"sha": "9d7fd5f433da302ebbb7519ffcd3d1d1c0c4032b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d7fd5f433da302ebbb7519ffcd3d1d1c0c4032b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a843fd4e17bc88895a265136a775e73b4d44dd0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a843fd4e17bc88895a265136a775e73b4d44dd0a", "html_url": "https://github.com/rust-lang/rust/commit/a843fd4e17bc88895a265136a775e73b4d44dd0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a843fd4e17bc88895a265136a775e73b4d44dd0a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87644d120fb6d0f349e003d212dd8dd5053edd49", "url": "https://api.github.com/repos/rust-lang/rust/commits/87644d120fb6d0f349e003d212dd8dd5053edd49", "html_url": "https://github.com/rust-lang/rust/commit/87644d120fb6d0f349e003d212dd8dd5053edd49"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "83db10577cebfc162da20fb76ac4a66ca0a4b001", "filename": "tests/run-pass/stacked-borrows/refcell.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a843fd4e17bc88895a265136a775e73b4d44dd0a/tests%2Frun-pass%2Fstacked-borrows%2Frefcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a843fd4e17bc88895a265136a775e73b4d44dd0a/tests%2Frun-pass%2Fstacked-borrows%2Frefcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Frefcell.rs?ref=a843fd4e17bc88895a265136a775e73b4d44dd0a", "patch": "@@ -4,6 +4,7 @@ fn main() {\n     basic();\n     ref_protector();\n     ref_mut_protector();\n+    rust_issue_68303();\n }\n \n fn basic() {\n@@ -66,3 +67,11 @@ fn ref_mut_protector() {\n     let rc = RefCell::new(0);\n     break_it(&rc, rc.borrow_mut())\n }\n+\n+/// Make sure we do not have bad enum layout optimizations.\n+fn rust_issue_68303() {\n+    let optional=Some(RefCell::new(false));\n+    let mut handle=optional.as_ref().unwrap().borrow_mut();\n+    assert!(optional.is_some());\n+    *handle=true;\n+}"}]}