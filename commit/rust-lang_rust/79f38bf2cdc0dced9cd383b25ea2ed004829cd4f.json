{"sha": "79f38bf2cdc0dced9cd383b25ea2ed004829cd4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZjM4YmYyY2RjMGRjZWQ5Y2QzODNiMjVlYTJlZDAwNDgyOWNkNGY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-31T15:14:49Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-01T14:12:29Z"}, "message": "Process untagged unions", "tree": {"sha": "6c9138595d96a47f68611e5b056ed01e0225d1da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c9138595d96a47f68611e5b056ed01e0225d1da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f38bf2cdc0dced9cd383b25ea2ed004829cd4f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmAjE0ACgkQpp+NIls6\n19ksZxAAnPVIWrkmctDT6GerhIJlECOWNWxmkd4n3qwEcAVUD3bJCGODv5XoiUw5\n5jqfm//Y1nPWSIyOlcH37s2bGdVQDyppYEgZRuq4rLoDCwBTgq3yTot4zzawyFJp\ntErDUdB9bckhl/RnkSBGdRIaHRhcno10Ssjm4UhnKBjehXXX/oZqbhdP6/p7Yyat\nmsxVEd8vfNte4GQQBWMCmS3t4ymzkAypWYLTLGzR8gxrhhtqLhsugAG1eiRSuasj\nIR7EULPIWAYwJhyZmbLIFZtSQd1h2baNK50Sm0z1wOfJDDhn1PRhRUzCzmUFKzO/\nXzvsgsSY0rz2JuVttKNZbagZbxA8/e1XCIQlYAMp+aTDWbI+aBiXese0jwt+vmGN\n39NzLH6GaFn/n1/GGptFgSNW5cv2fAnz5l/HBLaaFrC0BQz/VI+v92xYIhVDr4MG\nsqugwAbGKpxaX/CDf0h3352LVCcExUqWbORklB3WrF697ez/zrCnCGCYZOCUNPIX\nOG8cm3Wy5bThX495uI80IIi4qy7AMrNm7wYMSnTk0mrcEd8vHt9Z4rIMb1Kgyj7k\nTmxqzhvDWAesHVi4AY7OiRE4x8vEqNPv4aenH5IU/YSAQKnihZoKTFQTPEPRZ4I0\nfA7pkAUp0gxPL9j8LKbaRZGocVhXcOmXo2/QgwggC79nd7nvHzA=\n=XmKv\n-----END PGP SIGNATURE-----", "payload": "tree 6c9138595d96a47f68611e5b056ed01e0225d1da\nparent 393216d410e70bc5a05626856a9b562a19fb33b7\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1501514089 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1501596749 +0200\n\nProcess untagged unions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f38bf2cdc0dced9cd383b25ea2ed004829cd4f", "html_url": "https://github.com/rust-lang/rust/commit/79f38bf2cdc0dced9cd383b25ea2ed004829cd4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f38bf2cdc0dced9cd383b25ea2ed004829cd4f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393216d410e70bc5a05626856a9b562a19fb33b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/393216d410e70bc5a05626856a9b562a19fb33b7", "html_url": "https://github.com/rust-lang/rust/commit/393216d410e70bc5a05626856a9b562a19fb33b7"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "86e5d855f44a90b41b2c36c97d5f30ea461afa61", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79f38bf2cdc0dced9cd383b25ea2ed004829cd4f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f38bf2cdc0dced9cd383b25ea2ed004829cd4f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=79f38bf2cdc0dced9cd383b25ea2ed004829cd4f", "patch": "@@ -955,6 +955,8 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n                 let variant_def = adt_def.struct_variant();\n                 use rustc::ty::layout::Layout::*;\n                 match *self.type_layout(ty)? {\n+                    UntaggedUnion { ref variants } => \n+                        Ok(TyAndPacked { ty: variant_def.fields[field_index].ty(self.tcx, substs), packed: variants.packed }),\n                     Univariant { ref variant, .. } =>\n                         Ok(TyAndPacked { ty: variant_def.fields[field_index].ty(self.tcx, substs), packed: variant.packed }),\n                     _ => Err(EvalError::Unimplemented(format!(\"get_field_ty can't handle struct type: {:?}, {:?}\", ty, ty.sty))),\n@@ -988,8 +990,9 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n             StructWrappedNullablePointer { ref nonnull, .. } => {\n                 Ok(nonnull.offsets[field_index])\n             }\n+            UntaggedUnion { .. } => Ok(Size::from_bytes(0)),\n             _ => {\n-                let msg = format!(\"can't handle type: {:?}, with layout: {:?}\", ty, layout);\n+                let msg = format!(\"get_field_offset: can't handle type: {:?}, with layout: {:?}\", ty, layout);\n                 Err(EvalError::Unimplemented(msg))\n             }\n         }\n@@ -1006,8 +1009,9 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n             Vector { count , .. } |\n             Array { count, .. } => Ok(count),\n             Scalar { .. } => Ok(0),\n+            UntaggedUnion { .. } => Ok(1),\n             _ => {\n-                let msg = format!(\"can't handle type: {:?}, with layout: {:?}\", ty, layout);\n+                let msg = format!(\"get_field_count: can't handle type: {:?}, with layout: {:?}\", ty, layout);\n                 Err(EvalError::Unimplemented(msg))\n             }\n         }"}]}