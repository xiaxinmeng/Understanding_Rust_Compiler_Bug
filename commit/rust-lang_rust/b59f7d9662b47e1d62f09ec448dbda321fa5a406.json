{"sha": "b59f7d9662b47e1d62f09ec448dbda321fa5a406", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OWY3ZDk2NjJiNDdlMWQ2MmYwOWVjNDQ4ZGJkYTMyMWZhNWE0MDY=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-05-18T09:37:28Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-06-14T08:58:32Z"}, "message": "stabilize `int_error_matching`", "tree": {"sha": "451307dee2ad7bb8834f86b90e3ceb05bf2ff551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/451307dee2ad7bb8834f86b90e3ceb05bf2ff551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59f7d9662b47e1d62f09ec448dbda321fa5a406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59f7d9662b47e1d62f09ec448dbda321fa5a406", "html_url": "https://github.com/rust-lang/rust/commit/b59f7d9662b47e1d62f09ec448dbda321fa5a406", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59f7d9662b47e1d62f09ec448dbda321fa5a406/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14831568d506b5ee7be3e7d5a2f029ce9048b609", "url": "https://api.github.com/repos/rust-lang/rust/commits/14831568d506b5ee7be3e7d5a2f029ce9048b609", "html_url": "https://github.com/rust-lang/rust/commit/14831568d506b5ee7be3e7d5a2f029ce9048b609"}], "stats": {"total": 41, "additions": 10, "deletions": 31}, "files": [{"sha": "649913dd025b5838a02d717505cceaf994a78680", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b59f7d9662b47e1d62f09ec448dbda321fa5a406/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59f7d9662b47e1d62f09ec448dbda321fa5a406/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=b59f7d9662b47e1d62f09ec448dbda321fa5a406", "patch": "@@ -42,7 +42,6 @@\n #![feature(crate_visibility_modifier)]\n #![feature(associated_type_bounds)]\n #![feature(rustc_attrs)]\n-#![feature(int_error_matching)]\n #![feature(half_open_range_patterns)]\n #![feature(exclusive_range_pattern)]\n #![feature(control_flow_enum)]"}, {"sha": "73959291481d8d1bc944700a0c4c72713497d7f6", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=b59f7d9662b47e1d62f09ec448dbda321fa5a406", "patch": "@@ -165,7 +165,6 @@\n #![feature(slice_ptr_get)]\n #![feature(no_niche)] // rust-lang/rust#68303\n #![feature(no_coverage)] // rust-lang/rust#84605\n-#![feature(int_error_matching)]\n #![cfg_attr(bootstrap, feature(target_feature_11))]\n #![deny(unsafe_op_in_unsafe_fn)]\n #![deny(or_patterns_back_compat)]"}, {"sha": "07902eec2e8f99361334859bb442515cf833ad40", "filename": "library/core/src/num/error.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs?ref=b59f7d9662b47e1d62f09ec448dbda321fa5a406", "patch": "@@ -74,26 +74,20 @@ pub struct ParseIntError {\n /// # Example\n ///\n /// ```\n-/// #![feature(int_error_matching)]\n-///\n /// # fn main() {\n /// if let Err(e) = i32::from_str_radix(\"a12\", 10) {\n ///     println!(\"Failed conversion to i32: {:?}\", e.kind());\n /// }\n /// # }\n /// ```\n-#[unstable(\n-    feature = \"int_error_matching\",\n-    reason = \"it can be useful to match errors when making error messages \\\n-              for integer parsing\",\n-    issue = \"22639\"\n-)]\n+#[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[non_exhaustive]\n pub enum IntErrorKind {\n     /// Value being parsed is empty.\n     ///\n-    /// Among other causes, this variant will be constructed when parsing an empty string.\n+    /// This variant will be constructed when parsing an empty string.\n+    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n     Empty,\n     /// Contains an invalid digit in its context.\n     ///\n@@ -102,26 +96,25 @@ pub enum IntErrorKind {\n     ///\n     /// This variant is also constructed when a `+` or `-` is misplaced within a string\n     /// either on its own or in the middle of a number.\n+    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n     InvalidDigit,\n     /// Integer is too large to store in target integer type.\n+    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n     PosOverflow,\n     /// Integer is too small to store in target integer type.\n+    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n     NegOverflow,\n     /// Value was Zero\n     ///\n     /// This variant will be emitted when the parsing string has a value of zero, which\n     /// would be illegal for non-zero types.\n+    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n     Zero,\n }\n \n impl ParseIntError {\n     /// Outputs the detailed cause of parsing an integer failing.\n-    #[unstable(\n-        feature = \"int_error_matching\",\n-        reason = \"it can be useful to match errors when making error messages \\\n-              for integer parsing\",\n-        issue = \"22639\"\n-    )]\n+    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n     pub fn kind(&self) -> &IntErrorKind {\n         &self.kind\n     }"}, {"sha": "464f241982d4aae64ea332fd9ba3404603615c2e", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=b59f7d9662b47e1d62f09ec448dbda321fa5a406", "patch": "@@ -57,12 +57,7 @@ pub use nonzero::{NonZeroI128, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI8, No\n #[stable(feature = \"try_from\", since = \"1.34.0\")]\n pub use error::TryFromIntError;\n \n-#[unstable(\n-    feature = \"int_error_matching\",\n-    reason = \"it can be useful to match errors when making error messages \\\n-              for integer parsing\",\n-    issue = \"22639\"\n-)]\n+#[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n pub use error::IntErrorKind;\n \n macro_rules! usize_isize_to_xe_bytes_doc {"}, {"sha": "2ff1e75ab870313db8e2cf33479a7af54cc0fd93", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=b59f7d9662b47e1d62f09ec448dbda321fa5a406", "patch": "@@ -46,7 +46,6 @@\n #![feature(try_trait_v2)]\n #![feature(slice_internals)]\n #![feature(slice_partition_dedup)]\n-#![feature(int_error_matching)]\n #![feature(iter_advance_by)]\n #![feature(iter_partition_in_place)]\n #![feature(iter_intersperse)]"}, {"sha": "62722c9d521f4717addf03bdbd7933f8bc5a66e0", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=b59f7d9662b47e1d62f09ec448dbda321fa5a406", "patch": "@@ -275,7 +275,6 @@\n #![feature(global_asm)]\n #![feature(hashmap_internals)]\n #![feature(int_error_internals)]\n-#![feature(int_error_matching)]\n #![feature(integer_atomics)]\n #![feature(into_future)]\n #![feature(intra_doc_pointers)]"}, {"sha": "b08ec710305ca28aa74b37c9083bd72e44c46c65", "filename": "library/std/src/num.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fstd%2Fsrc%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59f7d9662b47e1d62f09ec448dbda321fa5a406/library%2Fstd%2Fsrc%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnum.rs?ref=b59f7d9662b47e1d62f09ec448dbda321fa5a406", "patch": "@@ -22,12 +22,7 @@ pub use core::num::{NonZeroI128, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI8,\n #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n pub use core::num::{NonZeroU128, NonZeroU16, NonZeroU32, NonZeroU64, NonZeroU8, NonZeroUsize};\n \n-#[unstable(\n-    feature = \"int_error_matching\",\n-    reason = \"it can be useful to match errors when making error messages \\\n-              for integer parsing\",\n-    issue = \"22639\"\n-)]\n+ #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n pub use core::num::IntErrorKind;\n \n #[cfg(test)]"}]}