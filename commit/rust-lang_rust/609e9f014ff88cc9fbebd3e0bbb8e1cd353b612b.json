{"sha": "609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwOWU5ZjAxNGZmODhjYzlmYmViZDNlMGJiYjhlMWNkMzUzYjYxMmI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-04T09:07:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-04T09:07:11Z"}, "message": "Rollup merge of #49512 - GuillaumeGomez:intra-links-fields, r=QuietMisdreavus\n\nAdd support for variant and types fields for intra links\n\nPart of #43466.\n\nr? @QuietMisdreavus", "tree": {"sha": "a24e7ecb5846465e945b7d2b018bf9373c2223b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a24e7ecb5846465e945b7d2b018bf9373c2223b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaxJW/CRBK7hj4Ov3rIwAAdHIIACbQvEkn4iYABE10xcUHWxMo\nysL6s74Fd2s6GPDesAb0lnxpYbAunKJmTc0gw2ahXx4T9shX4JLIRMRfnpEDDnNi\nSHpnbeW2YdkYByuKTEnh+R6IVeTsZVsJWzUCAUsIzbHP2lRNbeuWy1zjprS85dLe\nfPEAApJMVYb8fgIwQcZR1NqTscPKyFus/Xn4/SBhvwfKSQ5KxGPY54IOpNREdZiN\n3K0XPmFyee6ex7uDDmc3pSfhPogspqXjYtO8FJDa1ZFogrplAf5pqqD6Wq8C24V1\nE071YMDzgYBNiXwUQRTKD4ueVjztirUuL2LENgKT/L0sartOQ+cBmpsFyvH2X9w=\n=SXEd\n-----END PGP SIGNATURE-----\n", "payload": "tree a24e7ecb5846465e945b7d2b018bf9373c2223b9\nparent b7b2ae2b6f88ea29290e0b25576c4a92690c0e26\nparent d0eeb291dddb99ad6f2aedafa5355556b40e483f\nauthor kennytm <kennytm@gmail.com> 1522832831 +0200\ncommitter GitHub <noreply@github.com> 1522832831 +0200\n\nRollup merge of #49512 - GuillaumeGomez:intra-links-fields, r=QuietMisdreavus\n\nAdd support for variant and types fields for intra links\n\nPart of #43466.\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b", "html_url": "https://github.com/rust-lang/rust/commit/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "html_url": "https://github.com/rust-lang/rust/commit/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26"}, {"sha": "d0eeb291dddb99ad6f2aedafa5355556b40e483f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0eeb291dddb99ad6f2aedafa5355556b40e483f", "html_url": "https://github.com/rust-lang/rust/commit/d0eeb291dddb99ad6f2aedafa5355556b40e483f"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "125e71a2a6128ac39b8f11950c9c878b24c2240a", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b", "patch": "@@ -1074,8 +1074,7 @@ fn resolve(cx: &DocContext, path_str: &str, is_val: bool) -> Result<(Def, Option\n         let ty = cx.resolver.borrow_mut()\n                             .with_scope(*id,\n             |resolver| {\n-                resolver.resolve_str_path_error(DUMMY_SP,\n-                                                &path, false)\n+                resolver.resolve_str_path_error(DUMMY_SP, &path, false)\n         })?;\n         match ty.def {\n             Def::Struct(did) | Def::Union(did) | Def::Enum(did) | Def::TyAlias(did) => {\n@@ -1090,7 +1089,27 @@ fn resolve(cx: &DocContext, path_str: &str, is_val: bool) -> Result<(Def, Option\n                     };\n                     Ok((ty.def, Some(format!(\"{}.{}\", out, item_name))))\n                 } else {\n-                    Err(())\n+                    let is_enum = match ty.def {\n+                        Def::Enum(_) => true,\n+                        _ => false,\n+                    };\n+                    let elem = if is_enum {\n+                        cx.tcx.adt_def(did).all_fields().find(|item| item.name == item_name)\n+                    } else {\n+                        cx.tcx.adt_def(did)\n+                              .non_enum_variant()\n+                              .fields\n+                              .iter()\n+                              .find(|item| item.name == item_name)\n+                    };\n+                    if let Some(item) = elem {\n+                        Ok((ty.def,\n+                            Some(format!(\"{}.{}\",\n+                                         if is_enum { \"variant\" } else { \"structfield\" },\n+                                         item.name))))\n+                    } else {\n+                        Err(())\n+                    }\n                 }\n             }\n             Def::Trait(did) => {"}, {"sha": "c5016bac7d394d708ae833fd45786de431d02512", "filename": "src/test/rustdoc/struct-field.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b/src%2Ftest%2Frustdoc%2Fstruct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b/src%2Ftest%2Frustdoc%2Fstruct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstruct-field.rs?ref=609e9f014ff88cc9fbebd3e0bbb8e1cd353b612b", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// ignore-tidy-linelength\n+\n+// @has foo/index.html '//*[@class=\"docblock\"]/p/a[@href=\"../foo/struct.Foo.html#structfield.bar\"]' 'Foo::bar'\n+// @has foo/index.html '//*[@class=\"docblock\"]/p/a[@href=\"../foo/union.Bar.html#structfield.foo\"]' 'Bar::foo'\n+// @has foo/index.html '//*[@class=\"docblock\"]/p/a[@href=\"../foo/enum.Uniooon.html#X.v\"]' 'Uniooon::X'\n+\n+//! Test with [Foo::bar], [Bar::foo], [Uniooon::X]\n+\n+pub struct Foo {\n+    pub bar: usize,\n+}\n+\n+pub union Bar {\n+    pub foo: u32,\n+}\n+\n+pub enum Uniooon {\n+    F,\n+    X,\n+    Y,\n+}"}]}