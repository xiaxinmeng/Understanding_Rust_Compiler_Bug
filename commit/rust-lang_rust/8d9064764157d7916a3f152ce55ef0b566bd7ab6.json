{"sha": "8d9064764157d7916a3f152ce55ef0b566bd7ab6", "node_id": "C_kwDOAAsO6NoAKDhkOTA2NDc2NDE1N2Q3OTE2YTNmMTUyY2U1NWVmMGI1NjZiZDdhYjY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-27T15:03:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-27T15:03:08Z"}, "message": "Rollup merge of #104934 - ChrisDenton:all-anybody-wants, r=thomcc\n\nRemove redundant `all` in cfg\n\nThis appears to have been accidentally left in after removing the other branches https://github.com/rust-lang/rust/commit/45bf1ed1a1123122ded05ae2eedaf0f190e52726\n\n(hat tip to kangalioo for the git archaeology)", "tree": {"sha": "b167d984de8a65045373da61b615c615e48e62b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b167d984de8a65045373da61b615c615e48e62b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d9064764157d7916a3f152ce55ef0b566bd7ab6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjg3wsCRBK7hj4Ov3rIwAA5KgIAKzMWxG3B/OqCwIatwM7NRKq\nDFmyescxEKMg/yGm9Kn2tL11o3okwj1qfy4vX6zbEnuFZLWjdq6jR5V1bp5sDq9P\nCrFJDZGbR1/g7ZAg4MqF/NJBRRR7MkbYFOy3o433YMBbg0hqVemWj38wwFUiGrku\nHhFrEKlq0o23ZwipgpkYep63ExgRoZauwbCoEvUtwESV9RoSpfB3Qcyz7jMZsHd4\n6nFxmu/TM0w+N2J1GFN//3ASDl220YI+uBv9Tn+GfRoftVBadirv4NOqbw7t515x\nHqw/wcE6G5DKHRyBXQMLF6So21AkJ3DYtI7CW0975o3L6vdhOruVm9KBuOeFoCU=\n=JWqk\n-----END PGP SIGNATURE-----\n", "payload": "tree b167d984de8a65045373da61b615c615e48e62b9\nparent 6e6c42c61c5535ffd748b0b1c71b14f2e962da3e\nparent 2ab3f76442f1acdf8c8229164f27b66b1a822993\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669561388 +0100\ncommitter GitHub <noreply@github.com> 1669561388 +0100\n\nRollup merge of #104934 - ChrisDenton:all-anybody-wants, r=thomcc\n\nRemove redundant `all` in cfg\n\nThis appears to have been accidentally left in after removing the other branches https://github.com/rust-lang/rust/commit/45bf1ed1a1123122ded05ae2eedaf0f190e52726\n\n(hat tip to kangalioo for the git archaeology)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9064764157d7916a3f152ce55ef0b566bd7ab6", "html_url": "https://github.com/rust-lang/rust/commit/8d9064764157d7916a3f152ce55ef0b566bd7ab6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d9064764157d7916a3f152ce55ef0b566bd7ab6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e6c42c61c5535ffd748b0b1c71b14f2e962da3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e6c42c61c5535ffd748b0b1c71b14f2e962da3e", "html_url": "https://github.com/rust-lang/rust/commit/6e6c42c61c5535ffd748b0b1c71b14f2e962da3e"}, {"sha": "2ab3f76442f1acdf8c8229164f27b66b1a822993", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ab3f76442f1acdf8c8229164f27b66b1a822993", "html_url": "https://github.com/rust-lang/rust/commit/2ab3f76442f1acdf8c8229164f27b66b1a822993"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "fd01fcf1fc82c071e954c87da03120df72d26a67", "filename": "compiler/rustc_codegen_gcc/example/alloc_system.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8d9064764157d7916a3f152ce55ef0b566bd7ab6/compiler%2Frustc_codegen_gcc%2Fexample%2Falloc_system.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9064764157d7916a3f152ce55ef0b566bd7ab6/compiler%2Frustc_codegen_gcc%2Fexample%2Falloc_system.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fexample%2Falloc_system.rs?ref=8d9064764157d7916a3f152ce55ef0b566bd7ab6", "patch": "@@ -13,17 +13,17 @@\n \n // The minimum alignment guaranteed by the architecture. This value is used to\n // add fast paths for low alignment values.\n-#[cfg(all(any(target_arch = \"x86\",\n+#[cfg(any(target_arch = \"x86\",\n               target_arch = \"arm\",\n               target_arch = \"mips\",\n               target_arch = \"powerpc\",\n-              target_arch = \"powerpc64\")))]\n+              target_arch = \"powerpc64\"))]\n const MIN_ALIGN: usize = 8;\n-#[cfg(all(any(target_arch = \"x86_64\",\n+#[cfg(any(target_arch = \"x86_64\",\n               target_arch = \"aarch64\",\n               target_arch = \"mips64\",\n               target_arch = \"s390x\",\n-              target_arch = \"sparc64\")))]\n+              target_arch = \"sparc64\"))]\n const MIN_ALIGN: usize = 16;\n \n pub struct System;"}, {"sha": "47aa4dfba42bb9fc288a561eaef5b6875e5e216e", "filename": "compiler/rustc_span/src/analyze_source_file.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d9064764157d7916a3f152ce55ef0b566bd7ab6/compiler%2Frustc_span%2Fsrc%2Fanalyze_source_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9064764157d7916a3f152ce55ef0b566bd7ab6/compiler%2Frustc_span%2Fsrc%2Fanalyze_source_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fanalyze_source_file.rs?ref=8d9064764157d7916a3f152ce55ef0b566bd7ab6", "patch": "@@ -41,7 +41,7 @@ pub fn analyze_source_file(\n }\n \n cfg_if::cfg_if! {\n-    if #[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\")))] {\n+    if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {\n         fn analyze_source_file_dispatch(src: &str,\n                                     source_file_start_pos: BytePos,\n                                     lines: &mut Vec<BytePos>,"}, {"sha": "3edbe7280774d44d75ff56e5bb4100ff6b10d272", "filename": "library/std/src/sys/common/alloc.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8d9064764157d7916a3f152ce55ef0b566bd7ab6/library%2Fstd%2Fsrc%2Fsys%2Fcommon%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9064764157d7916a3f152ce55ef0b566bd7ab6/library%2Fstd%2Fsrc%2Fsys%2Fcommon%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fcommon%2Falloc.rs?ref=8d9064764157d7916a3f152ce55ef0b566bd7ab6", "patch": "@@ -4,7 +4,7 @@ use crate::ptr;\n \n // The minimum alignment guaranteed by the architecture. This value is used to\n // add fast paths for low alignment values.\n-#[cfg(all(any(\n+#[cfg(any(\n     target_arch = \"x86\",\n     target_arch = \"arm\",\n     target_arch = \"mips\",\n@@ -16,23 +16,23 @@ use crate::ptr;\n     target_arch = \"hexagon\",\n     all(target_arch = \"riscv32\", not(target_os = \"espidf\")),\n     all(target_arch = \"xtensa\", not(target_os = \"espidf\")),\n-)))]\n+))]\n pub const MIN_ALIGN: usize = 8;\n-#[cfg(all(any(\n+#[cfg(any(\n     target_arch = \"x86_64\",\n     target_arch = \"aarch64\",\n     target_arch = \"mips64\",\n     target_arch = \"s390x\",\n     target_arch = \"sparc64\",\n     target_arch = \"riscv64\",\n     target_arch = \"wasm64\",\n-)))]\n+))]\n pub const MIN_ALIGN: usize = 16;\n // The allocator on the esp-idf platform guarantees 4 byte alignment.\n-#[cfg(all(any(\n+#[cfg(any(\n     all(target_arch = \"riscv32\", target_os = \"espidf\"),\n     all(target_arch = \"xtensa\", target_os = \"espidf\"),\n-)))]\n+))]\n pub const MIN_ALIGN: usize = 4;\n \n pub unsafe fn realloc_fallback("}]}