{"sha": "142ff011da9f82a10e87c9436c2d1b877b2828a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MmZmMDExZGE5ZjgyYTEwZTg3Yzk0MzZjMmQxYjg3N2IyODI4YTI=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-06-24T21:43:06Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-06-24T21:47:36Z"}, "message": "Make a test compile faster.", "tree": {"sha": "ed6a11a697ea9daee28dfffce2276bb05fffa677", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed6a11a697ea9daee28dfffce2276bb05fffa677"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/142ff011da9f82a10e87c9436c2d1b877b2828a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/142ff011da9f82a10e87c9436c2d1b877b2828a2", "html_url": "https://github.com/rust-lang/rust/commit/142ff011da9f82a10e87c9436c2d1b877b2828a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/142ff011da9f82a10e87c9436c2d1b877b2828a2/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf474443a301b59f6a44b1dcbbf098f5eb1cef3", "url": "https://api.github.com/repos/rust-lang/rust/commits/baf474443a301b59f6a44b1dcbbf098f5eb1cef3", "html_url": "https://github.com/rust-lang/rust/commit/baf474443a301b59f6a44b1dcbbf098f5eb1cef3"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "be4c81615f9fd042aaf129f4578db522cbb2c72d", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/142ff011da9f82a10e87c9436c2d1b877b2828a2/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142ff011da9f82a10e87c9436c2d1b877b2828a2/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=142ff011da9f82a10e87c9436c2d1b877b2828a2", "patch": "@@ -14,6 +14,17 @@ fn main() {\n \n     test(#fmt(\"test\"), \"test\");\n \n+    // a quadratic optimization in LLVM (jump-threading) makes this test a \n+    // bit slow to compile unless we break it up\n+    part1();\n+    part2();\n+    part3();\n+    part4();\n+    part5();\n+    part6();\n+}\n+\n+fn part1() {\n     // Simple tests for types\n \n     test(#fmt(\"%d\", 1), \"1\");\n@@ -36,6 +47,8 @@ fn main() {\n     test(#fmt(\"%x\", 0xffffffff_u), \"ffffffff\");\n     test(#fmt(\"%o\", 0xffffffff_u), \"37777777777\");\n     test(#fmt(\"%t\", 0xffffffff_u), \"11111111111111111111111111111111\");\n+}\n+fn part2() {\n     // Widths\n \n     test(#fmt(\"%1d\", 500), \"500\");\n@@ -61,6 +74,9 @@ fn main() {\n     test(#fmt(\"%-10o\", 10u), \"12        \");\n     test(#fmt(\"%-10t\", 0xff_u), \"11111111  \");\n     test(#fmt(\"%-10c\", 'A'), \"A         \");\n+}\n+\n+fn part3() {\n     // Precision\n \n     test(#fmt(\"%.d\", 0), \"\");\n@@ -99,6 +115,8 @@ fn main() {\n     test(#fmt(\"%.1o\", 10u), \"12\");\n     test(#fmt(\"%.1t\", 3u), \"11\");\n     test(#fmt(\"%.1c\", 'A'), \"A\");\n+}\n+fn part4() {\n     test(#fmt(\"%.5d\", 0), \"00000\");\n     test(#fmt(\"%.5u\", 0u), \"00000\");\n     test(#fmt(\"%.5x\", 0u), \"00000\");\n@@ -115,10 +133,13 @@ fn main() {\n     // conversions support precision - it's not standard printf so we\n     // can do whatever. For now I'm making it behave the same as string\n     // conversions.\n-\n+    \n     test(#fmt(\"%.b\", true), \"\");\n     test(#fmt(\"%.0b\", true), \"\");\n-    test(#fmt(\"%.1b\", true), \"t\");\n+    test(#fmt(\"%.1b\", true), \"t\");  \n+}\n+\n+fn part5() {\n     // Explicit + sign. Only for signed conversions\n \n     test(#fmt(\"%+d\", 0), \"+0\");\n@@ -161,6 +182,8 @@ fn main() {\n     test(#fmt(\"%-05s\", \"test\"), \"test \");\n     test(#fmt(\"%-05c\", 'A'), \"A    \");\n     test(#fmt(\"%-05b\", true), \"true \");\n+}\n+fn part6(){\n     // Precision overrides 0-padding\n \n     test(#fmt(\"%06.5d\", 0), \" 00000\");\n@@ -192,4 +215,4 @@ fn main() {\n     test(#fmt(\"%- 05d\", -1), \"-1   \");\n     test(#fmt(\"%-+05d\", 1), \"+1   \");\n     test(#fmt(\"%-+05d\", -1), \"-1   \");\n-}\n\\ No newline at end of file\n+}"}]}