{"sha": "0a08841bb075959874e2e29c538150c826a1401a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMDg4NDFiYjA3NTk1OTg3NGUyZTI5YzUzODE1MGM4MjZhMTQwMWE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-03T10:23:26Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-11T08:43:54Z"}, "message": "Remove uses of `allow(unions_with_drop_fields)` in the standard library", "tree": {"sha": "05259ab9e66ac72e052409aef8a0f6aedad58138", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05259ab9e66ac72e052409aef8a0f6aedad58138"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a08841bb075959874e2e29c538150c826a1401a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a08841bb075959874e2e29c538150c826a1401a", "html_url": "https://github.com/rust-lang/rust/commit/0a08841bb075959874e2e29c538150c826a1401a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a08841bb075959874e2e29c538150c826a1401a/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "000d90b11f7be70ffb7812680f7abc6deb52ec88", "url": "https://api.github.com/repos/rust-lang/rust/commits/000d90b11f7be70ffb7812680f7abc6deb52ec88", "html_url": "https://github.com/rust-lang/rust/commit/000d90b11f7be70ffb7812680f7abc6deb52ec88"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "296f2a59bb82efe4719c32ed6191c63e59b8b780", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0a08841bb075959874e2e29c538150c826a1401a/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a08841bb075959874e2e29c538150c826a1401a/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=0a08841bb075959874e2e29c538150c826a1401a", "patch": "@@ -12,7 +12,7 @@ use core::panic::{BoxMeUp, PanicInfo, Location};\n use crate::any::Any;\n use crate::fmt;\n use crate::intrinsics;\n-use crate::mem;\n+use crate::mem::{self, ManuallyDrop};\n use crate::ptr;\n use crate::raw;\n use crate::sync::atomic::{AtomicBool, Ordering};\n@@ -227,10 +227,9 @@ pub use realstd::rt::update_panic_count;\n \n /// Invoke a closure, capturing the cause of an unwinding panic if one occurs.\n pub unsafe fn r#try<R, F: FnOnce() -> R>(f: F) -> Result<R, Box<dyn Any + Send>> {\n-    #[allow(unions_with_drop_fields)]\n     union Data<F, R> {\n-        f: F,\n-        r: R,\n+        f: ManuallyDrop<F>,\n+        r: ManuallyDrop<R>,\n     }\n \n     // We do some sketchy operations with ownership here for the sake of\n@@ -261,7 +260,7 @@ pub unsafe fn r#try<R, F: FnOnce() -> R>(f: F) -> Result<R, Box<dyn Any + Send>>\n     let mut any_data = 0;\n     let mut any_vtable = 0;\n     let mut data = Data {\n-        f,\n+        f: ManuallyDrop::new(f)\n     };\n \n     let r = __rust_maybe_catch_panic(do_call::<F, R>,\n@@ -271,7 +270,7 @@ pub unsafe fn r#try<R, F: FnOnce() -> R>(f: F) -> Result<R, Box<dyn Any + Send>>\n \n     return if r == 0 {\n         debug_assert!(update_panic_count(0) == 0);\n-        Ok(data.r)\n+        Ok(ManuallyDrop::into_inner(data.r))\n     } else {\n         update_panic_count(-1);\n         debug_assert!(update_panic_count(0) == 0);\n@@ -284,8 +283,8 @@ pub unsafe fn r#try<R, F: FnOnce() -> R>(f: F) -> Result<R, Box<dyn Any + Send>>\n     fn do_call<F: FnOnce() -> R, R>(data: *mut u8) {\n         unsafe {\n             let data = data as *mut Data<F, R>;\n-            let f = ptr::read(&mut (*data).f);\n-            ptr::write(&mut (*data).r, f());\n+            let f = ptr::read(&mut *(*data).f);\n+            ptr::write(&mut *(*data).r, f());\n         }\n     }\n }"}]}