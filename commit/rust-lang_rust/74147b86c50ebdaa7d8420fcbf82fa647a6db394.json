{"sha": "74147b86c50ebdaa7d8420fcbf82fa647a6db394", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MTQ3Yjg2YzUwZWJkYWE3ZDg0MjBmY2JmODJmYTY0N2E2ZGIzOTQ=", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-21T23:58:29Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-21T23:58:29Z"}, "message": "Use the length limit as the initial capacity\n\nThe length limit turns out to be a surprisingly good heuristic for\ninitial allocation size. See here for more details [1].\n\n[1]: https://github.com/rust-lang/rust/pull/88173#discussion_r692531631", "tree": {"sha": "7852d3da8833aec83c767a55d673731364e8a464", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7852d3da8833aec83c767a55d673731364e8a464"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74147b86c50ebdaa7d8420fcbf82fa647a6db394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74147b86c50ebdaa7d8420fcbf82fa647a6db394", "html_url": "https://github.com/rust-lang/rust/commit/74147b86c50ebdaa7d8420fcbf82fa647a6db394", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74147b86c50ebdaa7d8420fcbf82fa647a6db394/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09f0876dc63bb386bc07d182b1bf85afb61f7db6", "url": "https://api.github.com/repos/rust-lang/rust/commits/09f0876dc63bb386bc07d182b1bf85afb61f7db6", "html_url": "https://github.com/rust-lang/rust/commit/09f0876dc63bb386bc07d182b1bf85afb61f7db6"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "cc4a7f37fe9aaf4cf5912a0deb01759b72486ba7", "filename": "src/librustdoc/html/length_limit.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/74147b86c50ebdaa7d8420fcbf82fa647a6db394/src%2Flibrustdoc%2Fhtml%2Flength_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74147b86c50ebdaa7d8420fcbf82fa647a6db394/src%2Flibrustdoc%2Fhtml%2Flength_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flength_limit.rs?ref=74147b86c50ebdaa7d8420fcbf82fa647a6db394", "patch": "@@ -29,8 +29,18 @@ pub(super) struct HtmlWithLimit {\n impl HtmlWithLimit {\n     /// Create a new buffer, with a limit of `length_limit`.\n     pub(super) fn new(length_limit: usize) -> Self {\n+        let buf = if length_limit > 1000 {\n+            // If the length limit is really large, don't preallocate tons of memory.\n+            String::new()\n+        } else {\n+            // The length limit is actually a good heuristic for initial allocation size.\n+            // Measurements showed that using it as the initial capacity ended up using less memory\n+            // than `String::new`.\n+            // See https://github.com/rust-lang/rust/pull/88173#discussion_r692531631 for more.\n+            String::with_capacity(length_limit)\n+        };\n         Self {\n-            buf: String::new(),\n+            buf,\n             len: 0,\n             limit: length_limit,\n             unclosed_tags: Vec::new(),"}, {"sha": "b2ca134998188efa01587aa32ab878b07d48f80e", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/74147b86c50ebdaa7d8420fcbf82fa647a6db394/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74147b86c50ebdaa7d8420fcbf82fa647a6db394/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=74147b86c50ebdaa7d8420fcbf82fa647a6db394", "patch": "@@ -1096,7 +1096,6 @@ fn markdown_summary_with_limit(\n     let p = Parser::new_with_broken_link_callback(md, opts(), Some(&mut replacer));\n     let mut p = LinkReplacer::new(p, link_names);\n \n-    // FIXME: capacity\n     let mut buf = HtmlWithLimit::new(length_limit);\n     let mut stopped_early = false;\n     p.try_for_each(|event| {"}]}