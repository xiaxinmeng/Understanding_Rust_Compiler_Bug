{"sha": "7f222423b7795cd8788b59a34542f19745bd4863", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMjIyNDIzYjc3OTVjZDg3ODhiNTlhMzQ1NDJmMTk3NDViZDQ4NjM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-05-11T10:59:34Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-05-11T10:59:34Z"}, "message": "Use a const for crate-num-zero (ast.local_crate)", "tree": {"sha": "861b030c8b36ab56ab0512652ba5ebca89dee1c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/861b030c8b36ab56ab0512652ba5ebca89dee1c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f222423b7795cd8788b59a34542f19745bd4863", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f222423b7795cd8788b59a34542f19745bd4863", "html_url": "https://github.com/rust-lang/rust/commit/7f222423b7795cd8788b59a34542f19745bd4863", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f222423b7795cd8788b59a34542f19745bd4863/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b46113afc92b39594922589e768b98c854eda8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b46113afc92b39594922589e768b98c854eda8d", "html_url": "https://github.com/rust-lang/rust/commit/6b46113afc92b39594922589e768b98c854eda8d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "049e74284fe5684bb48adb1157971f10cdf0a544", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f222423b7795cd8788b59a34542f19745bd4863/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f222423b7795cd8788b59a34542f19745bd4863/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=7f222423b7795cd8788b59a34542f19745bd4863", "patch": "@@ -85,7 +85,7 @@ fn compile_input(session.session sess,\n                  eval.env env,\n                  str input, str output) {\n     auto time_passes = sess.get_opts().time_passes;\n-    auto def = tup(0, 0);\n+    auto def = tup(ast.local_crate, 0);\n     auto p = parser.new_parser(sess, env, def, input, 0u);\n     auto crate = time[@ast.crate](time_passes, \"parsing\",\n                                   bind parse_input(sess, p, input));\n@@ -120,7 +120,7 @@ fn compile_input(session.session sess,\n fn pretty_print_input(session.session sess,\n                              eval.env env,\n                              str input) {\n-    auto def = tup(0, 0);\n+    auto def = tup(ast.local_crate, 0);\n     auto p = front.parser.new_parser(sess, env, def, input, 0u);\n     auto crate = front.parser.parse_crate_from_source_file(p);\n     pretty.pprust.print_file(crate.node.module, input, std.IO.stdout());"}, {"sha": "e7328d7ae3fa4ababa8c543a0c6b436dc2d8e062", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f222423b7795cd8788b59a34542f19745bd4863/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f222423b7795cd8788b59a34542f19745bd4863/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=7f222423b7795cd8788b59a34542f19745bd4863", "patch": "@@ -15,6 +15,7 @@ type path_ = rec(vec[ident] idents, vec[@ty] types);\n type path = spanned[path_];\n \n type crate_num = int;\n+const crate_num local_crate = 0;\n type def_num = int;\n type def_id = tup(crate_num, def_num);\n "}, {"sha": "8a31ffba04d1b37b839e7ac1aaad00434320cb4b", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f222423b7795cd8788b59a34542f19745bd4863/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f222423b7795cd8788b59a34542f19745bd4863/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=7f222423b7795cd8788b59a34542f19745bd4863", "patch": "@@ -591,8 +591,7 @@ fn lookup_in_mod_strict(&env e, def m, &span sp, ident id,\n fn lookup_in_mod(&env e, def m, ident id, namespace ns, dir dr)\n     -> Option.t[def] {\n     auto defid = ast.def_id_of_def(m);\n-    // FIXME this causes way more metadata lookups than needed. Cache?\n-    if (defid._0 != 0) { // Not in this crate (FIXME use a const, not 0)\n+    if (defid._0 != ast.local_crate) { // Not in this crate\n         auto cached = e.ext_cache.find(tup(defid,id));\n         if (cached != none[def] && check_def_by_ns(Option.get(cached), ns)) {\n             ret cached;"}]}