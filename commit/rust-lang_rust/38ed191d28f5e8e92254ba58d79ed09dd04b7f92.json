{"sha": "38ed191d28f5e8e92254ba58d79ed09dd04b7f92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZWQxOTFkMjhmNWU4ZTkyMjU0YmE1OGQ3OWVkMDlkZDA0YjdmOTI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-16T16:35:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-16T16:35:07Z"}, "message": "Merge pull request #484 from RalfJung/mir-opt\n\nTest with opt levels 0 and 1", "tree": {"sha": "0ae022827d1288ea49416bd12be2ff442dc4eb73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ae022827d1288ea49416bd12be2ff442dc4eb73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38ed191d28f5e8e92254ba58d79ed09dd04b7f92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbxhM7CRBK7hj4Ov3rIwAAdHIIADsbnrWS2OMdC2tjGGRCY1VY\nBqfEKsVI9lCEGbAbnkDTpPLouNLXweHXg4caV2g2kSBcPaqu3cjyavKTH2Qlq0Q5\n957Xw/sWhxpef4RuLYNTOx8dTEjTHJsxr4KuRFOBzXPmAkfT1xPHBCnhFr7V2mwu\n0t2Xfydjrr7M+KLCgnZhlFf7zQRDLGnyOVcKABiWvO7/dkK8NUKua94phy266aTG\nsSX+tFYJ6FXnwzT5a8du0du3QM1F+522yTSL3nADGY9aKP+P1e3iqR+suxWpFyjW\n5jruAmv1Zb9FaBJyXUxi+sB9sJQUO04hyvGM9rW4mH2z4SUqLqKaE7hSV/wh9HE=\n=pWHB\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ae022827d1288ea49416bd12be2ff442dc4eb73\nparent 3247c6688ce4369f548134f78097fbb0df71d38c\nparent f5e3cdbf03dfe27b5e64a71cf58f9f096bd25b93\nauthor Ralf Jung <post@ralfj.de> 1539707707 +0200\ncommitter GitHub <noreply@github.com> 1539707707 +0200\n\nMerge pull request #484 from RalfJung/mir-opt\n\nTest with opt levels 0 and 1"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38ed191d28f5e8e92254ba58d79ed09dd04b7f92", "html_url": "https://github.com/rust-lang/rust/commit/38ed191d28f5e8e92254ba58d79ed09dd04b7f92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38ed191d28f5e8e92254ba58d79ed09dd04b7f92/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3247c6688ce4369f548134f78097fbb0df71d38c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3247c6688ce4369f548134f78097fbb0df71d38c", "html_url": "https://github.com/rust-lang/rust/commit/3247c6688ce4369f548134f78097fbb0df71d38c"}, {"sha": "f5e3cdbf03dfe27b5e64a71cf58f9f096bd25b93", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e3cdbf03dfe27b5e64a71cf58f9f096bd25b93", "html_url": "https://github.com/rust-lang/rust/commit/f5e3cdbf03dfe27b5e64a71cf58f9f096bd25b93"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "e59accaea1b9b4f19a3b441940814f2beba009fc", "filename": "README.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38ed191d28f5e8e92254ba58d79ed09dd04b7f92/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/38ed191d28f5e8e92254ba58d79ed09dd04b7f92/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=38ed191d28f5e8e92254ba58d79ed09dd04b7f92", "patch": "@@ -55,6 +55,14 @@ miri` to run your project, if it is a bin project, or run\n `MIRI_SYSROOT=~/.xargo/HOST cargo +nightly miri test` to run all tests in your\n project through Miri.\n \n+## Miri `-Z` flags\n+\n+Miri adds some extra `-Z` flags to control its behavior:\n+\n+* `-Zmiri-start-fn`: This makes interpretation start with `lang_start` (defined\n+  in libstd) instead of starting with `main`.  Requires full MIR!\n+* `-Zmiri-disable-validation` disables enforcing the validity invariant.\n+\n ## Development and Debugging\n \n Since the heart of Miri (the main interpreter engine) lives in rustc, working on"}, {"sha": "b240fb31d2223fe53018d88a06c7594df80e0749", "filename": "tests/compiletest.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38ed191d28f5e8e92254ba58d79ed09dd04b7f92/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38ed191d28f5e8e92254ba58d79ed09dd04b7f92/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=38ed191d28f5e8e92254ba58d79ed09dd04b7f92", "patch": "@@ -104,7 +104,11 @@ fn miri_pass(sysroot: &Path, path: &str, target: &str, host: &str, need_fullmir:\n         flags.push(\"-Zmiri-start-fn\".to_owned());\n     }\n     if opt {\n-        flags.push(\"-Zmir-opt-level=3\".to_owned());\n+        // FIXME: Using level 1 (instead of 3) for now, as the optimizer is pretty broken\n+        // and crashes...\n+        // Level 0 and 1 are not the same, so this still gives us *some* coverage.\n+        // See https://github.com/rust-lang/rust/issues/50411\n+        flags.push(\"-Zmir-opt-level=1\".to_owned());\n     } else {\n         flags.push(\"-Zmir-opt-level=0\".to_owned());\n         // For now, only validate without optimizations.  Inlining breaks validation.\n@@ -187,9 +191,7 @@ fn test() {\n     // uses `libtest` which runs jobs in parallel.\n \n     run_pass_miri(false);\n-    // FIXME: Disabled for now, as the optimizer is pretty broken and crashes...\n-    // See https://github.com/rust-lang/rust/issues/50411\n-    //run_pass_miri(true);\n+    run_pass_miri(true);\n \n     compile_fail_miri();\n }"}]}