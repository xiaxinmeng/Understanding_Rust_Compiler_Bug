{"sha": "a42a2bdac2a6c881f85ebdbce66e84d977c74cfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MmEyYmRhYzJhNmM4ODFmODVlYmRiY2U2NmU4NGQ5NzdjNzRjZmE=", "commit": {"author": {"name": "Glenn Hope", "email": "glenn.alexander.hope@gmail.com", "date": "2020-05-07T21:48:27Z"}, "committer": {"name": "Glenn Hope", "email": "glenn.alexander.hope@gmail.com", "date": "2020-05-09T18:09:38Z"}, "message": "Also have flag disable macro check", "tree": {"sha": "fe16d8eb9a352fe99ae0419201ac6287233cc08d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe16d8eb9a352fe99ae0419201ac6287233cc08d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a42a2bdac2a6c881f85ebdbce66e84d977c74cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a42a2bdac2a6c881f85ebdbce66e84d977c74cfa", "html_url": "https://github.com/rust-lang/rust/commit/a42a2bdac2a6c881f85ebdbce66e84d977c74cfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a42a2bdac2a6c881f85ebdbce66e84d977c74cfa/comments", "author": {"login": "MrAwesome", "id": 145945, "node_id": "MDQ6VXNlcjE0NTk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/145945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrAwesome", "html_url": "https://github.com/MrAwesome", "followers_url": "https://api.github.com/users/MrAwesome/followers", "following_url": "https://api.github.com/users/MrAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MrAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MrAwesome/orgs", "repos_url": "https://api.github.com/users/MrAwesome/repos", "events_url": "https://api.github.com/users/MrAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MrAwesome/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MrAwesome", "id": 145945, "node_id": "MDQ6VXNlcjE0NTk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/145945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrAwesome", "html_url": "https://github.com/MrAwesome", "followers_url": "https://api.github.com/users/MrAwesome/followers", "following_url": "https://api.github.com/users/MrAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MrAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MrAwesome/orgs", "repos_url": "https://api.github.com/users/MrAwesome/repos", "events_url": "https://api.github.com/users/MrAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MrAwesome/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad92486d52fdede5c712dd27c868c942d8240704", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad92486d52fdede5c712dd27c868c942d8240704", "html_url": "https://github.com/rust-lang/rust/commit/ad92486d52fdede5c712dd27c868c942d8240704"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "843ddda0356961c36dd64039455cdb86c6ee8c2c", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a42a2bdac2a6c881f85ebdbce66e84d977c74cfa/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a42a2bdac2a6c881f85ebdbce66e84d977c74cfa/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=a42a2bdac2a6c881f85ebdbce66e84d977c74cfa", "patch": "@@ -102,7 +102,7 @@ impl LateLintPass<'_, '_> for WildcardImports {\n             self.test_modules_deep += 1;\n         }\n         if_chain! {\n-            if !in_macro(item.span);\n+            if self.warn_on_all || !in_macro(item.span);\n             if let ItemKind::Use(use_path, UseKind::Glob) = &item.kind;\n             if self.warn_on_all || !self.check_exceptions(use_path.segments);\n             let used_imports = cx.tcx.names_imported_by_glob_use(item.hir_id.owner);"}]}