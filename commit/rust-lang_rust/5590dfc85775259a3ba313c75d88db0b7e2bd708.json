{"sha": "5590dfc85775259a3ba313c75d88db0b7e2bd708", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OTBkZmM4NTc3NTI1OWEzYmEzMTNjNzVkODhkYjBiN2UyYmQ3MDg=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-05-01T23:40:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-23T05:29:16Z"}, "message": "std: tweak uv::ll::write signature and make it generic/more flexible", "tree": {"sha": "a5e05d5632910f06b736de261652334610cbc39f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5e05d5632910f06b736de261652334610cbc39f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5590dfc85775259a3ba313c75d88db0b7e2bd708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5590dfc85775259a3ba313c75d88db0b7e2bd708", "html_url": "https://github.com/rust-lang/rust/commit/5590dfc85775259a3ba313c75d88db0b7e2bd708", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5590dfc85775259a3ba313c75d88db0b7e2bd708/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "550b34b7828622d6eb23e6bfbcc026c8b57e19fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/550b34b7828622d6eb23e6bfbcc026c8b57e19fa", "html_url": "https://github.com/rust-lang/rust/commit/550b34b7828622d6eb23e6bfbcc026c8b57e19fa"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "bbd89b2fcc9d225e40c66111c2e3debe9eed81e8", "filename": "src/libstd/uv_ll.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5590dfc85775259a3ba313c75d88db0b7e2bd708/src%2Flibstd%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5590dfc85775259a3ba313c75d88db0b7e2bd708/src%2Flibstd%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_ll.rs?ref=5590dfc85775259a3ba313c75d88db0b7e2bd708", "patch": "@@ -647,11 +647,13 @@ unsafe fn accept(server: *libc::c_void, client: *libc::c_void)\n     ret rustrt::rust_uv_accept(server, client);\n }\n \n-unsafe fn write(req: *libc::c_void, stream: *libc::c_void,\n+unsafe fn write<T>(req: *uv_write_t, stream: *T,\n          buf_in: *[uv_buf_t], cb: *u8) -> libc::c_int {\n     let buf_ptr = vec::unsafe::to_ptr(*buf_in);\n     let buf_cnt = vec::len(*buf_in) as i32;\n-    ret rustrt::rust_uv_write(req, stream, buf_ptr, buf_cnt, cb);\n+    ret rustrt::rust_uv_write(req as *libc::c_void,\n+                              stream as *libc::c_void,\n+                              buf_ptr, buf_cnt, cb);\n }\n unsafe fn read_start(stream: *uv_stream_t, on_alloc: *u8,\n                      on_read: *u8) -> libc::c_int {\n@@ -907,7 +909,7 @@ mod test {\n             let client_data = get_data_for_req(\n                 connect_req_ptr as *libc::c_void)\n                 as *request_wrapper;\n-            let write_handle = (*client_data).write_req as *libc::c_void;\n+            let write_handle = (*client_data).write_req;\n             log(debug, #fmt(\"on_connect_cb: tcp: %d write_hdl: %d\",\n                             stream as int, write_handle as int));\n             let write_result = write(write_handle,\n@@ -1053,7 +1055,7 @@ mod test {\n                 let server_chan = *((*client_data).server_chan);\n                 comm::send(server_chan, request_str);\n                 let write_result = write(\n-                    write_req as *libc::c_void,\n+                    write_req,\n                     client_stream_ptr as *libc::c_void,\n                     (*client_data).server_resp_buf,\n                     after_server_resp_write);"}]}