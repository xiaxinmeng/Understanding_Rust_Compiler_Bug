{"sha": "75277c72c0c6f603bb258383ad74d3082dc4a720", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1Mjc3YzcyYzBjNmY2MDNiYjI1ODM4M2FkNzRkMzA4MmRjNGE3MjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-28T07:08:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-28T07:08:52Z"}, "message": "Auto merge of #45566 - cuviper:option-checking, r=alexcrichton\n\nconfigure.py: fix --disable-option-checking and extra config paths\n\n- indexing 'option-checking' out of `known_args` had a type error\n- when option checking is disabled, don't error on duplicate args, just take the last\n- add config.toml stubs for datadir, infodir, and localstatedir (which were already accepted, but broken)\n\n---\n\nThis fixes a regression from 1.21 to beta, when the configure script was rewritten in python.", "tree": {"sha": "636d977c46eaa037d16305913d78b816e86e73d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/636d977c46eaa037d16305913d78b816e86e73d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75277c72c0c6f603bb258383ad74d3082dc4a720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75277c72c0c6f603bb258383ad74d3082dc4a720", "html_url": "https://github.com/rust-lang/rust/commit/75277c72c0c6f603bb258383ad74d3082dc4a720", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75277c72c0c6f603bb258383ad74d3082dc4a720/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "html_url": "https://github.com/rust-lang/rust/commit/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944"}, {"sha": "19714f55ee70f3130751c8f720b21d869bc82b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/19714f55ee70f3130751c8f720b21d869bc82b5d", "html_url": "https://github.com/rust-lang/rust/commit/19714f55ee70f3130751c8f720b21d869bc82b5d"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "df0142b8d46df60f1e424c61af3d93956a34bd54", "filename": "config.toml.example", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/75277c72c0c6f603bb258383ad74d3082dc4a720/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/75277c72c0c6f603bb258383ad74d3082dc4a720/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=75277c72c0c6f603bb258383ad74d3082dc4a720", "patch": "@@ -203,6 +203,16 @@\n # Where to install man pages in `prefix` above\n #mandir = \"share/man\"\n \n+# Where to install data in `prefix` above (currently unused)\n+#datadir = \"share\"\n+\n+# Where to install additional info in `prefix` above (currently unused)\n+#infodir = \"share/info\"\n+\n+# Where to install local state (currently unused)\n+# If this is a relative path, it will get installed in `prefix` above\n+#localstatedir = \"/var/lib\"\n+\n # =============================================================================\n # Options for compiling Rust code itself\n # ============================================================================="}, {"sha": "33c7141e7044a8a2a1e57b31652be5736f8f8c51", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/75277c72c0c6f603bb258383ad74d3082dc4a720/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75277c72c0c6f603bb258383ad74d3082dc4a720/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=75277c72c0c6f603bb258383ad74d3082dc4a720", "patch": "@@ -207,6 +207,11 @@ struct Install {\n     bindir: Option<String>,\n     libdir: Option<String>,\n     mandir: Option<String>,\n+\n+    // standard paths, currently unused\n+    datadir: Option<String>,\n+    infodir: Option<String>,\n+    localstatedir: Option<String>,\n }\n \n /// TOML representation of how the LLVM build is configured."}, {"sha": "579422c97993ccbb0d5ad361240b8ebee254f5d1", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/75277c72c0c6f603bb258383ad74d3082dc4a720/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/75277c72c0c6f603bb258383ad74d3082dc4a720/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=75277c72c0c6f603bb258383ad74d3082dc4a720", "patch": "@@ -225,7 +225,12 @@ def err(msg):\n         unknown_args.append(arg)\n p(\"\")\n \n-if 'option-checking' not in known_args or known_args['option-checking'][1]:\n+# Note: here and a few other places, we use [-1] to apply the *last* value\n+# passed.  But if option-checking is enabled, then the known_args loop will\n+# also assert that options are only passed once.\n+option_checking = ('option-checking' not in known_args\n+                   or known_args['option-checking'][-1][1])\n+if option_checking:\n     if len(unknown_args) > 0:\n         err(\"Option '\" + unknown_args[0] + \"' is not recognized\")\n     if len(need_value_args) > 0:\n@@ -238,7 +243,7 @@ def err(msg):\n \n def build():\n     if 'build' in known_args:\n-        return known_args['build'][0][1]\n+        return known_args['build'][-1][1]\n     return bootstrap.default_build_triple()\n \n \n@@ -276,9 +281,9 @@ def set(key, value):\n \n     # Ensure each option is only passed once\n     arr = known_args[key]\n-    if len(arr) > 1:\n+    if option_checking and len(arr) > 1:\n         err(\"Option '{}' provided more than once\".format(key))\n-    option, value = arr[0]\n+    option, value = arr[-1]\n \n     # If we have a clear avenue to set our value in rustbuild, do so\n     if option.rustbuild is not None:"}]}