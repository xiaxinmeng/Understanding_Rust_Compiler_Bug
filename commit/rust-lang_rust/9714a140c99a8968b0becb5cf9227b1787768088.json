{"sha": "9714a140c99a8968b0becb5cf9227b1787768088", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MTRhMTQwYzk5YTg5NjhiMGJlY2I1Y2Y5MjI3YjE3ODc3NjgwODg=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-03-30T18:11:00Z"}, "committer": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-03-30T18:11:00Z"}, "message": "refactor: use ast::attr:HasAttrs", "tree": {"sha": "2cc8d28e47d2d970c06829e3a5eb01ed48bde0ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cc8d28e47d2d970c06829e3a5eb01ed48bde0ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9714a140c99a8968b0becb5cf9227b1787768088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9714a140c99a8968b0becb5cf9227b1787768088", "html_url": "https://github.com/rust-lang/rust/commit/9714a140c99a8968b0becb5cf9227b1787768088", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9714a140c99a8968b0becb5cf9227b1787768088/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac2d5b85a57e3f0b4c9d39e7ff053f95e0e4a5a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac2d5b85a57e3f0b4c9d39e7ff053f95e0e4a5a8", "html_url": "https://github.com/rust-lang/rust/commit/ac2d5b85a57e3f0b4c9d39e7ff053f95e0e4a5a8"}], "stats": {"total": 40, "additions": 13, "deletions": 27}, "files": [{"sha": "b9e160020fb94167cc3ac0de2d21dec47ad32c0f", "filename": "src/attr.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9714a140c99a8968b0becb5cf9227b1787768088/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9714a140c99a8968b0becb5cf9227b1787768088/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=9714a140c99a8968b0becb5cf9227b1787768088", "patch": "@@ -1,6 +1,7 @@\n //! Format attributes and meta items.\n \n use rustc_ast::ast;\n+use rustc_ast::attr::HasAttrs;\n use rustc_span::{symbol::sym, BytePos, Span, DUMMY_SP};\n \n use self::doc_comment::DocCommentFormatter;\n@@ -18,14 +19,8 @@ use crate::utils::{count_newlines, mk_sp};\n mod doc_comment;\n \n /// Returns attributes on the given statement.\n-pub(crate) fn get_attrs_from_stmt(stmt: &ast::Stmt) -> Option<&[ast::Attribute]> {\n-    match stmt.kind {\n-        ast::StmtKind::Local(ref local) => Some(&local.attrs),\n-        ast::StmtKind::Item(ref item) => Some(&item.attrs),\n-        ast::StmtKind::Expr(ref expr) | ast::StmtKind::Semi(ref expr) => Some(&expr.attrs),\n-        ast::StmtKind::MacCall(ref mac) => Some(&mac.2),\n-        ast::StmtKind::Empty => None,\n-    }\n+pub(crate) fn get_attrs_from_stmt(stmt: &ast::Stmt) -> &[ast::Attribute] {\n+    stmt.attrs()\n }\n \n pub(crate) fn get_span_without_attrs(stmt: &ast::Stmt) -> Span {"}, {"sha": "82c49d806b59299b03ecbe718513c27db9c130fe", "filename": "src/closures.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9714a140c99a8968b0becb5cf9227b1787768088/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9714a140c99a8968b0becb5cf9227b1787768088/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=9714a140c99a8968b0becb5cf9227b1787768088", "patch": "@@ -105,13 +105,9 @@ fn get_inner_expr<'a>(\n \n // Figure out if a block is necessary.\n fn needs_block(block: &ast::Block, prefix: &str, context: &RewriteContext<'_>) -> bool {\n-    let has_attributes = block\n-        .stmts\n-        .first()\n-        .map_or(false, |first_stmt| match get_attrs_from_stmt(first_stmt) {\n-            Some(attrs) => !attrs.is_empty(),\n-            None => false,\n-        });\n+    let has_attributes = block.stmts.first().map_or(false, |first_stmt| {\n+        !get_attrs_from_stmt(first_stmt).is_empty()\n+    });\n \n     is_unsafe_block(block)\n         || block.stmts.len() > 1"}, {"sha": "346628c0b890e3bf453287ceed2c20d537ad41b6", "filename": "src/visitor.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9714a140c99a8968b0becb5cf9227b1787768088/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9714a140c99a8968b0becb5cf9227b1787768088/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=9714a140c99a8968b0becb5cf9227b1787768088", "patch": "@@ -133,18 +133,13 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 self.format_missing(stmt.span().hi());\n             }\n             ast::StmtKind::Local(..) | ast::StmtKind::Expr(..) | ast::StmtKind::Semi(..) => {\n-                if let Some(attrs) = get_attrs_from_stmt(stmt.as_ast_node()) {\n-                    if contains_skip(attrs) {\n-                        self.push_skipped_with_span(\n-                            attrs,\n-                            stmt.span(),\n-                            get_span_without_attrs(stmt.as_ast_node()),\n-                        );\n-                    } else {\n-                        let shape = self.shape();\n-                        let rewrite = self.with_context(|ctx| stmt.rewrite(&ctx, shape));\n-                        self.push_rewrite(stmt.span(), rewrite)\n-                    }\n+                let attrs = get_attrs_from_stmt(stmt.as_ast_node());\n+                if contains_skip(attrs) {\n+                    self.push_skipped_with_span(\n+                        attrs,\n+                        stmt.span(),\n+                        get_span_without_attrs(stmt.as_ast_node()),\n+                    );\n                 } else {\n                     let shape = self.shape();\n                     let rewrite = self.with_context(|ctx| stmt.rewrite(&ctx, shape));"}]}