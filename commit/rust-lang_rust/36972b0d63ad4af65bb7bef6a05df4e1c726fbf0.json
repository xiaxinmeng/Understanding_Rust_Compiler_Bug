{"sha": "36972b0d63ad4af65bb7bef6a05df4e1c726fbf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2OTcyYjBkNjNhZDRhZjY1YmI3YmVmNmEwNWRmNGUxYzcyNmZiZjA=", "commit": {"author": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2020-11-18T02:33:07Z"}, "committer": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2020-11-18T02:33:07Z"}, "message": "fix handling the default config for profiler and sanitizers", "tree": {"sha": "5b0584cf50a7407819e289c5d93f0f679d20fd43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b0584cf50a7407819e289c5d93f0f679d20fd43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36972b0d63ad4af65bb7bef6a05df4e1c726fbf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36972b0d63ad4af65bb7bef6a05df4e1c726fbf0", "html_url": "https://github.com/rust-lang/rust/commit/36972b0d63ad4af65bb7bef6a05df4e1c726fbf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36972b0d63ad4af65bb7bef6a05df4e1c726fbf0/comments", "author": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5c37e86ff1782923e3abfbf5491dd383fcf827d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c37e86ff1782923e3abfbf5491dd383fcf827d", "html_url": "https://github.com/rust-lang/rust/commit/b5c37e86ff1782923e3abfbf5491dd383fcf827d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "2c2efaa9eb4aa8be8bdd27959434b29ddf5fefae", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/36972b0d63ad4af65bb7bef6a05df4e1c726fbf0/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36972b0d63ad4af65bb7bef6a05df4e1c726fbf0/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=36972b0d63ad4af65bb7bef6a05df4e1c726fbf0", "patch": "@@ -280,8 +280,8 @@ pub struct Target {\n     pub ranlib: Option<PathBuf>,\n     pub linker: Option<PathBuf>,\n     pub ndk: Option<PathBuf>,\n-    pub sanitizers: bool,\n-    pub profiler: bool,\n+    pub sanitizers: Option<bool>,\n+    pub profiler: Option<bool>,\n     pub crt_static: Option<bool>,\n     pub musl_root: Option<PathBuf>,\n     pub musl_libdir: Option<PathBuf>,\n@@ -896,8 +896,8 @@ impl Config {\n                 target.musl_libdir = cfg.musl_libdir.map(PathBuf::from);\n                 target.wasi_root = cfg.wasi_root.map(PathBuf::from);\n                 target.qemu_rootfs = cfg.qemu_rootfs.map(PathBuf::from);\n-                target.sanitizers = cfg.sanitizers.unwrap_or(build.sanitizers.unwrap_or_default());\n-                target.profiler = cfg.profiler.unwrap_or(build.profiler.unwrap_or_default());\n+                target.sanitizers = cfg.sanitizers;\n+                target.profiler = cfg.profiler;\n \n                 config.target_config.insert(TargetSelection::from_user(&triple), target);\n             }\n@@ -1008,19 +1008,19 @@ impl Config {\n     }\n \n     pub fn sanitizers_enabled(&self, target: TargetSelection) -> bool {\n-        self.target_config.get(&target).map(|t| t.sanitizers).unwrap_or(self.sanitizers)\n+        self.target_config.get(&target).map(|t| t.sanitizers).flatten().unwrap_or(self.sanitizers)\n     }\n \n     pub fn any_sanitizers_enabled(&self) -> bool {\n-        self.target_config.values().any(|t| t.sanitizers) || self.sanitizers\n+        self.target_config.values().any(|t| t.sanitizers == Some(true)) || self.sanitizers\n     }\n \n     pub fn profiler_enabled(&self, target: TargetSelection) -> bool {\n-        self.target_config.get(&target).map(|t| t.profiler).unwrap_or(self.profiler)\n+        self.target_config.get(&target).map(|t| t.profiler).flatten().unwrap_or(self.profiler)\n     }\n \n     pub fn any_profiler_enabled(&self) -> bool {\n-        self.target_config.values().any(|t| t.profiler) || self.profiler\n+        self.target_config.values().any(|t| t.profiler == Some(true)) || self.profiler\n     }\n \n     pub fn llvm_enabled(&self) -> bool {"}]}