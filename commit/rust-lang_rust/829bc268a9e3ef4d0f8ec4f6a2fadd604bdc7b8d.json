{"sha": "829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyOWJjMjY4YTllM2VmNGQwZjhlYzRmNmEyZmFkZDYwNGJkYzdiOGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-07-18T18:37:56Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-07-18T18:37:56Z"}, "message": "rustc: Remove a workaroudn in ThinLTO fixed upstream\n\nThis commit removes a hack in our ThinLTO passes which removes available\nexternally functions manually. The [upstream bug][1] has long since been fixed,\nso we should be able to rely on LLVM natively for this now!\n\n[1]: https://bugs.llvm.org/show_bug.cgi?id=35736", "tree": {"sha": "da726c4ce7fc1db6e818a6fa2d5921184641c088", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da726c4ce7fc1db6e818a6fa2d5921184641c088"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d", "html_url": "https://github.com/rust-lang/rust/commit/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12ed235adc62e63b16bb4f715b143c37a5efa00d", "url": "https://api.github.com/repos/rust-lang/rust/commits/12ed235adc62e63b16bb4f715b143c37a5efa00d", "html_url": "https://github.com/rust-lang/rust/commit/12ed235adc62e63b16bb4f715b143c37a5efa00d"}], "stats": {"total": 29, "additions": 0, "deletions": 29}, "files": [{"sha": "60b5cf2ec765134f4d95ca629e34a574acf825d1", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d", "patch": "@@ -759,20 +759,6 @@ impl ThinModule {\n         cgcx.save_temp_bitcode(&module, \"thin-lto-after-pm\");\n         timeline.record(\"thin-done\");\n \n-        // FIXME: this is a hack around a bug in LLVM right now. Discovered in\n-        // #46910 it was found out that on 32-bit MSVC LLVM will hit a codegen\n-        // error if there's an available_externally function in the LLVM module.\n-        // Typically we don't actually use these functions but ThinLTO makes\n-        // heavy use of them when inlining across modules.\n-        //\n-        // Tracked upstream at https://bugs.llvm.org/show_bug.cgi?id=35736 this\n-        // function call (and its definition on the C++ side of things)\n-        // shouldn't be necessary eventually and we can safetly delete these few\n-        // lines.\n-        llvm::LLVMRustThinLTORemoveAvailableExternally(llmod);\n-        cgcx.save_temp_bitcode(&module, \"thin-lto-after-rm-ae\");\n-        timeline.record(\"no-ae\");\n-\n         Ok(module)\n     }\n }"}, {"sha": "8d04438eea29000edf06fbeb0b26af50010d19e2", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d", "patch": "@@ -1791,7 +1791,6 @@ extern \"C\" {\n                                            CU1: *mut *mut c_void,\n                                            CU2: *mut *mut c_void);\n     pub fn LLVMRustThinLTOPatchDICompileUnit(M: ModuleRef, CU: *mut c_void);\n-    pub fn LLVMRustThinLTORemoveAvailableExternally(M: ModuleRef);\n \n     pub fn LLVMRustLinkerNew(M: ModuleRef) -> LinkerRef;\n     pub fn LLVMRustLinkerAdd(linker: LinkerRef,"}, {"sha": "2f28c5b32fb88de32c0e490a1df7301dc55a5dcc", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=829bc268a9e3ef4d0f8ec4f6a2fadd604bdc7b8d", "patch": "@@ -1228,15 +1228,6 @@ LLVMRustThinLTOPatchDICompileUnit(LLVMModuleRef Mod, DICompileUnit *Unit) {\n   MD->addOperand(Unit);\n }\n \n-extern \"C\" void\n-LLVMRustThinLTORemoveAvailableExternally(LLVMModuleRef Mod) {\n-  Module *M = unwrap(Mod);\n-  for (Function &F : M->functions()) {\n-    if (F.hasAvailableExternallyLinkage())\n-      F.deleteBody();\n-  }\n-}\n-\n #else\n \n extern \"C\" bool\n@@ -1328,9 +1319,4 @@ LLVMRustThinLTOPatchDICompileUnit(LLVMModuleRef Mod) {\n   report_fatal_error(\"ThinLTO not available\");\n }\n \n-extern \"C\" void\n-LLVMRustThinLTORemoveAvailableExternally(LLVMModuleRef Mod) {\n-  report_fatal_error(\"ThinLTO not available\");\n-}\n-\n #endif // LLVM_VERSION_GE(4, 0)"}]}