{"sha": "9b6e0e8b9442b0e930aed950bac4f3d151d295ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNmUwZThiOTQ0MmIwZTkzMGFlZDk1MGJhYzRmM2QxNTFkMjk1YWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T02:43:29Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T02:43:34Z"}, "message": "simplify check_pat_lit", "tree": {"sha": "22d55a8ac36264e0381145bd5592a54dc66621d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22d55a8ac36264e0381145bd5592a54dc66621d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b6e0e8b9442b0e930aed950bac4f3d151d295ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b6e0e8b9442b0e930aed950bac4f3d151d295ae", "html_url": "https://github.com/rust-lang/rust/commit/9b6e0e8b9442b0e930aed950bac4f3d151d295ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b6e0e8b9442b0e930aed950bac4f3d151d295ae/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "834bc5650acf7019a53b409db68986857822812c", "url": "https://api.github.com/repos/rust-lang/rust/commits/834bc5650acf7019a53b409db68986857822812c", "html_url": "https://github.com/rust-lang/rust/commit/834bc5650acf7019a53b409db68986857822812c"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "3fdae81c766c2b71c72aaaad61c0975923d898c0", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9b6e0e8b9442b0e930aed950bac4f3d151d295ae/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6e0e8b9442b0e930aed950bac4f3d151d295ae/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=9b6e0e8b9442b0e930aed950bac4f3d151d295ae", "patch": "@@ -11,7 +11,7 @@ use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::traits::Pattern;\n use rustc_span::hygiene::DesugaringKind;\n-use rustc_span::Span;\n+use rustc_span::source_map::{Span, Spanned};\n use syntax::ast;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n@@ -361,16 +361,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // Byte string patterns behave the same way as array patterns\n         // They can denote both statically and dynamically-sized byte arrays.\n         let mut pat_ty = ty;\n-        if let hir::ExprKind::Lit(ref lt) = lt.kind {\n-            if let ast::LitKind::ByteStr(_) = lt.node {\n-                let expected_ty = self.structurally_resolved_type(span, expected);\n-                if let ty::Ref(_, r_ty, _) = expected_ty.kind {\n-                    if let ty::Slice(_) = r_ty.kind {\n-                        let tcx = self.tcx;\n-                        pat_ty =\n-                            tcx.mk_imm_ref(tcx.lifetimes.re_static, tcx.mk_slice(tcx.types.u8));\n-                    }\n-                }\n+        if let hir::ExprKind::Lit(Spanned { node: ast::LitKind::ByteStr(_), .. }) = lt.kind {\n+            let expected = self.structurally_resolved_type(span, expected);\n+            if let ty::Ref(_, ty::TyS { kind: ty::Slice(_), .. }, _) = expected.kind {\n+                let tcx = self.tcx;\n+                pat_ty = tcx.mk_imm_ref(tcx.lifetimes.re_static, tcx.mk_slice(tcx.types.u8));\n             }\n         }\n "}]}