{"sha": "ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNjgzZWY4NTMyMDM0YTRiZWUwMWU5YWE4ZmQ5MmRiZTM4YWM2ZjE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-28T04:53:36Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-05T17:56:55Z"}, "message": " Say 'prefix with `kind@`' instead of 'prefix with the item kind'\n\nThis is both more specific and easier to read.", "tree": {"sha": "a746ccb31477090a9695efbd9a97deb64022cf8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a746ccb31477090a9695efbd9a97deb64022cf8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "html_url": "https://github.com/rust-lang/rust/commit/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d67eb1f1487c04cdd2564741828cba0784ed8501", "url": "https://api.github.com/repos/rust-lang/rust/commits/d67eb1f1487c04cdd2564741828cba0784ed8501", "html_url": "https://github.com/rust-lang/rust/commit/d67eb1f1487c04cdd2564741828cba0784ed8501"}], "stats": {"total": 173, "additions": 73, "deletions": 100}, "files": [{"sha": "a19387ad992faab5b1307cd527469bff188689c6", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 39, "deletions": 18, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -1328,21 +1328,16 @@ impl Disambiguator {\n         }\n     }\n \n-    /// Return (description of the change, suggestion)\n-    fn suggestion_for(self, path_str: &str) -> (&'static str, String) {\n-        const PREFIX: &str = \"prefix with the item kind\";\n-        const FUNCTION: &str = \"add parentheses\";\n-        const MACRO: &str = \"add an exclamation mark\";\n-\n+    fn suggestion(self) -> Suggestion {\n         let kind = match self {\n-            Disambiguator::Primitive => return (PREFIX, format!(\"prim@{}\", path_str)),\n+            Disambiguator::Primitive => return Suggestion::Prefix(\"prim\"),\n             Disambiguator::Kind(kind) => kind,\n             Disambiguator::Namespace(_) => panic!(\"display_for cannot be used on namespaces\"),\n         };\n         if kind == DefKind::Macro(MacroKind::Bang) {\n-            return (MACRO, format!(\"{}!\", path_str));\n+            return Suggestion::Macro;\n         } else if kind == DefKind::Fn || kind == DefKind::AssocFn {\n-            return (FUNCTION, format!(\"{}()\", path_str));\n+            return Suggestion::Function;\n         }\n \n         let prefix = match kind {\n@@ -1367,8 +1362,7 @@ impl Disambiguator {\n             },\n         };\n \n-        // FIXME: if this is an implied shortcut link, it's bad style to suggest `@`\n-        (PREFIX, format!(\"{}@{}\", prefix, path_str))\n+        Suggestion::Prefix(prefix)\n     }\n \n     fn ns(self) -> Namespace {\n@@ -1400,6 +1394,31 @@ impl Disambiguator {\n     }\n }\n \n+enum Suggestion {\n+    Prefix(&'static str),\n+    Function,\n+    Macro,\n+}\n+\n+impl Suggestion {\n+    fn descr(&self) -> Cow<'static, str> {\n+        match self {\n+            Self::Prefix(x) => format!(\"prefix with `{}@`\", x).into(),\n+            Self::Function => \"add parentheses\".into(),\n+            Self::Macro => \"add an exclamation mark\".into(),\n+        }\n+    }\n+\n+    fn as_help(&self, path_str: &str) -> String {\n+        // FIXME: if this is an implied shortcut link, it's bad style to suggest `@`\n+        match self {\n+            Self::Prefix(prefix) => format!(\"{}@{}\", prefix, path_str),\n+            Self::Function => format!(\"{}()\", path_str),\n+            Self::Macro => format!(\"{}!\", path_str),\n+        }\n+    }\n+}\n+\n /// Reports a diagnostic for an intra-doc link.\n ///\n /// If no link range is provided, or the source span of the link cannot be determined, the span of\n@@ -1695,18 +1714,20 @@ fn suggest_disambiguator(\n     sp: Option<rustc_span::Span>,\n     link_range: &Option<Range<usize>>,\n ) {\n-    let (action, mut suggestion) = disambiguator.suggestion_for(path_str);\n-    let help = format!(\"to link to the {}, {}\", disambiguator.descr(), action);\n+    let suggestion = disambiguator.suggestion();\n+    let help = format!(\"to link to the {}, {}\", disambiguator.descr(), suggestion.descr());\n \n     if let Some(sp) = sp {\n         let link_range = link_range.as_ref().expect(\"must have a link range if we have a span\");\n-        if dox.bytes().nth(link_range.start) == Some(b'`') {\n-            suggestion = format!(\"`{}`\", suggestion);\n-        }\n+        let msg = if dox.bytes().nth(link_range.start) == Some(b'`') {\n+            format!(\"`{}`\", suggestion.as_help(path_str))\n+        } else {\n+            suggestion.as_help(path_str)\n+        };\n \n-        diag.span_suggestion(sp, &help, suggestion, Applicability::MaybeIncorrect);\n+        diag.span_suggestion(sp, &help, msg, Applicability::MaybeIncorrect);\n     } else {\n-        diag.help(&format!(\"{}: {}\", help, suggestion));\n+        diag.help(&format!(\"{}: {}\", help, suggestion.as_help(path_str)));\n     }\n }\n "}, {"sha": "919c46fe1dab2279aaa1e234588405368de9be36", "filename": "src/test/rustdoc-ui/intra-link-errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.rs?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -42,7 +42,7 @@\n \n /// [S!]\n //~^ ERROR unresolved link\n-//~| HELP to link to the struct, prefix with the item kind\n+//~| HELP to link to the struct, prefix with `struct@`\n //~| NOTE this link resolves to the struct `S`\n pub fn f() {}\n #[derive(Debug)]"}, {"sha": "7318193964f8d93b61f5242932626992f92406d4", "filename": "src/test/rustdoc-ui/intra-link-errors.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.stderr?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -79,13 +79,9 @@ error: unresolved link to `S`\n   --> $DIR/intra-link-errors.rs:44:6\n    |\n LL | /// [S!]\n-   |      ^^\n+   |      ^^ help: to link to the struct, prefix with `struct@`: `struct@S`\n    |\n    = note: this link resolves to the struct `S`, which is not in the macro namespace\n-help: to link to the struct, prefix with the item kind\n-   |\n-LL | /// [struct@S]\n-   |      ^^^^^^^^\n \n error: unresolved link to `T::g`\n   --> $DIR/intra-link-errors.rs:62:6"}, {"sha": "85738ceae8e615b34eeedffa8a0ffb35d9e1b0ac", "filename": "src/test/rustdoc-ui/intra-link-prim-conflict.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-prim-conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-prim-conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-prim-conflict.rs?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -18,13 +18,13 @@\n \n /// [struct@char]\n //~^ ERROR incompatible link\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `mod@`\n //~| NOTE resolved to a module\n pub mod char {}\n \n pub mod inner {\n     //! [struct@char]\n     //~^ ERROR incompatible link\n-    //~| HELP prefix with the item kind\n+    //~| HELP prefix with `prim@`\n     //~| NOTE resolved to a builtin type\n }"}, {"sha": "43587a80021afe8c1937613808f3f92a1a09eef2", "filename": "src/test/rustdoc-ui/intra-link-prim-conflict.stderr", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-prim-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-link-prim-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-prim-conflict.stderr?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -9,11 +9,11 @@ note: the lint level is defined here\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n-help: to link to the module, prefix with the item kind\n+help: to link to the module, prefix with `mod@`\n    |\n LL | /// [mod@char]\n    |      ^^^^^^^^\n-help: to link to the builtin type, prefix with the item kind\n+help: to link to the builtin type, prefix with `prim@`\n    |\n LL | /// [prim@char]\n    |      ^^^^^^^^^\n@@ -24,11 +24,11 @@ error: `char` is both a module and a builtin type\n LL | /// [type@char]\n    |      ^^^^^^^^^ ambiguous link\n    |\n-help: to link to the module, prefix with the item kind\n+help: to link to the module, prefix with `mod@`\n    |\n LL | /// [mod@char]\n    |      ^^^^^^^^\n-help: to link to the builtin type, prefix with the item kind\n+help: to link to the builtin type, prefix with `prim@`\n    |\n LL | /// [prim@char]\n    |      ^^^^^^^^^\n@@ -37,25 +37,17 @@ error: incompatible link kind for `char`\n   --> $DIR/intra-link-prim-conflict.rs:19:6\n    |\n LL | /// [struct@char]\n-   |      ^^^^^^^^^^^\n+   |      ^^^^^^^^^^^ help: to link to the module, prefix with `mod@`: `mod@char`\n    |\n    = note: this link resolved to a module, which is not a struct\n-help: to link to the module, prefix with the item kind\n-   |\n-LL | /// [mod@char]\n-   |      ^^^^^^^^\n \n error: incompatible link kind for `char`\n   --> $DIR/intra-link-prim-conflict.rs:26:10\n    |\n LL |     //! [struct@char]\n-   |          ^^^^^^^^^^^\n+   |          ^^^^^^^^^^^ help: to link to the builtin type, prefix with `prim@`: `prim@char`\n    |\n    = note: this link resolved to a builtin type, which is not a struct\n-help: to link to the builtin type, prefix with the item kind\n-   |\n-LL |     //! [prim@char]\n-   |          ^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "17891ca05efa18ca43aa7dcf722df85fb13bd5fa", "filename": "src/test/rustdoc-ui/intra-links-ambiguity.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-links-ambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-links-ambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-ambiguity.stderr?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -9,7 +9,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n-help: to link to the struct, prefix with the item kind\n+help: to link to the struct, prefix with `struct@`\n    |\n LL | /// [`struct@ambiguous`] is ambiguous.\n    |      ^^^^^^^^^^^^^^^^^^\n@@ -24,7 +24,7 @@ error: `ambiguous` is both a struct and a function\n LL | /// [ambiguous] is ambiguous.\n    |      ^^^^^^^^^ ambiguous link\n    |\n-help: to link to the struct, prefix with the item kind\n+help: to link to the struct, prefix with `struct@`\n    |\n LL | /// [struct@ambiguous] is ambiguous.\n    |      ^^^^^^^^^^^^^^^^\n@@ -39,7 +39,7 @@ error: `multi_conflict` is a struct, a function, and a macro\n LL | /// [`multi_conflict`] is a three-way conflict.\n    |      ^^^^^^^^^^^^^^^^ ambiguous link\n    |\n-help: to link to the struct, prefix with the item kind\n+help: to link to the struct, prefix with `struct@`\n    |\n LL | /// [`struct@multi_conflict`] is a three-way conflict.\n    |      ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -58,11 +58,11 @@ error: `type_and_value` is both a module and a constant\n LL | /// Ambiguous [type_and_value].\n    |                ^^^^^^^^^^^^^^ ambiguous link\n    |\n-help: to link to the module, prefix with the item kind\n+help: to link to the module, prefix with `mod@`\n    |\n LL | /// Ambiguous [mod@type_and_value].\n    |                ^^^^^^^^^^^^^^^^^^\n-help: to link to the constant, prefix with the item kind\n+help: to link to the constant, prefix with `const@`\n    |\n LL | /// Ambiguous [const@type_and_value].\n    |                ^^^^^^^^^^^^^^^^^^^^\n@@ -73,7 +73,7 @@ error: `foo::bar` is both an enum and a function\n LL | /// Ambiguous non-implied shortcut link [`foo::bar`].\n    |                                          ^^^^^^^^^^ ambiguous link\n    |\n-help: to link to the enum, prefix with the item kind\n+help: to link to the enum, prefix with `enum@`\n    |\n LL | /// Ambiguous non-implied shortcut link [`enum@foo::bar`].\n    |                                          ^^^^^^^^^^^^^^^"}, {"sha": "b9c8e033b1b21002ceb70070deeb30b5b991a5c7", "filename": "src/test/rustdoc-ui/intra-links-disambiguator-mismatch.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.rs?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -14,27 +14,27 @@ trait T {}\n /// Link to [struct@S]\n //~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `enum@`\n \n /// Link to [mod@S]\n //~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `enum@`\n \n /// Link to [union@S]\n //~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `enum@`\n \n /// Link to [trait@S]\n //~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `enum@`\n \n /// Link to [struct@T]\n //~^ ERROR incompatible link kind for `T`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `trait@`\n \n /// Link to [derive@m]\n //~^ ERROR incompatible link kind for `m`\n@@ -44,22 +44,22 @@ trait T {}\n /// Link to [const@s]\n //~^ ERROR incompatible link kind for `s`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `static@`\n \n /// Link to [static@c]\n //~^ ERROR incompatible link kind for `c`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `const@`\n \n /// Link to [fn@c]\n //~^ ERROR incompatible link kind for `c`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `const@`\n \n /// Link to [c()]\n //~^ ERROR incompatible link kind for `c`\n //~| NOTE this link resolved\n-//~| HELP prefix with the item kind\n+//~| HELP prefix with `const@`\n \n /// Link to [const@f]\n //~^ ERROR incompatible link kind for `f`"}, {"sha": "2e732baf6e01e246fd0ae317b212eb755caab450", "filename": "src/test/rustdoc-ui/intra-links-disambiguator-mismatch.stderr", "status": "modified", "additions": 9, "deletions": 45, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.stderr?ref=ee683ef8532034a4bee01e9aa8fd92dbe38ac6f1", "patch": "@@ -2,66 +2,46 @@ error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:14:14\n    |\n LL | /// Link to [struct@S]\n-   |              ^^^^^^^^\n+   |              ^^^^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n note: the lint level is defined here\n   --> $DIR/intra-links-disambiguator-mismatch.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    = note: this link resolved to an enum, which is not a struct\n-help: to link to the enum, prefix with the item kind\n-   |\n-LL | /// Link to [enum@S]\n-   |              ^^^^^^\n \n error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:19:14\n    |\n LL | /// Link to [mod@S]\n-   |              ^^^^^\n+   |              ^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a module\n-help: to link to the enum, prefix with the item kind\n-   |\n-LL | /// Link to [enum@S]\n-   |              ^^^^^^\n \n error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:24:14\n    |\n LL | /// Link to [union@S]\n-   |              ^^^^^^^\n+   |              ^^^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a union\n-help: to link to the enum, prefix with the item kind\n-   |\n-LL | /// Link to [enum@S]\n-   |              ^^^^^^\n \n error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:29:14\n    |\n LL | /// Link to [trait@S]\n-   |              ^^^^^^^\n+   |              ^^^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a trait\n-help: to link to the enum, prefix with the item kind\n-   |\n-LL | /// Link to [enum@S]\n-   |              ^^^^^^\n \n error: incompatible link kind for `T`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:34:14\n    |\n LL | /// Link to [struct@T]\n-   |              ^^^^^^^^\n+   |              ^^^^^^^^ help: to link to the trait, prefix with `trait@`: `trait@T`\n    |\n    = note: this link resolved to a trait, which is not a struct\n-help: to link to the trait, prefix with the item kind\n-   |\n-LL | /// Link to [trait@T]\n-   |              ^^^^^^^\n \n error: incompatible link kind for `m`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:39:14\n@@ -75,49 +55,33 @@ error: incompatible link kind for `s`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:44:14\n    |\n LL | /// Link to [const@s]\n-   |              ^^^^^^^\n+   |              ^^^^^^^ help: to link to the static, prefix with `static@`: `static@s`\n    |\n    = note: this link resolved to a static, which is not a constant\n-help: to link to the static, prefix with the item kind\n-   |\n-LL | /// Link to [static@s]\n-   |              ^^^^^^^^\n \n error: incompatible link kind for `c`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:49:14\n    |\n LL | /// Link to [static@c]\n-   |              ^^^^^^^^\n+   |              ^^^^^^^^ help: to link to the constant, prefix with `const@`: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a static\n-help: to link to the constant, prefix with the item kind\n-   |\n-LL | /// Link to [const@c]\n-   |              ^^^^^^^\n \n error: incompatible link kind for `c`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:54:14\n    |\n LL | /// Link to [fn@c]\n-   |              ^^^^\n+   |              ^^^^ help: to link to the constant, prefix with `const@`: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a function\n-help: to link to the constant, prefix with the item kind\n-   |\n-LL | /// Link to [const@c]\n-   |              ^^^^^^^\n \n error: incompatible link kind for `c`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:59:14\n    |\n LL | /// Link to [c()]\n-   |              ^^^\n+   |              ^^^ help: to link to the constant, prefix with `const@`: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a function\n-help: to link to the constant, prefix with the item kind\n-   |\n-LL | /// Link to [const@c]\n-   |              ^^^^^^^\n \n error: incompatible link kind for `f`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:64:14"}]}