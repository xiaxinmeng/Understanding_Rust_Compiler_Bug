{"sha": "6f253bd49e80c809b7c22fd257bcef06a8ca7c30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMjUzYmQ0OWU4MGM4MDliN2MyMmZkMjU3YmNlZjA2YThjYTdjMzA=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-24T21:34:37Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-25T16:33:27Z"}, "message": "rm unnecessary libc allocator usage", "tree": {"sha": "e1de58dad366100d17e67191e47d98bbe381ffcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1de58dad366100d17e67191e47d98bbe381ffcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f253bd49e80c809b7c22fd257bcef06a8ca7c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f253bd49e80c809b7c22fd257bcef06a8ca7c30", "html_url": "https://github.com/rust-lang/rust/commit/6f253bd49e80c809b7c22fd257bcef06a8ca7c30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f253bd49e80c809b7c22fd257bcef06a8ca7c30/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c18e508f10aa5bf42dc80691654b9cde2a661cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c18e508f10aa5bf42dc80691654b9cde2a661cd", "html_url": "https://github.com/rust-lang/rust/commit/6c18e508f10aa5bf42dc80691654b9cde2a661cd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "838dfd6b7abe6b5807dfc0e6e5df06b5ebae1743", "filename": "src/librustrt/mutex.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6f253bd49e80c809b7c22fd257bcef06a8ca7c30/src%2Flibrustrt%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f253bd49e80c809b7c22fd257bcef06a8ca7c30/src%2Flibrustrt%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Fmutex.rs?ref=6f253bd49e80c809b7c22fd257bcef06a8ca7c30", "patch": "@@ -516,7 +516,7 @@ mod imp {\n \n #[cfg(windows)]\n mod imp {\n-    use alloc::libc_heap::malloc_raw;\n+    use alloc::heap;\n     use core::atomic;\n     use core::ptr;\n     use libc::{HANDLE, BOOL, LPSECURITY_ATTRIBUTES, c_void, DWORD, LPCSTR};\n@@ -607,7 +607,7 @@ mod imp {\n     }\n \n     pub unsafe fn init_lock() -> uint {\n-        let block = malloc_raw(CRIT_SECTION_SIZE as uint) as *mut c_void;\n+        let block = heap::allocate(CRIT_SECTION_SIZE, 8) as *mut c_void;\n         InitializeCriticalSectionAndSpinCount(block, SPIN_COUNT);\n         return block as uint;\n     }\n@@ -619,7 +619,7 @@ mod imp {\n \n     pub unsafe fn free_lock(h: uint) {\n         DeleteCriticalSection(h as LPCRITICAL_SECTION);\n-        libc::free(h as *mut c_void);\n+        heap::deallocate(h as *mut u8, CRIT_SECTION_SIZE, 8);\n     }\n \n     pub unsafe fn free_cond(h: uint) {"}]}