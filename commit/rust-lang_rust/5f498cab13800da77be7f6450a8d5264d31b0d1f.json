{"sha": "5f498cab13800da77be7f6450a8d5264d31b0d1f", "node_id": "C_kwDOAAsO6NoAKDVmNDk4Y2FiMTM4MDBkYTc3YmU3ZjY0NTBhOGQ1MjY0ZDMxYjBkMWY", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-09-22T14:44:03Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-09-22T14:44:03Z"}, "message": "Only add 'inside this call' for Invalidation diagnostics", "tree": {"sha": "995cf5d126acfaccdeecff61c405aff179f4d2bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/995cf5d126acfaccdeecff61c405aff179f4d2bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f498cab13800da77be7f6450a8d5264d31b0d1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f498cab13800da77be7f6450a8d5264d31b0d1f", "html_url": "https://github.com/rust-lang/rust/commit/5f498cab13800da77be7f6450a8d5264d31b0d1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f498cab13800da77be7f6450a8d5264d31b0d1f/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45d7121e9edb15873dce8868fe09c666aa451ecc", "url": "https://api.github.com/repos/rust-lang/rust/commits/45d7121e9edb15873dce8868fe09c666aa451ecc", "html_url": "https://github.com/rust-lang/rust/commit/45d7121e9edb15873dce8868fe09c666aa451ecc"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "2cc7a88704ea39497adb6ef9811cf0419f14e28e", "filename": "src/tools/miri/src/stacked_borrows/diagnostics.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5f498cab13800da77be7f6450a8d5264d31b0d1f/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f498cab13800da77be7f6450a8d5264d31b0d1f/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fdiagnostics.rs?ref=5f498cab13800da77be7f6450a8d5264d31b0d1f", "patch": "@@ -66,13 +66,20 @@ enum InvalidationCause {\n \n impl Invalidation {\n     fn generate_diagnostic(&self) -> (String, SpanData) {\n-        (\n+        let message = if let InvalidationCause::Retag(_, RetagCause::FnEntry) = self.cause {\n+            // For a FnEntry retag, our Span points at the caller.\n+            // See `DiagnosticCx::log_invalidation`.\n+            format!(\n+                \"{:?} was later invalidated at offsets {:?} by a {} inside this call\",\n+                self.tag, self.range, self.cause\n+            )\n+        } else {\n             format!(\n                 \"{:?} was later invalidated at offsets {:?} by a {}\",\n                 self.tag, self.range, self.cause\n-            ),\n-            self.span.data(),\n-        )\n+            )\n+        };\n+        (message, self.span.data())\n     }\n }\n \n@@ -82,7 +89,7 @@ impl fmt::Display for InvalidationCause {\n             InvalidationCause::Access(kind) => write!(f, \"{}\", kind),\n             InvalidationCause::Retag(perm, kind) =>\n                 if *kind == RetagCause::FnEntry {\n-                    write!(f, \"{:?} FnEntry retag inside this call\", perm)\n+                    write!(f, \"{:?} FnEntry retag\", perm)\n                 } else {\n                     write!(f, \"{:?} retag\", perm)\n                 },"}]}