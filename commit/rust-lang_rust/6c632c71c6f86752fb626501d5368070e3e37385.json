{"sha": "6c632c71c6f86752fb626501d5368070e3e37385", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNjMyYzcxYzZmODY3NTJmYjYyNjUwMWQ1MzY4MDcwZTNlMzczODU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T01:22:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:10:24Z"}, "message": "rt: Simplify reap_dead_tasks", "tree": {"sha": "e99fd5becfdd2271a395cd5622407f8d003e82f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e99fd5becfdd2271a395cd5622407f8d003e82f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c632c71c6f86752fb626501d5368070e3e37385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c632c71c6f86752fb626501d5368070e3e37385", "html_url": "https://github.com/rust-lang/rust/commit/6c632c71c6f86752fb626501d5368070e3e37385", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c632c71c6f86752fb626501d5368070e3e37385/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f719ea552bec8eb91a2a02370269eee4404bada7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f719ea552bec8eb91a2a02370269eee4404bada7", "html_url": "https://github.com/rust-lang/rust/commit/f719ea552bec8eb91a2a02370269eee4404bada7"}], "stats": {"total": 32, "additions": 4, "deletions": 28}, "files": [{"sha": "0d964ec21bc579d0e06555270c1b1e170cd0a46d", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 4, "deletions": 28, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/6c632c71c6f86752fb626501d5368070e3e37385/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6c632c71c6f86752fb626501d5368070e3e37385/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=6c632c71c6f86752fb626501d5368070e3e37385", "patch": "@@ -123,37 +123,13 @@ rust_scheduler::reap_dead_tasks(int id) {\n     rust_task **dead_tasks_copy = (rust_task**)\n         srv->malloc(sizeof(rust_task*) * dead_tasks_len);\n     for (size_t i = 0; i < dead_tasks_len; ++i) {\n-        rust_task *task = dead_tasks[i];\n-        dead_tasks_copy[i] = task;\n-    }\n-\n-    // Now drop the lock and futz with the tasks. This avoids establishing\n-    // a sched->lock then task->lock locking order, which would be devestating\n-    // to performance.\n-    lock.unlock();\n-\n-    for (size_t i = 0; i < dead_tasks_len; ++i) {\n-        rust_task *task = dead_tasks_copy[i];\n-        task->lock.lock();\n-        DLOG(this, task,\n-             \"deleting unreferenced dead task %s @0x%\" PRIxPTR,\n-             task->name, task);\n-        task->lock.unlock();\n-    }\n-\n-    // Now grab the lock again and remove the tasks that were truly dead\n-    lock.lock();\n-\n-    for (size_t i = 0; i < dead_tasks_len; ++i) {\n-        rust_task *task = dead_tasks_copy[i];\n-        if (task) {\n-            dead_tasks.remove(task);\n-        }\n+        dead_tasks_copy[i] = dead_tasks.pop_value();\n     }\n \n     // Now unlock again because we have to actually free the dead tasks,\n-    // and that may end up wanting to lock the task and sched locks\n-    // again (via target->send)\n+    // and that may end up wanting to lock the kernel lock. We have\n+    // a kernel lock -> scheduler lock locking order that we need\n+    // to maintain.\n     lock.unlock();\n \n     for (size_t i = 0; i < dead_tasks_len; ++i) {"}]}