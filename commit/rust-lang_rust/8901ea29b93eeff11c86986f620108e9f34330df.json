{"sha": "8901ea29b93eeff11c86986f620108e9f34330df", "node_id": "C_kwDOAAsO6NoAKDg5MDFlYTI5YjkzZWVmZjExYzg2OTg2ZjYyMDEwOGU5ZjM0MzMwZGY", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-09-28T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-09-28T12:39:18Z"}, "message": "Rebase resume argument projections during state transform\n\nWhen remapping a resume argument with projections rebase them on top of\nthe new base.\n\nThe case where resume argument has projections is unusual, but might\narise with box syntax where the assignment is performed directly into\nthe box without an intermediate temporary.", "tree": {"sha": "fb063cf182b088e41dc38682d836f652a4b8f35c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb063cf182b088e41dc38682d836f652a4b8f35c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8901ea29b93eeff11c86986f620108e9f34330df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8901ea29b93eeff11c86986f620108e9f34330df", "html_url": "https://github.com/rust-lang/rust/commit/8901ea29b93eeff11c86986f620108e9f34330df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8901ea29b93eeff11c86986f620108e9f34330df/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83f147b3baf21acfc367a6da1045d212cd3957e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/83f147b3baf21acfc367a6da1045d212cd3957e4", "html_url": "https://github.com/rust-lang/rust/commit/83f147b3baf21acfc367a6da1045d212cd3957e4"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "bc72e9d94a95301388fabcc2f773e96795fd017e", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8901ea29b93eeff11c86986f620108e9f34330df/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8901ea29b93eeff11c86986f620108e9f34330df/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=8901ea29b93eeff11c86986f620108e9f34330df", "patch": "@@ -342,15 +342,16 @@ impl MutVisitor<'tcx> for TransformVisitor<'tcx> {\n             let source_info = data.terminator().source_info;\n             // We must assign the value first in case it gets declared dead below\n             data.statements.extend(self.make_state(state_idx, v, source_info));\n-            let state = if let Some((resume, resume_arg)) = resume {\n+            let state = if let Some((resume, mut resume_arg)) = resume {\n                 // Yield\n                 let state = 3 + self.suspension_points.len();\n \n                 // The resume arg target location might itself be remapped if its base local is\n                 // live across a yield.\n                 let resume_arg =\n                     if let Some(&(ty, variant, idx)) = self.remap.get(&resume_arg.local) {\n-                        self.make_field(variant, idx, ty)\n+                        replace_base(&mut resume_arg, self.make_field(variant, idx, ty), self.tcx);\n+                        resume_arg\n                     } else {\n                         resume_arg\n                     };"}, {"sha": "dd6fa7c151aa7b82f93d0a964738e363eea551f3", "filename": "src/test/ui/generator/yield-in-box.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8901ea29b93eeff11c86986f620108e9f34330df/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8901ea29b93eeff11c86986f620108e9f34330df/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.rs?ref=8901ea29b93eeff11c86986f620108e9f34330df", "patch": "@@ -1,8 +1,10 @@\n // run-pass\n-\n // Test that box-statements with yields in them work.\n \n-#![feature(generators, box_syntax)]\n+#![feature(generators, box_syntax, generator_trait)]\n+use std::pin::Pin;\n+use std::ops::Generator;\n+use std::ops::GeneratorState;\n \n fn main() {\n     let x = 0i32;\n@@ -15,4 +17,8 @@ fn main() {\n             _t => {}\n         }\n     };\n+\n+    let mut g = |_| box yield;\n+    assert_eq!(Pin::new(&mut g).resume(1), GeneratorState::Yielded(()));\n+    assert_eq!(Pin::new(&mut g).resume(2), GeneratorState::Complete(box 2));\n }"}, {"sha": "7602e803945dc14e6ede067876691f7420f33c88", "filename": "src/test/ui/generator/yield-in-box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8901ea29b93eeff11c86986f620108e9f34330df/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8901ea29b93eeff11c86986f620108e9f34330df/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.stderr?ref=8901ea29b93eeff11c86986f620108e9f34330df", "patch": "@@ -1,5 +1,5 @@\n warning: unused generator that must be used\n-  --> $DIR/yield-in-box.rs:9:5\n+  --> $DIR/yield-in-box.rs:11:5\n    |\n LL | /     || {\n LL | |         let y = 2u32;"}]}