{"sha": "bbebe7351fcd29af1eb9a35e315369b15887ea09", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZWJlNzM1MWZjZDI5YWYxZWI5YTM1ZTMxNTM2OWIxNTg4N2VhMDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-22T19:34:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-22T19:34:20Z"}, "message": "Auto merge of #74633 - davidtwco:issue-74614-disable-polymorphisation, r=wesleywiser\n\nDisable polymorphisation\n\nFixes #74614.\n\nThis PR disables polymorphisation to fix the regression in #74614 after investigation into the issue makes it clear that the fix won't be trivial. ~~I'll file an issue shortly to replace #74614 with the findings so far.~~ #74636 has been filed to track the fix of the underlying regression.\n\nr? @eddyb", "tree": {"sha": "1188f2aaead69f89217acaf371bc24ac98a93c11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1188f2aaead69f89217acaf371bc24ac98a93c11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbebe7351fcd29af1eb9a35e315369b15887ea09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbebe7351fcd29af1eb9a35e315369b15887ea09", "html_url": "https://github.com/rust-lang/rust/commit/bbebe7351fcd29af1eb9a35e315369b15887ea09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbebe7351fcd29af1eb9a35e315369b15887ea09/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e92106d457abd14f82adc29e7f2496861e07916", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e92106d457abd14f82adc29e7f2496861e07916", "html_url": "https://github.com/rust-lang/rust/commit/9e92106d457abd14f82adc29e7f2496861e07916"}, {"sha": "799d52eff7e96fc339327966b056ab89c061b255", "url": "https://api.github.com/repos/rust-lang/rust/commits/799d52eff7e96fc339327966b056ab89c061b255", "html_url": "https://github.com/rust-lang/rust/commit/799d52eff7e96fc339327966b056ab89c061b255"}], "stats": {"total": 103, "additions": 66, "deletions": 37}, "files": [{"sha": "e724180f4d833d588c199cc4bdf46bab1c681410", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -627,8 +627,9 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                     Ok(val) => collect_const_value(self.tcx, val, self.output),\n                     Err(ErrorHandled::Reported(ErrorReported) | ErrorHandled::Linted) => {}\n                     Err(ErrorHandled::TooGeneric) => span_bug!(\n-                        self.tcx.def_span(def.did),\n-                        \"collection encountered polymorphic constant\",\n+                        self.body.source_info(location).span,\n+                        \"collection encountered polymorphic constant: {}\",\n+                        substituted_constant\n                     ),\n                 }\n             }"}, {"sha": "502102fa1787647139a57ffa11dc4b14868bc736", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -949,7 +949,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         (default: PLT is disabled if full relro is enabled)\"),\n     polonius: bool = (false, parse_bool, [UNTRACKED],\n         \"enable polonius-based borrow-checker (default: no)\"),\n-    polymorphize: bool = (true, parse_bool, [TRACKED],\n+    polymorphize: bool = (false, parse_bool, [TRACKED],\n           \"perform polymorphization analysis\"),\n     pre_link_arg: (/* redirected to pre_link_args */) = ((), parse_string_push, [UNTRACKED],\n         \"a single extra argument to prepend the linker invocation (can be used several times)\"),"}, {"sha": "9d79171c4cb98e120f46390d19bdb128cf48bf88", "filename": "src/test/codegen-units/item-collection/static-init.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fstatic-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fstatic-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fstatic-init.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags:-Zprint-mono-items=eager\n+// compile-flags:-Zprint-mono-items=eager -Zpolymorphize=on\n \n #![feature(start)]\n "}, {"sha": "6cf59fdc39694b3488eed5848cc83c90511c5e08", "filename": "src/test/codegen-units/item-collection/trait-method-default-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftrait-method-default-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftrait-method-default-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftrait-method-default-impl.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags:-Zprint-mono-items=eager\n+// compile-flags:-Zprint-mono-items=eager -Zpolymorphize=on\n \n #![deny(dead_code)]\n #![feature(start)]"}, {"sha": "403f68bb170bb34f2fe68ea6f4f43933fabfe195", "filename": "src/test/codegen-units/polymorphization/unused_type_parameters.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fcodegen-units%2Fpolymorphization%2Funused_type_parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fcodegen-units%2Fpolymorphization%2Funused_type_parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpolymorphization%2Funused_type_parameters.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags:-Zprint-mono-items=lazy -Copt-level=1\n+// compile-flags:-Zpolymorphize=on -Zprint-mono-items=lazy -Copt-level=1\n // ignore-tidy-linelength\n \n #![crate_type = \"rlib\"]"}, {"sha": "f5e8deb29fbc85707f73abc59e10b16e8c92157b", "filename": "src/test/ui/issues/issue-74614.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fissues%2Fissue-74614.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fissues%2Fissue-74614.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-74614.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -0,0 +1,17 @@\n+// build-pass\n+\n+fn test<T>() {\n+    std::mem::size_of::<T>();\n+}\n+\n+pub fn foo<T>(_: T) -> &'static fn() {\n+    &(test::<T> as fn())\n+}\n+\n+fn outer<T>() {\n+    foo(|| ());\n+}\n+\n+fn main() {\n+    outer::<u8>();\n+}"}, {"sha": "f20605e1b9a610c02f35838c0764ac58c3e6ffda", "filename": "src/test/ui/polymorphization/const_parameters/closures.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Fclosures.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(const_generics, rustc_attrs)]\n //~^ WARN the feature `const_generics` is incomplete\n "}, {"sha": "266b6e62afd0bf930050b14dd4ac72f5e5763237", "filename": "src/test/ui/polymorphization/const_parameters/closures.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Fclosures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Fclosures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Fclosures.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/closures.rs:2:12\n+  --> $DIR/closures.rs:3:12\n    |\n LL | #![feature(const_generics, rustc_attrs)]\n    |            ^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![feature(const_generics, rustc_attrs)]\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:18:19\n+  --> $DIR/closures.rs:19:19\n    |\n LL | pub fn unused<const T: usize>() -> usize {\n    |                     - generic parameter `T` is unused\n@@ -17,13 +17,13 @@ LL |     let add_one = |x: usize| x + 1;\n    |                   ^^^^^^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:16:8\n+  --> $DIR/closures.rs:17:8\n    |\n LL | pub fn unused<const T: usize>() -> usize {\n    |        ^^^^^^       - generic parameter `T` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:27:19\n+  --> $DIR/closures.rs:28:19\n    |\n LL | pub fn used_parent<const T: usize>() -> usize {\n    |                          - generic parameter `T` is unused\n@@ -32,7 +32,7 @@ LL |     let add_one = |x: usize| x + 1;\n    |                   ^^^^^^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:47:13\n+  --> $DIR/closures.rs:48:13\n    |\n LL | pub fn unused_upvar<const T: usize>() -> usize {\n    |                           - generic parameter `T` is unused"}, {"sha": "04c279de29e6ac5ae9485c40a231d71b003e03ec", "filename": "src/test/ui/polymorphization/const_parameters/functions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Ffunctions.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(const_generics, rustc_attrs)]\n //~^ WARN the feature `const_generics` is incomplete\n "}, {"sha": "e379e32c1fceb11cbc9ef4e4a6e259f5da0b80f2", "filename": "src/test/ui/polymorphization/const_parameters/functions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fconst_parameters%2Ffunctions.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/functions.rs:2:12\n+  --> $DIR/functions.rs:3:12\n    |\n LL | #![feature(const_generics, rustc_attrs)]\n    |            ^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![feature(const_generics, rustc_attrs)]\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: item has unused generic parameters\n-  --> $DIR/functions.rs:14:8\n+  --> $DIR/functions.rs:15:8\n    |\n LL | pub fn unused<const T: usize>() {\n    |        ^^^^^^       - generic parameter `T` is unused"}, {"sha": "2695dc6d4f177229160116266edadc9055bc8988", "filename": "src/test/ui/polymorphization/drop_shims/simple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fdrop_shims%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fdrop_shims%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fdrop_shims%2Fsimple.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // check-pass\n+// compile-flags:-Zpolymorphize=on\n \n pub struct OnDrop<F: Fn()>(pub F);\n "}, {"sha": "c22891171091ab38bb47484d2e3b7be648e92487", "filename": "src/test/ui/polymorphization/drop_shims/transitive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fdrop_shims%2Ftransitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fdrop_shims%2Ftransitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fdrop_shims%2Ftransitive.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // check-pass\n+// compile-flags:-Zpolymorphize=on\n \n pub struct OnDrop<F: Fn()>(pub F);\n "}, {"sha": "9eb34fb73490b8585d9d4c4bf458e61e0b7ae964", "filename": "src/test/ui/polymorphization/generators.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fgenerators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fgenerators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fgenerators.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(const_generics, generators, generator_trait, rustc_attrs)]\n //~^ WARN the feature `const_generics` is incomplete\n "}, {"sha": "c59055ba9d65473ff191d5463825056a64bde007", "filename": "src/test/ui/polymorphization/generators.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fgenerators.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fgenerators.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fgenerators.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/generators.rs:2:12\n+  --> $DIR/generators.rs:3:12\n    |\n LL | #![feature(const_generics, generators, generator_trait, rustc_attrs)]\n    |            ^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![feature(const_generics, generators, generator_trait, rustc_attrs)]\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: item has unused generic parameters\n-  --> $DIR/generators.rs:35:5\n+  --> $DIR/generators.rs:36:5\n    |\n LL |   pub fn unused_type<T>() -> impl Generator<(), Yield = u32, Return = u32> + Unpin {\n    |                      - generic parameter `T` is unused\n@@ -21,13 +21,13 @@ LL | |     }\n    | |_____^\n \n error: item has unused generic parameters\n-  --> $DIR/generators.rs:33:8\n+  --> $DIR/generators.rs:34:8\n    |\n LL | pub fn unused_type<T>() -> impl Generator<(), Yield = u32, Return = u32> + Unpin {\n    |        ^^^^^^^^^^^ - generic parameter `T` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/generators.rs:61:5\n+  --> $DIR/generators.rs:62:5\n    |\n LL |   pub fn unused_const<const T: u32>() -> impl Generator<(), Yield = u32, Return = u32> + Unpin {\n    |                             - generic parameter `T` is unused\n@@ -40,7 +40,7 @@ LL | |     }\n    | |_____^\n \n error: item has unused generic parameters\n-  --> $DIR/generators.rs:59:8\n+  --> $DIR/generators.rs:60:8\n    |\n LL | pub fn unused_const<const T: u32>() -> impl Generator<(), Yield = u32, Return = u32> + Unpin {\n    |        ^^^^^^^^^^^^       - generic parameter `T` is unused"}, {"sha": "f26df45230a5c604a6d6b3894d72ee01ec1eb754", "filename": "src/test/ui/polymorphization/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Flifetimes.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(rustc_attrs)]\n \n // This test checks that the polymorphization analysis doesn't break when the"}, {"sha": "2020256717c4de4763257ab5143c4318896d815e", "filename": "src/test/ui/polymorphization/lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Flifetimes.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,11 +1,11 @@\n error: item has unused generic parameters\n-  --> $DIR/lifetimes.rs:9:8\n+  --> $DIR/lifetimes.rs:10:8\n    |\n LL | pub fn unused<'a, T>(_: &'a u32) {\n    |        ^^^^^^     - generic parameter `T` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/lifetimes.rs:16:19\n+  --> $DIR/lifetimes.rs:17:19\n    |\n LL | pub fn used<'a, T: Default>(_: &'a u32) -> u32 {\n    |                 - generic parameter `T` is unused"}, {"sha": "d732b1071d8a94830543dfde91f7fbbd82932dd2", "filename": "src/test/ui/polymorphization/normalized_sig_types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fnormalized_sig_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fnormalized_sig_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fnormalized_sig_types.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-pass\n+// compile-flags:-Zpolymorphize=on\n \n pub trait ParallelIterator: Sized {\n     fn drive<C: Consumer<()>>(_: C) {"}, {"sha": "82a94933b470eba3ef53e7dcd1ffd0198f9cf945", "filename": "src/test/ui/polymorphization/predicates.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(rustc_attrs)]\n \n // This test checks that `T` is considered used in `foo`, because it is used in a predicate for"}, {"sha": "c23730fc995e7fd5058753aafecb6f408832f8bf", "filename": "src/test/ui/polymorphization/predicates.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,5 +1,5 @@\n error: item has unused generic parameters\n-  --> $DIR/predicates.rs:8:4\n+  --> $DIR/predicates.rs:9:4\n    |\n LL | fn bar<I>() {\n    |    ^^^ - generic parameter `I` is unused"}, {"sha": "07ab1355a47cfe62159c653ae6dcb8d51ef2bd1d", "filename": "src/test/ui/polymorphization/type_parameters/closures.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Fclosures.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(stmt_expr_attributes, rustc_attrs)]\n \n // This test checks that the polymorphization analysis correctly detects unused type"}, {"sha": "417feebbc5557d8d4788b2faf28b3810b15c9da2", "filename": "src/test/ui/polymorphization/type_parameters/closures.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Fclosures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Fclosures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Fclosures.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,5 +1,5 @@\n error: item has unused generic parameters\n-  --> $DIR/closures.rs:18:19\n+  --> $DIR/closures.rs:19:19\n    |\n LL | pub fn unused<T>() -> u32 {\n    |               - generic parameter `T` is unused\n@@ -8,13 +8,13 @@ LL |     let add_one = |x: u32| x + 1;\n    |                   ^^^^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:15:8\n+  --> $DIR/closures.rs:16:8\n    |\n LL | pub fn unused<T>() -> u32 {\n    |        ^^^^^^ - generic parameter `T` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:27:19\n+  --> $DIR/closures.rs:28:19\n    |\n LL | pub fn used_parent<T: Default>() -> u32 {\n    |                    - generic parameter `T` is unused\n@@ -23,7 +23,7 @@ LL |     let add_one = |x: u32| x + 1;\n    |                   ^^^^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:93:23\n+  --> $DIR/closures.rs:94:23\n    |\n LL | impl<F: Default> Foo<F> {\n    |      - generic parameter `F` is unused\n@@ -35,7 +35,7 @@ LL |         let add_one = |x: u32| x + 1;\n    |                       ^^^^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:91:12\n+  --> $DIR/closures.rs:92:12\n    |\n LL | impl<F: Default> Foo<F> {\n    |      - generic parameter `F` is unused\n@@ -44,7 +44,7 @@ LL |     pub fn unused_all<G: Default>() -> u32 {\n    |            ^^^^^^^^^^ - generic parameter `G` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:127:23\n+  --> $DIR/closures.rs:128:23\n    |\n LL |       pub fn used_impl<G: Default>() -> u32 {\n    |                        - generic parameter `G` is unused\n@@ -58,13 +58,13 @@ LL | |         };\n    | |_________^\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:125:12\n+  --> $DIR/closures.rs:126:12\n    |\n LL |     pub fn used_impl<G: Default>() -> u32 {\n    |            ^^^^^^^^^ - generic parameter `G` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:114:23\n+  --> $DIR/closures.rs:115:23\n    |\n LL |   impl<F: Default> Foo<F> {\n    |        - generic parameter `F` is unused\n@@ -78,7 +78,7 @@ LL | |         };\n    | |_________^\n \n error: item has unused generic parameters\n-  --> $DIR/closures.rs:112:12\n+  --> $DIR/closures.rs:113:12\n    |\n LL | impl<F: Default> Foo<F> {\n    |      - generic parameter `F` is unused"}, {"sha": "aad957e1dd36239a903ad59e21659f94a58dff2e", "filename": "src/test/ui/polymorphization/type_parameters/functions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Ffunctions.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(rustc_attrs)]\n \n // This test checks that the polymorphization analysis correctly detects unused type"}, {"sha": "d629ff7bb4d3a2c5eeeeeb8552aa89c0bb264f9f", "filename": "src/test/ui/polymorphization/type_parameters/functions.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Ftype_parameters%2Ffunctions.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,11 +1,11 @@\n error: item has unused generic parameters\n-  --> $DIR/functions.rs:13:8\n+  --> $DIR/functions.rs:14:8\n    |\n LL | pub fn unused<T>() {\n    |        ^^^^^^ - generic parameter `T` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/functions.rs:44:12\n+  --> $DIR/functions.rs:45:12\n    |\n LL | impl<F: Default> Foo<F> {\n    |      - generic parameter `F` is unused\n@@ -14,7 +14,7 @@ LL |     pub fn unused_impl() {\n    |            ^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/functions.rs:50:12\n+  --> $DIR/functions.rs:51:12\n    |\n LL | impl<F: Default> Foo<F> {\n    |      - generic parameter `F` is unused\n@@ -23,7 +23,7 @@ LL |     pub fn unused_both<G: Default>() {\n    |            ^^^^^^^^^^^ - generic parameter `G` is unused\n \n error: item has unused generic parameters\n-  --> $DIR/functions.rs:62:12\n+  --> $DIR/functions.rs:63:12\n    |\n LL | impl<F: Default> Foo<F> {\n    |      - generic parameter `F` is unused"}, {"sha": "b8facc16070102e414954e52cef47e8ceccacab4", "filename": "src/test/ui/polymorphization/unsized_cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.rs?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,4 +1,5 @@\n // build-fail\n+// compile-flags:-Zpolymorphize=on\n #![feature(fn_traits, rustc_attrs, unboxed_closures)]\n \n // This test checks that the polymorphization analysis considers a closure"}, {"sha": "d4727acca9afd9169671d093879b179f101c401a", "filename": "src/test/ui/polymorphization/unsized_cast.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbebe7351fcd29af1eb9a35e315369b15887ea09/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.stderr?ref=bbebe7351fcd29af1eb9a35e315369b15887ea09", "patch": "@@ -1,5 +1,5 @@\n error: item has unused generic parameters\n-  --> $DIR/unsized_cast.rs:10:18\n+  --> $DIR/unsized_cast.rs:11:18\n    |\n LL | fn foo<T: Default>() {\n    |        - generic parameter `T` is unused\n@@ -8,7 +8,7 @@ LL |     (|| Box::new(|| {}) as Box<dyn Fn()>)();\n    |                  ^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/unsized_cast.rs:10:5\n+  --> $DIR/unsized_cast.rs:11:5\n    |\n LL | fn foo<T: Default>() {\n    |        - generic parameter `T` is unused\n@@ -17,7 +17,7 @@ LL |     (|| Box::new(|| {}) as Box<dyn Fn()>)();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/unsized_cast.rs:20:15\n+  --> $DIR/unsized_cast.rs:21:15\n    |\n LL | fn foo2<T: Default>() {\n    |         - generic parameter `T` is unused"}]}