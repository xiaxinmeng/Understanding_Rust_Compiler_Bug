{"sha": "96886cd67f1faa83bfb360c31c6614e1aea46bf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ODg2Y2Q2N2YxZmFhODNiZmIzNjBjMzFjNjYxNGUxYWVhNDZiZjc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T02:37:01Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T02:41:27Z"}, "message": "Fix a typo in the unstable options handling and address fallout", "tree": {"sha": "cf0a7021a1248af3330138b986c51523d93ca3ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf0a7021a1248af3330138b986c51523d93ca3ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96886cd67f1faa83bfb360c31c6614e1aea46bf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96886cd67f1faa83bfb360c31c6614e1aea46bf7", "html_url": "https://github.com/rust-lang/rust/commit/96886cd67f1faa83bfb360c31c6614e1aea46bf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96886cd67f1faa83bfb360c31c6614e1aea46bf7/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5bcb2259aefd3c811a71e68cf2a7cf9d918c0ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5bcb2259aefd3c811a71e68cf2a7cf9d918c0ee", "html_url": "https://github.com/rust-lang/rust/commit/e5bcb2259aefd3c811a71e68cf2a7cf9d918c0ee"}], "stats": {"total": 74, "additions": 39, "deletions": 35}, "files": [{"sha": "1536d8f4a6a297cd5f3a166becfd50bcd39136cf", "filename": "src/config.rs", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -289,7 +289,7 @@ macro_rules! create_config {\n             fn fill_from_parsed_config(mut self, parsed: PartialConfig) -> Config {\n             $(\n                 if let Some(val) = parsed.$i {\n-                    if !self.$i.3 {\n+                    if self.$i.3 {\n                         self.$i.1 = true;\n                         self.$i.2 = val;\n                     } else {\n@@ -669,36 +669,36 @@ mod test {\n         assert_eq!(config.was_set().verbose(), false);\n     }\n \n-    #[test]\n-    fn test_as_not_nightly_channel() {\n-        let mut config = Config::default();\n-        assert_eq!(config.was_set().unstable_features(), false);\n-        config.set().unstable_features(true);\n-        assert_eq!(config.was_set().unstable_features(), false);\n-    }\n-\n-    #[test]\n-    fn test_as_nightly_channel() {\n-        let v = ::std::env::var(\"CFG_RELEASE_CHANNEL\").unwrap_or(String::from(\"\"));\n-        ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", \"nightly\");\n-        let mut config = Config::default();\n-        config.set().unstable_features(true);\n-        assert_eq!(config.was_set().unstable_features(), false);\n-        config.set().unstable_features(true);\n-        assert_eq!(config.unstable_features(), true);\n-        ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", v);\n-    }\n-\n-    #[test]\n-    fn test_unstable_from_toml() {\n-        let mut config = Config::from_toml(\"unstable_features = true\").unwrap();\n-        assert_eq!(config.was_set().unstable_features(), false);\n-        let v = ::std::env::var(\"CFG_RELEASE_CHANNEL\").unwrap_or(String::from(\"\"));\n-        ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", \"nightly\");\n-        config = Config::from_toml(\"unstable_features = true\").unwrap();\n-        assert_eq!(config.was_set().unstable_features(), true);\n-        assert_eq!(config.unstable_features(), true);\n-        ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", v);\n-    }\n-\n+    // FIXME(#2183) these tests cannot be run in parallel because they use env vars\n+    // #[test]\n+    // fn test_as_not_nightly_channel() {\n+    //     let mut config = Config::default();\n+    //     assert_eq!(config.was_set().unstable_features(), false);\n+    //     config.set().unstable_features(true);\n+    //     assert_eq!(config.was_set().unstable_features(), false);\n+    // }\n+\n+    // #[test]\n+    // fn test_as_nightly_channel() {\n+    //     let v = ::std::env::var(\"CFG_RELEASE_CHANNEL\").unwrap_or(String::from(\"\"));\n+    //     ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", \"nightly\");\n+    //     let mut config = Config::default();\n+    //     config.set().unstable_features(true);\n+    //     assert_eq!(config.was_set().unstable_features(), false);\n+    //     config.set().unstable_features(true);\n+    //     assert_eq!(config.unstable_features(), true);\n+    //     ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", v);\n+    // }\n+\n+    // #[test]\n+    // fn test_unstable_from_toml() {\n+    //     let mut config = Config::from_toml(\"unstable_features = true\").unwrap();\n+    //     assert_eq!(config.was_set().unstable_features(), false);\n+    //     let v = ::std::env::var(\"CFG_RELEASE_CHANNEL\").unwrap_or(String::from(\"\"));\n+    //     ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", \"nightly\");\n+    //     config = Config::from_toml(\"unstable_features = true\").unwrap();\n+    //     assert_eq!(config.was_set().unstable_features(), true);\n+    //     assert_eq!(config.unstable_features(), true);\n+    //     ::std::env::set_var(\"CFG_RELEASE_CHANNEL\", v);\n+    // }\n }"}, {"sha": "ca31820723542465dd434eb8388767c606991735", "filename": "tests/config/issue-1124.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5bcb2259aefd3c811a71e68cf2a7cf9d918c0ee/tests%2Fconfig%2Fissue-1124.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e5bcb2259aefd3c811a71e68cf2a7cf9d918c0ee/tests%2Fconfig%2Fissue-1124.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fissue-1124.toml?ref=e5bcb2259aefd3c811a71e68cf2a7cf9d918c0ee", "patch": "@@ -1,2 +0,0 @@\n-reorder_imports = true\n-normalize_comments = true"}, {"sha": "69aa1bb1c5993dab56f5cc1be68adcbcbbd19a07", "filename": "tests/source/issue-1124.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fissue-1124.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fissue-1124.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1124.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,3 +1,6 @@\n+// rustfmt-reorder_imports: true\n+// rustfmt-normalize_comments: true\n+\n use d; use c; use b; use a; \n // The previous line has a space after the `use a;` \n "}, {"sha": "d34870b2a2854266b39432c20e9791daae624f98", "filename": "tests/target/issue-1124.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fissue-1124.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fissue-1124.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1124.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,3 +1,6 @@\n+// rustfmt-reorder_imports: true\n+// rustfmt-normalize_comments: true\n+\n use a;\n use b;\n use c;"}]}