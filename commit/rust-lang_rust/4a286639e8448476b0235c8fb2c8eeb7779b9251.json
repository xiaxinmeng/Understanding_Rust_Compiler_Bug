{"sha": "4a286639e8448476b0235c8fb2c8eeb7779b9251", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhMjg2NjM5ZTg0NDg0NzZiMDIzNWM4ZmIyYzhlZWI3Nzc5YjkyNTE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-16T13:11:34Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-17T06:38:54Z"}, "message": "Move some tests from compile-fail to ui", "tree": {"sha": "847a401037fdfbd355100f141fe8dc5e3f7faf6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/847a401037fdfbd355100f141fe8dc5e3f7faf6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a286639e8448476b0235c8fb2c8eeb7779b9251", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAllsW4EACgkQpp+NIls6\n19lesg//eRE88M9C5v99kN17Y35qQzSIrRTv+fIWBZV0ZQbq33Kxw0Gf7wVgWVm5\nzUMGjNlTJZgBEQZyWCs8eki+qoWmhx04p2EJgd5G8HJ/fwZqgL/zpC8yGYCc1EsT\n01YgKuG3HvXHWOG5YmnnimiPnekKTGcl65sCwmuc5KoL/NslkX2OKmH6msqC1VAH\nZ1SU+fGxeYqXTgBrYX3NNCW6F1ojeFa+uAl8b1t/ItM+fQWQw6GxfzLJsvDJm4FO\n090toGzPa0QoRThNcaPdomdXtET4uDBdAUplLHFNZYjhE+wB7bQmqEBDaE7nhOaQ\n3nI0qT38tmtMGruJjwh5c6J0iWvLaKz6s17e9UAkILjKNh00x+W75EOV/xQsBDwh\nIpSaY5XCIPnoPLLL+rRv5sd1seGTgRS6AdUgurCzWj35n01XB8KLSyA/mRb6jvMQ\nqk+bvTaeeVJ7Hjd9ByGRrVB3E5giD+CgbeLAyl/Rx642CMMrsycC7t0F2y/Jeqgv\nsthZSRXLUbo8LYQe/af/VjXjb6Eh/bUBlTFtgl372QSyDLkHRu8mJYAKjjMacGFw\nwrzWXtnjsF0/tXsgtR04lr4HXTZlCoQ1kuOJLdZ9MvuTz1sfiiqD4bIujttU0l9f\nYCRNGiRzE09qkB1YfCfr9uU+JU4Ynlzj/bz4Q2rawOTyLxQEfsU=\n=8R1k\n-----END PGP SIGNATURE-----", "payload": "tree 847a401037fdfbd355100f141fe8dc5e3f7faf6c\nparent 08652ec95721ea66facfda4626dd1ec543434ade\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1494940294 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1500273534 +0200\n\nMove some tests from compile-fail to ui\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a286639e8448476b0235c8fb2c8eeb7779b9251", "html_url": "https://github.com/rust-lang/rust/commit/4a286639e8448476b0235c8fb2c8eeb7779b9251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a286639e8448476b0235c8fb2c8eeb7779b9251/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08652ec95721ea66facfda4626dd1ec543434ade", "url": "https://api.github.com/repos/rust-lang/rust/commits/08652ec95721ea66facfda4626dd1ec543434ade", "html_url": "https://github.com/rust-lang/rust/commit/08652ec95721ea66facfda4626dd1ec543434ade"}], "stats": {"total": 393, "additions": 364, "deletions": 29}, "files": [{"sha": "db0c19e96f8211a2996bb6df3e21b8e21b52e0db", "filename": "src/test/ui-fulldeps/auxiliary/attr_proc_macro.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fattr_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fattr_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fattr_proc_macro.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+// no-prefer-dynamic\n+#![feature(proc_macro)]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_attribute]\n+pub fn attr_proc_macro(_: TokenStream, input: TokenStream) -> TokenStream {\n+    input\n+}"}, {"sha": "89ac11b309d751bc13d46f10996895ff8abe75da", "filename": "src/test/ui-fulldeps/auxiliary/bang_proc_macro.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fbang_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fbang_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fbang_proc_macro.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+// no-prefer-dynamic\n+#![feature(proc_macro)]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro]\n+pub fn bang_proc_macro(input: TokenStream) -> TokenStream {\n+    input\n+}"}, {"sha": "719fbdb15ef2a7f852a2f9056d7661ea12ade038", "filename": "src/test/ui-fulldeps/auxiliary/derive-clona.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fderive-clona.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fderive-clona.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fderive-clona.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(Clona)]\n+pub fn derive_clonea(input: TokenStream) -> TokenStream {\n+    \"\".parse().unwrap()\n+}"}, {"sha": "64dcf72ba2029b5165dbf06c32f669c2783ba024", "filename": "src/test/ui-fulldeps/auxiliary/derive-foo.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fderive-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fderive-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fderive-foo.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(FooWithLongName)]\n+pub fn derive_foo(input: TokenStream) -> TokenStream {\n+    \"\".parse().unwrap()\n+}"}, {"sha": "dfaa1d7a32e5779ece83982958a052d5475a4c9c", "filename": "src/test/ui-fulldeps/resolve-error.rs", "status": "renamed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fresolve-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fresolve-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fresolve-error.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -35,46 +35,29 @@ macro_rules! attr_proc_mac {\n }\n \n #[derive(FooWithLongNan)]\n-//~^ ERROR cannot find derive macro `FooWithLongNan` in this scope\n-//~^^ HELP did you mean `FooWithLongName`?\n struct Foo;\n \n #[attr_proc_macra]\n-//~^ ERROR cannot find attribute macro `attr_proc_macra` in this scope\n-//~^^ HELP did you mean `attr_proc_macro`?\n struct Bar;\n \n #[FooWithLongNan]\n-//~^ ERROR cannot find attribute macro `FooWithLongNan` in this scope\n struct Asdf;\n \n #[derive(Dlone)]\n-//~^ ERROR cannot find derive macro `Dlone` in this scope\n-//~^^ HELP did you mean `Clone`?\n struct A;\n \n #[derive(Dlona)]\n-//~^ ERROR cannot find derive macro `Dlona` in this scope\n-//~^^ HELP did you mean `Clona`?\n struct B;\n \n #[derive(attr_proc_macra)]\n-//~^ ERROR cannot find derive macro `attr_proc_macra` in this scope\n struct C;\n \n fn main() {\n     FooWithLongNama!();\n-    //~^ ERROR cannot find macro `FooWithLongNama!` in this scope\n-    //~^^ HELP did you mean `FooWithLongNam!`?\n \n     attr_proc_macra!();\n-    //~^ ERROR cannot find macro `attr_proc_macra!` in this scope\n-    //~^^ HELP did you mean `attr_proc_mac!`?\n \n     Dlona!();\n-    //~^ ERROR cannot find macro `Dlona!` in this scope\n \n     bang_proc_macrp!();\n-    //~^ ERROR cannot find macro `bang_proc_macrp!` in this scope\n-    //~^^ HELP did you mean `bang_proc_macro!`?\n }", "previous_filename": "src/test/compile-fail-fulldeps/proc-macro/resolve-error.rs"}, {"sha": "cfc15d69feb6306e4e92e30414c7766f5d03a459", "filename": "src/test/ui-fulldeps/resolve-error.stderr", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fresolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui-fulldeps%2Fresolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fresolve-error.stderr?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,76 @@\n+error: cannot find derive macro `FooWithLongNan` in this scope\n+  --> $DIR/resolve-error.rs:36:10\n+   |\n+36 | #[derive(FooWithLongNan)]\n+   |          ^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `FooWithLongName`?\n+\n+error: cannot find attribute macro `attr_proc_macra` in this scope\n+  --> $DIR/resolve-error.rs:39:3\n+   |\n+39 | #[attr_proc_macra]\n+   |   ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `attr_proc_macro`?\n+\n+error: cannot find attribute macro `FooWithLongNan` in this scope\n+  --> $DIR/resolve-error.rs:42:3\n+   |\n+42 | #[FooWithLongNan]\n+   |   ^^^^^^^^^^^^^^\n+\n+error: cannot find derive macro `Dlone` in this scope\n+  --> $DIR/resolve-error.rs:45:10\n+   |\n+45 | #[derive(Dlone)]\n+   |          ^^^^^\n+   |\n+   = help: did you mean `Clone`?\n+\n+error: cannot find derive macro `Dlona` in this scope\n+  --> $DIR/resolve-error.rs:48:10\n+   |\n+48 | #[derive(Dlona)]\n+   |          ^^^^^\n+   |\n+   = help: did you mean `Clona`?\n+\n+error: cannot find derive macro `attr_proc_macra` in this scope\n+  --> $DIR/resolve-error.rs:51:10\n+   |\n+51 | #[derive(attr_proc_macra)]\n+   |          ^^^^^^^^^^^^^^^\n+\n+error: cannot find macro `FooWithLongNama!` in this scope\n+  --> $DIR/resolve-error.rs:55:5\n+   |\n+55 |     FooWithLongNama!();\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `FooWithLongNam!`?\n+\n+error: cannot find macro `attr_proc_macra!` in this scope\n+  --> $DIR/resolve-error.rs:57:5\n+   |\n+57 |     attr_proc_macra!();\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `attr_proc_mac!`?\n+\n+error: cannot find macro `Dlona!` in this scope\n+  --> $DIR/resolve-error.rs:59:5\n+   |\n+59 |     Dlona!();\n+   |     ^^^^^\n+\n+error: cannot find macro `bang_proc_macrp!` in this scope\n+  --> $DIR/resolve-error.rs:61:5\n+   |\n+61 |     bang_proc_macrp!();\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `bang_proc_macro!`?\n+\n+error: aborting due to 10 previous errors\n+"}, {"sha": "c79345479827537127380be2c0f0a22e8e24d9c3", "filename": "src/test/ui/cast-to-unsized-trait-object-suggestion.rs", "status": "renamed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fcast-to-unsized-trait-object-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fcast-to-unsized-trait-object-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast-to-unsized-trait-object-suggestion.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -10,11 +10,5 @@\n \n fn main() {\n     &1 as Send;\n-    //~^ ERROR cast to unsized type\n-    //~| HELP try casting to a reference instead:\n-    //~| SUGGESTION &1 as &Send;\n     Box::new(1) as Send;\n-    //~^ ERROR cast to unsized type\n-    //~| HELP try casting to a `Box` instead:\n-    //~| SUGGESTION Box::new(1) as Box<Send>;\n }", "previous_filename": "src/test/compile-fail/cast-to-unsized-trait-object-suggestion.rs"}, {"sha": "dd9c2d14ef24ea1a2d1fcef98e84aca6bb244952", "filename": "src/test/ui/cast-to-unsized-trait-object-suggestion.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fcast-to-unsized-trait-object-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fcast-to-unsized-trait-object-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast-to-unsized-trait-object-suggestion.stderr?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,18 @@\n+error: cast to unsized type: `&{integer}` as `std::marker::Send`\n+  --> $DIR/cast-to-unsized-trait-object-suggestion.rs:12:5\n+   |\n+12 |     &1 as Send;\n+   |     ^^^^^^----\n+   |           |\n+   |           help: try casting to a reference instead: `&Send`\n+\n+error: cast to unsized type: `std::boxed::Box<{integer}>` as `std::marker::Send`\n+  --> $DIR/cast-to-unsized-trait-object-suggestion.rs:13:5\n+   |\n+13 |     Box::new(1) as Send;\n+   |     ^^^^^^^^^^^^^^^----\n+   |                    |\n+   |                    help: try casting to a `Box` instead: `Box<Send>`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "001c1f2eddca1e3ccbeabaf58450b6296547847c", "filename": "src/test/ui/issue-35675.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fissue-35675.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fissue-35675.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-35675.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "previous_filename": "src/test/compile-fail/issue-35675.rs"}, {"sha": "22322a388c5f2678ac5598f17e5bad430b77f689", "filename": "src/test/ui/issue-35675.stderr", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fissue-35675.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fissue-35675.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-35675.stderr?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,74 @@\n+error[E0412]: cannot find type `Apple` in this scope\n+  --> $DIR/issue-35675.rs:20:29\n+   |\n+20 | fn should_return_fruit() -> Apple {\n+   |                             ^^^^^ not found in this scope\n+   |\n+help: there is an enum variant `Fruit::Apple`, did you mean to use `Fruit`?\n+  --> $DIR/issue-35675.rs:14:5\n+   |\n+14 |     Apple(i64),\n+   |     ^^^^^^^^^^\n+\n+error[E0425]: cannot find function `Apple` in this scope\n+  --> $DIR/issue-35675.rs:23:5\n+   |\n+23 |     Apple(5)\n+   |     ^^^^^ not found in this scope\n+   |\n+help: possible candidate is found in another module, you can import it into scope\n+   | use Fruit::Apple;\n+\n+error[E0573]: expected type, found variant `Fruit::Apple`\n+  --> $DIR/issue-35675.rs:28:33\n+   |\n+28 | fn should_return_fruit_too() -> Fruit::Apple {\n+   |                                 ^^^^^^^^^^^^ not a type\n+   |\n+help: there is an enum variant `Fruit::Apple`, did you mean to use `Fruit`?\n+  --> $DIR/issue-35675.rs:14:5\n+   |\n+14 |     Apple(i64),\n+   |     ^^^^^^^^^^\n+\n+error[E0425]: cannot find function `Apple` in this scope\n+  --> $DIR/issue-35675.rs:31:5\n+   |\n+31 |     Apple(5)\n+   |     ^^^^^ not found in this scope\n+   |\n+help: possible candidate is found in another module, you can import it into scope\n+   | use Fruit::Apple;\n+\n+error[E0573]: expected type, found variant `Ok`\n+  --> $DIR/issue-35675.rs:36:13\n+   |\n+36 | fn foo() -> Ok {\n+   |             ^^ not a type\n+   |\n+   = help: there is an enum variant `std::prelude::v1::Ok`, did you mean to use `std::prelude::v1`?\n+   = help: there is an enum variant `std::prelude::v1::Result::Ok`, did you mean to use `std::prelude::v1::Result`?\n+\n+error[E0412]: cannot find type `Variant3` in this scope\n+  --> $DIR/issue-35675.rs:44:13\n+   |\n+44 | fn bar() -> Variant3 {\n+   |             ^^^^^^^^ not found in this scope\n+   |\n+help: there is an enum variant `x::Enum::Variant3`, did you mean to use `x::Enum`?\n+  --> $DIR/issue-35675.rs:63:9\n+   |\n+63 |         Variant3(usize),\n+   |         ^^^^^^^^^^^^^^^\n+\n+error[E0573]: expected type, found variant `Some`\n+  --> $DIR/issue-35675.rs:49:13\n+   |\n+49 | fn qux() -> Some {\n+   |             ^^^^ not a type\n+   |\n+   = help: there is an enum variant `std::option::Option::Some`, did you mean to use `std::option::Option`?\n+   = help: there is an enum variant `std::prelude::v1::Some`, did you mean to use `std::prelude::v1`?\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "ec8d27f9138f7dcfccf8c580cc7d85f93a0f45f3", "filename": "src/test/ui/macros/macro-name-typo.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -10,6 +10,4 @@\n \n fn main() {\n     printlx!(\"oh noes!\");\n-    //~^ ERROR cannot find macro\n-    //~^^ HELP did you mean `println!`?\n }", "previous_filename": "src/test/compile-fail/macro-name-typo.rs"}, {"sha": "c54de468d133fb504ff033194feca25f13c0d1fa", "filename": "src/test/ui/macros/macro-name-typo.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,10 @@\n+error: cannot find macro `printlx!` in this scope\n+  --> $DIR/macro-name-typo.rs:12:5\n+   |\n+12 |     printlx!(\"oh noes!\");\n+   |     ^^^^^^^\n+   |\n+   = help: did you mean `println!`?\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "db93ba5e2c41dd3f2e3a304c1837230b885622a1", "filename": "src/test/ui/macros/macro_undefined.rs", "status": "renamed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro_undefined.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro_undefined.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro_undefined.rs?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -19,9 +19,5 @@ mod m {\n \n fn main() {\n     k!();\n-    //~^ ERROR cannot find macro `k!` in this scope\n-    //~^^ HELP did you mean `kl!`?\n     kl!();\n-    //~^ ERROR cannot find macro `kl!` in this scope\n-    //~^^ HELP have you added the `#[macro_use]` on the module/import?\n }", "previous_filename": "src/test/compile-fail/macro_undefined.rs"}, {"sha": "152de056991c8d9cfb9753e0066a03d552563e6f", "filename": "src/test/ui/macros/macro_undefined.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro_undefined.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fmacros%2Fmacro_undefined.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro_undefined.stderr?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,18 @@\n+error: cannot find macro `kl!` in this scope\n+  --> $DIR/macro_undefined.rs:22:5\n+   |\n+22 |     kl!();\n+   |     ^^\n+   |\n+   = help: have you added the `#[macro_use]` on the module/import?\n+\n+error: cannot find macro `k!` in this scope\n+  --> $DIR/macro_undefined.rs:21:5\n+   |\n+21 |     k!();\n+   |     ^\n+   |\n+   = help: did you mean `kl!`?\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "946eaba45fc138d17e694d60dad6ce9b7c21b5e2", "filename": "src/test/ui/resolve-error.stderr", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fresolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a286639e8448476b0235c8fb2c8eeb7779b9251/src%2Ftest%2Fui%2Fresolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve-error.stderr?ref=4a286639e8448476b0235c8fb2c8eeb7779b9251", "patch": "@@ -0,0 +1,76 @@\n+error: cannot find derive macro `FooWithLongNan` in this scope\n+  --> $DIR/resolve-error.rs:37:10\n+   |\n+37 | #[derive(FooWithLongNan)]\n+   |          ^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `FooWithLongName`?\n+\n+error: cannot find attribute macro `attr_proc_macra` in this scope\n+  --> $DIR/resolve-error.rs:40:3\n+   |\n+40 | #[attr_proc_macra]\n+   |   ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `attr_proc_macro`?\n+\n+error: cannot find attribute macro `FooWithLongNan` in this scope\n+  --> $DIR/resolve-error.rs:43:3\n+   |\n+43 | #[FooWithLongNan]\n+   |   ^^^^^^^^^^^^^^\n+\n+error: cannot find derive macro `Dlone` in this scope\n+  --> $DIR/resolve-error.rs:46:10\n+   |\n+46 | #[derive(Dlone)]\n+   |          ^^^^^\n+   |\n+   = help: did you mean `Clone`?\n+\n+error: cannot find derive macro `Dlona` in this scope\n+  --> $DIR/resolve-error.rs:49:10\n+   |\n+49 | #[derive(Dlona)]\n+   |          ^^^^^\n+   |\n+   = help: did you mean `Clona`?\n+\n+error: cannot find derive macro `attr_proc_macra` in this scope\n+  --> $DIR/resolve-error.rs:52:10\n+   |\n+52 | #[derive(attr_proc_macra)]\n+   |          ^^^^^^^^^^^^^^^\n+\n+error: cannot find macro `FooWithLongNama!` in this scope\n+  --> $DIR/resolve-error.rs:56:5\n+   |\n+56 |     FooWithLongNama!();\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `FooWithLongNam!`?\n+\n+error: cannot find macro `attr_proc_macra!` in this scope\n+  --> $DIR/resolve-error.rs:58:5\n+   |\n+58 |     attr_proc_macra!();\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `attr_proc_mac!`?\n+\n+error: cannot find macro `Dlona!` in this scope\n+  --> $DIR/resolve-error.rs:60:5\n+   |\n+60 |     Dlona!();\n+   |     ^^^^^\n+\n+error: cannot find macro `bang_proc_macrp!` in this scope\n+  --> $DIR/resolve-error.rs:62:5\n+   |\n+62 |     bang_proc_macrp!();\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: did you mean `bang_proc_macro!`?\n+\n+error: aborting due to previous error(s)\n+"}]}