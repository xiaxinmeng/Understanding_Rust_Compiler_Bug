{"sha": "645b1575641209b63d55ff711f83193465f8e082", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NWIxNTc1NjQxMjA5YjYzZDU1ZmY3MTFmODMxOTM0NjVmOGUwODI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-01T03:17:50Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-07T15:13:06Z"}, "message": "core: Inherit the ptr module", "tree": {"sha": "fa58d6ce23fd3f44d16329fb061cac6511d5059e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa58d6ce23fd3f44d16329fb061cac6511d5059e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/645b1575641209b63d55ff711f83193465f8e082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/645b1575641209b63d55ff711f83193465f8e082", "html_url": "https://github.com/rust-lang/rust/commit/645b1575641209b63d55ff711f83193465f8e082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/645b1575641209b63d55ff711f83193465f8e082/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dca8a0d6e4d1848ead898b3fa5b1e6c940c85b87", "url": "https://api.github.com/repos/rust-lang/rust/commits/dca8a0d6e4d1848ead898b3fa5b1e6c940c85b87", "html_url": "https://github.com/rust-lang/rust/commit/dca8a0d6e4d1848ead898b3fa5b1e6c940c85b87"}], "stats": {"total": 56, "additions": 11, "deletions": 45}, "files": [{"sha": "bbbadad6e36873fe2cfca719f33bcb8a766230ac", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/645b1575641209b63d55ff711f83193465f8e082/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/645b1575641209b63d55ff711f83193465f8e082/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=645b1575641209b63d55ff711f83193465f8e082", "patch": "@@ -25,3 +25,4 @@\n \n pub mod intrinsics;\n pub mod mem;\n+pub mod ptr;"}, {"sha": "9ac9e62b50dc844120586a8c6be5ff4e69ac32c3", "filename": "src/libcore/ptr.rs", "status": "renamed", "additions": 8, "deletions": 44, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/645b1575641209b63d55ff711f83193465f8e082/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/645b1575641209b63d55ff711f83193465f8e082/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=645b1575641209b63d55ff711f83193465f8e082", "patch": "@@ -92,14 +92,12 @@\n \n use cast;\n use clone::Clone;\n-#[cfg(not(test))]\n-use cmp::Equiv;\n+use intrinsics;\n use iter::{range, Iterator};\n use mem;\n-use option::{Option, Some, None};\n-use intrinsics;\n+use option::{Some, None, Option};\n \n-#[cfg(not(test))] use cmp::{Eq, TotalEq, Ord};\n+#[cfg(not(test))] use cmp::{Eq, TotalEq, Ord, Equiv};\n \n /// Return the offset of the first null pointer in `buf`.\n #[inline]\n@@ -377,7 +375,9 @@ impl<T> RawPtr<T> for *mut T {\n     fn to_uint(&self) -> uint { *self as uint }\n \n     #[inline]\n-    unsafe fn offset(self, count: int) -> *mut T { intrinsics::offset(self as *T, count) as *mut T }\n+    unsafe fn offset(self, count: int) -> *mut T {\n+        intrinsics::offset(self as *T, count) as *mut T\n+    }\n \n     #[inline]\n     unsafe fn to_option(&self) -> Option<&T> {\n@@ -444,10 +444,6 @@ mod externfnpointers {\n             let other_: *() = unsafe { cast::transmute(*other) };\n             self_ == other_\n         }\n-        #[inline]\n-        fn ne(&self, other: &extern \"C\" fn() -> _R) -> bool {\n-            !self.eq(other)\n-        }\n     }\n     macro_rules! fnptreq(\n         ($($p:ident),*) => {\n@@ -458,10 +454,6 @@ mod externfnpointers {\n                     let other_: *() = unsafe { cast::transmute(*other) };\n                     self_ == other_\n                 }\n-                #[inline]\n-                fn ne(&self, other: &extern \"C\" fn($($p),*) -> _R) -> bool {\n-                    !self.eq(other)\n-                }\n             }\n         }\n     )\n@@ -476,41 +468,13 @@ mod externfnpointers {\n #[cfg(not(test))]\n impl<T> Ord for *T {\n     #[inline]\n-    fn lt(&self, other: &*T) -> bool {\n-        *self < *other\n-    }\n-    #[inline]\n-    fn le(&self, other: &*T) -> bool {\n-        *self <= *other\n-    }\n-    #[inline]\n-    fn ge(&self, other: &*T) -> bool {\n-        *self >= *other\n-    }\n-    #[inline]\n-    fn gt(&self, other: &*T) -> bool {\n-        *self > *other\n-    }\n+    fn lt(&self, other: &*T) -> bool { *self < *other }\n }\n \n #[cfg(not(test))]\n impl<T> Ord for *mut T {\n     #[inline]\n-    fn lt(&self, other: &*mut T) -> bool {\n-        *self < *other\n-    }\n-    #[inline]\n-    fn le(&self, other: &*mut T) -> bool {\n-        *self <= *other\n-    }\n-    #[inline]\n-    fn ge(&self, other: &*mut T) -> bool {\n-        *self >= *other\n-    }\n-    #[inline]\n-    fn gt(&self, other: &*mut T) -> bool {\n-        *self > *other\n-    }\n+    fn lt(&self, other: &*mut T) -> bool { *self < *other }\n }\n \n #[cfg(test)]", "previous_filename": "src/libstd/ptr.rs"}, {"sha": "1405d201a52da835d6e5d925688314a9e9170154", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/645b1575641209b63d55ff711f83193465f8e082/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/645b1575641209b63d55ff711f83193465f8e082/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=645b1575641209b63d55ff711f83193465f8e082", "patch": "@@ -135,6 +135,7 @@ extern crate core;\n \n pub use core::intrinsics;\n pub use core::mem;\n+pub use core::ptr;\n \n // Run tests with libgreen instead of libnative.\n //\n@@ -191,7 +192,7 @@ pub mod strbuf;\n \n pub mod ascii;\n \n-pub mod ptr;\n+pub mod owned;\n mod managed;\n mod reference;\n pub mod rc;"}]}