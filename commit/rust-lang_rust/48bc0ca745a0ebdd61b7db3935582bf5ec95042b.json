{"sha": "48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YmMwY2E3NDVhMGViZGQ2MWI3ZGIzOTM1NTgyYmY1ZWM5NTA0MmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-05T12:46:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-06T07:57:50Z"}, "message": "Make control token modifier less ambiguous\n\nIn textmate, keyword.control is used for all kinds of things; in fact,\nthe default scope mapping for keyword is keyword.control!\n\nSo let's add a less ambiguous controlFlow modifier\n\nSee Microsoft/vscode#94367", "tree": {"sha": "2a9f6b1f5a9995c3bddf7a1ef829cb6890413b7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a9f6b1f5a9995c3bddf7a1ef829cb6890413b7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "html_url": "https://github.com/rust-lang/rust/commit/48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6207ac90da7e607218457bf872fa32df6b78f224", "url": "https://api.github.com/repos/rust-lang/rust/commits/6207ac90da7e607218457bf872fa32df6b78f224", "html_url": "https://github.com/rust-lang/rust/commit/6207ac90da7e607218457bf872fa32df6b78f224"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "d833a816b127d68cc3198252d343e3fc982c1513", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "patch": "@@ -232,7 +232,7 @@ fn highlight_element(\n                 | T![loop]\n                 | T![match]\n                 | T![return]\n-                | T![while] => h | HighlightModifier::Control,\n+                | T![while] => h | HighlightModifier::ControlFlow,\n                 T![unsafe] => h | HighlightModifier::Unsafe,\n                 _ => h,\n             }"}, {"sha": "e8b138e1a7a638a5d357787b6d082a5327d8e97f", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "patch": "@@ -44,7 +44,7 @@ pub enum HighlightTag {\n #[repr(u8)]\n pub enum HighlightModifier {\n     /// Used with keywords like `if` and `break`.\n-    Control = 0,\n+    ControlFlow = 0,\n     /// `foo` in `fn foo(x: i32)` is a definition, `foo` in `foo(90 + 2)` is\n     /// not.\n     Definition,\n@@ -91,15 +91,15 @@ impl fmt::Display for HighlightTag {\n \n impl HighlightModifier {\n     const ALL: &'static [HighlightModifier] = &[\n-        HighlightModifier::Control,\n+        HighlightModifier::ControlFlow,\n         HighlightModifier::Definition,\n         HighlightModifier::Mutable,\n         HighlightModifier::Unsafe,\n     ];\n \n     fn as_str(self) -> &'static str {\n         match self {\n-            HighlightModifier::Control => \"control\",\n+            HighlightModifier::ControlFlow => \"control\",\n             HighlightModifier::Definition => \"declaration\",\n             HighlightModifier::Mutable => \"mutable\",\n             HighlightModifier::Unsafe => \"unsafe\","}, {"sha": "b2b1cb625885c038fc859f9c2a300d3aa0478a58", "filename": "crates/rust-analyzer/src/conv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconv.rs?ref=48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "patch": "@@ -20,7 +20,7 @@ use ra_vfs::LineEndings;\n \n use crate::{\n     req,\n-    semantic_tokens::{self, ModifierSet, CONSTANT, CONTROL, MUTABLE, UNSAFE},\n+    semantic_tokens::{self, ModifierSet, CONSTANT, CONTROL_FLOW, MUTABLE, UNSAFE},\n     world::WorldSnapshot,\n     Result,\n };\n@@ -378,7 +378,7 @@ impl Conv for Highlight {\n         for modifier in self.modifiers.iter() {\n             let modifier = match modifier {\n                 HighlightModifier::Definition => SemanticTokenModifier::DECLARATION,\n-                HighlightModifier::Control => CONTROL,\n+                HighlightModifier::ControlFlow => CONTROL_FLOW,\n                 HighlightModifier::Mutable => MUTABLE,\n                 HighlightModifier::Unsafe => UNSAFE,\n             };"}, {"sha": "865fa3b1c56b874a3e16ad32013c94d64af892e8", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "patch": "@@ -12,7 +12,7 @@ pub(crate) const TYPE_ALIAS: SemanticTokenType = SemanticTokenType::new(\"typeAli\n pub(crate) const UNION: SemanticTokenType = SemanticTokenType::new(\"union\");\n \n pub(crate) const CONSTANT: SemanticTokenModifier = SemanticTokenModifier::new(\"constant\");\n-pub(crate) const CONTROL: SemanticTokenModifier = SemanticTokenModifier::new(\"control\");\n+pub(crate) const CONTROL_FLOW: SemanticTokenModifier = SemanticTokenModifier::new(\"controlFlow\");\n pub(crate) const MUTABLE: SemanticTokenModifier = SemanticTokenModifier::new(\"mutable\");\n pub(crate) const UNSAFE: SemanticTokenModifier = SemanticTokenModifier::new(\"unsafe\");\n \n@@ -56,7 +56,7 @@ pub(crate) const SUPPORTED_MODIFIERS: &[SemanticTokenModifier] = &[\n     CONSTANT,\n     MUTABLE,\n     UNSAFE,\n-    CONTROL,\n+    CONTROL_FLOW,\n ];\n \n #[derive(Default)]"}, {"sha": "8ca8c76cce4aad215fbbee5b9b2037b227be49a7", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/48bc0ca745a0ebdd61b7db3935582bf5ec95042b/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=48bc0ca745a0ebdd61b7db3935582bf5ec95042b", "patch": "@@ -512,7 +512,7 @@\n                 \"description\": \"Style for compile-time constants\"\n             },\n             {\n-                \"id\": \"control\",\n+                \"id\": \"controlFlow\",\n                 \"description\": \"Style for control flow keywords\"\n             },\n             {\n@@ -546,9 +546,6 @@\n                     \"keyword.unsafe\": [\n                         \"keyword.other.unsafe\"\n                     ],\n-                    \"keyword.control\": [\n-                        \"keyword.control\"\n-                    ],\n                     \"variable.constant\": [\n                         \"entity.name.constant\"\n                     ]"}]}