{"sha": "9ff50d7e839c635632021d47e2dd3982916e4738", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZjUwZDdlODM5YzYzNTYzMjAyMWQ0N2UyZGQzOTgyOTE2ZTQ3Mzg=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-21T15:41:07Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-21T15:41:07Z"}, "message": "Move test to hir_ty", "tree": {"sha": "862b770aa370865929e2a2fc240cf633475dc9c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/862b770aa370865929e2a2fc240cf633475dc9c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ff50d7e839c635632021d47e2dd3982916e4738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff50d7e839c635632021d47e2dd3982916e4738", "html_url": "https://github.com/rust-lang/rust/commit/9ff50d7e839c635632021d47e2dd3982916e4738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ff50d7e839c635632021d47e2dd3982916e4738/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d6606895cf15998a71a23c6d5e78dc955153b4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d6606895cf15998a71a23c6d5e78dc955153b4e", "html_url": "https://github.com/rust-lang/rust/commit/6d6606895cf15998a71a23c6d5e78dc955153b4e"}], "stats": {"total": 61, "additions": 31, "deletions": 30}, "files": [{"sha": "a02e3ee0514a8fcbb8d9f795b164f55e042b9a00", "filename": "crates/ra_hir_ty/src/tests/regression.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9ff50d7e839c635632021d47e2dd3982916e4738/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff50d7e839c635632021d47e2dd3982916e4738/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=9ff50d7e839c635632021d47e2dd3982916e4738", "patch": "@@ -453,3 +453,34 @@ pub mod str {\n     // should be Option<char>, but currently not because of Chalk ambiguity problem\n     assert_eq!(\"(Option<{unknown}>, Option<{unknown}>)\", super::type_at_pos(&db, pos));\n }\n+\n+#[test]\n+fn issue_3642_bad_macro_stackover() {\n+    let (db, pos) = TestDB::with_position(\n+        r#\"\n+//- /main.rs\n+#[macro_export]\n+macro_rules! match_ast {\n+    (match $node:ident { $($tt:tt)* }) => { match_ast!(match ($node) { $($tt)* }) };\n+\n+    (match ($node:expr) {\n+        $( ast::$ast:ident($it:ident) => $res:expr, )*\n+        _ => $catch_all:expr $(,)?\n+    }) => {{\n+        $( if let Some($it) = ast::$ast::cast($node.clone()) { $res } else )*\n+        { $catch_all }\n+    }};\n+}\n+\n+fn main() {\n+    let anchor<|> = match_ast! {\n+        match parent {\n+            as => {},\n+            _ => return None\n+        }\n+    };\n+}\"#,\n+    );\n+\n+    assert_eq!(\"()\", super::type_at_pos(&db, pos));\n+}"}, {"sha": "a10e642dbac34190b0118167b1b98699d0b6c8d6", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9ff50d7e839c635632021d47e2dd3982916e4738/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff50d7e839c635632021d47e2dd3982916e4738/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=9ff50d7e839c635632021d47e2dd3982916e4738", "patch": "@@ -715,34 +715,4 @@ fn main() {\n             check_struct_shorthand_initialization,\n         );\n     }\n-\n-    #[test]\n-    fn test_bad_macro_stackover() {\n-        check_no_diagnostic(\n-            r#\"\n-                //- /main.rs\n-    #[macro_export]\n-    macro_rules! match_ast {\n-        (match $node:ident { $($tt:tt)* }) => { match_ast!(match ($node) { $($tt)* }) };\n-\n-        (match ($node:expr) {\n-            $( ast::$ast:ident($it:ident) => $res:expr, )*\n-            _ => $catch_all:expr $(,)?\n-        }) => {{\n-            $( if let Some($it) = ast::$ast::cast($node.clone()) { $res } else )*\n-            { $catch_all }\n-        }};\n-    }\n-\n-    fn main() {\n-        let anchor = match_ast! {\n-            match parent {\n-                as => {},\n-                _ => return None\n-            }\n-        };\n-    }\n-            \"#,\n-        );\n-    }\n }"}]}