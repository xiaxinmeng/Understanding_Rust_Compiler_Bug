{"sha": "71188ea2dfd025a9cbb2476d06881c9f70ce0ec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMTg4ZWEyZGZkMDI1YTljYmIyNDc2ZDA2ODgxYzlmNzBjZTBlYzg=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-11T19:10:25Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-11T19:10:25Z"}, "message": "Remove inception test for now.", "tree": {"sha": "1c485f9e9fabf5ac22af20c8102f77d7732c6d71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c485f9e9fabf5ac22af20c8102f77d7732c6d71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8", "html_url": "https://github.com/rust-lang/rust/commit/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "947e9a5c31fe8884e570849f42df6e9390e2649d", "url": "https://api.github.com/repos/rust-lang/rust/commits/947e9a5c31fe8884e570849f42df6e9390e2649d", "html_url": "https://github.com/rust-lang/rust/commit/947e9a5c31fe8884e570849f42df6e9390e2649d"}], "stats": {"total": 56, "additions": 1, "deletions": 55}, "files": [{"sha": "f14eb39439ef669e136ffd837db8946a9552c9b7", "filename": "src/bin/miri.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=71188ea2dfd025a9cbb2476d06881c9f70ce0ec8", "patch": "@@ -1,5 +1,4 @@\n-#![feature(rustc_private, custom_attribute)]\n-#![allow(unused_attributes)]\n+#![feature(rustc_private)]\n \n extern crate getopts;\n extern crate miri;\n@@ -114,14 +113,12 @@ fn report(tcx: TyCtxt, ecx: &EvalContext, e: EvalError) {\n     err.emit();\n }\n \n-#[miri_run]\n fn main() {\n     init_logger();\n     let args: Vec<String> = std::env::args().collect();\n     rustc_driver::run_compiler(&args, &mut MiriCompilerCalls);\n }\n \n-#[miri_run]\n fn init_logger() {\n     const NSPACES: usize = 40;\n     let format = |record: &log::LogRecord| {"}, {"sha": "2fc1e615cff1965d9fd16b9f93234878c1ea2268", "filename": "tests/compiletest.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71188ea2dfd025a9cbb2476d06881c9f70ce0ec8/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=71188ea2dfd025a9cbb2476d06881c9f70ce0ec8", "patch": "@@ -27,5 +27,4 @@ fn run_mode(mode: &'static str) {\n fn compile_test() {\n     run_mode(\"compile-fail\");\n     run_mode(\"run-pass\");\n-    run_mode(\"run-fail\");\n }"}, {"sha": "f0fb4113f1f76debdd50bb533ec848af17ea4b69", "filename": "tests/run-fail/inception.rs", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/947e9a5c31fe8884e570849f42df6e9390e2649d/tests%2Frun-fail%2Finception.rs", "raw_url": "https://github.com/rust-lang/rust/raw/947e9a5c31fe8884e570849f42df6e9390e2649d/tests%2Frun-fail%2Finception.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-fail%2Finception.rs?ref=947e9a5c31fe8884e570849f42df6e9390e2649d", "patch": "@@ -1,50 +0,0 @@\n-// error-pattern:no mir for DefId\n-\n-use std::env;\n-use std::process::{Command, Output};\n-\n-fn run_miri(file: &str, sysroot: &str) -> Output {\n-    let path = env::current_dir().unwrap();\n-    let libpath = path.join(\"target\").join(\"debug\");\n-    let libpath = libpath.to_str().unwrap();\n-    let libpath2 = path.join(\"target\").join(\"debug\").join(\"deps\");\n-    let libpath2 = libpath2.to_str().unwrap();\n-    let mut args = vec![\n-        \"run\".to_string(), \"--\".to_string(),\n-        \"--sysroot\".to_string(), sysroot.to_string(),\n-        \"-L\".to_string(), libpath.to_string(),\n-        \"-L\".to_string(), libpath2.to_string(),\n-        file.to_string()\n-    ];\n-    for file in std::fs::read_dir(\"target/debug/deps\").unwrap() {\n-        let file = file.unwrap();\n-        if file.file_type().unwrap().is_file() {\n-            let path = file.path();\n-            if let Some(ext) = path.extension() {\n-                if ext == \"rlib\" {\n-                    let name = path.file_stem().unwrap().to_str().unwrap();\n-                    if let Some(dash) = name.rfind('-') {\n-                        if name.starts_with(\"lib\") {\n-                            args.push(\"--extern\".to_string());\n-                            args.push(format!(\"{}={}\", &name[3..dash], path.to_str().unwrap()));\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-    }\n-    Command::new(\"cargo\")\n-        .args(&args)\n-        .output()\n-        .unwrap_or_else(|e| panic!(\"failed to execute process: {}\", e))\n-}\n-\n-fn main() {\n-    let sysroot = env::var(\"RUST_SYSROOT\").expect(\"env variable `RUST_SYSROOT` not set\");\n-    let test_run = run_miri(\"src/bin/miri.rs\", &sysroot);\n-\n-    if test_run.status.code().unwrap_or(-1) != 0 {\n-        println!(\"{}\", String::from_utf8(test_run.stdout).unwrap());\n-        panic!(\"{}\", String::from_utf8(test_run.stderr).unwrap());\n-    }\n-}"}]}