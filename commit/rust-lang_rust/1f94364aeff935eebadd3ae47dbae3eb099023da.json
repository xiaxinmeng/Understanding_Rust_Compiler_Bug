{"sha": "1f94364aeff935eebadd3ae47dbae3eb099023da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmOTQzNjRhZWZmOTM1ZWViYWRkM2FlNDdkYmFlM2ViMDk5MDIzZGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-16T01:56:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-16T01:56:39Z"}, "message": "core::rt: Clean up some more hacks", "tree": {"sha": "7251360207fa0d060ed033ee2c62d5c36077f4d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7251360207fa0d060ed033ee2c62d5c36077f4d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f94364aeff935eebadd3ae47dbae3eb099023da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f94364aeff935eebadd3ae47dbae3eb099023da", "html_url": "https://github.com/rust-lang/rust/commit/1f94364aeff935eebadd3ae47dbae3eb099023da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f94364aeff935eebadd3ae47dbae3eb099023da/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed74ac169e3e79ff4ce59329a06223e23f2b99b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed74ac169e3e79ff4ce59329a06223e23f2b99b6", "html_url": "https://github.com/rust-lang/rust/commit/ed74ac169e3e79ff4ce59329a06223e23f2b99b6"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "08c52d8e8d4e4a90f8723d328863b49568b0ad00", "filename": "src/libcore/rt/sched/mod.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1f94364aeff935eebadd3ae47dbae3eb099023da/src%2Flibcore%2Frt%2Fsched%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f94364aeff935eebadd3ae47dbae3eb099023da/src%2Flibcore%2Frt%2Fsched%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fsched%2Fmod.rs?ref=1f94364aeff935eebadd3ae47dbae3eb099023da", "patch": "@@ -46,17 +46,13 @@ pub struct Scheduler {\n // XXX: Some hacks to put a &fn in Scheduler without borrowck\n // complaining\n type UnsafeTaskReceiver = sys::Closure;\n-trait HackAroundBorrowCk {\n+trait ClosureConverter {\n     fn from_fn(&fn(~Task)) -> Self;\n     fn to_fn(self) -> &fn(~Task);\n }\n-impl HackAroundBorrowCk for UnsafeTaskReceiver {\n-    fn from_fn(f: &fn(~Task)) -> UnsafeTaskReceiver {\n-        unsafe { transmute(f) }\n-    }\n-    fn to_fn(self) -> &fn(~Task) {\n-        unsafe { transmute(self) }\n-    }\n+impl ClosureConverter for UnsafeTaskReceiver {\n+    fn from_fn(f: &fn(~Task)) -> UnsafeTaskReceiver { unsafe { transmute(f) } }\n+    fn to_fn(self) -> &fn(~Task) { unsafe { transmute(self) } }\n }\n \n enum CleanupJob {\n@@ -223,10 +219,8 @@ pub impl Scheduler {\n         rtdebug!(\"blocking task\");\n \n         let blocked_task = self.current_task.swap_unwrap();\n-        let f_fake_region = unsafe {\n-            transmute::<&fn(~Task), &fn(~Task)>(f)\n-        };\n-        let f_opaque = HackAroundBorrowCk::from_fn(f_fake_region);\n+        let f_fake_region = unsafe { transmute::<&fn(~Task), &fn(~Task)>(f) };\n+        let f_opaque = ClosureConverter::from_fn(f_fake_region);\n         self.enqueue_cleanup_job(GiveTask(blocked_task, f_opaque));\n \n         local::put(self);"}]}