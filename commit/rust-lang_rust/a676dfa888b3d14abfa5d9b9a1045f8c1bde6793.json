{"sha": "a676dfa888b3d14abfa5d9b9a1045f8c1bde6793", "node_id": "C_kwDOAAsO6NoAKGE2NzZkZmE4ODhiM2QxNGFiZmE1ZDliOWExMDQ1ZjhjMWJkZTY3OTM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-27T23:16:31Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-28T08:34:55Z"}, "message": "Remove `MemDecoder::read_byte`.\n\nIt's just a synonym for `read_u8`.", "tree": {"sha": "7e1d0b785ec687e9743c7d80c33037f64253433a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e1d0b785ec687e9743c7d80c33037f64253433a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a676dfa888b3d14abfa5d9b9a1045f8c1bde6793", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a676dfa888b3d14abfa5d9b9a1045f8c1bde6793", "html_url": "https://github.com/rust-lang/rust/commit/a676dfa888b3d14abfa5d9b9a1045f8c1bde6793", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a676dfa888b3d14abfa5d9b9a1045f8c1bde6793/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a16d25365b5f0aa815948237c46fb1843386d7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a16d25365b5f0aa815948237c46fb1843386d7a", "html_url": "https://github.com/rust-lang/rust/commit/7a16d25365b5f0aa815948237c46fb1843386d7a"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "0f6e4b329b87e5d4b7dc70e4b048d86a9eac65d0", "filename": "compiler/rustc_serialize/src/opaque.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a676dfa888b3d14abfa5d9b9a1045f8c1bde6793/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a676dfa888b3d14abfa5d9b9a1045f8c1bde6793/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs?ref=a676dfa888b3d14abfa5d9b9a1045f8c1bde6793", "patch": "@@ -504,19 +504,6 @@ impl<'a> MemDecoder<'a> {\n         panic!(\"MemDecoder exhausted\")\n     }\n \n-    #[inline]\n-    fn read_byte(&mut self) -> u8 {\n-        if self.current == self.end {\n-            Self::decoder_exhausted();\n-        }\n-        // SAFETY: This type guarantees current <= end, and we just checked current == end.\n-        unsafe {\n-            let byte = *self.current;\n-            self.current = self.current.add(1);\n-            byte\n-        }\n-    }\n-\n     #[inline]\n     fn read_array<const N: usize>(&mut self) -> [u8; N] {\n         self.read_raw_bytes(N).try_into().unwrap()\n@@ -586,7 +573,15 @@ impl<'a> Decoder for MemDecoder<'a> {\n \n     #[inline]\n     fn read_u8(&mut self) -> u8 {\n-        self.read_byte()\n+        if self.current == self.end {\n+            Self::decoder_exhausted();\n+        }\n+        // SAFETY: This type guarantees current <= end, and we just checked current == end.\n+        unsafe {\n+            let byte = *self.current;\n+            self.current = self.current.add(1);\n+            byte\n+        }\n     }\n \n     #[inline]"}]}