{"sha": "f1431adb404973f2f9dbce91b3c56893935df83b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNDMxYWRiNDA0OTczZjJmOWRiY2U5MWIzYzU2ODkzOTM1ZGY4M2I=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-10T20:49:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-10T20:49:22Z"}, "message": "rustc: Add a generic struct_elt() function to trans", "tree": {"sha": "e7a4be7b81595c09de8d37e68b4dad75e725b96f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7a4be7b81595c09de8d37e68b4dad75e725b96f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1431adb404973f2f9dbce91b3c56893935df83b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1431adb404973f2f9dbce91b3c56893935df83b", "html_url": "https://github.com/rust-lang/rust/commit/f1431adb404973f2f9dbce91b3c56893935df83b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1431adb404973f2f9dbce91b3c56893935df83b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "451fc176d390b8ee0c22c5d39a210979835c4f40", "url": "https://api.github.com/repos/rust-lang/rust/commits/451fc176d390b8ee0c22c5d39a210979835c4f40", "html_url": "https://github.com/rust-lang/rust/commit/451fc176d390b8ee0c22c5d39a210979835c4f40"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "32bd47dc0c95b2d77b87fc2a5d216db027b85a0b", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f1431adb404973f2f9dbce91b3c56893935df83b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1431adb404973f2f9dbce91b3c56893935df83b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f1431adb404973f2f9dbce91b3c56893935df83b", "patch": "@@ -347,6 +347,15 @@ fn val_str(type_names tn, ValueRef v) -> str {\n     ret ty_str(tn, val_ty(v));\n }\n \n+// Returns the nth element of the given LLVM structure type.\n+fn struct_elt(TypeRef llstructty, uint n) -> TypeRef {\n+    auto elt_count = llvm::LLVMCountStructElementTypes(llstructty);\n+    assert (n < elt_count);\n+    auto elt_tys = vec::init_elt(T_nil(), elt_count);\n+    llvm::LLVMGetStructElementTypes(llstructty, vec::buf(elt_tys));\n+    ret llvm::LLVMGetElementType(elt_tys.(n));\n+}\n+\n \n // LLVM type constructors.\n \n@@ -7686,10 +7695,7 @@ fn trans_mod(@local_ctxt cx, &ast::_mod m) {\n \n fn get_pair_fn_ty(TypeRef llpairty) -> TypeRef {\n     // Bit of a kludge: pick the fn typeref out of the pair.\n-    let vec[TypeRef] pair_tys = [T_nil(), T_nil()];\n-    llvm::LLVMGetStructElementTypes(llpairty,\n-                                   vec::buf[TypeRef](pair_tys));\n-    ret llvm::LLVMGetElementType(pair_tys.(0));\n+    ret struct_elt(llpairty, 0u);\n }\n \n fn decl_fn_and_pair(&@crate_ctxt ccx, &span sp,"}]}