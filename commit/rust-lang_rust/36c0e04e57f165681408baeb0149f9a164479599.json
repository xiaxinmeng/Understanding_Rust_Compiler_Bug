{"sha": "36c0e04e57f165681408baeb0149f9a164479599", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YzBlMDRlNTdmMTY1NjgxNDA4YmFlYjAxNDlmOWExNjQ0Nzk1OTk=", "commit": {"author": {"name": "Eric Reed", "email": "ereed@mozilla.com", "date": "2013-06-20T00:39:02Z"}, "committer": {"name": "Eric Reed", "email": "ereed@mozilla.com", "date": "2013-06-20T00:39:02Z"}, "message": "derived instances of Eq and TotalEq for IpAddr rather than implement them manually.", "tree": {"sha": "e4bf5b90b4fb2174b94e64fdb36200aa1dffba30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4bf5b90b4fb2174b94e64fdb36200aa1dffba30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36c0e04e57f165681408baeb0149f9a164479599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36c0e04e57f165681408baeb0149f9a164479599", "html_url": "https://github.com/rust-lang/rust/commit/36c0e04e57f165681408baeb0149f9a164479599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36c0e04e57f165681408baeb0149f9a164479599/comments", "author": null, "committer": null, "parents": [{"sha": "ac49b74e8254b3129694f5a5425dbda4ffc4b186", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac49b74e8254b3129694f5a5425dbda4ffc4b186", "html_url": "https://github.com/rust-lang/rust/commit/ac49b74e8254b3129694f5a5425dbda4ffc4b186"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "d71b891350ecb0ea5925373e03ca11ea98cf1601", "filename": "src/libstd/rt/io/net/ip.rs", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/36c0e04e57f165681408baeb0149f9a164479599/src%2Flibstd%2Frt%2Fio%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36c0e04e57f165681408baeb0149f9a164479599/src%2Flibstd%2Frt%2Fio%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fnet%2Fip.rs?ref=36c0e04e57f165681408baeb0149f9a164479599", "patch": "@@ -8,28 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::cmp::{Eq, TotalEq};\n-\n+#[deriving(Eq, TotalEq)]\n pub enum IpAddr {\n     Ipv4(u8, u8, u8, u8, u16),\n     Ipv6\n }\n-\n-impl Eq for IpAddr {\n-    fn eq(&self, other: &IpAddr) -> bool {\n-        match (*self, *other) {\n-            (Ipv4(a,b,c,d,e), Ipv4(f,g,h,i,j)) => (a,b,c,d,e) == (f,g,h,i,j),\n-            (Ipv6, Ipv6) => fail!(), \n-            _ => false\n-        }\n-    }\n-    fn ne(&self, other: &IpAddr) -> bool {\n-        !(self == other)\n-    }\n-}\n-\n-impl TotalEq for IpAddr {\n-    fn equals(&self, other: &IpAddr) -> bool {\n-        *self == *other\n-    }\n-}"}]}