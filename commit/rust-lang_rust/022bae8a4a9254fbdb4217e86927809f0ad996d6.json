{"sha": "022bae8a4a9254fbdb4217e86927809f0ad996d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMmJhZThhNGE5MjU0ZmJkYjQyMTdlODY5Mjc4MDlmMGFkOTk2ZDY=", "commit": {"author": {"name": "raph", "email": "rap2hpoutre@users.noreply.github.com", "date": "2017-03-29T13:59:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-29T13:59:22Z"}, "message": "Add example to std::process::abort", "tree": {"sha": "6ca9500185129f4f52da76ce3fdbbc96b5814d43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ca9500185129f4f52da76ce3fdbbc96b5814d43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/022bae8a4a9254fbdb4217e86927809f0ad996d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/022bae8a4a9254fbdb4217e86927809f0ad996d6", "html_url": "https://github.com/rust-lang/rust/commit/022bae8a4a9254fbdb4217e86927809f0ad996d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/022bae8a4a9254fbdb4217e86927809f0ad996d6/comments", "author": {"login": "rap2hpoutre", "id": 1575946, "node_id": "MDQ6VXNlcjE1NzU5NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1575946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rap2hpoutre", "html_url": "https://github.com/rap2hpoutre", "followers_url": "https://api.github.com/users/rap2hpoutre/followers", "following_url": "https://api.github.com/users/rap2hpoutre/following{/other_user}", "gists_url": "https://api.github.com/users/rap2hpoutre/gists{/gist_id}", "starred_url": "https://api.github.com/users/rap2hpoutre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rap2hpoutre/subscriptions", "organizations_url": "https://api.github.com/users/rap2hpoutre/orgs", "repos_url": "https://api.github.com/users/rap2hpoutre/repos", "events_url": "https://api.github.com/users/rap2hpoutre/events{/privacy}", "received_events_url": "https://api.github.com/users/rap2hpoutre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abf5592510156e08b4de3830afaabbc0b65ce054", "url": "https://api.github.com/repos/rust-lang/rust/commits/abf5592510156e08b4de3830afaabbc0b65ce054", "html_url": "https://github.com/rust-lang/rust/commit/abf5592510156e08b4de3830afaabbc0b65ce054"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "32b52d1f77a01bbb885bdf337fbfd37baf75da9e", "filename": "src/libstd/process.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/022bae8a4a9254fbdb4217e86927809f0ad996d6/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022bae8a4a9254fbdb4217e86927809f0ad996d6/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=022bae8a4a9254fbdb4217e86927809f0ad996d6", "patch": "@@ -1056,6 +1056,19 @@ pub fn exit(code: i32) -> ! {\n /// will be run. If a clean shutdown is needed it is recommended to only call\n /// this function at a known point where there are no more destructors left\n /// to run.\n+///\n+/// # Examples\n+/// ```\n+/// use std::process;\n+/// \n+/// fn main() {\n+///     println!(\"aborting\");\n+/// \n+///     process::abort();\n+/// \n+///     // execution never gets here\n+/// }\n+/// ```\n #[stable(feature = \"process_abort\", since = \"1.17.0\")]\n pub fn abort() -> ! {\n     unsafe { ::sys::abort_internal() };"}]}