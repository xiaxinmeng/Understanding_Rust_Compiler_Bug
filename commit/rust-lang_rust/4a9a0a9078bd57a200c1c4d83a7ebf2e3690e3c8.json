{"sha": "4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhOWEwYTkwNzhiZDU3YTIwMGMxYzRkODNhN2ViZjJlMzY5MGUzYzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-23T17:54:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-23T17:54:08Z"}, "message": "avoid lowercasing platforms", "tree": {"sha": "789f77a13a69d213775e4be5688585efc7ddecb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/789f77a13a69d213775e4be5688585efc7ddecb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "html_url": "https://github.com/rust-lang/rust/commit/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e575fb1f57c693efd07322cddd7e69e19da82a1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e575fb1f57c693efd07322cddd7e69e19da82a1c", "html_url": "https://github.com/rust-lang/rust/commit/e575fb1f57c693efd07322cddd7e69e19da82a1c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9ce3d2b08c23e9d050b8e9020236c5d8360e02bb", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "patch": "@@ -169,7 +169,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) -> Option<i64> {\n     // FIXME: We always ignore leaks on some platforms where we do not\n     // correctly implement TLS destructors.\n-    let target_os = tcx.sess.target.target.target_os.to_lowercase();\n+    let target_os = tcx.sess.target.target.target_os.as_str();\n     let ignore_leaks = config.ignore_leaks || target_os == \"windows\" || target_os == \"macos\";\n \n     let (mut ecx, ret_place) = match create_ecx(tcx, main_id, config) {"}, {"sha": "5128176acb58c66367eaa27ba4c5c773ddb46fb8", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "patch": "@@ -373,7 +373,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     /// if this is not the case.\n     fn assert_platform(&self, platform: &str, name: &str) {\n         assert_eq!(\n-            self.eval_context_ref().tcx.sess.target.target.target_os.to_lowercase(),\n+            self.eval_context_ref().tcx.sess.target.target.target_os,\n             platform,\n             \"`{}` is only available on the `{}` platform\",\n             name,"}, {"sha": "3d8d3bd52607a8c50f455c96e570dfc4c498ad60", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "patch": "@@ -455,7 +455,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_f64(res), dest)?;\n             }\n \n-            _ => match this.tcx.sess.target.target.target_os.to_lowercase().as_str() {\n+            _ => match this.tcx.sess.target.target.target_os.as_str() {\n                 \"linux\" | \"macos\" => return posix::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n                 \"windows\" => return windows::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n                 target => throw_unsup_format!(\"The {} target platform is not supported\", target),"}, {"sha": "a8b4aad8819b0c456c0366795c0c3c793f43ccc5", "filename": "src/shims/foreign_items/posix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Fshims%2Fforeign_items%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8/src%2Fshims%2Fforeign_items%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix.rs?ref=4a9a0a9078bd57a200c1c4d83a7ebf2e3690e3c8", "patch": "@@ -322,7 +322,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n \n             _ => {\n-                match this.tcx.sess.target.target.target_os.to_lowercase().as_str() {\n+                match this.tcx.sess.target.target.target_os.as_str() {\n                     \"linux\" => return linux::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n                     \"macos\" => return macos::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n                     _ => unreachable!(),"}]}