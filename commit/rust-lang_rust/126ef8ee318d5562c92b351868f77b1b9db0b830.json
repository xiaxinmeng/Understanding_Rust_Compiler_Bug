{"sha": "126ef8ee318d5562c92b351868f77b1b9db0b830", "node_id": "C_kwDOAAsO6NoAKDEyNmVmOGVlMzE4ZDU1NjJjOTJiMzUxODY4Zjc3YjFiOWRiMGI4MzA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-26T17:21:20Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-26T17:21:20Z"}, "message": "don't do Sized/other fn signature checks on RPIT's real type", "tree": {"sha": "10c228ae127565a09e41451850e1b0b86749b069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10c228ae127565a09e41451850e1b0b86749b069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/126ef8ee318d5562c92b351868f77b1b9db0b830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/126ef8ee318d5562c92b351868f77b1b9db0b830", "html_url": "https://github.com/rust-lang/rust/commit/126ef8ee318d5562c92b351868f77b1b9db0b830", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/126ef8ee318d5562c92b351868f77b1b9db0b830/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa70b89d19a52be0dea03022d807a3e615763727", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa70b89d19a52be0dea03022d807a3e615763727", "html_url": "https://github.com/rust-lang/rust/commit/fa70b89d19a52be0dea03022d807a3e615763727"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "da51633df99117551411da6e3fa5cb63b37801ec", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/126ef8ee318d5562c92b351868f77b1b9db0b830/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/126ef8ee318d5562c92b351868f77b1b9db0b830/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=126ef8ee318d5562c92b351868f77b1b9db0b830", "patch": "@@ -103,12 +103,6 @@ pub(super) fn check_fn<'a, 'tcx>(\n             DUMMY_SP,\n             param_env,\n         ));\n-    // HACK(oli-obk): we rewrite the declared return type, too, so that we don't end up inferring all\n-    // unconstrained RPIT to have `()` as their hidden type. This would happen because further down we\n-    // compare the ret_coercion with declared_ret_ty, and anything uninferred would be inferred to the\n-    // opaque type itself. That again would cause writeback to assume we have a recursive call site\n-    // and do the sadly stabilized fallback to `()`.\n-    let declared_ret_ty = ret_ty;\n     fcx.ret_coercion = Some(RefCell::new(CoerceMany::new(ret_ty)));\n     fcx.ret_type_span = Some(decl.output.span());\n \n@@ -252,7 +246,12 @@ pub(super) fn check_fn<'a, 'tcx>(\n             fcx.next_ty_var(TypeVariableOrigin { kind: TypeVariableOriginKind::DynReturnFn, span });\n         debug!(\"actual_return_ty replaced with {:?}\", actual_return_ty);\n     }\n-    fcx.demand_suptype(span, declared_ret_ty, actual_return_ty);\n+\n+    // HACK(oli-obk, compiler-errors): We should be comparing this against\n+    // `declared_ret_ty`, but then anything uninferred would be inferred to\n+    // the opaque type itself. That again would cause writeback to assume\n+    // we have a recursive call site and do the sadly stabilized fallback to `()`.\n+    fcx.demand_suptype(span, ret_ty, actual_return_ty);\n \n     // Check that a function marked as `#[panic_handler]` has signature `fn(&PanicInfo) -> !`\n     if let Some(panic_impl_did) = tcx.lang_items().panic_impl()"}, {"sha": "bd25940780a1622bf51430810c996fb154219b75", "filename": "src/test/ui/impl-trait/rpit-not-sized.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/126ef8ee318d5562c92b351868f77b1b9db0b830/src%2Ftest%2Fui%2Fimpl-trait%2Frpit-not-sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/126ef8ee318d5562c92b351868f77b1b9db0b830/src%2Ftest%2Fui%2Fimpl-trait%2Frpit-not-sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Frpit-not-sized.rs?ref=126ef8ee318d5562c92b351868f77b1b9db0b830", "patch": "@@ -0,0 +1,6 @@\n+fn foo() -> impl ?Sized {\n+    //~^ ERROR the size for values of type `impl ?Sized` cannot be known at compilation time\n+    ()\n+}\n+\n+fn main() {}"}, {"sha": "608c94fc07237d065dca46f0f4bee8202686bbee", "filename": "src/test/ui/impl-trait/rpit-not-sized.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/126ef8ee318d5562c92b351868f77b1b9db0b830/src%2Ftest%2Fui%2Fimpl-trait%2Frpit-not-sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126ef8ee318d5562c92b351868f77b1b9db0b830/src%2Ftest%2Fui%2Fimpl-trait%2Frpit-not-sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Frpit-not-sized.stderr?ref=126ef8ee318d5562c92b351868f77b1b9db0b830", "patch": "@@ -0,0 +1,12 @@\n+error[E0277]: the size for values of type `impl ?Sized` cannot be known at compilation time\n+  --> $DIR/rpit-not-sized.rs:1:13\n+   |\n+LL | fn foo() -> impl ?Sized {\n+   |             ^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `impl ?Sized`\n+   = note: the return type of a function must have a statically known size\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}