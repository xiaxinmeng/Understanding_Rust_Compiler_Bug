{"sha": "e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "node_id": "C_kwDOAAsO6NoAKGUyOWIzYjU1YTRjY2JiOWIzZjk0MzUzNjg0YjhkNWM0NmM1Yzc2ZmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-24T12:57:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-24T12:57:08Z"}, "message": "Auto merge of #8579 - yoav-lavi:squashed-master, r=flip1995\n\n`unnecessary_join` lint\n\nchangelog: Adds a lint called ``[`unnecessary_join`]`` that detects cases of `.collect::<Vec<String>>.join(\"\")` or `.collect::<Vec<_>>.join(\"\")` on an iterator, suggesting `.collect::<String>()` instead\n\nFixes: https://github.com/rust-lang/rust-clippy/issues/8570\n\nThis is a reopen of https://github.com/rust-lang/rust-clippy/pull/8573\n\nchangelog: add lint [`unnecessary_join`]", "tree": {"sha": "ae2dc1d1e15a698fe81730dd4313a25870e3d1a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae2dc1d1e15a698fe81730dd4313a25870e3d1a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "html_url": "https://github.com/rust-lang/rust/commit/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f07ee8a998eff61977d594eeac44dc1d0ead7b02", "url": "https://api.github.com/repos/rust-lang/rust/commits/f07ee8a998eff61977d594eeac44dc1d0ead7b02", "html_url": "https://github.com/rust-lang/rust/commit/f07ee8a998eff61977d594eeac44dc1d0ead7b02"}, {"sha": "b60a7fb7b67566c611cfd0de94f76c5596a4915d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b60a7fb7b67566c611cfd0de94f76c5596a4915d", "html_url": "https://github.com/rust-lang/rust/commit/b60a7fb7b67566c611cfd0de94f76c5596a4915d"}], "stats": {"total": 172, "additions": 172, "deletions": 0}, "files": [{"sha": "88f71931d92b58432cfaa4e003422562bf9de0c0", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -3508,6 +3508,7 @@ Released 2018-09-13\n [`unnecessary_filter_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_filter_map\n [`unnecessary_find_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_find_map\n [`unnecessary_fold`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_fold\n+[`unnecessary_join`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_join\n [`unnecessary_lazy_evaluations`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n [`unnecessary_mut_passed`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n [`unnecessary_operation`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation"}, {"sha": "21f1ef562b5a31482c01c3a56af620d9450e2ad4", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -334,6 +334,7 @@ store.register_lints(&[\n     methods::UNNECESSARY_FILTER_MAP,\n     methods::UNNECESSARY_FIND_MAP,\n     methods::UNNECESSARY_FOLD,\n+    methods::UNNECESSARY_JOIN,\n     methods::UNNECESSARY_LAZY_EVALUATIONS,\n     methods::UNNECESSARY_TO_OWNED,\n     methods::UNWRAP_OR_ELSE_DEFAULT,"}, {"sha": "eb6534cb8cae761433a0a979ff932f78d063f5a7", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -63,6 +63,7 @@ store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n     LintId::of(methods::IMPLICIT_CLONE),\n     LintId::of(methods::INEFFICIENT_TO_STRING),\n     LintId::of(methods::MAP_UNWRAP_OR),\n+    LintId::of(methods::UNNECESSARY_JOIN),\n     LintId::of(misc::FLOAT_CMP),\n     LintId::of(misc::USED_UNDERSCORE_BINDING),\n     LintId::of(mut_mut::MUT_MUT),"}, {"sha": "9d4e1fa39940139b1c1248df21649db552b66cd7", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -60,6 +60,7 @@ mod uninit_assumed_init;\n mod unnecessary_filter_map;\n mod unnecessary_fold;\n mod unnecessary_iter_cloned;\n+mod unnecessary_join;\n mod unnecessary_lazy_eval;\n mod unnecessary_to_owned;\n mod unwrap_or_else_default;\n@@ -2049,6 +2050,35 @@ declare_clippy_lint! {\n     \"unnecessary calls to `to_owned`-like functions\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for use of `.collect::<Vec<String>>().join(\"\")` on iterators.\n+    ///\n+    /// ### Why is this bad?\n+    /// `.collect::<String>()` is more concise and usually more performant\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// let vector = vec![\"hello\",  \"world\"];\n+    /// let output = vector.iter().map(|item| item.to_uppercase()).collect::<Vec<String>>().join(\"\");\n+    /// println!(\"{}\", output);\n+    /// ```\n+    /// The correct use would be:\n+    /// ```rust\n+    /// let vector = vec![\"hello\",  \"world\"];\n+    /// let output = vector.iter().map(|item| item.to_uppercase()).collect::<String>();\n+    /// println!(\"{}\", output);\n+    /// ```\n+    /// ### Known problems\n+    /// While `.collect::<String>()` is more performant in most cases, there are cases where\n+    /// using `.collect::<String>()` over `.collect::<Vec<String>>().join(\"\")`\n+    /// will prevent loop unrolling and will result in a negative performance impact.\n+    #[clippy::version = \"1.61.0\"]\n+    pub UNNECESSARY_JOIN,\n+    pedantic,\n+    \"using `.collect::<Vec<String>>().join(\\\"\\\")` on an iterator\"\n+}\n+\n pub struct Methods {\n     avoid_breaking_exported_api: bool,\n     msrv: Option<RustcVersion>,\n@@ -2134,6 +2164,7 @@ impl_lint_pass!(Methods => [\n     MANUAL_SPLIT_ONCE,\n     NEEDLESS_SPLITN,\n     UNNECESSARY_TO_OWNED,\n+    UNNECESSARY_JOIN,\n ]);\n \n /// Extracts a method call name, args, and `Span` of the method name.\n@@ -2429,6 +2460,11 @@ fn check_methods<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, msrv: Optio\n             (\"is_file\", []) => filetype_is_file::check(cx, expr, recv),\n             (\"is_none\", []) => check_is_some_is_none(cx, expr, recv, false),\n             (\"is_some\", []) => check_is_some_is_none(cx, expr, recv, true),\n+            (\"join\", [join_arg]) => {\n+                if let Some((\"collect\", _, span)) = method_call(recv) {\n+                    unnecessary_join::check(cx, expr, recv, join_arg, span);\n+                }\n+            },\n             (\"last\", args @ []) | (\"skip\", args @ [_]) => {\n                 if let Some((name2, [recv2, args2 @ ..], _span2)) = method_call(recv) {\n                     if let (\"cloned\", []) = (name2, args2) {"}, {"sha": "973b8a7e6bf6a9409f44e399e31d2bbbd3e1ea10", "filename": "clippy_lints/src/methods/unnecessary_join.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_join.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_join.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_join.rs?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -0,0 +1,41 @@\n+use clippy_utils::{diagnostics::span_lint_and_sugg, ty::is_type_diagnostic_item};\n+use rustc_ast::ast::LitKind;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind};\n+use rustc_lint::LateContext;\n+use rustc_middle::ty::{Ref, Slice};\n+use rustc_span::{sym, Span};\n+\n+use super::UNNECESSARY_JOIN;\n+\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    expr: &'tcx Expr<'tcx>,\n+    join_self_arg: &'tcx Expr<'tcx>,\n+    join_arg: &'tcx Expr<'tcx>,\n+    span: Span,\n+) {\n+    let applicability = Applicability::MachineApplicable;\n+    let collect_output_adjusted_type = cx.typeck_results().expr_ty_adjusted(join_self_arg);\n+    if_chain! {\n+        // the turbofish for collect is ::<Vec<String>>\n+        if let Ref(_, ref_type, _) = collect_output_adjusted_type.kind();\n+        if let Slice(slice) = ref_type.kind();\n+        if is_type_diagnostic_item(cx, *slice, sym::String);\n+        // the argument for join is \"\"\n+        if let ExprKind::Lit(spanned) = &join_arg.kind;\n+        if let LitKind::Str(symbol, _) = spanned.node;\n+        if symbol.is_empty();\n+        then {\n+            span_lint_and_sugg(\n+                cx,\n+                UNNECESSARY_JOIN,\n+                span.with_hi(expr.span.hi()),\n+                r#\"called `.collect<Vec<String>>().join(\"\")` on an iterator\"#,\n+                \"try using\",\n+                \"collect::<String>()\".to_owned(),\n+                applicability,\n+            );\n+        }\n+    }\n+}"}, {"sha": "7e12c6ae4be98476f26fd7d4d0f6d29187c5bd22", "filename": "tests/ui/unnecessary_join.fixed", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/tests%2Fui%2Funnecessary_join.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/tests%2Fui%2Funnecessary_join.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_join.fixed?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -0,0 +1,35 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_join)]\n+\n+fn main() {\n+    // should be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector\n+        .iter()\n+        .map(|item| item.to_uppercase())\n+        .collect::<String>();\n+    println!(\"{}\", output);\n+\n+    // should be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector\n+        .iter()\n+        .map(|item| item.to_uppercase())\n+        .collect::<String>();\n+    println!(\"{}\", output);\n+\n+    // should not be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector\n+        .iter()\n+        .map(|item| item.to_uppercase())\n+        .collect::<Vec<String>>()\n+        .join(\"\\n\");\n+    println!(\"{}\", output);\n+\n+    // should not be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector.iter().map(|item| item.to_uppercase()).collect::<String>();\n+    println!(\"{}\", output);\n+}"}, {"sha": "0a21656a7558e3fb40c826c7de1c7f376ccecf09", "filename": "tests/ui/unnecessary_join.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/tests%2Fui%2Funnecessary_join.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/tests%2Fui%2Funnecessary_join.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_join.rs?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -0,0 +1,37 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_join)]\n+\n+fn main() {\n+    // should be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector\n+        .iter()\n+        .map(|item| item.to_uppercase())\n+        .collect::<Vec<String>>()\n+        .join(\"\");\n+    println!(\"{}\", output);\n+\n+    // should be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector\n+        .iter()\n+        .map(|item| item.to_uppercase())\n+        .collect::<Vec<_>>()\n+        .join(\"\");\n+    println!(\"{}\", output);\n+\n+    // should not be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector\n+        .iter()\n+        .map(|item| item.to_uppercase())\n+        .collect::<Vec<String>>()\n+        .join(\"\\n\");\n+    println!(\"{}\", output);\n+\n+    // should not be linted\n+    let vector = vec![\"hello\", \"world\"];\n+    let output = vector.iter().map(|item| item.to_uppercase()).collect::<String>();\n+    println!(\"{}\", output);\n+}"}, {"sha": "0b14b143affd67db55a42ed5b3d094b0c4aa7815", "filename": "tests/ui/unnecessary_join.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/tests%2Fui%2Funnecessary_join.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb/tests%2Fui%2Funnecessary_join.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_join.stderr?ref=e29b3b55a4ccbb9b3f94353684b8d5c46c5c76fb", "patch": "@@ -0,0 +1,20 @@\n+error: called `.collect<Vec<String>>().join(\"\")` on an iterator\n+  --> $DIR/unnecessary_join.rs:11:10\n+   |\n+LL |           .collect::<Vec<String>>()\n+   |  __________^\n+LL | |         .join(\"\");\n+   | |_________________^ help: try using: `collect::<String>()`\n+   |\n+   = note: `-D clippy::unnecessary-join` implied by `-D warnings`\n+\n+error: called `.collect<Vec<String>>().join(\"\")` on an iterator\n+  --> $DIR/unnecessary_join.rs:20:10\n+   |\n+LL |           .collect::<Vec<_>>()\n+   |  __________^\n+LL | |         .join(\"\");\n+   | |_________________^ help: try using: `collect::<String>()`\n+\n+error: aborting due to 2 previous errors\n+"}]}