{"sha": "ab88e64b152d3704c35db96dbbc6efaaed67773f", "node_id": "C_kwDOAAsO6NoAKGFiODhlNjRiMTUyZDM3MDRjMzVkYjk2ZGJiYzZlZmFhZWQ2Nzc3M2Y", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-20T13:30:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-20T13:30:34Z"}, "message": "Auto merge of #2495 - RalfJung:ra, r=RalfJung\n\nadd ./miri cargo for RA to invoke\n\nRA expects a check command to check *individual workspaces*, whereas `./miri` is designed to check/build/test all parts of Miri. So add a new `./miri cargo` that performs just a single cargo invocation, but with the right env vars so that the build cache can be shared with `./miri check`.", "tree": {"sha": "08ab8f377882f24b127369deedbebc7a5e87c3bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08ab8f377882f24b127369deedbebc7a5e87c3bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab88e64b152d3704c35db96dbbc6efaaed67773f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab88e64b152d3704c35db96dbbc6efaaed67773f", "html_url": "https://github.com/rust-lang/rust/commit/ab88e64b152d3704c35db96dbbc6efaaed67773f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab88e64b152d3704c35db96dbbc6efaaed67773f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a03e30b7995982943035fd74e80f6000d0f0ab3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a03e30b7995982943035fd74e80f6000d0f0ab3", "html_url": "https://github.com/rust-lang/rust/commit/1a03e30b7995982943035fd74e80f6000d0f0ab3"}, {"sha": "0c3ad68a5a973642c6789a5c57d10e84fdb66520", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3ad68a5a973642c6789a5c57d10e84fdb66520", "html_url": "https://github.com/rust-lang/rust/commit/0c3ad68a5a973642c6789a5c57d10e84fdb66520"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "8d965ae8fcb8da693c9337c04b847216b721db00", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab88e64b152d3704c35db96dbbc6efaaed67773f/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/ab88e64b152d3704c35db96dbbc6efaaed67773f/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=ab88e64b152d3704c35db96dbbc6efaaed67773f", "patch": "@@ -171,14 +171,16 @@ to `.vscode/settings.json` in your local Miri clone:\n         \"env\",\n         \"MIRI_AUTO_OPS=no\",\n         \"./miri\",\n-        \"check\",\n+        \"cargo\",\n+        \"clippy\", // make this `check` when working with a locally built rustc\n         \"--message-format=json\"\n     ],\n     // Contrary to what the name suggests, this also affects proc macros.\n     \"rust-analyzer.cargo.buildScripts.overrideCommand\": [\n         \"env\",\n         \"MIRI_AUTO_OPS=no\",\n         \"./miri\",\n+        \"cargo\",\n         \"check\",\n         \"--message-format=json\",\n     ],"}, {"sha": "cf3ad06788ab1311b9c98f7df8c08431f64370f7", "filename": "cargo-miri/miri", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab88e64b152d3704c35db96dbbc6efaaed67773f/cargo-miri%2Fmiri", "raw_url": "https://github.com/rust-lang/rust/raw/ab88e64b152d3704c35db96dbbc6efaaed67773f/cargo-miri%2Fmiri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fmiri?ref=ab88e64b152d3704c35db96dbbc6efaaed67773f", "patch": "@@ -1,3 +1,4 @@\n #!/bin/sh\n-# Hack to work around https://github.com/rust-analyzer/rust-analyzer/issues/10793.\n+# RA invokes `./miri cargo ...` for each workspace, so we need to forward that to the main `miri`\n+# script. See <https://github.com/rust-analyzer/rust-analyzer/issues/10793>.\n exec \"$(dirname \"$0\")\"/../miri \"$@\""}, {"sha": "a72fe91f594b692bd0df9408f739e0479978c539", "filename": "miri", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ab88e64b152d3704c35db96dbbc6efaaed67773f/miri", "raw_url": "https://github.com/rust-lang/rust/raw/ab88e64b152d3704c35db96dbbc6efaaed67773f/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=ab88e64b152d3704c35db96dbbc6efaaed67773f", "patch": "@@ -29,6 +29,10 @@ Format all sources and tests. <flags> are passed to `rustfmt`.\n ./miri clippy <flags>:\n Runs clippy on all sources. <flags> are passed to `cargo clippy`.\n \n+./miri cargo <flags>:\n+Runs just `cargo <flags>` with the Miri-specific environment variables.\n+Mainly meant to be invoked by rust-analyzer.\n+\n ./miri many-seeds <command>:\n Runs <command> over and over again with different seeds for Miri. The MIRIFLAGS\n variable is set to its original value appended with ` -Zmiri-seed=$SEED` for\n@@ -44,7 +48,7 @@ MIRI_SYSROOT:\n If already set, the \"sysroot setup\" step is skipped.\n \n CARGO_EXTRA_FLAGS:\n-Pass extra flags to all cargo invocations.\n+Pass extra flags to all cargo invocations. (Ignored by `./miri cargo`.)\n EOF\n )\n \n@@ -218,6 +222,11 @@ clippy)\n     $CARGO clippy $CARGO_EXTRA_FLAGS --manifest-path \"$MIRIDIR\"/ui_test/Cargo.toml --all-targets \"$@\"\n     $CARGO clippy $CARGO_EXTRA_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml \"$@\"\n     ;;\n+cargo)\n+    # We carefully kept the working dir intact, so this will run cargo *on the workspace in the\n+    # current working dir*, not on the main Miri workspace. That is exactly what RA needs.\n+    $CARGO \"$@\"\n+    ;;\n *)\n     if [ -n \"$COMMAND\" ]; then\n       echo \"Unknown command: $COMMAND\""}]}