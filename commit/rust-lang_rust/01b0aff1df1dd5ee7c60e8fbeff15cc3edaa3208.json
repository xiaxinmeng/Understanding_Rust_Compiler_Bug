{"sha": "01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYjBhZmYxZGYxZGQ1ZWU3YzYwZThmYmVmZjE1Y2MzZWRhYTMyMDg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-07-22T10:17:36Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T10:25:26Z"}, "message": "Add std::panic::panic_box.", "tree": {"sha": "f4cb545840fb82c1369ffd9123960f5b0aa3366a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4cb545840fb82c1369ffd9123960f5b0aa3366a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208", "html_url": "https://github.com/rust-lang/rust/commit/01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dda2b5e3e260c14b868c494008af1c8981eaa5a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/dda2b5e3e260c14b868c494008af1c8981eaa5a8", "html_url": "https://github.com/rust-lang/rust/commit/dda2b5e3e260c14b868c494008af1c8981eaa5a8"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "06ce66c10f7ea59726b9d1fb1e10694f6602f0a5", "filename": "library/std/src/panic.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208/library%2Fstd%2Fsrc%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208/library%2Fstd%2Fsrc%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanic.rs?ref=01b0aff1df1dd5ee7c60e8fbeff15cc3edaa3208", "patch": "@@ -23,6 +23,20 @@ pub use crate::panicking::{set_hook, take_hook};\n #[stable(feature = \"panic_hooks\", since = \"1.10.0\")]\n pub use core::panic::{Location, PanicInfo};\n \n+/// Panic the current thread, with the given payload as the panic message.\n+///\n+/// This supports an arbitrary panic payload, instead of just (formatted) strings.\n+///\n+/// The message is attached as a `Box<'static + Any + Send>`, which can be\n+/// accessed using [`PanicInfo::payload`].\n+///\n+/// See the [`panic!`] macro for more information about panicking.\n+#[unstable(feature = \"panic_box\", issue = \"none\")]\n+#[inline]\n+pub fn panic_box<M: Any + Send>(msg: M) -> ! {\n+    crate::panicking::begin_panic(msg);\n+}\n+\n /// A marker trait which represents \"panic safe\" types in Rust.\n ///\n /// This trait is implemented by default for many types and behaves similarly in"}]}