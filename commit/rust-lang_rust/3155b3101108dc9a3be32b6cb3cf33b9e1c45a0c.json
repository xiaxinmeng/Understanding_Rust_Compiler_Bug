{"sha": "3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNTViMzEwMTEwOGRjOWEzYmUzMmI2Y2IzY2YzM2I5ZTFjNDVhMGM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-08T11:48:32Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-08T11:48:32Z"}, "message": "Let ToString work with unsized types, importantly, `str`.", "tree": {"sha": "890b5943bc8b8a174f73c90ae3736497edd5c972", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890b5943bc8b8a174f73c90ae3736497edd5c972"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c", "html_url": "https://github.com/rust-lang/rust/commit/3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b3cd3900ceda838f5798c30ab96ceb41f962534", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b3cd3900ceda838f5798c30ab96ceb41f962534", "html_url": "https://github.com/rust-lang/rust/commit/5b3cd3900ceda838f5798c30ab96ceb41f962534"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "317f03e1b7d52d966e34752a33d47f40a92d6a87", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=3155b3101108dc9a3be32b6cb3cf33b9e1c45a0c", "patch": "@@ -932,7 +932,7 @@ pub trait ToString {\n     fn to_string(&self) -> String;\n }\n \n-impl<T: fmt::String> ToString for T {\n+impl<T: fmt::String + ?Sized> ToString for T {\n     fn to_string(&self) -> String {\n         use core::fmt::Writer;\n         let mut buf = String::new();\n@@ -994,6 +994,12 @@ mod tests {\n       assert_eq!(owned.as_ref().map(|s| s.as_slice()), Some(\"string\"));\n     }\n \n+    #[test]\n+    fn test_unsized_to_string() {\n+        let s: &str = \"abc\";\n+        let _: String = (*s).to_string();\n+    }\n+\n     #[test]\n     fn test_from_utf8() {\n         let xs = b\"hello\".to_vec();"}]}