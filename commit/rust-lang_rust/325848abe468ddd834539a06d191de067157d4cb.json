{"sha": "325848abe468ddd834539a06d191de067157d4cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNTg0OGFiZTQ2OGRkZDgzNDUzOWEwNmQxOTFkZTA2NzE1N2Q0Y2I=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-05T16:44:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-05T16:44:30Z"}, "message": "Rollup merge of #40997 - donniebishop:from_utf8_linking, r=steveklabnik\n\nAdded links to types in from_utf8 description\n\nReferences #29375. Link to types mentioned in the documentation for `from_utf8` (`str`, `&[u8`], etc). Paragraphs were reformatted to keep any one line from being excessively long, but are otherwise unchanged.", "tree": {"sha": "56b72171e54adaffed6586bdeb8420f1bacdfd9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56b72171e54adaffed6586bdeb8420f1bacdfd9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/325848abe468ddd834539a06d191de067157d4cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/325848abe468ddd834539a06d191de067157d4cb", "html_url": "https://github.com/rust-lang/rust/commit/325848abe468ddd834539a06d191de067157d4cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/325848abe468ddd834539a06d191de067157d4cb/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd474f0b2ec94f5ea2e1dd17c98b310b9c918c8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd474f0b2ec94f5ea2e1dd17c98b310b9c918c8d", "html_url": "https://github.com/rust-lang/rust/commit/fd474f0b2ec94f5ea2e1dd17c98b310b9c918c8d"}, {"sha": "364241c709b3b769a0515b07b21c5748818291d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/364241c709b3b769a0515b07b21c5748818291d8", "html_url": "https://github.com/rust-lang/rust/commit/364241c709b3b769a0515b07b21c5748818291d8"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "352cc926994e3685ae5ca5554eba5f9fbfd3e3c6", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/325848abe468ddd834539a06d191de067157d4cb/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/325848abe468ddd834539a06d191de067157d4cb/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=325848abe468ddd834539a06d191de067157d4cb", "patch": "@@ -215,11 +215,15 @@ impl Utf8Error {\n \n /// Converts a slice of bytes to a string slice.\n ///\n-/// A string slice (`&str`) is made of bytes (`u8`), and a byte slice (`&[u8]`)\n-/// is made of bytes, so this function converts between the two. Not all byte\n-/// slices are valid string slices, however: `&str` requires that it is valid\n-/// UTF-8. `from_utf8()` checks to ensure that the bytes are valid UTF-8, and\n-/// then does the conversion.\n+/// A string slice ([`&str`]) is made of bytes ([`u8`]), and a byte slice\n+/// ([`&[u8]`][byteslice]) is made of bytes, so this function converts between\n+/// the two. Not all byte slices are valid string slices, however: [`&str`] requires\n+/// that it is valid UTF-8. `from_utf8()` checks to ensure that the bytes are valid\n+/// UTF-8, and then does the conversion.\n+///\n+/// [`&str`]: ../../std/primitive.str.html\n+/// [`u8`]: ../../std/primitive.u8.html\n+/// [byteslice]: ../../std/primitive.slice.html\n ///\n /// If you are sure that the byte slice is valid UTF-8, and you don't want to\n /// incur the overhead of the validity check, there is an unsafe version of\n@@ -233,9 +237,12 @@ impl Utf8Error {\n ///\n /// [string]: ../../std/string/struct.String.html#method.from_utf8\n ///\n-/// Because you can stack-allocate a `[u8; N]`, and you can take a `&[u8]` of\n-/// it, this function is one way to have a stack-allocated string. There is\n-/// an example of this in the examples section below.\n+/// Because you can stack-allocate a `[u8; N]`, and you can take a\n+/// [`&[u8]`][byteslice] of it, this function is one way to have a\n+/// stack-allocated string. There is an example of this in the\n+/// examples section below.\n+///\n+/// [byteslice]: ../../std/primitive.slice.html\n ///\n /// # Errors\n ///"}]}