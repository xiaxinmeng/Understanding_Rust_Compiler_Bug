{"sha": "a805a2a5ebba2802f432d79874e59c24e398f82a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MDVhMmE1ZWJiYTI4MDJmNDMyZDc5ODc0ZTU5YzI0ZTM5OGY4MmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-10T20:09:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-10T20:09:22Z"}, "message": "Auto merge of #50205 - topecongiro:include-parens-to-type-parameter, r=petrochenkov\n\nInclude parens to type parameter\n\nThe motivation of this PR is to fix a bug in rustfmt (cc https://github.com/rust-lang-nursery/rustfmt/issues/2630).", "tree": {"sha": "ef60205bdc07e3c79fed7bf2df5609bca11db3ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef60205bdc07e3c79fed7bf2df5609bca11db3ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a805a2a5ebba2802f432d79874e59c24e398f82a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a805a2a5ebba2802f432d79874e59c24e398f82a", "html_url": "https://github.com/rust-lang/rust/commit/a805a2a5ebba2802f432d79874e59c24e398f82a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a805a2a5ebba2802f432d79874e59c24e398f82a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "html_url": "https://github.com/rust-lang/rust/commit/cabb679bf1bf37d34b0de3d60f655cf5e4185db6"}, {"sha": "dc87d0d1fbe416d637f8f8f5a2f499e794862dd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc87d0d1fbe416d637f8f8f5a2f499e794862dd5", "html_url": "https://github.com/rust-lang/rust/commit/dc87d0d1fbe416d637f8f8f5a2f499e794862dd5"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "97fcf70f5319dadaa3d2babc4651ed1cdde29c97", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a805a2a5ebba2802f432d79874e59c24e398f82a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a805a2a5ebba2802f432d79874e59c24e398f82a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a805a2a5ebba2802f432d79874e59c24e398f82a", "patch": "@@ -4746,6 +4746,7 @@ impl<'a> Parser<'a> {\n                                  self.check_keyword(keywords::For) ||\n                                  self.check(&token::OpenDelim(token::Paren));\n             if is_bound_start {\n+                let lo = self.span;\n                 let has_parens = self.eat(&token::OpenDelim(token::Paren));\n                 let question = if self.eat(&token::Question) { Some(self.prev_span) } else { None };\n                 if self.token.is_lifetime() {\n@@ -4754,10 +4755,17 @@ impl<'a> Parser<'a> {\n                                       \"`?` may only modify trait bounds, not lifetime bounds\");\n                     }\n                     bounds.push(RegionTyParamBound(self.expect_lifetime()));\n+                    if has_parens {\n+                        self.expect(&token::CloseDelim(token::Paren))?;\n+                        self.span_err(self.prev_span,\n+                                      \"parenthesized lifetime bounds are not supported\");\n+                    }\n                 } else {\n-                    let lo = self.span;\n                     let lifetime_defs = self.parse_late_bound_lifetime_defs()?;\n                     let path = self.parse_path(PathStyle::Type)?;\n+                    if has_parens {\n+                        self.expect(&token::CloseDelim(token::Paren))?;\n+                    }\n                     let poly_trait = PolyTraitRef::new(lifetime_defs, path, lo.to(self.prev_span));\n                     let modifier = if question.is_some() {\n                         TraitBoundModifier::Maybe\n@@ -4766,13 +4774,6 @@ impl<'a> Parser<'a> {\n                     };\n                     bounds.push(TraitTyParamBound(poly_trait, modifier));\n                 }\n-                if has_parens {\n-                    self.expect(&token::CloseDelim(token::Paren))?;\n-                    if let Some(&RegionTyParamBound(..)) = bounds.last() {\n-                        self.span_err(self.prev_span,\n-                                      \"parenthesized lifetime bounds are not supported\");\n-                    }\n-                }\n             } else {\n                 break\n             }"}, {"sha": "ec8a6b8ffdc9da328c4129ef218f827d888b237b", "filename": "src/test/ui/maybe-bounds.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a805a2a5ebba2802f432d79874e59c24e398f82a/src%2Ftest%2Fui%2Fmaybe-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a805a2a5ebba2802f432d79874e59c24e398f82a/src%2Ftest%2Fui%2Fmaybe-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmaybe-bounds.rs?ref=a805a2a5ebba2802f432d79874e59c24e398f82a", "patch": "@@ -10,7 +10,7 @@\n \n trait Tr: ?Sized {} //~ ERROR `?Trait` is not permitted in supertraits\n \n-type A1 = Tr + ?Sized; //~ ERROR `?Trait` is not permitted in trait object types\n-type A2 = for<'a> Tr + ?Sized; //~ ERROR `?Trait` is not permitted in trait object types\n+type A1 = Tr + (?Sized); //~ ERROR `?Trait` is not permitted in trait object types\n+type A2 = for<'a> Tr + (?Sized); //~ ERROR `?Trait` is not permitted in trait object types\n \n fn main() {}"}, {"sha": "db8f7ad816655145de7a24d163d1301916002666", "filename": "src/test/ui/maybe-bounds.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a805a2a5ebba2802f432d79874e59c24e398f82a/src%2Ftest%2Fui%2Fmaybe-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a805a2a5ebba2802f432d79874e59c24e398f82a/src%2Ftest%2Fui%2Fmaybe-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmaybe-bounds.stderr?ref=a805a2a5ebba2802f432d79874e59c24e398f82a", "patch": "@@ -1,22 +1,22 @@\n error: `?Trait` is not permitted in supertraits\n-  --> $DIR/maybe-bounds.rs:11:12\n+  --> $DIR/maybe-bounds.rs:11:11\n    |\n LL | trait Tr: ?Sized {} //~ ERROR `?Trait` is not permitted in supertraits\n-   |            ^^^^^\n+   |           ^^^^^^\n    |\n    = note: traits are `?Sized` by default\n \n error: `?Trait` is not permitted in trait object types\n-  --> $DIR/maybe-bounds.rs:13:17\n+  --> $DIR/maybe-bounds.rs:13:16\n    |\n-LL | type A1 = Tr + ?Sized; //~ ERROR `?Trait` is not permitted in trait object types\n-   |                 ^^^^^\n+LL | type A1 = Tr + (?Sized); //~ ERROR `?Trait` is not permitted in trait object types\n+   |                ^^^^^^^^\n \n error: `?Trait` is not permitted in trait object types\n-  --> $DIR/maybe-bounds.rs:14:25\n+  --> $DIR/maybe-bounds.rs:14:24\n    |\n-LL | type A2 = for<'a> Tr + ?Sized; //~ ERROR `?Trait` is not permitted in trait object types\n-   |                         ^^^^^\n+LL | type A2 = for<'a> Tr + (?Sized); //~ ERROR `?Trait` is not permitted in trait object types\n+   |                        ^^^^^^^^\n \n error: aborting due to 3 previous errors\n "}]}