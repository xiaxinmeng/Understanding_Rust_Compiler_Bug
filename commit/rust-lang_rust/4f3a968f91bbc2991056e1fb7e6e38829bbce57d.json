{"sha": "4f3a968f91bbc2991056e1fb7e6e38829bbce57d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmM2E5NjhmOTFiYmMyOTkxMDU2ZTFmYjdlNmUzODgyOWJiY2U1N2Q=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-04T21:58:31Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-05T00:21:35Z"}, "message": "better error message for macros with MOD_SEPs", "tree": {"sha": "31f439d206d2c000f5c714f7b77e1eaa964f1b41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31f439d206d2c000f5c714f7b77e1eaa964f1b41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f3a968f91bbc2991056e1fb7e6e38829bbce57d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3a968f91bbc2991056e1fb7e6e38829bbce57d", "html_url": "https://github.com/rust-lang/rust/commit/4f3a968f91bbc2991056e1fb7e6e38829bbce57d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f3a968f91bbc2991056e1fb7e6e38829bbce57d/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd34178b4b4c0dbd4d5e5fda44fbdd608b733b3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd34178b4b4c0dbd4d5e5fda44fbdd608b733b3a", "html_url": "https://github.com/rust-lang/rust/commit/dd34178b4b4c0dbd4d5e5fda44fbdd608b733b3a"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "ce8bf797ddba2c429d0720285ca1f1406fa56f44", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4f3a968f91bbc2991056e1fb7e6e38829bbce57d/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3a968f91bbc2991056e1fb7e6e38829bbce57d/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=4f3a968f91bbc2991056e1fb7e6e38829bbce57d", "patch": "@@ -38,10 +38,14 @@ pub fn expand_expr(extsbox: @mut SyntaxEnv,\n         // entry-point for all syntax extensions.\n         expr_mac(ref mac) => {\n             match (*mac).node {\n-                // Token-tree macros, these will be the only case when we're\n-                // finished transitioning.\n+                // Token-tree macros:\n                 mac_invoc_tt(pth, ref tts) => {\n-                    assert (vec::len(pth.idents) == 1u);\n+                    if (pth.idents.len() > 1u) {\n+                        cx.span_fatal(\n+                            pth.span,\n+                            fmt!(\"expected macro name without module \\\n+                                  separators, got: '%?'\",pth));\n+                    }\n                     /* using idents and token::special_idents would make the\n                     the macro names be hygienic */\n                     let extname = cx.parse_sess().interner.get(pth.idents[0]);\n@@ -320,8 +324,12 @@ pub fn expand_stmt(extsbox: @mut SyntaxEnv,\n         }\n         _ => return orig(s, sp, fld)\n     };\n-\n-    assert(vec::len(pth.idents) == 1u);\n+    if (pth.idents.len() > 1u) {\n+        cx.span_fatal(\n+            pth.span,\n+            fmt!(\"expected macro name without module \\\n+                  separators, got: '%?'\",pth));\n+    }\n     let extname = cx.parse_sess().interner.get(pth.idents[0]);\n     let (fully_expanded, sp) = match (*extsbox).find(&extname) {\n         None =>"}]}