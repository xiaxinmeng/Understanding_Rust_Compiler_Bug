{"sha": "451560e96c165bde1e76f727221b4499a8822e03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MTU2MGU5NmMxNjViZGUxZTc2ZjcyNzIyMWI0NDk5YTg4MjJlMDM=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-07-03T09:31:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-03T09:31:00Z"}, "message": "Rollup merge of #51914 - nikomatsakis:nll-fix-issue-issue-btreemap-annotations, r=gankro\n\nadd outlives annotations to `BTreeMap`\n\nNLL requires these annotations, I believe because of <https://github.com/rust-lang/rust/issues/29149>.\n\nFixes #48224\n\nr? @Gankro\ncc @lqd", "tree": {"sha": "e27a91937813ce9672c2d58325f22bc48ba39f91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e27a91937813ce9672c2d58325f22bc48ba39f91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/451560e96c165bde1e76f727221b4499a8822e03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbO0JUCRBK7hj4Ov3rIwAAdHIIAK2Asv34oyEpWx6Ejrccw87I\n7okGKmiE6CtaSjpY4AYOcOlsdVNCdyjc9LCkE/C+OPbW+oZzxoQFaIso52QriyqV\nlgrmhN3yXloCz6Aek50l1Bb5lmHbaF2lWrogxlUla3PURGA4YDH5A6Cr36E0mCb+\nnvwjrFtHxELiZV5JpnlZoISEC/0gLAE4NEPEHYQlbl8UMfBq2MFP5lQjJ2PODm9w\nntCXzUE2+GViDSuQGglK9Tm4MCpEXFdcnHr6KVTkQ1nLMQ6vuxWuM4nQNhQ+Hpy6\nkHntsvUe6eKeBDFG3X8QcoF5ZxV/sEOX4h6Tcf7Z200jPbo7PY+TzV+YtVFVJ5g=\n=jZwg\n-----END PGP SIGNATURE-----\n", "payload": "tree e27a91937813ce9672c2d58325f22bc48ba39f91\nparent a3fc979b6bf29edf02fe7f9930ca99c8e2d5d84c\nparent 59f2edbf1adfea256216cb7fb65d291d324ea857\nauthor Pietro Albini <pietro@pietroalbini.org> 1530610260 +0200\ncommitter GitHub <noreply@github.com> 1530610260 +0200\n\nRollup merge of #51914 - nikomatsakis:nll-fix-issue-issue-btreemap-annotations, r=gankro\n\nadd outlives annotations to `BTreeMap`\n\nNLL requires these annotations, I believe because of <https://github.com/rust-lang/rust/issues/29149>.\n\nFixes #48224\n\nr? @Gankro\ncc @lqd\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/451560e96c165bde1e76f727221b4499a8822e03", "html_url": "https://github.com/rust-lang/rust/commit/451560e96c165bde1e76f727221b4499a8822e03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/451560e96c165bde1e76f727221b4499a8822e03/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3fc979b6bf29edf02fe7f9930ca99c8e2d5d84c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3fc979b6bf29edf02fe7f9930ca99c8e2d5d84c", "html_url": "https://github.com/rust-lang/rust/commit/a3fc979b6bf29edf02fe7f9930ca99c8e2d5d84c"}, {"sha": "59f2edbf1adfea256216cb7fb65d291d324ea857", "url": "https://api.github.com/repos/rust-lang/rust/commits/59f2edbf1adfea256216cb7fb65d291d324ea857", "html_url": "https://github.com/rust-lang/rust/commit/59f2edbf1adfea256216cb7fb65d291d324ea857"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "8c950cd06d9e385373f56175d5253060c4e8390a", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/451560e96c165bde1e76f727221b4499a8822e03/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/451560e96c165bde1e76f727221b4499a8822e03/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=451560e96c165bde1e76f727221b4499a8822e03", "patch": "@@ -149,12 +149,11 @@ unsafe impl<#[may_dangle] K, #[may_dangle] V> Drop for BTreeMap<K, V> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<K: Clone, V: Clone> Clone for BTreeMap<K, V> {\n     fn clone(&self) -> BTreeMap<K, V> {\n-        fn clone_subtree<K: Clone, V: Clone>(node: node::NodeRef<marker::Immut,\n-                                                                 K,\n-                                                                 V,\n-                                                                 marker::LeafOrInternal>)\n-                                             -> BTreeMap<K, V> {\n-\n+        fn clone_subtree<'a, K: Clone, V: Clone>(\n+            node: node::NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal>\n+        ) -> BTreeMap<K, V>\n+        where K: 'a, V: 'a,\n+        {\n             match node.force() {\n                 Leaf(leaf) => {\n                     let mut out_tree = BTreeMap {\n@@ -1080,7 +1079,11 @@ impl<K: Ord, V> BTreeMap<K, V> {\n \n     /// Calculates the number of elements if it is incorrect.\n     fn recalc_length(&mut self) {\n-        fn dfs<K, V>(node: NodeRef<marker::Immut, K, V, marker::LeafOrInternal>) -> usize {\n+        fn dfs<'a, K, V>(\n+            node: NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal>\n+        ) -> usize\n+        where K: 'a, V: 'a\n+        {\n             let mut res = node.len();\n \n             if let Internal(node) = node.force() {"}]}