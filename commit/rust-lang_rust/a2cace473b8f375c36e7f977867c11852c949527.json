{"sha": "a2cace473b8f375c36e7f977867c11852c949527", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyY2FjZTQ3M2I4ZjM3NWMzNmU3Zjk3Nzg2N2MxMTg1MmM5NDk1Mjc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T17:36:37Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T17:36:37Z"}, "message": "manual: remove a mode.", "tree": {"sha": "76f853e69ece3c073fce1f9f1dc9c4b8e999c503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76f853e69ece3c073fce1f9f1dc9c4b8e999c503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2cace473b8f375c36e7f977867c11852c949527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cace473b8f375c36e7f977867c11852c949527", "html_url": "https://github.com/rust-lang/rust/commit/a2cace473b8f375c36e7f977867c11852c949527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2cace473b8f375c36e7f977867c11852c949527/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9cee7c2af5f3d2de06203d697b3890320a3dfc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9cee7c2af5f3d2de06203d697b3890320a3dfc6", "html_url": "https://github.com/rust-lang/rust/commit/c9cee7c2af5f3d2de06203d697b3890320a3dfc6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5707602ec9b8437eb8ff4439ed3aa90858140704", "filename": "doc/rust.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2cace473b8f375c36e7f977867c11852c949527/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/a2cace473b8f375c36e7f977867c11852c949527/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=a2cace473b8f375c36e7f977867c11852c949527", "patch": "@@ -1000,15 +1000,15 @@ An example of a pure function that uses an unsafe block:\n ~~~~ {.xfail-test}\n # use std::list::*;\n \n-fn pure_foldl<T, U: Copy>(ls: List<T>, u: U, f: fn(&&T, &&U) -> U) -> U {\n+fn pure_foldl<T, U: Copy>(ls: List<T>, u: U, f: fn(&T, &U) -> U) -> U {\n     match ls {\n       Nil => u,\n       Cons(hd, tl) => f(hd, pure_foldl(*tl, f(hd, u), f))\n     }\n }\n \n pure fn pure_length<T>(ls: List<T>) -> uint {\n-    fn count<T>(_t: T, &&u: uint) -> uint { u + 1u }\n+    fn count<T>(_t: &T, u: &uint) -> uint { *u + 1u }\n     unsafe {\n         pure_foldl(ls, 0u, count)\n     }"}]}