{"sha": "f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTA5ZDQzYzkwNDdjODQ2YWU4MzYxZDE2NTJhYzU0MDZjM2NmM2Q=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-04-18T00:13:19Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-04-24T18:37:51Z"}, "message": "Make cast_ptr_alignment ignore c_void", "tree": {"sha": "b8d8b59b87a79b3195ef2f0b4c84ffbbc203f776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8d8b59b87a79b3195ef2f0b4c84ffbbc203f776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "html_url": "https://github.com/rust-lang/rust/commit/f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faefb4f2256f2646d16ac91703d8451d26698db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/faefb4f2256f2646d16ac91703d8451d26698db4", "html_url": "https://github.com/rust-lang/rust/commit/faefb4f2256f2646d16ac91703d8451d26698db4"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "69c37bb63052a8e6011be722562b1f5d4fbbb363", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "patch": "@@ -13,7 +13,7 @@ use syntax::ast::{FloatTy, IntTy, UintTy};\n use syntax::codemap::Span;\n use syntax::errors::DiagnosticBuilder;\n use utils::{comparisons, higher, in_constant, in_external_macro, in_macro, last_path_segment, match_def_path, match_path,\n-            multispan_sugg, opt_def_id, same_tys, snippet, snippet_opt, span_help_and_lint, span_lint,\n+            match_type, multispan_sugg, opt_def_id, same_tys, snippet, snippet_opt, span_help_and_lint, span_lint,\n             span_lint_and_sugg, span_lint_and_then, clip, unsext, sext, int_bits};\n use utils::paths;\n use consts::{constant, Constant};\n@@ -981,6 +981,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n                 if let Some(from_align) = cx.layout_of(from_ptr_ty.ty).ok().map(|a| a.align.abi());\n                 if let Some(to_align) = cx.layout_of(to_ptr_ty.ty).ok().map(|a| a.align.abi());\n                 if from_align < to_align;\n+                // with c_void, we inherently need to trust the user\n+                if ! (\n+                    match_type(cx, from_ptr_ty.ty, &paths::C_VOID)\n+                    || match_type(cx, from_ptr_ty.ty, &paths::C_VOID_LIBC)\n+                );\n                 then {\n                     span_lint(\n                         cx,"}, {"sha": "fbc3cc303a8eeb786ee011f5bee9a20e89572a99", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "patch": "@@ -20,6 +20,8 @@ pub const CMP_MAX: [&str; 3] = [\"core\", \"cmp\", \"max\"];\n pub const CMP_MIN: [&str; 3] = [\"core\", \"cmp\", \"min\"];\n pub const COW: [&str; 3] = [\"alloc\", \"borrow\", \"Cow\"];\n pub const CSTRING_NEW: [&str; 5] = [\"std\", \"ffi\", \"c_str\", \"CString\", \"new\"];\n+pub const C_VOID: [&str; 4] = [\"std\", \"os\", \"raw\", \"c_void\"];\n+pub const C_VOID_LIBC: [&str; 2] = [\"libc\", \"c_void\"];\n pub const DEBUG_FMT_METHOD: [&str; 4] = [\"core\", \"fmt\", \"Debug\", \"fmt\"];\n pub const DEFAULT_TRAIT: [&str; 3] = [\"core\", \"default\", \"Default\"];\n pub const DISPLAY_FMT_METHOD: [&str; 4] = [\"core\", \"fmt\", \"Display\", \"fmt\"];"}, {"sha": "32e2f93169e2385a1b00b3e7e0c96f7c1ce81654", "filename": "tests/ui/cast_alignment.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/tests%2Fui%2Fcast_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/tests%2Fui%2Fcast_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.rs?ref=f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "patch": "@@ -1,5 +1,9 @@\n //! Test casts for alignment issues\n \n+#![feature(libc)]\n+\n+extern crate libc;\n+\n #[warn(cast_ptr_alignment)]\n #[allow(no_effect, unnecessary_operation, cast_lossless)]\n fn main() {\n@@ -16,4 +20,7 @@ fn main() {\n     // cast to less-strictly-aligned type\n     (&1u16 as *const u16) as *const u8;\n     (&mut 1u16 as *mut u16) as *mut u8;\n+    // For c_void, we should trust the user. See #2677\n+    (&1u32 as *const u32 as *const std::os::raw::c_void) as *const u32;\n+    (&1u32 as *const u32 as *const libc::c_void) as *const u32;\n }"}, {"sha": "42df78a37a68eb89aead1759891f0d7f5534eb58", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f0e09d43c9047c846ae8361d1652ac5406c3cf3d/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=f0e09d43c9047c846ae8361d1652ac5406c3cf3d", "patch": "@@ -1,15 +1,15 @@\n error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n- --> $DIR/cast_alignment.rs:9:5\n-  |\n-9 |     (&1u8 as *const u8) as *const u16;\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = note: `-D cast-ptr-alignment` implied by `-D warnings`\n+  --> $DIR/cast_alignment.rs:13:5\n+   |\n+13 |     (&1u8 as *const u8) as *const u16;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D cast-ptr-alignment` implied by `-D warnings`\n \n error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n-  --> $DIR/cast_alignment.rs:10:5\n+  --> $DIR/cast_alignment.rs:14:5\n    |\n-10 |     (&mut 1u8 as *mut u8) as *mut u16;\n+14 |     (&mut 1u8 as *mut u8) as *mut u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}]}