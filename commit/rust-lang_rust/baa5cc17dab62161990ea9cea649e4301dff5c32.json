{"sha": "baa5cc17dab62161990ea9cea649e4301dff5c32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYTVjYzE3ZGFiNjIxNjE5OTBlYTljZWE2NDllNDMwMWRmZjVjMzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-08T06:56:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-08T06:56:57Z"}, "message": "Auto merge of #5018 - JohnTitor:rustup-0108, r=phansch\n\nRustup to rust-lang/rust#67970\n\nchangelog: none", "tree": {"sha": "6a1deeb7d3b0ba7cd2109bcaef80379dc0997d1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a1deeb7d3b0ba7cd2109bcaef80379dc0997d1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baa5cc17dab62161990ea9cea649e4301dff5c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baa5cc17dab62161990ea9cea649e4301dff5c32", "html_url": "https://github.com/rust-lang/rust/commit/baa5cc17dab62161990ea9cea649e4301dff5c32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baa5cc17dab62161990ea9cea649e4301dff5c32/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c09206899656f5730f8007dbc86385122c34a9ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/c09206899656f5730f8007dbc86385122c34a9ca", "html_url": "https://github.com/rust-lang/rust/commit/c09206899656f5730f8007dbc86385122c34a9ca"}, {"sha": "fa33681d5c4b655679be0991cee43b5ea8905d3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa33681d5c4b655679be0991cee43b5ea8905d3c", "html_url": "https://github.com/rust-lang/rust/commit/fa33681d5c4b655679be0991cee43b5ea8905d3c"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "824e5554965f258a5f7b7aa473fd4414db56a921", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/baa5cc17dab62161990ea9cea649e4301dff5c32/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baa5cc17dab62161990ea9cea649e4301dff5c32/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=baa5cc17dab62161990ea9cea649e4301dff5c32", "patch": "@@ -9,6 +9,7 @@ use rustc::declare_lint_pass;\n use rustc::hir::intravisit::FnKind;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::traits;\n+use rustc::traits::misc::can_type_implement_copy;\n use rustc::ty::{self, RegionKind, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n@@ -205,7 +206,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                     let sugg = |db: &mut DiagnosticBuilder<'_>| {\n                         if let ty::Adt(def, ..) = ty.kind {\n                             if let Some(span) = cx.tcx.hir().span_if_local(def.did) {\n-                                if cx.param_env.can_type_implement_copy(cx.tcx, ty).is_ok() {\n+                                if can_type_implement_copy(cx.tcx, cx.param_env, ty).is_ok() {\n                                     db.span_help(span, \"consider marking this type as `Copy`\");\n                                 }\n                             }"}, {"sha": "1e6a57c6dfc98078455f23ea7d5a3d0ea0af861d", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/baa5cc17dab62161990ea9cea649e4301dff5c32/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baa5cc17dab62161990ea9cea649e4301dff5c32/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=baa5cc17dab62161990ea9cea649e4301dff5c32", "patch": "@@ -28,6 +28,7 @@ use matches::matches;\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc::lint::{LateContext, Level, Lint, LintContext};\n use rustc::traits;\n+use rustc::traits::predicate_for_trait_def;\n use rustc::ty::{\n     self,\n     layout::{self, IntegerExt},\n@@ -312,7 +313,8 @@ pub fn implements_trait<'a, 'tcx>(\n     ty_params: &[GenericArg<'tcx>],\n ) -> bool {\n     let ty = cx.tcx.erase_regions(&ty);\n-    let obligation = cx.tcx.predicate_for_trait_def(\n+    let obligation = predicate_for_trait_def(\n+        cx.tcx,\n         cx.param_env,\n         traits::ObligationCause::dummy(),\n         trait_id,"}]}