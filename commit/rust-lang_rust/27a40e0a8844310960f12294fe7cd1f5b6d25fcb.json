{"sha": "27a40e0a8844310960f12294fe7cd1f5b6d25fcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3YTQwZTBhODg0NDMxMDk2MGYxMjI5NGZlN2NkMWY1YjZkMjVmY2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T19:27:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T19:27:23Z"}, "message": "type param defaults", "tree": {"sha": "d526a1a0b8084ef0c67179c28fc4bbc273f481e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d526a1a0b8084ef0c67179c28fc4bbc273f481e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27a40e0a8844310960f12294fe7cd1f5b6d25fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27a40e0a8844310960f12294fe7cd1f5b6d25fcb", "html_url": "https://github.com/rust-lang/rust/commit/27a40e0a8844310960f12294fe7cd1f5b6d25fcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27a40e0a8844310960f12294fe7cd1f5b6d25fcb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72d49c5a107efdd6a2900183939935f0f6d13d5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/72d49c5a107efdd6a2900183939935f0f6d13d5b", "html_url": "https://github.com/rust-lang/rust/commit/72d49c5a107efdd6a2900183939935f0f6d13d5b"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "ba0d4bfe83f317d6b07b97a0debda07966275122", "filename": "src/parser/grammar/type_params.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/27a40e0a8844310960f12294fe7cd1f5b6d25fcb/src%2Fparser%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27a40e0a8844310960f12294fe7cd1f5b6d25fcb/src%2Fparser%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Ftype_params.rs?ref=27a40e0a8844310960f12294fe7cd1f5b6d25fcb", "patch": "@@ -40,6 +40,8 @@ pub(super) fn list(p: &mut Parser) {\n         let m = p.start();\n         p.bump();\n         if p.eat(COLON) {\n+            // test type_param_bounds\n+            // struct S<T: 'a + ?Sized + (Copy)>;\n             loop {\n                 let has_paren = p.eat(L_PAREN);\n                 p.eat(QUESTION);\n@@ -61,7 +63,10 @@ pub(super) fn list(p: &mut Parser) {\n                 }\n             }\n         }\n+        // test type_param_default\n+        // struct S<T = i32>;\n         if p.at(EQ) {\n+            p.bump();\n             types::type_(p)\n         }\n         m.complete(p, TYPE_PARAM);"}]}