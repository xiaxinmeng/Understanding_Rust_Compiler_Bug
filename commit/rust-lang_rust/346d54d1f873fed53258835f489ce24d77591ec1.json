{"sha": "346d54d1f873fed53258835f489ce24d77591ec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NmQ1NGQxZjg3M2ZlZDUzMjU4ODM1ZjQ4OWNlMjRkNzc1OTFlYzE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-06T23:18:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-06T23:18:12Z"}, "message": "Rollup merge of #76344 - camelid:patch-6, r=KodrAus\n\nImprove docs for `std::env::args()`\n\n@rustbot modify labels: T-doc", "tree": {"sha": "66e4fc0671d4dd53886c43227de0fcc81b20f115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66e4fc0671d4dd53886c43227de0fcc81b20f115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346d54d1f873fed53258835f489ce24d77591ec1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfVW40CRBK7hj4Ov3rIwAAdHIIAK7ake/P6Jri6Wb5aCbcXSud\neabquETBnmyA43KJ0aiAsXj40l5obbtqxqngePHil2yD2qCPiXQLjmF8QqNiJPSv\nmZevlgt36uC1TplnXnGXVmVu6JsNlRB3MOMI3CKdIMn0uLydpPZ38YCZL/1YFcf6\nR17QysCQPI+9VJlv3d3JOF6ozdo3AlF8m+ALfBz4cxlVzT34fjjopX26MWIHkU/q\n1Jt87/fSywUnfGoOONNk1LpcyyUW0Y2S8/a3kKXC/kX4ad8QH1xHVDclCHzsosn1\nFchHu+d7ZyXfD0gjOx1aPYz9ZP5J23LaJg4nZCN8tGD5/jqzPmBdCBrhuOptulE=\n=jucj\n-----END PGP SIGNATURE-----\n", "payload": "tree 66e4fc0671d4dd53886c43227de0fcc81b20f115\nparent 1db9290a83985f3000aa3af6ccf529275e29be6e\nparent 85b11d50b28137b5dbd739af4c59aee94ace7617\nauthor Dylan DPC <dylan.dpc@gmail.com> 1599434292 +0200\ncommitter GitHub <noreply@github.com> 1599434292 +0200\n\nRollup merge of #76344 - camelid:patch-6, r=KodrAus\n\nImprove docs for `std::env::args()`\n\n@rustbot modify labels: T-doc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346d54d1f873fed53258835f489ce24d77591ec1", "html_url": "https://github.com/rust-lang/rust/commit/346d54d1f873fed53258835f489ce24d77591ec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346d54d1f873fed53258835f489ce24d77591ec1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db9290a83985f3000aa3af6ccf529275e29be6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db9290a83985f3000aa3af6ccf529275e29be6e", "html_url": "https://github.com/rust-lang/rust/commit/1db9290a83985f3000aa3af6ccf529275e29be6e"}, {"sha": "85b11d50b28137b5dbd739af4c59aee94ace7617", "url": "https://api.github.com/repos/rust-lang/rust/commits/85b11d50b28137b5dbd739af4c59aee94ace7617", "html_url": "https://github.com/rust-lang/rust/commit/85b11d50b28137b5dbd739af4c59aee94ace7617"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b0fceb9b2f669731fe6294d1682885b05be54ecd", "filename": "library/std/src/env.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/346d54d1f873fed53258835f489ce24d77591ec1/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346d54d1f873fed53258835f489ce24d77591ec1/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=346d54d1f873fed53258835f489ce24d77591ec1", "patch": "@@ -695,21 +695,21 @@ pub struct ArgsOs {\n     inner: sys::args::Args,\n }\n \n-/// Returns the arguments which this program was started with (normally passed\n+/// Returns the arguments that this program was started with (normally passed\n /// via the command line).\n ///\n /// The first element is traditionally the path of the executable, but it can be\n /// set to arbitrary text, and may not even exist. This means this property should\n /// not be relied upon for security purposes.\n ///\n-/// On Unix systems shell usually expands unquoted arguments with glob patterns\n+/// On Unix systems the shell usually expands unquoted arguments with glob patterns\n /// (such as `*` and `?`). On Windows this is not done, and such arguments are\n /// passed as-is.\n ///\n-/// On glibc Linux systems, arguments are retrieved by placing a function in \".init_array\".\n-/// Glibc passes argc, argv, and envp to functions in \".init_array\", as a non-standard extension.\n-/// This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it does on macOS\n-/// and Windows.\n+/// On glibc Linux systems, arguments are retrieved by placing a function in `.init_array`.\n+/// Glibc passes `argc`, `argv`, and `envp` to functions in `.init_array`, as a non-standard\n+/// extension. This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it\n+/// does on macOS and Windows.\n ///\n /// # Panics\n ///"}]}