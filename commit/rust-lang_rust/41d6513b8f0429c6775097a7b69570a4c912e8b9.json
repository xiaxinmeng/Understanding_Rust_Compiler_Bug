{"sha": "41d6513b8f0429c6775097a7b69570a4c912e8b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZDY1MTNiOGYwNDI5YzY3NzUwOTdhN2I2OTU3MGE0YzkxMmU4Yjk=", "commit": {"author": {"name": "Brian Leibig", "email": "brian@brianleibig.com", "date": "2015-02-11T00:10:05Z"}, "committer": {"name": "Brian Leibig", "email": "brian@brianleibig.com", "date": "2015-02-11T01:59:01Z"}, "message": "Bison grammar: add qualified path expressions", "tree": {"sha": "0a1c276843972910f5b861105d1a5a89e0482aa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a1c276843972910f5b861105d1a5a89e0482aa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41d6513b8f0429c6775097a7b69570a4c912e8b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41d6513b8f0429c6775097a7b69570a4c912e8b9", "html_url": "https://github.com/rust-lang/rust/commit/41d6513b8f0429c6775097a7b69570a4c912e8b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41d6513b8f0429c6775097a7b69570a4c912e8b9/comments", "author": {"login": "bleibig", "id": 1253302, "node_id": "MDQ6VXNlcjEyNTMzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1253302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bleibig", "html_url": "https://github.com/bleibig", "followers_url": "https://api.github.com/users/bleibig/followers", "following_url": "https://api.github.com/users/bleibig/following{/other_user}", "gists_url": "https://api.github.com/users/bleibig/gists{/gist_id}", "starred_url": "https://api.github.com/users/bleibig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bleibig/subscriptions", "organizations_url": "https://api.github.com/users/bleibig/orgs", "repos_url": "https://api.github.com/users/bleibig/repos", "events_url": "https://api.github.com/users/bleibig/events{/privacy}", "received_events_url": "https://api.github.com/users/bleibig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bleibig", "id": 1253302, "node_id": "MDQ6VXNlcjEyNTMzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1253302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bleibig", "html_url": "https://github.com/bleibig", "followers_url": "https://api.github.com/users/bleibig/followers", "following_url": "https://api.github.com/users/bleibig/following{/other_user}", "gists_url": "https://api.github.com/users/bleibig/gists{/gist_id}", "starred_url": "https://api.github.com/users/bleibig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bleibig/subscriptions", "organizations_url": "https://api.github.com/users/bleibig/orgs", "repos_url": "https://api.github.com/users/bleibig/repos", "events_url": "https://api.github.com/users/bleibig/events{/privacy}", "received_events_url": "https://api.github.com/users/bleibig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6bb17acf1645828f816c4f0165ccaa2b6c73f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6bb17acf1645828f816c4f0165ccaa2b6c73f6", "html_url": "https://github.com/rust-lang/rust/commit/ad6bb17acf1645828f816c4f0165ccaa2b6c73f6"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "26168f6f5cbd9553fc61f3a82b27e993faf55b93", "filename": "src/grammar/parser-lalr.y", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/41d6513b8f0429c6775097a7b69570a4c912e8b9/src%2Fgrammar%2Fparser-lalr.y", "raw_url": "https://github.com/rust-lang/rust/raw/41d6513b8f0429c6775097a7b69570a4c912e8b9/src%2Fgrammar%2Fparser-lalr.y", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fparser-lalr.y?ref=41d6513b8f0429c6775097a7b69570a4c912e8b9", "patch": "@@ -1309,6 +1309,7 @@ nonblock_expr\n | nonblock_expr AS ty                                           { $$ = mk_node(\"ExprCast\", 2, $1, $3); }\n | BOX nonparen_expr                                             { $$ = mk_node(\"ExprBox\", 1, $2); }\n | %prec BOXPLACE BOX '(' maybe_expr ')' nonblock_expr           { $$ = mk_node(\"ExprBox\", 2, $3, $5); }\n+| expr_qualified_path\n | nonblock_prefix_expr\n ;\n \n@@ -1367,6 +1368,7 @@ expr\n | expr AS ty                                          { $$ = mk_node(\"ExprCast\", 2, $1, $3); }\n | BOX nonparen_expr                                   { $$ = mk_node(\"ExprBox\", 1, $2); }\n | %prec BOXPLACE BOX '(' maybe_expr ')' expr          { $$ = mk_node(\"ExprBox\", 2, $3, $5); }\n+| expr_qualified_path\n | block_expr\n | block\n | nonblock_prefix_expr\n@@ -1426,6 +1428,7 @@ nonparen_expr\n | nonparen_expr AS ty                                 { $$ = mk_node(\"ExprCast\", 2, $1, $3); }\n | BOX nonparen_expr                                   { $$ = mk_node(\"ExprBox\", 1, $2); }\n | %prec BOXPLACE BOX '(' maybe_expr ')' expr          { $$ = mk_node(\"ExprBox\", 1, $3, $5); }\n+| expr_qualified_path\n | block_expr\n | block\n | nonblock_prefix_expr\n@@ -1485,6 +1488,7 @@ expr_nostruct\n | expr_nostruct AS ty                                 { $$ = mk_node(\"ExprCast\", 2, $1, $3); }\n | BOX nonparen_expr                                   { $$ = mk_node(\"ExprBox\", 1, $2); }\n | %prec BOXPLACE BOX '(' maybe_expr ')' expr_nostruct { $$ = mk_node(\"ExprBox\", 1, $3, $5); }\n+| expr_qualified_path\n | block_expr\n | block\n | nonblock_prefix_expr_nostruct\n@@ -1512,6 +1516,33 @@ nonblock_prefix_expr\n | proc_expr\n ;\n \n+expr_qualified_path\n+: '<' ty_sum AS trait_ref '>' MOD_SEP ident\n+{\n+  $$ = mk_node(\"ExprQualifiedPath\", 3, $2, $4, $7);\n+}\n+| '<' ty_sum AS trait_ref '>' MOD_SEP ident generic_args\n+{\n+  $$ = mk_node(\"ExprQualifiedPath\", 4, $2, $4, $7, $8);\n+}\n+| SHL ty_sum AS trait_ref '>' MOD_SEP ident AS trait_ref '>' MOD_SEP ident\n+{\n+  $$ = mk_node(\"ExprQualifiedPath\", 3, mk_node(\"ExprQualifiedPath\", 3, $2, $4, $7), $9, $12);\n+}\n+| SHL ty_sum AS trait_ref '>' MOD_SEP ident generic_args AS trait_ref '>' MOD_SEP ident\n+{\n+  $$ = mk_node(\"ExprQualifiedPath\", 3, mk_node(\"ExprQualifiedPath\", 4, $2, $4, $7, $8), $10, $13);\n+}\n+| SHL ty_sum AS trait_ref '>' MOD_SEP ident AS trait_ref '>' MOD_SEP ident generic_args\n+{\n+  $$ = mk_node(\"ExprQualifiedPath\", 4, mk_node(\"ExprQualifiedPath\", 3, $2, $4, $7), $9, $12, $13);\n+}\n+| SHL ty_sum AS trait_ref '>' MOD_SEP ident generic_args AS trait_ref '>' MOD_SEP ident generic_args\n+{\n+  $$ = mk_node(\"ExprQualifiedPath\", 4, mk_node(\"ExprQualifiedPath\", 4, $2, $4, $7, $8), $10, $13, $14);\n+}\n+\n+\n lambda_expr\n : %prec LAMBDA\n   OROR ret_ty expr                                        { $$ = mk_node(\"ExprFnBlock\", 3, mk_none(), $2, $3); }"}]}