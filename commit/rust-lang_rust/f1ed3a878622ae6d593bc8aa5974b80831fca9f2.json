{"sha": "f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZWQzYTg3ODYyMmFlNmQ1OTNiYzhhYTU5NzRiODA4MzFmY2E5ZjI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-10-13T09:28:19Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-10-13T12:35:14Z"}, "message": "s/FuncId/Function", "tree": {"sha": "dd678f21d5d9f5358e546838633ef3aa48026e7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd678f21d5d9f5358e546838633ef3aa48026e7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "html_url": "https://github.com/rust-lang/rust/commit/f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c", "html_url": "https://github.com/rust-lang/rust/commit/5f6ddb94a619ba12f83549a65d0e6167e2c08c1c"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "98be0ae44335f14723e212d60012aa8a25d5f54c", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -52,7 +52,7 @@ const UNNAMED: *const c_char = EMPTY_C_STR.as_ptr();\n \n impl BackendTypes for Builder<'_, 'll, 'tcx> {\n     type Value = <CodegenCx<'ll, 'tcx> as BackendTypes>::Value;\n-    type FuncId = <CodegenCx<'ll, 'tcx> as BackendTypes>::FuncId;\n+    type Function = <CodegenCx<'ll, 'tcx> as BackendTypes>::Function;\n     type BasicBlock = <CodegenCx<'ll, 'tcx> as BackendTypes>::BasicBlock;\n     type Type = <CodegenCx<'ll, 'tcx> as BackendTypes>::Type;\n     type Funclet = <CodegenCx<'ll, 'tcx> as BackendTypes>::Funclet;"}, {"sha": "01055bedc682b40b2d9d10b53736148bd574ed12", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -86,7 +86,7 @@ impl Funclet<'ll> {\n \n impl BackendTypes for CodegenCx<'ll, 'tcx> {\n     type Value = &'ll Value;\n-    type FuncId = &'ll Value;\n+    type Function = &'ll Value;\n \n     type BasicBlock = &'ll BasicBlock;\n     type Type = &'ll Type;"}, {"sha": "a09a0c22c1ba5ec8dbd1918c809ee71fbde5fa99", "filename": "src/librustc_codegen_ssa/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FREADME.md?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -84,7 +84,7 @@ pub trait BuilderMethods<'a, 'tcx>:\n {\n     fn new_block<'b>(\n         cx: &'a Self::CodegenCx,\n-        llfn: Self::FuncId,\n+        llfn: Self::Function,\n         name: &'b str\n     ) -> Self;\n     /* ... */"}, {"sha": "1a2e796a5b7be6adc44b375316295c035d5ed2c9", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -30,7 +30,7 @@ pub struct FunctionCx<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> {\n \n     debug_context: FunctionDebugContext<Bx::DIScope>,\n \n-    llfn: Bx::FuncId,\n+    llfn: Bx::Function,\n \n     cx: &'a Bx::CodegenCx,\n \n@@ -183,7 +183,7 @@ impl<'a, 'tcx, V: CodegenObject> LocalRef<'tcx, V> {\n \n pub fn codegen_mir<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     cx: &'a Bx::CodegenCx,\n-    llfn: Bx::FuncId,\n+    llfn: Bx::Function,\n     mir: &'a Body<'tcx>,\n     instance: Instance<'tcx>,\n     sig: ty::FnSig<'tcx>,"}, {"sha": "a7faf4eaf10227de4c1297c3422c6c793ced34a8", "filename": "src/librustc_codegen_ssa/traits/backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -14,7 +14,7 @@ use syntax_pos::symbol::InternedString;\n \n pub trait BackendTypes {\n     type Value: CodegenObject;\n-    type FuncId: CodegenObject;\n+    type Function: CodegenObject;\n \n     type BasicBlock: Copy;\n     type Type: CodegenObject;"}, {"sha": "62b5bcbb6c9dcff67c89e7899ae4d0a50c0e7951", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -34,7 +34,7 @@ pub trait BuilderMethods<'a, 'tcx>:\n     + HasTargetSpec\n \n {\n-    fn new_block<'b>(cx: &'a Self::CodegenCx, llfn: Self::FuncId, name: &'b str) -> Self;\n+    fn new_block<'b>(cx: &'a Self::CodegenCx, llfn: Self::Function, name: &'b str) -> Self;\n     fn with_cx(cx: &'a Self::CodegenCx) -> Self;\n     fn build_sibling_block(&self, name: &str) -> Self;\n     fn cx(&self) -> &Self::CodegenCx;"}, {"sha": "989e6cf9dcaf1ea57aad2df096189b725a1adab8", "filename": "src/librustc_codegen_ssa/traits/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -20,7 +20,7 @@ pub trait DebugInfoMethods<'tcx>: BackendTypes {\n         &self,\n         instance: Instance<'tcx>,\n         sig: ty::FnSig<'tcx>,\n-        llfn: Self::FuncId,\n+        llfn: Self::Function,\n         mir: &mir::Body<'_>,\n     ) -> FunctionDebugContext<Self::DIScope>;\n "}, {"sha": "cd42044e48df8cf6d6c5cf0dfa458acc50c31b85", "filename": "src/librustc_codegen_ssa/traits/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -17,13 +17,13 @@ pub trait DeclareMethods<'tcx>: BackendTypes {\n     ///\n     /// If there\u2019s a value with the same name already declared, the function will\n     /// update the declaration and return existing Value instead.\n-    fn declare_cfn(&self, name: &str, fn_type: Self::Type) -> Self::FuncId;\n+    fn declare_cfn(&self, name: &str, fn_type: Self::Type) -> Self::Function;\n \n     /// Declare a Rust function.\n     ///\n     /// If there\u2019s a value with the same name already declared, the function will\n     /// update the declaration and return existing Value instead.\n-    fn declare_fn(&self, name: &str, sig: ty::PolyFnSig<'tcx>) -> Self::FuncId;\n+    fn declare_fn(&self, name: &str, sig: ty::PolyFnSig<'tcx>) -> Self::Function;\n \n     /// Declare a global with an intention to define it.\n     ///"}, {"sha": "fc704d55fd9bee096abd792611b2a8c969758e2c", "filename": "src/librustc_codegen_ssa/traits/misc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -11,14 +11,14 @@ pub trait MiscMethods<'tcx>: BackendTypes {\n         &self,\n     ) -> &RefCell<FxHashMap<(Ty<'tcx>, Option<ty::PolyExistentialTraitRef<'tcx>>), Self::Value>>;\n     fn check_overflow(&self) -> bool;\n-    fn instances(&self) -> &RefCell<FxHashMap<Instance<'tcx>, Self::FuncId>>;\n+    fn instances(&self) -> &RefCell<FxHashMap<Instance<'tcx>, Self::Function>>;\n     fn get_fn(&self, instance: Instance<'tcx>) -> Self::Value;\n     fn eh_personality(&self) -> Self::Value;\n     fn eh_unwind_resume(&self) -> Self::Value;\n     fn sess(&self) -> &Session;\n     fn codegen_unit(&self) -> &Arc<CodegenUnit<'tcx>>;\n     fn used_statics(&self) -> &RefCell<Vec<Self::Value>>;\n-    fn set_frame_pointer_elimination(&self, llfn: Self::FuncId);\n-    fn apply_target_cpu_attr(&self, llfn: Self::FuncId);\n+    fn set_frame_pointer_elimination(&self, llfn: Self::Function);\n+    fn apply_target_cpu_attr(&self, llfn: Self::Function);\n     fn create_used_variable(&self);\n }"}, {"sha": "4318ef16494a11194af39f0c434f3488106909ec", "filename": "src/librustc_codegen_ssa/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ed3a878622ae6d593bc8aa5974b80831fca9f2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs?ref=f1ed3a878622ae6d593bc8aa5974b80831fca9f2", "patch": "@@ -88,7 +88,7 @@ pub trait HasCodegen<'tcx>:\n     type CodegenCx: CodegenMethods<'tcx>\n         + BackendTypes<\n             Value = Self::Value,\n-            FuncId = Self::FuncId,\n+            Function = Self::Function,\n             BasicBlock = Self::BasicBlock,\n             Type = Self::Type,\n             Funclet = Self::Funclet,"}]}