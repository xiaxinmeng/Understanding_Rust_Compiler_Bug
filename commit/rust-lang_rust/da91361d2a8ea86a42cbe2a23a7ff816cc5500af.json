{"sha": "da91361d2a8ea86a42cbe2a23a7ff816cc5500af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhOTEzNjFkMmE4ZWE4NmE0MmNiZTJhMjNhN2ZmODE2Y2M1NTAwYWY=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-05-06T03:50:48Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-05-06T03:50:48Z"}, "message": "Add reverse benchmarks for u128, [u8;3], and Simd<[f64;4]>\n\nNone of these are affected by e8fad325fe.", "tree": {"sha": "a5d74b66b7b90bbcac659ec16cd41b4b67920993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5d74b66b7b90bbcac659ec16cd41b4b67920993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da91361d2a8ea86a42cbe2a23a7ff816cc5500af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da91361d2a8ea86a42cbe2a23a7ff816cc5500af", "html_url": "https://github.com/rust-lang/rust/commit/da91361d2a8ea86a42cbe2a23a7ff816cc5500af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da91361d2a8ea86a42cbe2a23a7ff816cc5500af/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f891d11f5ff64e1f2e9cba79f1069f7a8d13c7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f891d11f5ff64e1f2e9cba79f1069f7a8d13c7f", "html_url": "https://github.com/rust-lang/rust/commit/1f891d11f5ff64e1f2e9cba79f1069f7a8d13c7f"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "9f356e4b57912af410b56fcb4f4b7903a4c27c88", "filename": "src/libcollections/benches/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da91361d2a8ea86a42cbe2a23a7ff816cc5500af/src%2Flibcollections%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da91361d2a8ea86a42cbe2a23a7ff816cc5500af/src%2Flibcollections%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbenches%2Flib.rs?ref=da91361d2a8ea86a42cbe2a23a7ff816cc5500af", "patch": "@@ -10,7 +10,9 @@\n \n #![deny(warnings)]\n \n+#![feature(i128_type)]\n #![feature(rand)]\n+#![feature(repr_simd)]\n #![feature(sort_unstable)]\n #![feature(test)]\n "}, {"sha": "0079f2d01036cf76d5fa956a75ce7acdb0ec127f", "filename": "src/libcollections/benches/slice.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/da91361d2a8ea86a42cbe2a23a7ff816cc5500af/src%2Flibcollections%2Fbenches%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da91361d2a8ea86a42cbe2a23a7ff816cc5500af/src%2Flibcollections%2Fbenches%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbenches%2Fslice.rs?ref=da91361d2a8ea86a42cbe2a23a7ff816cc5500af", "patch": "@@ -292,22 +292,26 @@ sort!(sort_unstable, sort_unstable_large_strings, gen_strings, 10000);\n sort_expensive!(sort_unstable_by, sort_unstable_large_random_expensive, gen_random, 10000);\n \n macro_rules! reverse {\n-    ($name:ident, $ty:ident) => {\n+    ($name:ident, $ty:ty, $f:expr) => {\n         #[bench]\n         fn $name(b: &mut Bencher) {\n             // odd length and offset by 1 to be as unaligned as possible\n             let n = 0xFFFFF;\n             let mut v: Vec<_> =\n                 (0..1+(n / mem::size_of::<$ty>() as u64))\n-                .map(|x| x as $ty)\n+                .map($f)\n                 .collect();\n             b.iter(|| black_box(&mut v[1..]).reverse());\n             b.bytes = n;\n         }\n     }\n }\n \n-reverse!(reverse_u8, u8);\n-reverse!(reverse_u16, u16);\n-reverse!(reverse_u32, u32);\n-reverse!(reverse_u64, u64);\n+reverse!(reverse_u8, u8, |x| x as u8);\n+reverse!(reverse_u16, u16, |x| x as u16);\n+reverse!(reverse_u8x3, [u8;3], |x| [x as u8, (x>>8) as u8, (x>>16) as u8]);\n+reverse!(reverse_u32, u32, |x| x as u32);\n+reverse!(reverse_u64, u64, |x| x as u64);\n+reverse!(reverse_u128, u128, |x| x as u128);\n+#[repr(simd)] struct F64x4(f64, f64, f64, f64);\n+reverse!(reverse_simd_f64x4, F64x4, |x| { let x = x as f64; F64x4(x,x,x,x) });"}]}