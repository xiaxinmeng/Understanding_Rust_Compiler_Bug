{"sha": "991da05c32c98ec58f2f312b6dca96d998dbaf34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MWRhMDVjMzJjOThlYzU4ZjJmMzEyYjZkY2E5NmQ5OThkYmFmMzQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-20T19:30:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-20T19:30:18Z"}, "message": "Rollup merge of #74051 - yodaldevoid:issue_60814, r=nikomatsakis\n\ndisallow non-static lifetimes in const generics\n\nDisallow non-static lifetimes in const generics in order to to patch over an ICE caused when we encounter a non-static lifetime in a const generic during borrow checking. This restriction may be relaxed in the future, but we need more discussion before then, and in the meantime we should still deal with this ICE.\n\nFixes issue #60814", "tree": {"sha": "b1fda1c2a39b52180b11aae32065ee47afb90a68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1fda1c2a39b52180b11aae32065ee47afb90a68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/991da05c32c98ec58f2f312b6dca96d998dbaf34", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfFfDKCRBK7hj4Ov3rIwAAdHIIAKoooeEV0U98pNg0mI/QrRj4\nYvwdF2RGIgbHS+nAsBsuvojDDhepvU7+zdvi9ZwGj+lVMVZoDesYw2G/WDBU0ixw\nRJHK8nMDrP5x8UZsMMNtMvDgcRCq/gItKIqMbf6GgUwtIRaK+8jCQaQKJ+KEd1I9\nc2MIajM+y6/W/7Gy8Zd7tblgl4TDI9Syk6tQVA4RPcXwTIUrxDERVglyRzx1lwmf\nZhZIYtH8bueHHmDqobJ7LtPqT26uKWufDHrgMZjs9ZiZ6JR/eqMlpxlNecscgdSB\n3XX/zorpSesQWjl96DPUlN9HUtkYD/D2DJIBRDZwHYNWNVJq9UzOzmrjGMoI4/8=\n=q94h\n-----END PGP SIGNATURE-----\n", "payload": "tree b1fda1c2a39b52180b11aae32065ee47afb90a68\nparent 0897bc2403946f2d07df842292d5a6e2b5e5f4ec\nparent c60a0356585d7b0378f50b129e7c7bcfa739f640\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595273418 -0700\ncommitter GitHub <noreply@github.com> 1595273418 -0700\n\nRollup merge of #74051 - yodaldevoid:issue_60814, r=nikomatsakis\n\ndisallow non-static lifetimes in const generics\n\nDisallow non-static lifetimes in const generics in order to to patch over an ICE caused when we encounter a non-static lifetime in a const generic during borrow checking. This restriction may be relaxed in the future, but we need more discussion before then, and in the meantime we should still deal with this ICE.\n\nFixes issue #60814\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/991da05c32c98ec58f2f312b6dca96d998dbaf34", "html_url": "https://github.com/rust-lang/rust/commit/991da05c32c98ec58f2f312b6dca96d998dbaf34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/991da05c32c98ec58f2f312b6dca96d998dbaf34/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0897bc2403946f2d07df842292d5a6e2b5e5f4ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/0897bc2403946f2d07df842292d5a6e2b5e5f4ec", "html_url": "https://github.com/rust-lang/rust/commit/0897bc2403946f2d07df842292d5a6e2b5e5f4ec"}, {"sha": "c60a0356585d7b0378f50b129e7c7bcfa739f640", "url": "https://api.github.com/repos/rust-lang/rust/commits/c60a0356585d7b0378f50b129e7c7bcfa739f640", "html_url": "https://github.com/rust-lang/rust/commit/c60a0356585d7b0378f50b129e7c7bcfa739f640"}], "stats": {"total": 109, "additions": 109, "deletions": 0}, "files": [{"sha": "279c65ce03d2dabaf251f463202f368256fd1461", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -453,6 +453,7 @@ E0767: include_str!(\"./error_codes/E0767.md\"),\n E0768: include_str!(\"./error_codes/E0768.md\"),\n E0769: include_str!(\"./error_codes/E0769.md\"),\n E0770: include_str!(\"./error_codes/E0770.md\"),\n+E0771: include_str!(\"./error_codes/E0771.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "824a955f6b3f48933d115c511d9ff4649c807caa", "filename": "src/librustc_error_codes/error_codes/E0771.md", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_error_codes%2Ferror_codes%2FE0771.md", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_error_codes%2Ferror_codes%2FE0771.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0771.md?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -0,0 +1,23 @@\n+A non-`'static` lifetime was used in a const generic. This is currently not\n+allowed.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0771\n+#![feature(const_generics)]\n+\n+fn function_with_str<'a, const STRING: &'a str>() {} // error!\n+```\n+\n+To fix this issue, the lifetime in the const generic need to be changed to\n+`'static`:\n+\n+```\n+#![feature(const_generics)]\n+\n+fn function_with_str<const STRING: &'static str>() {} // ok!\n+```\n+\n+For more information, see [GitHub issue #74052].\n+\n+[GitHub issue #74052]: https://github.com/rust-lang/rust/issues/74052"}, {"sha": "c86b414184759114559e253ac9c4ed78d7b357e3", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -1141,6 +1141,24 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n         err.emit();\n     }\n \n+    // FIXME(const_generics): This patches over a ICE caused by non-'static lifetimes in const\n+    // generics. We are disallowing this until we can decide on how we want to handle non-'static\n+    // lifetimes in const generics. See issue #74052 for discussion.\n+    crate fn emit_non_static_lt_in_const_generic_error(&self, lifetime_ref: &hir::Lifetime) {\n+        let mut err = struct_span_err!(\n+            self.tcx.sess,\n+            lifetime_ref.span,\n+            E0771,\n+            \"use of non-static lifetime `{}` in const generic\",\n+            lifetime_ref\n+        );\n+        err.note(\n+            \"for more information, see issue #74052 \\\n+            <https://github.com/rust-lang/rust/issues/74052>\",\n+        );\n+        err.emit();\n+    }\n+\n     crate fn is_trait_ref_fn_scope(&mut self, trait_ref: &'tcx hir::PolyTraitRef<'tcx>) -> bool {\n         if let def::Res::Def(_, did) = trait_ref.trait_ref.path.res {\n             if ["}, {"sha": "6009e48a54f5ef028f9e4530a93af01e05c362e5", "filename": "src/librustc_resolve/late/lifetimes.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -173,6 +173,8 @@ crate struct LifetimeContext<'a, 'tcx> {\n     /// Used to disallow the use of in-band lifetimes in `fn` or `Fn` syntax.\n     is_in_fn_syntax: bool,\n \n+    is_in_const_generic: bool,\n+\n     /// List of labels in the function/method currently under analysis.\n     labels_in_fn: Vec<Ident>,\n \n@@ -333,6 +335,7 @@ fn krate(tcx: TyCtxt<'_>) -> NamedRegionMap {\n             scope: ROOT_SCOPE,\n             trait_ref_hack: false,\n             is_in_fn_syntax: false,\n+            is_in_const_generic: false,\n             labels_in_fn: vec![],\n             xcrate_object_lifetime_defaults: Default::default(),\n             lifetime_uses: &mut Default::default(),\n@@ -828,6 +831,10 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n             self.insert_lifetime(lifetime_ref, Region::Static);\n             return;\n         }\n+        if self.is_in_const_generic && lifetime_ref.name != LifetimeName::Error {\n+            self.emit_non_static_lt_in_const_generic_error(lifetime_ref);\n+            return;\n+        }\n         self.resolve_lifetime_ref(lifetime_ref);\n     }\n \n@@ -860,8 +867,11 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                     }\n                 }\n                 GenericParamKind::Const { ref ty, .. } => {\n+                    let was_in_const_generic = self.is_in_const_generic;\n+                    self.is_in_const_generic = true;\n                     walk_list!(self, visit_param_bound, param.bounds);\n                     self.visit_ty(&ty);\n+                    self.is_in_const_generic = was_in_const_generic;\n                 }\n             }\n         }\n@@ -1317,6 +1327,7 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n             scope: &wrap_scope,\n             trait_ref_hack: self.trait_ref_hack,\n             is_in_fn_syntax: self.is_in_fn_syntax,\n+            is_in_const_generic: self.is_in_const_generic,\n             labels_in_fn,\n             xcrate_object_lifetime_defaults,\n             lifetime_uses,"}, {"sha": "bc09ba2ab553bbec5fb1cfbef12a853c9a22344a", "filename": "src/test/ui/const-generics/const-argument-non-static-lifetime.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-non-static-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-non-static-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-non-static-lifetime.rs?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -0,0 +1,17 @@\n+// run-pass\n+\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete\n+#![allow(dead_code)]\n+\n+fn test<const N: usize>() {}\n+\n+fn wow<'a>() -> &'a () {\n+    test::<{\n+        let _: &'a ();\n+        3\n+    }>();\n+    &()\n+}\n+\n+fn main() {}"}, {"sha": "53a7550090d44e7b8fcc147ec31c226203e1374b", "filename": "src/test/ui/const-generics/const-argument-non-static-lifetime.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-non-static-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-non-static-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-non-static-lifetime.stderr?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/const-argument-non-static-lifetime.rs:3:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n+\n+warning: 1 warning emitted\n+"}, {"sha": "ba3592719408c5bc997e51a4076312a5f7766cd1", "filename": "src/test/ui/error-codes/E0771.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Ferror-codes%2FE0771.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Ferror-codes%2FE0771.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0771.rs?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -0,0 +1,8 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete\n+\n+fn function_with_str<'a, const STRING: &'a str>() {} //~ ERROR E0771\n+\n+fn main() {\n+    function_with_str::<\"Hello, world!\">()\n+}"}, {"sha": "60220be6b57ba55e1667c790aa3dfd05b723c0f5", "filename": "src/test/ui/error-codes/E0771.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Ferror-codes%2FE0771.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/991da05c32c98ec58f2f312b6dca96d998dbaf34/src%2Ftest%2Fui%2Ferror-codes%2FE0771.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0771.stderr?ref=991da05c32c98ec58f2f312b6dca96d998dbaf34", "patch": "@@ -0,0 +1,20 @@\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/E0771.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n+\n+error[E0771]: use of non-static lifetime `'a` in const generic\n+  --> $DIR/E0771.rs:4:41\n+   |\n+LL | fn function_with_str<'a, const STRING: &'a str>() {}\n+   |                                         ^^\n+   |\n+   = note: for more information, see issue #74052 <https://github.com/rust-lang/rust/issues/74052>\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0771`."}]}