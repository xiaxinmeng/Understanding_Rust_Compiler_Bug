{"sha": "855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "node_id": "C_kwDOAAsO6NoAKDg1NWYyMzc3M2IzZDZhNGMxNGE4ZDdjOTJhZjM1Zjg2ZTk5MGNmYjU", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T15:52:51Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:21Z"}, "message": "lint: port no-op method call diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "4ad4aed434ce14ece179ed9642c58042ad73b372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ad4aed434ce14ece179ed9642c58042ad73b372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "html_url": "https://github.com/rust-lang/rust/commit/855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/855f23773b3d6a4c14a8d7c92af35f86e990cfb5/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "096a69dd19dc70c6583be329bef7a54010b8ce23", "url": "https://api.github.com/repos/rust-lang/rust/commits/096a69dd19dc70c6583be329bef7a54010b8ce23", "html_url": "https://github.com/rust-lang/rust/commit/096a69dd19dc70c6583be329bef7a54010b8ce23"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "d93007644dbcab0e009ad478abb218f6c24ecb43", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/855f23773b3d6a4c14a8d7c92af35f86e990cfb5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/855f23773b3d6a4c14a8d7c92af35f86e990cfb5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "patch": "@@ -124,3 +124,7 @@ lint-non-snake-case = {$sort} `{$name}` should have a snake case name\n lint-non-upper_case-global = {$sort} `{$name}` should have an upper case name\n     .suggestion = convert the identifier to upper case\n     .label = should have an UPPER_CASE name\n+\n+lint-noop-method-call = call to `.{$method}()` on a reference in this situation does nothing\n+    .label = unnecessary method call\n+    .note = the type `{$receiver_ty}` which `{$method}` is being called on is the same as the type returned from `{$method}`, so the method call does not do anything and can be removed"}, {"sha": "2e847c8b89c56669827e72fb5530e6422da3279d", "filename": "compiler/rustc_lint/src/noop_method_call.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/855f23773b3d6a4c14a8d7c92af35f86e990cfb5/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/855f23773b3d6a4c14a8d7c92af35f86e990cfb5/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs?ref=855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "patch": "@@ -2,6 +2,7 @@ use crate::context::LintContext;\n use crate::rustc_middle::ty::TypeFoldable;\n use crate::LateContext;\n use crate::LateLintPass;\n+use rustc_errors::fluent;\n use rustc_hir::def::DefKind;\n use rustc_hir::{Expr, ExprKind};\n use rustc_middle::ty;\n@@ -80,7 +81,6 @@ impl<'tcx> LateLintPass<'tcx> for NoopMethodCall {\n         ) {\n             return;\n         }\n-        let method = &call.ident.name;\n         let receiver = &elements[0];\n         let receiver_ty = cx.typeck_results().expr_ty(receiver);\n         let expr_ty = cx.typeck_results().expr_ty_adjusted(expr);\n@@ -90,19 +90,14 @@ impl<'tcx> LateLintPass<'tcx> for NoopMethodCall {\n             return;\n         }\n         let expr_span = expr.span;\n-        let note = format!(\n-            \"the type `{:?}` which `{}` is being called on is the same as \\\n-             the type returned from `{}`, so the method call does not do \\\n-             anything and can be removed\",\n-            receiver_ty, method, method,\n-        );\n-\n         let span = expr_span.with_lo(receiver.span.hi());\n         cx.struct_span_lint(NOOP_METHOD_CALL, span, |lint| {\n-            let method = &call.ident.name;\n-            let message =\n-                format!(\"call to `.{}()` on a reference in this situation does nothing\", &method,);\n-            lint.build(&message).span_label(span, \"unnecessary method call\").note(&note).emit();\n+            lint.build(fluent::lint::noop_method_call)\n+                .set_arg(\"method\", call.ident.name)\n+                .set_arg(\"receiver_ty\", receiver_ty)\n+                .span_label(span, fluent::lint::label)\n+                .note(fluent::lint::note)\n+                .emit();\n         });\n     }\n }"}]}