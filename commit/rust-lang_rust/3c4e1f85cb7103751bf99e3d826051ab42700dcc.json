{"sha": "3c4e1f85cb7103751bf99e3d826051ab42700dcc", "node_id": "C_kwDOAAsO6NoAKDNjNGUxZjg1Y2I3MTAzNzUxYmY5OWUzZDgyNjA1MWFiNDI3MDBkY2M", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-09T18:14:13Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-10T00:35:25Z"}, "message": "Multiple candidates with same response is not ambiguous", "tree": {"sha": "08a38f00aec3dad3992fab8822c4ef6231edb1e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08a38f00aec3dad3992fab8822c4ef6231edb1e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c4e1f85cb7103751bf99e3d826051ab42700dcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c4e1f85cb7103751bf99e3d826051ab42700dcc", "html_url": "https://github.com/rust-lang/rust/commit/3c4e1f85cb7103751bf99e3d826051ab42700dcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c4e1f85cb7103751bf99e3d826051ab42700dcc/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8996ea93b6e554148c4286e62b613f12a3ee505c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8996ea93b6e554148c4286e62b613f12a3ee505c", "html_url": "https://github.com/rust-lang/rust/commit/8996ea93b6e554148c4286e62b613f12a3ee505c"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "1ddf8cadd72800c621415fd630c7414bf5eef970", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c4e1f85cb7103751bf99e3d826051ab42700dcc/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3c4e1f85cb7103751bf99e3d826051ab42700dcc/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=3c4e1f85cb7103751bf99e3d826051ab42700dcc", "patch": "@@ -4773,6 +4773,7 @@ checksum = \"8ba09476327c4b70ccefb6180f046ef588c26a24cf5d269a9feba316eb4f029f\"\n name = \"rustc_trait_selection\"\n version = \"0.0.0\"\n dependencies = [\n+ \"itertools\",\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\","}, {"sha": "d3eba43b47e95435072df092e44be36bb706278d", "filename": "compiler/rustc_trait_selection/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c4e1f85cb7103751bf99e3d826051ab42700dcc/compiler%2Frustc_trait_selection%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3c4e1f85cb7103751bf99e3d826051ab42700dcc/compiler%2Frustc_trait_selection%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2FCargo.toml?ref=3c4e1f85cb7103751bf99e3d826051ab42700dcc", "patch": "@@ -24,3 +24,4 @@ rustc_span = { path = \"../rustc_span\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_transmute = { path = \"../rustc_transmute\", features = [\"rustc\"] }\n smallvec = { version = \"1.8.1\", features = [\"union\", \"may_dangle\"] }\n+itertools = \"0.10.1\""}, {"sha": "126ec60b3d68a078ca8cc2e087f236b28760c1ba", "filename": "compiler/rustc_trait_selection/src/solve/assembly.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3c4e1f85cb7103751bf99e3d826051ab42700dcc/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c4e1f85cb7103751bf99e3d826051ab42700dcc/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs?ref=3c4e1f85cb7103751bf99e3d826051ab42700dcc", "patch": "@@ -4,6 +4,7 @@ use super::infcx_ext::InferCtxtExt;\n #[cfg(doc)]\n use super::trait_goals::structural_traits::*;\n use super::{CanonicalResponse, Certainty, EvalCtxt, Goal, MaybeCause, QueryResult};\n+use itertools::Itertools;\n use rustc_hir::def_id::DefId;\n use rustc_infer::traits::query::NoSolution;\n use rustc_infer::traits::util::elaborate_predicates;\n@@ -489,9 +490,9 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n                 i += 1;\n             }\n \n-            // If there are *STILL* multiple candidates, give up\n-            // and report ambiguity.\n-            if candidates.len() > 1 {\n+            // If there are *STILL* multiple candidates that have *different* response\n+            // results, give up and report ambiguity.\n+            if candidates.len() > 1 && !candidates.iter().map(|cand| cand.result).all_equal() {\n                 let certainty = if candidates.iter().all(|x| {\n                     matches!(x.result.value.certainty, Certainty::Maybe(MaybeCause::Overflow))\n                 }) {\n@@ -503,6 +504,7 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             }\n         }\n \n+        // FIXME: What if there are >1 candidates left with the same response, and one is a reservation impl?\n         Ok(self.discard_reservation_impl(candidates.pop().unwrap()).result)\n     }\n "}, {"sha": "589d34dd7abb1d4dce378e6647139810a63a64c0", "filename": "tests/ui/traits/new-solver/provisional-result-done.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c4e1f85cb7103751bf99e3d826051ab42700dcc/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c4e1f85cb7103751bf99e3d826051ab42700dcc/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.rs?ref=3c4e1f85cb7103751bf99e3d826051ab42700dcc", "patch": "@@ -1,5 +1,5 @@\n-// known-bug: unknown\n // compile-flags: -Ztrait-solver=next\n+// check-pass\n \n // This tests checks that we update results in the provisional cache when\n // we pop a goal from the stack."}, {"sha": "5bd0613d25911612d5757accb5200e92354002d7", "filename": "tests/ui/traits/new-solver/provisional-result-done.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8996ea93b6e554148c4286e62b613f12a3ee505c/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8996ea93b6e554148c4286e62b613f12a3ee505c/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fprovisional-result-done.stderr?ref=8996ea93b6e554148c4286e62b613f12a3ee505c", "patch": "@@ -1,11 +0,0 @@\n-error[E0283]: type annotations needed: cannot satisfy `Bar<T>: Coinductive`\n-  --> $DIR/provisional-result-done.rs:16:25\n-   |\n-LL | impl<T> Coinductive for Bar<T>\n-   |                         ^^^^^^\n-   |\n-   = note: cannot satisfy `Bar<T>: Coinductive`\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0283`."}]}