{"sha": "f93b3cd5c3783eabd527607adda891d8a84dab4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5M2IzY2Q1YzM3ODNlYWJkNTI3NjA3YWRkYTg5MWQ4YTg0ZGFiNGY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-19T18:50:03Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-19T19:00:48Z"}, "message": "librustc: Remove debug code; xfail-pretty reverse-complement.", "tree": {"sha": "17f58f1567af848a29d9d449c8b16020b830bae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17f58f1567af848a29d9d449c8b16020b830bae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f93b3cd5c3783eabd527607adda891d8a84dab4f", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f93b3cd5c3783eabd527607adda891d8a84dab4f", "html_url": "https://github.com/rust-lang/rust/commit/f93b3cd5c3783eabd527607adda891d8a84dab4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f93b3cd5c3783eabd527607adda891d8a84dab4f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af4ea11d09618b800ebec477333a373a75a46d96", "url": "https://api.github.com/repos/rust-lang/rust/commits/af4ea11d09618b800ebec477333a373a75a46d96", "html_url": "https://github.com/rust-lang/rust/commit/af4ea11d09618b800ebec477333a373a75a46d96"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "ed028d14bd65f05476b2ebc2dd85e57430b0aa48", "filename": "src/librustc/middle/trans/cabi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f93b3cd5c3783eabd527607adda891d8a84dab4f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f93b3cd5c3783eabd527607adda891d8a84dab4f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs?ref=f93b3cd5c3783eabd527607adda891d8a84dab4f", "patch": "@@ -13,7 +13,6 @@ use middle::trans::base::*;\n use middle::trans::build::*;\n use middle::trans::common::*;\n \n-use core::io::println;\n use core::libc::c_uint;\n use core::option;\n use core::vec;"}, {"sha": "86ce556be72356603a766b56b7c130dde7992003", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f93b3cd5c3783eabd527607adda891d8a84dab4f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f93b3cd5c3783eabd527607adda891d8a84dab4f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=f93b3cd5c3783eabd527607adda891d8a84dab4f", "patch": "@@ -185,17 +185,19 @@ fn build_wrap_fn_(ccx: @CrateContext,\n                   llshimfn: ValueRef,\n                   llwrapfn: ValueRef,\n                   shim_upcall: ValueRef,\n+                  needs_c_return: bool,\n                   arg_builder: wrap_arg_builder,\n                   ret_builder: wrap_ret_builder) {\n     let _icx = ccx.insn_ctxt(\"foreign::build_wrap_fn_\");\n     let fcx = new_fn_ctxt(ccx, ~[], llwrapfn, tys.fn_sig.output, None);\n \n-    // Patch up the return type if it's not immediate.\n-    /*if !ty::type_is_immediate(tys.fn_sig.output) {\n+    // Patch up the return type if it's not immediate and we're returning via\n+    // the C ABI.\n+    if needs_c_return && !ty::type_is_immediate(tys.fn_sig.output) {\n         let lloutputtype = type_of::type_of(*fcx.ccx, tys.fn_sig.output);\n         fcx.llretptr = Some(alloca(raw_block(fcx, false, fcx.llstaticallocas),\n                                    lloutputtype));\n-    }*/\n+    }\n \n     let bcx = top_scope_block(fcx, None);\n     let lltop = bcx.llbb;\n@@ -499,6 +501,7 @@ pub fn trans_foreign_mod(ccx: @CrateContext,\n                        llshimfn,\n                        llwrapfn,\n                        ccx.upcalls.call_shim_on_c_stack,\n+                       false,\n                        build_args,\n                        build_ret);\n \n@@ -1229,6 +1232,7 @@ pub fn trans_foreign_fn(ccx: @CrateContext,\n                        llshimfn,\n                        llwrapfn,\n                        ccx.upcalls.call_shim_on_rust_stack,\n+                       true,\n                        build_args,\n                        build_ret);\n "}, {"sha": "e3774be053cd9da121f3a3b4c7d064e824a1258d", "filename": "src/test/bench/shootout-reverse-complement.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f93b3cd5c3783eabd527607adda891d8a84dab4f/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f93b3cd5c3783eabd527607adda891d8a84dab4f/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs?ref=f93b3cd5c3783eabd527607adda891d8a84dab4f", "patch": "@@ -1,3 +1,5 @@\n+// xfail-pretty\n+\n use core::cast::transmute;\n use core::libc::{STDOUT_FILENO, c_int, fdopen, fgets, fopen, fputc, fwrite};\n use core::libc::{size_t};"}]}