{"sha": "05d59feb64cac786da37072dc3a52348e99756f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZDU5ZmViNjRjYWM3ODZkYTM3MDcyZGMzYTUyMzQ4ZTk5NzU2ZjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-26T13:56:32Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-27T09:19:47Z"}, "message": "add test for assignment x = y where type bool is expected.", "tree": {"sha": "ec780992252e426aeec5cd150bb89ef8710f077e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec780992252e426aeec5cd150bb89ef8710f077e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05d59feb64cac786da37072dc3a52348e99756f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05d59feb64cac786da37072dc3a52348e99756f3", "html_url": "https://github.com/rust-lang/rust/commit/05d59feb64cac786da37072dc3a52348e99756f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05d59feb64cac786da37072dc3a52348e99756f3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7945eff0805d91d3c0ca10df872bcabdd88aa4b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7945eff0805d91d3c0ca10df872bcabdd88aa4b6", "html_url": "https://github.com/rust-lang/rust/commit/7945eff0805d91d3c0ca10df872bcabdd88aa4b6"}], "stats": {"total": 164, "additions": 164, "deletions": 0}, "files": [{"sha": "bb5ee46c9e17a339fbe54fcd02e9027fe9090590", "filename": "src/test/ui/type/type-check/assignment-expected-bool.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/05d59feb64cac786da37072dc3a52348e99756f3/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d59feb64cac786da37072dc3a52348e99756f3/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.rs?ref=05d59feb64cac786da37072dc3a52348e99756f3", "patch": "@@ -0,0 +1,29 @@\n+// The purpose of this text is to ensure that we get good\n+// diagnostics when a `bool` is expected but that due to\n+// an assignment expression `x = y` the type is `()`.\n+\n+fn main() {\n+    let _: bool = 0 = 0; //~ ERROR mismatched types [E0308]\n+\n+    let _: bool = match 0 {\n+        0 => 0 = 0, //~ ERROR mismatched types [E0308]\n+        _ => 0 = 0, //~ ERROR mismatched types [E0308]\n+    };\n+\n+    let _: bool = match true {\n+        true => 0 = 0, //~ ERROR mismatched types [E0308]\n+        _ => (),\n+    };\n+\n+    if 0 = 0 {} //~ ERROR mismatched types [E0308]\n+\n+    let _: bool = if { 0 = 0 } { //~ ERROR mismatched types [E0308]\n+        0 = 0 //~ ERROR mismatched types [E0308]\n+    } else {\n+        0 = 0 //~ ERROR mismatched types [E0308]\n+    };\n+\n+    let _ = (0 = 0) //~ ERROR mismatched types [E0308]\n+        && { 0 = 0 } //~ ERROR mismatched types [E0308]\n+        || (0 = 0); //~ ERROR mismatched types [E0308]\n+}"}, {"sha": "e92973573488946d9acd52270d84c2666709cb96", "filename": "src/test/ui/type/type-check/assignment-expected-bool.stderr", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/05d59feb64cac786da37072dc3a52348e99756f3/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05d59feb64cac786da37072dc3a52348e99756f3/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.stderr?ref=05d59feb64cac786da37072dc3a52348e99756f3", "patch": "@@ -0,0 +1,135 @@\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:6:19\n+   |\n+LL |     let _: bool = 0 = 0;\n+   |                   ^^^^^\n+   |                   |\n+   |                   expected bool, found ()\n+   |                   help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:9:14\n+   |\n+LL |         0 => 0 = 0,\n+   |              ^^^^^\n+   |              |\n+   |              expected bool, found ()\n+   |              help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:10:14\n+   |\n+LL |         _ => 0 = 0,\n+   |              ^^^^^\n+   |              |\n+   |              expected bool, found ()\n+   |              help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:14:17\n+   |\n+LL |         true => 0 = 0,\n+   |                 ^^^^^\n+   |                 |\n+   |                 expected bool, found ()\n+   |                 help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:18:8\n+   |\n+LL |     if 0 = 0 {}\n+   |        ^^^^^\n+   |        |\n+   |        expected bool, found ()\n+   |        help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:20:24\n+   |\n+LL |     let _: bool = if { 0 = 0 } {\n+   |                        ^^^^^\n+   |                        |\n+   |                        expected bool, found ()\n+   |                        help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:21:9\n+   |\n+LL |         0 = 0\n+   |         ^^^^^\n+   |         |\n+   |         expected bool, found ()\n+   |         help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:23:9\n+   |\n+LL |         0 = 0\n+   |         ^^^^^\n+   |         |\n+   |         expected bool, found ()\n+   |         help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:26:13\n+   |\n+LL |     let _ = (0 = 0)\n+   |             ^^^^^^^\n+   |             |\n+   |             expected bool, found ()\n+   |             help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:27:14\n+   |\n+LL |         && { 0 = 0 }\n+   |              ^^^^^\n+   |              |\n+   |              expected bool, found ()\n+   |              help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-expected-bool.rs:28:12\n+   |\n+LL |         || (0 = 0);\n+   |            ^^^^^^^\n+   |            |\n+   |            expected bool, found ()\n+   |            help: try comparing for equality: `0 == 0`\n+   |\n+   = note: expected type `bool`\n+              found type `()`\n+\n+error: aborting due to 11 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}