{"sha": "ae4b677aa895a05e84abbb8a3307b0e96bc4a39f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNGI2NzdhYTg5NWEwNWU4NGFiYmI4YTMzMDdiMGU5NmJjNGEzOWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-21T13:30:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-21T13:30:37Z"}, "message": "Rollup merge of #76521 - tavianator:fix-pthread-getattr-destroy, r=Amanieu\n\nFix segfault if pthread_getattr_np fails\n\nglibc [destroys][1] the passed pthread_attr_t if pthread_getattr_np()\nfails.  Destroying it again leads to a segfault.  Fix it by only\ndestroying it on success for glibc.\n\n[1]: https://sourceware.org/git/?p=glibc.git;a=blob;f=nptl/pthread_getattr_np.c;h=ce437205e41dc05653e435f6188768cccdd91c99;hb=HEAD#l205", "tree": {"sha": "f49d0fa3af605faf334d0971ba26e77d2d9c9e06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f49d0fa3af605faf334d0971ba26e77d2d9c9e06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae4b677aa895a05e84abbb8a3307b0e96bc4a39f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfaKr9CRBK7hj4Ov3rIwAAdHIIAIGrAtTf7mmxTISzV8DDvqxt\n7e8z+T9/3cC6w1BtftEvhl7WDJvT1y/rTNxzqQEPVx3HPzRlhSnOloi62WVc1REP\neMUOcaEV4L3uqCaYvxV2ko4xArdeEGjRxr0YOsZz5iEF96k/AuXlJq8/aRp5tTcx\nK1r/RZQ3T7cbPh546GVNEb41a5aoyIGxg0TOcV39mAOkvfmHYpNhiOMtZV+u7wRA\nEkKEPr0EYTIjUxf0p89uJmm9jKgmp2q2uNun57zbvFi60cAZzqvFXsiik0pcSutU\n/vetecaZPoeRqjpOkGW4zOS8feX/8awY3g+JTS5UQNYlDJYU6NuLqViDhnHwbO4=\n=EKNQ\n-----END PGP SIGNATURE-----\n", "payload": "tree f49d0fa3af605faf334d0971ba26e77d2d9c9e06\nparent 670e204ace17af23625bedb7a2c4669da0c3c0a1\nparent a684153f2920729f9fc3ea27ddb77d7cc3543214\nauthor Ralf Jung <post@ralfj.de> 1600695037 +0200\ncommitter GitHub <noreply@github.com> 1600695037 +0200\n\nRollup merge of #76521 - tavianator:fix-pthread-getattr-destroy, r=Amanieu\n\nFix segfault if pthread_getattr_np fails\n\nglibc [destroys][1] the passed pthread_attr_t if pthread_getattr_np()\nfails.  Destroying it again leads to a segfault.  Fix it by only\ndestroying it on success for glibc.\n\n[1]: https://sourceware.org/git/?p=glibc.git;a=blob;f=nptl/pthread_getattr_np.c;h=ce437205e41dc05653e435f6188768cccdd91c99;hb=HEAD#l205\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae4b677aa895a05e84abbb8a3307b0e96bc4a39f", "html_url": "https://github.com/rust-lang/rust/commit/ae4b677aa895a05e84abbb8a3307b0e96bc4a39f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae4b677aa895a05e84abbb8a3307b0e96bc4a39f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "670e204ace17af23625bedb7a2c4669da0c3c0a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/670e204ace17af23625bedb7a2c4669da0c3c0a1", "html_url": "https://github.com/rust-lang/rust/commit/670e204ace17af23625bedb7a2c4669da0c3c0a1"}, {"sha": "a684153f2920729f9fc3ea27ddb77d7cc3543214", "url": "https://api.github.com/repos/rust-lang/rust/commits/a684153f2920729f9fc3ea27ddb77d7cc3543214", "html_url": "https://github.com/rust-lang/rust/commit/a684153f2920729f9fc3ea27ddb77d7cc3543214"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "652219e28f6e03a382a422ac0da567ddc51ac543", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ae4b677aa895a05e84abbb8a3307b0e96bc4a39f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae4b677aa895a05e84abbb8a3307b0e96bc4a39f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=ae4b677aa895a05e84abbb8a3307b0e96bc4a39f", "patch": "@@ -294,6 +294,7 @@ pub mod guard {\n     unsafe fn get_stack_start() -> Option<*mut libc::c_void> {\n         let mut ret = None;\n         let mut attr: libc::pthread_attr_t = crate::mem::zeroed();\n+        #[cfg(target_os = \"freebsd\")]\n         assert_eq!(libc::pthread_attr_init(&mut attr), 0);\n         #[cfg(target_os = \"freebsd\")]\n         let e = libc::pthread_attr_get_np(libc::pthread_self(), &mut attr);\n@@ -305,7 +306,9 @@ pub mod guard {\n             assert_eq!(libc::pthread_attr_getstack(&attr, &mut stackaddr, &mut stacksize), 0);\n             ret = Some(stackaddr);\n         }\n-        assert_eq!(libc::pthread_attr_destroy(&mut attr), 0);\n+        if e == 0 || cfg!(target_os = \"freebsd\") {\n+            assert_eq!(libc::pthread_attr_destroy(&mut attr), 0);\n+        }\n         ret\n     }\n \n@@ -403,6 +406,7 @@ pub mod guard {\n     pub unsafe fn current() -> Option<Guard> {\n         let mut ret = None;\n         let mut attr: libc::pthread_attr_t = crate::mem::zeroed();\n+        #[cfg(target_os = \"freebsd\")]\n         assert_eq!(libc::pthread_attr_init(&mut attr), 0);\n         #[cfg(target_os = \"freebsd\")]\n         let e = libc::pthread_attr_get_np(libc::pthread_self(), &mut attr);\n@@ -446,7 +450,9 @@ pub mod guard {\n                 Some(stackaddr..stackaddr + guardsize)\n             };\n         }\n-        assert_eq!(libc::pthread_attr_destroy(&mut attr), 0);\n+        if e == 0 || cfg!(target_os = \"freebsd\") {\n+            assert_eq!(libc::pthread_attr_destroy(&mut attr), 0);\n+        }\n         ret\n     }\n }"}]}