{"sha": "4f6c557c9d9c7cfade41cf473935a26ad54351d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNmM1NTdjOWQ5YzdjZmFkZTQxY2Y0NzM5MzVhMjZhZDU0MzUxZDQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-01-25T12:45:57Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:09Z"}, "message": "Wrap the miri ErrorKind in an Rc to reduce work in queries", "tree": {"sha": "65cc740e7769538d17c14d64ca392f564cb2fa3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65cc740e7769538d17c14d64ca392f564cb2fa3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f6c557c9d9c7cfade41cf473935a26ad54351d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53EACgkQpp+NIls6\n19kkQA//eClQynavGeX/Bs6sAw83k4Ef7j4Ef3lMe4jpKawJCTox6nWpdrymuXlP\n5kGCA+F6rRw+mEPHVAMbDMPLF8amCzby3AlVHoqCaNuVKkqYFb8b2JOR2FgjFE8O\nTfQZqROT2yECtSz5NxMWG7IoiaFx1gcCXaCTcDPUxHcHzOKXx6oqrQI/SIXAB3+6\nBjgLcqSigCTTHpwQJEGM59HBj2Dt3/NqgA7acan+tM3GqW+OpXAQxNmeO20aZ3cM\nYh0xR9B4f6GpxFQwkYZ7Pd6mxSw/jaMs0ds/B8wql/g/MToZJHdBrHvi6iHa7EcU\ndrWzPc1pIRjExurbpbHn5ifdeblkEwP/paVxou2gcEqSvIKoac6Wb8F/SXreZF5b\nvh/Cjq3umekZL2XyRdtXjoSkkTqkbDZXP9fb3lV+SoZS8gAM8ut/51FQ40Dnb+KP\n5QcSptyZ7wkrxa5Ct3MnKd5V2Y9qLtVYNfLq1xHQdwCl5Id/nXJEu62DrbxrXNfh\nnxFxXyYEUaFnIYrePJduRk+Lb/ljUDsrQpwkljYJJWsOapE1SAA8JbMn4lwU65Y8\ncHA+wGbBEWUIv3JfwU6lclMOCw/Mphs24WJJu4/HDPidofyHPU0oqB0+pwWladsD\nLn5NqOefplpMSe0rhJIiKTrvaTwKC2Dei/aDYtPoqgs0JMgWrK4=\n=oi0M\n-----END PGP SIGNATURE-----", "payload": "tree 65cc740e7769538d17c14d64ca392f564cb2fa3b\nparent 3d8c4d4fe9358d23d9edd6ac016477f91f1de997\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1516884357 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494449 +0100\n\nWrap the miri ErrorKind in an Rc to reduce work in queries\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f6c557c9d9c7cfade41cf473935a26ad54351d4", "html_url": "https://github.com/rust-lang/rust/commit/4f6c557c9d9c7cfade41cf473935a26ad54351d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f6c557c9d9c7cfade41cf473935a26ad54351d4/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d8c4d4fe9358d23d9edd6ac016477f91f1de997", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8c4d4fe9358d23d9edd6ac016477f91f1de997", "html_url": "https://github.com/rust-lang/rust/commit/3d8c4d4fe9358d23d9edd6ac016477f91f1de997"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "74441d4694567d065c2e2520e60c46fd79da7daf", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f6c557c9d9c7cfade41cf473935a26ad54351d4/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f6c557c9d9c7cfade41cf473935a26ad54351d4/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=4f6c557c9d9c7cfade41cf473935a26ad54351d4", "patch": "@@ -489,9 +489,9 @@ for ::mir::interpret::EvalError<'gcx> {\n                                           hasher: &mut StableHasher<W>) {\n         use mir::interpret::EvalErrorKind::*;\n \n-        mem::discriminant(&self.kind).hash_stable(hcx, hasher);\n+        mem::discriminant(&*self.kind).hash_stable(hcx, hasher);\n \n-        match self.kind {\n+        match *self.kind {\n             DanglingPointerDeref |\n             DoubleFree |\n             InvalidMemoryAccess |"}, {"sha": "702fd85794fff7a784560b6e0171aef7028bbe80", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4f6c557c9d9c7cfade41cf473935a26ad54351d4/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f6c557c9d9c7cfade41cf473935a26ad54351d4/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=4f6c557c9d9c7cfade41cf473935a26ad54351d4", "patch": "@@ -1,5 +1,6 @@\n use std::error::Error;\n use std::{fmt, env};\n+use std::rc::Rc;\n \n use mir;\n use ty::{FnSig, Ty, layout};\n@@ -14,7 +15,7 @@ use backtrace::Backtrace;\n \n #[derive(Debug, Clone)]\n pub struct EvalError<'tcx> {\n-    pub kind: EvalErrorKind<'tcx>,\n+    pub kind: Rc<EvalErrorKind<'tcx>>,\n     pub backtrace: Option<Backtrace>,\n }\n \n@@ -25,7 +26,7 @@ impl<'tcx> From<EvalErrorKind<'tcx>> for EvalError<'tcx> {\n             _ => None\n         };\n         EvalError {\n-            kind,\n+            kind: Rc::new(kind),\n             backtrace,\n         }\n     }\n@@ -131,7 +132,7 @@ pub type EvalResult<'tcx, T = ()> = Result<T, EvalError<'tcx>>;\n impl<'tcx> Error for EvalError<'tcx> {\n     fn description(&self) -> &str {\n         use self::EvalErrorKind::*;\n-        match self.kind {\n+        match *self.kind {\n             MachineError(ref inner) => inner,\n             FunctionPointerTyMismatch(..) =>\n                 \"tried to call a function through a function pointer of a different type\",\n@@ -252,7 +253,7 @@ impl<'tcx> Error for EvalError<'tcx> {\n impl<'tcx> fmt::Display for EvalError<'tcx> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         use self::EvalErrorKind::*;\n-        match self.kind {\n+        match *self.kind {\n             PointerOutOfBounds { ptr, access, allocation_size } => {\n                 write!(f, \"{} at offset {}, outside bounds of allocation {} which has size {}\",\n                        if access { \"memory access\" } else { \"pointer computed\" },"}, {"sha": "9394a853920e516d2efaf82df09e0be39c18f995", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f6c557c9d9c7cfade41cf473935a26ad54351d4/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f6c557c9d9c7cfade41cf473935a26ad54351d4/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=4f6c557c9d9c7cfade41cf473935a26ad54351d4", "patch": "@@ -591,7 +591,7 @@ impl<'a, 'tcx> Lift<'tcx> for interpret::EvalError<'a> {\n     type Lifted = interpret::EvalError<'tcx>;\n     fn lift_to_tcx<'b, 'gcx>(&self, tcx: TyCtxt<'b, 'gcx, 'tcx>) -> Option<Self::Lifted> {\n         use ::mir::interpret::EvalErrorKind::*;\n-        let kind = match self.kind {\n+        let kind = match *self.kind {\n             MachineError(ref err) => MachineError(err.clone()),\n             FunctionPointerTyMismatch(a, b) => FunctionPointerTyMismatch(\n                 tcx.lift(&a)?,\n@@ -691,7 +691,7 @@ impl<'a, 'tcx> Lift<'tcx> for interpret::EvalError<'a> {\n             TypeckError => TypeckError,\n         };\n         Some(interpret::EvalError {\n-            kind,\n+            kind: Rc::new(kind),\n             backtrace: self.backtrace.clone(),\n         })\n     }"}]}