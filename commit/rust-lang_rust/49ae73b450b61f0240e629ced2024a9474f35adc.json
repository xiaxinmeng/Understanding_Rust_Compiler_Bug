{"sha": "49ae73b450b61f0240e629ced2024a9474f35adc", "node_id": "C_kwDOAAsO6NoAKDQ5YWU3M2I0NTBiNjFmMDI0MGU2MjljZWQyMDI0YTk0NzRmMzVhZGM", "commit": {"author": {"name": "Georgy Komarov", "email": "jubnzv@gmail.com", "date": "2022-01-21T04:28:40Z"}, "committer": {"name": "Georgy Komarov", "email": "jubnzv@gmail.com", "date": "2022-01-21T04:28:40Z"}, "message": "matches: Simplify code", "tree": {"sha": "fcebefbd033d7cf043070de5e71dcb574487c30e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcebefbd033d7cf043070de5e71dcb574487c30e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49ae73b450b61f0240e629ced2024a9474f35adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49ae73b450b61f0240e629ced2024a9474f35adc", "html_url": "https://github.com/rust-lang/rust/commit/49ae73b450b61f0240e629ced2024a9474f35adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49ae73b450b61f0240e629ced2024a9474f35adc/comments", "author": {"login": "jubnzv", "id": 12023585, "node_id": "MDQ6VXNlcjEyMDIzNTg1", "avatar_url": "https://avatars.githubusercontent.com/u/12023585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jubnzv", "html_url": "https://github.com/jubnzv", "followers_url": "https://api.github.com/users/jubnzv/followers", "following_url": "https://api.github.com/users/jubnzv/following{/other_user}", "gists_url": "https://api.github.com/users/jubnzv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jubnzv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jubnzv/subscriptions", "organizations_url": "https://api.github.com/users/jubnzv/orgs", "repos_url": "https://api.github.com/users/jubnzv/repos", "events_url": "https://api.github.com/users/jubnzv/events{/privacy}", "received_events_url": "https://api.github.com/users/jubnzv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jubnzv", "id": 12023585, "node_id": "MDQ6VXNlcjEyMDIzNTg1", "avatar_url": "https://avatars.githubusercontent.com/u/12023585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jubnzv", "html_url": "https://github.com/jubnzv", "followers_url": "https://api.github.com/users/jubnzv/followers", "following_url": "https://api.github.com/users/jubnzv/following{/other_user}", "gists_url": "https://api.github.com/users/jubnzv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jubnzv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jubnzv/subscriptions", "organizations_url": "https://api.github.com/users/jubnzv/orgs", "repos_url": "https://api.github.com/users/jubnzv/repos", "events_url": "https://api.github.com/users/jubnzv/events{/privacy}", "received_events_url": "https://api.github.com/users/jubnzv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0c50875202e8d13b70d4cf8e4d347ddb04b876c", "html_url": "https://github.com/rust-lang/rust/commit/a0c50875202e8d13b70d4cf8e4d347ddb04b876c"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "be9eff4237bab047ca840bebbd7b6ad6aa532e40", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/49ae73b450b61f0240e629ced2024a9474f35adc/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49ae73b450b61f0240e629ced2024a9474f35adc/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=49ae73b450b61f0240e629ced2024a9474f35adc", "patch": "@@ -877,14 +877,7 @@ fn check_single_match_opt_like(\n fn collect_pat_paths(acc: &mut Vec<String>, pat: &Pat<'_>) -> bool {\n     match pat.kind {\n         PatKind::Wild => true,\n-        PatKind::Tuple(inner, _) => {\n-            for p in inner {\n-                if !collect_pat_paths(acc, p) {\n-                    return false;\n-                }\n-            }\n-            true\n-        },\n+        PatKind::Tuple(inner, _) => inner.iter().all(|p| collect_pat_paths(acc, p)),\n         PatKind::TupleStruct(ref path, ..) => {\n             acc.push(rustc_hir_pretty::to_string(rustc_hir_pretty::NO_ANN, |s| {\n                 s.print_qpath(path, false);"}]}