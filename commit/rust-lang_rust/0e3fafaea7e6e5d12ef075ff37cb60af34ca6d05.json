{"sha": "0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlM2ZhZmFlYTdlNmU1ZDEyZWYwNzVmZjM3Y2I2MGFmMzRjYTZkMDU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-22T12:13:08Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:17Z"}, "message": "Typo", "tree": {"sha": "7f5d8eb7f82b4796cd50e84a38b155686244e224", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f5d8eb7f82b4796cd50e84a38b155686244e224"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05", "html_url": "https://github.com/rust-lang/rust/commit/0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ebce0e1b145b58722be88858eea7efbf05566b", "url": "https://api.github.com/repos/rust-lang/rust/commits/72ebce0e1b145b58722be88858eea7efbf05566b", "html_url": "https://github.com/rust-lang/rust/commit/72ebce0e1b145b58722be88858eea7efbf05566b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dffc8e8256c423ece083a25c6baa1b2b8022d309", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=0e3fafaea7e6e5d12ef075ff37cb60af34ca6d05", "patch": "@@ -194,7 +194,7 @@ impl<'rt, 'mir, 'tcx, M: CompileTimeMachine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx\n                 // Validation has already errored on an invalid vtable pointer so we can safely not\n                 // do anything if this is not a real pointer.\n                 if let Scalar::Ptr(vtable) = mplace.meta.unwrap() {\n-                    // Explitly choose `Immutable` here, since vtables are immutable, even\n+                    // Explicitly choose `Immutable` here, since vtables are immutable, even\n                     // if the reference of the fat pointer is mutable.\n                     self.intern_shallow(vtable.alloc_id, Mutability::Not, None)?;\n                 } else {"}]}