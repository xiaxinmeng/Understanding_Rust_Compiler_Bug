{"sha": "b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMmVkMWUxZDQ5NWUyNTI1MmRjNDljNWYwZjVlMWRhMWIyNGI3OGU=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-12-14T20:27:30Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-12-15T18:56:55Z"}, "message": "Stabilize:\n\n- `std::rc::Rc::{strong_count, weak_count}`\n- `std::sync::Arc::{strong_count, weak_count}`\n\nDeprecate:\n\n- `std::rc::Rc::{would_unwrap, is_unique}`", "tree": {"sha": "9fdcd0365066bf4e233427658311f02f62bb008a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fdcd0365066bf4e233427658311f02f62bb008a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "html_url": "https://github.com/rust-lang/rust/commit/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65b144c964987970974742526ad5985d53f19da9", "url": "https://api.github.com/repos/rust-lang/rust/commits/65b144c964987970974742526ad5985d53f19da9", "html_url": "https://github.com/rust-lang/rust/commit/65b144c964987970974742526ad5985d53f19da9"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "1cad8f7f40788dc07c78b18203f1e80890e008a1", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "patch": "@@ -392,8 +392,6 @@ impl<T: ?Sized> Arc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(arc_counts)]\n-    ///\n     /// use std::sync::Arc;\n     ///\n     /// let five = Arc::new(5);\n@@ -404,8 +402,7 @@ impl<T: ?Sized> Arc<T> {\n     /// assert_eq!(1, Arc::weak_count(&five));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"arc_counts\", reason = \"not clearly useful, and racy\",\n-               issue = \"28356\")]\n+    #[stable(feature = \"arc_counts\", since = \"1.15.0\")]\n     pub fn weak_count(this: &Self) -> usize {\n         this.inner().weak.load(SeqCst) - 1\n     }\n@@ -421,8 +418,6 @@ impl<T: ?Sized> Arc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(arc_counts)]\n-    ///\n     /// use std::sync::Arc;\n     ///\n     /// let five = Arc::new(5);\n@@ -433,8 +428,7 @@ impl<T: ?Sized> Arc<T> {\n     /// assert_eq!(2, Arc::strong_count(&five));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"arc_counts\", reason = \"not clearly useful, and racy\",\n-               issue = \"28356\")]\n+    #[stable(feature = \"arc_counts\", since = \"1.15.0\")]\n     pub fn strong_count(this: &Self) -> usize {\n         this.inner().strong.load(SeqCst)\n     }"}, {"sha": "8d2b1a770b200bdeef7f345a4daf00b1a111e26b", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=b02ed1e1d495e25252dc49c5f0f5e1da1b24b78e", "patch": "@@ -363,6 +363,7 @@ impl<T> Rc<T> {\n     #[unstable(feature = \"rc_would_unwrap\",\n                reason = \"just added for niche usecase\",\n                issue = \"28356\")]\n+    #[rustc_deprecated(since = \"1.15.0\", reason = \"too niche; use `strong_count` instead\")]\n     pub fn would_unwrap(this: &Self) -> bool {\n         Rc::strong_count(&this) == 1\n     }\n@@ -482,8 +483,6 @@ impl<T: ?Sized> Rc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(rc_counts)]\n-    ///\n     /// use std::rc::Rc;\n     ///\n     /// let five = Rc::new(5);\n@@ -492,8 +491,7 @@ impl<T: ?Sized> Rc<T> {\n     /// assert_eq!(1, Rc::weak_count(&five));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"rc_counts\", reason = \"not clearly useful\",\n-               issue = \"28356\")]\n+    #[stable(feature = \"rc_counts\", since = \"1.15.0\")]\n     pub fn weak_count(this: &Self) -> usize {\n         this.weak() - 1\n     }\n@@ -503,8 +501,6 @@ impl<T: ?Sized> Rc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(rc_counts)]\n-    ///\n     /// use std::rc::Rc;\n     ///\n     /// let five = Rc::new(5);\n@@ -513,8 +509,7 @@ impl<T: ?Sized> Rc<T> {\n     /// assert_eq!(2, Rc::strong_count(&five));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"rc_counts\", reason = \"not clearly useful\",\n-               issue = \"28356\")]\n+    #[stable(feature = \"rc_counts\", since = \"1.15.0\")]\n     pub fn strong_count(this: &Self) -> usize {\n         this.strong()\n     }\n@@ -538,6 +533,8 @@ impl<T: ?Sized> Rc<T> {\n     #[inline]\n     #[unstable(feature = \"rc_counts\", reason = \"uniqueness has unclear meaning\",\n                issue = \"28356\")]\n+    #[rustc_deprecated(since = \"1.15.0\",\n+                       reason = \"too niche; use `strong_count` and `weak_count` instead\")]\n     pub fn is_unique(this: &Self) -> bool {\n         Rc::weak_count(this) == 0 && Rc::strong_count(this) == 1\n     }"}]}