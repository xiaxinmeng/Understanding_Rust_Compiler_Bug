{"sha": "0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiY2Q4MTQ3ZWMwOGRiMmE5NGRkMmEzMDY4YTUyN2JhNmM0N2E0Y2Q=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-26T12:42:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-26T12:42:29Z"}, "message": "Merge #6637\n\n6637: Publish diagnostics on file open r=jonas-schievink a=jonas-schievink\n\nDiagnostics are sometimes only showing up when typing. This should fix that.\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6381\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "f234e1cb10f8f94c845f4939119d40a18e5f2069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f234e1cb10f8f94c845f4939119d40a18e5f2069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfv6K1CRBK7hj4Ov3rIwAAdHIIAGWN6l8rPGNpo4XE1b0xEbRS\nmR7lWwQ3PmUwMibT/bSOzAhLlKyUYnYG/I56DpDjHUi1/JuR+fO4ZWJAIV5CrJVT\nFu6qLEQZXAsALnQ0hUetqmT0hEmsfYe+B6K3KLYwVNyTEBLj23Yjti0YVdYFbEHw\n4A76TBhazc7TC5ljOmJsAQ/esBTxy3ZHAcejyoYnOXVr4BzncJRsFStUAt7kNr5C\nU7rXsivNw/t6u109P3TWBQaywF1pDZ8z+ntT6QKTag+bakZIoWI+JPLk+yXbVoz/\nIPSdtLK6ByYVCAvITv69C5PgJUP8dgiy7J3flW3D1jjWfRQ3V8toBeS0UMGyNO4=\n=HZne\n-----END PGP SIGNATURE-----\n", "payload": "tree f234e1cb10f8f94c845f4939119d40a18e5f2069\nparent db6988d4e7646c09dc882fddcd5d9cf74f467276\nparent 9ed883f3735e15deb04e9123b6f3fd3aef68d8cd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1606394549 +0000\ncommitter GitHub <noreply@github.com> 1606394549 +0000\n\nMerge #6637\n\n6637: Publish diagnostics on file open r=jonas-schievink a=jonas-schievink\n\nDiagnostics are sometimes only showing up when typing. This should fix that.\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6381\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd", "html_url": "https://github.com/rust-lang/rust/commit/0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db6988d4e7646c09dc882fddcd5d9cf74f467276", "url": "https://api.github.com/repos/rust-lang/rust/commits/db6988d4e7646c09dc882fddcd5d9cf74f467276", "html_url": "https://github.com/rust-lang/rust/commit/db6988d4e7646c09dc882fddcd5d9cf74f467276"}, {"sha": "9ed883f3735e15deb04e9123b6f3fd3aef68d8cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed883f3735e15deb04e9123b6f3fd3aef68d8cd", "html_url": "https://github.com/rust-lang/rust/commit/9ed883f3735e15deb04e9123b6f3fd3aef68d8cd"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "470c2e2284e70e905f82c51274002f03a2392b37", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=0bcd8147ec08db2a94dd2a3068a527ba6c47a4cd", "patch": "@@ -348,13 +348,7 @@ impl GlobalState {\n         }\n \n         if self.status == Status::Ready && (state_changed || prev_status == Status::Loading) {\n-            let subscriptions = self\n-                .mem_docs\n-                .keys()\n-                .map(|path| self.vfs.read().0.file_id(&path).unwrap())\n-                .collect::<Vec<_>>();\n-\n-            self.update_file_notifications_on_threadpool(subscriptions);\n+            self.update_file_notifications_on_threadpool();\n \n             // Refresh semantic tokens if the client supports it.\n             if self.config.semantic_tokens_refresh {\n@@ -498,6 +492,7 @@ impl GlobalState {\n                         .write()\n                         .0\n                         .set_file_contents(path, Some(params.text_document.text.into_bytes()));\n+                    this.update_file_notifications_on_threadpool();\n                 }\n                 Ok(())\n             })?\n@@ -606,7 +601,13 @@ impl GlobalState {\n             .finish();\n         Ok(())\n     }\n-    fn update_file_notifications_on_threadpool(&mut self, subscriptions: Vec<FileId>) {\n+    fn update_file_notifications_on_threadpool(&mut self) {\n+        let subscriptions = self\n+            .mem_docs\n+            .keys()\n+            .map(|path| self.vfs.read().0.file_id(&path).unwrap())\n+            .collect::<Vec<_>>();\n+\n         log::trace!(\"updating notifications for {:?}\", subscriptions);\n         if self.config.publish_diagnostics {\n             let snapshot = self.snapshot();"}]}