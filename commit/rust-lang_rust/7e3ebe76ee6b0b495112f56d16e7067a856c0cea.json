{"sha": "7e3ebe76ee6b0b495112f56d16e7067a856c0cea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlM2ViZTc2ZWU2YjBiNDk1MTEyZjU2ZDE2ZTcwNjdhODU2YzBjZWE=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-06T22:01:34Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-08T15:24:10Z"}, "message": "Add Option::get_or_default", "tree": {"sha": "ccde317be74a1743102a60795e94eb0be891fb27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccde317be74a1743102a60795e94eb0be891fb27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e3ebe76ee6b0b495112f56d16e7067a856c0cea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3ebe76ee6b0b495112f56d16e7067a856c0cea", "html_url": "https://github.com/rust-lang/rust/commit/7e3ebe76ee6b0b495112f56d16e7067a856c0cea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e3ebe76ee6b0b495112f56d16e7067a856c0cea/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d6b0f626aad4ee9f2eaec4d5582f45620ccab80", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d6b0f626aad4ee9f2eaec4d5582f45620ccab80", "html_url": "https://github.com/rust-lang/rust/commit/1d6b0f626aad4ee9f2eaec4d5582f45620ccab80"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "9478e7f06bdf3a80885ebf2e42103bb0731afbcb", "filename": "library/core/src/option.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7e3ebe76ee6b0b495112f56d16e7067a856c0cea/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e3ebe76ee6b0b495112f56d16e7067a856c0cea/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=7e3ebe76ee6b0b495112f56d16e7067a856c0cea", "patch": "@@ -854,6 +854,34 @@ impl<T> Option<T> {\n     // Entry-like operations to insert if None and return a reference\n     /////////////////////////////////////////////////////////////////////////\n \n+    /// Inserts the default value into the option if it is [`None`], then\n+    /// returns a mutable reference to the contained value.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(option_get_or_default)]\n+    ///\n+    /// let mut x = None;\n+    ///\n+    /// {\n+    ///     let y: &mut u32 = x.get_or_default();\n+    ///     assert_eq!(y, &0);\n+    ///\n+    ///     *y = 7;\n+    /// }\n+    ///\n+    /// assert_eq!(x, Some(7));\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"option_get_or_default\", issue = \"82901\")]\n+    pub fn get_or_default(&mut self) -> &mut T\n+    where\n+        T: Default,\n+    {\n+        self.get_or_insert_with(Default::default)\n+    }\n+\n     /// Inserts `value` into the option if it is [`None`], then\n     /// returns a mutable reference to the contained value.\n     ///"}]}