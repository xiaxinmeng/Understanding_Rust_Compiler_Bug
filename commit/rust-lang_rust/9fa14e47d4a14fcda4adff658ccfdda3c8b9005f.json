{"sha": "9fa14e47d4a14fcda4adff658ccfdda3c8b9005f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYTE0ZTQ3ZDRhMTRmY2RhNGFkZmY2NThjY2ZkZGEzYzhiOTAwNWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-22T15:59:02Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-22T15:59:02Z"}, "message": "Skip checking for Storage* statements in constants/statics", "tree": {"sha": "c9b0f61ac8de050912897432886547a4178a6440", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9b0f61ac8de050912897432886547a4178a6440"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fa14e47d4a14fcda4adff658ccfdda3c8b9005f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqz0sYACgkQpp+NIls6\n19mxWQ/+O+doaV7Nz1WauS81xtgkJ+zzHkfRldDqQB+0OYKI+Qmq8cJJ978RNMYO\n7BYlM4UUhH3HrIJ6ojSx1bLelgj0PsSMk9jQU0hNKfrotzRu2hov8WnVhloRm2nS\nfXxaM04NjXOPfP1+TEeTM0pfK/lQwlpYv8TOhgWXOjRZGhDaIddqxOfS/tbEVOGt\nF0zogtXUAzzPHa7AtDvs+x6M4Zu/Ra5n0aRGh9C8IG7iEuJakpqJCO+vmiNFgWAQ\nSBkbI7ob8ohXtZbFDxf9ovwi/rT5tj+ftKL3wfEKzox269WNf5GVwYpvFAbDUN6L\nhq7kpQJJ/cIhiRFpkubWZDeq8MRYHx7Dkg8jbK0CZQY9BciAC7dpL1vwkr+w+3Hq\nbDQHqa3aCs6RSkjc0Zwc//7V/qP6/0CzJ+JwYFVX8MbnE/d7MbXYhfCzn8VM3zkW\nzl8Mlg5cvLX5Cz0F4KdZNKC4xBLTEyW9XpXSCx9USIdtPVOewtufHM+1QqoaVopt\nlBHb2XStID+4nHRtqwDQOPW9qcmkXxNNZjQbiueTJM3ZPwFkotNckkmOWSwNCgop\n8sbIn+ZXhhSOo+hu2RHUWrhZUp9Vs4bwZIfX0WU2/rjcowfbFmJh4Aj10YRh5ZiS\nGh+7Qb5XNRtygfIzXYCCG287FfdBMfC8UmKS07l9Ox2vRmoKbqA=\n=KEIl\n-----END PGP SIGNATURE-----", "payload": "tree c9b0f61ac8de050912897432886547a4178a6440\nparent 9839e5fa103d117cbdb936e8594ba832e1eeb320\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1521734342 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1521734342 +0100\n\nSkip checking for Storage* statements in constants/statics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fa14e47d4a14fcda4adff658ccfdda3c8b9005f", "html_url": "https://github.com/rust-lang/rust/commit/9fa14e47d4a14fcda4adff658ccfdda3c8b9005f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fa14e47d4a14fcda4adff658ccfdda3c8b9005f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9839e5fa103d117cbdb936e8594ba832e1eeb320", "url": "https://api.github.com/repos/rust-lang/rust/commits/9839e5fa103d117cbdb936e8594ba832e1eeb320", "html_url": "https://github.com/rust-lang/rust/commit/9839e5fa103d117cbdb936e8594ba832e1eeb320"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "376c7f240583ca6de36c8680a99ad026cb3b9904", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9fa14e47d4a14fcda4adff658ccfdda3c8b9005f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fa14e47d4a14fcda4adff658ccfdda3c8b9005f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=9fa14e47d4a14fcda4adff658ccfdda3c8b9005f", "patch": "@@ -1,6 +1,7 @@\n use std::fmt::Write;\n \n use rustc::hir::def_id::DefId;\n+use rustc::hir::def::Def;\n use rustc::hir::map::definitions::DefPathData;\n use rustc::middle::const_val::{ConstVal, ErrKind};\n use rustc::mir;\n@@ -387,17 +388,23 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n         let num_locals = mir.local_decls.len() - 1;\n \n         let mut locals = vec![Some(Value::ByVal(PrimVal::Undef)); num_locals];\n-        trace!(\"push_stack_frame: {:?}: num_bbs: {}\", span, mir.basic_blocks().len());\n-        for block in mir.basic_blocks() {\n-            for stmt in block.statements.iter() {\n-                use rustc::mir::StatementKind::{StorageDead, StorageLive};\n-                match stmt.kind {\n-                    StorageLive(local) | StorageDead(local) => if local.index() > 0 {\n-                        locals[local.index() - 1] = None;\n-                    },\n-                    _ => {}\n+        match self.tcx.describe_def(instance.def_id()) {\n+            // statics and constants don't have `Storage*` statements, no need to look for them\n+            Some(Def::Static(..)) | Some(Def::Const(..)) | Some(Def::AssociatedConst(..)) => {},\n+            _ => {\n+                trace!(\"push_stack_frame: {:?}: num_bbs: {}\", span, mir.basic_blocks().len());\n+                for block in mir.basic_blocks() {\n+                    for stmt in block.statements.iter() {\n+                        use rustc::mir::StatementKind::{StorageDead, StorageLive};\n+                        match stmt.kind {\n+                            StorageLive(local) | StorageDead(local) => if local.index() > 0 {\n+                                locals[local.index() - 1] = None;\n+                            },\n+                            _ => {}\n+                        }\n+                    }\n                 }\n-            }\n+            },\n         }\n \n         self.stack.push(Frame {"}]}