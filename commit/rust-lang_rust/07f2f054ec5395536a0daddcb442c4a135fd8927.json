{"sha": "07f2f054ec5395536a0daddcb442c4a135fd8927", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZjJmMDU0ZWM1Mzk1NTM2YTBkYWRkY2I0NDJjNGExMzVmZDg5Mjc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2019-10-22T10:07:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-22T10:07:07Z"}, "message": "Update error_codes.rs", "tree": {"sha": "8f8d2f7f07c3af6b207fd32ae6e7d6272fecb4aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f8d2f7f07c3af6b207fd32ae6e7d6272fecb4aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07f2f054ec5395536a0daddcb442c4a135fd8927", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdrtTLCRBK7hj4Ov3rIwAAdHIIAHkKur5LZ0sNjk7iioOzowyf\nPca9yWcD7aL+Pmq5NjVHkdp4y4ChFIYAxTycgw/tBESnrs9bomoHfeAtpjQWzOs7\nc/PEAHEdQV+HGPxJ6jwUjtRFPyiBYoBo1p7tyu+diDjUWk0m5K41A+wR0NztQVH5\nBFXqleN5O0Efhr7OhM6239SofHONLSg6IduCLh2a6pVE9UyXGIr9yqwqPJI66i2T\nwaKEsu/PElDl1V3AAq+Y+HpA+DuV2BP1N3ZRa+n6Rz/+08QmRe8xxMWOVMtEKjvs\nDkZtpMb9dqZpde01qPBx+nflmiw7qZtaPfAYPM99oM5+jw2DSV+RCOrixQ2crgQ=\n=EoN5\n-----END PGP SIGNATURE-----\n", "payload": "tree 8f8d2f7f07c3af6b207fd32ae6e7d6272fecb4aa\nparent 2541d49601ad4fd311d28d9ae7a7ce947879d839\nauthor Dylan DPC <dylan.dpc@gmail.com> 1571738827 +0200\ncommitter GitHub <noreply@github.com> 1571738827 +0200\n\nUpdate error_codes.rs"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07f2f054ec5395536a0daddcb442c4a135fd8927", "html_url": "https://github.com/rust-lang/rust/commit/07f2f054ec5395536a0daddcb442c4a135fd8927", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07f2f054ec5395536a0daddcb442c4a135fd8927/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2541d49601ad4fd311d28d9ae7a7ce947879d839", "url": "https://api.github.com/repos/rust-lang/rust/commits/2541d49601ad4fd311d28d9ae7a7ce947879d839", "html_url": "https://github.com/rust-lang/rust/commit/2541d49601ad4fd311d28d9ae7a7ce947879d839"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9e32356365344cfbbde934f1773e04e4b335ed84", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/07f2f054ec5395536a0daddcb442c4a135fd8927/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07f2f054ec5395536a0daddcb442c4a135fd8927/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=07f2f054ec5395536a0daddcb442c4a135fd8927", "patch": "@@ -194,7 +194,7 @@ a guard.\n ```compile_fail,E0029\n let string = \"salutations !\";\n \n-// The ordering relation for strings can't be evaluated at compile time,\n+// The ordering relation for strings cannot be evaluated at compile time,\n // so this doesn't work:\n match string {\n     \"hello\" ..= \"world\" => {}\n@@ -348,7 +348,7 @@ fn main() {\n \"##,\n \n E0044: r##\"\n-You can't use type or const parameters on foreign items.\n+You cannot use type or const parameters on foreign items.\n Example of erroneous code:\n \n ```compile_fail,E0044\n@@ -788,7 +788,7 @@ fn some_other_func() {}\n fn some_function() {\n     SOME_CONST = 14; // error : a constant value cannot be changed!\n     1 = 3; // error : 1 isn't a valid place!\n-    some_other_func() = 4; // error : we can't assign value to a function!\n+    some_other_func() = 4; // error : we cannot assign value to a function!\n     SomeStruct.x = 12; // error : SomeStruct a structure name but it is used\n                        // like a variable!\n }\n@@ -3905,8 +3905,8 @@ struct Aligned(i32);\n struct Packed(Aligned);\n ```\n \n-Just like you can't have both `align` and `packed` representation hints on a\n-same type, a `packed` type can't contain another type with the `align`\n+Just like you cannot have both `align` and `packed` representation hints on a\n+same type, a `packed` type cannot contain another type with the `align`\n representation hint. However, you can do the opposite:\n \n ```\n@@ -4326,7 +4326,7 @@ extern {\n \n unsafe {\n     printf(::std::ptr::null(), 0f32);\n-    // error: can't pass an `f32` to variadic function, cast to `c_double`\n+    // error: cannot pass an `f32` to variadic function, cast to `c_double`\n }\n ```\n \n@@ -5023,7 +5023,7 @@ the future, [RFC 2091] prohibits their implementation without a follow-up RFC.\n //  E0174,\n //  E0182, // merged into E0229\n     E0183,\n-//  E0187, // can't infer the kind of the closure\n+//  E0187, // cannot infer the kind of the closure\n //  E0188, // can not cast an immutable reference to a mutable pointer\n //  E0189, // deprecated: can only cast a boxed pointer to a boxed object\n //  E0190, // deprecated: can only cast a &-pointer to an &-object"}]}