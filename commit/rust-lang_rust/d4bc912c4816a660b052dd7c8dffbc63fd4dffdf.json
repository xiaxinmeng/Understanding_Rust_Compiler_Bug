{"sha": "d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YmM5MTJjNDgxNmE2NjBiMDUyZGQ3YzhkZmZiYzYzZmQ0ZGZmZGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T08:01:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T08:01:45Z"}, "message": "Auto merge of #84217 - crlf0710:remove_main_attr_pure, r=petrochenkov\n\nRemove #[main] attribute.\n\nThis removes the #[main] attribute support from the compiler according to the decisions within #29634. For existing use cases within test harness generation, replaced it with a newly-introduced internal attribute `#[rustc_main]`.\n\nThis is first part extracted from #84062 .\n\nCloses #29634.\n\nr? `@petrochenkov`", "tree": {"sha": "316d9fb74c6101f1a561acb73a860773c86d3288", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/316d9fb74c6101f1a561acb73a860773c86d3288"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "html_url": "https://github.com/rust-lang/rust/commit/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "710da44e2249873eed123f8960667b88b1334289", "url": "https://api.github.com/repos/rust-lang/rust/commits/710da44e2249873eed123f8960667b88b1334289", "html_url": "https://github.com/rust-lang/rust/commit/710da44e2249873eed123f8960667b88b1334289"}, {"sha": "fc357039f9065d4a707cbdd1ce6f30afaf7e3f26", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc357039f9065d4a707cbdd1ce6f30afaf7e3f26", "html_url": "https://github.com/rust-lang/rust/commit/fc357039f9065d4a707cbdd1ce6f30afaf7e3f26"}], "stats": {"total": 273, "additions": 59, "deletions": 214}, "files": [{"sha": "f6b18bdea51ab0decdb4fac48046087ea34b3e30", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -366,16 +366,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                          over time\"\n                     );\n                 }\n-                if self.sess.contains_name(&i.attrs[..], sym::main) {\n-                    gate_feature_post!(\n-                        &self,\n-                        main,\n-                        i.span,\n-                        \"declaration of a non-standard `#[main]` \\\n-                         function may change over time, for now \\\n-                         a top-level `fn main()` is required\"\n-                    );\n-                }\n             }\n \n             ast::ItemKind::Struct(..) => {"}, {"sha": "c8a7ff67b4d507cceaca965827ad9f9d6d860110", "filename": "compiler/rustc_builtin_macros/src/test_harness.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest_harness.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -142,7 +142,7 @@ fn entry_point_type(sess: &Session, item: &ast::Item, depth: usize) -> EntryPoin\n         ast::ItemKind::Fn(..) => {\n             if sess.contains_name(&item.attrs, sym::start) {\n                 EntryPointType::Start\n-            } else if sess.contains_name(&item.attrs, sym::main) {\n+            } else if sess.contains_name(&item.attrs, sym::rustc_main) {\n                 EntryPointType::MainAttr\n             } else if item.ident.name == sym::main {\n                 if depth == 1 {\n@@ -187,7 +187,7 @@ impl<'a> MutVisitor for EntryPointCleaner<'a> {\n                     let attrs = attrs\n                         .into_iter()\n                         .filter(|attr| {\n-                            !self.sess.check_name(attr, sym::main)\n+                            !self.sess.check_name(attr, sym::rustc_main)\n                                 && !self.sess.check_name(attr, sym::start)\n                         })\n                         .chain(iter::once(allow_dead_code))\n@@ -220,7 +220,7 @@ fn generate_test_harness(\n     let expn_id = ext_cx.resolver.expansion_for_ast_pass(\n         DUMMY_SP,\n         AstPass::TestHarness,\n-        &[sym::main, sym::test, sym::rustc_attrs],\n+        &[sym::test, sym::rustc_attrs],\n         None,\n     );\n     let def_site = DUMMY_SP.with_def_site_ctxt(expn_id);\n@@ -247,7 +247,7 @@ fn generate_test_harness(\n /// By default this expands to\n ///\n /// ```\n-/// #[main]\n+/// #[rustc_main]\n /// pub fn main() {\n ///     extern crate test;\n ///     test::test_main_static(&[\n@@ -297,8 +297,8 @@ fn mk_main(cx: &mut TestCtxt<'_>) -> P<ast::Item> {\n     let test_extern_stmt =\n         ecx.stmt_item(sp, ecx.item(sp, test_id, vec![], ast::ItemKind::ExternCrate(None)));\n \n-    // #[main]\n-    let main_meta = ecx.meta_word(sp, sym::main);\n+    // #[rustc_main]\n+    let main_meta = ecx.meta_word(sp, sym::rustc_main);\n     let main_attr = ecx.attribute(main_meta);\n \n     // pub fn main() { ... }"}, {"sha": "d4e19170f3f7b5ce699a9f2f8e2bcc4a3f543563", "filename": "compiler/rustc_error_codes/src/error_codes/E0137.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0137.md", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0137.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0137.md?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,8 +1,10 @@\n+#### Note: this error code is no longer emitted by the compiler.\n+\n More than one function was declared with the `#[main]` attribute.\n \n Erroneous code example:\n \n-```compile_fail,E0137\n+```compile_fail\n #![feature(main)]\n \n #[main]\n@@ -16,7 +18,7 @@ This error indicates that the compiler found multiple functions with the\n `#[main]` attribute. This is an error because there must be a unique entry\n point into a Rust program. Example:\n \n-```\n+```compile_fail\n #![feature(main)]\n \n #[main]"}, {"sha": "6fd1af60fe2d83064bed967884c73166eae691a0", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -134,9 +134,6 @@ declare_features! (\n     /// Allows using the `box $expr` syntax.\n     (active, box_syntax, \"1.0.0\", Some(49733), None),\n \n-    /// Allows using `#[main]` to replace the entrypoint `#[lang = \"start\"]` calls.\n-    (active, main, \"1.0.0\", Some(29634), None),\n-\n     /// Allows using `#[start]` on a function indicating that it is the program entrypoint.\n     (active, start, \"1.0.0\", Some(29633), None),\n "}, {"sha": "f286ea7cdecec90aaa71c15a87022238dd25daec", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -536,6 +536,10 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n         rustc_specialization_trait, Normal, template!(Word),\n         \"the `#[rustc_specialization_trait]` attribute is used to check specializations\"\n     ),\n+    rustc_attr!(\n+        rustc_main, Normal, template!(Word),\n+        \"the `#[rustc_main]` attribute is used internally to specify test entry point function\",\n+    ),\n \n     // ==========================================================================\n     // Internal attributes, Testing:"}, {"sha": "c2ad339ed41269b7cfce33ff7153d53571704837", "filename": "compiler/rustc_feature/src/removed.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -132,6 +132,8 @@ declare_features! (\n     (removed, link_args, \"1.53.0\", Some(29596), None,\n      Some(\"removed in favor of using `-C link-arg=ARG` on command line, \\\n            which is available from cargo build scripts with `cargo:rustc-link-arg` now\")),\n+    /// Allows using `#[main]` to replace the entrypoint `#[lang = \"start\"]` calls.\n+    (removed, main, \"1.53.0\", Some(29634), None, None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: removed features"}, {"sha": "b1debcffd646fe02974266589150acc6ef511688", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1489,7 +1489,7 @@ fn check_invalid_crate_level_attr(tcx: TyCtxt<'_>, attrs: &[Attribute]) {\n         sym::path,\n         sym::automatically_derived,\n         sym::start,\n-        sym::main,\n+        sym::rustc_main,\n     ];\n \n     for attr in attrs {"}, {"sha": "e1b750df33c684961c20db683b958c654b99678e", "filename": "compiler/rustc_passes/src/entry.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fentry.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -84,7 +84,7 @@ fn entry_point_type(ctxt: &EntryContext<'_, '_>, item: &Item<'_>, at_root: bool)\n     let attrs = ctxt.map.attrs(item.hir_id());\n     if ctxt.session.contains_name(attrs, sym::start) {\n         EntryPointType::Start\n-    } else if ctxt.session.contains_name(attrs, sym::main) {\n+    } else if ctxt.session.contains_name(attrs, sym::rustc_main) {\n         EntryPointType::MainAttr\n     } else if item.ident.name == sym::main {\n         if at_root {\n@@ -111,8 +111,8 @@ fn find_item(item: &Item<'_>, ctxt: &mut EntryContext<'_, '_>, at_root: bool) {\n             if let Some(attr) = ctxt.session.find_by_name(attrs, sym::start) {\n                 throw_attr_err(&ctxt.session, attr.span, \"start\");\n             }\n-            if let Some(attr) = ctxt.session.find_by_name(attrs, sym::main) {\n-                throw_attr_err(&ctxt.session, attr.span, \"main\");\n+            if let Some(attr) = ctxt.session.find_by_name(attrs, sym::rustc_main) {\n+                throw_attr_err(&ctxt.session, attr.span, \"rustc_main\");\n             }\n         }\n         EntryPointType::MainNamed => {\n@@ -193,10 +193,7 @@ fn no_main_err(tcx: TyCtxt<'_>, visitor: &EntryContext<'_, '_>) {\n             err.span_note(span, \"here is a function named `main`\");\n         }\n         err.note(\"you have one or more functions named `main` not defined at the crate level\");\n-        err.help(\n-            \"either move the `main` function definitions or attach the `#[main]` attribute \\\n-                  to one of them\",\n-        );\n+        err.help(\"consider moving the `main` function definitions\");\n         // There were some functions named `main` though. Try to give the user a hint.\n         format!(\n             \"the main function must be defined at the crate level{}\","}, {"sha": "52270f0e6277b0412cc96c3a1fc8f1262adfc701", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1008,6 +1008,7 @@ symbols! {\n         rustc_layout_scalar_valid_range_start,\n         rustc_legacy_const_generics,\n         rustc_macro_transparency,\n+        rustc_main,\n         rustc_mir,\n         rustc_nonnull_optimization_guaranteed,\n         rustc_object_lifetime_default,"}, {"sha": "3a51f83ba3b182024f2f04570c06729ef0960c8f", "filename": "src/test/ui/attr-main-2.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fattr-main-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fattr-main-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattr-main-2.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,11 +0,0 @@\n-// run-pass\n-\n-#![feature(main)]\n-\n-pub fn main() {\n-    panic!()\n-}\n-\n-#[main]\n-fn foo() {\n-}"}, {"sha": "9c4caaa4a42eb8f29bb4f75dede382dac70be994", "filename": "src/test/ui/attr-main.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fattr-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fattr-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattr-main.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,8 +0,0 @@\n-// run-pass\n-// pretty-expanded FIXME #23616\n-\n-#![feature(main)]\n-\n-#[main]\n-fn foo() {\n-}"}, {"sha": "9c4caaa4a42eb8f29bb4f75dede382dac70be994", "filename": "src/test/ui/attr.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattr.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,8 +0,0 @@\n-// run-pass\n-// pretty-expanded FIXME #23616\n-\n-#![feature(main)]\n-\n-#[main]\n-fn foo() {\n-}"}, {"sha": "b8299c71bdf6d1c40bd0ceeff561e39cfbffd92d", "filename": "src/test/ui/error-codes/E0137.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ferror-codes%2FE0137.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ferror-codes%2FE0137.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0137.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,8 +0,0 @@\n-#![feature(main)]\n-\n-#[main]\n-fn foo() {}\n-\n-#[main]\n-fn f() {}\n-//~^ ERROR E0137"}, {"sha": "f4d5e10369ac76aebf5df842594ebc0aeebeeb3a", "filename": "src/test/ui/error-codes/E0137.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ferror-codes%2FE0137.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ferror-codes%2FE0137.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0137.stderr?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,12 +0,0 @@\n-error[E0137]: multiple functions with a `#[main]` attribute\n-  --> $DIR/E0137.rs:7:1\n-   |\n-LL | fn foo() {}\n-   | ----------- first `#[main]` function\n-...\n-LL | fn f() {}\n-   | ^^^^^^^^^ additional `#[main]` function\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0137`."}, {"sha": "9c304a1792fc291f320b1475f0cade80c94e37cf", "filename": "src/test/ui/feature-gates/feature-gate-main.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,2 +0,0 @@\n-#[main]\n-fn foo() {} //~ ERROR: declaration of a non-standard `#[main]` function may change over time"}, {"sha": "f0ef3b38c6209ce066d353fcdec051a937256b34", "filename": "src/test/ui/feature-gates/feature-gate-main.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: declaration of a non-standard `#[main]` function may change over time, for now a top-level `fn main()` is required\n-  --> $DIR/feature-gate-main.rs:2:1\n-   |\n-LL | fn foo() {}\n-   | ^^^^^^^^^^^\n-   |\n-   = note: see issue #29634 <https://github.com/rust-lang/rust/issues/29634> for more information\n-   = help: add `#![feature(main)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "d1fbd38ce07d9d91c7b272904b3747a14b3eaaa0", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -11,8 +11,8 @@\n \n #![macro_export]\n //~^ ERROR: `macro_export` attribute cannot be used at crate level\n-#![main]\n-//~^ ERROR: `main` attribute cannot be used at crate level\n+#![rustc_main] //~ ERROR: the `#[rustc_main]` attribute is used internally to specify\n+//~^ ERROR: `rustc_main` attribute cannot be used at crate level\n #![start]\n //~^ ERROR: `start` attribute cannot be used at crate level\n #![repr()]\n@@ -106,24 +106,6 @@ mod export_name {\n     //~| NOTE not a function or static\n }\n \n-#[main]\n-//~^ ERROR: `main` attribute can only be used on functions\n-mod main {\n-    mod inner { #![main] }\n-    //~^ ERROR: `main` attribute can only be used on functions\n-\n-    // for `fn f()` case, see feature-gate-main.rs\n-\n-    #[main] struct S;\n-    //~^ ERROR: `main` attribute can only be used on functions\n-\n-    #[main] type T = S;\n-    //~^ ERROR: `main` attribute can only be used on functions\n-\n-    #[main] impl S { }\n-    //~^ ERROR: `main` attribute can only be used on functions\n-}\n-\n #[start]\n //~^ ERROR: `start` attribute can only be used on functions\n mod start {"}, {"sha": "ae2c428cc75ce13cb408a26f83fb61e483234a88", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.stderr", "status": "modified", "additions": 19, "deletions": 40, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,3 +1,11 @@\n+error[E0658]: the `#[rustc_main]` attribute is used internally to specify test entry point function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:14:1\n+   |\n+LL | #![rustc_main]\n+   | ^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n+\n error: attribute must be of the form `#[inline]` or `#[inline(always|never)]`\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:40:5\n    |\n@@ -8,62 +16,32 @@ LL |     #[inline = \"2100\"] fn f() { }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n-error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:109:1\n-   |\n-LL | #[main]\n-   | ^^^^^^^\n-\n-error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:112:17\n-   |\n-LL |     mod inner { #![main] }\n-   |                 ^^^^^^^^\n-\n-error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:117:5\n-   |\n-LL |     #[main] struct S;\n-   |     ^^^^^^^\n-\n-error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:120:5\n-   |\n-LL |     #[main] type T = S;\n-   |     ^^^^^^^\n-\n-error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:123:5\n-   |\n-LL |     #[main] impl S { }\n-   |     ^^^^^^^\n-\n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:127:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:109:1\n    |\n LL | #[start]\n    | ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:130:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:112:17\n    |\n LL |     mod inner { #![start] }\n    |                 ^^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:135:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:117:5\n    |\n LL |     #[start] struct S;\n    |     ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:138:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:120:5\n    |\n LL |     #[start] type T = S;\n    |     ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:141:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:123:5\n    |\n LL |     #[start] impl S { }\n    |     ^^^^^^^^\n@@ -137,11 +115,11 @@ error: `macro_export` attribute cannot be used at crate level\n LL | #![macro_export]\n    | ^^^^^^^^^^^^^^^^\n \n-error: `main` attribute cannot be used at crate level\n+error: `rustc_main` attribute cannot be used at crate level\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:14:1\n    |\n-LL | #![main]\n-   | ^^^^^^^^\n+LL | #![rustc_main]\n+   | ^^^^^^^^^^^^^^\n \n error: `start` attribute cannot be used at crate level\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:16:1\n@@ -245,6 +223,7 @@ error: attribute should be applied to a function or static\n LL |     #[export_name = \"2200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n \n-error: aborting due to 36 previous errors\n+error: aborting due to 32 previous errors\n \n-For more information about this error, try `rustc --explain E0518`.\n+Some errors have detailed explanations: E0518, E0658.\n+For more information about an error, try `rustc --explain E0518`."}, {"sha": "592409ba89f9b5379571b3fae1450b26750625de", "filename": "src/test/ui/intrinsics/intrinsic-alignment.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-alignment.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n // ignore-wasm32-bare seems not important to test here\n \n-#![feature(intrinsics, main)]\n+#![feature(intrinsics)]\n \n mod rusti {\n     extern \"rust-intrinsic\" {\n@@ -21,7 +21,6 @@ mod rusti {\n           target_os = \"solaris\",\n           target_os = \"vxworks\"))]\n mod m {\n-    #[main]\n     #[cfg(target_arch = \"x86\")]\n     pub fn main() {\n         unsafe {\n@@ -30,7 +29,6 @@ mod m {\n         }\n     }\n \n-    #[main]\n     #[cfg(not(target_arch = \"x86\"))]\n     pub fn main() {\n         unsafe {\n@@ -42,7 +40,6 @@ mod m {\n \n #[cfg(target_env = \"sgx\")]\n mod m {\n-    #[main]\n     #[cfg(target_arch = \"x86_64\")]\n     pub fn main() {\n         unsafe {\n@@ -54,11 +51,14 @@ mod m {\n \n #[cfg(target_os = \"windows\")]\n mod m {\n-    #[main]\n     pub fn main() {\n         unsafe {\n             assert_eq!(::rusti::pref_align_of::<u64>(), 8);\n             assert_eq!(::rusti::min_align_of::<u64>(), 8);\n         }\n     }\n }\n+\n+fn main() {\n+    m::main();\n+}"}, {"sha": "2cfe6e539dbf4fb92bbea103682d4a56eee64a4b", "filename": "src/test/ui/lint/dead-code/lint-dead-code-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,6 +1,6 @@\n #![allow(unused_variables)]\n #![deny(dead_code)]\n-#![feature(main, start)]\n+#![feature(rustc_attrs, start)]\n \n struct Foo;\n \n@@ -21,7 +21,7 @@ fn live_fn() {}\n \n fn dead_fn() {} //~ ERROR: function is never used\n \n-#[main]\n+#[rustc_main]\n fn dead_fn2() {} //~ ERROR: function is never used\n \n fn used_fn() {}"}, {"sha": "f3acd80a7a48f0797a456bbd2b16794a135bcade", "filename": "src/test/ui/main-wrong-location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Fmain-wrong-location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Fmain-wrong-location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmain-wrong-location.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,6 +1,6 @@\n mod m {\n //~^ ERROR `main` function not found\n-    // An inferred main entry point (that doesn't use #[main])\n+    // An inferred main entry point\n     // must appear at the top of the crate\n     fn main() { }\n }"}, {"sha": "754ff0f80eb9afc7d8305c810aeb1f07b94eb407", "filename": "src/test/ui/main-wrong-location.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Fmain-wrong-location.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Fmain-wrong-location.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmain-wrong-location.stderr?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -3,7 +3,7 @@ error[E0601]: `main` function not found in crate `main_wrong_location`\n    |\n LL | / mod m {\n LL | |\n-LL | |     // An inferred main entry point (that doesn't use #[main])\n+LL | |     // An inferred main entry point\n LL | |     // must appear at the top of the crate\n LL | |     fn main() { }\n LL | | }\n@@ -15,7 +15,7 @@ note: here is a function named `main`\n LL |     fn main() { }\n    |     ^^^^^^^^^^^^^\n    = note: you have one or more functions named `main` not defined at the crate level\n-   = help: either move the `main` function definitions or attach the `#[main]` attribute to one of them\n+   = help: consider moving the `main` function definitions\n \n error: aborting due to previous error\n "}, {"sha": "e4685b1e004565192f9f18faf048eb8ac9a662c2", "filename": "src/test/ui/multiple-main-2.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmultiple-main-2.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,9 +0,0 @@\n-#![feature(main)]\n-\n-#[main]\n-fn bar() {\n-}\n-\n-#[main]\n-fn foo() { //~ ERROR multiple functions with a `#[main]` attribute\n-}"}, {"sha": "24bc9a8878b080ea7280eb093d3e5ca985a5329d", "filename": "src/test/ui/multiple-main-2.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmultiple-main-2.stderr?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,14 +0,0 @@\n-error[E0137]: multiple functions with a `#[main]` attribute\n-  --> $DIR/multiple-main-2.rs:8:1\n-   |\n-LL | / fn bar() {\n-LL | | }\n-   | |_- first `#[main]` function\n-...\n-LL | / fn foo() {\n-LL | | }\n-   | |_^ additional `#[main]` function\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0137`."}, {"sha": "d1b5ae9a83315acc7acea3782d936e80f8c5db37", "filename": "src/test/ui/multiple-main-3.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmultiple-main-3.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,11 +0,0 @@\n-#![feature(main)]\n-\n-#[main]\n-fn main1() {\n-}\n-\n-mod foo {\n-    #[main]\n-    fn main2() { //~ ERROR multiple functions with a `#[main]` attribute\n-    }\n-}"}, {"sha": "ec171b76a284a293309242d8168490678f3989b4", "filename": "src/test/ui/multiple-main-3.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fmultiple-main-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmultiple-main-3.stderr?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -1,14 +0,0 @@\n-error[E0137]: multiple functions with a `#[main]` attribute\n-  --> $DIR/multiple-main-3.rs:9:5\n-   |\n-LL | / fn main1() {\n-LL | | }\n-   | |_- first `#[main]` function\n-...\n-LL | /     fn main2() {\n-LL | |     }\n-   | |_____^ additional `#[main]` function\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0137`."}, {"sha": "0b2a9a3541b39346a057aa246d42d9b7df41a49f", "filename": "src/test/ui/test-attrs/test-main-not-dead-attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-main-not-dead-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-main-not-dead-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-main-not-dead-attr.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,9 +1,9 @@\n // run-pass\n // compile-flags: --test\n \n-#![feature(main)]\n+#![feature(rustc_attrs)]\n \n #![deny(dead_code)]\n \n-#[main]\n+#[rustc_main]\n fn foo() { panic!(); }"}, {"sha": "346aa868eb4673a8ae6d15a870079fa8dbbd45a8", "filename": "src/test/ui/test-attrs/test-runner-hides-buried-main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-runner-hides-buried-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-runner-hides-buried-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-runner-hides-buried-main.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,14 +1,14 @@\n // run-pass\n // compile-flags: --test\n \n-#![feature(main)]\n+#![feature(rustc_attrs)]\n \n #![allow(dead_code)]\n \n mod a {\n     fn b() {\n         (|| {\n-            #[main]\n+            #[rustc_main]\n             fn c() { panic!(); }\n         })();\n     }"}, {"sha": "7ff5a16ed86ca078e2fec2362f93a7a83213b2f4", "filename": "src/tools/clippy/tests/ui/crate_level_checks/entrypoint_recursion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bc912c4816a660b052dd7c8dffbc63fd4dffdf/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs?ref=d4bc912c4816a660b052dd7c8dffbc63fd4dffdf", "patch": "@@ -1,11 +1,11 @@\n // ignore-macos\n // ignore-windows\n \n-#![feature(main)]\n+#![feature(rustc_attrs)]\n \n #[warn(clippy::main_recursion)]\n #[allow(unconditional_recursion)]\n-#[main]\n+#[rustc_main]\n fn a() {\n     println!(\"Hello, World!\");\n     a();"}]}