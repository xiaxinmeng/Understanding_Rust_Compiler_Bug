{"sha": "c586bc3d760c4cb158aba5c59ca15809a6957142", "node_id": "C_kwDOAAsO6NoAKGM1ODZiYzNkNzYwYzRjYjE1OGFiYTVjNTljYTE1ODA5YTY5NTcxNDI", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-11T22:08:02Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-11T23:03:48Z"}, "message": "Prevent unwinding when `-C panic=abort` is used regardless declared ABI", "tree": {"sha": "822ae1e258cbfa758668a26c2586efa5885c680a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/822ae1e258cbfa758668a26c2586efa5885c680a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c586bc3d760c4cb158aba5c59ca15809a6957142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c586bc3d760c4cb158aba5c59ca15809a6957142", "html_url": "https://github.com/rust-lang/rust/commit/c586bc3d760c4cb158aba5c59ca15809a6957142", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c586bc3d760c4cb158aba5c59ca15809a6957142/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dd68402c5d7da168f87d8551dd9aed1d8a21893", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dd68402c5d7da168f87d8551dd9aed1d8a21893", "html_url": "https://github.com/rust-lang/rust/commit/6dd68402c5d7da168f87d8551dd9aed1d8a21893"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "630a89cc7cbfcef117aa1f6d11b6f7655a7a8dbe", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c586bc3d760c4cb158aba5c59ca15809a6957142/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c586bc3d760c4cb158aba5c59ca15809a6957142/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=c586bc3d760c4cb158aba5c59ca15809a6957142", "patch": "@@ -2888,6 +2888,14 @@ pub fn fn_can_unwind<'tcx>(tcx: TyCtxt<'tcx>, fn_def_id: Option<DefId>, abi: Spe\n             return false;\n         }\n \n+        // With `-C panic=abort`, all non-FFI functions are required to not unwind.\n+        //\n+        // Note that this is true regardless ABI specified on the function -- a `extern \"C-unwind\"`\n+        // function defined in Rust is also required to abort.\n+        if tcx.sess.panic_strategy() == PanicStrategy::Abort && !tcx.is_foreign_item(did) {\n+            return false;\n+        }\n+\n         // With -Z panic-in-drop=abort, drop_in_place never unwinds.\n         //\n         // This is not part of `codegen_fn_attrs` as it can differ between crates"}, {"sha": "5334a1c004dbb916062e600c7f0d3ebd086b18a4", "filename": "src/test/codegen/unwind-abis/c-unwind-abi-panic-abort.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c586bc3d760c4cb158aba5c59ca15809a6957142/src%2Ftest%2Fcodegen%2Funwind-abis%2Fc-unwind-abi-panic-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c586bc3d760c4cb158aba5c59ca15809a6957142/src%2Ftest%2Fcodegen%2Funwind-abis%2Fc-unwind-abi-panic-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funwind-abis%2Fc-unwind-abi-panic-abort.rs?ref=c586bc3d760c4cb158aba5c59ca15809a6957142", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: -C panic=abort\n \n-// Test that `nounwind` atributes are not applied to `C-unwind` extern functions\n-// even when the code is compiled with `panic=abort`.\n+// Test that `nounwind` atributes are also applied to extern `C-unwind` Rust functions\n+// when the code is compiled with `panic=abort`.\n \n #![crate_type = \"lib\"]\n #![feature(c_unwind)]\n@@ -19,4 +19,4 @@ pub unsafe extern \"C-unwind\" fn rust_item_that_can_unwind() {\n // Now, make sure that the LLVM attributes for this functions are correct.  First, make\n // sure that the first item is correctly marked with the `nounwind` attribute:\n //\n-// CHECK-NOT: attributes #0 = { {{.*}}nounwind{{.*}} }\n+// CHECK: attributes #0 = { {{.*}}nounwind{{.*}} }"}]}