{"sha": "ee13e895e337d01ea283a94b7896fddc0a922cb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMTNlODk1ZTMzN2QwMWVhMjgzYTk0Yjc4OTZmZGRjMGE5MjJjYjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-15T18:57:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-15T18:57:56Z"}, "message": "internal: switch some tests to minicore", "tree": {"sha": "668c259a6431246d14b2339f60ef64a229d9b9bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/668c259a6431246d14b2339f60ef64a229d9b9bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee13e895e337d01ea283a94b7896fddc0a922cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee13e895e337d01ea283a94b7896fddc0a922cb8", "html_url": "https://github.com/rust-lang/rust/commit/ee13e895e337d01ea283a94b7896fddc0a922cb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee13e895e337d01ea283a94b7896fddc0a922cb8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bb1f1bc90ee0f0f92f55823fc2e0c12c6acb680", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb1f1bc90ee0f0f92f55823fc2e0c12c6acb680", "html_url": "https://github.com/rust-lang/rust/commit/0bb1f1bc90ee0f0f92f55823fc2e0c12c6acb680"}], "stats": {"total": 87, "additions": 32, "deletions": 55}, "files": [{"sha": "1e0233b5574f04aa11dd2f02cb3f42463d24e490", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 24, "deletions": 26, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ee13e895e337d01ea283a94b7896fddc0a922cb8/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee13e895e337d01ea283a94b7896fddc0a922cb8/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=ee13e895e337d01ea283a94b7896fddc0a922cb8", "patch": "@@ -927,35 +927,33 @@ fn issue_6628() {\n fn issue_6852() {\n     check_infer(\n         r#\"\n-        #[lang = \"deref\"]\n-        pub trait Deref {\n-            type Target;\n-        }\n+//- minicore: deref\n+use core::ops::Deref;\n \n-        struct BufWriter {}\n+struct BufWriter {}\n \n-        struct Mutex<T> {}\n-        struct MutexGuard<'a, T> {}\n-        impl<T> Mutex<T> {\n-            fn lock(&self) -> MutexGuard<'_, T> {}\n-        }\n-        impl<'a, T: 'a> Deref for MutexGuard<'a, T> {\n-            type Target = T;\n-        }\n-        fn flush(&self) {\n-            let w: &Mutex<BufWriter>;\n-            *(w.lock());\n-        }\n-        \"#,\n+struct Mutex<T> {}\n+struct MutexGuard<'a, T> {}\n+impl<T> Mutex<T> {\n+    fn lock(&self) -> MutexGuard<'_, T> {}\n+}\n+impl<'a, T: 'a> Deref for MutexGuard<'a, T> {\n+    type Target = T;\n+}\n+fn flush(&self) {\n+    let w: &Mutex<BufWriter>;\n+    *(w.lock());\n+}\n+\"#,\n         expect![[r#\"\n-            156..160 'self': &Mutex<T>\n-            183..185 '{}': ()\n-            267..271 'self': &{unknown}\n-            273..323 '{     ...()); }': ()\n-            283..284 'w': &Mutex<BufWriter>\n-            309..320 '*(w.lock())': BufWriter\n-            311..312 'w': &Mutex<BufWriter>\n-            311..319 'w.lock()': MutexGuard<BufWriter>\n+            123..127 'self': &Mutex<T>\n+            150..152 '{}': ()\n+            234..238 'self': &{unknown}\n+            240..290 '{     ...()); }': ()\n+            250..251 'w': &Mutex<BufWriter>\n+            276..287 '*(w.lock())': BufWriter\n+            278..279 'w': &Mutex<BufWriter>\n+            278..286 'w.lock()': MutexGuard<BufWriter>\n         \"#]],\n     );\n }"}, {"sha": "d237c3998929d166c5c37e79e268091791a11efb", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 8, "deletions": 29, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ee13e895e337d01ea283a94b7896fddc0a922cb8/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee13e895e337d01ea283a94b7896fddc0a922cb8/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=ee13e895e337d01ea283a94b7896fddc0a922cb8", "patch": "@@ -704,14 +704,9 @@ mod ops {\n fn deref_trait() {\n     check_types(\n         r#\"\n-#[lang = \"deref\"]\n-trait Deref {\n-    type Target;\n-    fn deref(&self) -> &Self::Target;\n-}\n-\n+//- minicore: deref\n struct Arc<T>;\n-impl<T> Deref for Arc<T> {\n+impl<T> core::ops::Deref for Arc<T> {\n     type Target = T;\n }\n \n@@ -731,16 +726,10 @@ fn test(s: Arc<S>) {\n fn deref_trait_with_inference_var() {\n     check_types(\n         r#\"\n-//- /main.rs\n-#[lang = \"deref\"]\n-trait Deref {\n-    type Target;\n-    fn deref(&self) -> &Self::Target;\n-}\n-\n+//- minicore: deref\n struct Arc<T>;\n fn new_arc<T>() -> Arc<T> {}\n-impl<T> Deref for Arc<T> {\n+impl<T> core::ops::Deref for Arc<T> {\n     type Target = T;\n }\n \n@@ -761,15 +750,10 @@ fn test() {\n fn deref_trait_infinite_recursion() {\n     check_types(\n         r#\"\n-#[lang = \"deref\"]\n-trait Deref {\n-    type Target;\n-    fn deref(&self) -> &Self::Target;\n-}\n-\n+//- minicore: deref\n struct S;\n \n-impl Deref for S {\n+impl core::ops::Deref for S {\n     type Target = S;\n }\n \n@@ -784,14 +768,9 @@ fn test(s: S) {\n fn deref_trait_with_question_mark_size() {\n     check_types(\n         r#\"\n-#[lang = \"deref\"]\n-trait Deref {\n-    type Target;\n-    fn deref(&self) -> &Self::Target;\n-}\n-\n+//- minicore: deref\n struct Arc<T>;\n-impl<T> Deref for Arc<T> {\n+impl<T: ?Sized> core::ops::Deref for Arc<T> {\n     type Target = T;\n }\n "}]}