{"sha": "fa38fad5a2f111eb17b8beb833a053c30b61846a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMzhmYWQ1YTJmMTExZWIxN2I4YmViODMzYTA1M2MzMGI2MTg0NmE=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-07T06:21:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-07T06:21:04Z"}, "message": "Rollup merge of #86025 - bjorn3:no_rpath_cfg_prefix, r=jackh726\n\nRemove the install prefix from the rpath set when using -Crpath\n\nIt was broken anyway for rustup installs and nobody seems to have noticed.\n\nFixes https://github.com/rust-lang/rust/issues/82392", "tree": {"sha": "b178c5aa34c7505c279bee99c14001c86aad988c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b178c5aa34c7505c279bee99c14001c86aad988c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa38fad5a2f111eb17b8beb833a053c30b61846a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvbrRCRBK7hj4Ov3rIwAAMJsIACxJ9f9YcYrmjlJBQMV9AeTp\nEdY6KIJW6uq7MqsyGwxRif7NNNsusF21BtIEeAgIJ5irq3aDenBefyPW0QhDIYvU\nFh3PdJJWt+TBppmEaw52qHalqOh8i8m+WD98mp32SqOZoyqTdNzP0WSYMG3osf3s\nuyjJZYgCoBdBYewsYzoH+ERq7SbPaeZdhmSKwtO+q7PJwKrkQrx+7eznRvKupcMz\nZrf36USfzFQjt6yucBqLcDbjoLQyClBaZqrbiD3kZb/WToc0z+RaaKVWJIE1tcFr\nGWPgP5lxRZWM69XclOMarh0alSF1HdiKBnXx4DXA2HpAFfa92Q8Ye7ROaPLX7xE=\n=r9Jm\n-----END PGP SIGNATURE-----\n", "payload": "tree b178c5aa34c7505c279bee99c14001c86aad988c\nparent 4144019847c0cbe813816fe387956fc84935d375\nparent 6b45d59caa3495eb79625930f15a7761c4cbc3a4\nauthor Yuki Okushi <jtitor@2k36.org> 1623046864 +0900\ncommitter GitHub <noreply@github.com> 1623046864 +0900\n\nRollup merge of #86025 - bjorn3:no_rpath_cfg_prefix, r=jackh726\n\nRemove the install prefix from the rpath set when using -Crpath\n\nIt was broken anyway for rustup installs and nobody seems to have noticed.\n\nFixes https://github.com/rust-lang/rust/issues/82392\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa38fad5a2f111eb17b8beb833a053c30b61846a", "html_url": "https://github.com/rust-lang/rust/commit/fa38fad5a2f111eb17b8beb833a053c30b61846a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa38fad5a2f111eb17b8beb833a053c30b61846a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4144019847c0cbe813816fe387956fc84935d375", "url": "https://api.github.com/repos/rust-lang/rust/commits/4144019847c0cbe813816fe387956fc84935d375", "html_url": "https://github.com/rust-lang/rust/commit/4144019847c0cbe813816fe387956fc84935d375"}, {"sha": "6b45d59caa3495eb79625930f15a7761c4cbc3a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b45d59caa3495eb79625930f15a7761c4cbc3a4", "html_url": "https://github.com/rust-lang/rust/commit/6b45d59caa3495eb79625930f15a7761c4cbc3a4"}], "stats": {"total": 44, "additions": 6, "deletions": 38}, "files": [{"sha": "6a2005b4d23ed01bdb7d93eed3d3f25b2b835adf", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa38fad5a2f111eb17b8beb833a053c30b61846a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa38fad5a2f111eb17b8beb833a053c30b61846a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=fa38fad5a2f111eb17b8beb833a053c30b61846a", "patch": "@@ -1715,24 +1715,14 @@ fn add_rpath_args(\n ) {\n     // FIXME (#2397): At some point we want to rpath our guesses as to\n     // where extern libraries might live, based on the\n-    // addl_lib_search_paths\n+    // add_lib_search_paths\n     if sess.opts.cg.rpath {\n-        let target_triple = sess.opts.target_triple.triple();\n-        let mut get_install_prefix_lib_path = || {\n-            let install_prefix = option_env!(\"CFG_PREFIX\").expect(\"CFG_PREFIX\");\n-            let tlib = rustc_target::target_rustlib_path(&sess.sysroot, target_triple).join(\"lib\");\n-            let mut path = PathBuf::from(install_prefix);\n-            path.push(&tlib);\n-\n-            path\n-        };\n         let mut rpath_config = RPathConfig {\n             used_crates: &codegen_results.crate_info.used_crates_dynamic,\n             out_filename: out_filename.to_path_buf(),\n             has_rpath: sess.target.has_rpath,\n             is_like_osx: sess.target.is_like_osx,\n             linker_is_gnu: sess.target.linker_is_gnu,\n-            get_install_prefix_lib_path: &mut get_install_prefix_lib_path,\n         };\n         cmd.args(&rpath::get_rpath_flags(&mut rpath_config));\n     }"}, {"sha": "39b0ccd120de519c747af97a88091c035d1cf4a2", "filename": "compiler/rustc_codegen_ssa/src/back/rpath.rs", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fa38fad5a2f111eb17b8beb833a053c30b61846a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa38fad5a2f111eb17b8beb833a053c30b61846a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath.rs?ref=fa38fad5a2f111eb17b8beb833a053c30b61846a", "patch": "@@ -13,7 +13,6 @@ pub struct RPathConfig<'a> {\n     pub is_like_osx: bool,\n     pub has_rpath: bool,\n     pub linker_is_gnu: bool,\n-    pub get_install_prefix_lib_path: &'a mut dyn FnMut() -> PathBuf,\n }\n \n pub fn get_rpath_flags(config: &mut RPathConfig<'_>) -> Vec<String> {\n@@ -63,24 +62,13 @@ fn get_rpaths(config: &mut RPathConfig<'_>, libs: &[PathBuf]) -> Vec<String> {\n     // Use relative paths to the libraries. Binaries can be moved\n     // as long as they maintain the relative relationship to the\n     // crates they depend on.\n-    let rel_rpaths = get_rpaths_relative_to_output(config, libs);\n+    let rpaths = get_rpaths_relative_to_output(config, libs);\n \n-    // And a final backup rpath to the global library location.\n-    let fallback_rpaths = vec![get_install_prefix_rpath(config)];\n-\n-    fn log_rpaths(desc: &str, rpaths: &[String]) {\n-        debug!(\"{} rpaths:\", desc);\n-        for rpath in rpaths {\n-            debug!(\"    {}\", *rpath);\n-        }\n+    debug!(\"rpaths:\");\n+    for rpath in &rpaths {\n+        debug!(\"    {}\", rpath);\n     }\n \n-    log_rpaths(\"relative\", &rel_rpaths);\n-    log_rpaths(\"fallback\", &fallback_rpaths);\n-\n-    let mut rpaths = rel_rpaths;\n-    rpaths.extend_from_slice(&fallback_rpaths);\n-\n     // Remove duplicates\n     minimize_rpaths(&rpaths)\n }\n@@ -113,13 +101,6 @@ fn path_relative_from(path: &Path, base: &Path) -> Option<PathBuf> {\n     diff_paths(path, base)\n }\n \n-fn get_install_prefix_rpath(config: &mut RPathConfig<'_>) -> String {\n-    let path = (config.get_install_prefix_lib_path)();\n-    let path = env::current_dir().unwrap().join(&path);\n-    // FIXME (#9639): This needs to handle non-utf8 paths\n-    path.to_str().expect(\"non-utf8 component in rpath\").to_owned()\n-}\n-\n fn minimize_rpaths(rpaths: &[String]) -> Vec<String> {\n     let mut set = FxHashSet::default();\n     let mut minimized = Vec::new();"}, {"sha": "24c362db12275b103947ad2cbfcdaaecf4f9faae", "filename": "compiler/rustc_codegen_ssa/src/back/rpath/tests.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa38fad5a2f111eb17b8beb833a053c30b61846a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa38fad5a2f111eb17b8beb833a053c30b61846a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath%2Ftests.rs?ref=fa38fad5a2f111eb17b8beb833a053c30b61846a", "patch": "@@ -40,15 +40,13 @@ fn test_rpath_relative() {\n             is_like_osx: true,\n             linker_is_gnu: false,\n             out_filename: PathBuf::from(\"bin/rustc\"),\n-            get_install_prefix_lib_path: &mut || panic!(),\n         };\n         let res = get_rpath_relative_to_output(config, Path::new(\"lib/libstd.so\"));\n         assert_eq!(res, \"@loader_path/../lib\");\n     } else {\n         let config = &mut RPathConfig {\n             used_crates: &[],\n             out_filename: PathBuf::from(\"bin/rustc\"),\n-            get_install_prefix_lib_path: &mut || panic!(),\n             has_rpath: true,\n             is_like_osx: false,\n             linker_is_gnu: true,"}, {"sha": "ed311e273b19c9ee91b3d87bfef0a73abf2248eb", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa38fad5a2f111eb17b8beb833a053c30b61846a/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa38fad5a2f111eb17b8beb833a053c30b61846a/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=fa38fad5a2f111eb17b8beb833a053c30b61846a", "patch": "@@ -636,8 +636,7 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n     cargo\n         .env(\"CFG_RELEASE\", builder.rust_release())\n         .env(\"CFG_RELEASE_CHANNEL\", &builder.config.channel)\n-        .env(\"CFG_VERSION\", builder.rust_version())\n-        .env(\"CFG_PREFIX\", builder.config.prefix.clone().unwrap_or_default());\n+        .env(\"CFG_VERSION\", builder.rust_version());\n \n     let libdir_relative = builder.config.libdir_relative().unwrap_or_else(|| Path::new(\"lib\"));\n     cargo.env(\"CFG_LIBDIR_RELATIVE\", libdir_relative);"}]}