{"sha": "98445d95d4615093c5e639f1e966830b99b95d63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NDQ1ZDk1ZDQ2MTUwOTNjNWU2MzlmMWU5NjY4MzBiOTliOTVkNjM=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-01-28T12:16:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-03T23:37:25Z"}, "message": "Removed wrong/wip doc", "tree": {"sha": "01d0ebeedde71ed3bcb2197db8688ff43eff52dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01d0ebeedde71ed3bcb2197db8688ff43eff52dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98445d95d4615093c5e639f1e966830b99b95d63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98445d95d4615093c5e639f1e966830b99b95d63", "html_url": "https://github.com/rust-lang/rust/commit/98445d95d4615093c5e639f1e966830b99b95d63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98445d95d4615093c5e639f1e966830b99b95d63/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a612e49a21412e2e53bf59ece4408c9f078a49f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a612e49a21412e2e53bf59ece4408c9f078a49f5", "html_url": "https://github.com/rust-lang/rust/commit/a612e49a21412e2e53bf59ece4408c9f078a49f5"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "9a138de3cf35d6f05cc5fab80df631d60085cf69", "filename": "src/libcore/num/num.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98445d95d4615093c5e639f1e966830b99b95d63/src%2Flibcore%2Fnum%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98445d95d4615093c5e639f1e966830b99b95d63/src%2Flibcore%2Fnum%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fnum.rs?ref=98445d95d4615093c5e639f1e966830b99b95d63", "patch": "@@ -215,10 +215,6 @@ pub enum SignFormat {\n  * with a 'divide by zero'. Likewise, it will fail if `num` **is** one of\n  * those special values, and `special` is `false`, because then the\n  * algorithm just does normal calculations on them.\n- *\n- * # Possible improvements\n- * - Currently performs no rounding if truncating trailing digits.\n- * - Make function handle numbers with expensive copies better.\n  */\n pub pure fn to_str_bytes_common<T: Num Zero One Eq Ord Round Copy>(\n         num: &T, radix: uint, special: bool, negative_zero: bool,"}]}