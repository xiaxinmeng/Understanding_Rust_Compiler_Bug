{"sha": "1eb53902f3b2b9c02b20472a8c7747b89bd54203", "node_id": "C_kwDOAAsO6NoAKDFlYjUzOTAyZjNiMmI5YzAyYjIwNDcyYThjNzc0N2I4OWJkNTQyMDM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-11T04:37:07Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-11T04:55:33Z"}, "message": "Fix `RegionCtxt::preference_value`.\n\nThere's a bad pattern matching confusion present in this function.\n`_anon` gets assigned to, and then `_anon` is used as an unbound\nvariable in the pattern, which is unrelated to the first `_anon`.\nIf the `_anon` didn't start with `_` the compiler would give warnings.\n\nThis was introduced in #104239.\n\nI have rewritten the function to remove the confusion and preserve the\nexisting behaviour. This seems safest, because the original intent is\nnot clear.", "tree": {"sha": "248d3b0e2d9cea2971e7fac850e19975d992d23f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/248d3b0e2d9cea2971e7fac850e19975d992d23f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eb53902f3b2b9c02b20472a8c7747b89bd54203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb53902f3b2b9c02b20472a8c7747b89bd54203", "html_url": "https://github.com/rust-lang/rust/commit/1eb53902f3b2b9c02b20472a8c7747b89bd54203", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eb53902f3b2b9c02b20472a8c7747b89bd54203/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5716ae6982a4044429eb1d27d1921d70aebde64d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5716ae6982a4044429eb1d27d1921d70aebde64d", "html_url": "https://github.com/rust-lang/rust/commit/5716ae6982a4044429eb1d27d1921d70aebde64d"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "f37a7cce3b3ec60699c7bdf55b3556f95e82c528", "filename": "compiler/rustc_borrowck/src/renumber.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1eb53902f3b2b9c02b20472a8c7747b89bd54203/compiler%2Frustc_borrowck%2Fsrc%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb53902f3b2b9c02b20472a8c7747b89bd54203/compiler%2Frustc_borrowck%2Fsrc%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Frenumber.rs?ref=1eb53902f3b2b9c02b20472a8c7747b89bd54203", "patch": "@@ -69,12 +69,10 @@ impl RegionCtxt {\n     /// Used to determine the representative of a component in the strongly connected\n     /// constraint graph\n     pub(crate) fn preference_value(self) -> usize {\n-        let _anon = Symbol::intern(\"anon\");\n-\n         match self {\n             RegionCtxt::Unknown => 1,\n             RegionCtxt::Existential(None) => 2,\n-            RegionCtxt::Existential(Some(_anon)) | RegionCtxt::Free(_anon) => 2,\n+            RegionCtxt::Existential(Some(_)) | RegionCtxt::Free(_) => 2,\n             RegionCtxt::Location(_) => 3,\n             RegionCtxt::TyContext(_) => 4,\n             _ => 5,"}]}