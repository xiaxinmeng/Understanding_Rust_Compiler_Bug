{"sha": "74fbbefea8d13683cca5eee62e4740706cb3144a", "node_id": "C_kwDOAAsO6NoAKDc0ZmJiZWZlYThkMTM2ODNjY2E1ZWVlNjJlNDc0MDcwNmNiMzE0NGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-20T06:50:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-20T06:50:14Z"}, "message": "Auto merge of #92138 - AngelicosPhosphoros:try_smarter_vec_from_iter_48994_2, r=Mark-Simulacrum\n\nImprove capacity estimation in Vec::from_iter\n\nIterates on the attempt made in #53086.\n\nCloses #48994", "tree": {"sha": "eb044d094bfe63e07842d79263d06a64a46eb806", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb044d094bfe63e07842d79263d06a64a46eb806"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74fbbefea8d13683cca5eee62e4740706cb3144a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74fbbefea8d13683cca5eee62e4740706cb3144a", "html_url": "https://github.com/rust-lang/rust/commit/74fbbefea8d13683cca5eee62e4740706cb3144a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74fbbefea8d13683cca5eee62e4740706cb3144a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "237949b6c8e5b387e0a9d1e7a22e0397c95fe488", "url": "https://api.github.com/repos/rust-lang/rust/commits/237949b6c8e5b387e0a9d1e7a22e0397c95fe488", "html_url": "https://github.com/rust-lang/rust/commit/237949b6c8e5b387e0a9d1e7a22e0397c95fe488"}, {"sha": "ea570c689cf5dfb07f39853cc26701f382dff9a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea570c689cf5dfb07f39853cc26701f382dff9a6", "html_url": "https://github.com/rust-lang/rust/commit/ea570c689cf5dfb07f39853cc26701f382dff9a6"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "8fa0242ca9a9f05d699384422bb097c6aa078608", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74fbbefea8d13683cca5eee62e4740706cb3144a/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74fbbefea8d13683cca5eee62e4740706cb3144a/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=74fbbefea8d13683cca5eee62e4740706cb3144a", "patch": "@@ -108,7 +108,7 @@ impl<T, A: Allocator> RawVec<T, A> {\n     //   to round up a request of less than 8 bytes to at least 8 bytes.\n     // - 4 if elements are moderate-sized (<= 1 KiB).\n     // - 1 otherwise, to avoid wasting too much space for very short Vecs.\n-    const MIN_NON_ZERO_CAP: usize = if mem::size_of::<T>() == 1 {\n+    pub(crate) const MIN_NON_ZERO_CAP: usize = if mem::size_of::<T>() == 1 {\n         8\n     } else if mem::size_of::<T>() <= 1024 {\n         4"}, {"sha": "f915ebb86e5a5f945ed6e7f83cb3ec7d0f90dafe", "filename": "library/alloc/src/vec/spec_from_iter_nested.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/74fbbefea8d13683cca5eee62e4740706cb3144a/library%2Falloc%2Fsrc%2Fvec%2Fspec_from_iter_nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74fbbefea8d13683cca5eee62e4740706cb3144a/library%2Falloc%2Fsrc%2Fvec%2Fspec_from_iter_nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fspec_from_iter_nested.rs?ref=74fbbefea8d13683cca5eee62e4740706cb3144a", "patch": "@@ -1,5 +1,8 @@\n+use core::cmp;\n use core::iter::TrustedLen;\n-use core::ptr::{self};\n+use core::ptr;\n+\n+use crate::raw_vec::RawVec;\n \n use super::{SpecExtend, Vec};\n \n@@ -24,8 +27,11 @@ where\n             None => return Vec::new(),\n             Some(element) => {\n                 let (lower, _) = iterator.size_hint();\n-                let mut vector = Vec::with_capacity(lower.saturating_add(1));\n+                let initial_capacity =\n+                    cmp::max(RawVec::<T>::MIN_NON_ZERO_CAP, lower.saturating_add(1));\n+                let mut vector = Vec::with_capacity(initial_capacity);\n                 unsafe {\n+                    // SAFETY: We requested capacity at least 1\n                     ptr::write(vector.as_mut_ptr(), element);\n                     vector.set_len(1);\n                 }"}]}