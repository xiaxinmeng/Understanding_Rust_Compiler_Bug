{"sha": "1b136323dcd219241bf8b8949f50992a83b28954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMTM2MzIzZGNkMjE5MjQxYmY4Yjg5NDlmNTA5OTJhODNiMjg5NTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-02T18:15:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-02T18:15:14Z"}, "message": "Rollup merge of #86813 - JohnTitor:unused-doc-comments-help, r=jackh726\n\nAdd a help message to `unused_doc_comments` lint\n\nFixes #83492\nThis adds a help message to suggest a plain comment like the E0658 error. I've yet to come up with the best message about the doc attribute but the current shouldn't harm anything.\nI was thinking of recovering in the `doc_comment_between_if_else` case, but I came to the conclusion that it unlikely happened and was an overkill.", "tree": {"sha": "cfedf10bf94c69919d7a6284efa7a98a50a8f702", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfedf10bf94c69919d7a6284efa7a98a50a8f702"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b136323dcd219241bf8b8949f50992a83b28954", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg31ezCRBK7hj4Ov3rIwAAVk4IACOWlw7mJXYjFHQ4csd49RfN\njSD7YriGNbUZqyc2q0arVfMPUBDiBtHSdIdJpJWaSVwmwQQqKIERZO/JXLgN9I8f\nfWFFQbzerYM92j0TGIH3RqTHgsjdqrayz3ihMdFx6lKOvi4NsMtOXtD2M2KO2Quk\nQPOrFqQn06ZNYZUHrdIX2MH7JccZb5f6MCBw/0d4ZitMyLnBxiGIwol+lrUXNGTK\nVcBjaTfF3pJO43cGqOm3SWLh6vx40mhkbp7PLUBL+6+yj5Cb6uSAJm6WrvFsNSMc\nAJOZTEQH3lvg5pi0qYb1Hdm2I1thQB8Xr5U3DWEQ7pmKYxPEDMUKeSRtS0Mru3U=\n=JcYK\n-----END PGP SIGNATURE-----\n", "payload": "tree cfedf10bf94c69919d7a6284efa7a98a50a8f702\nparent df55204afb61440204e9c26bf02889563180b685\nparent 086eb4764a67ecb874274f712a6576bd4a273fd0\nauthor Yuki Okushi <jtitor@2k36.org> 1625249714 +0900\ncommitter GitHub <noreply@github.com> 1625249714 +0900\n\nRollup merge of #86813 - JohnTitor:unused-doc-comments-help, r=jackh726\n\nAdd a help message to `unused_doc_comments` lint\n\nFixes #83492\nThis adds a help message to suggest a plain comment like the E0658 error. I've yet to come up with the best message about the doc attribute but the current shouldn't harm anything.\nI was thinking of recovering in the `doc_comment_between_if_else` case, but I came to the conclusion that it unlikely happened and was an overkill.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b136323dcd219241bf8b8949f50992a83b28954", "html_url": "https://github.com/rust-lang/rust/commit/1b136323dcd219241bf8b8949f50992a83b28954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b136323dcd219241bf8b8949f50992a83b28954/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df55204afb61440204e9c26bf02889563180b685", "url": "https://api.github.com/repos/rust-lang/rust/commits/df55204afb61440204e9c26bf02889563180b685", "html_url": "https://github.com/rust-lang/rust/commit/df55204afb61440204e9c26bf02889563180b685"}, {"sha": "086eb4764a67ecb874274f712a6576bd4a273fd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/086eb4764a67ecb874274f712a6576bd4a273fd0", "html_url": "https://github.com/rust-lang/rust/commit/086eb4764a67ecb874274f712a6576bd4a273fd0"}], "stats": {"total": 121, "additions": 119, "deletions": 2}, "files": [{"sha": "b303f55cf772b8af4a73efb55e3f5e6f0aad4190", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1b136323dcd219241bf8b8949f50992a83b28954/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b136323dcd219241bf8b8949f50992a83b28954/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=1b136323dcd219241bf8b8949f50992a83b28954", "patch": "@@ -984,13 +984,16 @@ impl EarlyLintPass for DeprecatedAttr {\n }\n \n fn warn_if_doc(cx: &EarlyContext<'_>, node_span: Span, node_kind: &str, attrs: &[ast::Attribute]) {\n+    use rustc_ast::token::CommentKind;\n+\n     let mut attrs = attrs.iter().peekable();\n \n     // Accumulate a single span for sugared doc comments.\n     let mut sugared_span: Option<Span> = None;\n \n     while let Some(attr) = attrs.next() {\n-        if attr.is_doc_comment() {\n+        let is_doc_comment = attr.is_doc_comment();\n+        if is_doc_comment {\n             sugared_span =\n                 Some(sugared_span.map_or(attr.span, |span| span.with_hi(attr.span.hi())));\n         }\n@@ -1001,13 +1004,21 @@ fn warn_if_doc(cx: &EarlyContext<'_>, node_span: Span, node_kind: &str, attrs: &\n \n         let span = sugared_span.take().unwrap_or(attr.span);\n \n-        if attr.is_doc_comment() || cx.sess().check_name(attr, sym::doc) {\n+        if is_doc_comment || cx.sess().check_name(attr, sym::doc) {\n             cx.struct_span_lint(UNUSED_DOC_COMMENTS, span, |lint| {\n                 let mut err = lint.build(\"unused doc comment\");\n                 err.span_label(\n                     node_span,\n                     format!(\"rustdoc does not generate documentation for {}\", node_kind),\n                 );\n+                match attr.kind {\n+                    AttrKind::DocComment(CommentKind::Line, _) | AttrKind::Normal(..) => {\n+                        err.help(\"use `//` for a plain comment\");\n+                    }\n+                    AttrKind::DocComment(CommentKind::Block, _) => {\n+                        err.help(\"use `/* */` for a plain comment\");\n+                    }\n+                }\n                 err.emit();\n             });\n         }"}, {"sha": "fd9baf8c6b9a28168e7433af05f1d3cd0ed15bb6", "filename": "src/test/ui/unused/unused-doc-comments-edge-cases.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1b136323dcd219241bf8b8949f50992a83b28954/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-edge-cases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b136323dcd219241bf8b8949f50992a83b28954/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-edge-cases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-edge-cases.rs?ref=1b136323dcd219241bf8b8949f50992a83b28954", "patch": "@@ -0,0 +1,29 @@\n+#![deny(unused_doc_comments)]\n+\n+fn doc_comment_on_match_arms(num: u8) -> bool {\n+    match num {\n+        3 => true,\n+        /// useless doc comment\n+        //~^ ERROR: unused doc comment\n+        _ => false,\n+    }\n+}\n+\n+fn doc_comment_between_if_else(num: u8) -> bool {\n+    if num == 3 {\n+        true //~ ERROR: mismatched types\n+    }\n+    /// useless doc comment\n+    else { //~ ERROR: expected expression, found keyword `else`\n+        false\n+    }\n+}\n+\n+fn doc_comment_on_expr(num: u8) -> bool {\n+    /// useless doc comment\n+    //~^ ERROR: attributes on expressions are experimental\n+    //~| ERROR: unused doc comment\n+    num == 3\n+}\n+\n+fn main() {}"}, {"sha": "14db5f64b0c7406f7f11e1294918150a44585e1e", "filename": "src/test/ui/unused/unused-doc-comments-edge-cases.stderr", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/1b136323dcd219241bf8b8949f50992a83b28954/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-edge-cases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b136323dcd219241bf8b8949f50992a83b28954/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-edge-cases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-edge-cases.stderr?ref=1b136323dcd219241bf8b8949f50992a83b28954", "patch": "@@ -0,0 +1,61 @@\n+error: expected expression, found keyword `else`\n+  --> $DIR/unused-doc-comments-edge-cases.rs:17:5\n+   |\n+LL |     else {\n+   |     ^^^^ expected expression\n+\n+error[E0658]: attributes on expressions are experimental\n+  --> $DIR/unused-doc-comments-edge-cases.rs:23:5\n+   |\n+LL |     /// useless doc comment\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n+   = help: `///` is for documentation comments. For a plain comment, use `//`.\n+\n+error: unused doc comment\n+  --> $DIR/unused-doc-comments-edge-cases.rs:6:9\n+   |\n+LL |         /// useless doc comment\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL |         _ => false,\n+   |         ---------- rustdoc does not generate documentation for match arms\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused-doc-comments-edge-cases.rs:1:9\n+   |\n+LL | #![deny(unused_doc_comments)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+   = help: use `//` for a plain comment\n+\n+error: unused doc comment\n+  --> $DIR/unused-doc-comments-edge-cases.rs:23:5\n+   |\n+LL |     /// useless doc comment\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     num == 3\n+   |     --- rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `//` for a plain comment\n+\n+error[E0308]: mismatched types\n+  --> $DIR/unused-doc-comments-edge-cases.rs:14:9\n+   |\n+LL | /     if num == 3 {\n+LL | |         true\n+   | |         ^^^^ expected `()`, found `bool`\n+LL | |     }\n+   | |_____- expected this to be `()`\n+   |\n+help: you might have meant to return this value\n+   |\n+LL |         return true;\n+   |         ^^^^^^     ^\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors have detailed explanations: E0308, E0658.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "0054426fb1ec0cccf257bf1436f41f1040c8ac38", "filename": "src/test/ui/unused/useless-comment.stderr", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1b136323dcd219241bf8b8949f50992a83b28954/src%2Ftest%2Fui%2Funused%2Fuseless-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b136323dcd219241bf8b8949f50992a83b28954/src%2Ftest%2Fui%2Funused%2Fuseless-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Fuseless-comment.stderr?ref=1b136323dcd219241bf8b8949f50992a83b28954", "patch": "@@ -26,6 +26,8 @@ LL |     /// a\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |     let x = 12;\n    |     ----------- rustdoc does not generate documentation for statements\n+   |\n+   = help: use `//` for a plain comment\n \n error: unused doc comment\n   --> $DIR/useless-comment.rs:16:5\n@@ -40,6 +42,8 @@ LL | |         1 => {},\n LL | |         _ => {}\n LL | |     }\n    | |_____- rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `//` for a plain comment\n \n error: unused doc comment\n   --> $DIR/useless-comment.rs:20:9\n@@ -48,6 +52,8 @@ LL |         /// c\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         1 => {},\n    |         ------- rustdoc does not generate documentation for match arms\n+   |\n+   = help: use `//` for a plain comment\n \n error: unused doc comment\n   --> $DIR/useless-comment.rs:25:5\n@@ -56,6 +62,8 @@ LL |     /// foo\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |     unsafe {}\n    |     --------- rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `//` for a plain comment\n \n error: unused doc comment\n   --> $DIR/useless-comment.rs:28:5\n@@ -65,6 +73,8 @@ LL |     #[doc = \"foo\"]\n LL |     #[doc = \"bar\"]\n LL |     3;\n    |     - rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `//` for a plain comment\n \n error: unused doc comment\n   --> $DIR/useless-comment.rs:29:5\n@@ -73,12 +83,16 @@ LL |     #[doc = \"bar\"]\n    |     ^^^^^^^^^^^^^^\n LL |     3;\n    |     - rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `//` for a plain comment\n \n error: unused doc comment\n   --> $DIR/useless-comment.rs:35:13\n    |\n LL |     let x = /** comment */ 47;\n    |             ^^^^^^^^^^^^^^ -- rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `/* */` for a plain comment\n \n error: unused doc comment\n   --> $DIR/useless-comment.rs:37:5\n@@ -89,6 +103,8 @@ LL | /     {\n LL | |\n LL | |     }\n    | |_____- rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `//` for a plain comment\n \n error: aborting due to 10 previous errors\n "}]}