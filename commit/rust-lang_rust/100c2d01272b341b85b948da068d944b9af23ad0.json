{"sha": "100c2d01272b341b85b948da068d944b9af23ad0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMGMyZDAxMjcyYjM0MWI4NWI5NDhkYTA2OGQ5NDRiOWFmMjNhZDA=", "commit": {"author": {"name": "Michal Terepeta", "email": "michal.terepeta@gmail.com", "date": "2020-01-03T11:50:35Z"}, "committer": {"name": "Michal Terepeta", "email": "michal.terepeta@gmail.com", "date": "2020-01-03T11:50:35Z"}, "message": "Add `profile` calls to {Module,Function}::diagnostics\n\nWith this change the output `ra_prof` gives a better indication where\nthe time is spent. Example output:\n\n```\n  213ms - publish_diagnostics\n      213ms - diagnostics\n           70ms - Module::from_definition\n               70ms - Module::from_file\n          132ms - Module::diagnostics\n               78ms - Function::diagnostics\n                    0ms - body_with_source_map_query (1 calls)\n                    2ms - trait_solve_query (1 calls)\n                   76ms - ???\n               15ms - Function::diagnostics\n                    0ms - body_with_source_map_query (1 calls)\n                   15ms - trait_solve_query (5 calls)\n               38ms - Function::diagnostics (51 calls)\n            8ms - parse_query (1 calls)\n ```\n\nSigned-off-by: Michal Terepeta <michal.terepeta@gmail.com>", "tree": {"sha": "1b2cd8f90a91b687ddec97bab47e8e9e1bf21812", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b2cd8f90a91b687ddec97bab47e8e9e1bf21812"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/100c2d01272b341b85b948da068d944b9af23ad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/100c2d01272b341b85b948da068d944b9af23ad0", "html_url": "https://github.com/rust-lang/rust/commit/100c2d01272b341b85b948da068d944b9af23ad0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/100c2d01272b341b85b948da068d944b9af23ad0/comments", "author": {"login": "michalt", "id": 119711, "node_id": "MDQ6VXNlcjExOTcxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/119711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalt", "html_url": "https://github.com/michalt", "followers_url": "https://api.github.com/users/michalt/followers", "following_url": "https://api.github.com/users/michalt/following{/other_user}", "gists_url": "https://api.github.com/users/michalt/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalt/subscriptions", "organizations_url": "https://api.github.com/users/michalt/orgs", "repos_url": "https://api.github.com/users/michalt/repos", "events_url": "https://api.github.com/users/michalt/events{/privacy}", "received_events_url": "https://api.github.com/users/michalt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michalt", "id": 119711, "node_id": "MDQ6VXNlcjExOTcxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/119711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalt", "html_url": "https://github.com/michalt", "followers_url": "https://api.github.com/users/michalt/followers", "following_url": "https://api.github.com/users/michalt/following{/other_user}", "gists_url": "https://api.github.com/users/michalt/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalt/subscriptions", "organizations_url": "https://api.github.com/users/michalt/orgs", "repos_url": "https://api.github.com/users/michalt/repos", "events_url": "https://api.github.com/users/michalt/events{/privacy}", "received_events_url": "https://api.github.com/users/michalt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4516c4c1447942a8f01b59a71dcf5abfa2c5e37a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4516c4c1447942a8f01b59a71dcf5abfa2c5e37a", "html_url": "https://github.com/rust-lang/rust/commit/4516c4c1447942a8f01b59a71dcf5abfa2c5e37a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "cc42068a1006e3a7b3e779f6c7a61fde978b8dfc", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/100c2d01272b341b85b948da068d944b9af23ad0/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/100c2d01272b341b85b948da068d944b9af23ad0/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=100c2d01272b341b85b948da068d944b9af23ad0", "patch": "@@ -25,6 +25,7 @@ use hir_ty::{\n     TraitEnvironment, Ty, TyDefId, TypeCtor, TypeWalk,\n };\n use ra_db::{CrateId, Edition, FileId};\n+use ra_prof::profile;\n use ra_syntax::ast;\n \n use crate::{\n@@ -189,6 +190,7 @@ impl Module {\n     }\n \n     pub fn diagnostics(self, db: &impl HirDatabase, sink: &mut DiagnosticSink) {\n+        let _p = profile(\"Module::diagnostics\");\n         db.crate_def_map(self.id.krate).add_diagnostics(db, self.id.local_id, sink);\n         for decl in self.declarations(db) {\n             match decl {\n@@ -507,6 +509,7 @@ impl Function {\n     }\n \n     pub fn diagnostics(self, db: &impl HirDatabase, sink: &mut DiagnosticSink) {\n+        let _p = profile(\"Function::diagnostics\");\n         let infer = db.infer(self.id.into());\n         infer.add_diagnostics(db, self.id, sink);\n         let mut validator = ExprValidator::new(self.id, infer, sink);"}]}