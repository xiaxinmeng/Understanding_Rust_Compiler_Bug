{"sha": "27269554b85d9202f5cdbfa09c6350498adf9d31", "node_id": "C_kwDOAAsO6NoAKDI3MjY5NTU0Yjg1ZDkyMDJmNWNkYmZhMDljNjM1MDQ5OGFkZjlkMzE", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-01T06:41:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-01T06:41:07Z"}, "message": "Rollup merge of #89321 - tmiasko:rebase-resume-arg, r=estebank\n\nRebase resume argument projections during state transform\n\nWhen remapping a resume argument with projections rebase them on top of\nthe new base.\n\nThe case where resume argument has projections is unusual, but might\narise with box syntax where the assignment is performed directly into\nthe box without an intermediate temporary.\n\nFixes #85635.", "tree": {"sha": "e133424df734f5370737013d9e233212842dea03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e133424df734f5370737013d9e233212842dea03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27269554b85d9202f5cdbfa09c6350498adf9d31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhVq2ECRBK7hj4Ov3rIwAAD1YIAFeKRIg6CzzLFPxTSIlmgGpE\neDhUeteQRpbDRArIP790+5NZD0soSLL0DQ7DcgYrejt3i/u/Ad8qofexkZmNnQUX\nU4BPS/sfvktMkNXspK6JP3Svo2orcl43qYwTUDUSTzFJ7RN3Mvd4Yl8zSwnD7diE\nZU/tYlqXq6XMSlMwi4D4R2qELdTqshEZxheSNTF9jz7SdGQzXmCQHHH4/Zk/ex9m\n4o6gCtPdO9Q2cMjGsdayKHebN+Lx7sU3j3hGfBaXMqYmH/I6nwGiA+utZGi5surf\nIL9GKd6HTSGiPl/+fqQ9MxI7SfofAhI9MhlC00Wq2zZVIBmamn63jNkKuhvxFwY=\n=8LBO\n-----END PGP SIGNATURE-----\n", "payload": "tree e133424df734f5370737013d9e233212842dea03\nparent e77d163e82b2b6680322085c421c438cf60a7bc6\nparent 8901ea29b93eeff11c86986f620108e9f34330df\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633070467 -0700\ncommitter GitHub <noreply@github.com> 1633070467 -0700\n\nRollup merge of #89321 - tmiasko:rebase-resume-arg, r=estebank\n\nRebase resume argument projections during state transform\n\nWhen remapping a resume argument with projections rebase them on top of\nthe new base.\n\nThe case where resume argument has projections is unusual, but might\narise with box syntax where the assignment is performed directly into\nthe box without an intermediate temporary.\n\nFixes #85635.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27269554b85d9202f5cdbfa09c6350498adf9d31", "html_url": "https://github.com/rust-lang/rust/commit/27269554b85d9202f5cdbfa09c6350498adf9d31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27269554b85d9202f5cdbfa09c6350498adf9d31/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e77d163e82b2b6680322085c421c438cf60a7bc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e77d163e82b2b6680322085c421c438cf60a7bc6", "html_url": "https://github.com/rust-lang/rust/commit/e77d163e82b2b6680322085c421c438cf60a7bc6"}, {"sha": "8901ea29b93eeff11c86986f620108e9f34330df", "url": "https://api.github.com/repos/rust-lang/rust/commits/8901ea29b93eeff11c86986f620108e9f34330df", "html_url": "https://github.com/rust-lang/rust/commit/8901ea29b93eeff11c86986f620108e9f34330df"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "bc72e9d94a95301388fabcc2f773e96795fd017e", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/27269554b85d9202f5cdbfa09c6350498adf9d31/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27269554b85d9202f5cdbfa09c6350498adf9d31/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=27269554b85d9202f5cdbfa09c6350498adf9d31", "patch": "@@ -342,15 +342,16 @@ impl MutVisitor<'tcx> for TransformVisitor<'tcx> {\n             let source_info = data.terminator().source_info;\n             // We must assign the value first in case it gets declared dead below\n             data.statements.extend(self.make_state(state_idx, v, source_info));\n-            let state = if let Some((resume, resume_arg)) = resume {\n+            let state = if let Some((resume, mut resume_arg)) = resume {\n                 // Yield\n                 let state = 3 + self.suspension_points.len();\n \n                 // The resume arg target location might itself be remapped if its base local is\n                 // live across a yield.\n                 let resume_arg =\n                     if let Some(&(ty, variant, idx)) = self.remap.get(&resume_arg.local) {\n-                        self.make_field(variant, idx, ty)\n+                        replace_base(&mut resume_arg, self.make_field(variant, idx, ty), self.tcx);\n+                        resume_arg\n                     } else {\n                         resume_arg\n                     };"}, {"sha": "dd6fa7c151aa7b82f93d0a964738e363eea551f3", "filename": "src/test/ui/generator/yield-in-box.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/27269554b85d9202f5cdbfa09c6350498adf9d31/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27269554b85d9202f5cdbfa09c6350498adf9d31/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.rs?ref=27269554b85d9202f5cdbfa09c6350498adf9d31", "patch": "@@ -1,8 +1,10 @@\n // run-pass\n-\n // Test that box-statements with yields in them work.\n \n-#![feature(generators, box_syntax)]\n+#![feature(generators, box_syntax, generator_trait)]\n+use std::pin::Pin;\n+use std::ops::Generator;\n+use std::ops::GeneratorState;\n \n fn main() {\n     let x = 0i32;\n@@ -15,4 +17,8 @@ fn main() {\n             _t => {}\n         }\n     };\n+\n+    let mut g = |_| box yield;\n+    assert_eq!(Pin::new(&mut g).resume(1), GeneratorState::Yielded(()));\n+    assert_eq!(Pin::new(&mut g).resume(2), GeneratorState::Complete(box 2));\n }"}, {"sha": "7602e803945dc14e6ede067876691f7420f33c88", "filename": "src/test/ui/generator/yield-in-box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27269554b85d9202f5cdbfa09c6350498adf9d31/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27269554b85d9202f5cdbfa09c6350498adf9d31/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-box.stderr?ref=27269554b85d9202f5cdbfa09c6350498adf9d31", "patch": "@@ -1,5 +1,5 @@\n warning: unused generator that must be used\n-  --> $DIR/yield-in-box.rs:9:5\n+  --> $DIR/yield-in-box.rs:11:5\n    |\n LL | /     || {\n LL | |         let y = 2u32;"}]}