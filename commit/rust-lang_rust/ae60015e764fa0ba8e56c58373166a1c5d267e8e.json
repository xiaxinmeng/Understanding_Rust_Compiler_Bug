{"sha": "ae60015e764fa0ba8e56c58373166a1c5d267e8e", "node_id": "C_kwDOAAsO6NoAKGFlNjAwMTVlNzY0ZmEwYmE4ZTU2YzU4MzczMTY2YTFjNWQyNjdlOGU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-12T19:42:06Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-14T18:26:09Z"}, "message": "Use impl's def id when calculating type to specify UFCS", "tree": {"sha": "337b1df3db28992179bae3f6784348a42e3d5f16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/337b1df3db28992179bae3f6784348a42e3d5f16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae60015e764fa0ba8e56c58373166a1c5d267e8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae60015e764fa0ba8e56c58373166a1c5d267e8e", "html_url": "https://github.com/rust-lang/rust/commit/ae60015e764fa0ba8e56c58373166a1c5d267e8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae60015e764fa0ba8e56c58373166a1c5d267e8e/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba64ba8b0dfd57f7d6d7399d0df7ded37d2af18d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba64ba8b0dfd57f7d6d7399d0df7ded37d2af18d", "html_url": "https://github.com/rust-lang/rust/commit/ba64ba8b0dfd57f7d6d7399d0df7ded37d2af18d"}], "stats": {"total": 72, "additions": 68, "deletions": 4}, "files": [{"sha": "31cc8d9ff6c6573592ef18fdfb792f1cc718a560", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae60015e764fa0ba8e56c58373166a1c5d267e8e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae60015e764fa0ba8e56c58373166a1c5d267e8e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=ae60015e764fa0ba8e56c58373166a1c5d267e8e", "patch": "@@ -2290,14 +2290,15 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                         let trait_impls = self.tcx.trait_impls_of(data.trait_ref.def_id);\n \n                         if trait_impls.blanket_impls().is_empty()\n-                            && let Some((impl_ty, _)) = trait_impls.non_blanket_impls().iter().next()\n-                            && let Some(impl_def_id) = impl_ty.def() {\n-                            let message = if trait_impls.non_blanket_impls().len() == 1 {\n+                            && let Some(impl_def_id) = trait_impls.non_blanket_impls().values().flatten().next()\n+                        {\n+                            let non_blanket_impl_count = trait_impls.non_blanket_impls().values().flatten().count();\n+                            let message = if non_blanket_impl_count == 1 {\n                                 \"use the fully-qualified path to the only available implementation\".to_string()\n                             } else {\n                                 format!(\n                                     \"use a fully-qualified path to a specific available implementation ({} found)\",\n-                                    trait_impls.non_blanket_impls().len()\n+                                    non_blanket_impl_count\n                                 )\n                             };\n                             let mut suggestions = vec![("}, {"sha": "ef9b7cae01bbd4c00290ff2dd006e5562335662d", "filename": "src/test/ui/associated-types/associated-types-unconstrained.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr?ref=ae60015e764fa0ba8e56c58373166a1c5d267e8e", "patch": "@@ -6,6 +6,11 @@ LL |     fn bar() -> isize;\n ...\n LL |     let x: isize = Foo::bar();\n    |                    ^^^^^^^^ cannot call associated function of trait\n+   |\n+help: use the fully-qualified path to the only available implementation\n+   |\n+LL |     let x: isize = <isize as Foo>::bar();\n+   |                    +++++++++    +\n \n error: aborting due to previous error\n "}, {"sha": "dd621ae71008faf7cb22ad5bafac1ebccff3053d", "filename": "src/test/ui/suggestions/issue-104327.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104327.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104327.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104327.rs?ref=ae60015e764fa0ba8e56c58373166a1c5d267e8e", "patch": "@@ -0,0 +1,12 @@\n+trait Bar {}\n+\n+trait Foo {\n+    fn f() {}\n+}\n+\n+impl Foo for dyn Bar {}\n+\n+fn main() {\n+    Foo::f();\n+    //~^ ERROR cannot call associated function on trait without specifying the corresponding `impl` type\n+}"}, {"sha": "acec3a55d526e499ef897cd6bc0323b05f2bb245", "filename": "src/test/ui/suggestions/issue-104327.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104327.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104327.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104327.stderr?ref=ae60015e764fa0ba8e56c58373166a1c5d267e8e", "patch": "@@ -0,0 +1,17 @@\n+error[E0790]: cannot call associated function on trait without specifying the corresponding `impl` type\n+  --> $DIR/issue-104327.rs:10:5\n+   |\n+LL |     fn f() {}\n+   |     --------- `Foo::f` defined here\n+...\n+LL |     Foo::f();\n+   |     ^^^^^^ cannot call associated function of trait\n+   |\n+help: use the fully-qualified path to the only available implementation\n+   |\n+LL |     <(dyn Bar + 'static) as Foo>::f();\n+   |     +++++++++++++++++++++++    +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0790`."}, {"sha": "c3707baf79fc3c583fcdbe60fadc289129895d4f", "filename": "src/test/ui/suggestions/issue-104328.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104328.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104328.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104328.rs?ref=ae60015e764fa0ba8e56c58373166a1c5d267e8e", "patch": "@@ -0,0 +1,12 @@\n+#![feature(object_safe_for_dispatch)]\n+\n+trait Foo {\n+    fn f() {}\n+}\n+\n+impl Foo for dyn Sized {}\n+\n+fn main() {\n+    Foo::f();\n+    //~^ ERROR cannot call associated function on trait without specifying the corresponding `impl` type\n+}"}, {"sha": "b31b84781bacbb11cfb47ffee90d20db57f68258", "filename": "src/test/ui/suggestions/issue-104328.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104328.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae60015e764fa0ba8e56c58373166a1c5d267e8e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104328.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104328.stderr?ref=ae60015e764fa0ba8e56c58373166a1c5d267e8e", "patch": "@@ -0,0 +1,17 @@\n+error[E0790]: cannot call associated function on trait without specifying the corresponding `impl` type\n+  --> $DIR/issue-104328.rs:10:5\n+   |\n+LL |     fn f() {}\n+   |     --------- `Foo::f` defined here\n+...\n+LL |     Foo::f();\n+   |     ^^^^^^ cannot call associated function of trait\n+   |\n+help: use the fully-qualified path to the only available implementation\n+   |\n+LL |     <(dyn Sized + 'static) as Foo>::f();\n+   |     +++++++++++++++++++++++++    +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0790`."}]}