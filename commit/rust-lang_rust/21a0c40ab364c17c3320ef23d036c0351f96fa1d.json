{"sha": "21a0c40ab364c17c3320ef23d036c0351f96fa1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYTBjNDBhYjM2NGMxN2MzMzIwZWYyM2QwMzZjMDM1MWY5NmZhMWQ=", "commit": {"author": {"name": "Ricardo Signes", "email": "rjbs@cpan.org", "date": "2015-11-01T18:28:51Z"}, "committer": {"name": "Ricardo Signes", "email": "rjbs@cpan.org", "date": "2015-11-02T01:41:22Z"}, "message": "Attempt to clarify use of `where i32: ConvertTo<T>\n\nI read this section a few times before even having a guess what\nwas meant, then consulted IRC for confirmation.  It may be that I\nwas thick-headed, but I think this is a useful addition.", "tree": {"sha": "114638884d1bc82597fbab43a7274286745ed9f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/114638884d1bc82597fbab43a7274286745ed9f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21a0c40ab364c17c3320ef23d036c0351f96fa1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21a0c40ab364c17c3320ef23d036c0351f96fa1d", "html_url": "https://github.com/rust-lang/rust/commit/21a0c40ab364c17c3320ef23d036c0351f96fa1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21a0c40ab364c17c3320ef23d036c0351f96fa1d/comments", "author": {"login": "rjbs", "id": 30682, "node_id": "MDQ6VXNlcjMwNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/30682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjbs", "html_url": "https://github.com/rjbs", "followers_url": "https://api.github.com/users/rjbs/followers", "following_url": "https://api.github.com/users/rjbs/following{/other_user}", "gists_url": "https://api.github.com/users/rjbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjbs/subscriptions", "organizations_url": "https://api.github.com/users/rjbs/orgs", "repos_url": "https://api.github.com/users/rjbs/repos", "events_url": "https://api.github.com/users/rjbs/events{/privacy}", "received_events_url": "https://api.github.com/users/rjbs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rjbs", "id": 30682, "node_id": "MDQ6VXNlcjMwNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/30682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjbs", "html_url": "https://github.com/rjbs", "followers_url": "https://api.github.com/users/rjbs/followers", "following_url": "https://api.github.com/users/rjbs/following{/other_user}", "gists_url": "https://api.github.com/users/rjbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjbs/subscriptions", "organizations_url": "https://api.github.com/users/rjbs/orgs", "repos_url": "https://api.github.com/users/rjbs/repos", "events_url": "https://api.github.com/users/rjbs/events{/privacy}", "received_events_url": "https://api.github.com/users/rjbs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d43fef3aaf64b2e7df14ca676a3a39b723ed7f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d43fef3aaf64b2e7df14ca676a3a39b723ed7f3", "html_url": "https://github.com/rust-lang/rust/commit/6d43fef3aaf64b2e7df14ca676a3a39b723ed7f3"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "379d60be74a5aa377039d16d8c11644aeeedb87c", "filename": "src/doc/trpl/traits.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21a0c40ab364c17c3320ef23d036c0351f96fa1d/src%2Fdoc%2Ftrpl%2Ftraits.md", "raw_url": "https://github.com/rust-lang/rust/raw/21a0c40ab364c17c3320ef23d036c0351f96fa1d/src%2Fdoc%2Ftrpl%2Ftraits.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ftraits.md?ref=21a0c40ab364c17c3320ef23d036c0351f96fa1d", "patch": "@@ -400,7 +400,9 @@ fn inverse<T>() -> T\n \n This shows off the additional feature of `where` clauses: they allow bounds\n where the left-hand side is an arbitrary type (`i32` in this case), not just a\n-plain type parameter (like `T`).\n+plain type parameter (like `T`). In this example, `i32` must implement\n+`ConvertTo<T>`. Rather than defining what `i32` is (since that's obvious), the\n+`where` clause here is a constraint on `T`.\n \n # Default methods\n "}]}