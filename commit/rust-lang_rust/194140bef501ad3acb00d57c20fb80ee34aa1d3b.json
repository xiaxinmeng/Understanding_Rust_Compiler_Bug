{"sha": "194140bef501ad3acb00d57c20fb80ee34aa1d3b", "node_id": "C_kwDOAAsO6NoAKDE5NDE0MGJlZjUwMWFkM2FjYjAwZDU3YzIwZmI4MGVlMzRhYTFkM2I", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-17T23:16:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-17T23:16:57Z"}, "message": "Auto merge of #103165 - matthiaskrgr:rollup-guw8oh6, r=matthiaskrgr\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #103152 (Use named arguments to make GUI test more clear)\n - #103160 (rustdoc: factor JS mobile scroll lock into its own function)\n - #103161 (rustdoc: remove redundant CSS on `#copy-path`)\n - #103162 (rustdoc: remove redundant CSS `#crate-search { border-radius }`)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "798622b9fb1ab161604a2e53b349133e10188508", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/798622b9fb1ab161604a2e53b349133e10188508"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/194140bef501ad3acb00d57c20fb80ee34aa1d3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/194140bef501ad3acb00d57c20fb80ee34aa1d3b", "html_url": "https://github.com/rust-lang/rust/commit/194140bef501ad3acb00d57c20fb80ee34aa1d3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/194140bef501ad3acb00d57c20fb80ee34aa1d3b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06f049a35535d26d5c8426d4f782f78277b41aa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/06f049a35535d26d5c8426d4f782f78277b41aa1", "html_url": "https://github.com/rust-lang/rust/commit/06f049a35535d26d5c8426d4f782f78277b41aa1"}, {"sha": "8a467c32156f3633e7490cf32677760d0623d5e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a467c32156f3633e7490cf32677760d0623d5e4", "html_url": "https://github.com/rust-lang/rust/commit/8a467c32156f3633e7490cf32677760d0623d5e4"}], "stats": {"total": 149, "additions": 64, "deletions": 85}, "files": [{"sha": "0ec9201397fe446de28d95ed5688a0db29941a88", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "raw_url": "https://github.com/rust-lang/rust/raw/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version?ref=194140bef501ad3acb00d57c20fb80ee34aa1d3b", "patch": "@@ -1 +1 @@\n-0.12.5\n\\ No newline at end of file\n+0.12.6\n\\ No newline at end of file"}, {"sha": "5788363036acd37d66943a19556548a1287bf440", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=194140bef501ad3acb00d57c20fb80ee34aa1d3b", "patch": "@@ -1431,10 +1431,7 @@ h3.variant {\n }\n \n #settings-menu > a, #help-button > a, #copy-path {\n-\tpadding: 5px;\n \twidth: 33px;\n-\tborder: 1px solid var(--border-color);\n-\tborder-radius: 2px;\n \tcursor: pointer;\n \tline-height: 1.5;\n }\n@@ -1444,10 +1441,18 @@ h3.variant {\n \theight: 100%;\n \tdisplay: block;\n \tbackground-color: var(--button-background-color);\n+\tborder: 1px solid var(--border-color);\n+\tborder-radius: 2px;\n }\n \n #copy-path {\n \tcolor: var(--copy-path-button-color);\n+\tbackground: var(--main-background-color);\n+\theight: 34px;\n+\tmargin-left: 10px;\n+\tpadding: 0;\n+\tpadding-left: 2px;\n+\tborder: 0;\n }\n #copy-path > img {\n \tfilter: var(--copy-path-img-filter);\n@@ -1495,15 +1500,6 @@ input:checked + .slider {\n \tpadding-top: 2px;\n }\n \n-#copy-path {\n-\theight: 34px;\n-\tbackground-color: var(--main-background-color);\n-\tmargin-left: 10px;\n-\tpadding: 0;\n-\tpadding-left: 2px;\n-\tborder: 0;\n-}\n-\n kbd {\n \tdisplay: inline-block;\n \tpadding: 3px 5px;\n@@ -1994,10 +1990,6 @@ in storage.js plus the media query with (min-width: 701px)\n }\n \n @media (max-width: 464px) {\n-\t#crate-search {\n-\t\tborder-radius: 4px;\n-\t}\n-\n \t.docblock {\n \t\tmargin-left: 12px;\n \t}"}, {"sha": "3bcadcda534dc9241f1110a60acf3560ba5d38a2", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=194140bef501ad3acb00d57c20fb80ee34aa1d3b", "patch": "@@ -733,37 +733,51 @@ function loadCss(cssFileName) {\n \n     let oldSidebarScrollPosition = null;\n \n-    function showSidebar() {\n+    // Scroll locking used both here and in source-script.js\n+\n+    window.rustdocMobileScrollLock = function() {\n         const mobile_topbar = document.querySelector(\".mobile-topbar\");\n-        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT && mobile_topbar) {\n+        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT) {\n             // This is to keep the scroll position on mobile.\n             oldSidebarScrollPosition = window.scrollY;\n             document.body.style.width = `${document.body.offsetWidth}px`;\n             document.body.style.position = \"fixed\";\n             document.body.style.top = `-${oldSidebarScrollPosition}px`;\n-            mobile_topbar.style.top = `${oldSidebarScrollPosition}px`;\n-            mobile_topbar.style.position = \"relative\";\n+            if (mobile_topbar) {\n+                mobile_topbar.style.top = `${oldSidebarScrollPosition}px`;\n+                mobile_topbar.style.position = \"relative\";\n+            }\n         } else {\n             oldSidebarScrollPosition = null;\n         }\n-        const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n-        addClass(sidebar, \"shown\");\n-    }\n+    };\n \n-    function hideSidebar() {\n+    window.rustdocMobileScrollUnlock = function() {\n         const mobile_topbar = document.querySelector(\".mobile-topbar\");\n-        if (oldSidebarScrollPosition !== null && mobile_topbar) {\n+        if (oldSidebarScrollPosition !== null) {\n             // This is to keep the scroll position on mobile.\n             document.body.style.width = \"\";\n             document.body.style.position = \"\";\n             document.body.style.top = \"\";\n-            mobile_topbar.style.top = \"\";\n-            mobile_topbar.style.position = \"\";\n+            if (mobile_topbar) {\n+                mobile_topbar.style.top = \"\";\n+                mobile_topbar.style.position = \"\";\n+            }\n             // The scroll position is lost when resetting the style, hence why we store it in\n             // `oldSidebarScrollPosition`.\n             window.scrollTo(0, oldSidebarScrollPosition);\n             oldSidebarScrollPosition = null;\n         }\n+    };\n+\n+    function showSidebar() {\n+        window.rustdocMobileScrollLock();\n+        const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n+        addClass(sidebar, \"shown\");\n+    }\n+\n+    function hideSidebar() {\n+        window.rustdocMobileScrollUnlock();\n         const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n         removeClass(sidebar, \"shown\");\n     }"}, {"sha": "0b9368dd899484a0c167e313e5d5032fa3a303a1", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=194140bef501ad3acb00d57c20fb80ee34aa1d3b", "patch": "@@ -10,7 +10,6 @@\n (function() {\n \n const rootPath = document.getElementById(\"rustdoc-vars\").attributes[\"data-root-path\"].value;\n-let oldScrollPosition = null;\n \n const NAME_OFFSET = 0;\n const DIRS_OFFSET = 1;\n@@ -70,44 +69,18 @@ function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n function toggleSidebar() {\n     const child = this.parentNode.children[0];\n     if (child.innerText === \">\") {\n-        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT) {\n-            // This is to keep the scroll position on mobile.\n-            oldScrollPosition = window.scrollY;\n-            document.body.style.position = \"fixed\";\n-            document.body.style.top = `-${oldScrollPosition}px`;\n-        } else {\n-            oldScrollPosition = null;\n-        }\n+        window.rustdocMobileScrollLock();\n         addClass(document.documentElement, \"source-sidebar-expanded\");\n         child.innerText = \"<\";\n         updateLocalStorage(\"source-sidebar-show\", \"true\");\n     } else {\n-        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT && oldScrollPosition !== null) {\n-            // This is to keep the scroll position on mobile.\n-            document.body.style.position = \"\";\n-            document.body.style.top = \"\";\n-            // The scroll position is lost when resetting the style, hence why we store it in\n-            // `oldScrollPosition`.\n-            window.scrollTo(0, oldScrollPosition);\n-            oldScrollPosition = null;\n-        }\n+        window.rustdocMobileScrollUnlock();\n         removeClass(document.documentElement, \"source-sidebar-expanded\");\n         child.innerText = \">\";\n         updateLocalStorage(\"source-sidebar-show\", \"false\");\n     }\n }\n \n-window.addEventListener(\"resize\", () => {\n-    if (window.innerWidth >= window.RUSTDOC_MOBILE_BREAKPOINT && oldScrollPosition !== null) {\n-        // If the user opens the sidebar in \"mobile\" mode, and then grows the browser window,\n-        // we need to switch away from mobile mode and make the main content area scrollable.\n-        document.body.style.position = \"\";\n-        document.body.style.top = \"\";\n-        window.scrollTo(0, oldScrollPosition);\n-        oldScrollPosition = null;\n-    }\n-});\n-\n function createSidebarToggle() {\n     const sidebarToggle = document.createElement(\"div\");\n     sidebarToggle.id = \"sidebar-toggle\";\n@@ -125,7 +98,7 @@ function createSidebarToggle() {\n     return sidebarToggle;\n }\n \n-// This function is called from \"source-files.js\", generated in `html/render/mod.rs`.\n+// This function is called from \"source-files.js\", generated in `html/render/write_shared.rs`.\n // eslint-disable-next-line no-unused-vars\n function createSourceSidebar() {\n     const container = document.querySelector(\"nav.sidebar\");"}, {"sha": "fb8e288fae8825555755543529405da614372b55", "filename": "src/test/rustdoc-gui/anchors.goml", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/194140bef501ad3acb00d57c20fb80ee34aa1d3b/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fanchors.goml?ref=194140bef501ad3acb00d57c20fb80ee34aa1d3b", "patch": "@@ -71,37 +71,37 @@ define-function: (\n \n call-function: (\n     \"check-colors\",\n-    (\n-        \"ayu\", // theme\n-        \"rgb(197, 197, 197)\", // main color\n-        \"rgb(255, 255, 255)\", // title color\n-        \"rgb(255, 255, 255)\", // fqn color\n-        \"rgb(255, 160, 165)\", // fqn type color\n-        \"rgb(57, 175, 215)\", // src link\n-        \"rgb(83, 177, 219)\", // sidebar link\n-    ),\n+    {\n+        \"theme\": \"ayu\",\n+        \"main_color\": \"rgb(197, 197, 197)\",\n+        \"title_color\": \"rgb(255, 255, 255)\",\n+        \"fqn_color\": \"rgb(255, 255, 255)\",\n+        \"fqn_type_color\": \"rgb(255, 160, 165)\",\n+        \"src_link_color\": \"rgb(57, 175, 215)\",\n+        \"sidebar_link_color\": \"rgb(83, 177, 219)\",\n+    },\n )\n call-function: (\n     \"check-colors\",\n-    (\n-        \"dark\", // theme\n-        \"rgb(221, 221, 221)\", // main color\n-        \"rgb(221, 221, 221)\", // title color\n-        \"rgb(221, 221, 221)\", // fqn color\n-        \"rgb(45, 191, 184)\", // fqn type color\n-        \"rgb(210, 153, 29)\", // src link\n-        \"rgb(253, 191, 53)\", // sidebar link\n-    ),\n+    {\n+        \"theme\": \"dark\",\n+        \"main_color\": \"rgb(221, 221, 221)\",\n+        \"title_color\": \"rgb(221, 221, 221)\",\n+        \"fqn_color\": \"rgb(221, 221, 221)\",\n+        \"fqn_type_color\": \"rgb(45, 191, 184)\",\n+        \"src_link_color\": \"rgb(210, 153, 29)\",\n+        \"sidebar_link_color\": \"rgb(253, 191, 53)\",\n+    },\n )\n call-function: (\n     \"check-colors\",\n-    (\n-        \"light\", // theme\n-        \"rgb(0, 0, 0)\", // main color\n-        \"rgb(0, 0, 0)\", // title color\n-        \"rgb(0, 0, 0)\", // fqn color\n-        \"rgb(173, 55, 138)\", // fqn type color\n-        \"rgb(56, 115, 173)\", // src link\n-        \"rgb(53, 109, 164)\", // sidebar link\n-    ),\n+    {\n+        \"theme\": \"light\",\n+        \"main_color\": \"rgb(0, 0, 0)\",\n+        \"title_color\": \"rgb(0, 0, 0)\",\n+        \"fqn_color\": \"rgb(0, 0, 0)\",\n+        \"fqn_type_color\": \"rgb(173, 55, 138)\",\n+        \"src_link_color\": \"rgb(56, 115, 173)\",\n+        \"sidebar_link_color\": \"rgb(53, 109, 164)\",\n+    },\n )"}]}