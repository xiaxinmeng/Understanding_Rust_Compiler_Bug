{"sha": "4c3e386bd7ee9020407cee4ba120eebfb6373549", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjM2UzODZiZDdlZTkwMjA0MDdjZWU0YmExMjBlZWJmYjYzNzM1NDk=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-08-28T22:00:36Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-08-28T22:00:36Z"}, "message": "Allow running rustdoc on proc-macro crates without specifying '--crate-type proc-macro'\n\nAdd a test to make sure that this works", "tree": {"sha": "af353e2a35d0d1038d64e8aa43c71e8e408c4514", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af353e2a35d0d1038d64e8aa43c71e8e408c4514"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c3e386bd7ee9020407cee4ba120eebfb6373549", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl1m+Z4ACgkQtAh+UQ6Y\nsWSDdRAAkNg43Mm9qCK/j8dAagUsUM36Jr3YRpvQHNxPTQ/A5qGVMCSqS0nmnQZg\nMKzhxqThn0Rp5byrdoJx9J4m75q/Mu4HQkHueXmAMr/H2AYLwqvNLQxcxqAWegoG\nKxDse4EAN1rqqIdN8brAElPboahGOyDE+FRjWcLdOzbw+6o1KGi8wmSjjmpLvxRX\nqVDA7U9fQVcNwQc7yUSO8qpc/4+ZydTRLwwXHOb5/dyQqzvBKv90neYiZ6jXoo6M\n6aVGDUhmPNwDpQFbuscBp6bPC8aZhfDt/YzDL2UwcNthZ2bVIJj2J1m7Pt1LdcVW\n6XEXEQMFM99rSJLhezC9PG4gdeNqT7O18gFoFm3nbpwvXPSrDcqlh6eDN1SznqZQ\n8dTKISHwuznQC8KRcXlJpOf9ZxEbIfe6C5YN0AsNxbdsPEGwplKi8yNGcyJ/1wu0\nlRpmHjKtFEzlhYbEtbaKuJMe+ZVQ3sm0bnhSvS8ybgZge3pCpuhvbjLWSeTZO2Hx\noNAJYUu912ku5BqnE6NBmqIvCEjb1h1gtqkql1LvvcBARUvHSfDz72p/wdwsH0FQ\n3UDBCdqV4PpZI4QCijnQGnli/uHz+X5O3MMAJeuP6PQuQuh//vIsobCkd4MXsFIz\nTiZ4HMBU5r3z367aSTmJC4mrnSZwoGTe8fMYWF33dzWc8XX4h1o=\n=ipUp\n-----END PGP SIGNATURE-----", "payload": "tree af353e2a35d0d1038d64e8aa43c71e8e408c4514\nparent 14986081355db0a2ae67df6a43dd9e6e360d718c\nauthor Aaron Hill <aa1ronham@gmail.com> 1567029636 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1567029636 -0400\n\nAllow running rustdoc on proc-macro crates without specifying '--crate-type proc-macro'\n\nAdd a test to make sure that this works\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c3e386bd7ee9020407cee4ba120eebfb6373549", "html_url": "https://github.com/rust-lang/rust/commit/4c3e386bd7ee9020407cee4ba120eebfb6373549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c3e386bd7ee9020407cee4ba120eebfb6373549/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14986081355db0a2ae67df6a43dd9e6e360d718c", "url": "https://api.github.com/repos/rust-lang/rust/commits/14986081355db0a2ae67df6a43dd9e6e360d718c", "html_url": "https://github.com/rust-lang/rust/commit/14986081355db0a2ae67df6a43dd9e6e360d718c"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "24b44964e4fd22b08fa676c567883554322c0065", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e386bd7ee9020407cee4ba120eebfb6373549/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e386bd7ee9020407cee4ba120eebfb6373549/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=4c3e386bd7ee9020407cee4ba120eebfb6373549", "patch": "@@ -473,22 +473,38 @@ fn configure_and_expand_inner<'a>(\n         ast_validation::check_crate(sess, &krate)\n     });\n \n-    krate = time(sess, \"maybe creating a macro crate\", || {\n-        let crate_types = sess.crate_types.borrow();\n-        let num_crate_types = crate_types.len();\n-        let is_proc_macro_crate = crate_types.contains(&config::CrateType::ProcMacro);\n-        let is_test_crate = sess.opts.test;\n-        syntax_ext::proc_macro_harness::inject(\n-            &sess.parse_sess,\n-            &mut resolver,\n-            krate,\n-            is_proc_macro_crate,\n-            has_proc_macro_decls,\n-            is_test_crate,\n-            num_crate_types,\n-            sess.diagnostic(),\n-        )\n-    });\n+\n+    let crate_types = sess.crate_types.borrow();\n+    let is_proc_macro_crate = crate_types.contains(&config::CrateType::ProcMacro);\n+\n+    // For backwards compatibility, we don't try to run proc macro injection\n+    // if rustdoc is run on a proc macro crate without '--crate-type proc-macro' being\n+    // specified. This should only affect users who manually invoke 'rustdoc', as\n+    // 'cargo doc' will automatically pass the proper '--crate-type' flags.\n+    // However, we do emit a warning, to let such users know that they should\n+    // start passing '--crate-type proc-macro'\n+    if has_proc_macro_decls && sess.opts.actually_rustdoc && !is_proc_macro_crate {\n+        let mut msg = sess.diagnostic().struct_warn(&\"Trying to document proc macro crate \\\n+            without passing '--crate-type proc-macro to rustdoc\");\n+\n+        msg.warn(\"The generated documentation may be incorrect\");\n+        msg.emit()\n+    } else {\n+        krate = time(sess, \"maybe creating a macro crate\", || {\n+            let num_crate_types = crate_types.len();\n+            let is_test_crate = sess.opts.test;\n+            syntax_ext::proc_macro_harness::inject(\n+                &sess.parse_sess,\n+                &mut resolver,\n+                krate,\n+                is_proc_macro_crate,\n+                has_proc_macro_decls,\n+                is_test_crate,\n+                num_crate_types,\n+                sess.diagnostic(),\n+            )\n+        });\n+    }\n \n     // Done with macro expansion!\n "}]}