{"sha": "6d2236f5036e89b69bdba4a364d73d159ac74187", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMjIzNmY1MDM2ZTg5YjY5YmRiYTRhMzY0ZDczZDE1OWFjNzQxODc=", "commit": {"author": {"name": "iobtl", "email": "tedmundhtl@gmail.com", "date": "2021-03-13T08:54:59Z"}, "committer": {"name": "iobtl", "email": "tedmundhtl@gmail.com", "date": "2021-03-13T08:54:59Z"}, "message": "replace span_lint with span_lint_and_sugg along with error message", "tree": {"sha": "31aa37ddcd3dcf8c7aa87eeb39b4d7de6b266736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31aa37ddcd3dcf8c7aa87eeb39b4d7de6b266736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d2236f5036e89b69bdba4a364d73d159ac74187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d2236f5036e89b69bdba4a364d73d159ac74187", "html_url": "https://github.com/rust-lang/rust/commit/6d2236f5036e89b69bdba4a364d73d159ac74187", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d2236f5036e89b69bdba4a364d73d159ac74187/comments", "author": {"login": "iobtl", "id": 59901837, "node_id": "MDQ6VXNlcjU5OTAxODM3", "avatar_url": "https://avatars.githubusercontent.com/u/59901837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iobtl", "html_url": "https://github.com/iobtl", "followers_url": "https://api.github.com/users/iobtl/followers", "following_url": "https://api.github.com/users/iobtl/following{/other_user}", "gists_url": "https://api.github.com/users/iobtl/gists{/gist_id}", "starred_url": "https://api.github.com/users/iobtl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iobtl/subscriptions", "organizations_url": "https://api.github.com/users/iobtl/orgs", "repos_url": "https://api.github.com/users/iobtl/repos", "events_url": "https://api.github.com/users/iobtl/events{/privacy}", "received_events_url": "https://api.github.com/users/iobtl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iobtl", "id": 59901837, "node_id": "MDQ6VXNlcjU5OTAxODM3", "avatar_url": "https://avatars.githubusercontent.com/u/59901837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iobtl", "html_url": "https://github.com/iobtl", "followers_url": "https://api.github.com/users/iobtl/followers", "following_url": "https://api.github.com/users/iobtl/following{/other_user}", "gists_url": "https://api.github.com/users/iobtl/gists{/gist_id}", "starred_url": "https://api.github.com/users/iobtl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iobtl/subscriptions", "organizations_url": "https://api.github.com/users/iobtl/orgs", "repos_url": "https://api.github.com/users/iobtl/repos", "events_url": "https://api.github.com/users/iobtl/events{/privacy}", "received_events_url": "https://api.github.com/users/iobtl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65d046c9addea00de5b7cc0e33cffdec465dade8", "url": "https://api.github.com/repos/rust-lang/rust/commits/65d046c9addea00de5b7cc0e33cffdec465dade8", "html_url": "https://github.com/rust-lang/rust/commit/65d046c9addea00de5b7cc0e33cffdec465dade8"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "171cac091c2e724bf26d2c2b9435b1708a7ca122", "filename": "clippy_lints/src/casts/unnecessary_cast.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6d2236f5036e89b69bdba4a364d73d159ac74187/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d2236f5036e89b69bdba4a364d73d159ac74187/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs?ref=6d2236f5036e89b69bdba4a364d73d159ac74187", "patch": "@@ -7,7 +7,7 @@ use rustc_middle::ty::{self, FloatTy, InferTy, Ty};\n \n use if_chain::if_chain;\n \n-use crate::utils::{numeric_literal::NumericLiteral, snippet_opt, span_lint, span_lint_and_sugg};\n+use crate::utils::{numeric_literal::NumericLiteral, snippet_opt, span_lint_and_sugg};\n \n use super::UNNECESSARY_CAST;\n \n@@ -46,14 +46,17 @@ pub(super) fn check(\n             LitKind::Int(_, LitIntType::Unsuffixed) | LitKind::Float(_, LitFloatType::Unsuffixed) => {},\n             _ => {\n                 if cast_from.kind() == cast_to.kind() && !in_external_macro(cx.sess(), expr.span) {\n-                    span_lint(\n+                    span_lint_and_sugg(\n                         cx,\n                         UNNECESSARY_CAST,\n                         expr.span,\n                         &format!(\n                             \"casting to the same type is unnecessary (`{}` -> `{}`)\",\n                             cast_from, cast_to\n                         ),\n+                        \"try\",\n+                        literal_str,\n+                        Applicability::MachineApplicable,\n                     );\n                     return true;\n                 }"}, {"sha": "87261cd833319eef997ddafdffaea581658fe585", "filename": "tests/ui/unnecessary_cast.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d2236f5036e89b69bdba4a364d73d159ac74187/tests%2Fui%2Funnecessary_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6d2236f5036e89b69bdba4a364d73d159ac74187/tests%2Fui%2Funnecessary_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.stderr?ref=6d2236f5036e89b69bdba4a364d73d159ac74187", "patch": "@@ -2,21 +2,21 @@ error: casting to the same type is unnecessary (`i32` -> `i32`)\n   --> $DIR/unnecessary_cast.rs:6:5\n    |\n LL |     1i32 as i32;\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ help: try: `1i32`\n    |\n    = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n \n error: casting to the same type is unnecessary (`f32` -> `f32`)\n   --> $DIR/unnecessary_cast.rs:7:5\n    |\n LL |     1f32 as f32;\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ help: try: `1f32`\n \n error: casting to the same type is unnecessary (`bool` -> `bool`)\n   --> $DIR/unnecessary_cast.rs:8:5\n    |\n LL |     false as bool;\n-   |     ^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^ help: try: `false`\n \n error: aborting due to 3 previous errors\n "}]}