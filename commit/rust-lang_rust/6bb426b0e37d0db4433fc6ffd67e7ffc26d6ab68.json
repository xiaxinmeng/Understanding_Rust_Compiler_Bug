{"sha": "6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYjQyNmIwZTM3ZDBkYjQ0MzNmYzZmZmQ2N2U3ZmZjMjZkNmFiNjg=", "commit": {"author": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2017-02-17T08:32:51Z"}, "committer": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2017-02-18T01:13:56Z"}, "message": "Add `should_assert_eq` lint (fixes #641)", "tree": {"sha": "a807631ffd6b173b3c714a2810735d973d646ab1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a807631ffd6b173b3c714a2810735d973d646ab1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "html_url": "https://github.com/rust-lang/rust/commit/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0682c950bc71421783e8b5c15e0dfbe04496c616", "url": "https://api.github.com/repos/rust-lang/rust/commits/0682c950bc71421783e8b5c15e0dfbe04496c616", "html_url": "https://github.com/rust-lang/rust/commit/0682c950bc71421783e8b5c15e0dfbe04496c616"}], "stats": {"total": 103, "additions": 102, "deletions": 1}, "files": [{"sha": "4f99dff89b4558ef6aba06be7b69c5641af321ef", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "patch": "@@ -126,6 +126,7 @@ pub mod regex;\n pub mod returns;\n pub mod serde;\n pub mod shadow;\n+pub mod should_assert_eq;\n pub mod strings;\n pub mod swap;\n pub mod temporary_assignment;\n@@ -297,6 +298,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_early_lint_pass(box double_parens::DoubleParens);\n     reg.register_late_lint_pass(box unused_io_amount::UnusedIoAmount);\n     reg.register_late_lint_pass(box large_enum_variant::LargeEnumVariant::new(conf.enum_variant_size_threshold));\n+    reg.register_late_lint_pass(box should_assert_eq::ShouldAssertEq);\n \n     reg.register_lint_group(\"clippy_restrictions\", vec![\n         arithmetic::FLOAT_ARITHMETIC,"}, {"sha": "9bacc64f61c03a0ad5904957b38782a6547855c5", "filename": "clippy_lints/src/should_assert_eq.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/clippy_lints%2Fsrc%2Fshould_assert_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/clippy_lints%2Fsrc%2Fshould_assert_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshould_assert_eq.rs?ref=6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "patch": "@@ -0,0 +1,59 @@\n+use rustc::lint::*;\n+use rustc::hir::*;\n+use utils::{paths, is_direct_expn_of, get_trait_def_id, implements_trait, span_lint};\n+\n+/// **What it does:** Checks for `assert!(x == y)` which can be written better\n+/// as `assert_eq!(x, y)` if `x` and `y` implement `Debug` trait.\n+///\n+/// **Why is this bad?** `assert_eq` provides better assertion failure reporting.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let (x, y) = (1, 2);\n+///\n+/// assert!(x == y);  // assertion failed: x == y\n+/// assert_eq!(x, y); // assertion failed: `(left == right)` (left: `1`, right: `2`)\n+/// ```\n+declare_lint! {\n+    pub SHOULD_ASSERT_EQ,\n+    Warn,\n+    \"using `assert` macro for asserting equality\"\n+}\n+\n+pub struct ShouldAssertEq;\n+\n+impl LintPass for ShouldAssertEq {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array![SHOULD_ASSERT_EQ]\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ShouldAssertEq {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n+        if_let_chain! {[\n+            let ExprIf(ref cond, ..) = e.node,\n+            let ExprUnary(UnOp::UnNot, ref cond) = cond.node,\n+            let ExprBinary(ref binop, ref expr1, ref expr2) = cond.node,\n+        ], {\n+            if is_direct_expn_of(cx, e.span, \"assert\").is_none() {\n+                return;\n+            }\n+\n+            if binop.node != BinOp_::BiEq {\n+                return;\n+            }\n+\n+            let debug_trait = get_trait_def_id(cx, &paths::DEBUG_TRAIT)\n+                .expect(\"cannot find Debug trait\");\n+\n+            let ty1 = cx.tables.expr_ty(expr1);\n+            let ty2 = cx.tables.expr_ty(expr2);\n+            if implements_trait(cx, ty1, debug_trait, vec![]) &&\n+                implements_trait(cx, ty2, debug_trait, vec![]) {\n+                span_lint(cx, SHOULD_ASSERT_EQ, e.span, \"use `assert_eq` for better reporting\");\n+            }\n+        }}\n+    }\n+}"}, {"sha": "6ee35e3bd966bd969922d2ff1b417ecd11737e30", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "patch": "@@ -15,6 +15,7 @@ pub const CMP_MIN: [&'static str; 3] = [\"core\", \"cmp\", \"min\"];\n pub const COW: [&'static str; 3] = [\"collections\", \"borrow\", \"Cow\"];\n pub const CSTRING_NEW: [&'static str; 5] = [\"std\", \"ffi\", \"c_str\", \"CString\", \"new\"];\n pub const DEBUG_FMT_METHOD: [&'static str; 4] = [\"core\", \"fmt\", \"Debug\", \"fmt\"];\n+pub const DEBUG_TRAIT: [&'static str; 3] = [\"core\", \"fmt\", \"Debug\"];\n pub const DEFAULT_TRAIT: [&'static str; 3] = [\"core\", \"default\", \"Default\"];\n pub const DISPLAY_FMT_METHOD: [&'static str; 4] = [\"core\", \"fmt\", \"Display\", \"fmt\"];\n pub const DROP: [&'static str; 3] = [\"core\", \"mem\", \"drop\"];"}, {"sha": "024dd9c242ce3a402b01e3a64d5a0491ee518d68", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "patch": "@@ -92,5 +92,5 @@ fn main() {\n     let a: *const f32 = xs.as_ptr();\n     let b: *const f32 = xs.as_ptr();\n \n-    assert!(a == b); // no errors\n+    assert_eq!(a, b); // no errors\n }"}, {"sha": "41e3a411383369523a5e761f4e4e38b6d1376290", "filename": "tests/ui/should_assert_eq.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/tests%2Fui%2Fshould_assert_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/tests%2Fui%2Fshould_assert_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_assert_eq.rs?ref=6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "patch": "@@ -0,0 +1,16 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![deny(should_assert_eq)]\n+\n+#[derive(PartialEq, Eq)]\n+struct NonDebug(i32);\n+\n+#[derive(Debug, PartialEq, Eq)]\n+struct Debug(i32);\n+\n+fn main() {\n+    assert!(1 == 2);\n+    assert!(Debug(1) == Debug(2));\n+    assert!(NonDebug(1) == NonDebug(1)); // ok\n+}"}, {"sha": "3c51dbe0a9c49feb5bd926db1de43b3dd9ca596e", "filename": "tests/ui/should_assert_eq.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/tests%2Fui%2Fshould_assert_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68/tests%2Fui%2Fshould_assert_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_assert_eq.stderr?ref=6bb426b0e37d0db4433fc6ffd67e7ffc26d6ab68", "patch": "@@ -0,0 +1,23 @@\n+error: use `assert_eq` for better reporting\n+  --> $DIR/should_assert_eq.rs:13:5\n+   |\n+13 |     assert!(1 == 2);\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/should_assert_eq.rs:4:9\n+   |\n+4  | #![deny(should_assert_eq)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate\n+\n+error: use `assert_eq` for better reporting\n+  --> $DIR/should_assert_eq.rs:14:5\n+   |\n+14 |     assert!(Debug(1) == Debug(2));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in a macro outside of the current crate\n+\n+error: aborting due to 2 previous errors\n+"}]}