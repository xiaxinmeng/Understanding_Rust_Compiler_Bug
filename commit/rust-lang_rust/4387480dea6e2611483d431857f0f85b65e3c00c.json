{"sha": "4387480dea6e2611483d431857f0f85b65e3c00c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzODc0ODBkZWE2ZTI2MTE0ODNkNDMxODU3ZjBmODViNjVlM2MwMGM=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-09-20T13:30:32Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-09-20T14:00:40Z"}, "message": "Add unstably const support for assume intrinsic", "tree": {"sha": "15bce14c5c22ac62e7f07142bbd47ed0d56885f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15bce14c5c22ac62e7f07142bbd47ed0d56885f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4387480dea6e2611483d431857f0f85b65e3c00c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4387480dea6e2611483d431857f0f85b65e3c00c", "html_url": "https://github.com/rust-lang/rust/commit/4387480dea6e2611483d431857f0f85b65e3c00c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4387480dea6e2611483d431857f0f85b65e3c00c/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e08354fb0dc7a5f7733da9b308d483b9c1d2514", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e08354fb0dc7a5f7733da9b308d483b9c1d2514", "html_url": "https://github.com/rust-lang/rust/commit/3e08354fb0dc7a5f7733da9b308d483b9c1d2514"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "d3b6d706337edb90e445a67486b06fdef60f2453", "filename": "compiler/rustc_mir/src/interpret/intrinsics.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4387480dea6e2611483d431857f0f85b65e3c00c/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4387480dea6e2611483d431857f0f85b65e3c00c/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=4387480dea6e2611483d431857f0f85b65e3c00c", "patch": "@@ -435,6 +435,12 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 // These just return their argument\n                 self.copy_op(args[0], dest)?;\n             }\n+            sym::assume => {\n+                let cond = self.read_scalar(args[0])?.check_init()?.to_bool()?;\n+                if !cond {\n+                    throw_ub_format!(\"`assume` intrinsic called with `false`\");\n+                }\n+            }\n             _ => return Ok(false),\n         }\n "}, {"sha": "c68200c90d8d09904cdeccf2959f5bf2bb6bb575", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4387480dea6e2611483d431857f0f85b65e3c00c/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4387480dea6e2611483d431857f0f85b65e3c00c/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=4387480dea6e2611483d431857f0f85b65e3c00c", "patch": "@@ -733,6 +733,7 @@ extern \"rust-intrinsic\" {\n     /// own, or if it does not enable any significant optimizations.\n     ///\n     /// This intrinsic does not have a stable counterpart.\n+    #[rustc_const_unstable(feature = \"const_assume\", issue = \"76972\")]\n     pub fn assume(b: bool);\n \n     /// Hints to the compiler that branch condition is likely to be true."}, {"sha": "f72f151824bed551f3adac2e8bc707e3af6addb7", "filename": "src/test/ui/consts/const-eval/const_assume.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4387480dea6e2611483d431857f0f85b65e3c00c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_assume.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4387480dea6e2611483d431857f0f85b65e3c00c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_assume.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_assume.rs?ref=4387480dea6e2611483d431857f0f85b65e3c00c", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+\n+// Check that `const_assume` feature allow `assume` intrinsic\n+// to be used in const contexts.\n+\n+#![feature(core_intrinsics, const_assume)]\n+\n+extern crate core;\n+\n+use core::intrinsics::assume;\n+\n+pub const unsafe fn foo(x: usize, y: usize) -> usize {\n+    assume(y != 0);\n+    x / y\n+}\n+\n+fn main() {}"}]}