{"sha": "bb6d83dac9035b45db6801a7a84b9d99cca6f183", "node_id": "C_kwDOAAsO6NoAKGJiNmQ4M2RhYzkwMzViNDVkYjY4MDFhN2E4NGI5ZDk5Y2NhNmYxODM", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-20T17:12:18Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-20T17:12:18Z"}, "message": "Sync from rust 84f962a89bac3948ed116f1ad04c2f4793fb69ea", "tree": {"sha": "c38aeeec53b9e7377cd7fdcaeab81e949b1b0ead", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c38aeeec53b9e7377cd7fdcaeab81e949b1b0ead"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb6d83dac9035b45db6801a7a84b9d99cca6f183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb6d83dac9035b45db6801a7a84b9d99cca6f183", "html_url": "https://github.com/rust-lang/rust/commit/bb6d83dac9035b45db6801a7a84b9d99cca6f183", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb6d83dac9035b45db6801a7a84b9d99cca6f183/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "872662586741368624298376750fb6fa8dcf2c7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/872662586741368624298376750fb6fa8dcf2c7a", "html_url": "https://github.com/rust-lang/rust/commit/872662586741368624298376750fb6fa8dcf2c7a"}, {"sha": "c3a9a9b424f327b228c5307cd353bab82abf7c22", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3a9a9b424f327b228c5307cd353bab82abf7c22", "html_url": "https://github.com/rust-lang/rust/commit/c3a9a9b424f327b228c5307cd353bab82abf7c22"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "f33ea87232b5851dd18b15854fa89ae0c2e63e9a", "filename": "src/constant.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bb6d83dac9035b45db6801a7a84b9d99cca6f183/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb6d83dac9035b45db6801a7a84b9d99cca6f183/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=bb6d83dac9035b45db6801a7a84b9d99cca6f183", "patch": "@@ -369,7 +369,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n             TodoItem::Static(def_id) => {\n                 //println!(\"static {:?}\", def_id);\n \n-                let section_name = tcx.codegen_fn_attrs(def_id).link_section.map(|s| s.as_str());\n+                let section_name = tcx.codegen_fn_attrs(def_id).link_section;\n \n                 let alloc = tcx.eval_static_initializer(def_id).unwrap();\n \n@@ -388,6 +388,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n \n         if let Some(section_name) = section_name {\n             let (segment_name, section_name) = if tcx.sess.target.is_like_osx {\n+                let section_name = section_name.as_str();\n                 if let Some(names) = section_name.split_once(',') {\n                     names\n                 } else {\n@@ -397,7 +398,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n                     ));\n                 }\n             } else {\n-                (\"\", &*section_name)\n+                (\"\", section_name.as_str())\n             };\n             data_ctx.set_segment_section(segment_name, section_name);\n         }"}, {"sha": "7f888c80464d41fcc0502dd7d41b5e83dd353d1b", "filename": "src/driver/aot.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb6d83dac9035b45db6801a7a84b9d99cca6f183/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb6d83dac9035b45db6801a7a84b9d99cca6f183/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=bb6d83dac9035b45db6801a7a84b9d99cca6f183", "patch": "@@ -85,7 +85,7 @@ fn reuse_workproduct_for_cgu(\n     let work_product = cgu.work_product(tcx);\n     if let Some(saved_file) = &work_product.saved_file {\n         let obj_out =\n-            tcx.output_filenames(()).temp_path(OutputType::Object, Some(&cgu.name().as_str()));\n+            tcx.output_filenames(()).temp_path(OutputType::Object, Some(cgu.name().as_str()));\n         object = Some(obj_out.clone());\n         let source_file = rustc_incremental::in_incr_comp_dir_sess(&tcx.sess, &saved_file);\n         if let Err(err) = rustc_fs_util::link_or_copy(&source_file, &obj_out) {\n@@ -178,7 +178,7 @@ fn module_codegen(\n         )\n     });\n \n-    codegen_global_asm(tcx, &cgu.name().as_str(), &cx.global_asm);\n+    codegen_global_asm(tcx, cgu.name().as_str(), &cx.global_asm);\n \n     codegen_result\n }\n@@ -209,7 +209,7 @@ pub(crate) fn run_aot(\n         cgus.iter()\n             .map(|cgu| {\n                 let cgu_reuse = determine_cgu_reuse(tcx, cgu);\n-                tcx.sess.cgu_reuse_tracker.set_actual_reuse(&cgu.name().as_str(), cgu_reuse);\n+                tcx.sess.cgu_reuse_tracker.set_actual_reuse(cgu.name().as_str(), cgu_reuse);\n \n                 match cgu_reuse {\n                     _ if backend_config.disable_incr_cache => {}"}]}