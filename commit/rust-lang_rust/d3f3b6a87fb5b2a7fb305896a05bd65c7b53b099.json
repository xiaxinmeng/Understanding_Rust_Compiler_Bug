{"sha": "d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "node_id": "C_kwDOAAsO6NoAKGQzZjNiNmE4N2ZiNWIyYTdmYjMwNTg5NmEwNWJkNjVjN2I1M2IwOTk", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-03T15:05:21Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-03T15:05:21Z"}, "message": "Sort completion calls lexicographically", "tree": {"sha": "1119f6f063b3ba75e54b3705f85b297dc349e196", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1119f6f063b3ba75e54b3705f85b297dc349e196"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "html_url": "https://github.com/rust-lang/rust/commit/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7619c2afeaac09ced8a55b6f2db21550b80fba5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7619c2afeaac09ced8a55b6f2db21550b80fba5e", "html_url": "https://github.com/rust-lang/rust/commit/7619c2afeaac09ced8a55b6f2db21550b80fba5e"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "3bb3f883cdb96b247077bf3f41c473f2d68f49cc", "filename": "crates/ide_completion/src/completions/dot.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs?ref=d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "patch": "@@ -684,12 +684,12 @@ struct Foo { field: i32 }\n \n impl Foo { fn foo(&self) { $0 } }\"#,\n             expect![[r#\"\n+                fd self.field i32\n+                me self.foo() fn(&self)\n                 lc self       &Foo\n                 sp Self\n                 st Foo\n                 bt u32\n-                fd self.field i32\n-                me self.foo() fn(&self)\n             \"#]],\n         );\n         check(\n@@ -698,12 +698,12 @@ struct Foo(i32);\n \n impl Foo { fn foo(&mut self) { $0 } }\"#,\n             expect![[r#\"\n+                fd self.0     i32\n+                me self.foo() fn(&mut self)\n                 lc self       &mut Foo\n                 sp Self\n                 st Foo\n                 bt u32\n-                fd self.0     i32\n-                me self.foo() fn(&mut self)\n             \"#]],\n         );\n     }"}, {"sha": "d58edda304f19711c4478aaf37d42047ce8028f9", "filename": "crates/ide_completion/src/lib.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Flib.rs?ref=d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "patch": "@@ -151,27 +151,27 @@ pub fn completions(\n     }\n \n     let mut acc = Completions::default();\n-    completions::attribute::complete_known_attribute_input(&mut acc, &ctx);\n     completions::attribute::complete_attribute(&mut acc, &ctx);\n-    completions::use_::complete_use_tree(&mut acc, &ctx);\n-    completions::vis::complete_vis(&mut acc, &ctx);\n+    completions::attribute::complete_known_attribute_input(&mut acc, &ctx);\n+    completions::dot::complete_dot(&mut acc, &ctx);\n+    completions::flyimport::import_on_the_fly(&mut acc, &ctx);\n     completions::fn_param::complete_fn_param(&mut acc, &ctx);\n+    completions::format_string::format_string(&mut acc, &ctx);\n     completions::keyword::complete_expr_keyword(&mut acc, &ctx);\n-    completions::snippet::complete_expr_snippet(&mut acc, &ctx);\n-    completions::snippet::complete_item_snippet(&mut acc, &ctx);\n-    completions::qualified_path::complete_qualified_path(&mut acc, &ctx);\n-    completions::unqualified_path::complete_unqualified_path(&mut acc, &ctx);\n-    completions::dot::complete_dot(&mut acc, &ctx);\n-    completions::record::complete_record(&mut acc, &ctx);\n-    completions::record::complete_record_literal(&mut acc, &ctx);\n+    completions::lifetime::complete_label(&mut acc, &ctx);\n+    completions::lifetime::complete_lifetime(&mut acc, &ctx);\n+    completions::mod_::complete_mod(&mut acc, &ctx);\n     completions::pattern::complete_pattern(&mut acc, &ctx);\n     completions::postfix::complete_postfix(&mut acc, &ctx);\n+    completions::qualified_path::complete_qualified_path(&mut acc, &ctx);\n+    completions::record::complete_record_literal(&mut acc, &ctx);\n+    completions::record::complete_record(&mut acc, &ctx);\n+    completions::snippet::complete_expr_snippet(&mut acc, &ctx);\n+    completions::snippet::complete_item_snippet(&mut acc, &ctx);\n     completions::trait_impl::complete_trait_impl(&mut acc, &ctx);\n-    completions::mod_::complete_mod(&mut acc, &ctx);\n-    completions::flyimport::import_on_the_fly(&mut acc, &ctx);\n-    completions::lifetime::complete_lifetime(&mut acc, &ctx);\n-    completions::lifetime::complete_label(&mut acc, &ctx);\n-    completions::format_string::format_string(&mut acc, &ctx);\n+    completions::unqualified_path::complete_unqualified_path(&mut acc, &ctx);\n+    completions::use_::complete_use_tree(&mut acc, &ctx);\n+    completions::vis::complete_vis(&mut acc, &ctx);\n \n     Some(acc)\n }"}, {"sha": "5e1fae68fd2aebe89d671f47ae17a8cbf02ad396", "filename": "crates/ide_completion/src/tests/expression.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs?ref=d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "patch": "@@ -126,6 +126,7 @@ impl Unit {\n \"#,\n         // `self` is in here twice, once as the module, once as the local\n         expect![[r##\"\n+            me self.foo()   fn(self)\n             kw unsafe\n             kw fn\n             kw const\n@@ -172,7 +173,6 @@ impl Unit {\n             un Union\n             ev TupleV(\u2026)    (u32)\n             ct CONST\n-            me self.foo()   fn(self)\n         \"##]],\n     );\n     check("}, {"sha": "3bb332b437259bd7fa154ded9efea02432e5e502", "filename": "crates/ide_completion/src/tests/record.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs?ref=d3f3b6a87fb5b2a7fb305896a05bd65c7b53b099", "patch": "@@ -166,6 +166,10 @@ fn main() {\n             kw true\n             kw false\n             kw return\n+            sn Foo {\u2026}              Foo { foo1: ${1:()}, foo2: ${2:()} }$0\n+            fd ..Default::default()\n+            fd foo1                 u32\n+            fd foo2                 u32\n             kw self\n             kw super\n             kw crate\n@@ -177,10 +181,6 @@ fn main() {\n             bt u32\n             tt Sized\n             tt Default\n-            fd ..Default::default()\n-            fd foo1                 u32\n-            fd foo2                 u32\n-            sn Foo {\u2026}              Foo { foo1: ${1:()}, foo2: ${2:()} }$0\n         \"#]],\n     );\n     check("}]}