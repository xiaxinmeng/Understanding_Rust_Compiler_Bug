{"sha": "f829d208a30a4a8880ffb07ce4582e30c8f8d57f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MjlkMjA4YTMwYTRhODg4MGZmYjA3Y2U0NTgyZTMwYzhmOGQ1N2Y=", "commit": {"author": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2014-04-17T00:17:23Z"}, "committer": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2014-04-17T17:24:52Z"}, "message": "Catch forward declarations in default type params at AST conversion.", "tree": {"sha": "3bd7eb287baab3dcf038af85e8eac66edac4ff9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd7eb287baab3dcf038af85e8eac66edac4ff9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f829d208a30a4a8880ffb07ce4582e30c8f8d57f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f829d208a30a4a8880ffb07ce4582e30c8f8d57f", "html_url": "https://github.com/rust-lang/rust/commit/f829d208a30a4a8880ffb07ce4582e30c8f8d57f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f829d208a30a4a8880ffb07ce4582e30c8f8d57f/comments", "author": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52a53e8ae78d77b3c3735fbaf00e53152402295e", "url": "https://api.github.com/repos/rust-lang/rust/commits/52a53e8ae78d77b3c3735fbaf00e53152402295e", "html_url": "https://github.com/rust-lang/rust/commit/52a53e8ae78d77b3c3735fbaf00e53152402295e"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "6df8da3edaa69e39f3c107b6056d5659614af820", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f829d208a30a4a8880ffb07ce4582e30c8f8d57f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f829d208a30a4a8880ffb07ce4582e30c8f8d57f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=f829d208a30a4a8880ffb07ce4582e30c8f8d57f", "patch": "@@ -945,7 +945,24 @@ pub fn ty_generics(ccx: &CrateCtxt,\n                 let param_ty = ty::param_ty {idx: base_index + offset,\n                                              def_id: local_def(param.id)};\n                 let bounds = @compute_bounds(ccx, param_ty, &param.bounds);\n-                let default = param.default.map(|x| ast_ty_to_ty(ccx, &ExplicitRscope, x));\n+                let default = param.default.map(|path| {\n+                    let ty = ast_ty_to_ty(ccx, &ExplicitRscope, path);\n+                    let cur_idx = param_ty.idx;\n+\n+                    ty::walk_ty(ty, |t| {\n+                        match ty::get(t).sty {\n+                            ty::ty_param(p) => if p.idx > cur_idx {\n+                                ccx.tcx.sess.span_err(path.span,\n+                                                        \"type parameters with a default cannot use \\\n+                                                        forward declared identifiers\")\n+                            },\n+                            _ => {}\n+                        }\n+                    });\n+\n+                    ty\n+                });\n+\n                 let def = ty::TypeParameterDef {\n                     ident: param.ident,\n                     def_id: local_def(param.id),"}, {"sha": "ace53fb51a4056515222f395e204acf4e5954e4f", "filename": "src/test/compile-fail/generic-type-params-forward-mention.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f829d208a30a4a8880ffb07ce4582e30c8f8d57f/src%2Ftest%2Fcompile-fail%2Fgeneric-type-params-forward-mention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f829d208a30a4a8880ffb07ce4582e30c8f8d57f/src%2Ftest%2Fcompile-fail%2Fgeneric-type-params-forward-mention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-type-params-forward-mention.rs?ref=f829d208a30a4a8880ffb07ce4582e30c8f8d57f", "patch": "@@ -12,8 +12,7 @@\n \n // Ensure that we get an error and not an ICE for this problematic case.\n struct Foo<T = Option<U>, U = bool>;\n-\n+//~^ ERROR type parameters with a default cannot use forward declared identifiers\n fn main() {\n     let x: Foo;\n-    //~^ ERROR missing type param `U` in the substitution of `std::option::Option<U>`\n }"}]}