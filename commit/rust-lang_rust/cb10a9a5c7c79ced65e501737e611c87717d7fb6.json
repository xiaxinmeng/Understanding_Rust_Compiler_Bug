{"sha": "cb10a9a5c7c79ced65e501737e611c87717d7fb6", "node_id": "C_kwDOAAsO6NoAKGNiMTBhOWE1YzdjNzljZWQ2NWU1MDE3MzdlNjExYzg3NzE3ZDdmYjY", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-09T16:51:56Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-09T16:51:56Z"}, "message": "replace tcx.hir().item with tcx.def_span query", "tree": {"sha": "7f73afb5219b1247f1cc2ad956315ddfa7fb43d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f73afb5219b1247f1cc2ad956315ddfa7fb43d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb10a9a5c7c79ced65e501737e611c87717d7fb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb10a9a5c7c79ced65e501737e611c87717d7fb6", "html_url": "https://github.com/rust-lang/rust/commit/cb10a9a5c7c79ced65e501737e611c87717d7fb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb10a9a5c7c79ced65e501737e611c87717d7fb6/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9781fd071ce8f47fd451d0b4c3a3d6c67054da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9781fd071ce8f47fd451d0b4c3a3d6c67054da1", "html_url": "https://github.com/rust-lang/rust/commit/f9781fd071ce8f47fd451d0b4c3a3d6c67054da1"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "aaf24636598b9c98a95574ee7def5b42fd869768", "filename": "compiler/rustc_incremental/src/persist/dirty_clean.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cb10a9a5c7c79ced65e501737e611c87717d7fb6/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb10a9a5c7c79ced65e501737e611c87717d7fb6/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs?ref=cb10a9a5c7c79ced65e501737e611c87717d7fb6", "patch": "@@ -150,23 +150,19 @@ pub fn check_dirty_clean_annotations(tcx: TyCtxt<'_>) {\n         let crate_items = tcx.hir_crate_items(());\n \n         for id in crate_items.items() {\n-            let item = tcx.hir().item(id);\n-            dirty_clean_visitor.check_item(item.def_id, item.span);\n+            dirty_clean_visitor.check_item(id.def_id);\n         }\n \n         for id in crate_items.trait_items() {\n-            let item = tcx.hir().trait_item(id);\n-            dirty_clean_visitor.check_item(item.def_id, item.span);\n+            dirty_clean_visitor.check_item(id.def_id);\n         }\n \n         for id in crate_items.impl_items() {\n-            let item = tcx.hir().impl_item(id);\n-            dirty_clean_visitor.check_item(item.def_id, item.span);\n+            dirty_clean_visitor.check_item(id.def_id);\n         }\n \n         for id in crate_items.foreign_items() {\n-            let item = tcx.hir().foreign_item(id);\n-            dirty_clean_visitor.check_item(item.def_id, item.span);\n+            dirty_clean_visitor.check_item(id.def_id);\n         }\n \n         let mut all_attrs = FindAllAttrs { tcx, found_attrs: vec![] };\n@@ -385,7 +381,8 @@ impl<'tcx> DirtyCleanVisitor<'tcx> {\n         }\n     }\n \n-    fn check_item(&mut self, item_id: LocalDefId, item_span: Span) {\n+    fn check_item(&mut self, item_id: LocalDefId) {\n+        let item_span = self.tcx.def_span(item_id.to_def_id());\n         let def_path_hash = self.tcx.def_path_hash(item_id.to_def_id());\n         for attr in self.tcx.get_attrs(item_id.to_def_id()).iter() {\n             let Some(assertion) = self.assertion_maybe(item_id, attr) else {"}]}