{"sha": "6083db7c4ef72ee5435e8157ba5b3f5397da1080", "node_id": "C_kwDOAAsO6NoAKDYwODNkYjdjNGVmNzJlZTU0MzVlODE1N2JhNWIzZjUzOTdkYTEwODA", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-04-30T21:02:34Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-04-30T21:02:34Z"}, "message": "Fix some links in the standard library", "tree": {"sha": "e97f6cc1e6d473d661f41deb1d26b1f378af26b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e97f6cc1e6d473d661f41deb1d26b1f378af26b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6083db7c4ef72ee5435e8157ba5b3f5397da1080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6083db7c4ef72ee5435e8157ba5b3f5397da1080", "html_url": "https://github.com/rust-lang/rust/commit/6083db7c4ef72ee5435e8157ba5b3f5397da1080", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6083db7c4ef72ee5435e8157ba5b3f5397da1080/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b214218730265f8f397615835f5158582835bef", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b214218730265f8f397615835f5158582835bef", "html_url": "https://github.com/rust-lang/rust/commit/8b214218730265f8f397615835f5158582835bef"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "d00056f0c32e827945f36f127e6e588821013168", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=6083db7c4ef72ee5435e8157ba5b3f5397da1080", "patch": "@@ -640,6 +640,8 @@ macro_rules! unreachable {\n ///\n /// Like `panic!`, this macro has a second form for displaying custom values.\n ///\n+/// [`todo!`]: crate::todo\n+///\n /// # Examples\n ///\n /// Say we have a trait `Foo`:"}, {"sha": "153b6843cd97c33caf1606a67a9307bf2c198810", "filename": "library/std/src/macros.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fstd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fstd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fmacros.rs?ref=6083db7c4ef72ee5435e8157ba5b3f5397da1080", "patch": "@@ -31,6 +31,8 @@ macro_rules! panic {\n /// [`eprint!`] instead to print error and progress messages.\n ///\n /// [flush]: crate::io::Write::flush\n+/// [`println!`]: crate::println\n+/// [`eprint!`]: crate::eprint\n ///\n /// # Panics\n ///\n@@ -77,6 +79,7 @@ macro_rules! print {\n /// [`eprintln!`] instead to print error and progress messages.\n ///\n /// [`std::fmt`]: crate::fmt\n+/// [`eprintln!`]: crate::eprintln\n ///\n /// # Panics\n ///\n@@ -146,6 +149,7 @@ macro_rules! eprint {\n ///\n /// [`io::stderr`]: crate::io::stderr\n /// [`io::stdout`]: crate::io::stdout\n+/// [`println!`]: crate::println\n ///\n /// # Panics\n ///"}, {"sha": "f4750cdf764dc3e7cbb241b46d432fc27ea21bfc", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=6083db7c4ef72ee5435e8157ba5b3f5397da1080", "patch": "@@ -21,6 +21,8 @@ use crate::fmt;\n /// The [`with`] method yields a reference to the contained value which cannot be\n /// sent across threads or escape the given closure.\n ///\n+/// [`thread_local!`]: crate::thread_local\n+///\n /// # Initialization and Destruction\n ///\n /// Initialization is dynamically performed on the first call to [`with`]"}, {"sha": "b4b1037a3cd392a60131aa18bc65f8333c10207d", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6083db7c4ef72ee5435e8157ba5b3f5397da1080/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=6083db7c4ef72ee5435e8157ba5b3f5397da1080", "patch": "@@ -146,6 +146,7 @@\n //! [`Cell`]: crate::cell::Cell\n //! [`RefCell`]: crate::cell::RefCell\n //! [`with`]: LocalKey::with\n+//! [`thread_local!`]: crate::thread_local\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![deny(unsafe_op_in_unsafe_fn)]"}]}