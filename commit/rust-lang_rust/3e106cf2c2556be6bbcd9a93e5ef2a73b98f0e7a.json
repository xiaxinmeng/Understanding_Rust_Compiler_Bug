{"sha": "3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMTA2Y2YyYzI1NTZiZTZiYmNkOWE5M2U1ZWYyYTczYjk4ZjBlN2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-10T06:58:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-10T06:58:53Z"}, "message": "auto merge of #6339 : alexcrichton/rust/unsafe-cvec, r=catamorphism\n\nAs noted by @jwise [here](https://github.com/mozilla/rust/commit/52445129fdb4ee847332acbf516ced8f73b7990a#commitcomment-3172192), it's probably a good idea to keep these unsafe.\r\n\r\nThe lint check won't warn about these because it ignore `unsafe fn` declarations.", "tree": {"sha": "5fa1b7e055936837095f993c2db6341f8f2565e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fa1b7e055936837095f993c2db6341f8f2565e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a", "html_url": "https://github.com/rust-lang/rust/commit/3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad8e236f32fccf6ec99025e2ba77f79b4c98d399", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8e236f32fccf6ec99025e2ba77f79b4c98d399", "html_url": "https://github.com/rust-lang/rust/commit/ad8e236f32fccf6ec99025e2ba77f79b4c98d399"}, {"sha": "d6efbad33fc4e75df77c4f90ef83e3a0da0e0bb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6efbad33fc4e75df77c4f90ef83e3a0da0e0bb5", "html_url": "https://github.com/rust-lang/rust/commit/d6efbad33fc4e75df77c4f90ef83e3a0da0e0bb5"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "17b7bae6de5df4e8465facead54eed4cf76d504a", "filename": "src/libstd/c_vec.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a/src%2Flibstd%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a/src%2Flibstd%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_vec.rs?ref=3e106cf2c2556be6bbcd9a93e5ef2a73b98f0e7a", "patch": "@@ -78,7 +78,7 @@ fn DtorRes(dtor: Option<@fn()>) -> DtorRes {\n  * * base - A foreign pointer to a buffer\n  * * len - The number of elements in the buffer\n  */\n-pub fn CVec<T>(base: *mut T, len: uint) -> CVec<T> {\n+pub unsafe fn CVec<T>(base: *mut T, len: uint) -> CVec<T> {\n     return CVec{\n         base: base,\n         len: len,\n@@ -97,7 +97,7 @@ pub fn CVec<T>(base: *mut T, len: uint) -> CVec<T> {\n  * * dtor - A function to run when the value is destructed, useful\n  *          for freeing the buffer, etc.\n  */\n-pub fn c_vec_with_dtor<T>(base: *mut T, len: uint, dtor: @fn())\n+pub unsafe fn c_vec_with_dtor<T>(base: *mut T, len: uint, dtor: @fn())\n   -> CVec<T> {\n     return CVec{\n         base: base,\n@@ -138,7 +138,7 @@ pub fn set<T:Copy>(t: CVec<T>, ofs: uint, v: T) {\n pub fn len<T>(t: CVec<T>) -> uint { t.len }\n \n /// Returns a pointer to the first element of the vector\n-pub fn ptr<T>(t: CVec<T>) -> *mut T { t.base }\n+pub unsafe fn ptr<T>(t: CVec<T>) -> *mut T { t.base }\n \n #[cfg(test)]\n mod tests {\n@@ -191,7 +191,7 @@ mod tests {\n     #[test]\n     fn test_and_I_mean_it() {\n         let cv = malloc(16u as size_t);\n-        let p = ptr(cv);\n+        let p = unsafe { ptr(cv) };\n \n         set(cv, 0u, 32u8);\n         set(cv, 1u, 33u8);"}]}