{"sha": "a60c143fe0cec1125e894f3d2d5008cc317fdacf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MGMxNDNmZTBjZWMxMTI1ZTg5NGYzZDJkNTAwOGNjMzE3ZmRhY2Y=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-03T14:24:06Z"}, "committer": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-06T09:03:14Z"}, "message": "Add new lint `filter_map_identity`\n\nThis commit adds a new lint named `filter_map_identity`. This lint is\nthe same as `flat_map_identity` except that it checks for `filter_map`.\n\nCloses #6643", "tree": {"sha": "97e409f4d74ba398da2d1cd20e5a6656c007e02a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97e409f4d74ba398da2d1cd20e5a6656c007e02a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a60c143fe0cec1125e894f3d2d5008cc317fdacf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJIBAABCAAyFiEEgbkHgdnD1idvtMJ0QJ1+7h56cWoFAmAeW1MUHHl1c3VrdGFu\nQG1hZ3Vyby5kZXYACgkQQJ1+7h56cWrZtQ/8C5llmwzXT0Yv1y5OLucaROslyAXC\nFEMRlQgOVy/llHb40AtkYm4Y2hQnIAEnjOMaD2+m4m+8GctpO25RbXyDVyW94JMu\nOH27nGfWkL3vRFPnPVz+Isn7n4eazdSbe88jfrEPUZdMJsS/kmkCjI4u4q9pOmJ4\nwn8KMg5WK8o7/Za6pTN0/oMmkHLPTzlb3cosuu/BEPKOUuIfNdBJTKnk2VRVDhpL\nG+K35w0jB7o9MAAcASkOB/TglpoI0L91Q55bKQKaalQFfJvpDNyOqJFY20VJLlyu\nMkjpFgdg7IjxsSxYAGHfr9/PI7U9IdY+to3wC7t0LMGsPNNbbFM2CyFf/JrFruxk\nOXk0ZIfyJIhvuHycuvsTmWW7CN769MGlAavKLcM/hW5zhCGqVBUoQpd4SbMNkPa4\ncIpah76Ki3NOWA4+aKwU7JtP7NkYwYN/L1AAb5KpEaVmkCRnxEiUhtnA+5ODhI5B\nQr2ZFtkegKYag2uhwXN6zj+kAPEBCLd61f1GCV564MBWs89Hzq6JgCAs0r/fZVTf\nakhsZfrN406M2VhhCVSbNjXJY1MCgtT1IDQ//VG07j5PwJJPS+SIMMweEOgu2Tqc\n8jMrI+kg5Jgw9TvUqqqW2dDSgthk7eJEmoHxhHo1n4MgEWeKG+L4Chbkv4kifJO0\nNhWqExF0g4xnPZ0=\n=yVlY\n-----END PGP SIGNATURE-----", "payload": "tree 97e409f4d74ba398da2d1cd20e5a6656c007e02a\nparent a507c27660d05f37307369d30bee9e82ce3a11e1\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612362246 +0900\ncommitter Yusuke Tanaka <yusuktan@maguro.dev> 1612602194 +0900\n\nAdd new lint `filter_map_identity`\n\nThis commit adds a new lint named `filter_map_identity`. This lint is\nthe same as `flat_map_identity` except that it checks for `filter_map`.\n\nCloses #6643\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a60c143fe0cec1125e894f3d2d5008cc317fdacf", "html_url": "https://github.com/rust-lang/rust/commit/a60c143fe0cec1125e894f3d2d5008cc317fdacf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a60c143fe0cec1125e894f3d2d5008cc317fdacf/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a507c27660d05f37307369d30bee9e82ce3a11e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a507c27660d05f37307369d30bee9e82ce3a11e1", "html_url": "https://github.com/rust-lang/rust/commit/a507c27660d05f37307369d30bee9e82ce3a11e1"}], "stats": {"total": 144, "additions": 143, "deletions": 1}, "files": [{"sha": "f32f5529751b853513df510d08dac6215b75d2f5", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a60c143fe0cec1125e894f3d2d5008cc317fdacf/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a60c143fe0cec1125e894f3d2d5008cc317fdacf/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a60c143fe0cec1125e894f3d2d5008cc317fdacf", "patch": "@@ -1955,6 +1955,7 @@ Released 2018-09-13\n [`field_reassign_with_default`]: https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default\n [`filetype_is_file`]: https://rust-lang.github.io/rust-clippy/master/index.html#filetype_is_file\n [`filter_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#filter_map\n+[`filter_map_identity`]: https://rust-lang.github.io/rust-clippy/master/index.html#filter_map_identity\n [`filter_map_next`]: https://rust-lang.github.io/rust-clippy/master/index.html#filter_map_next\n [`filter_next`]: https://rust-lang.github.io/rust-clippy/master/index.html#filter_next\n [`find_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#find_map"}, {"sha": "760b490dc129d5f329907aefff5b56eda3b03d17", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a60c143fe0cec1125e894f3d2d5008cc317fdacf/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a60c143fe0cec1125e894f3d2d5008cc317fdacf/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a60c143fe0cec1125e894f3d2d5008cc317fdacf", "patch": "@@ -742,6 +742,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &methods::EXPECT_USED,\n         &methods::FILETYPE_IS_FILE,\n         &methods::FILTER_MAP,\n+        &methods::FILTER_MAP_IDENTITY,\n         &methods::FILTER_MAP_NEXT,\n         &methods::FILTER_NEXT,\n         &methods::FLAT_MAP_IDENTITY,\n@@ -1531,6 +1532,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&methods::CLONE_DOUBLE_REF),\n         LintId::of(&methods::CLONE_ON_COPY),\n         LintId::of(&methods::EXPECT_FUN_CALL),\n+        LintId::of(&methods::FILTER_MAP_IDENTITY),\n         LintId::of(&methods::FILTER_NEXT),\n         LintId::of(&methods::FLAT_MAP_IDENTITY),\n         LintId::of(&methods::FROM_ITER_INSTEAD_OF_COLLECT),\n@@ -1838,6 +1840,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&matches::WILDCARD_IN_OR_PATTERNS),\n         LintId::of(&methods::BIND_INSTEAD_OF_MAP),\n         LintId::of(&methods::CLONE_ON_COPY),\n+        LintId::of(&methods::FILTER_MAP_IDENTITY),\n         LintId::of(&methods::FILTER_NEXT),\n         LintId::of(&methods::FLAT_MAP_IDENTITY),\n         LintId::of(&methods::INSPECT_FOR_EACH),"}, {"sha": "d04e4be87ac299f19ac6925dc7347901e8125f2e", "filename": "clippy_lints/src/methods/filter_map_identity.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/a60c143fe0cec1125e894f3d2d5008cc317fdacf/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a60c143fe0cec1125e894f3d2d5008cc317fdacf/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs?ref=a60c143fe0cec1125e894f3d2d5008cc317fdacf", "patch": "@@ -0,0 +1,56 @@\n+use crate::utils::{match_qpath, match_trait_method, paths, span_lint_and_sugg};\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+use rustc_span::source_map::Span;\n+\n+use super::FILTER_MAP_IDENTITY;\n+\n+pub(super) fn check(\n+    cx: &LateContext<'_>,\n+    expr: &hir::Expr<'_>,\n+    filter_map_args: &[hir::Expr<'_>],\n+    filter_map_span: Span,\n+) {\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+        let arg_node = &filter_map_args[1].kind;\n+\n+        let apply_lint = |message: &str| {\n+            span_lint_and_sugg(\n+                cx,\n+                FILTER_MAP_IDENTITY,\n+                filter_map_span.with_hi(expr.span.hi()),\n+                message,\n+                \"try\",\n+                \"flatten()\".to_string(),\n+                Applicability::MachineApplicable,\n+            );\n+        };\n+\n+        if_chain! {\n+            if let hir::ExprKind::Closure(_, _, body_id, _, _) = arg_node;\n+            let body = cx.tcx.hir().body(*body_id);\n+\n+            if let hir::PatKind::Binding(_, _, binding_ident, _) = body.params[0].pat.kind;\n+            if let hir::ExprKind::Path(hir::QPath::Resolved(_, ref path)) = body.value.kind;\n+\n+            if path.segments.len() == 1;\n+            if path.segments[0].ident.name == binding_ident.name;\n+\n+            then {\n+                apply_lint(\"called `filter_map(|x| x)` on an `Iterator`\");\n+            }\n+        }\n+\n+        if_chain! {\n+            if let hir::ExprKind::Path(ref qpath) = arg_node;\n+\n+            if match_qpath(qpath, &paths::STD_CONVERT_IDENTITY);\n+\n+            then {\n+                apply_lint(\"called `filter_map(std::convert::identity)` on an `Iterator`\");\n+            }\n+        }\n+    }\n+}"}, {"sha": "2f68bc0121aa156ad9fe345990403559212c3f83", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a60c143fe0cec1125e894f3d2d5008cc317fdacf/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a60c143fe0cec1125e894f3d2d5008cc317fdacf/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=a60c143fe0cec1125e894f3d2d5008cc317fdacf", "patch": "@@ -1,4 +1,5 @@\n mod bind_instead_of_map;\n+mod filter_map_identity;\n mod inefficient_to_string;\n mod inspect_for_each;\n mod manual_saturating_arithmetic;\n@@ -1467,6 +1468,29 @@ declare_clippy_lint! {\n     \"using `.inspect().for_each()`, which can be replaced with `.for_each()`\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for usage of `filter_map(|x| x)`.\n+    ///\n+    /// **Why is this bad?** Readability, this can be written more concisely by using `flatten`.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// # let iter = vec![Some(1)].into_iter();\n+    /// iter.filter_map(|x| x);\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// # let iter = vec![Some(1)].into_iter();\n+    /// iter.flatten();\n+    /// ```\n+    pub FILTER_MAP_IDENTITY,\n+    complexity,\n+    \"call to `filter_map` where `flatten` is sufficient\"\n+}\n+\n pub struct Methods {\n     msrv: Option<RustcVersion>,\n }\n@@ -1504,6 +1528,7 @@ impl_lint_pass!(Methods => [\n     FILTER_NEXT,\n     SKIP_WHILE_NEXT,\n     FILTER_MAP,\n+    FILTER_MAP_IDENTITY,\n     MANUAL_FILTER_MAP,\n     MANUAL_FIND_MAP,\n     FILTER_MAP_NEXT,\n@@ -1597,7 +1622,10 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             [\"as_ref\"] => lint_asref(cx, expr, \"as_ref\", arg_lists[0]),\n             [\"as_mut\"] => lint_asref(cx, expr, \"as_mut\", arg_lists[0]),\n             [\"fold\", ..] => lint_unnecessary_fold(cx, expr, arg_lists[0], method_spans[0]),\n-            [\"filter_map\", ..] => unnecessary_filter_map::lint(cx, expr, arg_lists[0]),\n+            [\"filter_map\", ..] => {\n+                unnecessary_filter_map::lint(cx, expr, arg_lists[0]);\n+                filter_map_identity::check(cx, expr, arg_lists[0], method_spans[0]);\n+            },\n             [\"count\", \"map\"] => lint_suspicious_map(cx, expr),\n             [\"assume_init\"] => lint_maybe_uninit(cx, &arg_lists[0][0], expr),\n             [\"unwrap_or\", arith @ (\"checked_add\" | \"checked_sub\" | \"checked_mul\")] => {"}, {"sha": "23ce28d8e9be4c2238afe40f3a664419763305d0", "filename": "tests/ui/filter_map_identity.fixed", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a60c143fe0cec1125e894f3d2d5008cc317fdacf/tests%2Fui%2Ffilter_map_identity.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a60c143fe0cec1125e894f3d2d5008cc317fdacf/tests%2Fui%2Ffilter_map_identity.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_identity.fixed?ref=a60c143fe0cec1125e894f3d2d5008cc317fdacf", "patch": "@@ -0,0 +1,16 @@\n+// run-rustfix\n+\n+#![allow(unused_imports)]\n+#![warn(clippy::filter_map_identity)]\n+\n+fn main() {\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.flatten();\n+\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.flatten();\n+\n+    use std::convert::identity;\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.flatten();\n+}"}, {"sha": "e698df13eea47ef4ff3eaca9319a0a0b82b14ad5", "filename": "tests/ui/filter_map_identity.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a60c143fe0cec1125e894f3d2d5008cc317fdacf/tests%2Fui%2Ffilter_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a60c143fe0cec1125e894f3d2d5008cc317fdacf/tests%2Fui%2Ffilter_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_identity.rs?ref=a60c143fe0cec1125e894f3d2d5008cc317fdacf", "patch": "@@ -0,0 +1,16 @@\n+// run-rustfix\n+\n+#![allow(unused_imports)]\n+#![warn(clippy::filter_map_identity)]\n+\n+fn main() {\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.filter_map(|x| x);\n+\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.filter_map(std::convert::identity);\n+\n+    use std::convert::identity;\n+    let iterator = vec![Some(1), None, Some(2)].into_iter();\n+    let _ = iterator.filter_map(identity);\n+}"}, {"sha": "596a6320608c7c0acf8725c40c88c82461b20309", "filename": "tests/ui/filter_map_identity.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a60c143fe0cec1125e894f3d2d5008cc317fdacf/tests%2Fui%2Ffilter_map_identity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a60c143fe0cec1125e894f3d2d5008cc317fdacf/tests%2Fui%2Ffilter_map_identity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_identity.stderr?ref=a60c143fe0cec1125e894f3d2d5008cc317fdacf", "patch": "@@ -0,0 +1,22 @@\n+error: called `filter_map(|x| x)` on an `Iterator`\n+  --> $DIR/filter_map_identity.rs:8:22\n+   |\n+LL |     let _ = iterator.filter_map(|x| x);\n+   |                      ^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n+   |\n+   = note: `-D clippy::filter-map-identity` implied by `-D warnings`\n+\n+error: called `filter_map(std::convert::identity)` on an `Iterator`\n+  --> $DIR/filter_map_identity.rs:11:22\n+   |\n+LL |     let _ = iterator.filter_map(std::convert::identity);\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n+\n+error: called `filter_map(std::convert::identity)` on an `Iterator`\n+  --> $DIR/filter_map_identity.rs:15:22\n+   |\n+LL |     let _ = iterator.filter_map(identity);\n+   |                      ^^^^^^^^^^^^^^^^^^^^ help: try: `flatten()`\n+\n+error: aborting due to 3 previous errors\n+"}]}