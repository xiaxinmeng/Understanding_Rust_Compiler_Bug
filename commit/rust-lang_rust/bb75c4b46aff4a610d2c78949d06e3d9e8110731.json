{"sha": "bb75c4b46aff4a610d2c78949d06e3d9e8110731", "node_id": "C_kwDOAAsO6NoAKGJiNzVjNGI0NmFmZjRhNjEwZDJjNzg5NDlkMDZlM2Q5ZTgxMTA3MzE", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-04-28T01:27:38Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-07-02T13:51:42Z"}, "message": "call emit_metadata only when metadata_kind is None", "tree": {"sha": "ec16a005ecdef8d650b7a1c13742eafdcc89ab6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec16a005ecdef8d650b7a1c13742eafdcc89ab6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb75c4b46aff4a610d2c78949d06e3d9e8110731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb75c4b46aff4a610d2c78949d06e3d9e8110731", "html_url": "https://github.com/rust-lang/rust/commit/bb75c4b46aff4a610d2c78949d06e3d9e8110731", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb75c4b46aff4a610d2c78949d06e3d9e8110731/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7f95ace08fecfb974cbb2d486e4c7920a6010ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7f95ace08fecfb974cbb2d486e4c7920a6010ca", "html_url": "https://github.com/rust-lang/rust/commit/e7f95ace08fecfb974cbb2d486e4c7920a6010ca"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "71052195fadc96c302e7314217c38e5abcb96894", "filename": "compiler/rustc_metadata/src/fs.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bb75c4b46aff4a610d2c78949d06e3d9e8110731/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb75c4b46aff4a610d2c78949d06e3d9e8110731/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Ffs.rs?ref=bb75c4b46aff4a610d2c78949d06e3d9e8110731", "patch": "@@ -69,17 +69,20 @@ pub fn encode_and_write_metadata(\n     let metadata_tmpdir = MaybeTempDir::new(metadata_tmpdir, tcx.sess.opts.cg.save_temps);\n     let metadata_filename = metadata_tmpdir.as_ref().join(METADATA_FILENAME);\n     let metadata = match metadata_kind {\n-        MetadataKind::None => EncodedMetadata::new(),\n+        MetadataKind::None => {\n+            let metadata = EncodedMetadata::new();\n+            let _ = emit_metadata(tcx.sess, metadata.raw_data(), &metadata_tmpdir);\n+            metadata\n+        }\n         MetadataKind::Uncompressed | MetadataKind::Compressed => {\n-            encode_metadata(tcx, metadata_filename)\n+            encode_metadata(tcx, &metadata_filename)\n         }\n     };\n \n     let _prof_timer = tcx.sess.prof.generic_activity(\"write_crate_metadata\");\n \n     let need_metadata_file = tcx.sess.opts.output_types.contains_key(&OutputType::Metadata);\n     if need_metadata_file {\n-        let metadata_filename = emit_metadata(tcx.sess, metadata.raw_data(), &metadata_tmpdir);\n         if let Err(e) = non_durable_rename(&metadata_filename, &out_filename) {\n             tcx.sess.fatal(&format!(\"failed to write {}: {}\", out_filename.display(), e));\n         }"}]}