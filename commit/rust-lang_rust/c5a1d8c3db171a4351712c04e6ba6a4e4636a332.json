{"sha": "c5a1d8c3db171a4351712c04e6ba6a4e4636a332", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YTFkOGMzZGIxNzFhNDM1MTcxMmMwNGU2YmE2YTRlNDYzNmEzMzI=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-08-02T17:03:01Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-08-02T18:08:35Z"}, "message": "StrSearcher: Add tests for rfind(&str)\n\nAdd tests for .rfind(&str), using the reverse searcher case for\nsubstring search.", "tree": {"sha": "2197df5eeb2fd3b44d02928bdea4dea662e41fac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2197df5eeb2fd3b44d02928bdea4dea662e41fac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5a1d8c3db171a4351712c04e6ba6a4e4636a332", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a1d8c3db171a4351712c04e6ba6a4e4636a332", "html_url": "https://github.com/rust-lang/rust/commit/c5a1d8c3db171a4351712c04e6ba6a4e4636a332", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5a1d8c3db171a4351712c04e6ba6a4e4636a332/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "832e5a02cd41b3a20d1142b47867da4aa5033f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/832e5a02cd41b3a20d1142b47867da4aa5033f03", "html_url": "https://github.com/rust-lang/rust/commit/832e5a02cd41b3a20d1142b47867da4aa5033f03"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "ac9c7908ab8f9e0e767e6491e2f7fe2eefc07a68", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c5a1d8c3db171a4351712c04e6ba6a4e4636a332/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5a1d8c3db171a4351712c04e6ba6a4e4636a332/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=c5a1d8c3db171a4351712c04e6ba6a4e4636a332", "patch": "@@ -115,6 +115,26 @@ fn test_find_str() {\n     assert_eq!(data[43..86].find(\"\u0e22\u4e2d\"), Some(67 - 43));\n     assert_eq!(data[43..86].find(\"i\u1ec7t\"), Some(77 - 43));\n     assert_eq!(data[43..86].find(\"Nam\"), Some(83 - 43));\n+\n+    // find every substring -- assert that it finds it, or an earlier occurence.\n+    let string = \"Vi\u1ec7t Namacbaabcaabaaba\";\n+    for (i, ci) in string.char_indices() {\n+        let ip = i + ci.len_utf8();\n+        for j in string[ip..].char_indices()\n+                             .map(|(i, _)| i)\n+                             .chain(Some(string.len() - ip))\n+        {\n+            let pat = &string[i..ip + j];\n+            assert!(match string.find(pat) {\n+                None => false,\n+                Some(x) => x <= i,\n+            });\n+            assert!(match string.rfind(pat) {\n+                None => false,\n+                Some(x) => x >= i,\n+            });\n+        }\n+    }\n }\n \n #[test]"}]}