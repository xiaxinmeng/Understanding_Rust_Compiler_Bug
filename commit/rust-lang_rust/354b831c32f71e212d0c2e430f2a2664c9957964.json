{"sha": "354b831c32f71e212d0c2e430f2a2664c9957964", "node_id": "C_kwDOAAsO6NoAKDM1NGI4MzFjMzJmNzFlMjEyZDBjMmU0MzBmMmEyNjY0Yzk5NTc5NjQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-10T05:21:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-10T05:21:37Z"}, "message": "Rollup merge of #100334 - TaKO8Ki:suggest-missing-semicolon-before-array, r=fee1-dead\n\nSuggest a missing semicolon before an array\n\nfixes #99658", "tree": {"sha": "3379ab18a6febfd0571dd7ae56a86603bed3595f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3379ab18a6febfd0571dd7ae56a86603bed3595f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/354b831c32f71e212d0c2e430f2a2664c9957964", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi80BhCRBK7hj4Ov3rIwAACnUIAFpsDLf8liHqrhKX5VhuuoEc\n/qo71ohaWQVDA6oxdmPg/vzICDkJ+apCV5FNW6AiA/sHHGtBqHrccbJxGic9TS7A\nGMAthE78O2zi52yAIkbLc0PRxxbhFyx3khADv9D5CsXuTFVa0e4Njh55+IwMg4b0\nbPpDyXObxu3CXpUUa9DzNrwn5MVV9T8EUvoahr29yS1bXGP01u8FzsM2foiDAu5x\nM7vVSUYPYG6H8en/Ys/m+rkun32LTcuXPz4BjQz0R0vCklk/k7WKMl6yPGJhbRac\nnzvci+JkZdR36ggnr+wJAK4SxpnofViEKzmwrUypo8XaAU6UZIvx+E/P6hHw/Bs=\n=7eei\n-----END PGP SIGNATURE-----\n", "payload": "tree 3379ab18a6febfd0571dd7ae56a86603bed3595f\nparent 0cbecda7fe7b20ce439a050c666b02d9aa27f4d8\nparent 6d85bb953521039350a915a73033a2e46e1a8665\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660108897 +0200\ncommitter GitHub <noreply@github.com> 1660108897 +0200\n\nRollup merge of #100334 - TaKO8Ki:suggest-missing-semicolon-before-array, r=fee1-dead\n\nSuggest a missing semicolon before an array\n\nfixes #99658\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/354b831c32f71e212d0c2e430f2a2664c9957964", "html_url": "https://github.com/rust-lang/rust/commit/354b831c32f71e212d0c2e430f2a2664c9957964", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/354b831c32f71e212d0c2e430f2a2664c9957964/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cbecda7fe7b20ce439a050c666b02d9aa27f4d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cbecda7fe7b20ce439a050c666b02d9aa27f4d8", "html_url": "https://github.com/rust-lang/rust/commit/0cbecda7fe7b20ce439a050c666b02d9aa27f4d8"}, {"sha": "6d85bb953521039350a915a73033a2e46e1a8665", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d85bb953521039350a915a73033a2e46e1a8665", "html_url": "https://github.com/rust-lang/rust/commit/6d85bb953521039350a915a73033a2e46e1a8665"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "b8bd960a5b3d632591dcbec3735484c9d5dfd03a", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/354b831c32f71e212d0c2e430f2a2664c9957964/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/354b831c32f71e212d0c2e430f2a2664c9957964/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=354b831c32f71e212d0c2e430f2a2664c9957964", "patch": "@@ -1258,8 +1258,11 @@ impl<'a> Parser<'a> {\n \n     /// Parse an indexing expression `expr[...]`.\n     fn parse_index_expr(&mut self, lo: Span, base: P<Expr>) -> PResult<'a, P<Expr>> {\n+        let prev_span = self.prev_token.span;\n+        let open_delim_span = self.token.span;\n         self.bump(); // `[`\n         let index = self.parse_expr()?;\n+        self.suggest_missing_semicolon_before_array(prev_span, open_delim_span)?;\n         self.expect(&token::CloseDelim(Delimiter::Bracket))?;\n         Ok(self.mk_expr(lo.to(self.prev_token.span), self.mk_index(base, index), AttrVec::new()))\n     }\n@@ -2056,6 +2059,45 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    fn suggest_missing_semicolon_before_array(\n+        &self,\n+        prev_span: Span,\n+        open_delim_span: Span,\n+    ) -> PResult<'a, ()> {\n+        if self.token.kind == token::Comma {\n+            let mut snapshot = self.create_snapshot_for_diagnostic();\n+            snapshot.bump();\n+            match snapshot.parse_seq_to_before_end(\n+                &token::CloseDelim(Delimiter::Bracket),\n+                SeqSep::trailing_allowed(token::Comma),\n+                |p| p.parse_expr(),\n+            ) {\n+                Ok(_)\n+                    // When the close delim is `)`, `token.kind` is expected to be `token::CloseDelim(Delimiter::Parenthesis)`,\n+                    // but the actual `token.kind` is `token::CloseDelim(Delimiter::Bracket)`.\n+                    // This is because the `token.kind` of the close delim is treated as the same as\n+                    // that of the open delim in `TokenTreesReader::parse_token_tree`, even if the delimiters of them are different.\n+                    // Therefore, `token.kind` should not be compared here.\n+                    if snapshot\n+                        .span_to_snippet(snapshot.token.span)\n+                        .map_or(false, |snippet| snippet == \"]\") =>\n+                {\n+                    let mut err = self.struct_span_err(open_delim_span, \"expected `;`, found `[`\");\n+                    err.span_suggestion_verbose(\n+                        prev_span.shrink_to_hi(),\n+                        \"consider adding `;` here\",\n+                        ';',\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                    return Err(err);\n+                }\n+                Ok(_) => (),\n+                Err(err) => err.cancel(),\n+            }\n+        }\n+        Ok(())\n+    }\n+\n     /// Parses a block or unsafe block.\n     pub(super) fn parse_block_expr(\n         &mut self,"}, {"sha": "7ebf3f6b0d89981c4a2f5fb6c1c726473c18b2f5", "filename": "src/test/ui/parser/do-not-suggest-suggest-semicolon-before-array.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fdo-not-suggest-suggest-semicolon-before-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fdo-not-suggest-suggest-semicolon-before-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdo-not-suggest-suggest-semicolon-before-array.rs?ref=354b831c32f71e212d0c2e430f2a2664c9957964", "patch": "@@ -0,0 +1,8 @@\n+fn foo() {}\n+\n+fn bar() -> [u8; 2] {\n+    foo()\n+    [1, 3) //~ ERROR expected one of `.`, `?`, `]`, or an operator, found `,`\n+}\n+\n+fn main() {}"}, {"sha": "d6e8db803299ca6fa4c95e0ca4e6a5540cfa8ad9", "filename": "src/test/ui/parser/do-not-suggest-suggest-semicolon-before-array.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fdo-not-suggest-suggest-semicolon-before-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fdo-not-suggest-suggest-semicolon-before-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdo-not-suggest-suggest-semicolon-before-array.stderr?ref=354b831c32f71e212d0c2e430f2a2664c9957964", "patch": "@@ -0,0 +1,10 @@\n+error: expected one of `.`, `?`, `]`, or an operator, found `,`\n+  --> $DIR/do-not-suggest-suggest-semicolon-before-array.rs:5:5\n+   |\n+LL |     [1, 3)\n+   |     ^ ^ help: `]` may belong here\n+   |     |\n+   |     unclosed delimiter\n+\n+error: aborting due to previous error\n+"}, {"sha": "a06b58b2740fa2175a46e02d205df1f323e3807c", "filename": "src/test/ui/parser/suggest-suggest-semicolon-before-array.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.fixed?ref=354b831c32f71e212d0c2e430f2a2664c9957964", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+#![allow(dead_code)]\n+\n+fn foo() {}\n+\n+fn bar() -> [u8; 2] {\n+    foo();\n+    [1, 3] //~ ERROR expected `;`, found `[`\n+}\n+\n+fn main() {}"}, {"sha": "f601ca2aef54efe8e8d4316d668ee0413caa043b", "filename": "src/test/ui/parser/suggest-suggest-semicolon-before-array.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.rs?ref=354b831c32f71e212d0c2e430f2a2664c9957964", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+#![allow(dead_code)]\n+\n+fn foo() {}\n+\n+fn bar() -> [u8; 2] {\n+    foo()\n+    [1, 3] //~ ERROR expected `;`, found `[`\n+}\n+\n+fn main() {}"}, {"sha": "bf86b43554d1a22ad793edd82275980045a46c4e", "filename": "src/test/ui/parser/suggest-suggest-semicolon-before-array.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/354b831c32f71e212d0c2e430f2a2664c9957964/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-suggest-semicolon-before-array.stderr?ref=354b831c32f71e212d0c2e430f2a2664c9957964", "patch": "@@ -0,0 +1,13 @@\n+error: expected `;`, found `[`\n+  --> $DIR/suggest-suggest-semicolon-before-array.rs:8:5\n+   |\n+LL |     [1, 3]\n+   |     ^\n+   |\n+help: consider adding `;` here\n+   |\n+LL |     foo();\n+   |          +\n+\n+error: aborting due to previous error\n+"}]}