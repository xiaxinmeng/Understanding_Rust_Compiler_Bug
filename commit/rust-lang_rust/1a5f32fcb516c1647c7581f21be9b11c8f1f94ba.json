{"sha": "1a5f32fcb516c1647c7581f21be9b11c8f1f94ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNWYzMmZjYjUxNmMxNjQ3Yzc1ODFmMjFiZTliMTFjOGYxZjk0YmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T20:46:48Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T20:46:48Z"}, "message": "remove dead code", "tree": {"sha": "79edc4d2ff1d9d5c6e39d2d4628aaf1e20945563", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79edc4d2ff1d9d5c6e39d2d4628aaf1e20945563"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a5f32fcb516c1647c7581f21be9b11c8f1f94ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a5f32fcb516c1647c7581f21be9b11c8f1f94ba", "html_url": "https://github.com/rust-lang/rust/commit/1a5f32fcb516c1647c7581f21be9b11c8f1f94ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a5f32fcb516c1647c7581f21be9b11c8f1f94ba/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3a37522a027a10c257f4dfdc2369e7853e0c80e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a37522a027a10c257f4dfdc2369e7853e0c80e", "html_url": "https://github.com/rust-lang/rust/commit/f3a37522a027a10c257f4dfdc2369e7853e0c80e"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "7ed5dbec74b1cd57cae21648ce3ae07d328b63f7", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1a5f32fcb516c1647c7581f21be9b11c8f1f94ba/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a5f32fcb516c1647c7581f21be9b11c8f1f94ba/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=1a5f32fcb516c1647c7581f21be9b11c8f1f94ba", "patch": "@@ -5,7 +5,7 @@ use ra_syntax::{TreeArc, SyntaxNode, SourceFile, AstNode, ast};\n use ra_arena::{Arena, RawId, impl_arena_id};\n \n use crate::{\n-    HirDatabase, Def, Crate,\n+    HirDatabase, Def,\n     Module, Trait, Type, Static, Const,\n };\n \n@@ -284,16 +284,6 @@ impl DefId {\n         let syntax = db.file_item(loc.source_item_id);\n         (loc.source_item_id.file_id, syntax)\n     }\n-\n-    /// For a module, returns that module; for any other def, returns the containing module.\n-    pub fn module(self, db: &impl HirDatabase) -> Module {\n-        self.loc(db).module\n-    }\n-\n-    /// Returns the containing crate.\n-    pub fn krate(&self, db: &impl HirDatabase) -> Option<Crate> {\n-        self.module(db).krate(db)\n-    }\n }\n \n impl DefLoc {"}]}