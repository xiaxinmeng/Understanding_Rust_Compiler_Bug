{"sha": "285496bd550817094c31167e7e49378a35560842", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NTQ5NmJkNTUwODE3MDk0YzMxMTY3ZTdlNDkzNzhhMzU1NjA4NDI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2012-12-10T20:46:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-17T03:27:05Z"}, "message": "priority_queue: make from_vec a static method", "tree": {"sha": "1368d9211ba38431cb37cf7d8b7400c1ded081af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1368d9211ba38431cb37cf7d8b7400c1ded081af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/285496bd550817094c31167e7e49378a35560842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/285496bd550817094c31167e7e49378a35560842", "html_url": "https://github.com/rust-lang/rust/commit/285496bd550817094c31167e7e49378a35560842", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/285496bd550817094c31167e7e49378a35560842/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "757a2afb6b80cb4dbdcb8069f1af511ec42e8670", "url": "https://api.github.com/repos/rust-lang/rust/commits/757a2afb6b80cb4dbdcb8069f1af511ec42e8670", "html_url": "https://github.com/rust-lang/rust/commit/757a2afb6b80cb4dbdcb8069f1af511ec42e8670"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "b92f5f57a5ff858143676d44144b55550e6213df", "filename": "src/libstd/priority_queue.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/285496bd550817094c31167e7e49378a35560842/src%2Flibstd%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/285496bd550817094c31167e7e49378a35560842/src%2Flibstd%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpriority_queue.rs?ref=285496bd550817094c31167e7e49378a35560842", "patch": "@@ -91,6 +91,16 @@ impl <T: Copy Ord> PriorityQueue<T> {\n         q.to_vec()\n     }\n \n+    static pub pure fn from_vec(xs: ~[T]) -> PriorityQueue<T> {\n+        let mut q = PriorityQueue{data: xs,};\n+        let mut n = q.len() / 2;\n+        while n > 0 {\n+            n -= 1;\n+            unsafe { q.siftup(n) }; // purity-checking workaround\n+        }\n+        q\n+    }\n+\n     priv fn siftdown(&mut self, startpos: uint, pos: uint) {\n         let mut pos = pos;\n         let newitem = self.data[pos];\n@@ -133,20 +143,11 @@ impl <T: Copy Ord> PriorityQueue<T> {\n     }\n }\n \n-pub pure fn from_vec<T: Copy Ord>(xs: ~[T]) -> PriorityQueue<T> {\n-    let mut q = PriorityQueue{data: xs,};\n-    let mut n = q.len() / 2;\n-    while n > 0 {\n-        n -= 1;\n-        unsafe { q.siftup(n) }; // purity-checking workaround\n-    }\n-    q\n-}\n-\n #[cfg(test)]\n mod tests {\n     use sort::merge_sort;\n     use core::cmp::le;\n+    use PriorityQueue::from_vec;\n \n     #[test]\n     fn test_top_and_pop() {"}]}