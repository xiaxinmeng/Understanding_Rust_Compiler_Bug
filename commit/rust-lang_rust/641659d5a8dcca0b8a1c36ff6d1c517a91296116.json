{"sha": "641659d5a8dcca0b8a1c36ff6d1c517a91296116", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MTY1OWQ1YThkY2NhMGI4YTFjMzZmZjZkMWM1MTdhOTEyOTYxMTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T08:56:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T08:56:36Z"}, "message": "Smarter extend selection", "tree": {"sha": "8ed23d27c1839d525cd69be56bbba2fb6cf52598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ed23d27c1839d525cd69be56bbba2fb6cf52598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/641659d5a8dcca0b8a1c36ff6d1c517a91296116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/641659d5a8dcca0b8a1c36ff6d1c517a91296116", "html_url": "https://github.com/rust-lang/rust/commit/641659d5a8dcca0b8a1c36ff6d1c517a91296116", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/641659d5a8dcca0b8a1c36ff6d1c517a91296116/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9909875bfe89d2b901c35c0667bed018338b44e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9909875bfe89d2b901c35c0667bed018338b44e1", "html_url": "https://github.com/rust-lang/rust/commit/9909875bfe89d2b901c35c0667bed018338b44e1"}], "stats": {"total": 75, "additions": 53, "deletions": 22}, "files": [{"sha": "32873f4911f8833bef943e41dad0a56271768c5d", "filename": "crates/libeditor/src/extend_selection.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs?ref=641659d5a8dcca0b8a1c36ff6d1c517a91296116", "patch": "@@ -17,18 +17,14 @@ pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange>\n             return Some(leaf.range());\n         }\n         let ws = leaves.next()?;\n-//        let ws_suffix = file.text().slice(\n-//            TextRange::from_to(offset, ws.range().end())\n-//        );\n-//        if ws.text().contains(\"\\n\") && !ws_suffix.contains(\"\\n\") {\n-//            if let Some(line_end) = file.text()\n-//                .slice(TextSuffix::from(ws.range().end()))\n-//                .find(\"\\n\")\n-//            {\n-//                let range = TextRange::from_len(ws.range().end(), line_end);\n-//                return Some(find_covering_node(file.root(), range).range());\n-//            }\n-//        }\n+        let ws_text = ws.leaf_text().unwrap();\n+        let range = TextRange::from_to(offset, ws.range().end()) - ws.range().start();\n+        let ws_suffix = &ws_text.as_str()[range];\n+        if ws_text.contains(\"\\n\") && !ws_suffix.contains(\"\\n\") {\n+            if let Some(node) = ws.next_sibling() {\n+                return Some(node.range());\n+            }\n+        }\n         return Some(ws.range());\n     };\n     let node = find_covering_node(root, range);"}, {"sha": "f8365949ed3a4e1b11f11b717ce25b0b6dd0b05b", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=641659d5a8dcca0b8a1c36ff6d1c517a91296116", "patch": "@@ -12,15 +12,32 @@ use libeditor::{\n \n #[test]\n fn test_extend_selection() {\n-    let file = file(r#\"fn foo() {\n-    1 + 1\n-}\n-\"#);\n-    let range = TextRange::offset_len(18.into(), 0.into());\n-    let range = extend_selection(&file, range).unwrap();\n-    assert_eq!(range, TextRange::from_to(17.into(), 18.into()));\n-    let range = extend_selection(&file, range).unwrap();\n-    assert_eq!(range, TextRange::from_to(15.into(), 20.into()));\n+    fn do_check(before: &str, afters: &[&str]) {\n+        let (cursor, before) = extract_cursor(before);\n+        let file = file(&before);\n+        let mut range = TextRange::offset_len(cursor, 0.into());\n+        for &after in afters {\n+            range = extend_selection(&file, range)\n+                .unwrap();\n+            let actual = &before[range];\n+            assert_eq!(after, actual);\n+        }\n+    }\n+\n+    do_check(\n+        r#\"fn foo() { <|>1 + 1 }\"#,\n+        &[\"1\", \"1 + 1\", \"{ 1 + 1 }\"],\n+    );\n+\n+    do_check(\n+        r#\"\n+impl S {\n+<|>    fn foo() {\n+\n+    }\n+}\"#,\n+        &[\"fn foo() {\\n\\n    }\"]\n+    );\n }\n \n #[test]"}, {"sha": "e8810046a83770dc9453bee480682a081e7312e0", "filename": "crates/libsyntax2/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibsyntax2%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibsyntax2%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2FCargo.toml?ref=641659d5a8dcca0b8a1c36ff6d1c517a91296116", "patch": "@@ -6,7 +6,7 @@ license = \"MIT OR Apache-2.0\"\n \n [dependencies]\n unicode-xid = \"0.1.0\"\n-text_unit = \"0.1.2\"\n+text_unit = \"0.1.3\"\n itertools = \"0.7.8\"\n drop_bomb = \"0.1.4\"\n parking_lot = \"0.6.0\""}, {"sha": "0651da26dc6e0b428bd68b069d527792df4fb426", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/641659d5a8dcca0b8a1c36ff6d1c517a91296116/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=641659d5a8dcca0b8a1c36ff6d1c517a91296116", "patch": "@@ -641,3 +641,21 @@ impl<'a> AstNode<'a> for TypeRef<'a> {\n \n impl<'a> TypeRef<'a> {}\n \n+// Whitespace\n+#[derive(Debug, Clone, Copy)]\n+pub struct Whitespace<'a> {\n+    syntax: SyntaxNodeRef<'a>,\n+}\n+\n+impl<'a> AstNode<'a> for Whitespace<'a> {\n+    fn cast(syntax: SyntaxNodeRef<'a>) -> Option<Self> {\n+        match syntax.kind() {\n+            WHITESPACE => Some(Whitespace { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n+}\n+\n+impl<'a> Whitespace<'a> {}\n+"}]}