{"sha": "561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MWU3YWVhNWJkYWY2YzUxZTBhODdkYTlmZjFkNzNlMmRmNTJiZTE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-12T10:45:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-12T10:45:47Z"}, "message": "Merge #1821\n\n1821: Macro completion tweaks r=matklad a=SomeoneToIgnore\n\nThanks @uHOOCCOOHu for making the macro completion happen :)\r\n\r\nI've added a few tweaks to the current completion to make it a bit more convenient:\r\n\r\n* Automatically add braces and put the editor cursor inside of them:\r\n<img width=\"159\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/64737220-022b9f00-d4f5-11e9-8088-76d4678921ab.png\">\r\n\r\nCurrently I have to add the braces manually which is a bit cumbersome.\r\nOne further improvement can be to detect if macro accepts no parameters and place the cursor differently for this case.\r\n\r\n* Add an exclamation mark to the macro completion label\r\n\r\nThis helps to distinguish macros from other completion items and also allows to show only macros in completion if you type `!`:\r\n<img width=\"722\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/64736987-8b8ea180-d4f4-11e9-8355-2ce4f83b7aa8.png\">\r\n\r\n<img width=\"732\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/64737214-ffc94500-d4f4-11e9-946e-1ba2db1c7fb1.png\">\r\n\r\n\r\nAdditionally, automatic formatting hooks had adjusted two `help.rs` files, I've added them as a last commit to the PR even though they are not really related.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "acb43ce2f904a5e79af45ff0706b9f69a273d210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acb43ce2f904a5e79af45ff0706b9f69a273d210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdeiHbCRBK7hj4Ov3rIwAAdHIIAJnq89XR2RYUaS8dFS+OXA2b\nFvhBdm3jaBwlLuQhjtP3XjK/sdp9iTW/3A2G+GuQF4etRvEE6zc+L+iKa/rYoPDk\nVLwIWROzxHyEGwyFwA5ZBv+Iv52CHVFRP8c1KuGZgFJslqTouTQ0aESgOxdogH3z\nZBZrzpq88bVr1xzadm7NEUuqs7rJwit+/+USAlrtbakhdhg3ydZtj1TosXDrpYkR\nwX5DGdWI6AIUQZIJQ8iDuxBJByPzaIMQAQP1lHs3YRkfVuLLMVTDvM+SDiMdn4UV\nBdhk7TBOlP4OG5Io4vtfuLonMCtkSUwyc1UEuquHhFaGL/GkQ2bff3xjW7GcsdQ=\n=hI1x\n-----END PGP SIGNATURE-----\n", "payload": "tree acb43ce2f904a5e79af45ff0706b9f69a273d210\nparent dfcbdcb9a3a329686eedfc18518c675a6f80f338\nparent 9c2a3da67cee6f941b4ad77bdb2b7552c8afdb7f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568285147 +0000\ncommitter GitHub <noreply@github.com> 1568285147 +0000\n\nMerge #1821\n\n1821: Macro completion tweaks r=matklad a=SomeoneToIgnore\n\nThanks @uHOOCCOOHu for making the macro completion happen :)\r\n\r\nI've added a few tweaks to the current completion to make it a bit more convenient:\r\n\r\n* Automatically add braces and put the editor cursor inside of them:\r\n<img width=\"159\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/64737220-022b9f00-d4f5-11e9-8088-76d4678921ab.png\">\r\n\r\nCurrently I have to add the braces manually which is a bit cumbersome.\r\nOne further improvement can be to detect if macro accepts no parameters and place the cursor differently for this case.\r\n\r\n* Add an exclamation mark to the macro completion label\r\n\r\nThis helps to distinguish macros from other completion items and also allows to show only macros in completion if you type `!`:\r\n<img width=\"722\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/64736987-8b8ea180-d4f4-11e9-8355-2ce4f83b7aa8.png\">\r\n\r\n<img width=\"732\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/64737214-ffc94500-d4f4-11e9-946e-1ba2db1c7fb1.png\">\r\n\r\n\r\nAdditionally, automatic formatting hooks had adjusted two `help.rs` files, I've added them as a last commit to the PR even though they are not really related.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "html_url": "https://github.com/rust-lang/rust/commit/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfcbdcb9a3a329686eedfc18518c675a6f80f338", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcbdcb9a3a329686eedfc18518c675a6f80f338", "html_url": "https://github.com/rust-lang/rust/commit/dfcbdcb9a3a329686eedfc18518c675a6f80f338"}, {"sha": "9c2a3da67cee6f941b4ad77bdb2b7552c8afdb7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c2a3da67cee6f941b4ad77bdb2b7552c8afdb7f", "html_url": "https://github.com/rust-lang/rust/commit/9c2a3da67cee6f941b4ad77bdb2b7552c8afdb7f"}], "stats": {"total": 181, "additions": 109, "deletions": 72}, "files": [{"sha": "6fcef4a729fc1691cf05bf5e2f154d9b1b563a0d", "filename": "crates/ra_ide_api/src/completion/complete_macro_in_item_position.rs", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs?ref=561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "patch": "@@ -37,13 +37,41 @@ mod tests {\n             ),\n             @r##\"[\n     CompletionItem {\n-        label: \"foo\",\n+        label: \"foo!\",\n         source_range: [46; 46),\n         delete: [46; 46),\n-        insert: \"foo!\",\n+        insert: \"foo!($0)\",\n         kind: Macro,\n         detail: \"macro_rules! foo\",\n     },\n+]\"##\n+        );\n+    }\n+\n+    #[test]\n+    fn completes_vec_macros_with_square_brackets() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                \"\n+                //- /main.rs\n+                macro_rules! vec {\n+                    () => {}\n+                }\n+\n+                fn foo() {}\n+\n+                <|>\n+                \"\n+            ),\n+            @r##\"[\n+    CompletionItem {\n+        label: \"vec!\",\n+        source_range: [46; 46),\n+        delete: [46; 46),\n+        insert: \"vec![$0]\",\n+        kind: Macro,\n+        detail: \"macro_rules! vec\",\n+    },\n ]\"##\n         );\n     }"}, {"sha": "457a3d10c7ee0c1aaa12caef4ce4d7f7eb2ae525", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "patch": "@@ -605,10 +605,10 @@ mod tests {\n             ),\n             @r###\"[\n     CompletionItem {\n-        label: \"foo\",\n+        label: \"foo!\",\n         source_range: [179; 179),\n         delete: [179; 179),\n-        insert: \"foo!\",\n+        insert: \"foo!($0)\",\n         kind: Macro,\n         detail: \"#[macro_export]\\nmacro_rules! foo\",\n     },"}, {"sha": "2ea22876f557125ad4b8047b8d62684564efad14", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "patch": "@@ -568,26 +568,26 @@ mod tests {\n             ),\n             @r##\"[\n     CompletionItem {\n-        label: \"bar\",\n+        label: \"bar!\",\n         source_range: [252; 252),\n         delete: [252; 252),\n-        insert: \"bar!\",\n+        insert: \"bar!($0)\",\n         kind: Macro,\n         detail: \"macro_rules! bar\",\n     },\n     CompletionItem {\n-        label: \"baz\",\n+        label: \"baz!\",\n         source_range: [252; 252),\n         delete: [252; 252),\n-        insert: \"baz!\",\n+        insert: \"baz!($0)\",\n         kind: Macro,\n         detail: \"#[macro_export]\\nmacro_rules! baz\",\n     },\n     CompletionItem {\n-        label: \"foo\",\n+        label: \"foo!\",\n         source_range: [252; 252),\n         delete: [252; 252),\n-        insert: \"foo!\",\n+        insert: \"foo!($0)\",\n         kind: Macro,\n         detail: \"macro_rules! foo\",\n     },\n@@ -637,17 +637,17 @@ mod tests {\n         label: \"foo\",\n         source_range: [49; 49),\n         delete: [49; 49),\n-        insert: \"foo!\",\n-        kind: Macro,\n-        detail: \"macro_rules! foo\",\n+        insert: \"foo()$0\",\n+        kind: Function,\n+        detail: \"fn foo()\",\n     },\n     CompletionItem {\n-        label: \"foo\",\n+        label: \"foo!\",\n         source_range: [49; 49),\n         delete: [49; 49),\n-        insert: \"foo()$0\",\n-        kind: Function,\n-        detail: \"fn foo()\",\n+        insert: \"foo!($0)\",\n+        kind: Macro,\n+        detail: \"macro_rules! foo\",\n     },\n ]\"##\n         );\n@@ -670,10 +670,10 @@ mod tests {\n             ),\n             @r##\"[\n     CompletionItem {\n-        label: \"foo\",\n+        label: \"foo!\",\n         source_range: [57; 57),\n         delete: [57; 57),\n-        insert: \"foo!\",\n+        insert: \"foo!($0)\",\n         kind: Macro,\n         detail: \"macro_rules! foo\",\n     },\n@@ -706,10 +706,10 @@ mod tests {\n             ),\n             @r##\"[\n     CompletionItem {\n-        label: \"foo\",\n+        label: \"foo!\",\n         source_range: [50; 50),\n         delete: [50; 50),\n-        insert: \"foo!\",\n+        insert: \"foo!($0)\",\n         kind: Macro,\n         detail: \"macro_rules! foo\",\n     },"}, {"sha": "5cabe9a321eaaaa972f1822761ddabe0159549d8", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "patch": "@@ -109,12 +109,21 @@ impl Completions {\n         if let Some(name) = name {\n             let detail = macro_label(&ast_node);\n \n-            let builder =\n-                CompletionItem::new(CompletionKind::Reference, ctx.source_range(), name.clone())\n-                    .kind(CompletionItemKind::Macro)\n-                    .set_documentation(macro_.docs(ctx.db))\n-                    .detail(detail)\n-                    .insert_snippet(format!(\"{}!\", name));\n+            let macro_braces_to_insert = match name.as_str() {\n+                \"vec\" => \"[$0]\",\n+                _ => \"($0)\",\n+            };\n+            let macro_declaration = name + \"!\";\n+\n+            let builder = CompletionItem::new(\n+                CompletionKind::Reference,\n+                ctx.source_range(),\n+                &macro_declaration,\n+            )\n+            .kind(CompletionItemKind::Macro)\n+            .set_documentation(macro_.docs(ctx.db))\n+            .detail(detail)\n+            .insert_snippet(macro_declaration + macro_braces_to_insert);\n \n             self.add(builder);\n         }"}, {"sha": "9eb4dfbe42276ffc4cfec415575d285af7ed032e", "filename": "crates/ra_tools/src/help.rs", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_tools%2Fsrc%2Fhelp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1/crates%2Fra_tools%2Fsrc%2Fhelp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tools%2Fsrc%2Fhelp.rs?ref=561e7aea5bdaf6c51e0a87da9ff1d73e2df52be1", "patch": "@@ -1,45 +1,45 @@\n-pub const GLOBAL_HELP: &str = \"tasks\r\n-\r\n-USAGE:\r\n-    ra_tools <SUBCOMMAND>\r\n-\r\n-FLAGS:\r\n-    -h, --help       Prints help information\r\n-\r\n-SUBCOMMANDS:\r\n-    format\r\n-    format-hook\r\n-    fuzz-tests\r\n-    gen-syntax\r\n-    gen-tests\r\n-    install-ra\r\n-    lint\";\r\n-\r\n-pub const INSTALL_RA_HELP: &str = \"ra_tools-install-ra\r\n-\r\n-USAGE:\r\n-    ra_tools.exe install-ra [FLAGS]\r\n-\r\n-FLAGS:\r\n-        --client-code\r\n-    -h, --help           Prints help information\r\n-        --jemalloc\r\n-        --server\";\r\n-\r\n-pub fn print_no_param_subcommand_help(subcommand: &str) {\r\n-    eprintln!(\r\n-        \"ra_tools-{}\r\n-\r\n-USAGE:\r\n-    ra_tools {}\r\n-\r\n-FLAGS:\r\n-    -h, --help       Prints help information\",\r\n-        subcommand, subcommand\r\n-    );\r\n-}\r\n-\r\n-pub const INSTALL_RA_CONFLICT: &str =\r\n-    \"error: The argument `--server` cannot be used with `--client-code`\r\n-                    \r\n-For more information try --help\";\r\n+pub const GLOBAL_HELP: &str = \"tasks\n+\n+USAGE:\n+    ra_tools <SUBCOMMAND>\n+\n+FLAGS:\n+    -h, --help       Prints help information\n+\n+SUBCOMMANDS:\n+    format\n+    format-hook\n+    fuzz-tests\n+    gen-syntax\n+    gen-tests\n+    install-ra\n+    lint\";\n+\n+pub const INSTALL_RA_HELP: &str = \"ra_tools-install-ra\n+\n+USAGE:\n+    ra_tools.exe install-ra [FLAGS]\n+\n+FLAGS:\n+        --client-code\n+    -h, --help           Prints help information\n+        --jemalloc\n+        --server\";\n+\n+pub fn print_no_param_subcommand_help(subcommand: &str) {\n+    eprintln!(\n+        \"ra_tools-{}\n+\n+USAGE:\n+    ra_tools {}\n+\n+FLAGS:\n+    -h, --help       Prints help information\",\n+        subcommand, subcommand\n+    );\n+}\n+\n+pub const INSTALL_RA_CONFLICT: &str =\n+    \"error: The argument `--server` cannot be used with `--client-code`\n+                    \n+For more information try --help\";"}]}