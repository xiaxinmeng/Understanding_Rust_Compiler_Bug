{"sha": "5dc01137251f77b2dfbcffb1d9eeae0859b1c935", "node_id": "C_kwDOAAsO6NoAKDVkYzAxMTM3MjUxZjc3YjJkZmJjZmZiMWQ5ZWVhZTA4NTliMWM5MzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-12T19:44:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-12T19:44:53Z"}, "message": "Rollup merge of #109052 - GuillaumeGomez:rustdoc-gui-tester-eslint, r=notriddle\n\nAdd eslint check for rustdoc-gui tester\n\nr? `@notriddle`", "tree": {"sha": "06ab83730c513266b31792c8aae3d8cceb41e2e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06ab83730c513266b31792c8aae3d8cceb41e2e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dc01137251f77b2dfbcffb1d9eeae0859b1c935", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkDiu1CRBK7hj4Ov3rIwAAuBUIAI/udVk2RkHZwhBbCXp4tucM\nqh6G+Ftd0LIYk+NBLJ1nLdkHAf4DK3KwYpM59w38GEeOtFO/jihKfulX8kNqMAlE\n4nkqW2xwHxIsksIX2RTibUVof6bomN+rSD7hbP1I+5xqNRH+u3uP7/enW+/OMSrm\nHf0baC2T5s9gMZWjwGoLk9wJB1wrlycq34xOTtxpRkw9VjnXDMuScNT9ywQZXpsQ\ns3wYOEiwJekPFos7ICxylkTZh1TCp/8MB+Zra2TVF52WU+ELjr/ojxfE6sLsXkVg\nibDgRW05oTf5WSiuKeme8BtfPCk+hktQ65h9sD0uLrzhgm8GtSaV4yaZb7CcNHI=\n=x3bB\n-----END PGP SIGNATURE-----\n", "payload": "tree 06ab83730c513266b31792c8aae3d8cceb41e2e1\nparent fb4bb1679a83ca9367be9b7868c9a7794b87d64a\nparent cd9759ab9269509699a5b1aa6296a3c5e74b8ee4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678650293 +0100\ncommitter GitHub <noreply@github.com> 1678650293 +0100\n\nRollup merge of #109052 - GuillaumeGomez:rustdoc-gui-tester-eslint, r=notriddle\n\nAdd eslint check for rustdoc-gui tester\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc01137251f77b2dfbcffb1d9eeae0859b1c935", "html_url": "https://github.com/rust-lang/rust/commit/5dc01137251f77b2dfbcffb1d9eeae0859b1c935", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dc01137251f77b2dfbcffb1d9eeae0859b1c935/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb4bb1679a83ca9367be9b7868c9a7794b87d64a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4bb1679a83ca9367be9b7868c9a7794b87d64a", "html_url": "https://github.com/rust-lang/rust/commit/fb4bb1679a83ca9367be9b7868c9a7794b87d64a"}, {"sha": "cd9759ab9269509699a5b1aa6296a3c5e74b8ee4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9759ab9269509699a5b1aa6296a3c5e74b8ee4", "html_url": "https://github.com/rust-lang/rust/commit/cd9759ab9269509699a5b1aa6296a3c5e74b8ee4"}], "stats": {"total": 115, "additions": 106, "deletions": 9}, "files": [{"sha": "515890aef8df8677a3135d31fe002794e01ca7e7", "filename": "src/ci/docker/host-x86_64/mingw-check/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5dc01137251f77b2dfbcffb1d9eeae0859b1c935/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/5dc01137251f77b2dfbcffb1d9eeae0859b1c935/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile?ref=5dc01137251f77b2dfbcffb1d9eeae0859b1c935", "patch": "@@ -53,4 +53,5 @@ ENV SCRIPT python3 ../x.py --stage 2 test src/tools/expand-yaml-anchors && \\\n            # Runs checks to ensure that there are no ES5 issues in our JS code.\n            es-check es6 ../src/librustdoc/html/static/js/*.js && \\\n            eslint -c ../src/librustdoc/html/static/.eslintrc.js ../src/librustdoc/html/static/js/*.js && \\\n-           eslint -c ../src/tools/rustdoc-js/.eslintrc.js ../src/tools/rustdoc-js/tester.js\n+           eslint -c ../src/tools/rustdoc-js/.eslintrc.js ../src/tools/rustdoc-js/tester.js && \\\n+           eslint -c ../src/tools/rustdoc-gui/.eslintrc.js ../src/tools/rustdoc-gui/tester.js"}, {"sha": "f4aadc071998b21d7a8f20b612a85797935db7ff", "filename": "src/tools/rustdoc-gui/.eslintrc.js", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/5dc01137251f77b2dfbcffb1d9eeae0859b1c935/src%2Ftools%2Frustdoc-gui%2F.eslintrc.js", "raw_url": "https://github.com/rust-lang/rust/raw/5dc01137251f77b2dfbcffb1d9eeae0859b1c935/src%2Ftools%2Frustdoc-gui%2F.eslintrc.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2F.eslintrc.js?ref=5dc01137251f77b2dfbcffb1d9eeae0859b1c935", "patch": "@@ -0,0 +1,96 @@\n+module.exports = {\n+    \"env\": {\n+        \"browser\": true,\n+        \"node\": true,\n+        \"es6\": true\n+    },\n+    \"extends\": \"eslint:recommended\",\n+    \"parserOptions\": {\n+        \"ecmaVersion\": 2018,\n+        \"sourceType\": \"module\"\n+    },\n+    \"rules\": {\n+        \"linebreak-style\": [\n+            \"error\",\n+            \"unix\"\n+        ],\n+        \"semi\": [\n+            \"error\",\n+            \"always\"\n+        ],\n+        \"quotes\": [\n+            \"error\",\n+            \"double\"\n+        ],\n+        \"linebreak-style\": [\n+            \"error\",\n+            \"unix\"\n+        ],\n+        \"no-trailing-spaces\": \"error\",\n+        \"no-var\": [\"error\"],\n+        \"prefer-const\": [\"error\"],\n+        \"prefer-arrow-callback\": [\"error\"],\n+        \"brace-style\": [\n+            \"error\",\n+            \"1tbs\",\n+            { \"allowSingleLine\": false }\n+        ],\n+        \"keyword-spacing\": [\n+            \"error\",\n+            { \"before\": true, \"after\": true }\n+        ],\n+        \"arrow-spacing\": [\n+            \"error\",\n+            { \"before\": true, \"after\": true }\n+        ],\n+        \"key-spacing\": [\n+            \"error\",\n+            { \"beforeColon\": false, \"afterColon\": true, \"mode\": \"strict\" }\n+        ],\n+        \"func-call-spacing\": [\"error\", \"never\"],\n+        \"space-infix-ops\": \"error\",\n+        \"space-before-function-paren\": [\"error\", \"never\"],\n+        \"space-before-blocks\": \"error\",\n+        \"comma-dangle\": [\"error\", \"always-multiline\"],\n+        \"comma-style\": [\"error\", \"last\"],\n+        \"max-len\": [\"error\", { \"code\": 100, \"tabWidth\": 4 }],\n+        \"eol-last\": [\"error\", \"always\"],\n+        \"arrow-parens\": [\"error\", \"as-needed\"],\n+        \"no-unused-vars\": [\n+            \"error\",\n+            {\n+                \"argsIgnorePattern\": \"^_\",\n+                \"varsIgnorePattern\": \"^_\"\n+            }\n+        ],\n+        \"eqeqeq\": \"error\",\n+        \"no-const-assign\": \"error\",\n+        \"no-debugger\": \"error\",\n+        \"no-dupe-args\": \"error\",\n+        \"no-dupe-else-if\": \"error\",\n+        \"no-dupe-keys\": \"error\",\n+        \"no-duplicate-case\": \"error\",\n+        \"no-ex-assign\": \"error\",\n+        \"no-fallthrough\": \"error\",\n+        \"no-invalid-regexp\": \"error\",\n+        \"no-import-assign\": \"error\",\n+        \"no-self-compare\": \"error\",\n+        \"no-template-curly-in-string\": \"error\",\n+        \"block-scoped-var\": \"error\",\n+        \"guard-for-in\": \"error\",\n+        \"no-alert\": \"error\",\n+        \"no-confusing-arrow\": \"error\",\n+        \"no-div-regex\": \"error\",\n+        \"no-floating-decimal\": \"error\",\n+        \"no-implicit-globals\": \"error\",\n+        \"no-implied-eval\": \"error\",\n+        \"no-label-var\": \"error\",\n+        \"no-lonely-if\": \"error\",\n+        \"no-mixed-operators\": \"error\",\n+        \"no-multi-assign\": \"error\",\n+        \"no-return-assign\": \"error\",\n+        \"no-script-url\": \"error\",\n+        \"no-sequences\": \"error\",\n+        \"no-div-regex\": \"error\",\n+    }\n+};"}, {"sha": "72baad606f01e99aff983a4f932cb6522b143b5b", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5dc01137251f77b2dfbcffb1d9eeae0859b1c935/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/5dc01137251f77b2dfbcffb1d9eeae0859b1c935/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=5dc01137251f77b2dfbcffb1d9eeae0859b1c935", "patch": "@@ -6,8 +6,8 @@\n \n const fs = require(\"fs\");\n const path = require(\"path\");\n-const os = require('os');\n-const {Options, runTest} = require('browser-ui-test');\n+const os = require(\"os\");\n+const {Options, runTest} = require(\"browser-ui-test\");\n \n // If a test fails or errors, we will retry it two more times in case it was a flaky failure.\n const NB_RETRY = 3;\n@@ -200,7 +200,7 @@ async function main(argv) {\n     const framework_options = new Options();\n     try {\n         // This is more convenient that setting fields one by one.\n-        let args = [\n+        const args = [\n             \"--variable\", \"DOC_PATH\", opts[\"doc_folder\"], \"--enable-fail-on-js-error\",\n             \"--allow-file-access-from-files\",\n         ];\n@@ -234,7 +234,7 @@ async function main(argv) {\n     } else {\n         files = opts[\"files\"];\n     }\n-    files = files.filter(file => path.extname(file) == \".goml\");\n+    files = files.filter(file => path.extname(file) === \".goml\");\n     if (files.length === 0) {\n         console.error(\"rustdoc-gui: No test selected\");\n         process.exit(2);\n@@ -259,7 +259,7 @@ async function main(argv) {\n \n     // We catch this \"event\" to display a nicer message in case of unexpected exit (because of a\n     // missing `--no-sandbox`).\n-    const exitHandling = (code) => {\n+    const exitHandling = () => {\n         if (!opts[\"no_sandbox\"]) {\n             console.log(\"\");\n             console.log(\n@@ -268,10 +268,10 @@ async function main(argv) {\n             console.log(\"\");\n         }\n     };\n-    process.on('exit', exitHandling);\n+    process.on(\"exit\", exitHandling);\n \n     const originalFilesLen = files.length;\n-    let results = createEmptyResults();\n+    const results = createEmptyResults();\n     const status_bar = char_printer(files.length);\n \n     let new_results;\n@@ -281,7 +281,7 @@ async function main(argv) {\n         Array.prototype.push.apply(results.successful, new_results.successful);\n         // We generate the new list of files with the previously failing tests.\n         files = Array.prototype.concat(new_results.failed, new_results.errored).map(\n-            f => f['file_name']);\n+            f => f[\"file_name\"]);\n         if (files.length > originalFilesLen / 2) {\n             // If we have too many failing tests, it's very likely not flaky failures anymore so\n             // no need to retry."}]}