{"sha": "e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZTNkODVlYzM2N2QyZDZjNmIyOGVjNzY0YzRhYjAwMjQ1OGM0NmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-09-10T15:23:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-10T15:23:22Z"}, "message": "Rollup merge of #88720 - GuillaumeGomez:rustdoc-coverage-fields-count, r=Manishearth\n\nRustdoc coverage fields count\n\nFollow-up of #88688.\n\nInstead of requiring enum tuple variant fields and tuple struct fields to be documented, we count them if they are documented, otherwise we don't include them in the count.\n\nr? `@Manishearth`", "tree": {"sha": "fc94b0eae72428faf5b8383ab5dc1eea65c85ce9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc94b0eae72428faf5b8383ab5dc1eea65c85ce9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhO3hqCRBK7hj4Ov3rIwAA0gwIAK6kr/oqoxLyKS8JelfCkR2B\ntDCDIj21NX8+RjX4704piZaRMmJf3xH5obiOM8cOSwxr3N/C5qX2V8K5Ebbp2CH+\ntyXkAXXz1xEAmnAzj8LuP20d5Hf26DB+hkqxCcktX+d7GxuudW/ZuSqBXx1qERIx\n0E0mYH/a+JPc00v7A93e9JM67scvsnulShFXRoxByKf3TNg8DnIueI9wr0F+gRFE\nCKrRwxuBe6jwnZETKt3rMwvRHgglnKjBg7mYvOblM7vmqBh2KhRf/EYIiPI6pF6g\ncrWH9f19FYpPMtRkNbop1d+ltA01/52x/2f8KTW55uaei88MNxMVD+eiZqDuK6U=\n=I/CU\n-----END PGP SIGNATURE-----\n", "payload": "tree fc94b0eae72428faf5b8383ab5dc1eea65c85ce9\nparent 8368af060d2b4b9d6f1a3a167bb514116bb76bc7\nparent eda4cfb13268e6344139dcbf57ef36962d9dc12d\nauthor Manish Goregaokar <manishsmail@gmail.com> 1631287402 -0700\ncommitter GitHub <noreply@github.com> 1631287402 -0700\n\nRollup merge of #88720 - GuillaumeGomez:rustdoc-coverage-fields-count, r=Manishearth\n\nRustdoc coverage fields count\n\nFollow-up of #88688.\n\nInstead of requiring enum tuple variant fields and tuple struct fields to be documented, we count them if they are documented, otherwise we don't include them in the count.\n\nr? `@Manishearth`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "html_url": "https://github.com/rust-lang/rust/commit/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8368af060d2b4b9d6f1a3a167bb514116bb76bc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8368af060d2b4b9d6f1a3a167bb514116bb76bc7", "html_url": "https://github.com/rust-lang/rust/commit/8368af060d2b4b9d6f1a3a167bb514116bb76bc7"}, {"sha": "eda4cfb13268e6344139dcbf57ef36962d9dc12d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eda4cfb13268e6344139dcbf57ef36962d9dc12d", "html_url": "https://github.com/rust-lang/rust/commit/eda4cfb13268e6344139dcbf57ef36962d9dc12d"}], "stats": {"total": 113, "additions": 108, "deletions": 5}, "files": [{"sha": "721af3313d27f6d33d76888b36d25f9fbcc62818", "filename": "src/librustdoc/passes/calculate_doc_coverage.rs", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs?ref=e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "patch": "@@ -4,8 +4,10 @@ use crate::fold::{self, DocFolder};\n use crate::html::markdown::{find_testable_code, ErrorCodes};\n use crate::passes::doc_test_lints::{should_have_doc_example, Tests};\n use crate::passes::Pass;\n+use rustc_hir as hir;\n use rustc_lint::builtin::MISSING_DOCS;\n use rustc_middle::lint::LintLevelSource;\n+use rustc_middle::ty::DefIdTree;\n use rustc_session::lint;\n use rustc_span::FileName;\n use serde::Serialize;\n@@ -221,10 +223,42 @@ impl<'a, 'b> fold::DocFolder for CoverageCalculator<'a, 'b> {\n                     .hir()\n                     .local_def_id_to_hir_id(i.def_id.expect_def_id().expect_local());\n                 let (level, source) = self.ctx.tcx.lint_level_at_node(MISSING_DOCS, hir_id);\n+\n+                // In case we have:\n+                //\n+                // ```\n+                // enum Foo { Bar(u32) }\n+                // // or:\n+                // struct Bar(u32);\n+                // ```\n+                //\n+                // there is no need to require documentation on the fields of tuple variants and\n+                // tuple structs.\n+                let should_be_ignored = i\n+                    .def_id\n+                    .as_def_id()\n+                    .and_then(|def_id| self.ctx.tcx.parent(def_id))\n+                    .and_then(|def_id| self.ctx.tcx.hir().get_if_local(def_id))\n+                    .map(|node| {\n+                        matches!(\n+                            node,\n+                            hir::Node::Variant(hir::Variant {\n+                                data: hir::VariantData::Tuple(_, _),\n+                                ..\n+                            }) | hir::Node::Item(hir::Item {\n+                                kind: hir::ItemKind::Struct(hir::VariantData::Tuple(_, _), _),\n+                                ..\n+                            })\n+                        )\n+                    })\n+                    .unwrap_or(false);\n+\n                 // `missing_docs` is allow-by-default, so don't treat this as ignoring the item\n-                // unless the user had an explicit `allow`\n-                let should_have_docs =\n-                    level != lint::Level::Allow || matches!(source, LintLevelSource::Default);\n+                // unless the user had an explicit `allow`.\n+                //\n+                let should_have_docs = !should_be_ignored\n+                    && (level != lint::Level::Allow || matches!(source, LintLevelSource::Default));\n+\n                 debug!(\"counting {:?} {:?} in {:?}\", i.type_(), i.name, filename);\n                 self.items.entry(filename).or_default().count_item(\n                     has_docs,"}, {"sha": "e9c165b1916e2452d95f9138a51bfc11e6bbf692", "filename": "src/test/rustdoc-ui/coverage/enum-tuple-documented.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple-documented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple-documented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple-documented.rs?ref=e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "patch": "@@ -0,0 +1,37 @@\n+// compile-flags:-Z unstable-options --show-coverage\n+// check-pass\n+\n+// The point of this test is to ensure that the number of \"documented\" items\n+// is higher than in `enum-tuple.rs`.\n+\n+//! (remember the crate root is still a module)\n+\n+/// so check out this enum here\n+pub enum ThisEnum {\n+    /// VarOne.\n+    VarOne(\n+        /// hello!\n+        String,\n+    ),\n+    /// Var Two.\n+    VarTwo(\n+        /// Hello\n+        String,\n+        /// Bis repetita.\n+        String,\n+    ),\n+}\n+\n+/// Struct.\n+pub struct ThisStruct(\n+    /// hello\n+    u32,\n+);\n+\n+/// Struct.\n+pub struct ThisStruct2(\n+    /// hello\n+    u32,\n+    /// Bis repetita.\n+    u8,\n+);"}, {"sha": "82c98f43f3dd08191bc4f833f013ee0d65d32396", "filename": "src/test/rustdoc-ui/coverage/enum-tuple-documented.stdout", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple-documented.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple-documented.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple-documented.stdout?ref=e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "patch": "@@ -0,0 +1,7 @@\n++-------------------------------------+------------+------------+------------+------------+\n+| File                                | Documented | Percentage |   Examples | Percentage |\n++-------------------------------------+------------+------------+------------+------------+\n+| ...overage/enum-tuple-documented.rs |          9 |     100.0% |          0 |       0.0% |\n++-------------------------------------+------------+------------+------------+------------+\n+| Total                               |          9 |     100.0% |          0 |       0.0% |\n++-------------------------------------+------------+------------+------------+------------+"}, {"sha": "5fb205450755b23a579983f88cfdc41be0f77461", "filename": "src/test/rustdoc-ui/coverage/enum-tuple.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple.rs?ref=e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags:-Z unstable-options --show-coverage\n+// check-pass\n+\n+//! (remember the crate root is still a module)\n+\n+/// so check out this enum here\n+pub enum ThisEnum {\n+    /// No need to document the field if there is only one in a tuple variant!\n+    VarOne(String),\n+    /// But if there is more than one... still fine!\n+    VarTwo(String, String),\n+}\n+\n+/// Struct.\n+pub struct ThisStruct(u32);\n+\n+/// Struct.\n+pub struct ThisStruct2(u32, u8);"}, {"sha": "a3377d59c073a2fb8d30b3411d0a834663b7b99f", "filename": "src/test/rustdoc-ui/coverage/enum-tuple.stdout", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenum-tuple.stdout?ref=e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "patch": "@@ -0,0 +1,7 @@\n++-------------------------------------+------------+------------+------------+------------+\n+| File                                | Documented | Percentage |   Examples | Percentage |\n++-------------------------------------+------------+------------+------------+------------+\n+| ...ustdoc-ui/coverage/enum-tuple.rs |          6 |     100.0% |          0 |       0.0% |\n++-------------------------------------+------------+------------+------------+------------+\n+| Total                               |          6 |     100.0% |          0 |       0.0% |\n++-------------------------------------+------------+------------+------------+------------+"}, {"sha": "64c012c1f66e3dfea1eea7a743511b78a08e0f5f", "filename": "src/test/rustdoc-ui/coverage/enums.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenums.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e0e3d85ec367d2d6c6b28ec764c4ab002458c46d/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenums.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fenums.stdout?ref=e0e3d85ec367d2d6c6b28ec764c4ab002458c46d", "patch": "@@ -1,7 +1,7 @@\n +-------------------------------------+------------+------------+------------+------------+\n | File                                | Documented | Percentage |   Examples | Percentage |\n +-------------------------------------+------------+------------+------------+------------+\n-| ...est/rustdoc-ui/coverage/enums.rs |          6 |      66.7% |          0 |       0.0% |\n+| ...est/rustdoc-ui/coverage/enums.rs |          6 |      75.0% |          0 |       0.0% |\n +-------------------------------------+------------+------------+------------+------------+\n-| Total                               |          6 |      66.7% |          0 |       0.0% |\n+| Total                               |          6 |      75.0% |          0 |       0.0% |\n +-------------------------------------+------------+------------+------------+------------+"}]}