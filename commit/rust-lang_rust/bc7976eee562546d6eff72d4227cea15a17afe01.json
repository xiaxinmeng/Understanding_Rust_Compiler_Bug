{"sha": "bc7976eee562546d6eff72d4227cea15a17afe01", "node_id": "C_kwDOAAsO6NoAKGJjNzk3NmVlZTU2MjU0NmQ2ZWZmNzJkNDIyN2NlYTE1YTE3YWZlMDE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-30T19:42:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-30T19:42:18Z"}, "message": "Rollup merge of #109522 - bzEq:aix-current-dll-path, r=Nilstrieb\n\nImplement current_dll_path for AIX\n\nAIX doesn't feature `dladdr`, use `loadquery` instead.\n\n`loadquery` is documented in https://www.ibm.com/docs/en/aix/7.2?topic=l-loadquery-subroutine.", "tree": {"sha": "7bebffc0a9b5ae7c4d4e96bc330c5dcfef27df39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bebffc0a9b5ae7c4d4e96bc330c5dcfef27df39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc7976eee562546d6eff72d4227cea15a17afe01", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkJeYaCRBK7hj4Ov3rIwAAirgIAHsqbz8EDaoVpquBjxy45CPO\nayeb3sA/aCWu9qj6wLA4Iec29UnHAXXPNsGnOdKHW3WreLwKT6DVG/EsECOjhIB2\nMS4PWLaqNn4GiSXAmHiQI6OKiv9obFX1y4UEzFV0zPGjR1VHmHfUzxXtsQ6Qm8fc\nZt0ZUiMGR/lvPY4xHhUPMNNgpHmfuYTmUDwJkvC0UZ2M4BR46QwIX+Pejmg4IRwO\nNjO/pdzrDmmRNj9gWEg8ZOUtoxkqSh56xEqrKA3iOQrjBmMHh/RbyheZ9PaCzNmO\nYGXCdwSOSE5JWQBdeu4a0R8ewp2qPSWg5/hLFtzzNP8KHAeyZ7D8Shn6XKjehqM=\n=t2Zz\n-----END PGP SIGNATURE-----\n", "payload": "tree 7bebffc0a9b5ae7c4d4e96bc330c5dcfef27df39\nparent 987628e82b497efef5e0ff9d1865f16d282c54e9\nparent 49f63eb021e03b5bdd09645d5e0e68bbeae781ee\nauthor Michael Goulet <michael@errs.io> 1680205338 -0700\ncommitter GitHub <noreply@github.com> 1680205338 -0700\n\nRollup merge of #109522 - bzEq:aix-current-dll-path, r=Nilstrieb\n\nImplement current_dll_path for AIX\n\nAIX doesn't feature `dladdr`, use `loadquery` instead.\n\n`loadquery` is documented in https://www.ibm.com/docs/en/aix/7.2?topic=l-loadquery-subroutine.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7976eee562546d6eff72d4227cea15a17afe01", "html_url": "https://github.com/rust-lang/rust/commit/bc7976eee562546d6eff72d4227cea15a17afe01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc7976eee562546d6eff72d4227cea15a17afe01/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "987628e82b497efef5e0ff9d1865f16d282c54e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/987628e82b497efef5e0ff9d1865f16d282c54e9", "html_url": "https://github.com/rust-lang/rust/commit/987628e82b497efef5e0ff9d1865f16d282c54e9"}, {"sha": "49f63eb021e03b5bdd09645d5e0e68bbeae781ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/49f63eb021e03b5bdd09645d5e0e68bbeae781ee", "html_url": "https://github.com/rust-lang/rust/commit/49f63eb021e03b5bdd09645d5e0e68bbeae781ee"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "40879db49def9bba2c57990253a3816ab064507f", "filename": "compiler/rustc_session/src/filesearch.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/bc7976eee562546d6eff72d4227cea15a17afe01/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7976eee562546d6eff72d4227cea15a17afe01/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs?ref=bc7976eee562546d6eff72d4227cea15a17afe01", "patch": "@@ -68,6 +68,7 @@ fn current_dll_path() -> Result<PathBuf, String> {\n     use std::ffi::{CStr, OsStr};\n     use std::os::unix::prelude::*;\n \n+    #[cfg(not(target_os = \"aix\"))]\n     unsafe {\n         let addr = current_dll_path as usize as *mut _;\n         let mut info = std::mem::zeroed();\n@@ -81,6 +82,49 @@ fn current_dll_path() -> Result<PathBuf, String> {\n         let os = OsStr::from_bytes(bytes);\n         Ok(PathBuf::from(os))\n     }\n+\n+    #[cfg(target_os = \"aix\")]\n+    unsafe {\n+        // On AIX, the symbol `current_dll_path` references a function descriptor.\n+        // A function descriptor is consisted of (See https://reviews.llvm.org/D62532)\n+        // * The address of the entry point of the function.\n+        // * The TOC base address for the function.\n+        // * The environment pointer.\n+        // The function descriptor is in the data section.\n+        let addr = current_dll_path as u64;\n+        let mut buffer = vec![std::mem::zeroed::<libc::ld_info>(); 64];\n+        loop {\n+            if libc::loadquery(\n+                libc::L_GETINFO,\n+                buffer.as_mut_ptr() as *mut i8,\n+                (std::mem::size_of::<libc::ld_info>() * buffer.len()) as u32,\n+            ) >= 0\n+            {\n+                break;\n+            } else {\n+                if std::io::Error::last_os_error().raw_os_error().unwrap() != libc::ENOMEM {\n+                    return Err(\"loadquery failed\".into());\n+                }\n+                buffer.resize(buffer.len() * 2, std::mem::zeroed::<libc::ld_info>());\n+            }\n+        }\n+        let mut current = buffer.as_mut_ptr() as *mut libc::ld_info;\n+        loop {\n+            let data_base = (*current).ldinfo_dataorg as u64;\n+            let data_end = data_base + (*current).ldinfo_datasize;\n+            if (data_base..data_end).contains(&addr) {\n+                let bytes = CStr::from_ptr(&(*current).ldinfo_filename[0]).to_bytes();\n+                let os = OsStr::from_bytes(bytes);\n+                return Ok(PathBuf::from(os));\n+            }\n+            if (*current).ldinfo_next == 0 {\n+                break;\n+            }\n+            current =\n+                (current as *mut i8).offset((*current).ldinfo_next as isize) as *mut libc::ld_info;\n+        }\n+        return Err(format!(\"current dll's address {} is not in the load map\", addr));\n+    }\n }\n \n #[cfg(windows)]"}]}