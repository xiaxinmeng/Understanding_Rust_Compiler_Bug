{"sha": "03984561d43130cb8d51025604ac882470d47e3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzOTg0NTYxZDQzMTMwY2I4ZDUxMDI1NjA0YWM4ODI0NzBkNDdlM2M=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-01T16:50:08Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-01T16:50:08Z"}, "message": "Make sure resource item types get written by typechecker\n\nCloses #1916", "tree": {"sha": "d2a79f6c4e0bdd8b115935c2c32f29647cdf7aaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a79f6c4e0bdd8b115935c2c32f29647cdf7aaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03984561d43130cb8d51025604ac882470d47e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03984561d43130cb8d51025604ac882470d47e3c", "html_url": "https://github.com/rust-lang/rust/commit/03984561d43130cb8d51025604ac882470d47e3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03984561d43130cb8d51025604ac882470d47e3c/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "072b0155151329b323540d521bffe3eb49873799", "url": "https://api.github.com/repos/rust-lang/rust/commits/072b0155151329b323540d521bffe3eb49873799", "html_url": "https://github.com/rust-lang/rust/commit/072b0155151329b323540d521bffe3eb49873799"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "40cd1d37a8d40ba82a6968e1c2d4ff090c62e355", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/03984561d43130cb8d51025604ac882470d47e3c/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03984561d43130cb8d51025604ac882470d47e3c/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=03984561d43130cb8d51025604ac882470d47e3c", "patch": "@@ -420,11 +420,11 @@ fn ast_ty_to_ty(tcx: ty::ctxt, mode: mode, &&ast_ty: @ast::ty) -> ty::t {\n \n fn ty_of_item(tcx: ty::ctxt, mode: mode, it: @ast::item)\n     -> ty::ty_param_bounds_and_ty {\n-    alt tcx.tcache.find(local_def(it.id)) {\n+    let def_id = local_def(it.id);\n+    alt tcx.tcache.find(def_id) {\n       some(tpt) { ret tpt; }\n       _ {}\n     }\n-    let def_id = {crate: ast::local_crate, node: it.id};\n     alt it.node {\n       ast::item_const(t, _) {\n         let typ = ast_ty_to_ty(tcx, mode, t);\n@@ -917,9 +917,10 @@ mod collect {\n           }\n           ast::item_res(decl, tps, _, dtor_id, ctor_id) {\n             let {bounds, params} = mk_ty_params(tcx, tps);\n+            let def_id = local_def(it.id);\n             let t_arg = ty_of_arg(tcx, m_collect, decl.inputs[0]);\n-            let t_res = ty::mk_res(tcx, local_def(it.id), t_arg.ty,\n-                                   params);\n+            let t_res = ty::mk_res(tcx, def_id, t_arg.ty, params);\n+            let t_res = ty::mk_with_id(tcx, t_res, def_id);\n             let t_ctor = ty::mk_fn(tcx, {\n                 proto: ast::proto_box,\n                 inputs: [{mode: ast::expl(ast::by_copy) with t_arg}],\n@@ -934,7 +935,8 @@ mod collect {\n             write_ty(tcx, it.id, t_res);\n             write_ty(tcx, ctor_id, t_ctor);\n             tcx.tcache.insert(local_def(ctor_id),\n-                                 {bounds: bounds, ty: t_ctor});\n+                              {bounds: bounds, ty: t_ctor});\n+            tcx.tcache.insert(def_id, {bounds: bounds, ty: t_res});\n             write_ty(tcx, dtor_id, t_dtor);\n           }\n           ast::item_iface(_, ms) {"}]}