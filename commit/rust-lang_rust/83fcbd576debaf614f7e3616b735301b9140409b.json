{"sha": "83fcbd576debaf614f7e3616b735301b9140409b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZmNiZDU3NmRlYmFmNjE0ZjdlMzYxNmI3MzUzMDFiOTE0MDQwOWI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-18T14:46:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-18T14:46:34Z"}, "message": "Rollup merge of #79133 - pietroalbini:simplify-stage0, r=Mark-Simulacrum\n\nbootstrap: use the same version number for rustc and cargo\n\nHistorically the stable tarballs were named after the version number ofthe specific tool, instead of the version number of Rust. For example, both of the following tarballs were part of the same release:\n\n    rustc-1.48.0-x86_64-unknown-linux-gnu.tar.xz\n    cargo-0.49.0-x86_64-unknown-linux-gnu.tar.xz\n\nPR #77336 changed the dist code to instead use Rust's version number for all the tarballs, regardless of the tool they contain:\n\n    rustc-1.48.0-x86_64-unknown-linux-gnu.tar.xz\n    cargo-1.48.0-x86_64-unknown-linux-gnu.tar.xz\n\nBecause of that there is no need anymore to have a separate `cargo` field in `src/stage0.txt`, as the Cargo version will always be the same as the rustc version. This PR removes the field, simplifying the code and the maintenance work required while producing releases.\n\nr? ``@Mark-Simulacrum``", "tree": {"sha": "c1a4ae862935f1474d36f084be63c0c647e54718", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1a4ae862935f1474d36f084be63c0c647e54718"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83fcbd576debaf614f7e3616b735301b9140409b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJftTPKCRBK7hj4Ov3rIwAAdHIIAJ8wj319OMCtj4pfILM+oj0+\nLfeAvviPKBtA2hELkERgmhvstnKioKa70YDZgRIBu6v+Kq6cuDfHNHuf+fWbAQeS\nMP+12hIsXIHcYxJIZd7no75WYu6voJmDoB80e6mnBdV4oNRFU6xZt01qOU0xBx3E\nZeo54kISdlqMeWIDmS9roKmu1ARBTUAaqSHTnFUskoWHrSvOy/xq8XpKw5jjRM8t\nWAqrH4gi4tIt6zqSaHl5RnQ9FxaVt+QV/wcLnJJuxpj12IXK+azx58TyMUlkhVCq\nDVqwsGJKKUT/1v3TBlvu4KSI6XD3ZU3Cv7jeBu9Kk8SNwSjkoCwSncjGEMzT8HY=\n=rJpE\n-----END PGP SIGNATURE-----\n", "payload": "tree c1a4ae862935f1474d36f084be63c0c647e54718\nparent e2addb4329e5f175b18cb3b917a738bb76f6c3d4\nparent d17874ff601c53ac35f71e55f5629a5b8232d678\nauthor Mara Bos <m-ou.se@m-ou.se> 1605710794 +0100\ncommitter GitHub <noreply@github.com> 1605710794 +0100\n\nRollup merge of #79133 - pietroalbini:simplify-stage0, r=Mark-Simulacrum\n\nbootstrap: use the same version number for rustc and cargo\n\nHistorically the stable tarballs were named after the version number ofthe specific tool, instead of the version number of Rust. For example, both of the following tarballs were part of the same release:\n\n    rustc-1.48.0-x86_64-unknown-linux-gnu.tar.xz\n    cargo-0.49.0-x86_64-unknown-linux-gnu.tar.xz\n\nPR #77336 changed the dist code to instead use Rust's version number for all the tarballs, regardless of the tool they contain:\n\n    rustc-1.48.0-x86_64-unknown-linux-gnu.tar.xz\n    cargo-1.48.0-x86_64-unknown-linux-gnu.tar.xz\n\nBecause of that there is no need anymore to have a separate `cargo` field in `src/stage0.txt`, as the Cargo version will always be the same as the rustc version. This PR removes the field, simplifying the code and the maintenance work required while producing releases.\n\nr? ``@Mark-Simulacrum``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83fcbd576debaf614f7e3616b735301b9140409b", "html_url": "https://github.com/rust-lang/rust/commit/83fcbd576debaf614f7e3616b735301b9140409b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83fcbd576debaf614f7e3616b735301b9140409b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2addb4329e5f175b18cb3b917a738bb76f6c3d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2addb4329e5f175b18cb3b917a738bb76f6c3d4", "html_url": "https://github.com/rust-lang/rust/commit/e2addb4329e5f175b18cb3b917a738bb76f6c3d4"}, {"sha": "d17874ff601c53ac35f71e55f5629a5b8232d678", "url": "https://api.github.com/repos/rust-lang/rust/commits/d17874ff601c53ac35f71e55f5629a5b8232d678", "html_url": "https://github.com/rust-lang/rust/commit/d17874ff601c53ac35f71e55f5629a5b8232d678"}], "stats": {"total": 40, "additions": 9, "deletions": 31}, "files": [{"sha": "4fb58034ce2166ceb061f83a25365213eb1538db", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/83fcbd576debaf614f7e3616b735301b9140409b/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/83fcbd576debaf614f7e3616b735301b9140409b/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=83fcbd576debaf614f7e3616b735301b9140409b", "patch": "@@ -360,7 +360,6 @@ def output(filepath):\n class RustBuild(object):\n     \"\"\"Provide all the methods required to build Rust\"\"\"\n     def __init__(self):\n-        self.cargo_channel = ''\n         self.date = ''\n         self._download_url = ''\n         self.rustc_channel = ''\n@@ -387,7 +386,6 @@ def download_stage0(self):\n         will move all the content to the right place.\n         \"\"\"\n         rustc_channel = self.rustc_channel\n-        cargo_channel = self.cargo_channel\n         rustfmt_channel = self.rustfmt_channel\n \n         if self.rustc().startswith(self.bin_root()) and \\\n@@ -400,30 +398,22 @@ def download_stage0(self):\n                 rustc_channel, self.build, tarball_suffix)\n             pattern = \"rust-std-{}\".format(self.build)\n             self._download_stage0_helper(filename, pattern, tarball_suffix)\n-\n             filename = \"rustc-{}-{}{}\".format(rustc_channel, self.build,\n                                               tarball_suffix)\n             self._download_stage0_helper(filename, \"rustc\", tarball_suffix)\n+            filename = \"cargo-{}-{}{}\".format(rustc_channel, self.build,\n+                                              tarball_suffix)\n+            self._download_stage0_helper(filename, \"cargo\", tarball_suffix)\n             self.fix_bin_or_dylib(\"{}/bin/rustc\".format(self.bin_root()))\n             self.fix_bin_or_dylib(\"{}/bin/rustdoc\".format(self.bin_root()))\n+            self.fix_bin_or_dylib(\"{}/bin/cargo\".format(self.bin_root()))\n             lib_dir = \"{}/lib\".format(self.bin_root())\n             for lib in os.listdir(lib_dir):\n                 if lib.endswith(\".so\"):\n                     self.fix_bin_or_dylib(\"{}/{}\".format(lib_dir, lib))\n             with output(self.rustc_stamp()) as rust_stamp:\n                 rust_stamp.write(self.date)\n \n-        if self.cargo().startswith(self.bin_root()) and \\\n-                (not os.path.exists(self.cargo()) or\n-                 self.program_out_of_date(self.cargo_stamp())):\n-            tarball_suffix = '.tar.xz' if support_xz() else '.tar.gz'\n-            filename = \"cargo-{}-{}{}\".format(cargo_channel, self.build,\n-                                              tarball_suffix)\n-            self._download_stage0_helper(filename, \"cargo\", tarball_suffix)\n-            self.fix_bin_or_dylib(\"{}/bin/cargo\".format(self.bin_root()))\n-            with output(self.cargo_stamp()) as cargo_stamp:\n-                cargo_stamp.write(self.date)\n-\n         if self.rustfmt() and self.rustfmt().startswith(self.bin_root()) and (\n             not os.path.exists(self.rustfmt())\n             or self.program_out_of_date(self.rustfmt_stamp(), self.rustfmt_channel)\n@@ -601,16 +591,6 @@ def rustc_stamp(self):\n         \"\"\"\n         return os.path.join(self.bin_root(), '.rustc-stamp')\n \n-    def cargo_stamp(self):\n-        \"\"\"Return the path for .cargo-stamp\n-\n-        >>> rb = RustBuild()\n-        >>> rb.build_dir = \"build\"\n-        >>> rb.cargo_stamp() == os.path.join(\"build\", \"stage0\", \".cargo-stamp\")\n-        True\n-        \"\"\"\n-        return os.path.join(self.bin_root(), '.cargo-stamp')\n-\n     def rustfmt_stamp(self):\n         \"\"\"Return the path for .rustfmt-stamp\n \n@@ -1056,7 +1036,6 @@ def bootstrap(help_triggered):\n     data = stage0_data(build.rust_root)\n     build.date = data['date']\n     build.rustc_channel = data['rustc']\n-    build.cargo_channel = data['cargo']\n \n     if \"rustfmt\" in data:\n         build.rustfmt_channel = data['rustfmt']"}, {"sha": "dae9d219b7b9be9bb41a3682d791d2c55eb4e004", "filename": "src/stage0.txt", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/83fcbd576debaf614f7e3616b735301b9140409b/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/83fcbd576debaf614f7e3616b735301b9140409b/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=83fcbd576debaf614f7e3616b735301b9140409b", "patch": "@@ -1,20 +1,19 @@\n # This file describes the stage0 compiler that's used to then bootstrap the Rust\n-# compiler itself. For the rustbuild build system, this also describes the\n-# relevant Cargo revision that we're using.\n+# compiler itself.\n #\n # Currently Rust always bootstraps from the previous stable release, and in our\n # train model this means that the master branch bootstraps from beta, beta\n # bootstraps from current stable, and stable bootstraps from the previous stable\n # release.\n #\n # If you're looking at this file on the master branch, you'll likely see that\n-# rustc and cargo are configured to `beta`, whereas if you're looking at a\n-# source tarball for a stable release you'll likely see `1.x.0` for rustc and\n-# `0.(x+1).0` for Cargo where they were released on `date`.\n+# rustc is configured to `beta`, whereas if you're looking at a source tarball\n+# for a stable release you'll likely see `1.x.0` for rustc, with the previous\n+# stable release's version number. `date` is the date where the release we're\n+# bootstrapping off was released.\n \n date: 2020-10-16\n rustc: beta\n-cargo: beta\n \n # We use a nightly rustfmt to format the source because it solves some\n # bootstrapping issues with use of new syntax in this repo. If you're looking at"}]}