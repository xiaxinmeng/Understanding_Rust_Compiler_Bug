{"sha": "44b489f27a92e7e9662f27bcebb66662f4772247", "node_id": "C_kwDOAAsO6NoAKDQ0YjQ4OWYyN2E5MmU3ZTk2NjJmMjdiY2ViYjY2NjYyZjQ3NzIyNDc", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-08-09T14:52:18Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-08-15T15:56:21Z"}, "message": "rustdoc: Mark imported items as retained\n\nFixes a bug where impl of items that were imported from a private module\nwould be striped\n\nFixes #100252\nFixes #100242", "tree": {"sha": "71c75a4841593472fe3369ea46487c59bd7c9380", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71c75a4841593472fe3369ea46487c59bd7c9380"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44b489f27a92e7e9662f27bcebb66662f4772247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44b489f27a92e7e9662f27bcebb66662f4772247", "html_url": "https://github.com/rust-lang/rust/commit/44b489f27a92e7e9662f27bcebb66662f4772247", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44b489f27a92e7e9662f27bcebb66662f4772247/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc4dd6fc9f1a5c798df269933c7e442b79661a86", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc4dd6fc9f1a5c798df269933c7e442b79661a86", "html_url": "https://github.com/rust-lang/rust/commit/cc4dd6fc9f1a5c798df269933c7e442b79661a86"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "93beaaa92a77501737dd2073c73236ff9fae2d9c", "filename": "src/librustdoc/passes/stripper.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/44b489f27a92e7e9662f27bcebb66662f4772247/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b489f27a92e7e9662f27bcebb66662f4772247/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstripper.rs?ref=44b489f27a92e7e9662f27bcebb66662f4772247", "patch": "@@ -84,7 +84,17 @@ impl<'a> DocFolder for Stripper<'a> {\n             }\n \n             // handled in the `strip-priv-imports` pass\n-            clean::ExternCrateItem { .. } | clean::ImportItem(..) => {}\n+            clean::ExternCrateItem { .. } => {}\n+            clean::ImportItem(ref imp) => {\n+                // Because json doesn't inline imports from private modules, we need to mark\n+                // the imported item as retained so it's impls won't be stripped.i\n+                //\n+                // FIXME: Is it necessary to check for json output here: See\n+                // https://github.com/rust-lang/rust/pull/100325#discussion_r941495215\n+                if let Some(did) = imp.source.did && self.is_json_output {\n+                    self.retained.insert(did.into());\n+                }\n+            }\n \n             clean::ImplItem(..) => {}\n "}, {"sha": "ef4d8aa39f88c0f60a891acf0888a1e94d153e32", "filename": "src/test/rustdoc-json/impls/import_from_private.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/44b489f27a92e7e9662f27bcebb66662f4772247/src%2Ftest%2Frustdoc-json%2Fimpls%2Fimport_from_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b489f27a92e7e9662f27bcebb66662f4772247/src%2Ftest%2Frustdoc-json%2Fimpls%2Fimport_from_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fimpls%2Fimport_from_private.rs?ref=44b489f27a92e7e9662f27bcebb66662f4772247", "patch": "@@ -0,0 +1,24 @@\n+// https://github.com/rust-lang/rust/issues/100252\n+\n+#![feature(no_core)]\n+#![no_core]\n+\n+mod bar {\n+    // @set baz = import_from_private.json \"$.index[*][?(@.kind=='struct')].id\"\n+    pub struct Baz;\n+    // @set impl = - \"$.index[*][?(@.kind=='impl')].id\"\n+    impl Baz {\n+        // @set doit = - \"$.index[*][?(@.kind=='method')].id\"\n+        pub fn doit() {}\n+    }\n+}\n+\n+// @set import = - \"$.index[*][?(@.kind=='import')].id\"\n+pub use bar::Baz;\n+\n+// FIXME(adotinthevoid): Use hasexact once #99474 lands\n+\n+// @has - \"$.index[*][?(@.kind=='module')].inner.items[*]\" $import\n+// @is  - \"$.index[*][?(@.kind=='import')].inner.id\" $baz\n+// @has - \"$.index[*][?(@.kind=='struct')].inner.impls[*]\" $impl\n+// @has - \"$.index[*][?(@.kind=='impl')].inner.items[*]\" $doit"}]}