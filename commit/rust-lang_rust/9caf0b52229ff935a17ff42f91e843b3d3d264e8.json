{"sha": "9caf0b52229ff935a17ff42f91e843b3d3d264e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYWYwYjUyMjI5ZmY5MzVhMTdmZjQyZjkxZTg0M2IzZDNkMjY0ZTg=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-07-29T21:56:58Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-07-29T23:50:15Z"}, "message": "Make `{align,size}_of_val` `const`", "tree": {"sha": "3a527d504e119f3624755dc285e58d08b7569732", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a527d504e119f3624755dc285e58d08b7569732"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9caf0b52229ff935a17ff42f91e843b3d3d264e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9caf0b52229ff935a17ff42f91e843b3d3d264e8", "html_url": "https://github.com/rust-lang/rust/commit/9caf0b52229ff935a17ff42f91e843b3d3d264e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9caf0b52229ff935a17ff42f91e843b3d3d264e8/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8611e526b766ce188dc29bd49bf66ff17764ceea", "url": "https://api.github.com/repos/rust-lang/rust/commits/8611e526b766ce188dc29bd49bf66ff17764ceea", "html_url": "https://github.com/rust-lang/rust/commit/8611e526b766ce188dc29bd49bf66ff17764ceea"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "44b86438f2a89534932e1a40075e1100bb782065", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9caf0b52229ff935a17ff42f91e843b3d3d264e8/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9caf0b52229ff935a17ff42f91e843b3d3d264e8/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=9caf0b52229ff935a17ff42f91e843b3d3d264e8", "patch": "@@ -1004,11 +1004,13 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::mem::size_of_val`](../../std/mem/fn.size_of_val.html).\n+    #[rustc_const_unstable(feature = \"const_size_of_val\", issue = \"46571\")]\n     pub fn size_of_val<T: ?Sized>(_: *const T) -> usize;\n     /// The required alignment of the referenced value.\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::mem::align_of_val`](../../std/mem/fn.align_of_val.html).\n+    #[rustc_const_unstable(feature = \"const_align_of_val\", issue = \"46571\")]\n     pub fn min_align_of_val<T: ?Sized>(_: *const T) -> usize;\n \n     /// Gets a static string slice containing the name of a type."}, {"sha": "550e07f9d571091b487574ab9cd03bd302d27f13", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9caf0b52229ff935a17ff42f91e843b3d3d264e8/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9caf0b52229ff935a17ff42f91e843b3d3d264e8/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=9caf0b52229ff935a17ff42f91e843b3d3d264e8", "patch": "@@ -88,6 +88,8 @@\n #![feature(const_result)]\n #![feature(const_slice_from_raw_parts)]\n #![feature(const_slice_ptr_len)]\n+#![feature(const_size_of_val)]\n+#![feature(const_align_of_val)]\n #![feature(const_type_name)]\n #![feature(const_likely)]\n #![feature(const_unreachable_unchecked)]"}, {"sha": "4e58e118562ef92a082299d74dba4ad92b4b4101", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9caf0b52229ff935a17ff42f91e843b3d3d264e8/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9caf0b52229ff935a17ff42f91e843b3d3d264e8/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=9caf0b52229ff935a17ff42f91e843b3d3d264e8", "patch": "@@ -332,7 +332,8 @@ pub const fn size_of<T>() -> usize {\n /// ```\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub fn size_of_val<T: ?Sized>(val: &T) -> usize {\n+#[rustc_const_unstable(feature = \"const_size_of_val\", issue = \"46571\")]\n+pub const fn size_of_val<T: ?Sized>(val: &T) -> usize {\n     intrinsics::size_of_val(val)\n }\n \n@@ -466,9 +467,10 @@ pub const fn align_of<T>() -> usize {\n /// ```\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[rustc_const_unstable(feature = \"const_align_of_val\", issue = \"46571\")]\n #[allow(deprecated)]\n-pub fn align_of_val<T: ?Sized>(val: &T) -> usize {\n-    min_align_of_val(val)\n+pub const fn align_of_val<T: ?Sized>(val: &T) -> usize {\n+    intrinsics::min_align_of_val(val)\n }\n \n /// Returns the [ABI]-required minimum alignment of the type of the value that `val` points to."}, {"sha": "d830879eff3748d472f1b5e8516f25ae1f6cd484", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9caf0b52229ff935a17ff42f91e843b3d3d264e8/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9caf0b52229ff935a17ff42f91e843b3d3d264e8/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=9caf0b52229ff935a17ff42f91e843b3d3d264e8", "patch": "@@ -120,6 +120,21 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 self.write_scalar(location.ptr, dest)?;\n             }\n \n+            sym::min_align_of_val | sym::size_of_val => {\n+                let place = self.deref_operand(args[0])?;\n+                let (size, align) = self\n+                    .size_and_align_of(place.meta, place.layout)?\n+                    .ok_or_else(|| err_unsup_format!(\"`extern type` does not have known layout\"))?;\n+\n+                let result = match intrinsic_name {\n+                    sym::min_align_of_val => align.bytes(),\n+                    sym::size_of_val => size.bytes(),\n+                    _ => bug!(),\n+                };\n+\n+                self.write_scalar(Scalar::from_machine_usize(result, self), dest)?;\n+            }\n+\n             sym::min_align_of\n             | sym::pref_align_of\n             | sym::needs_drop"}]}