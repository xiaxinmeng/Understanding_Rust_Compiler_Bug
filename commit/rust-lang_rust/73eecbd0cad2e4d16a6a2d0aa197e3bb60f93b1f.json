{"sha": "73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZWVjYmQwY2FkMmU0ZDE2YTZhMmQwYWExOTdlM2JiNjBmOTNiMWY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-12T01:55:03Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-12T01:55:03Z"}, "message": "Factor out creation of calls into ExtFmt.RT", "tree": {"sha": "cc461115b1be7272fdb7c7f0d00c5a6cf0ad06d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc461115b1be7272fdb7c7f0d00c5a6cf0ad06d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "html_url": "https://github.com/rust-lang/rust/commit/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bba245f3e6cdf9203cfafe7e8a81739a499b20eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/bba245f3e6cdf9203cfafe7e8a81739a499b20eb", "html_url": "https://github.com/rust-lang/rust/commit/bba245f3e6cdf9203cfafe7e8a81739a499b20eb"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "1884813dde3706c92ec4fc2a346473b5a682bad2", "filename": "src/comp/front/extfmt.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f/src%2Fcomp%2Ffront%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f/src%2Fcomp%2Ffront%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fextfmt.rs?ref=73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "patch": "@@ -125,6 +125,14 @@ fn pieces_to_expr(vec[piece] pieces, vec[@ast.expr] args) -> @ast.expr {\n         ret sp_callexpr;\n     }\n \n+    fn make_conv_call(common.span sp, str conv_type,\n+                      @ast.expr arg) -> @ast.expr {\n+        auto fname = \"conv_\" + conv_type;\n+        let vec[str] path = vec(\"std\", \"ExtFmt\", \"RT\", fname);\n+        let vec[@ast.expr] args = vec(arg);\n+        ret make_call(arg.span, path, args);\n+    }\n+\n     fn make_new_conv(conv cnv, @ast.expr arg) -> @ast.expr {\n \n         auto unsupported = \"conversion not supported in #fmt string\";\n@@ -168,26 +176,18 @@ fn pieces_to_expr(vec[piece] pieces, vec[@ast.expr] args) -> @ast.expr {\n             case (ty_int(?sign)) {\n                 alt (sign) {\n                     case (signed) {\n-                        let vec[str] path = vec(\"std\", \"ExtFmt\", \"RT\", \"int_to_str\");\n-                        let vec[@ast.expr] args = vec(arg);\n-                        ret make_call(arg.span, path, args);\n+                        ret make_conv_call(arg.span, \"int\", arg);\n                     }\n                     case (unsigned) {\n-                        let vec[str] path = vec(\"std\", \"ExtFmt\", \"RT\", \"int_to_str\");\n-                        let vec[@ast.expr] args = vec(arg);\n-                        ret make_call(arg.span, path, args);\n+                        ret make_conv_call(arg.span, \"uint\", arg);\n                     }\n                 }\n             }\n             case (ty_bool) {\n-                let vec[str] path = vec(\"std\", \"ExtFmt\", \"RT\", \"bool_to_str\");\n-                let vec[@ast.expr] args = vec(arg);\n-                ret make_call(arg.span, path, args);\n+                ret make_conv_call(arg.span, \"bool\", arg);\n             }\n             case (ty_char) {\n-                let vec[str] path = vec(\"std\", \"ExtFmt\", \"RT\", \"char_to_str\");\n-                let vec[@ast.expr] args = vec(arg);\n-                ret make_call(arg.span, path, args);\n+                ret make_conv_call(arg.span, \"char\", arg);\n             }\n             case (_) {\n                 log unsupported;"}, {"sha": "e08de7ee414da2bc3e2eb8267e5194a9e1052804", "filename": "src/lib/ExtFmt.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f/src%2Flib%2FExtFmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f/src%2Flib%2FExtFmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2FExtFmt.rs?ref=73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "patch": "@@ -264,23 +264,23 @@ mod CT {\n \n // Functions used by the fmt extension at runtime\n mod RT {\n-    fn int_to_str(int i) -> str {\n+    fn conv_int(int i) -> str {\n         ret _int.to_str(i, 10u);\n     }\n \n-    fn uint_to_str(uint u) -> str {\n+    fn conv_uint(uint u) -> str {\n         ret _uint.to_str(u, 10u);\n     }\n \n-    fn bool_to_str(bool b) -> str {\n+    fn conv_bool(bool b) -> str {\n         if (b) {\n             ret \"true\";\n         } else {\n             ret \"false\";\n         }\n     }\n \n-    fn char_to_str(char c) -> str {\n+    fn conv_char(char c) -> str {\n         ret _str.from_char(c);\n     }\n }"}]}