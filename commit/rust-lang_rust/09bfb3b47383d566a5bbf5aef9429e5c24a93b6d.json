{"sha": "09bfb3b47383d566a5bbf5aef9429e5c24a93b6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YmZiM2I0NzM4M2Q1NjZhNWJiZjVhZWY5NDI5ZTVjMjRhOTNiNmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-15T11:06:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-15T11:06:24Z"}, "message": "auto merge of #10970 : erickt/rust/master, r=alexcrichton\n\nThis modifies the `configure` to set `CFG_ENABLE_CLANG=1` if `gcc` is actually `clang`. This is needed because OS X's clang enables warning on unused command line arguments. Our build system suppresses this by default, but when `CFG_ENABLE_CLANGE=0`, we do not. This causes one of the tests to fail. This patch changes rust to directly use clang, which fixes the build failure.\r\n\r\nCloses #10811", "tree": {"sha": "6a5c9ea889e30ad3c56ad223e94d9f77bae462e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a5c9ea889e30ad3c56ad223e94d9f77bae462e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09bfb3b47383d566a5bbf5aef9429e5c24a93b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09bfb3b47383d566a5bbf5aef9429e5c24a93b6d", "html_url": "https://github.com/rust-lang/rust/commit/09bfb3b47383d566a5bbf5aef9429e5c24a93b6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09bfb3b47383d566a5bbf5aef9429e5c24a93b6d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "386b455b1b00f418f1e19255023593e724036cb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/386b455b1b00f418f1e19255023593e724036cb4", "html_url": "https://github.com/rust-lang/rust/commit/386b455b1b00f418f1e19255023593e724036cb4"}, {"sha": "460a966a588da1e947ae0873a28048203bd3c684", "url": "https://api.github.com/repos/rust-lang/rust/commits/460a966a588da1e947ae0873a28048203bd3c684", "html_url": "https://github.com/rust-lang/rust/commit/460a966a588da1e947ae0873a28048203bd3c684"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "a97219cd9dcf0502070b703828c400b3ee0ada07", "filename": "configure", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/09bfb3b47383d566a5bbf5aef9429e5c24a93b6d/configure", "raw_url": "https://github.com/rust-lang/rust/raw/09bfb3b47383d566a5bbf5aef9429e5c24a93b6d/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=09bfb3b47383d566a5bbf5aef9429e5c24a93b6d", "patch": "@@ -469,8 +469,8 @@ then\n     PV_MINOR=${PV_MAJOR_MINOR#* }\n     if [ \"$PV_MAJOR\" -lt \"$MIN_PV_MAJOR\" ] || [ \"$PV_MINOR\" -lt \"$MIN_PV_MINOR\" ]\n     then\n-\t\tstep_msg \"pandoc $PV_MAJOR.$PV_MINOR is too old. Need at least $MIN_PV_MAJOR.$MIN_PV_MINOR. Disabling\"\n-\t\tBAD_PANDOC=1\n+        step_msg \"pandoc $PV_MAJOR.$PV_MINOR is too old. Need at least $MIN_PV_MAJOR.$MIN_PV_MINOR. Disabling\"\n+        BAD_PANDOC=1\n     fi\n fi\n \n@@ -544,12 +544,24 @@ then\n     putvar CFG_ENABLE_CLANG\n fi\n \n-\n if [ -z \"$CFG_ENABLE_CLANG\" -a -z \"$CFG_GCC\" ]\n then\n     err \"either clang or gcc is required\"\n fi\n \n+# OS X 10.9, gcc is actually clang. This can cause some confusion in the build\n+# system, so if we find that gcc is clang, we should just use clang directly.\n+if [ $CFG_OSTYPE = apple-darwin -a -z \"$CFG_ENABLE_CLANG\" ]\n+then\n+    CFG_OSX_GCC_VERSION=$(\"$CFG_GCC\" --version 2>&1 | grep \"Apple LLVM version\")\n+    if [ $? -eq 0 ]\n+    then\n+        step_msg \"on OS X 10.9, forcing use of clang\"\n+        CFG_ENABLE_CLANG=1\n+        putvar CFG_ENABLE_CLANG\n+    fi\n+fi\n+\n if [ ! -z \"$CFG_LLVM_ROOT\" -a -e \"$CFG_LLVM_ROOT/bin/llvm-config\" ]\n then\n     step_msg \"using custom LLVM at $CFG_LLVM_ROOT\"\n@@ -558,20 +570,20 @@ then\n     LLVM_VERSION=$($LLVM_CONFIG --version)\n \n     case $LLVM_VERSION in\n-\t(3.3|3.3svn|3.2|3.2svn)\n-\t    msg \"found ok version of LLVM: $LLVM_VERSION\"\n-\t    ;;\n-\t(*)\n-\t    err \"bad LLVM version: $LLVM_VERSION, need >=3.0svn\"\n-\t    ;;\n+        (3.3|3.3svn|3.2|3.2svn)\n+            msg \"found ok version of LLVM: $LLVM_VERSION\"\n+            ;;\n+        (*)\n+            err \"bad LLVM version: $LLVM_VERSION, need >=3.0svn\"\n+            ;;\n     esac\n fi\n \n if [ ! -z \"$CFG_ENABLE_CLANG\" ]\n then\n     if [ -z \"$CFG_CLANG\" ]\n     then\n-\terr \"clang requested but not found\"\n+        err \"clang requested but not found\"\n     fi\n     CFG_CLANG_VERSION=$(\"$CFG_CLANG\" \\\n                       --version \\"}]}