{"sha": "a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0", "node_id": "C_kwDOAAsO6NoAKGEyYzlmMmE1ZTAyYjM2YzE3N2UxODNlM2QwYTYzYTI3MjJjM2FlZjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-15T11:46:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-15T11:46:01Z"}, "message": "Rollup merge of #105627 - compiler-errors:dyn-auto-suggestable, r=davidtwco\n\nAuto traits in `dyn Trait + Auto` are suggestable\n\nNot  sure why I had made the `IsSuggestableVisitor` have that rule to not consider `dyn Trait + Auto` to be suggestable.\n\nIt's possible that this was done because of the fact that we don't print the right parentheses for `&(dyn Trait + Auto)`, but that's a problem with printing these types in general that we probably have tracked somewhere else...", "tree": {"sha": "c55b0ab71fcb9651355c2a6cfdbb6d1d65ee58e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c55b0ab71fcb9651355c2a6cfdbb6d1d65ee58e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjmwj5CRBK7hj4Ov3rIwAA8vYIAKaiNpHnvYxt1KzEzJd2JhMN\nHpez05+Ez2524STYZojfj9YCvU7WBRbr2VOyKc8Ld1t2xxYtuPKYHLnEt6CfD5iy\nzIdme14//YxvWCU61tDUKkWiVuP0U+WIvIdncfOKBKNowb3nAyw3dZjBIVnx6+As\nlervlQdoaF26/3z9EE6r6qMSRSWfyESkEDpb1yoM4xuEzg823GuKD3J63HiR6YNs\nlq6kjBUTURWz/P96+NUmPNl8rwppNwtDTnNnmXYBbto9WaciSpOCPKkA/xM7uG1I\nyi/myBTL8XMIBgyqasQRTBL/dvGHX96Bz+a2weRCZxEuFTtuPfh0Qypb3OzUDZ4=\n=1G0r\n-----END PGP SIGNATURE-----\n", "payload": "tree c55b0ab71fcb9651355c2a6cfdbb6d1d65ee58e3\nparent 5d24760245567ccf9f938a063c2f13ea527bef9c\nparent cfa6a93a36d3cbb8e392f5d820e9e139f66c8a5a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671104761 +0100\ncommitter GitHub <noreply@github.com> 1671104761 +0100\n\nRollup merge of #105627 - compiler-errors:dyn-auto-suggestable, r=davidtwco\n\nAuto traits in `dyn Trait + Auto` are suggestable\n\nNot  sure why I had made the `IsSuggestableVisitor` have that rule to not consider `dyn Trait + Auto` to be suggestable.\n\nIt's possible that this was done because of the fact that we don't print the right parentheses for `&(dyn Trait + Auto)`, but that's a problem with printing these types in general that we probably have tracked somewhere else...\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0", "html_url": "https://github.com/rust-lang/rust/commit/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d24760245567ccf9f938a063c2f13ea527bef9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d24760245567ccf9f938a063c2f13ea527bef9c", "html_url": "https://github.com/rust-lang/rust/commit/5d24760245567ccf9f938a063c2f13ea527bef9c"}, {"sha": "cfa6a93a36d3cbb8e392f5d820e9e139f66c8a5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfa6a93a36d3cbb8e392f5d820e9e139f66c8a5a", "html_url": "https://github.com/rust-lang/rust/commit/cfa6a93a36d3cbb8e392f5d820e9e139f66c8a5a"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "8c22df7395f1052669ad14f2e36cc7e187bf4b23", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0", "patch": "@@ -3,8 +3,8 @@\n use std::ops::ControlFlow;\n \n use crate::ty::{\n-    visit::TypeVisitable, AliasTy, Const, ConstKind, DefIdTree, ExistentialPredicate, InferConst,\n-    InferTy, Opaque, PolyTraitPredicate, Ty, TyCtxt, TypeSuperVisitable, TypeVisitor,\n+    visit::TypeVisitable, AliasTy, Const, ConstKind, DefIdTree, InferConst, InferTy, Opaque,\n+    PolyTraitPredicate, Ty, TyCtxt, TypeSuperVisitable, TypeVisitor,\n };\n \n use rustc_data_structures::fx::FxHashMap;\n@@ -469,17 +469,6 @@ impl<'tcx> TypeVisitor<'tcx> for IsSuggestableVisitor<'tcx> {\n                 }\n             }\n \n-            Dynamic(dty, _, _) => {\n-                for pred in *dty {\n-                    match pred.skip_binder() {\n-                        ExistentialPredicate::Trait(_) | ExistentialPredicate::Projection(_) => {\n-                            // Okay\n-                        }\n-                        _ => return ControlFlow::Break(()),\n-                    }\n-                }\n-            }\n-\n             Param(param) => {\n                 // FIXME: It would be nice to make this not use string manipulation,\n                 // but it's pretty hard to do this, since `ty::ParamTy` is missing"}, {"sha": "d765bc4f74d332c71bf301de9a4e849e477282a9", "filename": "src/test/ui/argument-suggestions/display-is-suggestable.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0/src%2Ftest%2Fui%2Fargument-suggestions%2Fdisplay-is-suggestable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0/src%2Ftest%2Fui%2Fargument-suggestions%2Fdisplay-is-suggestable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fdisplay-is-suggestable.rs?ref=a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0", "patch": "@@ -0,0 +1,8 @@\n+use std::fmt::Display;\n+\n+fn foo(x: &(dyn Display + Send)) {}\n+\n+fn main() {\n+    foo();\n+    //~^ ERROR this function takes 1 argument but 0 arguments were supplied\n+}"}, {"sha": "edd72b53eb3b6a8e11a3b668ba1c3a1fdc55d890", "filename": "src/test/ui/argument-suggestions/display-is-suggestable.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0/src%2Ftest%2Fui%2Fargument-suggestions%2Fdisplay-is-suggestable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0/src%2Ftest%2Fui%2Fargument-suggestions%2Fdisplay-is-suggestable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fdisplay-is-suggestable.stderr?ref=a2c9f2a5e02b36c177e183e3d0a63a2722c3aef0", "patch": "@@ -0,0 +1,19 @@\n+error[E0061]: this function takes 1 argument but 0 arguments were supplied\n+  --> $DIR/display-is-suggestable.rs:6:5\n+   |\n+LL |     foo();\n+   |     ^^^-- an argument of type `&dyn std::fmt::Display + Send` is missing\n+   |\n+note: function defined here\n+  --> $DIR/display-is-suggestable.rs:3:4\n+   |\n+LL | fn foo(x: &(dyn Display + Send)) {}\n+   |    ^^^ ------------------------\n+help: provide the argument\n+   |\n+LL |     foo(/* &dyn std::fmt::Display + Send */);\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0061`."}]}