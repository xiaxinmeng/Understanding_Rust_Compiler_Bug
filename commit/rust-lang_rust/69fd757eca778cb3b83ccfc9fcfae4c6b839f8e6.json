{"sha": "69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZmQ3NTdlY2E3NzhjYjNiODNjY2ZjOWZjZmFlNGM2YjgzOWY4ZTY=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-05-02T16:33:59Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-05-02T19:52:27Z"}, "message": "fix markdown syntax in `LateContext` examples", "tree": {"sha": "10f498c1d81cd8fc2dee7625036776a6c6afaa60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10f498c1d81cd8fc2dee7625036776a6c6afaa60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlzLSnsWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdNuaB/9IVrLFVzgEo7I/p+SwwP+2IRVl\ntcmgmZTlapxrGHe/H8KF4aRXO7XwwAj0tn/HMlgp7yB9J7cErLt/Y7RP6uXyILVM\nFEQryJM1BFUFy3S7B9Gb6u7a3j+AUBXo9Gw/6s8KkqLo+Gg5mXqoNOx3qzpDsGn8\n41RxR0Shf2HFBfuj6S/AHuPPFXiXgqIaDmQ5++uiMGr3i6Rs2rFCgcT07OdmSVmQ\nD06WTJjGq90lrjF/N3EwdwjuXxEKD56DdnTSglstYt18L9jxLWv3Gxt98WE9oskB\nvOJSbyCOGwmsBkkRD7fPAdeMxr2zSYPNb+xTmUevFyvA2k+O0vMsuW+hOWg9\n=aS0H\n-----END PGP SIGNATURE-----", "payload": "tree 10f498c1d81cd8fc2dee7625036776a6c6afaa60\nparent d15fc173818ccea6f8d97af13a30d454f9e4b35c\nauthor Andy Russell <arussell123@gmail.com> 1556814839 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1556826747 -0400\n\nfix markdown syntax in `LateContext` examples\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6", "html_url": "https://github.com/rust-lang/rust/commit/69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d15fc173818ccea6f8d97af13a30d454f9e4b35c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d15fc173818ccea6f8d97af13a30d454f9e4b35c", "html_url": "https://github.com/rust-lang/rust/commit/d15fc173818ccea6f8d97af13a30d454f9e4b35c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e713cf8d805531669f4d6a4759d046986e0240f2", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=69fd757eca778cb3b83ccfc9fcfae4c6b839f8e6", "patch": "@@ -757,12 +757,12 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n     /// Check if a `DefId`'s path matches the given absolute type path usage.\n     ///\n     /// # Examples\n-    /// ```rust,ignore (no `cx` or `def_id` available)\n+    ///\n+    /// ```rust,ignore (no context or def id available)\n     /// if cx.match_def_path(def_id, &[\"core\", \"option\", \"Option\"]) {\n     ///     // The given `def_id` is that of an `Option` type\n     /// }\n     /// ```\n-    // Uplifted from rust-lang/rust-clippy\n     pub fn match_def_path(&self, def_id: DefId, path: &[&str]) -> bool {\n         let names = self.get_def_path(def_id);\n \n@@ -772,13 +772,13 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n     /// Gets the absolute path of `def_id` as a vector of `&str`.\n     ///\n     /// # Examples\n-    /// ```rust,ignore (no `cx` or `def_id` available)\n+    ///\n+    /// ```rust,ignore (no context or def id available)\n     /// let def_path = cx.get_def_path(def_id);\n     /// if let &[\"core\", \"option\", \"Option\"] = &def_path[..] {\n     ///     // The given `def_id` is that of an `Option` type\n     /// }\n     /// ```\n-    // Uplifted from rust-lang/rust-clippy\n     pub fn get_def_path(&self, def_id: DefId) -> Vec<LocalInternedString> {\n         pub struct AbsolutePathPrinter<'a, 'tcx> {\n             pub tcx: TyCtxt<'a, 'tcx, 'tcx>,"}]}