{"sha": "64cd30e0cacb6b509f9368004afb0b6bde7a5143", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0Y2QzMGUwY2FjYjZiNTA5ZjkzNjgwMDRhZmIwYjZiZGU3YTUxNDM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T19:47:14Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T22:35:50Z"}, "message": "Declare `&foo[]` to be obsolete syntax. Modify the obsolete mechanism to\nsupport warnings.", "tree": {"sha": "b55c02e2c1d0e1925366796f4d64a4c28ce94a87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55c02e2c1d0e1925366796f4d64a4c28ce94a87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64cd30e0cacb6b509f9368004afb0b6bde7a5143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64cd30e0cacb6b509f9368004afb0b6bde7a5143", "html_url": "https://github.com/rust-lang/rust/commit/64cd30e0cacb6b509f9368004afb0b6bde7a5143", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64cd30e0cacb6b509f9368004afb0b6bde7a5143/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5", "html_url": "https://github.com/rust-lang/rust/commit/dfc5c0f1e8799f47f9033bdcc8a7cd8a217620a5"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "c6d852627c6ae0fd922e5c606f7574b270154ccb", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/64cd30e0cacb6b509f9368004afb0b6bde7a5143/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64cd30e0cacb6b509f9368004afb0b6bde7a5143/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=64cd30e0cacb6b509f9368004afb0b6bde7a5143", "patch": "@@ -28,6 +28,7 @@ pub enum ObsoleteSyntax {\n     ProcExpr,\n     ClosureType,\n     ClosureKind,\n+    EmptyIndex,\n }\n \n pub trait ParserObsoleteMethods {\n@@ -48,35 +49,46 @@ pub trait ParserObsoleteMethods {\n impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n     /// Reports an obsolete syntax non-fatal error.\n     fn obsolete(&mut self, sp: Span, kind: ObsoleteSyntax) {\n-        let (kind_str, desc) = match kind {\n+        let (kind_str, desc, error) = match kind {\n             ObsoleteSyntax::ForSized => (\n                 \"for Sized?\",\n                 \"no longer required. Traits (and their `Self` type) do not have the `Sized` bound \\\n                  by default\",\n+                true,\n             ),\n             ObsoleteSyntax::ProcType => (\n                 \"the `proc` type\",\n                 \"use unboxed closures instead\",\n+                true,\n             ),\n             ObsoleteSyntax::ProcExpr => (\n                 \"`proc` expression\",\n                 \"use a `move ||` expression instead\",\n+                true,\n             ),\n             ObsoleteSyntax::ClosureType => (\n                 \"`|usize| -> bool` closure type\",\n                 \"use unboxed closures instead, no type annotation needed\"\n+                true,\n             ),\n             ObsoleteSyntax::ClosureKind => (\n                 \"`:`, `&mut:`, or `&:`\",\n                 \"rely on inference instead\"\n+                true,\n             ),\n             ObsoleteSyntax::Sized => (\n                 \"`Sized? T` for removing the `Sized` bound\",\n                 \"write `T: ?Sized` instead\"\n+                true,\n+            ),\n+            ObsoleteSyntax::EmptyIndex => (\n+                \"[]\",\n+                \"write `[..]` instead\",\n+                false, // warning for now\n             ),\n         };\n \n-        self.report(sp, kind, kind_str, desc);\n+        self.report(sp, kind, kind_str, desc, error);\n     }\n \n     /// Reports an obsolete syntax non-fatal error, and returns\n@@ -90,9 +102,13 @@ impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n               sp: Span,\n               kind: ObsoleteSyntax,\n               kind_str: &str,\n-              desc: &str) {\n-        self.span_err(sp,\n-                      &format!(\"obsolete syntax: {}\", kind_str)[]);\n+              desc: &str,\n+              error: bool) {\n+        if error {\n+            self.span_err(sp, &format!(\"obsolete syntax: {}\", kind_str)[]);\n+        } else {\n+            self.span_warn(sp, &format!(\"obsolete syntax: {}\", kind_str)[]);\n+        }\n \n         if !self.obsolete_set.contains(&kind) {\n             self.sess"}, {"sha": "7d3a7d60101453d5bcb12e2d6d37e5edb39ac9b2", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/64cd30e0cacb6b509f9368004afb0b6bde7a5143/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64cd30e0cacb6b509f9368004afb0b6bde7a5143/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=64cd30e0cacb6b509f9368004afb0b6bde7a5143", "patch": "@@ -2552,8 +2552,9 @@ impl<'a> Parser<'a> {\n                             parameters: ast::PathParameters::none(),\n                         }\n                     }).collect();\n+                    let span = mk_sp(lo, hi);\n                     let path = ast::Path {\n-                        span: mk_sp(lo, hi),\n+                        span: span,\n                         global: true,\n                         segments: segments,\n                     };\n@@ -2562,10 +2563,8 @@ impl<'a> Parser<'a> {\n                     let ix = self.mk_expr(bracket_pos, hi, range);\n                     let index = self.mk_index(e, ix);\n                     e = self.mk_expr(lo, hi, index);\n-                    // Enable after snapshot.\n-                    // self.span_warn(e.span, \"deprecated slicing syntax: `[]`\");\n-                    // self.span_note(e.span,\n-                    //               \"use `&expr[..]` to construct a slice of the whole of expr\");\n+\n+                    self.obsolete(span, ObsoleteSyntax::EmptyIndex);\n                 } else {\n                     let ix = self.parse_expr();\n                     hi = self.span.hi;"}, {"sha": "3b992e3bcc321001aae1fd9e694717400c7685ea", "filename": "src/test/compile-fail/slice-1.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/64cd30e0cacb6b509f9368004afb0b6bde7a5143/src%2Ftest%2Fcompile-fail%2Fslice-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64cd30e0cacb6b509f9368004afb0b6bde7a5143/src%2Ftest%2Fcompile-fail%2Fslice-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-1.rs?ref=64cd30e0cacb6b509f9368004afb0b6bde7a5143", "patch": "@@ -9,14 +9,12 @@\n // except according to those terms.\n \n // Test slicing &expr[] is deprecated and gives a helpful error message.\n-//\n-// ignore-test\n \n struct Foo;\n \n fn main() {\n     let x = Foo;\n-    &x[]; //~ WARNING deprecated slicing syntax: `[]`\n-          //~^ NOTE use `&expr[..]` to construct a slice of the whole of expr\n-          //~^^ ERROR cannot index a value of type `Foo`\n+    &x[];\n+    //~^ WARN obsolete syntax\n+    //~| ERROR cannot index\n }"}]}