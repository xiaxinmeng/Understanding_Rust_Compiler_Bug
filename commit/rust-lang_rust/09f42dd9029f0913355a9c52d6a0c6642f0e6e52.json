{"sha": "09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZjQyZGQ5MDI5ZjA5MTMzNTVhOWM1MmQ2YTBjNjY0MmYwZTZlNTI=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2018-10-13T00:51:48Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2018-10-13T00:51:48Z"}, "message": "Add missing lifetime fragment specifier to error message.\n\nA very minor issue, `lifetime` was missing from the error list.\nI left `literal` in the list, even though it is unstable. It looks like it may stabilize soon anyways.", "tree": {"sha": "7afa53b91fd9939bd7bb4b864c7038da86de3b9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7afa53b91fd9939bd7bb4b864c7038da86de3b9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "html_url": "https://github.com/rust-lang/rust/commit/09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "945372d26818f93d6f5cded7b751749e280b67bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/945372d26818f93d6f5cded7b751749e280b67bf", "html_url": "https://github.com/rust-lang/rust/commit/945372d26818f93d6f5cded7b751749e280b67bf"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "87ade278c685a7fadf4e9d8114861e6806c83725", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "patch": "@@ -34,6 +34,10 @@ use std::collections::hash_map::Entry;\n use rustc_data_structures::sync::Lrc;\n use errors::Applicability;\n \n+const VALID_FRAGMENT_NAMES_MSG: &str = \"valid fragment specifiers are \\\n+    `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `lifetime`, `literal`, \\\n+    `path`, `meta`, `tt`, `item` and `vis`\";\n+\n pub struct ParserAnyMacro<'a> {\n     parser: Parser<'a>,\n \n@@ -708,8 +712,7 @@ fn check_matcher_core(sess: &ParseSess,\n                 if let Err(bad_frag) = has_legal_fragment_specifier(sess, features, attrs, token) {\n                     let msg = format!(\"invalid fragment specifier `{}`\", bad_frag);\n                     sess.span_diagnostic.struct_span_err(token.span(), &msg)\n-                        .help(\"valid fragment specifiers are `ident`, `block`, `stmt`, `expr`, \\\n-                              `pat`, `ty`, `literal`, `path`, `meta`, `tt`, `item` and `vis`\")\n+                        .help(VALID_FRAGMENT_NAMES_MSG)\n                         .emit();\n                     // (This eliminates false positives and duplicates\n                     // from error messages.)\n@@ -938,9 +941,7 @@ fn is_in_follow(tok: &quoted::TokenTree, frag: &str) -> Result<bool, (String, &'\n             },\n             \"\" => Ok(true), // keywords::Invalid\n             _ => Err((format!(\"invalid fragment specifier `{}`\", frag),\n-                     \"valid fragment specifiers are `ident`, `block`, \\\n-                      `stmt`, `expr`, `pat`, `ty`, `path`, `meta`, `tt`, \\\n-                      `literal`, `item` and `vis`\"))\n+                     VALID_FRAGMENT_NAMES_MSG))\n         }\n     }\n }"}, {"sha": "924767fb5e17a3cdd666c87e0ff67b02141ba46f", "filename": "src/test/ui/issues/issue-21356.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Ftest%2Fui%2Fissues%2Fissue-21356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Ftest%2Fui%2Fissues%2Fissue-21356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21356.stderr?ref=09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "patch": "@@ -4,7 +4,7 @@ error: invalid fragment specifier `t_ty`\n LL | macro_rules! test { ($wrong:t_ty ..) => () }\n    |                      ^^^^^^^^^^^\n    |\n-   = help: valid fragment specifiers are `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `literal`, `path`, `meta`, `tt`, `item` and `vis`\n+   = help: valid fragment specifiers are `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `lifetime`, `literal`, `path`, `meta`, `tt`, `item` and `vis`\n \n error: aborting due to previous error\n "}, {"sha": "e683d47cf54826cd03a9abc5a84ed15bdc41bf50", "filename": "src/test/ui/macros/macro-invalid-fragment-spec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Ftest%2Fui%2Fmacros%2Fmacro-invalid-fragment-spec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Ftest%2Fui%2Fmacros%2Fmacro-invalid-fragment-spec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-invalid-fragment-spec.stderr?ref=09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "patch": "@@ -4,7 +4,7 @@ error: invalid fragment specifier `foo`\n LL |     ($x:foo) => ()\n    |      ^^^^^^\n    |\n-   = help: valid fragment specifiers are `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `literal`, `path`, `meta`, `tt`, `item` and `vis`\n+   = help: valid fragment specifiers are `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `lifetime`, `literal`, `path`, `meta`, `tt`, `item` and `vis`\n \n error: aborting due to previous error\n "}, {"sha": "20b1ae690ec82d1b7e833775d1c96bac01c4bf2c", "filename": "src/test/ui/unused/unused-macro-with-bad-frag-spec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Ftest%2Fui%2Funused%2Funused-macro-with-bad-frag-spec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09f42dd9029f0913355a9c52d6a0c6642f0e6e52/src%2Ftest%2Fui%2Funused%2Funused-macro-with-bad-frag-spec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-macro-with-bad-frag-spec.stderr?ref=09f42dd9029f0913355a9c52d6a0c6642f0e6e52", "patch": "@@ -4,7 +4,7 @@ error: invalid fragment specifier `t_ty`\n LL |     ($wrong:t_ty) => () //~ ERROR invalid fragment specifier `t_ty`\n    |      ^^^^^^^^^^^\n    |\n-   = help: valid fragment specifiers are `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `literal`, `path`, `meta`, `tt`, `item` and `vis`\n+   = help: valid fragment specifiers are `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `lifetime`, `literal`, `path`, `meta`, `tt`, `item` and `vis`\n \n error: aborting due to previous error\n "}]}