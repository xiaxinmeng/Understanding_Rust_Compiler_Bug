{"sha": "f48b9d9be737339be988042ca88d31330738618c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0OGI5ZDliZTczNzMzOWJlOTg4MDQyY2E4OGQzMTMzMDczODYxOGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T07:55:09Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T07:55:09Z"}, "message": "Fix block structure in enums", "tree": {"sha": "5d509fa71a1bb5286faa8b3691d4d757e5b5c8c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d509fa71a1bb5286faa8b3691d4d757e5b5c8c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f48b9d9be737339be988042ca88d31330738618c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f48b9d9be737339be988042ca88d31330738618c", "html_url": "https://github.com/rust-lang/rust/commit/f48b9d9be737339be988042ca88d31330738618c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f48b9d9be737339be988042ca88d31330738618c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "749907d330e5487eb7997479e2aba4ac2c2e3494", "url": "https://api.github.com/repos/rust-lang/rust/commits/749907d330e5487eb7997479e2aba4ac2c2e3494", "html_url": "https://github.com/rust-lang/rust/commit/749907d330e5487eb7997479e2aba4ac2c2e3494"}], "stats": {"total": 299, "additions": 274, "deletions": 25}, "files": [{"sha": "85d7fe7704cf19dc7874aede53a24796a4ae1c7f", "filename": "crates/libsyntax2/src/grammar/items/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs?ref=f48b9d9be737339be988042ca88d31330738618c", "patch": "@@ -1,11 +1,11 @@\n \n mod consts;\n-mod structs;\n+mod nominal;\n mod traits;\n mod use_item;\n \n use super::*;\n-pub(crate) use self::structs::named_field_def_list;\n+pub(crate) use self::nominal::named_field_def_list;\n \n // test mod_contents\n // fn foo() {}\n@@ -176,7 +176,7 @@ fn items_without_modifiers(p: &mut Parser) -> Option<SyntaxKind> {\n             MODULE\n         }\n         STRUCT_KW => {\n-            structs::struct_def(p);\n+            nominal::struct_def(p);\n             if p.at(SEMI) {\n                 p.err_and_bump(\n                     \"expected item, found `;`\\n\\\n@@ -186,7 +186,7 @@ fn items_without_modifiers(p: &mut Parser) -> Option<SyntaxKind> {\n             STRUCT_DEF\n         }\n         ENUM_KW => {\n-            structs::enum_def(p);\n+            nominal::enum_def(p);\n             ENUM_DEF\n         }\n         USE_KW => {"}, {"sha": "3db5b24afd62866de9698b2fef42942d2cc8a69b", "filename": "crates/libsyntax2/src/grammar/items/nominal.rs", "status": "renamed", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs?ref=f48b9d9be737339be988042ca88d31330738618c", "patch": "@@ -91,6 +91,10 @@ pub(crate) fn named_field_def_list(p: &mut Parser) {\n     let m = p.start();\n     p.bump();\n     while !p.at(R_CURLY) && !p.at(EOF) {\n+        if p.at(L_CURLY) {\n+            error_block(p, \"expected field\");\n+            continue;\n+        }\n         named_field_def(p);\n         if !p.at(R_CURLY) {\n             p.expect(COMMA);\n@@ -127,10 +131,15 @@ fn pos_field_list(p: &mut Parser) {\n         return;\n     }\n     while !p.at(R_PAREN) && !p.at(EOF) {\n-        let pos_field = p.start();\n+        let m = p.start();\n         opt_visibility(p);\n+        if !p.at_ts(types::TYPE_FIRST) {\n+            p.error(\"expected a type\");\n+            m.complete(p, ERROR);\n+            break;\n+        }\n         types::type_(p);\n-        pos_field.complete(p, POS_FIELD);\n+        m.complete(p, POS_FIELD);\n \n         if !p.at(R_PAREN) {\n             p.expect(COMMA);", "previous_filename": "crates/libsyntax2/src/grammar/items/structs.rs"}, {"sha": "e1a6b643260dcf88e31b77736403c3008974d2cb", "filename": "crates/libsyntax2/tests/data/parser/err/0013_invalid_type.txt", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt?ref=f48b9d9be737339be988042ca88d31330738618c", "patch": "@@ -1,13 +1,13 @@\n ROOT@[0; 86)\n-  STRUCT_DEF@[0; 84)\n+  STRUCT_DEF@[0; 72)\n     VISIBILITY@[0; 3)\n       PUB_KW@[0; 3)\n     WHITESPACE@[3; 4)\n     STRUCT_KW@[4; 10)\n     WHITESPACE@[10; 11)\n     NAME@[11; 16)\n       IDENT@[11; 16) \"Cache\"\n-    POS_FIELD_LIST@[16; 83)\n+    POS_FIELD_LIST@[16; 72)\n       L_PAREN@[16; 17)\n       WHITESPACE@[17; 22)\n       POS_FIELD@[22; 68)\n@@ -62,22 +62,28 @@ ROOT@[0; 86)\n               NAME_REF@[69; 72)\n                 IDENT@[69; 72) \"Any\"\n                 err: `expected COMMA`\n-                err: `expected type`\n-      POS_FIELD@[72; 73)\n-        ERROR@[72; 73)\n-          R_ANGLE@[72; 73)\n-      COMMA@[73; 74)\n-      WHITESPACE@[74; 79)\n-      err: `expected type`\n-      POS_FIELD@[79; 80)\n-        ERROR@[79; 80)\n-          R_ANGLE@[79; 80)\n-          err: `expected COMMA`\n-          err: `expected type`\n-      POS_FIELD@[80; 81)\n-        ERROR@[80; 81)\n-          R_ANGLE@[80; 81)\n-      WHITESPACE@[81; 82)\n-      R_PAREN@[82; 83)\n+                err: `expected a type`\n+                err: `expected R_PAREN`\n+                err: `expected SEMI`\n+                err: `expected an item`\n+      ERROR@[72; 72)\n+  ERROR@[72; 73)\n+    R_ANGLE@[72; 73)\n+    err: `expected an item`\n+  ERROR@[73; 74)\n+    COMMA@[73; 74)\n+  WHITESPACE@[74; 79)\n+  err: `expected an item`\n+  ERROR@[79; 80)\n+    R_ANGLE@[79; 80)\n+    err: `expected an item`\n+  ERROR@[80; 81)\n+    R_ANGLE@[80; 81)\n+  WHITESPACE@[81; 82)\n+  err: `expected an item`\n+  ERROR@[82; 83)\n+    R_PAREN@[82; 83)\n+    err: `expected an item`\n+  ERROR@[83; 84)\n     SEMI@[83; 84)\n   WHITESPACE@[84; 86)"}, {"sha": "28726ed5138dcfe4ca83831bc8c26fd998ba419b", "filename": "crates/libsyntax2/tests/data/parser/err/0025_nope.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.rs?ref=f48b9d9be737339be988042ca88d31330738618c", "patch": "@@ -0,0 +1,31 @@\n+fn main() {\n+    enum Test {\n+        Var1,\n+        Var2(String),\n+        Var3 {\n+            abc: {}, //~ ERROR: expected type, found `{`\n+        },\n+    }\n+\n+    // recover...\n+    let a = 1;\n+    enum Test2 {\n+        Fine,\n+    }\n+\n+    enum Test3 {\n+        StillFine {\n+            def: i32,\n+        },\n+    }\n+\n+    {\n+        // fail again\n+        enum Test4 {\n+            Nope(i32 {}) //~ ERROR: found `{`\n+                         //~^ ERROR: found `{`\n+        }\n+    }\n+    // still recover later\n+    let bad_syntax = _; //~ ERROR: expected expression, found reserved identifier `_`\n+}"}, {"sha": "c30b8585fc455e06f94edd45560a4dc92c532959", "filename": "crates/libsyntax2/tests/data/parser/err/0025_nope.txt", "status": "added", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/rust-lang/rust/blob/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f48b9d9be737339be988042ca88d31330738618c/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.txt?ref=f48b9d9be737339be988042ca88d31330738618c", "patch": "@@ -0,0 +1,203 @@\n+ROOT@[0; 575)\n+  FN_DEF@[0; 574)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 7)\n+      IDENT@[3; 7) \"main\"\n+    PARAM_LIST@[7; 9)\n+      L_PAREN@[7; 8)\n+      R_PAREN@[8; 9)\n+    WHITESPACE@[9; 10)\n+    BLOCK@[10; 574)\n+      L_CURLY@[10; 11)\n+      WHITESPACE@[11; 16)\n+      ENUM_DEF@[16; 152)\n+        ENUM_KW@[16; 20)\n+        WHITESPACE@[20; 21)\n+        NAME@[21; 25)\n+          IDENT@[21; 25) \"Test\"\n+        WHITESPACE@[25; 26)\n+        ENUM_VARIANT_LIST@[26; 152)\n+          L_CURLY@[26; 27)\n+          WHITESPACE@[27; 36)\n+          ENUM_VARIANT@[36; 40)\n+            NAME@[36; 40)\n+              IDENT@[36; 40) \"Var1\"\n+          COMMA@[40; 41)\n+          WHITESPACE@[41; 50)\n+          ENUM_VARIANT@[50; 62)\n+            NAME@[50; 54)\n+              IDENT@[50; 54) \"Var2\"\n+            POS_FIELD_LIST@[54; 62)\n+              L_PAREN@[54; 55)\n+              POS_FIELD@[55; 61)\n+                PATH_TYPE@[55; 61)\n+                  PATH@[55; 61)\n+                    PATH_SEGMENT@[55; 61)\n+                      NAME_REF@[55; 61)\n+                        IDENT@[55; 61) \"String\"\n+              R_PAREN@[61; 62)\n+          COMMA@[62; 63)\n+          WHITESPACE@[63; 72)\n+          ENUM_VARIANT@[72; 145)\n+            NAME@[72; 76)\n+              IDENT@[72; 76) \"Var3\"\n+            WHITESPACE@[76; 77)\n+            NAMED_FIELD_DEF_LIST@[77; 145)\n+              L_CURLY@[77; 78)\n+              WHITESPACE@[78; 91)\n+              NAMED_FIELD_DEF@[91; 95)\n+                NAME@[91; 94)\n+                  IDENT@[91; 94) \"abc\"\n+                COLON@[94; 95)\n+                err: `expected type`\n+                err: `expected COMMA`\n+              WHITESPACE@[95; 96)\n+              err: `expected field`\n+              ERROR@[96; 98)\n+                L_CURLY@[96; 97)\n+                R_CURLY@[97; 98)\n+                err: `expected field declaration`\n+              ERROR@[98; 99)\n+                COMMA@[98; 99)\n+              WHITESPACE@[99; 100)\n+              COMMENT@[100; 135)\n+              WHITESPACE@[135; 144)\n+              R_CURLY@[144; 145)\n+          COMMA@[145; 146)\n+          WHITESPACE@[146; 151)\n+          R_CURLY@[151; 152)\n+      WHITESPACE@[152; 158)\n+      COMMENT@[158; 171)\n+      WHITESPACE@[171; 176)\n+      LET_STMT@[176; 186)\n+        LET_KW@[176; 179)\n+        WHITESPACE@[179; 180)\n+        BIND_PAT@[180; 181)\n+          NAME@[180; 181)\n+            IDENT@[180; 181) \"a\"\n+        WHITESPACE@[181; 182)\n+        EQ@[182; 183)\n+        WHITESPACE@[183; 184)\n+        LITERAL@[184; 185)\n+          INT_NUMBER@[184; 185) \"1\"\n+        SEMI@[185; 186)\n+      WHITESPACE@[186; 191)\n+      ENUM_DEF@[191; 223)\n+        ENUM_KW@[191; 195)\n+        WHITESPACE@[195; 196)\n+        NAME@[196; 201)\n+          IDENT@[196; 201) \"Test2\"\n+        WHITESPACE@[201; 202)\n+        ENUM_VARIANT_LIST@[202; 223)\n+          L_CURLY@[202; 203)\n+          WHITESPACE@[203; 212)\n+          ENUM_VARIANT@[212; 216)\n+            NAME@[212; 216)\n+              IDENT@[212; 216) \"Fine\"\n+          COMMA@[216; 217)\n+          WHITESPACE@[217; 222)\n+          R_CURLY@[222; 223)\n+      WHITESPACE@[223; 229)\n+      ENUM_DEF@[229; 300)\n+        ENUM_KW@[229; 233)\n+        WHITESPACE@[233; 234)\n+        NAME@[234; 239)\n+          IDENT@[234; 239) \"Test3\"\n+        WHITESPACE@[239; 240)\n+        ENUM_VARIANT_LIST@[240; 300)\n+          L_CURLY@[240; 241)\n+          WHITESPACE@[241; 250)\n+          ENUM_VARIANT@[250; 293)\n+            NAME@[250; 259)\n+              IDENT@[250; 259) \"StillFine\"\n+            WHITESPACE@[259; 260)\n+            NAMED_FIELD_DEF_LIST@[260; 293)\n+              L_CURLY@[260; 261)\n+              WHITESPACE@[261; 274)\n+              NAMED_FIELD_DEF@[274; 282)\n+                NAME@[274; 277)\n+                  IDENT@[274; 277) \"def\"\n+                COLON@[277; 278)\n+                WHITESPACE@[278; 279)\n+                PATH_TYPE@[279; 282)\n+                  PATH@[279; 282)\n+                    PATH_SEGMENT@[279; 282)\n+                      NAME_REF@[279; 282)\n+                        IDENT@[279; 282) \"i32\"\n+              COMMA@[282; 283)\n+              WHITESPACE@[283; 292)\n+              R_CURLY@[292; 293)\n+          COMMA@[293; 294)\n+          WHITESPACE@[294; 299)\n+          R_CURLY@[299; 300)\n+      WHITESPACE@[300; 306)\n+      EXPR_STMT@[306; 459)\n+        BLOCK_EXPR@[306; 459)\n+          BLOCK@[306; 459)\n+            L_CURLY@[306; 307)\n+            WHITESPACE@[307; 316)\n+            COMMENT@[316; 329)\n+            WHITESPACE@[329; 338)\n+            ENUM_DEF@[338; 453)\n+              ENUM_KW@[338; 342)\n+              WHITESPACE@[342; 343)\n+              NAME@[343; 348)\n+                IDENT@[343; 348) \"Test4\"\n+              WHITESPACE@[348; 349)\n+              ENUM_VARIANT_LIST@[349; 453)\n+                L_CURLY@[349; 350)\n+                WHITESPACE@[350; 363)\n+                ENUM_VARIANT@[363; 372)\n+                  NAME@[363; 367)\n+                    IDENT@[363; 367) \"Nope\"\n+                  POS_FIELD_LIST@[367; 372)\n+                    L_PAREN@[367; 368)\n+                    POS_FIELD@[368; 371)\n+                      PATH_TYPE@[368; 371)\n+                        PATH@[368; 371)\n+                          PATH_SEGMENT@[368; 371)\n+                            NAME_REF@[368; 371)\n+                              IDENT@[368; 371) \"i32\"\n+                              err: `expected COMMA`\n+                    WHITESPACE@[371; 372)\n+                    err: `expected a type`\n+                    err: `expected R_PAREN`\n+                    err: `expected COMMA`\n+                    err: `expected enum variant`\n+                    ERROR@[372; 372)\n+                ERROR@[372; 374)\n+                  L_CURLY@[372; 373)\n+                  R_CURLY@[373; 374)\n+                  err: `expected enum variant`\n+                ERROR@[374; 375)\n+                  R_PAREN@[374; 375)\n+                WHITESPACE@[375; 376)\n+                COMMENT@[376; 396)\n+                WHITESPACE@[396; 422)\n+                COMMENT@[422; 443)\n+                WHITESPACE@[443; 452)\n+                R_CURLY@[452; 453)\n+            WHITESPACE@[453; 458)\n+            R_CURLY@[458; 459)\n+      WHITESPACE@[459; 464)\n+      COMMENT@[464; 486)\n+      WHITESPACE@[486; 491)\n+      LET_STMT@[491; 510)\n+        LET_KW@[491; 494)\n+        WHITESPACE@[494; 495)\n+        BIND_PAT@[495; 505)\n+          NAME@[495; 505)\n+            IDENT@[495; 505) \"bad_syntax\"\n+        WHITESPACE@[505; 506)\n+        EQ@[506; 507)\n+        WHITESPACE@[507; 508)\n+        err: `expected expression`\n+        ERROR@[508; 509)\n+          UNDERSCORE@[508; 509)\n+        SEMI@[509; 510)\n+      WHITESPACE@[510; 511)\n+      COMMENT@[511; 572)\n+      WHITESPACE@[572; 573)\n+      R_CURLY@[573; 574)\n+  WHITESPACE@[574; 575)"}]}