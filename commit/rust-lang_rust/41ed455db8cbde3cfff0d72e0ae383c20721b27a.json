{"sha": "41ed455db8cbde3cfff0d72e0ae383c20721b27a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZWQ0NTVkYjhjYmRlM2NmZmYwZDcyZTBhZTM4M2MyMDcyMWIyN2E=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-02T00:07:06Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-05T19:46:42Z"}, "message": "rustc: Repurpose the --crate-name CLI flag\n\nIn a cargo-driven world the primary location for the name of a crate will be in\nits manifest, not in the source file itself. The purpose of this flag is to\nreduce required duplication for new cargo projects.\n\nThis is a breaking change because the existing --crate-name flag actually\nprinted the crate name. This flag was renamed to --print-crate-name, and to\nmaintain consistence, the --crate-file-name flag was renamed to\n--print-file-name.\n\nTo maintain backwards compatibility, the --crate-file-name flag is still\nrecognized, but it is deprecated.\n\n[breaking-change]", "tree": {"sha": "e4ec549938c65faa455b84ce1a9f780cbe9d33ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4ec549938c65faa455b84ce1a9f780cbe9d33ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41ed455db8cbde3cfff0d72e0ae383c20721b27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41ed455db8cbde3cfff0d72e0ae383c20721b27a", "html_url": "https://github.com/rust-lang/rust/commit/41ed455db8cbde3cfff0d72e0ae383c20721b27a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41ed455db8cbde3cfff0d72e0ae383c20721b27a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "812637e683ef1092cdd62704ab53f0b4c5aabe19", "url": "https://api.github.com/repos/rust-lang/rust/commits/812637e683ef1092cdd62704ab53f0b4c5aabe19", "html_url": "https://github.com/rust-lang/rust/commit/812637e683ef1092cdd62704ab53f0b4c5aabe19"}], "stats": {"total": 64, "additions": 54, "deletions": 10}, "files": [{"sha": "c306a184ca18cafbfd16b75ca779f94f79403f20", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=41ed455db8cbde3cfff0d72e0ae383c20721b27a", "patch": "@@ -556,6 +556,16 @@ pub fn find_crate_name(sess: Option<&Session>,\n         s\n     };\n \n+    match sess {\n+        Some(sess) => {\n+            match sess.opts.crate_name {\n+                Some(ref s) => return validate(s.clone(), None),\n+                None => {}\n+            }\n+        }\n+        None => {}\n+    }\n+\n     let crate_name = attrs.iter().find(|at| at.check_name(\"crate_name\"))\n                           .and_then(|at| at.value_str().map(|s| (at, s)));\n     match crate_name {"}, {"sha": "e91dfd9587b0ab697c511857ad05b0ede02a8045", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=41ed455db8cbde3cfff0d72e0ae383c20721b27a", "patch": "@@ -11,7 +11,7 @@\n //! Contains infrastructure for configuring the compiler, including parsing\n //! command line options.\n \n-use driver::early_error;\n+use driver::{early_error, early_warn};\n use driver::driver;\n use driver::session::Session;\n \n@@ -96,6 +96,7 @@ pub struct Options {\n     pub cg: CodegenOptions,\n     pub color: ColorConfig,\n     pub externs: HashMap<String, Vec<String>>,\n+    pub crate_name: Option<String>,\n }\n \n /// Some reasonable defaults\n@@ -122,6 +123,7 @@ pub fn basic_options() -> Options {\n         cg: basic_codegen_options(),\n         color: Auto,\n         externs: HashMap::new(),\n+        crate_name: None,\n     }\n }\n \n@@ -511,9 +513,12 @@ pub fn optgroups() -> Vec<getopts::OptGroup> {\n                  \"[bin|lib|rlib|dylib|staticlib]\"),\n         optmulti(\"\", \"emit\", \"Comma separated list of types of output for the compiler to emit\",\n                  \"[asm|bc|ir|obj|link]\"),\n-        optflag(\"\", \"crate-name\", \"Output the crate name and exit\"),\n-        optflag(\"\", \"crate-file-name\", \"Output the file(s) that would be written if compilation \\\n+        optopt(\"\", \"crate-name\", \"Specify the name of the crate being built\",\n+               \"NAME\"),\n+        optflag(\"\", \"print-crate-name\", \"Output the crate name and exit\"),\n+        optflag(\"\", \"print-file-name\", \"Output the file(s) that would be written if compilation \\\n               continued and exit\"),\n+        optflag(\"\", \"crate-file-name\", \"deprecated in favor of --print-file-name\"),\n         optflag(\"g\",  \"\",  \"Equivalent to --debuginfo=2\"),\n         optopt(\"\",  \"debuginfo\",  \"Emit DWARF debug info to the objects created:\n              0 = no debug info,\n@@ -716,8 +721,13 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n                                  matches.opt_str(\"dep-info\")\n                                         .map(|p| Path::new(p)));\n \n-    let print_metas = (matches.opt_present(\"crate-name\"),\n+    let print_metas = (matches.opt_present(\"print-crate-name\"),\n+                       matches.opt_present(\"print-file-name\") ||\n                        matches.opt_present(\"crate-file-name\"));\n+    if matches.opt_present(\"crate-file-name\") {\n+        early_warn(\"the --crate-file-name argument has been renamed to \\\n+                    --print-file-name\");\n+    }\n     let cg = build_codegen_options(matches);\n \n     let color = match matches.opt_str(\"color\").as_ref().map(|s| s.as_slice()) {\n@@ -749,6 +759,8 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         locs.push(location.to_string());\n     }\n \n+    let crate_name = matches.opt_str(\"crate-name\");\n+\n     Options {\n         crate_types: crate_types,\n         gc: gc,\n@@ -771,6 +783,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         cg: cg,\n         color: color,\n         externs: externs,\n+        crate_name: crate_name,\n     }\n }\n "}, {"sha": "cbbc8ebd8c875543c080a6b8bca5e420f83bad40", "filename": "src/librustc/driver/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Flibrustc%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Flibrustc%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fmod.rs?ref=41ed455db8cbde3cfff0d72e0ae383c20721b27a", "patch": "@@ -389,6 +389,11 @@ pub fn early_error(msg: &str) -> ! {\n     fail!(diagnostic::FatalError);\n }\n \n+pub fn early_warn(msg: &str) {\n+    let mut emitter = diagnostic::EmitterWriter::stderr(diagnostic::Auto);\n+    emitter.emit(None, msg, diagnostic::Warning);\n+}\n+\n pub fn list_metadata(sess: &Session, path: &Path,\n                      out: &mut io::Writer) -> io::IoResult<()> {\n     metadata::loader::list_file_metadata(sess.targ_cfg.os, path, out)"}, {"sha": "23d155fe23db33ede53de6780c652c98b4c59e83", "filename": "src/test/run-make/crate-data-smoke/Makefile", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile?ref=41ed455db8cbde3cfff0d72e0ae383c20721b27a", "patch": "@@ -1,9 +1,9 @@\n -include ../tools.mk\n \n all:\n-\t[ `$(RUSTC) --crate-name crate.rs` = \"foo\" ]\n-\t[ `$(RUSTC) --crate-file-name crate.rs` = \"foo\" ]\n-\t[ `$(RUSTC) --crate-file-name --crate-type=lib --test crate.rs` = \"foo\" ]\n-\t[ `$(RUSTC) --crate-file-name --test lib.rs` = \"mylib\" ]\n-\t$(RUSTC) --crate-file-name lib.rs\n-\t$(RUSTC) --crate-file-name rlib.rs\n+\t[ `$(RUSTC) --print-crate-name crate.rs` = \"foo\" ]\n+\t[ `$(RUSTC) --print-file-name crate.rs` = \"foo\" ]\n+\t[ `$(RUSTC) --print-file-name --crate-type=lib --test crate.rs` = \"foo\" ]\n+\t[ `$(RUSTC) --print-file-name --test lib.rs` = \"mylib\" ]\n+\t$(RUSTC) --print-file-name lib.rs\n+\t$(RUSTC) --print-file-name rlib.rs"}, {"sha": "1d1419997a21b4e71300c4467f20ce56caa65a0d", "filename": "src/test/run-make/manual-crate-name/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Ftest%2Frun-make%2Fmanual-crate-name%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Ftest%2Frun-make%2Fmanual-crate-name%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmanual-crate-name%2FMakefile?ref=41ed455db8cbde3cfff0d72e0ae383c20721b27a", "patch": "@@ -0,0 +1,5 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --crate-name foo bar.rs\n+\trm $(TMPDIR)/libfoo.rlib"}, {"sha": "04d3ae67207228d9bfe4d16f9873b5cd8bbe3f92", "filename": "src/test/run-make/manual-crate-name/bar.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Ftest%2Frun-make%2Fmanual-crate-name%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41ed455db8cbde3cfff0d72e0ae383c20721b27a/src%2Ftest%2Frun-make%2Fmanual-crate-name%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmanual-crate-name%2Fbar.rs?ref=41ed455db8cbde3cfff0d72e0ae383c20721b27a", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]"}]}