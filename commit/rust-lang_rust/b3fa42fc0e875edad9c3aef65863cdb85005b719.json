{"sha": "b3fa42fc0e875edad9c3aef65863cdb85005b719", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzZmE0MmZjMGU4NzVlZGFkOWMzYWVmNjU4NjNjZGI4NTAwNWI3MTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-27T05:02:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-04T01:12:24Z"}, "message": "with Validation MIR around drop being fixed, we can remove the hack working around this", "tree": {"sha": "94563113d8c3b43676d1d76595f7427a0d57bd21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94563113d8c3b43676d1d76595f7427a0d57bd21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3fa42fc0e875edad9c3aef65863cdb85005b719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3fa42fc0e875edad9c3aef65863cdb85005b719", "html_url": "https://github.com/rust-lang/rust/commit/b3fa42fc0e875edad9c3aef65863cdb85005b719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3fa42fc0e875edad9c3aef65863cdb85005b719/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd533a9ec60263959cbfb8fea8dcd14c6c7da409", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd533a9ec60263959cbfb8fea8dcd14c6c7da409", "html_url": "https://github.com/rust-lang/rust/commit/dd533a9ec60263959cbfb8fea8dcd14c6c7da409"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "3756fca2344f343352ebe99ab1775472060833aa", "filename": "src/librustc_mir/interpret/validation.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3fa42fc0e875edad9c3aef65863cdb85005b719/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3fa42fc0e875edad9c3aef65863cdb85005b719/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs?ref=b3fa42fc0e875edad9c3aef65863cdb85005b719", "patch": "@@ -11,7 +11,7 @@ use super::{\n     EvalError, EvalResult, EvalErrorKind,\n     EvalContext, DynamicLifetime,\n     AccessKind, LockInfo,\n-    PrimVal, Value,\n+    Value,\n     Lvalue, LvalueExtra,\n     Machine,\n };\n@@ -181,16 +181,11 @@ std::sync::atomic::AtomicBool::get_mut$|\\\n         // HACK: For now, bail out if we hit a dead local during recovery (can happen because sometimes we have\n         // StorageDead before EndRegion).\n         // TODO: We should rather fix the MIR.\n-        // HACK: Releasing on dead/undef local variables is a NOP.  This can happen because of releases being added\n-        // before drop elaboration.\n-        // TODO: Fix the MIR so that these releases do not happen.\n         match query.lval {\n             Lvalue::Local { frame, local } => {\n                 let res = self.stack[frame].get_local(local);\n                 match (res, mode) {\n-                    (Err(EvalError{ kind: EvalErrorKind::DeadLocal, ..}), ValidationMode::Recover(_)) |\n-                    (Err(EvalError{ kind: EvalErrorKind::DeadLocal, ..}), ValidationMode::Release) |\n-                    (Ok(Value::ByVal(PrimVal::Undef)), ValidationMode::Release) => {\n+                    (Err(EvalError{ kind: EvalErrorKind::DeadLocal, ..}), ValidationMode::Recover(_)) => {\n                         return Ok(());\n                     }\n                     _ => {},"}]}