{"sha": "c8308c92b6a77385bf9b45da3ce02ee271c567c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MzA4YzkyYjZhNzczODViZjliNDVkYTNjZTAyZWUyNzFjNTY3Yzk=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-31T07:18:42Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-31T07:18:42Z"}, "message": "Merge #3378\n\n3378: Fix lint_without_lint_pass r=phansch a=mikerite\n\n\n\nCo-authored-by: Michael Wright <mikerite@lavabit.com>\nCo-authored-by: flip1995 <hello@philkrones.com>", "tree": {"sha": "eb018e1028638d489b02ef11118d0b5eb7f469b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb018e1028638d489b02ef11118d0b5eb7f469b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8308c92b6a77385bf9b45da3ce02ee271c567c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8308c92b6a77385bf9b45da3ce02ee271c567c9", "html_url": "https://github.com/rust-lang/rust/commit/c8308c92b6a77385bf9b45da3ce02ee271c567c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8308c92b6a77385bf9b45da3ce02ee271c567c9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "b144c7f35d854f5dffe088f7c3f43de26b7e1e75", "url": "https://api.github.com/repos/rust-lang/rust/commits/b144c7f35d854f5dffe088f7c3f43de26b7e1e75", "html_url": "https://github.com/rust-lang/rust/commit/b144c7f35d854f5dffe088f7c3f43de26b7e1e75"}, {"sha": "3d84ffb5eca1b1ca5f7fee0448c197c06247714a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d84ffb5eca1b1ca5f7fee0448c197c06247714a", "html_url": "https://github.com/rust-lang/rust/commit/3d84ffb5eca1b1ca5f7fee0448c197c06247714a"}], "stats": {"total": 93, "additions": 74, "deletions": 19}, "files": [{"sha": "207dc40fa1d7d240b69c142956f94256e6c63ad0", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=c8308c92b6a77385bf9b45da3ce02ee271c567c9", "patch": "@@ -48,6 +48,7 @@ use toml;\n \n // Currently, categories \"style\", \"correctness\", \"complexity\" and \"perf\" are enabled by default,\n // as said in the README.md of this repository. If this changes, please update README.md.\n+#[macro_export]\n macro_rules! declare_clippy_lint {\n     { pub $name:tt, style, $description:tt } => {\n         declare_tool_lint! { pub clippy::$name, Warn, $description, report_in_external_macro: true }"}, {"sha": "145faf0b6b650f0d9d6489c3ea76baefa6c9a9e9", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=c8308c92b6a77385bf9b45da3ce02ee271c567c9", "patch": "@@ -329,7 +329,8 @@ impl LintPass for LiteralDigitGrouping {\n         lint_array!(\n             UNREADABLE_LITERAL,\n             INCONSISTENT_DIGIT_GROUPING,\n-            LARGE_DIGIT_GROUPS\n+            LARGE_DIGIT_GROUPS,\n+            MISTYPED_LITERAL_SUFFIXES,\n         )\n     }\n }"}, {"sha": "879157ec8a47f5bd1c37ca466ed54c24587d9b71", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=c8308c92b6a77385bf9b45da3ce02ee271c567c9", "patch": "@@ -9,12 +9,13 @@\n \n \n use crate::utils::{\n-    match_qpath, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n+    match_def_path, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n };\n use if_chain::if_chain;\n use crate::rustc::hir;\n use crate::rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use crate::rustc::hir::*;\n+use crate::rustc::hir::def::Def;\n use crate::rustc::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n use crate::rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -160,15 +161,21 @@ impl LintPass for LintWithoutLintPass {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LintWithoutLintPass {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n-        if let hir::ItemKind::Static(ref ty, MutImmutable, body_id) = item.node {\n-            if is_lint_ref_type(ty) {\n+        if let hir::ItemKind::Static(ref ty, MutImmutable, _) = item.node {\n+            if is_lint_ref_type(cx, ty) {\n                 self.declared_lints.insert(item.name, item.span);\n-            } else if is_lint_array_type(ty) && item.name == \"ARRAY\" {\n-                if let VisibilityKind::Inherited = item.vis.node {\n+            }\n+        } else if let hir::ItemKind::Impl(.., Some(ref trait_ref), _, ref impl_item_refs) = item.node {\n+            if_chain! {\n+                if let hir::TraitRef{path, ..} = trait_ref;\n+                if let Def::Trait(def_id) = path.def;\n+                if match_def_path(cx.tcx, def_id, &paths::LINT_PASS);\n+                then {\n                     let mut collector = LintCollector {\n                         output: &mut self.registered_lints,\n                         cx,\n                     };\n+                    let body_id = cx.tcx.hir.body_owned_by(impl_item_refs[0].id.node_id);\n                     collector.visit_expr(&cx.tcx.hir.body(body_id).value);\n                 }\n             }\n@@ -203,28 +210,22 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LintWithoutLintPass {\n     }\n }\n \n-fn is_lint_ref_type(ty: &Ty) -> bool {\n+fn is_lint_ref_type<'tcx>(cx: &LateContext<'_, 'tcx>, ty: &Ty) -> bool {\n     if let TyKind::Rptr(\n         _,\n         MutTy {\n             ty: ref inner,\n             mutbl: MutImmutable,\n         },\n-    ) = ty.node\n-    {\n+    ) = ty.node {\n         if let TyKind::Path(ref path) = inner.node {\n-            return match_qpath(path, &paths::LINT);\n+            if let Def::Struct(def_id) = cx.tables.qpath_def(path, inner.hir_id) {\n+                return match_def_path(cx.tcx, def_id, &paths::LINT);\n+            }\n         }\n     }\n-    false\n-}\n \n-fn is_lint_array_type(ty: &Ty) -> bool {\n-    if let TyKind::Path(ref path) = ty.node {\n-        match_qpath(path, &paths::LINT_ARRAY)\n-    } else {\n-        false\n-    }\n+    false\n }\n \n struct LintCollector<'a, 'tcx: 'a> {"}, {"sha": "107a8eea15d761f20b43a85aed135be42c777037", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8308c92b6a77385bf9b45da3ce02ee271c567c9/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=c8308c92b6a77385bf9b45da3ce02ee271c567c9", "patch": "@@ -56,7 +56,7 @@ pub const ITERATOR: [&str; 4] = [\"core\", \"iter\", \"iterator\", \"Iterator\"];\n pub const LATE_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"LateContext\"];\n pub const LINKED_LIST: [&str; 4] = [\"alloc\", \"collections\", \"linked_list\", \"LinkedList\"];\n pub const LINT: [&str; 3] = [\"rustc\", \"lint\", \"Lint\"];\n-pub const LINT_ARRAY: [&str; 3] = [\"rustc\", \"lint\", \"LintArray\"];\n+pub const LINT_PASS: [&str; 3] = [\"rustc\", \"lint\", \"LintPass\"];\n pub const MEM_DISCRIMINANT: [&str; 3] = [\"core\", \"mem\", \"discriminant\"];\n pub const MEM_FORGET: [&str; 3] = [\"core\", \"mem\", \"forget\"];\n pub const MEM_REPLACE: [&str; 3] = [\"core\", \"mem\", \"replace\"];"}, {"sha": "c7e11840a37cc2f55626745dec70b4c31db60342", "filename": "tests/ui/lint_without_lint_pass.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c8308c92b6a77385bf9b45da3ce02ee271c567c9/tests%2Fui%2Flint_without_lint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8308c92b6a77385bf9b45da3ce02ee271c567c9/tests%2Fui%2Flint_without_lint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.rs?ref=c8308c92b6a77385bf9b45da3ce02ee271c567c9", "patch": "@@ -0,0 +1,32 @@\n+#![deny(clippy::internal)]\n+\n+#![feature(rustc_private)]\n+\n+#[macro_use]\n+extern crate rustc;\n+use rustc::lint;\n+\n+#[macro_use]\n+extern crate clippy_lints;\n+\n+declare_clippy_lint! {\n+    pub TEST_LINT,\n+    correctness,\n+    \"\"\n+}\n+\n+declare_clippy_lint! {\n+    pub TEST_LINT_REGISTERED,\n+    correctness,\n+    \"\"\n+}\n+\n+pub struct Pass;\n+impl lint::LintPass for Pass {\n+    fn get_lints(&self) -> lint::LintArray {\n+        lint_array!(TEST_LINT_REGISTERED)\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "65d1283a6e34052fc7eea7a7061244546ce3d8f6", "filename": "tests/ui/lint_without_lint_pass.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c8308c92b6a77385bf9b45da3ce02ee271c567c9/tests%2Fui%2Flint_without_lint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c8308c92b6a77385bf9b45da3ce02ee271c567c9/tests%2Fui%2Flint_without_lint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.stderr?ref=c8308c92b6a77385bf9b45da3ce02ee271c567c9", "patch": "@@ -0,0 +1,20 @@\n+error: the lint `TEST_LINT` is not added to any `LintPass`\n+  --> $DIR/lint_without_lint_pass.rs:12:1\n+   |\n+12 | / declare_clippy_lint! {\n+13 | |     pub TEST_LINT,\n+14 | |     correctness,\n+15 | |     \"\"\n+16 | | }\n+   | |_^\n+   |\n+note: lint level defined here\n+  --> $DIR/lint_without_lint_pass.rs:1:9\n+   |\n+1  | #![deny(clippy::internal)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: #[deny(clippy::lint_without_lint_pass)] implied by #[deny(clippy::internal)]\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}