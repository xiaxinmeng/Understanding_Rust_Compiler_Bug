{"sha": "390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MGMzY2VlNmE4ZTBjMDU1MGViNjIxM2MwZTdlNWY3NGM0ZmJjMzE=", "commit": {"author": {"name": "rleungx", "email": "rleungx@gmail.com", "date": "2018-05-03T11:09:34Z"}, "committer": {"name": "rleungx", "email": "rleungx@gmail.com", "date": "2018-05-03T11:12:39Z"}, "message": "check if the token is a lifetime before parsing", "tree": {"sha": "110c99e429502761762734846a6c91488a67ef46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/110c99e429502761762734846a6c91488a67ef46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31", "html_url": "https://github.com/rust-lang/rust/commit/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31/comments", "author": {"login": "rleungx", "id": 35896542, "node_id": "MDQ6VXNlcjM1ODk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/35896542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rleungx", "html_url": "https://github.com/rleungx", "followers_url": "https://api.github.com/users/rleungx/followers", "following_url": "https://api.github.com/users/rleungx/following{/other_user}", "gists_url": "https://api.github.com/users/rleungx/gists{/gist_id}", "starred_url": "https://api.github.com/users/rleungx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rleungx/subscriptions", "organizations_url": "https://api.github.com/users/rleungx/orgs", "repos_url": "https://api.github.com/users/rleungx/repos", "events_url": "https://api.github.com/users/rleungx/events{/privacy}", "received_events_url": "https://api.github.com/users/rleungx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rleungx", "id": 35896542, "node_id": "MDQ6VXNlcjM1ODk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/35896542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rleungx", "html_url": "https://github.com/rleungx", "followers_url": "https://api.github.com/users/rleungx/followers", "following_url": "https://api.github.com/users/rleungx/following{/other_user}", "gists_url": "https://api.github.com/users/rleungx/gists{/gist_id}", "starred_url": "https://api.github.com/users/rleungx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rleungx/subscriptions", "organizations_url": "https://api.github.com/users/rleungx/orgs", "repos_url": "https://api.github.com/users/rleungx/repos", "events_url": "https://api.github.com/users/rleungx/events{/privacy}", "received_events_url": "https://api.github.com/users/rleungx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "698b956a9fca9688632d617dd6d73cae834237a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/698b956a9fca9688632d617dd6d73cae834237a3", "html_url": "https://github.com/rust-lang/rust/commit/698b956a9fca9688632d617dd6d73cae834237a3"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "71634ada89458012b70f6b307c5f7dca3bf33ddc", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31", "patch": "@@ -835,7 +835,13 @@ fn parse_nt<'a>(p: &mut Parser<'a>, sp: Span, name: &str) -> Nonterminal {\n         \"path\" => token::NtPath(panictry!(p.parse_path_common(PathStyle::Type, false))),\n         \"meta\" => token::NtMeta(panictry!(p.parse_meta_item())),\n         \"vis\" => token::NtVis(panictry!(p.parse_visibility(true))),\n-        \"lifetime\" => token::NtLifetime(p.expect_lifetime().ident),\n+        \"lifetime\" => if p.check_lifetime() {\n+            token::NtLifetime(p.expect_lifetime().ident)\n+        } else {\n+            let token_str = pprust::token_to_string(&p.token);\n+            p.fatal(&format!(\"expected a lifetime, found `{}`\", &token_str)).emit();\n+            FatalError.raise();\n+        }\n         // this is not supposed to happen, since it has been checked\n         // when compiling the macro.\n         _ => p.span_bug(sp, \"invalid fragment specifier\"),"}, {"sha": "bbee03bb0d5c5542b02342e41c00d300558fdd2f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31", "patch": "@@ -2042,7 +2042,7 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n-    fn check_lifetime(&mut self) -> bool {\n+    pub fn check_lifetime(&mut self) -> bool {\n         self.expected_tokens.push(TokenType::Lifetime);\n         self.token.is_lifetime()\n     }"}, {"sha": "a2706e83229e5bfdddee3a008f113ef870e2d288", "filename": "src/test/compile-fail/macro-non-lifetime.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31/src%2Ftest%2Fcompile-fail%2Fmacro-non-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31/src%2Ftest%2Fcompile-fail%2Fmacro-non-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-non-lifetime.rs?ref=390c3cee6a8e0c0550eb6213c0e7e5f74c4fbc31", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test for issue #50381: non-lifetime passed to :lifetime.\n+\n+#![feature(macro_lifetime_matcher)]\n+\n+macro_rules! m { ($x:lifetime) => { } }\n+\n+fn main() {\n+    m!(a);\n+    //~^ ERROR expected a lifetime, found `a`\n+}"}]}