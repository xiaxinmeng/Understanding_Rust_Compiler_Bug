{"sha": "7b9553a7039a5307b8c436d4128e08b74f75c55b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiOTU1M2E3MDM5YTUzMDdiOGM0MzZkNDEyOGUwOGI3NGY3NWM1NWI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-24T19:46:18Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-24T19:46:18Z"}, "message": "Don't omit methods with self from path completion", "tree": {"sha": "d45970bbfa388a83dfef0fb63f3257d5b7a0ca77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d45970bbfa388a83dfef0fb63f3257d5b7a0ca77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b9553a7039a5307b8c436d4128e08b74f75c55b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b9553a7039a5307b8c436d4128e08b74f75c55b", "html_url": "https://github.com/rust-lang/rust/commit/7b9553a7039a5307b8c436d4128e08b74f75c55b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b9553a7039a5307b8c436d4128e08b74f75c55b/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d97667f8dd467e7382885fcae40bcdbac63ae4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d97667f8dd467e7382885fcae40bcdbac63ae4f", "html_url": "https://github.com/rust-lang/rust/commit/5d97667f8dd467e7382885fcae40bcdbac63ae4f"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "5a5139e14c293cc2ba5e3f0c14820bf19842697e", "filename": "crates/ra_ide/src/completion/complete_qualified_path.rs", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7b9553a7039a5307b8c436d4128e08b74f75c55b/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b9553a7039a5307b8c436d4128e08b74f75c55b/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs?ref=7b9553a7039a5307b8c436d4128e08b74f75c55b", "patch": "@@ -57,9 +57,7 @@ pub(super) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n                     }\n                     match item {\n                         hir::AssocItem::Function(func) => {\n-                            if !func.has_self_param(ctx.db) {\n-                                acc.add_function(ctx, func, None);\n-                            }\n+                            acc.add_function(ctx, func, None);\n                         }\n                         hir::AssocItem::Const(ct) => acc.add_const(ctx, ct),\n                         hir::AssocItem::TypeAlias(ty) => acc.add_type_alias(ctx, ty),\n@@ -86,9 +84,7 @@ pub(super) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n                 }\n                 match item {\n                     hir::AssocItem::Function(func) => {\n-                        if !func.has_self_param(ctx.db) {\n-                            acc.add_function(ctx, func, None);\n-                        }\n+                        acc.add_function(ctx, func, None);\n                     }\n                     hir::AssocItem::Const(ct) => acc.add_const(ctx, ct),\n                     hir::AssocItem::TypeAlias(ty) => acc.add_type_alias(ctx, ty),\n@@ -482,6 +478,42 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn completes_struct_associated_method_with_self() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                /// A Struct\n+                struct S;\n+\n+                impl S {\n+                    /// An associated method\n+                    fn m(&self) { }\n+                }\n+\n+                fn foo() { let _ = S::<|> }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"m()\",\n+                source_range: [105; 105),\n+                delete: [105; 105),\n+                insert: \"m()$0\",\n+                kind: Method,\n+                lookup: \"m\",\n+                detail: \"fn m(&self)\",\n+                documentation: Documentation(\n+                    \"An associated method\",\n+                ),\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn completes_struct_associated_const() {\n         assert_debug_snapshot!("}]}