{"sha": "ae81241eae061ee9fb2af798b109508c27f208f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlODEyNDFlYWUwNjFlZTlmYjJhZjc5OGIxMDk1MDhjMjdmMjA4ZjE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-18T11:09:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-18T11:09:02Z"}, "message": "Rollup merge of #68597 - ollie27:skip_nth_last, r=Amanieu\n\nSimplify `Skip::nth` and `Skip::last` implementations\n\nThe main improvement is to make `last` no longer recursive.", "tree": {"sha": "069930e32fd1cce1611509e0ca9e5964bef3baaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/069930e32fd1cce1611509e0ca9e5964bef3baaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae81241eae061ee9fb2af798b109508c27f208f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeS8XOCRBK7hj4Ov3rIwAAdHIIADPU+jb6vZA+yYtL1RvhWaYc\nO0+s5LewidxtQJvDQ6H9HYxY6uAwVrkS/RW4cOI7khEnbVWdR6hFbglV59m2lIyX\ngCY3IF9mkhdmwmwapLc9CaYHIanc7mJdbGHLBouum6I15nVXC+Q9atyBIDEQYL5L\nfFv+fVEr33D2JS8FTvBE5leizVpzAwgil6t8TkgNghwGSdE5e+1rU9hDUxJv2s/c\nncRmCT76pt9+lg/hy3o9YgNmX0XC4KhaLTH8rsESKRPipvzh/1M5D9UIdJ+E27xn\nafjJypV0kI5TwF05Ein7HfsptahqwtqXSEu5v7rQZG9dwrPQK8tT2X8cDj6nLR0=\n=ZDDn\n-----END PGP SIGNATURE-----\n", "payload": "tree 069930e32fd1cce1611509e0ca9e5964bef3baaa\nparent 6c4f8598b916087e2758d8c14c249ee5fa4fa0d5\nparent 84f3356e0dffc36f57d9be7902822db5d362e24f\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1582024142 +0900\ncommitter GitHub <noreply@github.com> 1582024142 +0900\n\nRollup merge of #68597 - ollie27:skip_nth_last, r=Amanieu\n\nSimplify `Skip::nth` and `Skip::last` implementations\n\nThe main improvement is to make `last` no longer recursive.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae81241eae061ee9fb2af798b109508c27f208f1", "html_url": "https://github.com/rust-lang/rust/commit/ae81241eae061ee9fb2af798b109508c27f208f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae81241eae061ee9fb2af798b109508c27f208f1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c4f8598b916087e2758d8c14c249ee5fa4fa0d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4f8598b916087e2758d8c14c249ee5fa4fa0d5", "html_url": "https://github.com/rust-lang/rust/commit/6c4f8598b916087e2758d8c14c249ee5fa4fa0d5"}, {"sha": "84f3356e0dffc36f57d9be7902822db5d362e24f", "url": "https://api.github.com/repos/rust-lang/rust/commits/84f3356e0dffc36f57d9be7902822db5d362e24f", "html_url": "https://github.com/rust-lang/rust/commit/84f3356e0dffc36f57d9be7902822db5d362e24f"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "58606531a1acee91d4a98f07ee89bc56d51b63d7", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ae81241eae061ee9fb2af798b109508c27f208f1/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae81241eae061ee9fb2af798b109508c27f208f1/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=ae81241eae061ee9fb2af798b109508c27f208f1", "patch": "@@ -1890,17 +1890,15 @@ where\n     #[inline]\n     fn nth(&mut self, n: usize) -> Option<I::Item> {\n         // Can't just add n + self.n due to overflow.\n-        if self.n == 0 {\n-            self.iter.nth(n)\n-        } else {\n+        if self.n > 0 {\n             let to_skip = self.n;\n             self.n = 0;\n             // nth(n) skips n+1\n             if self.iter.nth(to_skip - 1).is_none() {\n                 return None;\n             }\n-            self.iter.nth(n)\n         }\n+        self.iter.nth(n)\n     }\n \n     #[inline]\n@@ -1916,17 +1914,13 @@ where\n \n     #[inline]\n     fn last(mut self) -> Option<I::Item> {\n-        if self.n == 0 {\n-            self.iter.last()\n-        } else {\n-            let next = self.next();\n-            if next.is_some() {\n-                // recurse. n should be 0.\n-                self.last().or(next)\n-            } else {\n-                None\n+        if self.n > 0 {\n+            // nth(n) skips n+1\n+            if self.iter.nth(self.n - 1).is_none() {\n+                return None;\n             }\n         }\n+        self.iter.last()\n     }\n \n     #[inline]"}]}