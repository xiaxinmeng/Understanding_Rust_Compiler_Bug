{"sha": "6effb2606269c25d95fa77eba863fe594e3cca23", "node_id": "C_kwDOAAsO6NoAKDZlZmZiMjYwNjI2OWMyNWQ5NWZhNzdlYmE4NjNmZTU5NGUzY2NhMjM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-08T09:44:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-08T09:44:22Z"}, "message": "Auto merge of #14095 - dqkqd:master, r=Veykril\n\nAdd postfix completion for `unsafe`.\n\nFix #13779.\n\nHi, this is my first PR. Please tell me if there is anything I should do.", "tree": {"sha": "3a6e512c3b70394affff53ce5364b05446bdb3a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a6e512c3b70394affff53ce5364b05446bdb3a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6effb2606269c25d95fa77eba863fe594e3cca23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6effb2606269c25d95fa77eba863fe594e3cca23", "html_url": "https://github.com/rust-lang/rust/commit/6effb2606269c25d95fa77eba863fe594e3cca23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6effb2606269c25d95fa77eba863fe594e3cca23/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a05ce5a3e75fe642826e9e244aecaf599e95ed92", "url": "https://api.github.com/repos/rust-lang/rust/commits/a05ce5a3e75fe642826e9e244aecaf599e95ed92", "html_url": "https://github.com/rust-lang/rust/commit/a05ce5a3e75fe642826e9e244aecaf599e95ed92"}, {"sha": "2666e6eda8220af036973881a35bdc2d85d6d8a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2666e6eda8220af036973881a35bdc2d85d6d8a2", "html_url": "https://github.com/rust-lang/rust/commit/2666e6eda8220af036973881a35bdc2d85d6d8a2"}], "stats": {"total": 240, "additions": 156, "deletions": 84}, "files": [{"sha": "b9ab2afca2b59da81b8b0589eb5b2599f2029e1b", "filename": "crates/ide-completion/src/completions/keyword.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=6effb2606269c25d95fa77eba863fe594e3cca23", "patch": "@@ -86,6 +86,7 @@ fn foo(a: A) { a.$0 }\n                 sn match                  match expr {}\n                 sn ref                    &expr\n                 sn refm                   &mut expr\n+                sn unsafe                 unsafe {}\n             \"#]],\n         );\n \n@@ -110,6 +111,7 @@ fn foo() {\n                 sn match                  match expr {}\n                 sn ref                    &expr\n                 sn refm                   &mut expr\n+                sn unsafe                 unsafe {}\n             \"#]],\n         );\n     }\n@@ -136,6 +138,7 @@ fn foo(a: A) { a.$0 }\n                 sn match                  match expr {}\n                 sn ref                    &expr\n                 sn refm                   &mut expr\n+                sn unsafe                 unsafe {}\n             \"#]],\n         );\n     }"}, {"sha": "90c523735da80e505bed930d0eeb409990116203", "filename": "crates/ide-completion/src/completions/postfix.rs", "status": "modified", "additions": 107, "deletions": 44, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=6effb2606269c25d95fa77eba863fe594e3cca23", "patch": "@@ -6,7 +6,7 @@ use hir::{Documentation, HasAttrs};\n use ide_db::{imports::insert_use::ImportScope, ty_filter::TryEnum, SnippetCap};\n use syntax::{\n     ast::{self, make, AstNode, AstToken},\n-    SyntaxKind::{EXPR_STMT, STMT_LIST},\n+    SyntaxKind::{BLOCK_EXPR, EXPR_STMT, FOR_EXPR, IF_EXPR, LOOP_EXPR, STMT_LIST, WHILE_EXPR},\n     TextRange, TextSize,\n };\n use text_edit::TextEdit;\n@@ -123,6 +123,22 @@ pub(crate) fn complete_postfix(\n     postfix_snippet(\"ref\", \"&expr\", &format!(\"&{receiver_text}\")).add_to(acc);\n     postfix_snippet(\"refm\", \"&mut expr\", &format!(\"&mut {receiver_text}\")).add_to(acc);\n \n+    let mut unsafe_should_be_wrapped = true;\n+    if dot_receiver.syntax().kind() == BLOCK_EXPR {\n+        unsafe_should_be_wrapped = false;\n+        if let Some(parent) = dot_receiver.syntax().parent() {\n+            if matches!(parent.kind(), IF_EXPR | WHILE_EXPR | LOOP_EXPR | FOR_EXPR) {\n+                unsafe_should_be_wrapped = true;\n+            }\n+        }\n+    };\n+    let unsafe_completion_string = if unsafe_should_be_wrapped {\n+        format!(\"unsafe {{ {receiver_text} }}\")\n+    } else {\n+        format!(\"unsafe {receiver_text}\")\n+    };\n+    postfix_snippet(\"unsafe\", \"unsafe {}\", &unsafe_completion_string).add_to(acc);\n+\n     // The rest of the postfix completions create an expression that moves an argument,\n     // so it's better to consider references now to avoid breaking the compilation\n \n@@ -329,18 +345,19 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                sn box   Box::new(expr)\n-                sn call  function(expr)\n-                sn dbg   dbg!(expr)\n-                sn dbgr  dbg!(&expr)\n-                sn if    if expr {}\n-                sn let   let\n-                sn letm  let mut\n-                sn match match expr {}\n-                sn not   !expr\n-                sn ref   &expr\n-                sn refm  &mut expr\n-                sn while while expr {}\n+                sn box    Box::new(expr)\n+                sn call   function(expr)\n+                sn dbg    dbg!(expr)\n+                sn dbgr   dbg!(&expr)\n+                sn if     if expr {}\n+                sn let    let\n+                sn letm   let mut\n+                sn match  match expr {}\n+                sn not    !expr\n+                sn ref    &expr\n+                sn refm   &mut expr\n+                sn unsafe unsafe {}\n+                sn while  while expr {}\n             \"#]],\n         );\n     }\n@@ -359,16 +376,17 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                sn box   Box::new(expr)\n-                sn call  function(expr)\n-                sn dbg   dbg!(expr)\n-                sn dbgr  dbg!(&expr)\n-                sn if    if expr {}\n-                sn match match expr {}\n-                sn not   !expr\n-                sn ref   &expr\n-                sn refm  &mut expr\n-                sn while while expr {}\n+                sn box    Box::new(expr)\n+                sn call   function(expr)\n+                sn dbg    dbg!(expr)\n+                sn dbgr   dbg!(&expr)\n+                sn if     if expr {}\n+                sn match  match expr {}\n+                sn not    !expr\n+                sn ref    &expr\n+                sn refm   &mut expr\n+                sn unsafe unsafe {}\n+                sn while  while expr {}\n             \"#]],\n         );\n     }\n@@ -383,15 +401,16 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                sn box   Box::new(expr)\n-                sn call  function(expr)\n-                sn dbg   dbg!(expr)\n-                sn dbgr  dbg!(&expr)\n-                sn let   let\n-                sn letm  let mut\n-                sn match match expr {}\n-                sn ref   &expr\n-                sn refm  &mut expr\n+                sn box    Box::new(expr)\n+                sn call   function(expr)\n+                sn dbg    dbg!(expr)\n+                sn dbgr   dbg!(&expr)\n+                sn let    let\n+                sn letm   let mut\n+                sn match  match expr {}\n+                sn ref    &expr\n+                sn refm   &mut expr\n+                sn unsafe unsafe {}\n             \"#]],\n         )\n     }\n@@ -406,18 +425,19 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                sn box   Box::new(expr)\n-                sn call  function(expr)\n-                sn dbg   dbg!(expr)\n-                sn dbgr  dbg!(&expr)\n-                sn if    if expr {}\n-                sn let   let\n-                sn letm  let mut\n-                sn match match expr {}\n-                sn not   !expr\n-                sn ref   &expr\n-                sn refm  &mut expr\n-                sn while while expr {}\n+                sn box    Box::new(expr)\n+                sn call   function(expr)\n+                sn dbg    dbg!(expr)\n+                sn dbgr   dbg!(&expr)\n+                sn if     if expr {}\n+                sn let    let\n+                sn letm   let mut\n+                sn match  match expr {}\n+                sn not    !expr\n+                sn ref    &expr\n+                sn refm   &mut expr\n+                sn unsafe unsafe {}\n+                sn while  while expr {}\n             \"#]],\n         );\n     }\n@@ -517,6 +537,49 @@ fn main() {\n         )\n     }\n \n+    #[test]\n+    fn postfix_completion_for_unsafe() {\n+        check_edit(\"unsafe\", r#\"fn main() { foo.$0 }\"#, r#\"fn main() { unsafe { foo } }\"#);\n+        check_edit(\"unsafe\", r#\"fn main() { { foo }.$0 }\"#, r#\"fn main() { unsafe { foo } }\"#);\n+        check_edit(\n+            \"unsafe\",\n+            r#\"fn main() { if x { foo }.$0 }\"#,\n+            r#\"fn main() { unsafe { if x { foo } } }\"#,\n+        );\n+        check_edit(\n+            \"unsafe\",\n+            r#\"fn main() { loop { foo }.$0 }\"#,\n+            r#\"fn main() { unsafe { loop { foo } } }\"#,\n+        );\n+        check_edit(\n+            \"unsafe\",\n+            r#\"fn main() { if true {}.$0 }\"#,\n+            r#\"fn main() { unsafe { if true {} } }\"#,\n+        );\n+        check_edit(\n+            \"unsafe\",\n+            r#\"fn main() { while true {}.$0 }\"#,\n+            r#\"fn main() { unsafe { while true {} } }\"#,\n+        );\n+        check_edit(\n+            \"unsafe\",\n+            r#\"fn main() { for i in 0..10 {}.$0 }\"#,\n+            r#\"fn main() { unsafe { for i in 0..10 {} } }\"#,\n+        );\n+        check_edit(\n+            \"unsafe\",\n+            r#\"fn main() { let x = if true {1} else {2}.$0 }\"#,\n+            r#\"fn main() { let x = unsafe { if true {1} else {2} } }\"#,\n+        );\n+\n+        // completion will not be triggered\n+        check_edit(\n+            \"unsafe\",\n+            r#\"fn main() { let x = true else {panic!()}.$0}\"#,\n+            r#\"fn main() { let x = true else {panic!()}.unsafe}\"#,\n+        );\n+    }\n+\n     #[test]\n     fn custom_postfix_completion() {\n         let config = CompletionConfig {"}, {"sha": "d6476c10258ecde9a428c954307541d7416f4545", "filename": "crates/ide-completion/src/render.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender.rs?ref=6effb2606269c25d95fa77eba863fe594e3cca23", "patch": "@@ -1691,6 +1691,7 @@ fn main() {\n                 sn while []\n                 sn ref []\n                 sn refm []\n+                sn unsafe []\n                 sn match []\n                 sn box []\n                 sn dbg []\n@@ -1718,6 +1719,7 @@ fn main() {\n                 me f() []\n                 sn ref []\n                 sn refm []\n+                sn unsafe []\n                 sn match []\n                 sn box []\n                 sn dbg []"}, {"sha": "92ea4d15b85128ff8300aa9f80c012071bfbaf43", "filename": "crates/ide-completion/src/tests/proc_macros.rs", "status": "modified", "additions": 44, "deletions": 40, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Ftests%2Fproc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6effb2606269c25d95fa77eba863fe594e3cca23/crates%2Fide-completion%2Fsrc%2Ftests%2Fproc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fproc_macros.rs?ref=6effb2606269c25d95fa77eba863fe594e3cca23", "patch": "@@ -24,16 +24,17 @@ fn main() {\n }\n \"#,\n         expect![[r#\"\n-            me foo() fn(&self)\n-            sn box   Box::new(expr)\n-            sn call  function(expr)\n-            sn dbg   dbg!(expr)\n-            sn dbgr  dbg!(&expr)\n-            sn let   let\n-            sn letm  let mut\n-            sn match match expr {}\n-            sn ref   &expr\n-            sn refm  &mut expr\n+            me foo()  fn(&self)\n+            sn box    Box::new(expr)\n+            sn call   function(expr)\n+            sn dbg    dbg!(expr)\n+            sn dbgr   dbg!(&expr)\n+            sn let    let\n+            sn letm   let mut\n+            sn match  match expr {}\n+            sn ref    &expr\n+            sn refm   &mut expr\n+            sn unsafe unsafe {}\n         \"#]],\n     )\n }\n@@ -54,16 +55,17 @@ fn main() {\n }\n \"#,\n         expect![[r#\"\n-            me foo() fn(&self)\n-            sn box   Box::new(expr)\n-            sn call  function(expr)\n-            sn dbg   dbg!(expr)\n-            sn dbgr  dbg!(&expr)\n-            sn let   let\n-            sn letm  let mut\n-            sn match match expr {}\n-            sn ref   &expr\n-            sn refm  &mut expr\n+            me foo()  fn(&self)\n+            sn box    Box::new(expr)\n+            sn call   function(expr)\n+            sn dbg    dbg!(expr)\n+            sn dbgr   dbg!(&expr)\n+            sn let    let\n+            sn letm   let mut\n+            sn match  match expr {}\n+            sn ref    &expr\n+            sn refm   &mut expr\n+            sn unsafe unsafe {}\n         \"#]],\n     )\n }\n@@ -86,16 +88,17 @@ impl Foo {\n fn main() {}\n \"#,\n         expect![[r#\"\n-            me foo() fn(&self)\n-            sn box   Box::new(expr)\n-            sn call  function(expr)\n-            sn dbg   dbg!(expr)\n-            sn dbgr  dbg!(&expr)\n-            sn let   let\n-            sn letm  let mut\n-            sn match match expr {}\n-            sn ref   &expr\n-            sn refm  &mut expr\n+            me foo()  fn(&self)\n+            sn box    Box::new(expr)\n+            sn call   function(expr)\n+            sn dbg    dbg!(expr)\n+            sn dbgr   dbg!(&expr)\n+            sn let    let\n+            sn letm   let mut\n+            sn match  match expr {}\n+            sn ref    &expr\n+            sn refm   &mut expr\n+            sn unsafe unsafe {}\n         \"#]],\n     )\n }\n@@ -118,16 +121,17 @@ impl Foo {\n fn main() {}\n \"#,\n         expect![[r#\"\n-            me foo() fn(&self)\n-            sn box   Box::new(expr)\n-            sn call  function(expr)\n-            sn dbg   dbg!(expr)\n-            sn dbgr  dbg!(&expr)\n-            sn let   let\n-            sn letm  let mut\n-            sn match match expr {}\n-            sn ref   &expr\n-            sn refm  &mut expr\n+            me foo()  fn(&self)\n+            sn box    Box::new(expr)\n+            sn call   function(expr)\n+            sn dbg    dbg!(expr)\n+            sn dbgr   dbg!(&expr)\n+            sn let    let\n+            sn letm   let mut\n+            sn match  match expr {}\n+            sn ref    &expr\n+            sn refm   &mut expr\n+            sn unsafe unsafe {}\n         \"#]],\n     )\n }"}]}