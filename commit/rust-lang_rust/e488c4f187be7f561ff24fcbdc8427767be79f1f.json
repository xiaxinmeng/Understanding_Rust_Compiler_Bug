{"sha": "e488c4f187be7f561ff24fcbdc8427767be79f1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ODhjNGYxODdiZTdmNTYxZmYyNGZjYmRjODQyNzc2N2JlNzlmMWY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-06T23:17:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-06T23:17:45Z"}, "message": "Rollup merge of #76273 - CraftSpider:master, r=matklad\n\nMove some Vec UI tests into alloc unit tests\n\nA bit of work towards #76268, makes a number of the Vec UI tests that are simply running code into unit tests. Ensured that they are being run when testing liballoc locally.", "tree": {"sha": "987d83025304a2d36ee86467ca272e52fb651573", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/987d83025304a2d36ee86467ca272e52fb651573"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e488c4f187be7f561ff24fcbdc8427767be79f1f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfVW4ZCRBK7hj4Ov3rIwAAdHIIAAVu1nCVpni8NPW2fhMIeeuN\nUiv2QLWDnU6XXqMu2CxPyuHzvr9ovHzejukxckaAOQIM+tnx2p+WYuWMbdd7p2kN\nurQHBqTw7T6aRwn5oecFhin57SKtcMpfqZx0UcIStaamtUw9uSX8qEwFKhpdoJCQ\nUpBcwTzZpxVuyPtLuX8rIOcALAssgYhr0MOeSCrqHUnwSX0AYe5Yw9nxfkxgeWzc\nImAO8aFW4m+IgB3w/oEFMEsHc/MI4+r4MSu3NvBZIyoqxtjhnRSYvnnMGR1WnfDz\n6hpbJKO01F05t6MUSuuvLxh1wUpen77mlivykwe6Es0akixA0t/mUjCf5wp2jK8=\n=bjJT\n-----END PGP SIGNATURE-----\n", "payload": "tree 987d83025304a2d36ee86467ca272e52fb651573\nparent 73dc675b9437c2a51a975a9f58cc66f05463c351\nparent 2278c7255a1423b12d0efee3de43b23fa0d5b892\nauthor Dylan DPC <dylan.dpc@gmail.com> 1599434265 +0200\ncommitter GitHub <noreply@github.com> 1599434265 +0200\n\nRollup merge of #76273 - CraftSpider:master, r=matklad\n\nMove some Vec UI tests into alloc unit tests\n\nA bit of work towards #76268, makes a number of the Vec UI tests that are simply running code into unit tests. Ensured that they are being run when testing liballoc locally.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e488c4f187be7f561ff24fcbdc8427767be79f1f", "html_url": "https://github.com/rust-lang/rust/commit/e488c4f187be7f561ff24fcbdc8427767be79f1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e488c4f187be7f561ff24fcbdc8427767be79f1f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73dc675b9437c2a51a975a9f58cc66f05463c351", "url": "https://api.github.com/repos/rust-lang/rust/commits/73dc675b9437c2a51a975a9f58cc66f05463c351", "html_url": "https://github.com/rust-lang/rust/commit/73dc675b9437c2a51a975a9f58cc66f05463c351"}, {"sha": "2278c7255a1423b12d0efee3de43b23fa0d5b892", "url": "https://api.github.com/repos/rust-lang/rust/commits/2278c7255a1423b12d0efee3de43b23fa0d5b892", "html_url": "https://github.com/rust-lang/rust/commit/2278c7255a1423b12d0efee3de43b23fa0d5b892"}], "stats": {"total": 125, "additions": 56, "deletions": 69}, "files": [{"sha": "523c727a6909626b4fd4958409e7b776bbf940de", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e488c4f187be7f561ff24fcbdc8427767be79f1f/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e488c4f187be7f561ff24fcbdc8427767be79f1f/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=e488c4f187be7f561ff24fcbdc8427767be79f1f", "patch": "@@ -74,6 +74,42 @@ fn test_zst_capacity() {\n     assert_eq!(Vec::<()>::new().capacity(), usize::MAX);\n }\n \n+#[test]\n+fn test_indexing() {\n+    let v: Vec<isize> = vec![10, 20];\n+    assert_eq!(v[0], 10);\n+    assert_eq!(v[1], 20);\n+    let mut x: usize = 0;\n+    assert_eq!(v[x], 10);\n+    assert_eq!(v[x + 1], 20);\n+    x = x + 1;\n+    assert_eq!(v[x], 20);\n+    assert_eq!(v[x - 1], 10);\n+}\n+\n+#[test]\n+fn test_debug_fmt() {\n+    let vec1: Vec<isize> = vec![];\n+    assert_eq!(\"[]\", format!(\"{:?}\", vec1));\n+\n+    let vec2 = vec![0, 1];\n+    assert_eq!(\"[0, 1]\", format!(\"{:?}\", vec2));\n+\n+    let slice: &[isize] = &[4, 5];\n+    assert_eq!(\"[4, 5]\", format!(\"{:?}\", slice));\n+}\n+\n+#[test]\n+fn test_push() {\n+    let mut v = vec![];\n+    v.push(1);\n+    assert_eq!(v, [1]);\n+    v.push(2);\n+    assert_eq!(v, [1, 2]);\n+    v.push(3);\n+    assert_eq!(v, [1, 2, 3]);\n+}\n+\n #[test]\n fn test_extend() {\n     let mut v = Vec::new();\n@@ -119,6 +155,18 @@ fn test_extend() {\n     assert_eq!(count_x, 1);\n }\n \n+#[test]\n+fn test_extend_from_slice() {\n+    let a: Vec<isize> = vec![1, 2, 3, 4, 5];\n+    let b: Vec<isize> = vec![6, 7, 8, 9, 0];\n+\n+    let mut v: Vec<isize> = a;\n+\n+    v.extend_from_slice(&b);\n+\n+    assert_eq!(v, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]);\n+}\n+\n #[test]\n fn test_extend_ref() {\n     let mut v = vec![1, 2];\n@@ -134,6 +182,14 @@ fn test_extend_ref() {\n     assert_eq!(v, [1, 2, 3, 4, 5, 6, 7]);\n }\n \n+#[test]\n+fn test_slice_from_ref() {\n+    let values = vec![1, 2, 3, 4, 5];\n+    let slice = &values[1..3];\n+\n+    assert_eq!(slice, [2, 3]);\n+}\n+\n #[test]\n fn test_slice_from_mut() {\n     let mut values = vec![1, 2, 3, 4, 5];"}, {"sha": "1f493679b794737a92d5fb4260a49bc23d6d1b02", "filename": "src/test/ui/array-slice-vec/vec-concat.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-concat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-concat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-concat.rs?ref=73dc675b9437c2a51a975a9f58cc66f05463c351", "patch": "@@ -1,14 +0,0 @@\n-// run-pass\n-\n-use std::vec;\n-\n-pub fn main() {\n-    let a: Vec<isize> = vec![1, 2, 3, 4, 5];\n-    let b: Vec<isize> = vec![6, 7, 8, 9, 0];\n-    let mut v: Vec<isize> = a;\n-    v.extend_from_slice(&b);\n-    println!(\"{}\", v[9]);\n-    assert_eq!(v[0], 1);\n-    assert_eq!(v[7], 8);\n-    assert_eq!(v[9], 0);\n-}"}, {"sha": "b09f08bb85a8245598bcae711645c49808922249", "filename": "src/test/ui/array-slice-vec/vec-growth.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-growth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-growth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-growth.rs?ref=73dc675b9437c2a51a975a9f58cc66f05463c351", "patch": "@@ -1,16 +0,0 @@\n-// run-pass\n-\n-\n-\n-pub fn main() {\n-    let mut v = vec![1];\n-    v.push(2);\n-    v.push(3);\n-    v.push(4);\n-    v.push(5);\n-    assert_eq!(v[0], 1);\n-    assert_eq!(v[1], 2);\n-    assert_eq!(v[2], 3);\n-    assert_eq!(v[3], 4);\n-    assert_eq!(v[4], 5);\n-}"}, {"sha": "466ab3fab1cab253fea4e2e95389e1c741354005", "filename": "src/test/ui/array-slice-vec/vec-push.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-push.rs?ref=73dc675b9437c2a51a975a9f58cc66f05463c351", "patch": "@@ -1,3 +0,0 @@\n-// run-pass\n-\n-pub fn main() { let mut v = vec![1, 2, 3]; v.push(1); }"}, {"sha": "1f090ddd9c97dfb50731df3d5875c43fde183a06", "filename": "src/test/ui/array-slice-vec/vec-slice.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-slice.rs?ref=73dc675b9437c2a51a975a9f58cc66f05463c351", "patch": "@@ -1,9 +0,0 @@\n-// run-pass\n-\n-\n-pub fn main() {\n-    let  v = vec![1,2,3,4,5];\n-    let v2 = &v[1..3];\n-    assert_eq!(v2[0], 2);\n-    assert_eq!(v2[1], 3);\n-}"}, {"sha": "a11cfc8e9b5c93404246380858363dad405ba8ba", "filename": "src/test/ui/array-slice-vec/vec-to_str.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-to_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-to_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec-to_str.rs?ref=73dc675b9437c2a51a975a9f58cc66f05463c351", "patch": "@@ -1,12 +0,0 @@\n-// run-pass\n-\n-\n-pub fn main() {\n-    assert_eq!(format!(\"{:?}\", vec![0, 1]), \"[0, 1]\".to_string());\n-\n-    let foo = vec![3, 4];\n-    let bar: &[isize] = &[4, 5];\n-\n-    assert_eq!(format!(\"{:?}\", foo), \"[3, 4]\");\n-    assert_eq!(format!(\"{:?}\", bar), \"[4, 5]\");\n-}"}, {"sha": "e76c1ab440e6edc4a627fb89d9e2a76403fc6c5e", "filename": "src/test/ui/array-slice-vec/vec.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73dc675b9437c2a51a975a9f58cc66f05463c351/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec.rs?ref=73dc675b9437c2a51a975a9f58cc66f05463c351", "patch": "@@ -1,15 +0,0 @@\n-// run-pass\n-\n-\n-\n-pub fn main() {\n-    let v: Vec<isize> = vec![10, 20];\n-    assert_eq!(v[0], 10);\n-    assert_eq!(v[1], 20);\n-    let mut x: usize = 0;\n-    assert_eq!(v[x], 10);\n-    assert_eq!(v[x + 1], 20);\n-    x = x + 1;\n-    assert_eq!(v[x], 20);\n-    assert_eq!(v[x - 1], 10);\n-}"}]}