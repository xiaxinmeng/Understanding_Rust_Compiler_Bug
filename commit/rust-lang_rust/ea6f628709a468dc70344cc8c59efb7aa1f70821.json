{"sha": "ea6f628709a468dc70344cc8c59efb7aa1f70821", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNmY2Mjg3MDlhNDY4ZGM3MDM0NGNjOGM1OWVmYjdhYTFmNzA4MjE=", "commit": {"author": {"name": "Oliver Schneider", "email": "oliver.schneider@kit.edu", "date": "2014-12-03T08:16:00Z"}, "committer": {"name": "Oliver Schneider", "email": "oliver.schneider@kit.edu", "date": "2014-12-03T08:16:00Z"}, "message": "libtest: get rid of dependency to ToJson\n\nderiving encodable + using json::PrettyEncoder removes the only ToJson trait implementation in the rust repository outside of libserialize", "tree": {"sha": "8764f8398701d728e02f0fc53e909cd78d840805", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8764f8398701d728e02f0fc53e909cd78d840805"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea6f628709a468dc70344cc8c59efb7aa1f70821", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea6f628709a468dc70344cc8c59efb7aa1f70821", "html_url": "https://github.com/rust-lang/rust/commit/ea6f628709a468dc70344cc8c59efb7aa1f70821", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea6f628709a468dc70344cc8c59efb7aa1f70821/comments", "author": null, "committer": null, "parents": [{"sha": "3a325c666d2cb7e297bf3057ff2442f96a79428b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a325c666d2cb7e297bf3057ff2442f96a79428b", "html_url": "https://github.com/rust-lang/rust/commit/3a325c666d2cb7e297bf3057ff2442f96a79428b"}], "stats": {"total": 24, "additions": 3, "deletions": 21}, "files": [{"sha": "049f2cc5603b604b25579b8b2c8aed68ac856ddc", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ea6f628709a468dc70344cc8c59efb7aa1f70821/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea6f628709a468dc70344cc8c59efb7aa1f70821/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=ea6f628709a468dc70344cc8c59efb7aa1f70821", "patch": "@@ -51,8 +51,7 @@ use std::collections::TreeMap;\n use stats::Stats;\n use getopts::{OptGroup, optflag, optopt};\n use regex::Regex;\n-use serialize::{json, Decodable};\n-use serialize::json::{Json, ToJson};\n+use serialize::{json, Decodable, Encodable};\n use term::Terminal;\n use term::color::{Color, RED, YELLOW, GREEN, CYAN};\n \n@@ -1100,17 +1099,6 @@ fn calc_result(desc: &TestDesc, task_succeeded: bool) -> TestResult {\n     }\n }\n \n-\n-impl ToJson for Metric {\n-    fn to_json(&self) -> json::Json {\n-        let mut map = TreeMap::new();\n-        map.insert(\"value\".to_string(), json::Json::F64(self.value));\n-        map.insert(\"noise\".to_string(), json::Json::F64(self.noise));\n-        json::Json::Object(map)\n-    }\n-}\n-\n-\n impl MetricMap {\n \n     pub fn new() -> MetricMap {\n@@ -1138,14 +1126,8 @@ impl MetricMap {\n     pub fn save(&self, p: &Path) -> io::IoResult<()> {\n         let mut file = try!(File::create(p));\n         let MetricMap(ref map) = *self;\n-\n-        // FIXME(pcwalton): Yuck.\n-        let mut new_map = TreeMap::new();\n-        for (ref key, ref value) in map.iter() {\n-            new_map.insert(key.to_string(), (*value).clone());\n-        }\n-\n-        new_map.to_json().to_pretty_writer(&mut file)\n+        let mut enc = json::PrettyEncoder::new(&mut file);\n+        map.encode(&mut enc)\n     }\n \n     /// Compare against another MetricMap. Optionally compare all"}]}