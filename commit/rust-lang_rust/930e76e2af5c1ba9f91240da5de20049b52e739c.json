{"sha": "930e76e2af5c1ba9f91240da5de20049b52e739c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMGU3NmUyYWY1YzFiYTlmOTEyNDBkYTVkZTIwMDQ5YjUyZTczOWM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-05-04T11:17:13Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-05-04T11:17:13Z"}, "message": "Update mir-opt test to reflect change to MIR code-generation.", "tree": {"sha": "d042b49ecc965c98a018e8d8a1b81d7183b3a4e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d042b49ecc965c98a018e8d8a1b81d7183b3a4e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/930e76e2af5c1ba9f91240da5de20049b52e739c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/930e76e2af5c1ba9f91240da5de20049b52e739c", "html_url": "https://github.com/rust-lang/rust/commit/930e76e2af5c1ba9f91240da5de20049b52e739c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/930e76e2af5c1ba9f91240da5de20049b52e739c/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28d18fabe37252127ffeef3ad54590f47fd9c081", "url": "https://api.github.com/repos/rust-lang/rust/commits/28d18fabe37252127ffeef3ad54590f47fd9c081", "html_url": "https://github.com/rust-lang/rust/commit/28d18fabe37252127ffeef3ad54590f47fd9c081"}], "stats": {"total": 114, "additions": 61, "deletions": 53}, "files": [{"sha": "a31298a0f516007fcd8790a10d9539627b5b91af", "filename": "src/test/mir-opt/match_false_edges.rs", "status": "modified", "additions": 61, "deletions": 53, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/930e76e2af5c1ba9f91240da5de20049b52e739c/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/930e76e2af5c1ba9f91240da5de20049b52e739c/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs?ref=930e76e2af5c1ba9f91240da5de20049b52e739c", "patch": "@@ -54,17 +54,17 @@ fn main() {\n //      ...\n //      _2 = std::option::Option<i32>::Some(const 42i32,);\n //      _3 = discriminant(_2);\n-//      _6 = discriminant(_2);\n-//      switchInt(move _6) -> [0isize: bb6, 1isize: bb4, otherwise: bb8];\n+//      _7 = discriminant(_2);\n+//      switchInt(move _7) -> [0isize: bb6, 1isize: bb4, otherwise: bb8];\n //  }\n //  bb1: {\n //      resume;\n //  }\n //  bb2: {  // arm1\n-//      StorageLive(_8);\n-//      _8 = _4;\n-//      _1 = (const 1i32, move _8);\n-//      StorageDead(_8);\n+//      StorageLive(_9);\n+//      _9 = _4;\n+//      _1 = (const 1i32, move _9);\n+//      StorageDead(_9);\n //      goto -> bb13;\n //  }\n //  bb3: { // binding3(empty) and arm3\n@@ -87,24 +87,26 @@ fn main() {\n //      unreachable;\n //  }\n //  bb9: { // binding1 and guard\n-//      StorageLive(_4);\n-//      _4 = ((_2 as Some).0: i32);\n-//      StorageLive(_7);\n-//      _7 = const guard() -> [return: bb10, unwind: bb1];\n+//      StorageLive(_5);\n+//      _5 = &((_2 as Some).0: i32);\n+//      StorageLive(_8);\n+//      _8 = const guard() -> [return: bb10, unwind: bb1];\n //  }\n //  bb10: { // end of guard\n-//      switchInt(move _7) -> [false: bb11, otherwise: bb2];\n+//      StorageLive(_4);\n+//      _4 = ((_2 as Some).0: i32);\n+//      switchInt(move _8) -> [false: bb11, otherwise: bb2];\n //  }\n //  bb11: { // to pre_binding2\n //      falseEdges -> [real: bb5, imaginary: bb5];\n //  }\n //  bb12: { // bindingNoLandingPads.before.mir2 and arm2\n-//      StorageLive(_5);\n-//      _5 = ((_2 as Some).0: i32);\n-//      StorageLive(_9);\n-//      _9 = _5;\n-//      _1 = (const 2i32, move _9);\n-//      StorageDead(_9);\n+//      StorageLive(_6);\n+//      _6 = ((_2 as Some).0: i32);\n+//      StorageLive(_10);\n+//      _10 = _6;\n+//      _1 = (const 2i32, move _10);\n+//      StorageDead(_10);\n //      goto -> bb13;\n //  }\n //  bb13: {\n@@ -118,17 +120,17 @@ fn main() {\n //      ...\n //      _2 = std::option::Option<i32>::Some(const 42i32,);\n //      _3 = discriminant(_2);\n-//      _6 = discriminant(_2);\n-//      switchInt(move _6) -> [0isize: bb5, 1isize: bb4, otherwise: bb8];\n+//      _7 = discriminant(_2);\n+//      switchInt(move _7) -> [0isize: bb5, 1isize: bb4, otherwise: bb8];\n //  }\n //  bb1: {\n //      resume;\n //  }\n //  bb2: { // arm1\n-//      StorageLive(_8);\n-//      _8 = _4;\n-//      _1 = (const 1i32, move _8);\n-//      StorageDead(_8);\n+//      StorageLive(_9);\n+//      _9 = _4;\n+//      _1 = (const 1i32, move _9);\n+//      StorageDead(_9);\n //      goto -> bb13;\n //  }\n //  bb3: { // binding3(empty) and arm3\n@@ -151,24 +153,26 @@ fn main() {\n //      unreachable;\n //  }\n //  bb9: { // binding1 and guard\n-//      StorageLive(_4);\n-//      _4 = ((_2 as Some).0: i32);\n-//      StorageLive(_7);\n-//      _7 = const guard() -> [return: bb10, unwind: bb1];\n+//      StorageLive(_5);\n+//      _5 = &((_2 as Some).0: i32);\n+//      StorageLive(_8);\n+//      _8 = const guard() -> [return: bb10, unwind: bb1];\n //  }\n //  bb10: { // end of guard\n-//      switchInt(move _7) -> [false: bb11, otherwise: bb2];\n+//      StorageLive(_4);\n+//      _4 = ((_2 as Some).0: i32);\n+//      switchInt(move _8) -> [false: bb11, otherwise: bb2];\n //  }\n //  bb11: { // to pre_binding2\n //      falseEdges -> [real: bb6, imaginary: bb5];\n //  }\n //  bb12: { // binding2 and arm2\n-//      StorageLive(_5);\n-//      _5 = ((_2 as Some).0: i32);\n-//      StorageLive(_9);\n-//      _9 = _5;\n-//      _1 = (const 2i32, move _9);\n-//      StorageDead(_9);\n+//      StorageLive(_6);\n+//      _6 = ((_2 as Some).0: i32);\n+//      StorageLive(_10);\n+//      _10 = _6;\n+//      _1 = (const 2i32, move _10);\n+//      StorageDead(_10);\n //      goto -> bb13;\n //  }\n //  bb13: {\n@@ -182,8 +186,8 @@ fn main() {\n //     ...\n //     _2 = std::option::Option<i32>::Some(const 1i32,);\n //     _3 = discriminant(_2);\n-//     _8 = discriminant(_2);\n-//     switchInt(move _8) -> [1isize: bb4, otherwise: bb5];\n+//     _10 = discriminant(_2);\n+//     switchInt(move _10) -> [1isize: bb4, otherwise: bb5];\n // }\n // bb1: {\n //     resume;\n@@ -213,41 +217,45 @@ fn main() {\n //     unreachable;\n // }\n // bb9: { // binding1: Some(w) if guard()\n-//     StorageLive(_4);\n-//     _4 = ((_2 as Some).0: i32);\n-//     StorageLive(_9);\n-//     _9 = const guard() -> [return: bb10, unwind: bb1];\n+//     StorageLive(_5);\n+//     _5 = &((_2 as Some).0: i32);\n+//     StorageLive(_11);\n+//     _11 = const guard() -> [return: bb10, unwind: bb1];\n // }\n // bb10: { //end of guard\n-//    switchInt(move _9) -> [false: bb11, otherwise: bb2];\n+//    StorageLive(_4);\n+//    _4 = ((_2 as Some).0: i32);\n+//    switchInt(move _11) -> [false: bb11, otherwise: bb2];\n // }\n // bb11: { // to pre_binding2\n //     falseEdges -> [real: bb5, imaginary: bb5];\n // }\n // bb12: { // binding2 & arm2\n-//     StorageLive(_5);\n-//     _5 = _2;\n+//     StorageLive(_6);\n+//     _6 = _2;\n //     _1 = const 2i32;\n //     goto -> bb17;\n // }\n // bb13: { // binding3: Some(y) if guard2(y)\n-//     StorageLive(_6);\n-//     _6 = ((_2 as Some).0: i32);\n-//     StorageLive(_11);\n-//     StorageLive(_12);\n-//     _12 = _6;\n-//     _11 = const guard2(move _12) -> [return: bb14, unwind: bb1];\n+//     StorageLive(_8);\n+//     _8 = &((_2 as Some).0: i32);\n+//     StorageLive(_13);\n+//     StorageLive(_14);\n+//     _14 = (*_8);\n+//     _13 = const guard2(move _14) -> [return: bb14, unwind: bb1];\n // }\n // bb14: { // end of guard2\n-//     StorageDead(_12);\n-//     switchInt(move _11) -> [false: bb15, otherwise: bb3];\n+//     StorageDead(_14);\n+//     StorageLive(_7);\n+//     _7 = ((_2 as Some).0: i32);\n+//     switchInt(move _13) -> [false: bb15, otherwise: bb3];\n // }\n // bb15: { // to pre_binding4\n //     falseEdges -> [real: bb7, imaginary: bb7];\n // }\n // bb16: { // binding4 & arm4\n-//     StorageLive(_7);\n-//     _7 = _2;\n+//     StorageLive(_9);\n+//     _9 = _2;\n //     _1 = const 4i32;\n //     goto -> bb17;\n // }"}]}