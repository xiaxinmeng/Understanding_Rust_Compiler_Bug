{"sha": "7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8", "node_id": "C_kwDOAAsO6NoAKDdkNmNmYjc3NTQ5ODhiOTVmMDVhN2RlYzhhMjZiYzQxYzQ3Y2E1ZTg", "commit": {"author": {"name": "Lo\u00efc BRANSTETT", "email": "loic.branstett@epitech.eu", "date": "2021-10-14T08:50:46Z"}, "committer": {"name": "Lo\u00efc BRANSTETT", "email": "loic.branstett@epitech.eu", "date": "2021-10-14T08:50:46Z"}, "message": "Oops, inverted condition, fix that", "tree": {"sha": "04b7cb18af5b6e49234e4b06828c0971bd38bf14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04b7cb18af5b6e49234e4b06828c0971bd38bf14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8", "html_url": "https://github.com/rust-lang/rust/commit/7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e252274fb1ebcb2c83bc3b1ebb35456d34e942f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e252274fb1ebcb2c83bc3b1ebb35456d34e942f4", "html_url": "https://github.com/rust-lang/rust/commit/e252274fb1ebcb2c83bc3b1ebb35456d34e942f4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f60d4e1f29537c7cab5ad468ac2d6ff26b76b528", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=7d6cfb7754988b95f05a7dec8a26bc41c47ca5e8", "patch": "@@ -97,7 +97,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             if let Res::Def(DefKind::Macro(_), def_id) = export.res {\n                 if let Some(local_def_id) = def_id.as_local() {\n                     if self.cx.tcx.has_attr(def_id, sym::macro_export) {\n-                        if !inserted.insert(def_id) {\n+                        if inserted.insert(def_id) {\n                             let hir_id = self.cx.tcx.hir().local_def_id_to_hir_id(local_def_id);\n                             let item = self.cx.tcx.hir().expect_item(hir_id);\n                             top_level_module.items.push((item, None));"}]}