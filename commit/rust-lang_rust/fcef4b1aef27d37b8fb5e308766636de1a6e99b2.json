{"sha": "fcef4b1aef27d37b8fb5e308766636de1a6e99b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZWY0YjFhZWYyN2QzN2I4ZmI1ZTMwODc2NjYzNmRlMWE2ZTk5YjI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-15T23:07:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-15T23:07:39Z"}, "message": "Rollup merge of #64603 - gilescope:unused-lifetime-warning, r=matthewjasper\n\nReducing spurious unused lifetime warnings.\n\nFixes #61115, fixes #64493.", "tree": {"sha": "fbbdb1de948add05f935de804f11b8df713aa369", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbbdb1de948add05f935de804f11b8df713aa369"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcef4b1aef27d37b8fb5e308766636de1a6e99b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdplE7CRBK7hj4Ov3rIwAAdHIIABMNo5DJE3N2eHulTQFFEV8F\nO+1LE9hRBtkbR/demDvnVTj4BfTMFssLIW5dQPPvvAcxt2UV6L35HAJmWy5Nl1Mr\nnEamKe7zGVlB1VkxzfdF3RntPGqG0Iw/IM2C/QBouRuUUKTUH0J9qiK/TScdZ17r\n95RNL6ixjIh2eVll7uW1WS5WITBVqx3X6wjWL1EM/EuiLGyu2bAWXnOG5V0+JJv9\nAIP+duGV3/T561eSveD5mY0AVxUeqA6CGhN+aMm0Ux6h2TejaxHJQ/jKOWsOTjES\nZw+kOfShEZ4N+sUatEu5zWoKDi3fzAuRk2i7sC7MYvrexfvLG6S4pMbnaCMZpbI=\n=wAqO\n-----END PGP SIGNATURE-----\n", "payload": "tree fbbdb1de948add05f935de804f11b8df713aa369\nparent 237d54ff6c4fb3577e02d4c5af02813c11b63d01\nparent d82c1c546df10f07b854a2e5b088404d80ec22c9\nauthor Tyler Mandry <tmandry@gmail.com> 1571180859 -0700\ncommitter GitHub <noreply@github.com> 1571180859 -0700\n\nRollup merge of #64603 - gilescope:unused-lifetime-warning, r=matthewjasper\n\nReducing spurious unused lifetime warnings.\n\nFixes #61115, fixes #64493.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcef4b1aef27d37b8fb5e308766636de1a6e99b2", "html_url": "https://github.com/rust-lang/rust/commit/fcef4b1aef27d37b8fb5e308766636de1a6e99b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcef4b1aef27d37b8fb5e308766636de1a6e99b2/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "237d54ff6c4fb3577e02d4c5af02813c11b63d01", "url": "https://api.github.com/repos/rust-lang/rust/commits/237d54ff6c4fb3577e02d4c5af02813c11b63d01", "html_url": "https://github.com/rust-lang/rust/commit/237d54ff6c4fb3577e02d4c5af02813c11b63d01"}, {"sha": "d82c1c546df10f07b854a2e5b088404d80ec22c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d82c1c546df10f07b854a2e5b088404d80ec22c9", "html_url": "https://github.com/rust-lang/rust/commit/d82c1c546df10f07b854a2e5b088404d80ec22c9"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "a122d84a5aa7ec84481f8a675d758075cb36723c", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fcef4b1aef27d37b8fb5e308766636de1a6e99b2/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcef4b1aef27d37b8fb5e308766636de1a6e99b2/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=fcef4b1aef27d37b8fb5e308766636de1a6e99b2", "patch": "@@ -708,15 +708,22 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                     match param.kind {\n                         GenericParamKind::Lifetime { .. } => {\n                             let (name, reg) = Region::early(&self.tcx.hir(), &mut index, &param);\n+                            let def_id = if let Region::EarlyBound(_ ,def_id , _) = reg {\n+                                def_id\n+                            } else {\n+                                bug!();\n+                            };\n                             if let hir::ParamName::Plain(param_name) = name {\n                                 if param_name.name == kw::UnderscoreLifetime {\n                                     // Pick the elided lifetime \"definition\" if one exists\n                                     // and use it to make an elision scope.\n+                                    self.lifetime_uses.insert(def_id.clone(), LifetimeUseSet::Many);\n                                     elision = Some(reg);\n                                 } else {\n                                     lifetimes.insert(name, reg);\n                                 }\n                             } else {\n+                                self.lifetime_uses.insert(def_id.clone(), LifetimeUseSet::Many);\n                                 lifetimes.insert(name, reg);\n                             }\n                         }\n@@ -1615,7 +1622,6 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                         _ => None,\n                     } {\n                         debug!(\"id = {:?} span = {:?} name = {:?}\", id, span, name);\n-\n                         if name.name == kw::UnderscoreLifetime {\n                             continue;\n                         }"}, {"sha": "1cf546bcb4266e0bf5d45f91991f842bcd5ed1cf", "filename": "src/test/ui/async-await/unused-lifetime.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/fcef4b1aef27d37b8fb5e308766636de1a6e99b2/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcef4b1aef27d37b8fb5e308766636de1a6e99b2/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.rs?ref=fcef4b1aef27d37b8fb5e308766636de1a6e99b2", "patch": "@@ -0,0 +1,42 @@\n+// edition:2018\n+\n+// Avoid spurious warnings of unused lifetime. The below async functions\n+// are desugered to have an unused lifetime\n+// but we don't want to warn about that as there's nothing they can do about it.\n+\n+#![deny(unused_lifetimes)]\n+#![allow(dead_code)]\n+\n+pub async fn october(s: &str) {\n+    println!(\"{}\", s);\n+}\n+\n+pub async fn async_fn(&mut ref s: &mut[i32]) {\n+    println!(\"{:?}\", s);\n+}\n+\n+macro_rules! foo_macro {\n+    () => {\n+        pub async fn async_fn_in_macro(&mut ref _s: &mut[i32]) {}\n+    };\n+}\n+\n+foo_macro!();\n+\n+pub async fn func_with_unused_lifetime<'a>(s: &'a str) {\n+    //~^ ERROR lifetime parameter `'a` never used\n+    println!(\"{}\", s);\n+}\n+\n+pub async fn func_with_two_unused_lifetime<'a, 'b>(s: &'a str, t: &'b str) {\n+    //~^ ERROR lifetime parameter `'a` never used\n+    //~^^ ERROR lifetime parameter `'b` never used\n+    println!(\"{}\", s);\n+}\n+\n+pub async fn func_with_unused_lifetime_in_two_params<'c>(s: &'c str, t: &'c str) {\n+    //~^ ERROR lifetime parameter `'c` never used\n+    println!(\"{}\", s);\n+}\n+\n+fn main() {}"}, {"sha": "885cdc04cfa4c2892e8ec242b1b00e07242eea5a", "filename": "src/test/ui/async-await/unused-lifetime.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fcef4b1aef27d37b8fb5e308766636de1a6e99b2/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fcef4b1aef27d37b8fb5e308766636de1a6e99b2/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr?ref=fcef4b1aef27d37b8fb5e308766636de1a6e99b2", "patch": "@@ -0,0 +1,32 @@\n+error: lifetime parameter `'a` never used\n+  --> $DIR/unused-lifetime.rs:26:40\n+   |\n+LL | pub async fn func_with_unused_lifetime<'a>(s: &'a str) {\n+   |                                        ^^\n+   |\n+note: lint level defined here\n+  --> $DIR/unused-lifetime.rs:7:9\n+   |\n+LL | #![deny(unused_lifetimes)]\n+   |         ^^^^^^^^^^^^^^^^\n+\n+error: lifetime parameter `'a` never used\n+  --> $DIR/unused-lifetime.rs:31:44\n+   |\n+LL | pub async fn func_with_two_unused_lifetime<'a, 'b>(s: &'a str, t: &'b str) {\n+   |                                            ^^\n+\n+error: lifetime parameter `'b` never used\n+  --> $DIR/unused-lifetime.rs:31:48\n+   |\n+LL | pub async fn func_with_two_unused_lifetime<'a, 'b>(s: &'a str, t: &'b str) {\n+   |                                                ^^\n+\n+error: lifetime parameter `'c` never used\n+  --> $DIR/unused-lifetime.rs:37:54\n+   |\n+LL | pub async fn func_with_unused_lifetime_in_two_params<'c>(s: &'c str, t: &'c str) {\n+   |                                                      ^^\n+\n+error: aborting due to 4 previous errors\n+"}]}