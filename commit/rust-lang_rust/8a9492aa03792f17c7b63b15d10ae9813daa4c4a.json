{"sha": "8a9492aa03792f17c7b63b15d10ae9813daa4c4a", "node_id": "C_kwDOAAsO6NoAKDhhOTQ5MmFhMDM3OTJmMTdjN2I2M2IxNWQxMGFlOTgxM2RhYTRjNGE", "commit": {"author": {"name": "J-ZhengLi", "email": "lizheng135@huawei.com", "date": "2023-02-16T09:47:28Z"}, "committer": {"name": "J-ZhengLi", "email": "lizheng135@huawei.com", "date": "2023-03-13T12:13:56Z"}, "message": "enhance [`ifs_same_cond`] to lint same immutable method calls as well", "tree": {"sha": "897487e46dd0e2c92e35514ce7c04a344f00fb2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/897487e46dd0e2c92e35514ce7c04a344f00fb2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a9492aa03792f17c7b63b15d10ae9813daa4c4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9492aa03792f17c7b63b15d10ae9813daa4c4a", "html_url": "https://github.com/rust-lang/rust/commit/8a9492aa03792f17c7b63b15d10ae9813daa4c4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a9492aa03792f17c7b63b15d10ae9813daa4c4a/comments", "author": {"login": "J-ZhengLi", "id": 32276130, "node_id": "MDQ6VXNlcjMyMjc2MTMw", "avatar_url": "https://avatars.githubusercontent.com/u/32276130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/J-ZhengLi", "html_url": "https://github.com/J-ZhengLi", "followers_url": "https://api.github.com/users/J-ZhengLi/followers", "following_url": "https://api.github.com/users/J-ZhengLi/following{/other_user}", "gists_url": "https://api.github.com/users/J-ZhengLi/gists{/gist_id}", "starred_url": "https://api.github.com/users/J-ZhengLi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/J-ZhengLi/subscriptions", "organizations_url": "https://api.github.com/users/J-ZhengLi/orgs", "repos_url": "https://api.github.com/users/J-ZhengLi/repos", "events_url": "https://api.github.com/users/J-ZhengLi/events{/privacy}", "received_events_url": "https://api.github.com/users/J-ZhengLi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "J-ZhengLi", "id": 32276130, "node_id": "MDQ6VXNlcjMyMjc2MTMw", "avatar_url": "https://avatars.githubusercontent.com/u/32276130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/J-ZhengLi", "html_url": "https://github.com/J-ZhengLi", "followers_url": "https://api.github.com/users/J-ZhengLi/followers", "following_url": "https://api.github.com/users/J-ZhengLi/following{/other_user}", "gists_url": "https://api.github.com/users/J-ZhengLi/gists{/gist_id}", "starred_url": "https://api.github.com/users/J-ZhengLi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/J-ZhengLi/subscriptions", "organizations_url": "https://api.github.com/users/J-ZhengLi/orgs", "repos_url": "https://api.github.com/users/J-ZhengLi/repos", "events_url": "https://api.github.com/users/J-ZhengLi/events{/privacy}", "received_events_url": "https://api.github.com/users/J-ZhengLi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e65ad6f5d0c97d4b20e68c9c81c3f35225563fa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e65ad6f5d0c97d4b20e68c9c81c3f35225563fa6", "html_url": "https://github.com/rust-lang/rust/commit/e65ad6f5d0c97d4b20e68c9c81c3f35225563fa6"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "d729a5430c7a8ce249c70a82a2031a5dade5fbd2", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8a9492aa03792f17c7b63b15d10ae9813daa4c4a/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a9492aa03792f17c7b63b15d10ae9813daa4c4a/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=8a9492aa03792f17c7b63b15d10ae9813daa4c4a", "patch": "@@ -3,8 +3,8 @@ use clippy_utils::source::{first_line_of_span, indent_of, reindent_multiline, sn\n use clippy_utils::ty::needs_ordered_drop;\n use clippy_utils::visitors::for_each_expr;\n use clippy_utils::{\n-    capture_local_usage, eq_expr_value, get_enclosing_block, hash_expr, hash_stmt, if_sequence, is_else_clause,\n-    is_lint_allowed, path_to_local, search_same, ContainsName, HirEqInterExpr, SpanlessEq,\n+    capture_local_usage, eq_expr_value, find_binding_init, get_enclosing_block, hash_expr, hash_stmt, if_sequence,\n+    is_else_clause, is_lint_allowed, path_to_local, search_same, ContainsName, HirEqInterExpr, SpanlessEq,\n };\n use core::iter;\n use core::ops::ControlFlow;\n@@ -549,7 +549,27 @@ fn check_for_warn_of_moved_symbol(cx: &LateContext<'_>, symbols: &[(HirId, Symbo\n \n /// Implementation of `IFS_SAME_COND`.\n fn lint_same_cond(cx: &LateContext<'_>, conds: &[&Expr<'_>]) {\n-    for (i, j) in search_same(conds, |e| hash_expr(cx, e), |lhs, rhs| eq_expr_value(cx, lhs, rhs)) {\n+    for (i, j) in search_same(\n+        conds,\n+        |e| hash_expr(cx, e),\n+        |lhs, rhs| {\n+            // If any side (ex. lhs) is a method call, and the caller is not mutable,\n+            // then we can ignore side effects?\n+            if let ExprKind::MethodCall(_, caller, _, _) = lhs.kind {\n+                if path_to_local(caller)\n+                    .and_then(|hir_id| find_binding_init(cx, hir_id))\n+                    .is_some()\n+                {\n+                    // caller is not declared as mutable\n+                    SpanlessEq::new(cx).eq_expr(lhs, rhs)\n+                } else {\n+                    false\n+                }\n+            } else {\n+                eq_expr_value(cx, lhs, rhs)\n+            }\n+        },\n+    ) {\n         span_lint_and_note(\n             cx,\n             IFS_SAME_COND,"}, {"sha": "e68ec6a857318e6aaf2db75372317d6a0a7fc06c", "filename": "tests/ui/ifs_same_cond.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8a9492aa03792f17c7b63b15d10ae9813daa4c4a/tests%2Fui%2Fifs_same_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a9492aa03792f17c7b63b15d10ae9813daa4c4a/tests%2Fui%2Fifs_same_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fifs_same_cond.rs?ref=8a9492aa03792f17c7b63b15d10ae9813daa4c4a", "patch": "@@ -43,4 +43,14 @@ fn ifs_same_cond() {\n     }\n }\n \n+fn issue10272() {\n+    let a = String::from(\"ha\");\n+    if a.contains(\"ah\") {\n+    } else if a.contains(\"ah\") {\n+        // Trigger this lint\n+    } else if a.contains(\"ha\") {\n+    } else if a == \"wow\" {\n+    }\n+}\n+\n fn main() {}"}, {"sha": "9519f6904cb1ebf913631f26f7fb0a9203cc96a9", "filename": "tests/ui/ifs_same_cond.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8a9492aa03792f17c7b63b15d10ae9813daa4c4a/tests%2Fui%2Fifs_same_cond.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a9492aa03792f17c7b63b15d10ae9813daa4c4a/tests%2Fui%2Fifs_same_cond.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fifs_same_cond.stderr?ref=8a9492aa03792f17c7b63b15d10ae9813daa4c4a", "patch": "@@ -35,5 +35,17 @@ note: same as this\n LL |     if 2 * a == 1 {\n    |        ^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: this `if` has the same condition as a previous `if`\n+  --> $DIR/ifs_same_cond.rs:49:15\n+   |\n+LL |     } else if a.contains(\"ah\") {\n+   |               ^^^^^^^^^^^^^^^^\n+   |\n+note: same as this\n+  --> $DIR/ifs_same_cond.rs:48:8\n+   |\n+LL |     if a.contains(\"ah\") {\n+   |        ^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n "}]}