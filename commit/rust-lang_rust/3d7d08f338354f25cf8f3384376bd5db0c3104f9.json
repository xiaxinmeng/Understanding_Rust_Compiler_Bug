{"sha": "3d7d08f338354f25cf8f3384376bd5db0c3104f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkN2QwOGYzMzgzNTRmMjVjZjhmMzM4NDM3NmJkNWRiMGMzMTA0Zjk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-07T08:54:43Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-07T08:54:43Z"}, "message": "Simplify write_metadata", "tree": {"sha": "3719f0301cdfc6e98a1f34e06cc20c869ab6fa7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3719f0301cdfc6e98a1f34e06cc20c869ab6fa7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d7d08f338354f25cf8f3384376bd5db0c3104f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d7d08f338354f25cf8f3384376bd5db0c3104f9", "html_url": "https://github.com/rust-lang/rust/commit/3d7d08f338354f25cf8f3384376bd5db0c3104f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d7d08f338354f25cf8f3384376bd5db0c3104f9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1a2f0f351695963d0df4453a7baae23ec3b5991", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a2f0f351695963d0df4453a7baae23ec3b5991", "html_url": "https://github.com/rust-lang/rust/commit/e1a2f0f351695963d0df4453a7baae23ec3b5991"}], "stats": {"total": 44, "additions": 3, "deletions": 41}, "files": [{"sha": "7bd9ebbb611c34b857faa464120c05129e0807ca", "filename": "src/metadata.rs", "status": "modified", "additions": 3, "deletions": 41, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/3d7d08f338354f25cf8f3384376bd5db0c3104f9/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d7d08f338354f25cf8f3384376bd5db0c3104f9/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=3d7d08f338354f25cf8f3384376bd5db0c3104f9", "patch": "@@ -8,9 +8,8 @@ use rustc_data_structures::memmap::Mmap;\n use rustc_data_structures::owning_ref::OwningRef;\n use rustc_data_structures::rustc_erase_owner;\n use rustc_data_structures::sync::MetadataRef;\n-use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoader};\n+use rustc_middle::middle::cstore::MetadataLoader;\n use rustc_middle::ty::TyCtxt;\n-use rustc_session::config;\n use rustc_target::spec::Target;\n \n use crate::backend::WriteMetadata;\n@@ -58,54 +57,17 @@ impl MetadataLoader for CraneliftMetadataLoader {\n }\n \n // Adapted from https://github.com/rust-lang/rust/blob/da573206f87b5510de4b0ee1a9c044127e409bd3/src/librustc_codegen_llvm/base.rs#L47-L112\n-pub(crate) fn write_metadata<P: WriteMetadata>(\n-    tcx: TyCtxt<'_>,\n-    product: &mut P,\n-) -> EncodedMetadata {\n+pub(crate) fn write_metadata<O: WriteMetadata>(tcx: TyCtxt<'_>, object: &mut O) {\n     use snap::write::FrameEncoder;\n     use std::io::Write;\n \n-    #[derive(PartialEq, Eq, PartialOrd, Ord)]\n-    enum MetadataKind {\n-        None,\n-        Uncompressed,\n-        Compressed,\n-    }\n-\n-    let kind = tcx\n-        .sess\n-        .crate_types()\n-        .iter()\n-        .map(|ty| match *ty {\n-            config::CrateType::Executable\n-            | config::CrateType::Staticlib\n-            | config::CrateType::Cdylib => MetadataKind::None,\n-\n-            config::CrateType::Rlib => MetadataKind::Uncompressed,\n-\n-            config::CrateType::Dylib | config::CrateType::ProcMacro => MetadataKind::Compressed,\n-        })\n-        .max()\n-        .unwrap_or(MetadataKind::None);\n-\n-    if kind == MetadataKind::None {\n-        return EncodedMetadata::new();\n-    }\n-\n     let metadata = tcx.encode_metadata();\n-    if kind == MetadataKind::Uncompressed {\n-        return metadata;\n-    }\n-\n-    assert!(kind == MetadataKind::Compressed);\n     let mut compressed = tcx.metadata_encoding_version();\n     FrameEncoder::new(&mut compressed).write_all(&metadata.raw_data).unwrap();\n \n-    product.add_rustc_section(\n+    object.add_rustc_section(\n         rustc_middle::middle::exported_symbols::metadata_symbol_name(tcx),\n         compressed,\n         tcx.sess.target.is_like_osx,\n     );\n-\n-    metadata\n }"}]}