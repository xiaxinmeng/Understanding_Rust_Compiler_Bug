{"sha": "3395f9d6a10aa912ab88de2e8d5b4f7de407413a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzOTVmOWQ2YTEwYWE5MTJhYjg4ZGUyZThkNWI0ZjdkZTQwNzQxM2E=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-06T14:42:55Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-07T13:31:24Z"}, "message": "std::trie: Add some iteration/search benchmarks.", "tree": {"sha": "1766590b687fd0a9fd1a4149ff575b20cf392928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1766590b687fd0a9fd1a4149ff575b20cf392928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3395f9d6a10aa912ab88de2e8d5b4f7de407413a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3395f9d6a10aa912ab88de2e8d5b4f7de407413a", "html_url": "https://github.com/rust-lang/rust/commit/3395f9d6a10aa912ab88de2e8d5b4f7de407413a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3395f9d6a10aa912ab88de2e8d5b4f7de407413a/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe03caedf0d2e32c41bb1c5169fb0162c8af6b28", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe03caedf0d2e32c41bb1c5169fb0162c8af6b28", "html_url": "https://github.com/rust-lang/rust/commit/fe03caedf0d2e32c41bb1c5169fb0162c8af6b28"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "94b7b881ea0d88248329ebd63a69d06a58ab23c5", "filename": "src/libstd/trie.rs", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/3395f9d6a10aa912ab88de2e8d5b4f7de407413a/src%2Flibstd%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3395f9d6a10aa912ab88de2e8d5b4f7de407413a/src%2Flibstd%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftrie.rs?ref=3395f9d6a10aa912ab88de2e8d5b4f7de407413a", "patch": "@@ -828,6 +828,66 @@ mod test_map {\n     }\n }\n \n+#[cfg(test)]\n+mod bench_map {\n+    use super::*;\n+    use prelude::*;\n+    use rand::{weak_rng, Rng};\n+    use extra::test::BenchHarness;\n+\n+    #[bench]\n+    fn bench_iter_small(bh: &mut BenchHarness) {\n+        let mut m = TrieMap::<uint>::new();\n+        let mut rng = weak_rng();\n+        for _ in range(0, 20) {\n+            m.insert(rng.gen(), rng.gen());\n+        }\n+\n+        bh.iter(|| for _ in m.iter() {})\n+    }\n+\n+    #[bench]\n+    fn bench_iter_large(bh: &mut BenchHarness) {\n+        let mut m = TrieMap::<uint>::new();\n+        let mut rng = weak_rng();\n+        for _ in range(0, 1000) {\n+            m.insert(rng.gen(), rng.gen());\n+        }\n+\n+        bh.iter(|| for _ in m.iter() {})\n+    }\n+\n+    #[bench]\n+    fn bench_lower_bound(bh: &mut BenchHarness) {\n+        let mut m = TrieMap::<uint>::new();\n+        let mut rng = weak_rng();\n+        for _ in range(0, 1000) {\n+            m.insert(rng.gen(), rng.gen());\n+        }\n+\n+        bh.iter(|| {\n+                for _ in range(0, 10) {\n+                    m.lower_bound(rng.gen());\n+                }\n+            });\n+    }\n+\n+    #[bench]\n+    fn bench_upper_bound(bh: &mut BenchHarness) {\n+        let mut m = TrieMap::<uint>::new();\n+        let mut rng = weak_rng();\n+        for _ in range(0, 1000) {\n+            m.insert(rng.gen(), rng.gen());\n+        }\n+\n+        bh.iter(|| {\n+                for _ in range(0, 10) {\n+                    m.upper_bound(rng.gen());\n+                }\n+            });\n+    }\n+}\n+\n #[cfg(test)]\n mod test_set {\n     use super::*;"}]}