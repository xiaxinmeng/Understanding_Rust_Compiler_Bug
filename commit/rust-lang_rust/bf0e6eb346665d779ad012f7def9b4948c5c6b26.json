{"sha": "bf0e6eb346665d779ad012f7def9b4948c5c6b26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMGU2ZWIzNDY2NjVkNzc5YWQwMTJmN2RlZjliNDk0OGM1YzZiMjY=", "commit": {"author": {"name": "Jason Toffaletti", "email": "jason@topsy.com", "date": "2013-10-04T08:25:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-10-26T01:27:45Z"}, "message": "add cache line padding", "tree": {"sha": "47591cdd14d0f76397803f29314c26cbf4f67aed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47591cdd14d0f76397803f29314c26cbf4f67aed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf0e6eb346665d779ad012f7def9b4948c5c6b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0e6eb346665d779ad012f7def9b4948c5c6b26", "html_url": "https://github.com/rust-lang/rust/commit/bf0e6eb346665d779ad012f7def9b4948c5c6b26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf0e6eb346665d779ad012f7def9b4948c5c6b26/comments", "author": {"login": "toffaletti", "id": 145012, "node_id": "MDQ6VXNlcjE0NTAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/145012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toffaletti", "html_url": "https://github.com/toffaletti", "followers_url": "https://api.github.com/users/toffaletti/followers", "following_url": "https://api.github.com/users/toffaletti/following{/other_user}", "gists_url": "https://api.github.com/users/toffaletti/gists{/gist_id}", "starred_url": "https://api.github.com/users/toffaletti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toffaletti/subscriptions", "organizations_url": "https://api.github.com/users/toffaletti/orgs", "repos_url": "https://api.github.com/users/toffaletti/repos", "events_url": "https://api.github.com/users/toffaletti/events{/privacy}", "received_events_url": "https://api.github.com/users/toffaletti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c62d604531456e96de506b835207223136361dc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c62d604531456e96de506b835207223136361dc2", "html_url": "https://github.com/rust-lang/rust/commit/c62d604531456e96de506b835207223136361dc2"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "09b148940f86a4424135fbc7b9a1934dd01ccd06", "filename": "src/libstd/rt/mpsc_queue.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bf0e6eb346665d779ad012f7def9b4948c5c6b26/src%2Flibstd%2Frt%2Fmpsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0e6eb346665d779ad012f7def9b4948c5c6b26/src%2Flibstd%2Frt%2Fmpsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmpsc_queue.rs?ref=bf0e6eb346665d779ad012f7def9b4948c5c6b26", "patch": "@@ -56,9 +56,13 @@ impl<T> Default for Node<T> {\n }\n \n struct State<T> {\n-    stub: Node<T>,\n+    pad0: [u8, ..64],\n     head: AtomicPtr<Node<T>>,\n+    pad1: [u8, ..64],\n+    stub: Node<T>,\n+    pad2: [u8, ..64],\n     tail: *mut Node<T>,\n+    pad3: [u8, ..64],\n }\n \n struct Queue<T> {\n@@ -82,9 +86,13 @@ impl<T: Send> fmt::Default for Queue<T> {\n impl<T: Send> Queue<T> {\n     pub fn new() -> Queue<T> {\n         let mut q = Queue{state: UnsafeArc::new(State {\n-            stub: Default::default(),\n+            pad0: [0, ..64],\n             head: AtomicPtr::new(mut_null()),\n+            pad1: [0, ..64],\n+            stub: Default::default(),\n+            pad2: [0, ..64],\n             tail: mut_null(),\n+            pad3: [0, ..64],\n         })};\n         let stub = q.get_stub_unsafe();\n         q.get_head().store(stub, Relaxed);\n@@ -102,7 +110,7 @@ impl<T: Send> Queue<T> {\n     fn push_node(&mut self, node: *mut Node<T>) {\n         unsafe {\n             (*node).next.store(mut_null(), Release);\n-            let prev = (*self.state.get()).head.swap(node, Relaxed);\n+            let prev = self.get_head().swap(node, Relaxed);\n             (*prev).next.store(node, Release);\n         }\n     }\n@@ -167,7 +175,6 @@ mod tests {\n     use option::*;\n     use task;\n     use comm;\n-    use fmt;\n     use super::Queue;\n \n     #[test]"}]}