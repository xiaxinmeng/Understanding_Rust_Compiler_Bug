{"sha": "61414fd6c1cdc9bee06018fccf5e58ebdb508905", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNDE0ZmQ2YzFjZGM5YmVlMDYwMThmY2NmNWU1OGViZGI1MDg5MDU=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-13T18:43:08Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-13T18:45:23Z"}, "message": "Use the correct visibility", "tree": {"sha": "1bcec58c16073fc7f5c88d22ad925c8f419c320d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bcec58c16073fc7f5c88d22ad925c8f419c320d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61414fd6c1cdc9bee06018fccf5e58ebdb508905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61414fd6c1cdc9bee06018fccf5e58ebdb508905", "html_url": "https://github.com/rust-lang/rust/commit/61414fd6c1cdc9bee06018fccf5e58ebdb508905", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61414fd6c1cdc9bee06018fccf5e58ebdb508905/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c946c2539e9690fab5dbf7ac217ec696ac263cf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c946c2539e9690fab5dbf7ac217ec696ac263cf3", "html_url": "https://github.com/rust-lang/rust/commit/c946c2539e9690fab5dbf7ac217ec696ac263cf3"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "ad70c86eb1583d9da90f6592c735ee296e522228", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61414fd6c1cdc9bee06018fccf5e58ebdb508905/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61414fd6c1cdc9bee06018fccf5e58ebdb508905/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=61414fd6c1cdc9bee06018fccf5e58ebdb508905", "patch": "@@ -433,10 +433,6 @@ impl<'b, 'a, 'tcx> ReachEverythingInTheInterfaceVisitor<'b, 'a, 'tcx> {\n \n     fn ty(&mut self) -> &mut Self {\n         let ty = self.ev.tcx.type_of(self.item_def_id);\n-        self.walk_ty(ty)\n-    }\n-\n-    fn walk_ty(&mut self, ty: Ty<'tcx>) -> &mut Self {\n         ty.visit_with(self);\n         if let ty::TyFnDef(def_id, _) = ty.sty {\n             if def_id == self.item_def_id {\n@@ -1568,7 +1564,7 @@ impl<'a, 'tcx> Visitor<'tcx> for PrivateItemsInPublicInterfacesVisitor<'a, 'tcx>\n                 // where `X` is the `impl Iterator<Item=T>` itself,\n                 // stored in `predicates_of`, not in the `Ty` itself.\n \n-                self.check(item.id, self.inner_visibility).predicates();\n+                self.check(item.id, item_visibility).predicates();\n             }\n             // Subitems of these items have inherited publicity\n             hir::ItemConst(..) | hir::ItemStatic(..) | hir::ItemFn(..) |"}, {"sha": "c57c1cfe74f9cc289fbe9e5bcfbe8d27e0c36a42", "filename": "src/test/run-pass/impl-trait/auxiliary/xcrate.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61414fd6c1cdc9bee06018fccf5e58ebdb508905/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fauxiliary%2Fxcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61414fd6c1cdc9bee06018fccf5e58ebdb508905/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fauxiliary%2Fxcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fauxiliary%2Fxcrate.rs?ref=61414fd6c1cdc9bee06018fccf5e58ebdb508905", "patch": "@@ -17,6 +17,10 @@ fn some_internal_fn() -> u32 {\n     1\n }\n \n+fn other_internal_fn() -> u32 {\n+    1\n+}\n+\n // See #40839\n pub fn return_closure_accessing_internal_fn() -> impl Fn() -> u32 {\n     || {\n@@ -25,5 +29,5 @@ pub fn return_closure_accessing_internal_fn() -> impl Fn() -> u32 {\n }\n \n pub fn return_internal_fn() -> impl Fn() -> u32 {\n-    some_internal_fn\n+    other_internal_fn\n }"}, {"sha": "e68637b35d157468b4ec622a07883c89bfd0bca3", "filename": "src/test/ui/impl-trait/issue-52128.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/61414fd6c1cdc9bee06018fccf5e58ebdb508905/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-52128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61414fd6c1cdc9bee06018fccf5e58ebdb508905/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-52128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-52128.rs?ref=61414fd6c1cdc9bee06018fccf5e58ebdb508905", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+\n+#![deny(warnings)]\n+\n+use std::collections::BTreeMap;\n+\n+pub struct RangeMap {\n+    map: BTreeMap<Range, u8>,\n+}\n+\n+#[derive(Eq, PartialEq, Ord, PartialOrd)]\n+struct Range;\n+\n+impl RangeMap {\n+    fn iter_with_range<'a>(&'a self) -> impl Iterator<Item = (&'a Range, &'a u8)> + 'a {\n+        self.map.range(Range..Range)\n+    }\n+\n+    pub fn iter<'a>(&'a self) -> impl Iterator<Item = &'a u8> + 'a {\n+        self.iter_with_range().map(|(_, data)| data)\n+    }\n+\n+}\n+\n+fn main() {}"}]}