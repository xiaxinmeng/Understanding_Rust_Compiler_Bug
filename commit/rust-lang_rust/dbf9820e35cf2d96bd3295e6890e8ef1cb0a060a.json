{"sha": "dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZjk4MjBlMzVjZjJkOTZiZDMyOTVlNjg5MGU4ZWYxY2IwYTA2MGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-03T19:15:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-03T19:15:31Z"}, "message": "make HirDatabase object-safe", "tree": {"sha": "0b2388011e628c6a1ff6d7cbca0664ba00dfe4f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b2388011e628c6a1ff6d7cbca0664ba00dfe4f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "html_url": "https://github.com/rust-lang/rust/commit/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "395965351d467c716f259935557117fe42a8c9f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/395965351d467c716f259935557117fe42a8c9f4", "html_url": "https://github.com/rust-lang/rust/commit/395965351d467c716f259935557117fe42a8c9f4"}], "stats": {"total": 42, "additions": 26, "deletions": 16}, "files": [{"sha": "926cf0bd598eed91888a1434673cb48a0b074633", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "patch": "@@ -19,7 +19,7 @@ pub use crate::{\n     loc2id::LocationIntener,\n };\n \n-pub trait CheckCanceled: salsa::Database + panic::RefUnwindSafe {\n+pub trait CheckCanceled: panic::RefUnwindSafe {\n     /// Aborts current query if there are pending changes.\n     ///\n     /// rust-analyzer needs to be able to answer semantic questions about the\n@@ -33,23 +33,28 @@ pub trait CheckCanceled: salsa::Database + panic::RefUnwindSafe {\n     ///\n     /// We implement cancellation by panicking with a special value and catching\n     /// it on the API boundary. Salsa explicitly supports this use-case.\n-    fn check_canceled(&self) {\n-        if self.salsa_runtime().is_current_revision_canceled() {\n-            Canceled::throw()\n-        }\n-    }\n+    fn check_canceled(&self);\n \n-    fn catch_canceled<F: FnOnce(&Self) -> T + panic::UnwindSafe, T>(\n-        &self,\n-        f: F,\n-    ) -> Result<T, Canceled> {\n+    fn catch_canceled<F, T>(&self, f: F) -> Result<T, Canceled>\n+    where\n+        Self: Sized,\n+        F: FnOnce(&Self) -> T + panic::UnwindSafe,\n+    {\n         panic::catch_unwind(|| f(self)).map_err(|err| match err.downcast::<Canceled>() {\n             Ok(canceled) => *canceled,\n             Err(payload) => panic::resume_unwind(payload),\n         })\n     }\n }\n \n+impl<T: salsa::Database + panic::RefUnwindSafe> CheckCanceled for T {\n+    fn check_canceled(&self) {\n+        if self.salsa_runtime().is_current_revision_canceled() {\n+            Canceled::throw()\n+        }\n+    }\n+}\n+\n #[derive(Clone, Copy, Debug)]\n pub struct FilePosition {\n     pub file_id: FileId,\n@@ -65,7 +70,7 @@ pub struct FileRange {\n /// Database which stores all significant input facts: source code and project\n /// model. Everything else in rust-analyzer is derived from these queries.\n #[salsa::query_group(SourceDatabaseStorage)]\n-pub trait SourceDatabase: salsa::Database + CheckCanceled {\n+pub trait SourceDatabase: CheckCanceled {\n     /// Text of the file.\n     #[salsa::input]\n     fn file_text(&self, file_id: FileId) -> Arc<String>;"}, {"sha": "e03632519bdf07cb46e410743ada572228add46f", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "patch": "@@ -103,3 +103,8 @@ pub trait HirDatabase: PersistentHirDatabase {\n     #[salsa::invoke(crate::ty::method_resolution::CrateImplBlocks::impls_in_crate_query)]\n     fn impls_in_crate(&self, krate: Crate) -> Arc<CrateImplBlocks>;\n }\n+\n+#[test]\n+fn hir_database_is_object_safe() {\n+    fn _assert_object_safe(_: &dyn HirDatabase) {}\n+}"}, {"sha": "00a07d1a18a252b841487516b78968a6e7f02f53", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "patch": "@@ -2,7 +2,7 @@ use std::{sync::Arc, panic};\n \n use parking_lot::Mutex;\n use ra_db::{\n-    CheckCanceled, FilePosition, FileId, CrateGraph, SourceRoot, SourceRootId, SourceDatabase, salsa,\n+    FilePosition, FileId, CrateGraph, SourceRoot, SourceRootId, SourceDatabase, salsa,\n };\n use relative_path::RelativePathBuf;\n use test_utils::{parse_fixture, CURSOR_MARKER, extract_offset};\n@@ -159,8 +159,6 @@ impl salsa::ParallelDatabase for MockDatabase {\n     }\n }\n \n-impl CheckCanceled for MockDatabase {}\n-\n impl AsRef<HirInterner> for MockDatabase {\n     fn as_ref(&self) -> &HirInterner {\n         &self.interner"}, {"sha": "00f4bdfd246654bfffc9342bbc3097e5e1578905", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "patch": "@@ -60,8 +60,6 @@ impl salsa::ParallelDatabase for RootDatabase {\n     }\n }\n \n-impl CheckCanceled for RootDatabase {}\n-\n impl AsRef<hir::HirInterner> for RootDatabase {\n     fn as_ref(&self) -> &hir::HirInterner {\n         &self.interner"}, {"sha": "65941a5ca8d3c8e3c151792723441ae9c929244b", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=dbf9820e35cf2d96bd3295e6890e8ef1cb0a060a", "patch": "@@ -9,6 +9,10 @@\n //!\n //! The sibling `ra_ide_api_light` handles thouse bits of IDE functionality\n //! which are restricted to a single file and need only syntax.\n+\n+// For proving that RootDatabase is RefUnwindSafe.\n+#![recursion_limit = \"128\"]\n+\n mod db;\n mod imp;\n pub mod mock_analysis;"}]}