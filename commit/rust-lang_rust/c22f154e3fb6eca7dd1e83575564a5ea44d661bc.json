{"sha": "c22f154e3fb6eca7dd1e83575564a5ea44d661bc", "node_id": "C_kwDOAAsO6NoAKGMyMmYxNTRlM2ZiNmVjYTdkZDFlODM1NzU1NjRhNWVhNDRkNjYxYmM", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-03-16T23:59:08Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-03-16T23:59:08Z"}, "message": "Do not ICE for native_lib without name", "tree": {"sha": "141344a88c9ac6255ac4bc73e149831106d16053", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/141344a88c9ac6255ac4bc73e149831106d16053"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22f154e3fb6eca7dd1e83575564a5ea44d661bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22f154e3fb6eca7dd1e83575564a5ea44d661bc", "html_url": "https://github.com/rust-lang/rust/commit/c22f154e3fb6eca7dd1e83575564a5ea44d661bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22f154e3fb6eca7dd1e83575564a5ea44d661bc/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "511364e7874dba9649a264100407e4bffe7b5425", "url": "https://api.github.com/repos/rust-lang/rust/commits/511364e7874dba9649a264100407e4bffe7b5425", "html_url": "https://github.com/rust-lang/rust/commit/511364e7874dba9649a264100407e4bffe7b5425"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "6b6aa78575ae9729c4d00d0db66e59dad330fa27", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c22f154e3fb6eca7dd1e83575564a5ea44d661bc/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22f154e3fb6eca7dd1e83575564a5ea44d661bc/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=c22f154e3fb6eca7dd1e83575564a5ea44d661bc", "patch": "@@ -53,12 +53,13 @@ fn find_bundled_library(\n     sess: &Session,\n ) -> Option<Symbol> {\n     if let NativeLibKind::Static { bundle: Some(true) | None, whole_archive } = kind\n+        && let Some(name) = name\n         && sess.crate_types().iter().any(|t| matches!(t, &CrateType::Rlib | CrateType::Staticlib))\n         && (sess.opts.unstable_opts.packed_bundled_libs || has_cfg || whole_archive == Some(true))\n     {\n         let verbatim = verbatim.unwrap_or(false);\n         let search_paths = &sess.target_filesearch(PathKind::Native).search_path_dirs();\n-        return find_native_static_library(name.unwrap().as_str(), verbatim, search_paths, sess)\n+        return find_native_static_library(name.as_str(), verbatim, search_paths, sess)\n             .file_name()\n             .and_then(|s| s.to_str())\n             .map(Symbol::intern);"}]}