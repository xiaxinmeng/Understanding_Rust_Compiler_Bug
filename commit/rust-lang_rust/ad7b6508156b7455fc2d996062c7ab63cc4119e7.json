{"sha": "ad7b6508156b7455fc2d996062c7ab63cc4119e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkN2I2NTA4MTU2Yjc0NTVmYzJkOTk2MDYyYzdhYjYzY2M0MTE5ZTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-13T02:33:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-13T02:33:36Z"}, "message": "Rollup merge of #58876 - estebank:numeric-lifetime, r=petrochenkov\n\nParse lifetimes that start with a number and give specific error\n\nFix #58786.", "tree": {"sha": "8b1df85119fd76215c8cfe64392a73c73fe013f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b1df85119fd76215c8cfe64392a73c73fe013f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad7b6508156b7455fc2d996062c7ab63cc4119e7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJciGwACRBK7hj4Ov3rIwAAdHIIAHvLuApuuka+FRSOKyCoNdZp\n2sQqtbwhLc4uUMd3AZZBBIJsbFjk7IAHPpESfBWeuBKAHCBV0Cu9csqtzn+9v7dN\n1rGACzyq4nIGdG2Bb/WMeB2jLdcB/6DPRC5Nw30nTYorQ8chuT8YX3SAt2Jfswgj\ns2wr41y9tiLLGmpdQfbOedJc72NJs4OzCytHe5VZokNX5Jge11AFJeK3RyxCZb9m\nXKTQp4I84PUklsfgjKmuRZvF8L1bYuPCkxlFm5S4EsuDldL61CaFhX9Y1nSQznYD\nuVs5SHsT7uQiXYuD9J7D6GBvF22srpFoD5NHrOkf1enT4lKZWcpVi7neAdHJqdQ=\n=DRMc\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b1df85119fd76215c8cfe64392a73c73fe013f3\nparent 445c4bc0f878292f0b0a5b7e6080a996f74e44b1\nparent f690821d58650358f536606722a8f5531c8a6b84\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1552444416 +0100\ncommitter GitHub <noreply@github.com> 1552444416 +0100\n\nRollup merge of #58876 - estebank:numeric-lifetime, r=petrochenkov\n\nParse lifetimes that start with a number and give specific error\n\nFix #58786.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7b6508156b7455fc2d996062c7ab63cc4119e7", "html_url": "https://github.com/rust-lang/rust/commit/ad7b6508156b7455fc2d996062c7ab63cc4119e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad7b6508156b7455fc2d996062c7ab63cc4119e7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "445c4bc0f878292f0b0a5b7e6080a996f74e44b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/445c4bc0f878292f0b0a5b7e6080a996f74e44b1", "html_url": "https://github.com/rust-lang/rust/commit/445c4bc0f878292f0b0a5b7e6080a996f74e44b1"}, {"sha": "f690821d58650358f536606722a8f5531c8a6b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/f690821d58650358f536606722a8f5531c8a6b84", "html_url": "https://github.com/rust-lang/rust/commit/f690821d58650358f536606722a8f5531c8a6b84"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "01e3b2929031896a97fdcec9a0b058e8d94b3f93", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ad7b6508156b7455fc2d996062c7ab63cc4119e7/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7b6508156b7455fc2d996062c7ab63cc4119e7/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=ad7b6508156b7455fc2d996062c7ab63cc4119e7", "patch": "@@ -1423,15 +1423,17 @@ impl<'a> StringReader<'a> {\n \n                 // If the character is an ident start not followed by another single\n                 // quote, then this is a lifetime name:\n-                if ident_start(Some(c2)) && !self.ch_is('\\'') {\n+                if (ident_start(Some(c2)) || c2.is_numeric()) && !self.ch_is('\\'') {\n                     while ident_continue(self.ch) {\n                         self.bump();\n                     }\n                     // lifetimes shouldn't end with a single quote\n                     // if we find one, then this is an invalid character literal\n                     if self.ch_is('\\'') {\n-                        self.err_span_(start_with_quote, self.next_pos,\n-                                \"character literal may only contain one codepoint\");\n+                        self.err_span_(\n+                            start_with_quote,\n+                            self.next_pos,\n+                            \"character literal may only contain one codepoint\");\n                         self.bump();\n                         return Ok(token::Literal(token::Err(Symbol::intern(\"??\")), None))\n \n@@ -1444,6 +1446,15 @@ impl<'a> StringReader<'a> {\n                         self.mk_ident(&format!(\"'{}\", lifetime_name))\n                     });\n \n+                    if c2.is_numeric() {\n+                        // this is a recovered lifetime written `'1`, error but accept it\n+                        self.err_span_(\n+                            start_with_quote,\n+                            self.pos,\n+                            \"lifetimes cannot start with a number\",\n+                        );\n+                    }\n+\n                     return Ok(token::Lifetime(ident));\n                 }\n \n@@ -1873,6 +1884,7 @@ fn is_block_doc_comment(s: &str) -> bool {\n     res\n }\n \n+/// Determine whether `c` is a valid start for an ident.\n fn ident_start(c: Option<char>) -> bool {\n     let c = match c {\n         Some(c) => c,"}, {"sha": "2d82354c62cca706fa9c17c35ed5b5f7e3575034", "filename": "src/test/ui/parser/numeric-lifetime.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad7b6508156b7455fc2d996062c7ab63cc4119e7/src%2Ftest%2Fui%2Fparser%2Fnumeric-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7b6508156b7455fc2d996062c7ab63cc4119e7/src%2Ftest%2Fui%2Fparser%2Fnumeric-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fnumeric-lifetime.rs?ref=ad7b6508156b7455fc2d996062c7ab63cc4119e7", "patch": "@@ -0,0 +1,8 @@\n+struct S<'1> { s: &'1 usize }\n+//~^ ERROR lifetimes cannot start with a number\n+//~| ERROR lifetimes cannot start with a number\n+fn main() {\n+    // verify that the parse error doesn't stop type checking\n+    let x: usize = \"\";\n+    //~^ ERROR mismatched types\n+}"}, {"sha": "4018b24aac17590e35f84c65f185e150e806323e", "filename": "src/test/ui/parser/numeric-lifetime.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ad7b6508156b7455fc2d996062c7ab63cc4119e7/src%2Ftest%2Fui%2Fparser%2Fnumeric-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad7b6508156b7455fc2d996062c7ab63cc4119e7/src%2Ftest%2Fui%2Fparser%2Fnumeric-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fnumeric-lifetime.stderr?ref=ad7b6508156b7455fc2d996062c7ab63cc4119e7", "patch": "@@ -0,0 +1,24 @@\n+error: lifetimes cannot start with a number\n+  --> $DIR/numeric-lifetime.rs:1:10\n+   |\n+LL | struct S<'1> { s: &'1 usize }\n+   |          ^^\n+\n+error: lifetimes cannot start with a number\n+  --> $DIR/numeric-lifetime.rs:1:20\n+   |\n+LL | struct S<'1> { s: &'1 usize }\n+   |                    ^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/numeric-lifetime.rs:6:20\n+   |\n+LL |     let x: usize = \"\";\n+   |                    ^^ expected usize, found reference\n+   |\n+   = note: expected type `usize`\n+              found type `&'static str`\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}