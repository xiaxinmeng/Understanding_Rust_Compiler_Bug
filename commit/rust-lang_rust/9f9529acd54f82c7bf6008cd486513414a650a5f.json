{"sha": "9f9529acd54f82c7bf6008cd486513414a650a5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOTUyOWFjZDU0ZjgyYzdiZjYwMDhjZDQ4NjUxMzQxNGE2NTBhNWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-01T15:29:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-01T15:29:48Z"}, "message": "Rollup merge of #58507 - Zoxc:time-extended, r=michaelwoerister\n\nAdd a -Z time option which prints only passes which runs once\n\nThis ensures `-Z time-passes` fits on my screen =P\n\nr? @michaelwoerister", "tree": {"sha": "ab7d767b9fb36120607388ae1cfb607303633bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab7d767b9fb36120607388ae1cfb607303633bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f9529acd54f82c7bf6008cd486513414a650a5f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcoi5tCRBK7hj4Ov3rIwAAdHIIAKSrcxKcLkPnjVl6a84dMzum\nizikam0wfxRNc/CUfOKGK6S6gohheE+EFXkBzfO3CUHqrtmfWb+gdhA9SXAwHiQq\n0EK2RY9nOvGpG5NRAUNbZ2EzCjsDRVXK218jv6xuR5d66zGZg3ZmT7lxJlAxqmb3\nD31/jwE2Y8RvqIMF4t8RjvfwRxfL66dyn3zfbytun2zX32LSCl9K25/Va4XnaVKI\nlCArhdBOBiZ+3dEVEM+Fi60rOClT/fnkJYw0xRv7Lv0OrwbbW7BvevBVqCqhnE7Q\na/UMqu1zXRlt2xl0+aTyiouH7bXmdOHnT7lwZM9qYaAX1YSy0Em8WBY+muMa5M0=\n=ctuc\n-----END PGP SIGNATURE-----\n", "payload": "tree ab7d767b9fb36120607388ae1cfb607303633bbb\nparent eab3eb38df8dca99110b6149b3a15deeb4ef0413\nparent e842f570d9a7f2e77e4b49b7a7e0f329de2b5e18\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554132588 +0200\ncommitter GitHub <noreply@github.com> 1554132588 +0200\n\nRollup merge of #58507 - Zoxc:time-extended, r=michaelwoerister\n\nAdd a -Z time option which prints only passes which runs once\n\nThis ensures `-Z time-passes` fits on my screen =P\n\nr? @michaelwoerister\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9529acd54f82c7bf6008cd486513414a650a5f", "html_url": "https://github.com/rust-lang/rust/commit/9f9529acd54f82c7bf6008cd486513414a650a5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f9529acd54f82c7bf6008cd486513414a650a5f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eab3eb38df8dca99110b6149b3a15deeb4ef0413", "url": "https://api.github.com/repos/rust-lang/rust/commits/eab3eb38df8dca99110b6149b3a15deeb4ef0413", "html_url": "https://github.com/rust-lang/rust/commit/eab3eb38df8dca99110b6149b3a15deeb4ef0413"}, {"sha": "e842f570d9a7f2e77e4b49b7a7e0f329de2b5e18", "url": "https://api.github.com/repos/rust-lang/rust/commits/e842f570d9a7f2e77e4b49b7a7e0f329de2b5e18", "html_url": "https://github.com/rust-lang/rust/commit/e842f570d9a7f2e77e4b49b7a7e0f329de2b5e18"}], "stats": {"total": 47, "additions": 26, "deletions": 21}, "files": [{"sha": "988e4a9ff23a2809d159411e73b515bd355a6cfc", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=9f9529acd54f82c7bf6008cd486513414a650a5f", "patch": "@@ -1200,6 +1200,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"when using two-phase-borrows, allow two phases even for non-autoref `&mut` borrows\"),\n     time_passes: bool = (false, parse_bool, [UNTRACKED],\n         \"measure time of each rustc pass\"),\n+    time: bool = (false, parse_bool, [UNTRACKED],\n+        \"measure time of rustc processes\"),\n     count_llvm_insns: bool = (false, parse_bool,\n         [UNTRACKED_WITH_WARNING(true,\n         \"The output generated by `-Z count_llvm_insns` might not be reliable \\"}, {"sha": "2f3df32945ceb050be73e4c93b2825203fbdba30", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=9f9529acd54f82c7bf6008cd486513414a650a5f", "patch": "@@ -504,6 +504,9 @@ impl Session {\n         self.opts.debugging_opts.verbose\n     }\n     pub fn time_passes(&self) -> bool {\n+        self.opts.debugging_opts.time_passes || self.opts.debugging_opts.time\n+    }\n+    pub fn time_extended(&self) -> bool {\n         self.opts.debugging_opts.time_passes\n     }\n     pub fn profile_queries(&self) -> bool {"}, {"sha": "28cf3f5245ef87c4a014cc0e862ba16491b95682", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=9f9529acd54f82c7bf6008cd486513414a650a5f", "patch": "@@ -12,7 +12,7 @@ use crate::session::{CrateDisambiguator, Session};\n use crate::ty;\n use crate::ty::codec::{self as ty_codec, TyDecoder, TyEncoder};\n use crate::ty::context::TyCtxt;\n-use crate::util::common::time;\n+use crate::util::common::{time, time_ext};\n \n use errors::Diagnostic;\n use rustc_data_structures::fx::FxHashMap;\n@@ -1080,23 +1080,22 @@ fn encode_query_results<'enc, 'a, 'tcx, Q, E>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let desc = &format!(\"encode_query_results for {}\",\n         unsafe { ::std::intrinsics::type_name::<Q>() });\n \n-    time(tcx.sess, desc, || {\n+    time_ext(tcx.sess.time_extended(), Some(tcx.sess), desc, || {\n+        let map = Q::query_cache(tcx).borrow();\n+        assert!(map.active.is_empty());\n+        for (key, entry) in map.results.iter() {\n+            if Q::cache_on_disk(tcx, key.clone()) {\n+                let dep_node = SerializedDepNodeIndex::new(entry.index.index());\n \n-    let map = Q::query_cache(tcx).borrow();\n-    assert!(map.active.is_empty());\n-    for (key, entry) in map.results.iter() {\n-        if Q::cache_on_disk(tcx, key.clone()) {\n-            let dep_node = SerializedDepNodeIndex::new(entry.index.index());\n+                // Record position of the cache entry\n+                query_result_index.push((dep_node, AbsoluteBytePos::new(encoder.position())));\n \n-            // Record position of the cache entry\n-            query_result_index.push((dep_node, AbsoluteBytePos::new(encoder.position())));\n-\n-            // Encode the type check tables with the SerializedDepNodeIndex\n-            // as tag.\n-            encoder.encode_tagged(dep_node, &entry.value)?;\n+                // Encode the type check tables with the SerializedDepNodeIndex\n+                // as tag.\n+                encoder.encode_tagged(dep_node, &entry.value)?;\n+            }\n         }\n-    }\n \n-    Ok(())\n+        Ok(())\n     })\n }"}, {"sha": "f10bc0516e5bf38a9c049ab3e053bd3d9d40dd93", "filename": "src/librustc_codegen_llvm/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs?ref=9f9529acd54f82c7bf6008cd486513414a650a5f", "patch": "@@ -18,7 +18,7 @@ use rustc::session::Session;\n use rustc::middle::cstore::{NativeLibrary, NativeLibraryKind};\n use rustc::middle::dependency_format::Linkage;\n use rustc_codegen_ssa::CodegenResults;\n-use rustc::util::common::time;\n+use rustc::util::common::{time, time_ext};\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc::hir::def_id::CrateNum;\n use tempfile::{Builder as TempFileBuilder, TempDir};\n@@ -1319,7 +1319,7 @@ fn add_upstream_rust_crates(cmd: &mut dyn Linker,\n         let name = cratepath.file_name().unwrap().to_str().unwrap();\n         let name = &name[3..name.len() - 5]; // chop off lib/.rlib\n \n-        time(sess, &format!(\"altering {}.rlib\", name), || {\n+        time_ext(sess.time_extended(), Some(sess), &format!(\"altering {}.rlib\", name), || {\n             let cfg = archive_config(sess, &dst, Some(cratepath));\n             let mut archive = ArchiveBuilder::new(cfg);\n             archive.update_symbols();"}, {"sha": "fa8c4177eafe23fb900cad53b86c625bcc2ffb0d", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=9f9529acd54f82c7bf6008cd486513414a650a5f", "patch": "@@ -125,7 +125,7 @@ impl ModuleConfig {\n         self.verify_llvm_ir = sess.verify_llvm_ir();\n         self.no_prepopulate_passes = sess.opts.cg.no_prepopulate_passes;\n         self.no_builtins = no_builtins || sess.target.target.options.no_builtins;\n-        self.time_passes = sess.time_passes();\n+        self.time_passes = sess.time_extended();\n         self.inline_threshold = sess.opts.cg.inline_threshold;\n         self.obj_is_bitcode = sess.target.target.options.obj_is_bitcode ||\n                               sess.opts.cg.linker_plugin_lto.enabled();\n@@ -1091,7 +1091,7 @@ fn start_executing_work<B: ExtraBackendMethods>(\n         fewer_names: sess.fewer_names(),\n         save_temps: sess.opts.cg.save_temps,\n         opts: Arc::new(sess.opts.clone()),\n-        time_passes: sess.time_passes(),\n+        time_passes: sess.time_extended(),\n         profiler: sess.self_profiling.clone(),\n         exported_symbols,\n         plugin_passes: sess.plugin_llvm_passes.borrow().clone(),"}, {"sha": "ac10683598aa7e183262881ffc85669db03dfc23", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9529acd54f82c7bf6008cd486513414a650a5f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=9f9529acd54f82c7bf6008cd486513414a650a5f", "patch": "@@ -403,8 +403,9 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         mir_def_id: DefId,\n         errors_buffer: &mut Vec<Diagnostic>,\n     ) -> Option<ClosureRegionRequirements<'gcx>> {\n-        common::time(\n-            infcx.tcx.sess,\n+        common::time_ext(\n+            infcx.tcx.sess.time_extended(),\n+            Some(infcx.tcx.sess),\n             &format!(\"solve_nll_region_constraints({:?})\", mir_def_id),\n             || self.solve_inner(infcx, mir, mir_def_id, errors_buffer),\n         )"}]}