{"sha": "74b755d23366bcfa5437df25b023f5a2451e1ea6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0Yjc1NWQyMzM2NmJjZmE1NDM3ZGYyNWIwMjNmNWEyNDUxZTFlYTY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-05T14:15:16Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-05T14:15:16Z"}, "message": "Allow merge_imports assists to merge imports of equal visibility", "tree": {"sha": "064d14350b07990caabce384e4529ccbbe7f50b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/064d14350b07990caabce384e4529ccbbe7f50b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74b755d23366bcfa5437df25b023f5a2451e1ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74b755d23366bcfa5437df25b023f5a2451e1ea6", "html_url": "https://github.com/rust-lang/rust/commit/74b755d23366bcfa5437df25b023f5a2451e1ea6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74b755d23366bcfa5437df25b023f5a2451e1ea6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ccb198af81d8f33ccad66a417ae6529f91df625", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ccb198af81d8f33ccad66a417ae6529f91df625", "html_url": "https://github.com/rust-lang/rust/commit/7ccb198af81d8f33ccad66a417ae6529f91df625"}], "stats": {"total": 67, "additions": 61, "deletions": 6}, "files": [{"sha": "0bd6792605392210cd0c8980e321f199059324aa", "filename": "crates/assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/74b755d23366bcfa5437df25b023f5a2451e1ea6/crates%2Fassists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74b755d23366bcfa5437df25b023f5a2451e1ea6/crates%2Fassists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=74b755d23366bcfa5437df25b023f5a2451e1ea6", "patch": "@@ -149,6 +149,56 @@ pub use std::fmt::Display;\n         );\n     }\n \n+    #[test]\n+    fn skip_pub_crate_pub() {\n+        check_assist_not_applicable(\n+            merge_imports,\n+            r\"\n+pub(crate) use std::fmt<|>::Debug;\n+pub use std::fmt::Display;\n+\",\n+        );\n+    }\n+\n+    #[test]\n+    fn skip_pub_pub_crate() {\n+        check_assist_not_applicable(\n+            merge_imports,\n+            r\"\n+pub use std::fmt<|>::Debug;\n+pub(crate) use std::fmt::Display;\n+\",\n+        );\n+    }\n+\n+    #[test]\n+    fn merge_pub() {\n+        check_assist(\n+            merge_imports,\n+            r\"\n+pub use std::fmt<|>::Debug;\n+pub use std::fmt::Display;\n+\",\n+            r\"\n+pub use std::fmt::{Debug, Display};\n+\",\n+        )\n+    }\n+\n+    #[test]\n+    fn merge_pub_crate() {\n+        check_assist(\n+            merge_imports,\n+            r\"\n+pub(crate) use std::fmt<|>::Debug;\n+pub(crate) use std::fmt::Display;\n+\",\n+            r\"\n+pub(crate) use std::fmt::{Debug, Display};\n+\",\n+        )\n+    }\n+\n     #[test]\n     fn test_merge_nested() {\n         check_assist("}, {"sha": "98553b2e0866a67de4ba14fdbaa0d781c79d8ce6", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/74b755d23366bcfa5437df25b023f5a2451e1ea6/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74b755d23366bcfa5437df25b023f5a2451e1ea6/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=74b755d23366bcfa5437df25b023f5a2451e1ea6", "patch": "@@ -138,18 +138,23 @@ pub(crate) fn insert_use(\n     algo::insert_children(scope.as_syntax_node(), insert_position, to_insert)\n }\n \n+fn eq_visibility(vis0: Option<ast::Visibility>, vis1: Option<ast::Visibility>) -> bool {\n+    match (vis0, vis1) {\n+        (None, None) => true,\n+        // FIXME: Don't use the string representation to check for equality\n+        // spaces inside of the node would break this comparison\n+        (Some(vis0), Some(vis1)) => vis0.to_string() == vis1.to_string(),\n+        _ => false,\n+    }\n+}\n+\n pub(crate) fn try_merge_imports(\n     old: &ast::Use,\n     new: &ast::Use,\n     merge_behaviour: MergeBehaviour,\n ) -> Option<ast::Use> {\n     // don't merge imports with different visibilities\n-    if old\n-        .visibility()\n-        .and_then(|vis| vis.pub_token())\n-        .or_else(|| new.visibility().and_then(|vis| vis.pub_token()))\n-        .is_some()\n-    {\n+    if !eq_visibility(old.visibility(), new.visibility()) {\n         return None;\n     }\n     let old_tree = old.use_tree()?;"}]}