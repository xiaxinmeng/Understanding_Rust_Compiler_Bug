{"sha": "adce9545600d0e52e1cd09bb5632e5de697e8712", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkY2U5NTQ1NjAwZDBlNTJlMWNkMDliYjU2MzJlNWRlNjk3ZTg3MTI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-24T15:55:29Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-24T15:55:29Z"}, "message": "Support inner attributes", "tree": {"sha": "2fb01c64114779c29006f53e7f407942bf755648", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fb01c64114779c29006f53e7f407942bf755648"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adce9545600d0e52e1cd09bb5632e5de697e8712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adce9545600d0e52e1cd09bb5632e5de697e8712", "html_url": "https://github.com/rust-lang/rust/commit/adce9545600d0e52e1cd09bb5632e5de697e8712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adce9545600d0e52e1cd09bb5632e5de697e8712/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "url": "https://api.github.com/repos/rust-lang/rust/commits/b559a0f2f2177b381c6c3c670745b2cd4dbdea67", "html_url": "https://github.com/rust-lang/rust/commit/b559a0f2f2177b381c6c3c670745b2cd4dbdea67"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "77a39f9efc3a88f103fc8987ee5fc95478ea6f0a", "filename": "src/visitor.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/adce9545600d0e52e1cd09bb5632e5de697e8712/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adce9545600d0e52e1cd09bb5632e5de697e8712/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=adce9545600d0e52e1cd09bb5632e5de697e8712", "patch": "@@ -597,31 +597,27 @@ impl<'a> FmtVisitor<'a> {\n     }\n \n     // Returns true if we should skip the following item.\n-    pub fn visit_attrs(&mut self, attrs: &[ast::Attribute]) -> bool {\n+    pub fn visit_attrs(&mut self, attrs: &[ast::Attribute], style: ast::AttrStyle) -> bool {\n         if utils::contains_skip(attrs) {\n             return true;\n         }\n \n-        let outers: Vec<_> = attrs\n-            .iter()\n-            .filter(|a| a.style == ast::AttrStyle::Outer)\n-            .cloned()\n-            .collect();\n-        if outers.is_empty() {\n+        let attrs: Vec<_> = attrs.iter().filter(|a| a.style == style).cloned().collect();\n+        if attrs.is_empty() {\n             return false;\n         }\n \n-        let first = &outers[0];\n+        let first = &attrs[0];\n         self.format_missing_with_indent(source!(self, first.span).lo);\n \n-        let rewrite = outers\n+        let rewrite = attrs\n             .rewrite(\n                 &self.get_context(),\n                 Shape::indented(self.block_indent, self.config),\n             )\n             .unwrap();\n         self.buffer.push_str(&rewrite);\n-        let last = outers.last().unwrap();\n+        let last = attrs.last().unwrap();\n         self.last_pos = source!(self, last.span).hi;\n         false\n     }\n@@ -836,14 +832,18 @@ impl Rewrite for ast::MetaItem {\n impl Rewrite for ast::Attribute {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         try_opt!(self.meta()).rewrite(context, shape).map(\n-            |rw| if rw.starts_with(\"///\") {\n+            |rw| if self.is_sugared_doc {\n                 rw\n             } else {\n                 let original = context.snippet(self.span);\n+                let prefix = match self.style {\n+                    ast::AttrStyle::Inner => \"#!\",\n+                    ast::AttrStyle::Outer => \"#\",\n+                };\n                 if contains_comment(&original) {\n                     original\n                 } else {\n-                    format!(\"#[{}]\", rw)\n+                    format!(\"{}[{}]\", prefix, rw)\n                 }\n             },\n         )"}]}