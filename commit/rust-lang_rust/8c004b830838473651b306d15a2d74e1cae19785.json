{"sha": "8c004b830838473651b306d15a2d74e1cae19785", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMDA0YjgzMDgzODQ3MzY1MWIzMDZkMTVhMmQ3NGUxY2FlMTk3ODU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-17T19:17:53Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-21T13:41:19Z"}, "message": "Add E0665", "tree": {"sha": "04f5816ae6803589c5c7683b0b73016488f973b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04f5816ae6803589c5c7683b0b73016488f973b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c004b830838473651b306d15a2d74e1cae19785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c004b830838473651b306d15a2d74e1cae19785", "html_url": "https://github.com/rust-lang/rust/commit/8c004b830838473651b306d15a2d74e1cae19785", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c004b830838473651b306d15a2d74e1cae19785/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3150564f889a3bad01795d9fcb31d4f14d58a99", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3150564f889a3bad01795d9fcb31d4f14d58a99", "html_url": "https://github.com/rust-lang/rust/commit/e3150564f889a3bad01795d9fcb31d4f14d58a99"}], "stats": {"total": 99, "additions": 82, "deletions": 17}, "files": [{"sha": "9a0eb2ef30e49218b5d591986439d14d8a61f3aa", "filename": "src/libsyntax_ext/asm.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fasm.rs?ref=8c004b830838473651b306d15a2d74e1cae19785", "patch": "@@ -45,17 +45,6 @@ impl State {\n     }\n }\n \n-macro_rules! span_err_if_not_stage0 {\n-    ($cx:expr, $sp:expr, $code:ident, $text:tt) => {\n-        #[cfg(not(stage0))] {\n-            span_err!($cx, $sp, $code, $text)\n-        }\n-        #[cfg(stage0)] {\n-            $cx.span_err($sp, $text)\n-        }\n-    }\n-}\n-\n const OPTIONS: &'static [&'static str] = &[\"volatile\", \"alignstack\", \"intel\"];\n \n pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt,"}, {"sha": "cbd6a257b77e8ae2ae23951d0915495547c09624", "filename": "src/libsyntax_ext/deriving/default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs?ref=8c004b830838473651b306d15a2d74e1cae19785", "patch": "@@ -76,8 +76,8 @@ fn default_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructur\n             }\n         }\n         StaticEnum(..) => {\n-            cx.span_err(trait_span,\n-                        \"`Default` cannot be derived for enums, only structs\");\n+            span_err_if_not_stage0!(cx, trait_span, E0665,\n+                                    \"`Default` cannot be derived for enums, only structs\");\n             // let compilation continue\n             cx.expr_usize(trait_span, 0)\n         }"}, {"sha": "0dd55f8d77738a4d53fa6d74844822a9bfeedd93", "filename": "src/libsyntax_ext/deriving/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs?ref=8c004b830838473651b306d15a2d74e1cae19785", "patch": "@@ -19,6 +19,17 @@ use syntax::ptr::P;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n \n+macro_rules! span_err_if_not_stage0 {\n+    ($cx:expr, $sp:expr, $code:ident, $text:tt) => {\n+        #[cfg(not(stage0))] {\n+            span_err!($cx, $sp, $code, $text)\n+        }\n+        #[cfg(stage0)] {\n+            $cx.span_err($sp, $text)\n+        }\n+    }\n+}\n+\n macro path_local($x:ident) {\n     generic::ty::Path::new_local(stringify!($x))\n }"}, {"sha": "f99a6c3c2166de717d5c6993c4d660fa8d0bfe48", "filename": "src/libsyntax_ext/diagnostics.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fdiagnostics.rs?ref=8c004b830838473651b306d15a2d74e1cae19785", "patch": "@@ -82,7 +82,7 @@ A clobber was surrounded by braces in the `asm` macro.\n \n Erroneous code example:\n \n-```compile_fail,E0663\n+```compile_fail,E0664\n asm!(\"mov $$0x200, %eax\"\n      :\n      :\n@@ -94,4 +94,38 @@ Considering that this would be a long explanation, we instead recommend you to\n take a look at the unstable book:\n https://doc.rust-lang.org/unstable-book/language-features/asm.html\n \"##,\n+\n+E0665: r##\"\n+The `Default` trait was derived on an enum.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0665\n+#[derive(Default)]\n+enum Food {\n+    Sweet,\n+    Salty,\n+}\n+```\n+\n+The `Default` cannot be derived on an enum for the simple reason that the\n+compiler doesn't know which value to pick by default whereas it can for a\n+struct as long as all its fields implement the `Default` trait as well.\n+\n+If you still want to implement `Default` on your enum, you'll have to do it \"by\n+hand\":\n+\n+```\n+enum Food {\n+    Sweet,\n+    Salty,\n+}\n+\n+impl Default for Food {\n+    fn default() -> Food {\n+        Food::Sweet\n+    }\n+}\n+```\n+\"##,\n }"}, {"sha": "3b5fb14aae3c93180d430b15efb65e72bd686a2f", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c004b830838473651b306d15a2d74e1cae19785/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=8c004b830838473651b306d15a2d74e1cae19785", "patch": "@@ -32,8 +32,12 @@ extern crate rustc_target;\n #[cfg(not(stage0))]\n mod diagnostics;\n \n-mod assert;\n+#[macro_use]\n+// for custom_derive\n+pub mod deriving;\n+\n mod asm;\n+mod assert;\n mod cfg;\n mod compile_error;\n mod concat;\n@@ -47,8 +51,6 @@ mod trace_macros;\n \n pub mod proc_macro_registrar;\n \n-// for custom_derive\n-pub mod deriving;\n \n pub mod proc_macro_impl;\n "}, {"sha": "8888bedf01687840cd1bc71ad251ad813c454773", "filename": "src/test/ui/E0665.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8c004b830838473651b306d15a2d74e1cae19785/src%2Ftest%2Fui%2FE0665.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c004b830838473651b306d15a2d74e1cae19785/src%2Ftest%2Fui%2FE0665.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0665.rs?ref=8c004b830838473651b306d15a2d74e1cae19785", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-stage1\n+\n+#[derive(Default)] //~ ERROR E0665\n+enum Food {\n+    Sweet,\n+    Salty,\n+}\n+\n+fn main() {\n+}"}, {"sha": "c97e9e5ea89d080b25e57e0d1ab0741f438b56f2", "filename": "src/test/ui/E0665.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8c004b830838473651b306d15a2d74e1cae19785/src%2Ftest%2Fui%2FE0665.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c004b830838473651b306d15a2d74e1cae19785/src%2Ftest%2Fui%2FE0665.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0665.stderr?ref=8c004b830838473651b306d15a2d74e1cae19785", "patch": "@@ -0,0 +1,9 @@\n+error[E0665]: `Default` cannot be derived for enums, only structs\n+  --> $DIR/E0665.rs:13:10\n+   |\n+LL | #[derive(Default)] //~ ERROR E0665\n+   |          ^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0665`."}]}