{"sha": "231bf229325c0b1382419383489f1cc0f2f08b0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMWJmMjI5MzI1YzBiMTM4MjQxOTM4MzQ4OWYxY2MwZjJmMDhiMGQ=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-16T19:14:57Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-16T19:23:18Z"}, "message": "check if we're trying to guess for a local module", "tree": {"sha": "029126139bdc28dae4b17417adfafcf489f0eb1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/029126139bdc28dae4b17417adfafcf489f0eb1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/231bf229325c0b1382419383489f1cc0f2f08b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/231bf229325c0b1382419383489f1cc0f2f08b0d", "html_url": "https://github.com/rust-lang/rust/commit/231bf229325c0b1382419383489f1cc0f2f08b0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/231bf229325c0b1382419383489f1cc0f2f08b0d/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34f6103961d698a473cc9789494c19caece3cc52", "url": "https://api.github.com/repos/rust-lang/rust/commits/34f6103961d698a473cc9789494c19caece3cc52", "html_url": "https://github.com/rust-lang/rust/commit/34f6103961d698a473cc9789494c19caece3cc52"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4e72d532a95f0262336650498119285b5672223c", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/231bf229325c0b1382419383489f1cc0f2f08b0d/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/231bf229325c0b1382419383489f1cc0f2f08b0d/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=231bf229325c0b1382419383489f1cc0f2f08b0d", "patch": "@@ -4249,7 +4249,8 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n         let mut candidates = Vec::new();\n         let mut worklist = Vec::new();\n         let mut seen_modules = FxHashSet();\n-        worklist.push((start_module, Vec::new(), false));\n+        let not_local_module = crate_name != keywords::Crate.ident();\n+        worklist.push((start_module, Vec::new(), not_local_module));\n \n         while let Some((in_module,\n                         path_segments,"}]}