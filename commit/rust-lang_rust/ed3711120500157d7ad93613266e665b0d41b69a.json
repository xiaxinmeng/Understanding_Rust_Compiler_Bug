{"sha": "ed3711120500157d7ad93613266e665b0d41b69a", "node_id": "C_kwDOAAsO6NoAKGVkMzcxMTEyMDUwMDE1N2Q3YWQ5MzYxMzI2NmU2NjViMGQ0MWI2OWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-02T16:21:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-02T16:21:59Z"}, "message": "Rollup merge of #100200 - petrochenkov:zgccld2, r=lqd,Mark-Simulacrum\n\nChange implementation of `-Z gcc-ld` and `lld-wrapper` again\n\nThis PR partially reverts https://github.com/rust-lang/rust/pull/97375 and uses the strategy described in https://github.com/rust-lang/rust/issues/97402#issuecomment-1147404520 instead, thus fixes https://github.com/rust-lang/rust/issues/97755.", "tree": {"sha": "7b99b24fa964cf0c1a05c82c1c9ee7563da65d1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b99b24fa964cf0c1a05c82c1c9ee7563da65d1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed3711120500157d7ad93613266e665b0d41b69a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjEi2nCRBK7hj4Ov3rIwAA3KoIAJahMKPZ+z4J0UcQ7tEiR0aO\nrefY6buX0CGsldNEl/R0bqI6/q53NVwVYbeIHOM60uqtHwSjDF9XZjHgJ2JHlxiy\nzoijaHMTseKYNSfgchbgWml8y3zGVHZNOq/zvSP8ZUCn2J6V1KfeYF3H9mU3Ex5A\nfl0TBSTGquQQEjcdnylkIMxGbTbJhFU9wpbsBK0FMy86hYwS1Ax9NiA/Ha4GzTma\n8aKi2JYXZuSiJK70i6Euy1nHBjWYnIYzJyr0zJuJHDX0f0GRroU+6SCEn4tiA6Ct\na479vgMsK2C910DhWDyuIltFc8KVcr5jgErdDsoeq+JC7o1dT7QRc64PCfqmY+c=\n=7S7+\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b99b24fa964cf0c1a05c82c1c9ee7563da65d1f\nparent 938897e2e429445dca5a549b5d4eb194a291a7c2\nparent 6b68921ca0d25690e9d7d3b5d6f442fb1bda1fcc\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1662135719 +0200\ncommitter GitHub <noreply@github.com> 1662135719 +0200\n\nRollup merge of #100200 - petrochenkov:zgccld2, r=lqd,Mark-Simulacrum\n\nChange implementation of `-Z gcc-ld` and `lld-wrapper` again\n\nThis PR partially reverts https://github.com/rust-lang/rust/pull/97375 and uses the strategy described in https://github.com/rust-lang/rust/issues/97402#issuecomment-1147404520 instead, thus fixes https://github.com/rust-lang/rust/issues/97755.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed3711120500157d7ad93613266e665b0d41b69a", "html_url": "https://github.com/rust-lang/rust/commit/ed3711120500157d7ad93613266e665b0d41b69a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed3711120500157d7ad93613266e665b0d41b69a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "938897e2e429445dca5a549b5d4eb194a291a7c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/938897e2e429445dca5a549b5d4eb194a291a7c2", "html_url": "https://github.com/rust-lang/rust/commit/938897e2e429445dca5a549b5d4eb194a291a7c2"}, {"sha": "6b68921ca0d25690e9d7d3b5d6f442fb1bda1fcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b68921ca0d25690e9d7d3b5d6f442fb1bda1fcc", "html_url": "https://github.com/rust-lang/rust/commit/6b68921ca0d25690e9d7d3b5d6f442fb1bda1fcc"}], "stats": {"total": 81, "additions": 48, "deletions": 33}, "files": [{"sha": "e9171823c242c7c1be928306c1b50d76025066a4", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ed3711120500157d7ad93613266e665b0d41b69a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed3711120500157d7ad93613266e665b0d41b69a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=ed3711120500157d7ad93613266e665b0d41b69a", "patch": "@@ -2797,20 +2797,24 @@ fn add_gcc_ld_path(cmd: &mut dyn Linker, sess: &Session, flavor: LinkerFlavor) {\n         if let LinkerFlavor::Gcc = flavor {\n             match ld_impl {\n                 LdImpl::Lld => {\n-                    let tools_path = sess.get_tools_search_paths(false);\n-                    let gcc_ld_dir = tools_path\n-                        .into_iter()\n-                        .map(|p| p.join(\"gcc-ld\"))\n-                        .find(|p| {\n-                            p.join(if sess.host.is_like_windows { \"ld.exe\" } else { \"ld\" }).exists()\n-                        })\n-                        .unwrap_or_else(|| sess.fatal(\"rust-lld (as ld) not found\"));\n-                    cmd.arg({\n-                        let mut arg = OsString::from(\"-B\");\n-                        arg.push(gcc_ld_dir);\n-                        arg\n-                    });\n-                    cmd.arg(format!(\"-Wl,-rustc-lld-flavor={}\", sess.target.lld_flavor.as_str()));\n+                    // Implement the \"self-contained\" part of -Zgcc-ld\n+                    // by adding rustc distribution directories to the tool search path.\n+                    for path in sess.get_tools_search_paths(false) {\n+                        cmd.arg({\n+                            let mut arg = OsString::from(\"-B\");\n+                            arg.push(path.join(\"gcc-ld\"));\n+                            arg\n+                        });\n+                    }\n+                    // Implement the \"linker flavor\" part of -Zgcc-ld\n+                    // by asking cc to use some kind of lld.\n+                    cmd.arg(\"-fuse-ld=lld\");\n+                    if sess.target.lld_flavor != LldFlavor::Ld {\n+                        // Tell clang to use a non-default LLD flavor.\n+                        // Gcc doesn't understand the target option, but we currently assume\n+                        // that gcc is not used for Apple and Wasm targets (#97402).\n+                        cmd.arg(format!(\"--target={}\", sess.target.llvm_target));\n+                    }\n                 }\n             }\n         } else {"}, {"sha": "c13e83f6c86126c82563b80f224f6252bf6dfc2e", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ed3711120500157d7ad93613266e665b0d41b69a/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed3711120500157d7ad93613266e665b0d41b69a/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=ed3711120500157d7ad93613266e665b0d41b69a", "patch": "@@ -1281,7 +1281,9 @@ impl Step for Assemble {\n                 compiler: build_compiler,\n                 target: target_compiler.host,\n             });\n-            builder.copy(&lld_wrapper_exe, &gcc_ld_dir.join(exe(\"ld\", target_compiler.host)));\n+            for name in crate::LLD_FILE_NAMES {\n+                builder.copy(&lld_wrapper_exe, &gcc_ld_dir.join(exe(name, target_compiler.host)));\n+            }\n         }\n \n         if builder.config.rust_codegen_backends.contains(&INTERNER.intern_str(\"llvm\")) {"}, {"sha": "1a59b3958f1060844999fa0dac6ab6e7f30c3807", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ed3711120500157d7ad93613266e665b0d41b69a/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed3711120500157d7ad93613266e665b0d41b69a/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=ed3711120500157d7ad93613266e665b0d41b69a", "patch": "@@ -423,8 +423,11 @@ impl Step for Rustc {\n                 let gcc_lld_src_dir = src_dir.join(\"gcc-ld\");\n                 let gcc_lld_dst_dir = dst_dir.join(\"gcc-ld\");\n                 t!(fs::create_dir(&gcc_lld_dst_dir));\n-                let exe_name = exe(\"ld\", compiler.host);\n-                builder.copy(&gcc_lld_src_dir.join(&exe_name), &gcc_lld_dst_dir.join(&exe_name));\n+                for name in crate::LLD_FILE_NAMES {\n+                    let exe_name = exe(name, compiler.host);\n+                    builder\n+                        .copy(&gcc_lld_src_dir.join(&exe_name), &gcc_lld_dst_dir.join(&exe_name));\n+                }\n             }\n \n             // Man pages"}, {"sha": "cc0cf12bd187a7fc48ed6c06bfa09a9af5e064b0", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ed3711120500157d7ad93613266e665b0d41b69a/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed3711120500157d7ad93613266e665b0d41b69a/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ed3711120500157d7ad93613266e665b0d41b69a", "patch": "@@ -187,6 +187,9 @@ const LLVM_TOOLS: &[&str] = &[\n     \"opt\",           // used to optimize LLVM bytecode\n ];\n \n+/// LLD file names for all flavors.\n+const LLD_FILE_NAMES: &[&str] = &[\"ld.lld\", \"ld64.lld\", \"lld-link\", \"wasm-ld\"];\n+\n pub const VERSION: usize = 2;\n \n /// Extra --check-cfg to add when building"}, {"sha": "1795f3d7fe5bc5a3a0a9b908f333681274971dbb", "filename": "src/tools/lld-wrapper/src/main.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/ed3711120500157d7ad93613266e665b0d41b69a/src%2Ftools%2Flld-wrapper%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed3711120500157d7ad93613266e665b0d41b69a/src%2Ftools%2Flld-wrapper%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flld-wrapper%2Fsrc%2Fmain.rs?ref=ed3711120500157d7ad93613266e665b0d41b69a", "patch": "@@ -8,8 +8,8 @@\n //! make gcc/clang pass `-flavor <flavor>` as the first two arguments in the linker invocation\n //! and since Windows does not support symbolic links for files this wrapper is used in place of a\n //! symbolic link. It execs `../rust-lld -flavor <flavor>` by propagating the flavor argument\n-//! passed to the wrapper as the first two arguments. On Windows it spawns a `..\\rust-lld.exe`\n-//! child process.\n+//! obtained from the wrapper's name as the first two arguments.\n+//! On Windows it spawns a `..\\rust-lld.exe` child process.\n \n use std::fmt::Display;\n use std::path::{Path, PathBuf};\n@@ -53,29 +53,32 @@ fn get_rust_lld_path(current_exe_path: &Path) -> PathBuf {\n     rust_lld_path\n }\n \n+/// Extract LLD flavor name from the lld-wrapper executable name.\n+fn get_lld_flavor(current_exe_path: &Path) -> Result<&'static str, String> {\n+    let stem = current_exe_path.file_stem();\n+    Ok(match stem.and_then(|s| s.to_str()) {\n+        Some(\"ld.lld\") => \"gnu\",\n+        Some(\"ld64.lld\") => \"darwin\",\n+        Some(\"lld-link\") => \"link\",\n+        Some(\"wasm-ld\") => \"wasm\",\n+        _ => return Err(format!(\"{:?}\", stem)),\n+    })\n+}\n+\n /// Returns the command for invoking rust-lld with the correct flavor.\n-/// LLD only accepts the flavor argument at the first two arguments, so move it there.\n+/// LLD only accepts the flavor argument at the first two arguments, so pass it there.\n ///\n /// Exits on error.\n fn get_rust_lld_command(current_exe_path: &Path) -> process::Command {\n     let rust_lld_path = get_rust_lld_path(current_exe_path);\n     let mut command = process::Command::new(rust_lld_path);\n \n-    let mut flavor = None;\n-    let args = env::args_os()\n-        .skip(1)\n-        .filter(|arg| match arg.to_str().and_then(|s| s.strip_prefix(\"-rustc-lld-flavor=\")) {\n-            Some(suffix) => {\n-                flavor = Some(suffix.to_string());\n-                false\n-            }\n-            None => true,\n-        })\n-        .collect::<Vec<_>>();\n+    let flavor =\n+        get_lld_flavor(current_exe_path).unwrap_or_exit_with(\"executable has unexpected name\");\n \n     command.arg(\"-flavor\");\n-    command.arg(flavor.unwrap_or_exit_with(\"-rustc-lld-flavor=<flavor> is not passed\"));\n-    command.args(args);\n+    command.arg(flavor);\n+    command.args(env::args_os().skip(1));\n     command\n }\n "}]}