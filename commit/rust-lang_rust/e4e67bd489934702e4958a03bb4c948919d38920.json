{"sha": "e4e67bd489934702e4958a03bb4c948919d38920", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZTY3YmQ0ODk5MzQ3MDJlNDk1OGEwM2JiNGM5NDg5MTlkMzg5MjA=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-09-11T18:09:19Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-09-13T21:42:40Z"}, "message": "Add an attribute to mark function as unwinding", "tree": {"sha": "8efcf2d638423c3e6bdd5268fe0bc0b9e69d28cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8efcf2d638423c3e6bdd5268fe0bc0b9e69d28cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4e67bd489934702e4958a03bb4c948919d38920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e67bd489934702e4958a03bb4c948919d38920", "html_url": "https://github.com/rust-lang/rust/commit/e4e67bd489934702e4958a03bb4c948919d38920", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4e67bd489934702e4958a03bb4c948919d38920/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90c48bed25751f4c171b1555f8114234ca0a81c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c48bed25751f4c171b1555f8114234ca0a81c4", "html_url": "https://github.com/rust-lang/rust/commit/90c48bed25751f4c171b1555f8114234ca0a81c4"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c77cb49144818b4e94c3d3b3f896b503e0eb30ff", "filename": "src/librustc_trans/trans/attributes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e4e67bd489934702e4958a03bb4c948919d38920/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e67bd489934702e4958a03bb4c948919d38920/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs?ref=e4e67bd489934702e4958a03bb4c948919d38920", "patch": "@@ -59,7 +59,6 @@ pub fn emit_uwtable(val: ValueRef, emit: bool) {\n \n /// Tell LLVM whether the function can or cannot unwind.\n #[inline]\n-#[allow(dead_code)] // possibly useful function\n pub fn unwind(val: ValueRef, can_unwind: bool) {\n     if can_unwind {\n         unsafe {\n@@ -118,6 +117,8 @@ pub fn from_fn_attrs(ccx: &CrateContext, attrs: &[hir::Attribute], llfn: ValueRe\n             }\n         } else if attr.check_name(\"allocator\") {\n             llvm::Attribute::NoAlias.apply_llfn(llvm::ReturnIndex as c_uint, llfn);\n+        } else if attr.check_name(\"unwind\") {\n+            unwind(llfn, true);\n         }\n     }\n }"}, {"sha": "abc04102950557e972e05b66405865021960fe51", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4e67bd489934702e4958a03bb4c948919d38920/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e67bd489934702e4958a03bb4c948919d38920/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=e4e67bd489934702e4958a03bb4c948919d38920", "patch": "@@ -188,6 +188,9 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Option<u32>, Status\n \n     // allow `extern \"platform-intrinsic\" { ... }`\n     (\"platform_intrinsics\", \"1.4.0\", Some(27731), Active),\n+\n+    // allow `#[unwind]`\n+    (\"unwind_attributes\", \"1.4.0\", None, Active),\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -316,6 +319,7 @@ pub const KNOWN_ATTRIBUTES: &'static [(&'static str, AttributeType, AttributeGat\n     (\"unsafe_no_drop_flag\", Whitelisted, Gated(\"unsafe_no_drop_flag\",\n                                                \"unsafe_no_drop_flag has unstable semantics \\\n                                                 and may be removed in the future\")),\n+    (\"unwind\", Whitelisted, Gated(\"unwind_attributes\", \"#[unwind] is experimental\")),\n \n     // used in resolve\n     (\"prelude_import\", Whitelisted, Gated(\"prelude_import\","}]}