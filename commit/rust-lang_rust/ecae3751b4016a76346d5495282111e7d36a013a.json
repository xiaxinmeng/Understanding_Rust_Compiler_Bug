{"sha": "ecae3751b4016a76346d5495282111e7d36a013a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYWUzNzUxYjQwMTZhNzYzNDZkNTQ5NTI4MjExMWU3ZDM2YTAxM2E=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-10T11:03:51Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-11T08:43:52Z"}, "message": "Reintroduce prepending the input file name to the miri arguments", "tree": {"sha": "88557226f5d56294f6965a0a7e27ea5b06c93ca0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88557226f5d56294f6965a0a7e27ea5b06c93ca0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecae3751b4016a76346d5495282111e7d36a013a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecae3751b4016a76346d5495282111e7d36a013a", "html_url": "https://github.com/rust-lang/rust/commit/ecae3751b4016a76346d5495282111e7d36a013a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecae3751b4016a76346d5495282111e7d36a013a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d142ecf75cc347213502311253cd41f5d87dfaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d142ecf75cc347213502311253cd41f5d87dfaf", "html_url": "https://github.com/rust-lang/rust/commit/7d142ecf75cc347213502311253cd41f5d87dfaf"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "4cc0d955d3c217ce17bb9b185967b5cf32f083a5", "filename": "src/bin/miri.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ecae3751b4016a76346d5495282111e7d36a013a/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecae3751b4016a76346d5495282111e7d36a013a/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=ecae3751b4016a76346d5495282111e7d36a013a", "patch": "@@ -42,8 +42,12 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n \n         compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\"no main function found!\");\n+            let mut config = self.miri_config.clone();\n \n-            miri::eval_main(tcx, entry_def_id, self.miri_config.clone());\n+            // Add filename to `miri` arguments.\n+            config.args.insert(0, compiler.input().filestem().to_string());\n+\n+            miri::eval_main(tcx, entry_def_id, config);\n         });\n \n         compiler.session().abort_if_errors();"}]}