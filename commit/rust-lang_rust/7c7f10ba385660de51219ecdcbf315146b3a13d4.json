{"sha": "7c7f10ba385660de51219ecdcbf315146b3a13d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjN2YxMGJhMzg1NjYwZGU1MTIxOWVjZGNiZjMxNTE0NmIzYTEzZDQ=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2021-01-29T12:39:08Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-02-05T02:29:50Z"}, "message": "Bless code coverage test", "tree": {"sha": "44cc97bca586118c6bd03e0788654e33546f0a51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44cc97bca586118c6bd03e0788654e33546f0a51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c7f10ba385660de51219ecdcbf315146b3a13d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c7f10ba385660de51219ecdcbf315146b3a13d4", "html_url": "https://github.com/rust-lang/rust/commit/7c7f10ba385660de51219ecdcbf315146b3a13d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c7f10ba385660de51219ecdcbf315146b3a13d4/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb0e41f6b31a56ff533eff970e9d2769bee5cc96", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb0e41f6b31a56ff533eff970e9d2769bee5cc96", "html_url": "https://github.com/rust-lang/rust/commit/fb0e41f6b31a56ff533eff970e9d2769bee5cc96"}], "stats": {"total": 110, "additions": 6, "deletions": 104}, "files": [{"sha": "5071842aa1e9de60f1ea3b93b578ce6d573a501c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 104, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/7c7f10ba385660de51219ecdcbf315146b3a13d4/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/7c7f10ba385660de51219ecdcbf315146b3a13d4/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=7c7f10ba385660de51219ecdcbf315146b3a13d4", "patch": "@@ -78,7 +78,6 @@\n 100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\">        let mut countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n 99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n-<<<<<<< HEAD\n 100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n 100:21-102:10: @1[1]: _4 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n@@ -95,13 +94,13 @@\n 103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n 103:9-103:29: @3[26]: _20 = &amp;(*_18)\n 103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb9]\n+103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n 103:9-103:29: @4[2]: _15 = [move _19]\n 103:9-103:29: @4[5]: _14 = &amp;_15\n 103:9-103:29: @4[6]: _13 = &amp;(*_14)\n 103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb9]\n-103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb9]\n+103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n+103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb8]\n 103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n 103:9-103:29: @6[6]: _0 = move _6\n 104:6-104:6: @7.Return: return\"><span class=\"annotation\">@3,4,5,6,7\u298a</span>format!(\"'{}'\", val)</span></span>\n@@ -115,112 +114,15 @@\n 103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n 103:9-103:29: @3[26]: _20 = &amp;(*_18)\n 103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb9]\n+103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n 103:9-103:29: @4[2]: _15 = [move _19]\n 103:9-103:29: @4[5]: _14 = &amp;_15\n 103:9-103:29: @4[6]: _13 = &amp;(*_14)\n 103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb9]\n-103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb9]\n+103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n+103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb8]\n 103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n 103:9-103:29: @6[6]: _0 = move _6\n 104:6-104:6: @7.Return: return\">    }<span class=\"annotation\">\u2989@3,4,5,6,7</span></span></span></span></div>\n-||||||| parent of 3873f4c114a... Revert \"Avoid leaking block expression values\"\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n-100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"102:10-102:10: @2[0]: _4 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @4[8]: _10 = &amp;(*_22)\n-103:17-103:23: @4[9]: _9 = &amp;(*_10)\n-103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @4[18]: _17 = &amp;_2\n-103:9-103:29: @4[19]: _16 = (move _17,)\n-103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @4[26]: _20 = &amp;(*_18)\n-103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb10]\n-103:9-103:29: @5[2]: _15 = [move _19]\n-103:9-103:29: @5[5]: _14 = &amp;_15\n-103:9-103:29: @5[6]: _13 = &amp;(*_14)\n-103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb10]\n-103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb10]\n-103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @7[6]: _0 = move _6\n-104:6-104:6: @8.Return: return\"><span class=\"annotation\">@4,5,6,7,8\u298a</span>format!(\"'{}'\", val)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @4[8]: _10 = &amp;(*_22)\n-103:17-103:23: @4[9]: _9 = &amp;(*_10)\n-103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @4[18]: _17 = &amp;_2\n-103:9-103:29: @4[19]: _16 = (move _17,)\n-103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @4[26]: _20 = &amp;(*_18)\n-103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb10]\n-103:9-103:29: @5[2]: _15 = [move _19]\n-103:9-103:29: @5[5]: _14 = &amp;_15\n-103:9-103:29: @5[6]: _13 = &amp;(*_14)\n-103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb10]\n-103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb10]\n-103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @7[6]: _0 = move _6\n-104:6-104:6: @8.Return: return\">    }<span class=\"annotation\">\u2989@4,5,6,7,8</span></span></span></span></div>\n-=======\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\n-100:12-100:20: @0[6]: FakeRead(ForMatchedPlace, _5)\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @3[0]: _3 = const 10_i32\n-100:21-102:10: @3[1]: _4 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"102:10-102:10: @2[0]: _4 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @4[8]: _10 = &amp;(*_22)\n-103:17-103:23: @4[9]: _9 = &amp;(*_10)\n-103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @4[18]: _17 = &amp;_2\n-103:9-103:29: @4[19]: _16 = (move _17,)\n-103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @4[26]: _20 = &amp;(*_18)\n-103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb9]\n-103:9-103:29: @5[2]: _15 = [move _19]\n-103:9-103:29: @5[5]: _14 = &amp;_15\n-103:9-103:29: @5[6]: _13 = &amp;(*_14)\n-103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb9]\n-103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb9]\n-103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @7[6]: _0 = move _6\n-104:6-104:6: @8.Return: return\"><span class=\"annotation\">@4,5,6,7,8\u298a</span>format!(\"'{}'\", val)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @4[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @4[8]: _10 = &amp;(*_22)\n-103:17-103:23: @4[9]: _9 = &amp;(*_10)\n-103:17-103:23: @4[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @4[18]: _17 = &amp;_2\n-103:9-103:29: @4[19]: _16 = (move _17,)\n-103:9-103:29: @4[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @4[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @4[26]: _20 = &amp;(*_18)\n-103:9-103:29: @4[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @4.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb5, unwind: bb9]\n-103:9-103:29: @5[2]: _15 = [move _19]\n-103:9-103:29: @5[5]: _14 = &amp;_15\n-103:9-103:29: @5[6]: _13 = &amp;(*_14)\n-103:9-103:29: @5[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @5.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb6, unwind: bb9]\n-103:9-103:29: @6.Call: _6 = format(move _7) -&gt; [return: bb7, unwind: bb9]\n-103:9-103:29: @7[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @7[6]: _0 = move _6\n-104:6-104:6: @8.Return: return\">    }<span class=\"annotation\">\u2989@4,5,6,7,8</span></span></span></span></div>\n->>>>>>> 3873f4c114a... Revert \"Avoid leaking block expression values\"\n </body>\n </html>"}]}