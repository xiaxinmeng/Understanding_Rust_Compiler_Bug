{"sha": "0896ca04c4e6f88ae268a39472570df4b6d360b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4OTZjYTA0YzRlNmY4OGFlMjY4YTM5NDcyNTcwZGY0YjZkMzYwYjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-11T11:12:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-11T11:12:27Z"}, "message": "Merge #1989\n\n1989: Chalk update to simplified IR r=flodiebold a=kjeremy\n\n\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "164afa8cce93585541218c626c6daffa6c01f190", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/164afa8cce93585541218c626c6daffa6c01f190"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0896ca04c4e6f88ae268a39472570df4b6d360b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdoGObCRBK7hj4Ov3rIwAAdHIIAHHOMvU7371ENuzWVyGWnn3h\nSqyAklPV9VPNC2Ng4L4r7Lv6cijj3iJDMlk0ivw0EbWu89Dc5x2SesKcacTYlw0O\n0Ods/QNK7lwq+l4PSK7co7IpPB4YjCIngjQs65GjJOVe+igITK9Xc0ImJQ/WpAZw\nGFXQaqqCZlX63wHNJTyvsxG5QTNT1KdsvzR3zg+fxETZeZKUH42OVM7U42czKCOi\nGQtyTblCTgWBSUi6a6KbHHDczO00UZzkZmCczydg7vYXHLjzDgkNBZb4u9/I6pKi\nZr99DvUnkGvWnDCrc+o39uCXDvw3JQQg56JPJ1VDfbJwu1CF7u0GtxKTZmuzIlc=\n=PRjT\n-----END PGP SIGNATURE-----\n", "payload": "tree 164afa8cce93585541218c626c6daffa6c01f190\nparent 3c4e75721f16fc4f8ab67db4750f773f180cd12a\nparent 4ba2c5b2de0d1815007d109b3897ccaf6dda0ab5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1570792347 +0000\ncommitter GitHub <noreply@github.com> 1570792347 +0000\n\nMerge #1989\n\n1989: Chalk update to simplified IR r=flodiebold a=kjeremy\n\n\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0896ca04c4e6f88ae268a39472570df4b6d360b0", "html_url": "https://github.com/rust-lang/rust/commit/0896ca04c4e6f88ae268a39472570df4b6d360b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0896ca04c4e6f88ae268a39472570df4b6d360b0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c4e75721f16fc4f8ab67db4750f773f180cd12a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c4e75721f16fc4f8ab67db4750f773f180cd12a", "html_url": "https://github.com/rust-lang/rust/commit/3c4e75721f16fc4f8ab67db4750f773f180cd12a"}, {"sha": "4ba2c5b2de0d1815007d109b3897ccaf6dda0ab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ba2c5b2de0d1815007d109b3897ccaf6dda0ab5", "html_url": "https://github.com/rust-lang/rust/commit/4ba2c5b2de0d1815007d109b3897ccaf6dda0ab5"}], "stats": {"total": 69, "additions": 39, "deletions": 30}, "files": [{"sha": "965d5aaa038c4bc2691e82c55ee15dac4fdfcd8b", "filename": "Cargo.lock", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0896ca04c4e6f88ae268a39472570df4b6d360b0/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/0896ca04c4e6f88ae268a39472570df4b6d360b0/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=0896ca04c4e6f88ae268a39472570df4b6d360b0", "patch": "@@ -122,7 +122,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [[package]]\n name = \"chalk-engine\"\n version = \"0.9.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git#df09cc603c0cff9ed95e5554055d483fdd756fbc\"\n+source = \"git+https://github.com/rust-lang/chalk.git#13303bb0067c6ed0572322080ae367ee38f9e7c9\"\n dependencies = [\n  \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -132,7 +132,7 @@ dependencies = [\n [[package]]\n name = \"chalk-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git#df09cc603c0cff9ed95e5554055d483fdd756fbc\"\n+source = \"git+https://github.com/rust-lang/chalk.git#13303bb0067c6ed0572322080ae367ee38f9e7c9\"\n dependencies = [\n  \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\",\n@@ -142,15 +142,15 @@ dependencies = [\n [[package]]\n name = \"chalk-macros\"\n version = \"0.1.1\"\n-source = \"git+https://github.com/rust-lang/chalk.git#df09cc603c0cff9ed95e5554055d483fdd756fbc\"\n+source = \"git+https://github.com/rust-lang/chalk.git#13303bb0067c6ed0572322080ae367ee38f9e7c9\"\n dependencies = [\n  \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"chalk-rust-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git#df09cc603c0cff9ed95e5554055d483fdd756fbc\"\n+source = \"git+https://github.com/rust-lang/chalk.git#13303bb0067c6ed0572322080ae367ee38f9e7c9\"\n dependencies = [\n  \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n@@ -160,13 +160,12 @@ dependencies = [\n [[package]]\n name = \"chalk-solve\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git#df09cc603c0cff9ed95e5554055d483fdd756fbc\"\n+source = \"git+https://github.com/rust-lang/chalk.git#13303bb0067c6ed0572322080ae367ee38f9e7c9\"\n dependencies = [\n  \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\",\n  \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n- \"derive-new 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ena 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "9168de709216908e7f2f99c2d79f5df3605d52f3", "filename": "crates/ra_hir/src/ty/traits/chalk.rs", "status": "modified", "additions": 34, "deletions": 24, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/0896ca04c4e6f88ae268a39472570df4b6d360b0/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0896ca04c4e6f88ae268a39472570df4b6d360b0/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs?ref=0896ca04c4e6f88ae268a39472570df4b6d360b0", "patch": "@@ -491,15 +491,16 @@ pub(crate) fn trait_datum_query(\n             },\n             associated_ty_ids: Vec::new(),\n             where_clauses: Vec::new(),\n-            flags: chalk_rust_ir::TraitFlags {\n-                non_enumerable: true,\n-                auto: false,\n-                marker: false,\n-                upstream: true,\n-                fundamental: false,\n-            },\n         };\n-        return Arc::new(TraitDatum { binders: make_binders(trait_datum_bound, 1) });\n+\n+        let flags = chalk_rust_ir::TraitFlags {\n+            auto: false,\n+            marker: false,\n+            upstream: true,\n+            fundamental: false,\n+            non_enumerable: true,\n+        };\n+        return Arc::new(TraitDatum { binders: make_binders(trait_datum_bound, 1), flags });\n     }\n     let trait_: Trait = from_chalk(db, trait_id);\n     debug!(\"trait {:?} = {:?}\", trait_id, trait_.name(db));\n@@ -525,8 +526,9 @@ pub(crate) fn trait_datum_query(\n         .map(|type_alias| type_alias.to_chalk(db))\n         .collect();\n     let trait_datum_bound =\n-        chalk_rust_ir::TraitDatumBound { trait_ref, where_clauses, flags, associated_ty_ids };\n-    let trait_datum = TraitDatum { binders: make_binders(trait_datum_bound, bound_vars.len()) };\n+        chalk_rust_ir::TraitDatumBound { trait_ref, where_clauses, associated_ty_ids };\n+    let trait_datum =\n+        TraitDatum { binders: make_binders(trait_datum_bound, bound_vars.len()), flags };\n     Arc::new(trait_datum)\n }\n \n@@ -632,18 +634,20 @@ fn impl_block_datum(\n         })\n         .collect();\n \n-    let impl_datum_bound = chalk_rust_ir::ImplDatumBound {\n-        trait_ref: if negative {\n-            chalk_rust_ir::PolarizedTraitRef::Negative(trait_ref)\n-        } else {\n-            chalk_rust_ir::PolarizedTraitRef::Positive(trait_ref)\n-        },\n-        where_clauses,\n-        associated_ty_values,\n-        impl_type,\n+    let polarity = if negative {\n+        chalk_rust_ir::Polarity::Negative\n+    } else {\n+        chalk_rust_ir::Polarity::Positive\n     };\n+\n+    let impl_datum_bound =\n+        chalk_rust_ir::ImplDatumBound { trait_ref, where_clauses, associated_ty_values };\n     debug!(\"impl_datum: {:?}\", impl_datum_bound);\n-    let impl_datum = ImplDatum { binders: make_binders(impl_datum_bound, bound_vars.len()) };\n+    let impl_datum = ImplDatum {\n+        binders: make_binders(impl_datum_bound, bound_vars.len()),\n+        impl_type,\n+        polarity,\n+    };\n     Arc::new(impl_datum)\n }\n \n@@ -653,12 +657,15 @@ fn invalid_impl_datum() -> Arc<ImplDatum> {\n         parameters: vec![chalk_ir::Ty::BoundVar(0).cast()],\n     };\n     let impl_datum_bound = chalk_rust_ir::ImplDatumBound {\n-        trait_ref: chalk_rust_ir::PolarizedTraitRef::Positive(trait_ref),\n+        trait_ref,\n         where_clauses: Vec::new(),\n         associated_ty_values: Vec::new(),\n+    };\n+    let impl_datum = ImplDatum {\n+        binders: make_binders(impl_datum_bound, 1),\n         impl_type: chalk_rust_ir::ImplType::External,\n+        polarity: chalk_rust_ir::Polarity::Positive,\n     };\n-    let impl_datum = ImplDatum { binders: make_binders(impl_datum_bound, 1) };\n     Arc::new(impl_datum)\n }\n \n@@ -713,12 +720,15 @@ fn closure_fn_trait_impl_datum(\n     let impl_type = chalk_rust_ir::ImplType::External;\n \n     let impl_datum_bound = chalk_rust_ir::ImplDatumBound {\n-        trait_ref: chalk_rust_ir::PolarizedTraitRef::Positive(trait_ref.to_chalk(db)),\n+        trait_ref: trait_ref.to_chalk(db),\n         where_clauses: Vec::new(),\n         associated_ty_values: vec![output_ty_value],\n+    };\n+    let impl_datum = ImplDatum {\n+        binders: make_binders(impl_datum_bound, num_args as usize + 1),\n         impl_type,\n+        polarity: chalk_rust_ir::Polarity::Positive,\n     };\n-    let impl_datum = ImplDatum { binders: make_binders(impl_datum_bound, num_args as usize + 1) };\n     Some(Arc::new(impl_datum))\n }\n "}]}