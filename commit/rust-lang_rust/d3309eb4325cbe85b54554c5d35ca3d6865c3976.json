{"sha": "d3309eb4325cbe85b54554c5d35ca3d6865c3976", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMzA5ZWI0MzI1Y2JlODViNTQ1NTRjNWQzNWNhM2Q2ODY1YzM5NzY=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-09-18T23:18:53Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-09-18T23:18:53Z"}, "message": "tests: Remove crate_map from start.", "tree": {"sha": "d7f6ea30ba6fedb9d207847b69ccae60c74f4351", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7f6ea30ba6fedb9d207847b69ccae60c74f4351"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3309eb4325cbe85b54554c5d35ca3d6865c3976", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3309eb4325cbe85b54554c5d35ca3d6865c3976", "html_url": "https://github.com/rust-lang/rust/commit/d3309eb4325cbe85b54554c5d35ca3d6865c3976", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3309eb4325cbe85b54554c5d35ca3d6865c3976/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "133200a6e293f6e74b14ddb6334fab11b13e0f46", "url": "https://api.github.com/repos/rust-lang/rust/commits/133200a6e293f6e74b14ddb6334fab11b13e0f46", "html_url": "https://github.com/rust-lang/rust/commit/133200a6e293f6e74b14ddb6334fab11b13e0f46"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "4c9d388dbd77ba0a43eb150603ebb8582db6b3c1", "filename": "src/test/run-pass/attr-start.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3309eb4325cbe85b54554c5d35ca3d6865c3976/src%2Ftest%2Frun-pass%2Fattr-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3309eb4325cbe85b54554c5d35ca3d6865c3976/src%2Ftest%2Frun-pass%2Fattr-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-start.rs?ref=d3309eb4325cbe85b54554c5d35ca3d6865c3976", "patch": "@@ -11,6 +11,12 @@\n //xfail-fast\n \n #[start]\n+#[cfg(stage0)]\n fn start(_argc: int, _argv: **u8, _crate_map: *u8) -> int {\n     return 0;\n }\n+#[start]\n+#[cfg(not(stage0))]\n+fn start(_argc: int, _argv: **u8) -> int {\n+    return 0;\n+}"}, {"sha": "d7824a6524fe56280df78d3a71a3bf04af8e8bdb", "filename": "src/test/run-pass/core-rt-smoke.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3309eb4325cbe85b54554c5d35ca3d6865c3976/src%2Ftest%2Frun-pass%2Fcore-rt-smoke.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3309eb4325cbe85b54554c5d35ca3d6865c3976/src%2Ftest%2Frun-pass%2Fcore-rt-smoke.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-rt-smoke.rs?ref=d3309eb4325cbe85b54554c5d35ca3d6865c3976", "patch": "@@ -13,8 +13,16 @@\n // A simple test of starting the runtime manually\n \n #[start]\n+#[cfg(stage0)]\n fn start(argc: int, argv: **u8, crate_map: *u8) -> int {\n     do std::rt::start(argc, argv, crate_map) {\n         info!(\"creating my own runtime is joy\");\n     }\n }\n+#[start]\n+#[cfg(not(stage0))]\n+fn start(argc: int, argv: **u8) -> int {\n+    do std::rt::start(argc, argv) {\n+        info!(\"creating my own runtime is joy\");\n+    }\n+}"}, {"sha": "05e761378857961bee225a32a06adcf45db2258c", "filename": "src/test/run-pass/rt-start-main-thread.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d3309eb4325cbe85b54554c5d35ca3d6865c3976/src%2Ftest%2Frun-pass%2Frt-start-main-thread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3309eb4325cbe85b54554c5d35ca3d6865c3976/src%2Ftest%2Frun-pass%2Frt-start-main-thread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-start-main-thread.rs?ref=d3309eb4325cbe85b54554c5d35ca3d6865c3976", "patch": "@@ -11,11 +11,22 @@\n // xfail-fast\n \n #[start]\n+#[cfg(stage0)]\n fn start(argc: int, argv: **u8, crate_map: *u8) -> int {\n     do std::rt::start_on_main_thread(argc, argv, crate_map) {\n         info!(\"running on main thread\");\n         do spawn {\n             info!(\"running on another thread\");\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n+#[start]\n+#[cfg(not(stage0))]\n+fn start(argc: int, argv: **u8) -> int {\n+    do std::rt::start_on_main_thread(argc, argv) {\n+        info!(\"running on main thread\");\n+        do spawn {\n+            info!(\"running on another thread\");\n+        }\n+    }\n+}"}]}