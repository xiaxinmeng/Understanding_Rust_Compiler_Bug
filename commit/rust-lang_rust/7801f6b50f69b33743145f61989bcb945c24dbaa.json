{"sha": "7801f6b50f69b33743145f61989bcb945c24dbaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4MDFmNmI1MGY2OWIzMzc0MzE0NWY2MTk4OWJjYjk0NWMyNGRiYWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T17:33:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-27T19:57:18Z"}, "message": "automatically collect garbage", "tree": {"sha": "c8298c6cf601f40099c95bd685eae9827b798213", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8298c6cf601f40099c95bd685eae9827b798213"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7801f6b50f69b33743145f61989bcb945c24dbaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7801f6b50f69b33743145f61989bcb945c24dbaa", "html_url": "https://github.com/rust-lang/rust/commit/7801f6b50f69b33743145f61989bcb945c24dbaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7801f6b50f69b33743145f61989bcb945c24dbaa/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19f77603c0aed92ec70a836dae4d447b8fcab922", "url": "https://api.github.com/repos/rust-lang/rust/commits/19f77603c0aed92ec70a836dae4d447b8fcab922", "html_url": "https://github.com/rust-lang/rust/commit/19f77603c0aed92ec70a836dae4d447b8fcab922"}], "stats": {"total": 100, "additions": 75, "deletions": 25}, "files": [{"sha": "cbd4461c9ce8da5123e21656a0ae2fd16f26ea47", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -890,7 +890,7 @@ dependencies = [\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.10.0-alpha5\",\n  \"test_utils 0.1.0\",\n ]\n \n@@ -1267,22 +1267,20 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [[package]]\n name = \"salsa\"\n version = \"0.10.0-alpha5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lock_api 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa-macros 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa-macros 0.10.0-alpha5\",\n  \"smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"salsa-macros\"\n version = \"0.10.0-alpha5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1950,8 +1948,6 @@ dependencies = [\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum rusty-fork 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9591f190d2852720b679c21f66ad929f9f1d7bb09d1193c26167586029d8489c\"\n \"checksum ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb9e9b8cde282a9fe6a42dd4681319bfb63f121b8a8ee9439c6f4107e58a46f7\"\n-\"checksum salsa 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8b5e2535d707dc5ced81106d3b71d806cfeef8a6e8a567472fde7ffd56b770dd\"\n-\"checksum salsa-macros 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7c5da4c649f6d4fc1864fcd9a379b1f7c6d570b278559c84a6e15981c949cc6\"\n \"checksum same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267\"\n \"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\""}, {"sha": "e479b38a00242ab236a5617ba9d95bf6ee5885b3", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -5,8 +5,8 @@ version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n [dependencies]\n+salsa = { path = \"/home/matklad/projects/salsa\" }\n relative-path = \"0.4.0\"\n-salsa = \"0.10.0-alpha5\"\n rustc-hash = \"1.0\"\n parking_lot = \"0.7.0\"\n "}, {"sha": "6850811d75be46d51830b5f67e649552891fd604", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -1,4 +1,7 @@\n-use std::sync::Arc;\n+use std::{\n+    sync::Arc,\n+    time,\n+};\n \n use ra_db::{\n     CheckCanceled, FileId, Canceled, SourceDatabase,\n@@ -17,6 +20,8 @@ use crate::{LineIndex, symbol_index::{self, SymbolsDatabase}};\n pub(crate) struct RootDatabase {\n     runtime: salsa::Runtime<RootDatabase>,\n     interner: Arc<hir::HirInterner>,\n+    pub(crate) last_gc: time::Instant,\n+    pub(crate) last_gc_check: time::Instant,\n }\n \n impl salsa::Database for RootDatabase {\n@@ -33,6 +38,8 @@ impl Default for RootDatabase {\n         let mut db = RootDatabase {\n             runtime: salsa::Runtime::default(),\n             interner: Default::default(),\n+            last_gc: time::Instant::now(),\n+            last_gc_check: time::Instant::now(),\n         };\n         db.set_crate_graph(Default::default());\n         db.set_local_roots(Default::default());\n@@ -46,6 +53,8 @@ impl salsa::ParallelDatabase for RootDatabase {\n         salsa::Snapshot::new(RootDatabase {\n             runtime: self.runtime.snapshot(self),\n             interner: Arc::clone(&self.interner),\n+            last_gc: self.last_gc.clone(),\n+            last_gc_check: self.last_gc_check.clone(),\n         })\n     }\n }"}, {"sha": "0dd3e8cb0eec804a6e02f6076554eeab67e51bf9", "filename": "crates/ra_ide_api/src/imp.rs", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fimp.rs?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -1,4 +1,7 @@\n-use std::sync::Arc;\n+use std::{\n+    sync::Arc,\n+    time,\n+};\n \n use hir::{\n     self, Problem, source_binder\n@@ -19,12 +22,14 @@ use crate::{\n     CrateId, db, Diagnostic, FileId, FilePosition, FileRange, FileSystemEdit,\n     Query, RootChange, SourceChange, SourceFileEdit,\n     symbol_index::{FileSymbol, SymbolsDatabase},\n+    status::syntax_tree_stats\n };\n \n+const GC_COOLDOWN: time::Duration = time::Duration::from_millis(100);\n+\n impl db::RootDatabase {\n     pub(crate) fn apply_change(&mut self, change: AnalysisChange) {\n         log::info!(\"apply_change {:?}\", change);\n-        // self.gc_syntax_trees();\n         if !change.new_roots.is_empty() {\n             let mut local_roots = Vec::clone(&self.local_roots());\n             for (root_id, is_local) in change.new_roots {\n@@ -72,18 +77,41 @@ impl db::RootDatabase {\n         self.set_source_root(root_id, Arc::new(source_root));\n     }\n \n+    pub(crate) fn maybe_collect_garbage(&mut self) {\n+        if self.last_gc_check.elapsed() > GC_COOLDOWN {\n+            self.last_gc_check = time::Instant::now();\n+            let retained_trees = syntax_tree_stats(self).retained;\n+            if retained_trees > 100 {\n+                log::info!(\n+                    \"automatic garbadge collection, {} retained trees\",\n+                    retained_trees\n+                );\n+                self.collect_garbage();\n+            }\n+        }\n+    }\n+\n     /// Ideally, we should call this function from time to time to collect heavy\n     /// syntax trees. However, if we actually do that, everything is recomputed\n     /// for some reason. Needs investigation.\n     pub(crate) fn collect_garbage(&mut self) {\n-        self.query(ra_db::ParseQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n-        self.query(hir::db::HirParseQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n-        self.query(hir::db::FileItemsQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n-        self.query(hir::db::FileItemQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n+        self.last_gc = time::Instant::now();\n+\n+        let sweep = SweepStrategy::default()\n+            .discard_values()\n+            .discard_all_revisions();\n+\n+        self.query(ra_db::ParseQuery).sweep(sweep.clone());\n+\n+        self.query(hir::db::HirParseQuery).sweep(sweep.clone());\n+        self.query(hir::db::FileItemsQuery).sweep(sweep.clone());\n+        self.query(hir::db::FileItemQuery).sweep(sweep.clone());\n+\n+        self.query(hir::db::LowerModuleQuery).sweep(sweep.clone());\n+        self.query(hir::db::LowerModuleSourceMapQuery)\n+            .sweep(sweep.clone());\n+        self.query(hir::db::BodySyntaxMappingQuery)\n+            .sweep(sweep.clone());\n     }\n }\n "}, {"sha": "a7caac02d0f9d693beaa69d65bd8d4dde760eb8a", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -286,6 +286,10 @@ impl AnalysisHost {\n         self.db.apply_change(change)\n     }\n \n+    pub fn maybe_collect_garbage(&mut self) {\n+        self.db.maybe_collect_garbage();\n+    }\n+\n     pub fn collect_garbage(&mut self) {\n         self.db.collect_garbage();\n     }"}, {"sha": "0dde30ae017ddf43edafbe7a50634dad7c8735bf", "filename": "crates/ra_ide_api/src/status.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -15,9 +15,13 @@ use crate::{\n     symbol_index::{SymbolIndex, LibrarySymbolsQuery},\n };\n \n+pub(crate) fn syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n+    db.query(ParseQuery).entries::<SyntaxTreeStats>()\n+}\n+\n pub(crate) fn status(db: &RootDatabase) -> String {\n     let files_stats = db.query(FileTextQuery).entries::<FilesStats>();\n-    let syntax_tree_stats = db.query(ParseQuery).entries::<SyntaxTreeStats>();\n+    let syntax_tree_stats = syntax_tree_stats(db);\n     let symbols_stats = db\n         .query(LibrarySymbolsQuery)\n         .entries::<LibrarySymbolsStats>();\n@@ -26,8 +30,12 @@ pub(crate) fn status(db: &RootDatabase) -> String {\n         interner.len()\n     };\n     format!(\n-        \"{}\\n{}\\n{}\\nn_defs {}\\n\",\n-        files_stats, symbols_stats, syntax_tree_stats, n_defs\n+        \"{}\\n{}\\n{}\\nn_defs {}\\nGC {:?} seconds ago\",\n+        files_stats,\n+        symbols_stats,\n+        syntax_tree_stats,\n+        n_defs,\n+        db.last_gc.elapsed().as_secs(),\n     )\n }\n \n@@ -58,9 +66,9 @@ impl FromIterator<TableEntry<FileId, Arc<String>>> for FilesStats {\n }\n \n #[derive(Default)]\n-struct SyntaxTreeStats {\n+pub(crate) struct SyntaxTreeStats {\n     total: usize,\n-    retained: usize,\n+    pub(crate) retained: usize,\n     retained_size: Bytes,\n }\n "}, {"sha": "e430ac6dec0856c0dacf64864ab36fbddeaf42bb", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -172,6 +172,7 @@ fn main_loop_inner(\n \n     let (libdata_sender, libdata_receiver) = unbounded();\n     loop {\n+        state.maybe_collect_garbage();\n         log::trace!(\"selecting\");\n         let event = select! {\n             recv(msg_receiver) -> msg => match msg {\n@@ -207,7 +208,7 @@ fn main_loop_inner(\n                     };\n                     match req.cast::<req::CollectGarbage>() {\n                         Ok((id, ())) => {\n-                            state.collect_garbadge();\n+                            state.collect_garbage();\n                             let resp = RawResponse::ok::<req::CollectGarbage>(id, &());\n                             msg_sender.send(RawMessage::Response(resp)).unwrap()\n                         }"}, {"sha": "c2167c5d80342c69a2eb283accdfd45f9c4a0eb0", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7801f6b50f69b33743145f61989bcb945c24dbaa/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=7801f6b50f69b33743145f61989bcb945c24dbaa", "patch": "@@ -232,7 +232,11 @@ impl ServerWorldState {\n         }\n     }\n \n-    pub fn collect_garbadge(&mut self) {\n+    pub fn maybe_collect_garbage(&mut self) {\n+        self.analysis_host.maybe_collect_garbage()\n+    }\n+\n+    pub fn collect_garbage(&mut self) {\n         self.analysis_host.collect_garbage()\n     }\n }"}]}