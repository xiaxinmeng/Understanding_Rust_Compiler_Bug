{"sha": "09d71448b7bfa18dca8e3c94cde5914d25cdd607", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZDcxNDQ4YjdiZmExOGRjYThlM2M5NGNkZTU5MTRkMjVjZGQ2MDc=", "commit": {"author": {"name": "Deadbeef", "email": "fee1-dead-beef@protonmail.com", "date": "2021-03-23T02:45:34Z"}, "committer": {"name": "Deadbeef", "email": "fee1-dead-beef@protonmail.com", "date": "2021-03-23T02:45:34Z"}, "message": "Fix ICE of for-loop mut borrowck where no suggestions are available", "tree": {"sha": "634d14632f89bd79b65fbdd8abbe5c99797a8b35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/634d14632f89bd79b65fbdd8abbe5c99797a8b35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09d71448b7bfa18dca8e3c94cde5914d25cdd607", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEErZiERmmtiO2FTkTyyGmC8u3gwSgFAmBZVl4ACgkQyGmC8u3g\nwSieEg/8CvZl0dCQmrSgPGIYx90lzj8mpzvGrjxdQlM9oVEW5UDHmkU5mo3q/j87\ntU8WtDD7xil0kiuYfzKD7dB65P0EgTRVlgroEChCVzCLWDhm4umPJ5H6RJGwOTqn\nB1Fj8V7Ppfxx/jx8Ebj+VQs5sZOi7Xjpmbi6hx7O1B0r3NJ8G/Bn6Rj5jyE6qQ0b\nfDPcGcFoUcWnKDeExOrsT0graYj/fCpKBrvgb7YDHBORIvXYhXcRnO68V1muYxyt\nPrTJs0e3UliO8FQiikzfanu5fOj5D5r02+blMUs7gLqlpnogPliYWHlb6GwVJB0Y\n2GM/EiLyHy6/yNsxiAXDFqoOKLBe5xq+bya3cwIy7E8Rz8WrqdeUNGSNHrpoFxuA\nm+eFwvoSbgQU4tXdghpnw2tMJAjPzpGqFtw6W2FNxovjzEaxHP3UgFZXo2bGCUxo\n/wOy6weTEtCHIx7TI8IlQxnMJEFl5btwAkdhu35LSeLD3mGXi1MX9CGy1UIe0iv0\n9rEKaOsWr35ognZKTlTVWcYlqrq7c4Eep0bOnPyZ90pEtKT8hSn2I/YHv65oJ6gQ\n2lIWvnZfo5g54M2OIb9XFihbvHk11gmWYqBlb9sQSeQFckGZb3sKFB0yvQVs3mQW\nGccdESxE/xArcK2bury6BW8OgDWPtE2Nct+tr2tFDeehRaDzYQ0=\n=P04I\n-----END PGP SIGNATURE-----", "payload": "tree 634d14632f89bd79b65fbdd8abbe5c99797a8b35\nparent 5d04957a4b4714f71d38326fc96a0b0ef6dc5800\nauthor Deadbeef <fee1-dead-beef@protonmail.com> 1616467534 +0800\ncommitter Deadbeef <fee1-dead-beef@protonmail.com> 1616467534 +0800\n\nFix ICE of for-loop mut borrowck where no suggestions are available\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09d71448b7bfa18dca8e3c94cde5914d25cdd607", "html_url": "https://github.com/rust-lang/rust/commit/09d71448b7bfa18dca8e3c94cde5914d25cdd607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09d71448b7bfa18dca8e3c94cde5914d25cdd607/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d04957a4b4714f71d38326fc96a0b0ef6dc5800", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d04957a4b4714f71d38326fc96a0b0ef6dc5800", "html_url": "https://github.com/rust-lang/rust/commit/5d04957a4b4714f71d38326fc96a0b0ef6dc5800"}], "stats": {"total": 61, "additions": 54, "deletions": 7}, "files": [{"sha": "d1fb999e518ca59b46dda2ce97d4193e2a51f0a8", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/09d71448b7bfa18dca8e3c94cde5914d25cdd607/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09d71448b7bfa18dca8e3c94cde5914d25cdd607/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=09d71448b7bfa18dca8e3c94cde5914d25cdd607", "patch": "@@ -642,15 +642,18 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                                         .starts_with(&original_method_ident.name.to_string())\n                             })\n                             .map(|ident| format!(\"{}()\", ident))\n+                            .peekable()\n                     });\n \n-                if let Some(suggestions) = opt_suggestions {\n-                    err.span_suggestions(\n-                        path_segment.ident.span,\n-                        &format!(\"use mutable method\"),\n-                        suggestions,\n-                        Applicability::MaybeIncorrect,\n-                    );\n+                if let Some(mut suggestions) = opt_suggestions {\n+                    if suggestions.peek().is_some() {\n+                        err.span_suggestions(\n+                            path_segment.ident.span,\n+                            &format!(\"use mutable method\"),\n+                            suggestions,\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n                 }\n             }\n         };"}, {"sha": "6da88bed2c6ba0caf6a8e6da8b68c57fdc775a72", "filename": "src/test/ui/borrowck/issue-83309-ice-immut-in-for-loop.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/09d71448b7bfa18dca8e3c94cde5914d25cdd607/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09d71448b7bfa18dca8e3c94cde5914d25cdd607/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.rs?ref=09d71448b7bfa18dca8e3c94cde5914d25cdd607", "patch": "@@ -0,0 +1,32 @@\n+// rust-lang/rust#83309: The compiler tries to suggest potential\n+// methods that return `&mut` items. However, when it doesn't\n+// find such methods, it still tries to add suggestions\n+// which then fails an assertion later because there was\n+// no suggestions to make.\n+\n+\n+fn main() {\n+    for v in Query.iter_mut() {\n+        //~^ NOTE this iterator yields `&` references\n+        *v -= 1;\n+        //~^ ERROR cannot assign to `*v` which is behind a `&` reference\n+        //~| NOTE `v` is a `&` reference, so the data it refers to cannot be written\n+    }\n+}\n+\n+pub struct Query;\n+pub struct QueryIter<'a>(&'a i32);\n+\n+impl Query {\n+    pub fn iter_mut<'a>(&'a mut self) -> QueryIter<'a> {\n+        todo!();\n+    }\n+}\n+\n+impl<'a> Iterator for QueryIter<'a> {\n+    type Item = &'a i32;\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        todo!();\n+    }\n+}"}, {"sha": "143b74c39ba86b9a8bf7206e972ad9e033814ac2", "filename": "src/test/ui/borrowck/issue-83309-ice-immut-in-for-loop.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/09d71448b7bfa18dca8e3c94cde5914d25cdd607/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09d71448b7bfa18dca8e3c94cde5914d25cdd607/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.stderr?ref=09d71448b7bfa18dca8e3c94cde5914d25cdd607", "patch": "@@ -0,0 +1,12 @@\n+error[E0594]: cannot assign to `*v` which is behind a `&` reference\n+  --> $DIR/issue-83309-ice-immut-in-for-loop.rs:11:9\n+   |\n+LL |     for v in Query.iter_mut() {\n+   |              ---------------- this iterator yields `&` references\n+LL |\n+LL |         *v -= 1;\n+   |         ^^^^^^^ `v` is a `&` reference, so the data it refers to cannot be written\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0594`."}]}