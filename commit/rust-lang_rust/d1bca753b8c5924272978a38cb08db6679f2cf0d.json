{"sha": "d1bca753b8c5924272978a38cb08db6679f2cf0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYmNhNzUzYjhjNTkyNDI3Mjk3OGEzOGNiMDhkYjY2NzlmMmNmMGQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-16T00:34:19Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-16T18:59:11Z"}, "message": "Switch fmt extension to reference extfmt that's in core.", "tree": {"sha": "2d2d18cf31dea7c815d95c75dfec3e2677289178", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d2d18cf31dea7c815d95c75dfec3e2677289178"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1bca753b8c5924272978a38cb08db6679f2cf0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1bca753b8c5924272978a38cb08db6679f2cf0d", "html_url": "https://github.com/rust-lang/rust/commit/d1bca753b8c5924272978a38cb08db6679f2cf0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1bca753b8c5924272978a38cb08db6679f2cf0d/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88818334b7d6e4c4dfd07cdea09255ac8d42e5b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/88818334b7d6e4c4dfd07cdea09255ac8d42e5b7", "html_url": "https://github.com/rust-lang/rust/commit/88818334b7d6e4c4dfd07cdea09255ac8d42e5b7"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "3700ce2edfa8e8174c2867a4e0111a0e93c0bd24", "filename": "src/comp/syntax/ext/fmt.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d1bca753b8c5924272978a38cb08db6679f2cf0d/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1bca753b8c5924272978a38cb08db6679f2cf0d/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs?ref=d1bca753b8c5924272978a38cb08db6679f2cf0d", "patch": "@@ -96,13 +96,8 @@ fn pieces_to_expr(cx: ext_ctxt, sp: span, pieces: [piece], args: [@ast::expr])\n         let recexpr = ast::expr_rec(astfields, option::none::<@ast::expr>);\n         ret @{id: cx.next_id(), node: recexpr, span: sp};\n     }\n-    fn make_path_vec(cx: ext_ctxt, ident: ast::ident) -> [ast::ident] {\n-        fn compiling_std(cx: ext_ctxt) -> bool {\n-            ret str::find(cx.crate_file_name(), \"std.rc\") >= 0;\n-        }\n-        if compiling_std(cx) {\n-            ret [\"extfmt\", \"rt\", ident];\n-        } else { ret [\"std\", \"extfmt\", \"rt\", ident]; }\n+    fn make_path_vec(_cx: ext_ctxt, ident: ast::ident) -> [ast::ident] {\n+        ret [\"extfmt\", \"rt\", ident];\n     }\n     fn make_rt_path_expr(cx: ext_ctxt, sp: span, ident: str) -> @ast::expr {\n         let path = make_path_vec(cx, ident);"}]}