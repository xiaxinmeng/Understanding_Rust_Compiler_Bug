{"sha": "137ffa10229bfec497a446d24045388ee3c418d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzN2ZmYTEwMjI5YmZlYzQ5N2E0NDZkMjQwNDUzODhlZTNjNDE4ZDY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-11T23:19:02Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-11T23:54:33Z"}, "message": "Improve robustness of nested check.\n\nThis commit removes the assumption that the start of a use statement\nwill always be on one line with a single space - which was silly in the\nfirst place.", "tree": {"sha": "1c3cb996f30f7b47e286f3ced78c9784fedb5764", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c3cb996f30f7b47e286f3ced78c9784fedb5764"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/137ffa10229bfec497a446d24045388ee3c418d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlyv07kACgkQAXYLT59T\n8VQXZg/+M9ic/UGhhP6DffxadyTT6yRvLyJDl+0HFh023cPsk/Kgr3jSJzplFV/b\nPZDeB9cIqElDOlduhfBI7Kksqcr0CTqkwYqMPgWoxb7tX3QtGUVmkerFUijsPflD\n4oyL61325Bs8egJyO+4R1148GISPOrASJ6ql4aZnuntJuMb7jJRfXtTk1VP4Bs4D\n9Az4zRjnW+xI/hogDyR1VkoCtBhELUzg7d0aSD7mJp+Nol2GVWF1lOXzxD9MXykd\nRVReUmM/aOLMthMngatkVYaeRd51ZgxX4N6KmeNHNC3Ue5AR3Ix2RyLT+5Zm5Rvz\neeza06nHq2Lq2j7mXQSr2FkVwsg6grWqobNibwJ9uqwo6yLTU6rREq7JEjhlYYtd\nmkWu0fdb3B2qhW/Yg/Jb5eFvnZANAfEmtQZdGba2crMKIp2S6LWw2F6iiJGxXmP1\nxk8N36xt5ekxIzAkZcClhTE4hR4W9a9IAzk6JPwI5tDzrmctSNcptuWPCEDZq3xk\nqHN5ZQ7y34TbLJU4EX8Evf0UTD6XQRzHZVuyvtNd0mKPiKETBNmg2vNNDGA4zEb4\n1h5ftLfu7rTeWdNtVLMuZqu/KRKzh8kTfyGUaHf8NUwKY/1VrU9I+XL2BVdWKf7r\nxISiSheMJ6JHKxR0sbN3tE+RYxWteoIegHfsST2VrkxJ/YzyB3I=\n=+063\n-----END PGP SIGNATURE-----", "payload": "tree 1c3cb996f30f7b47e286f3ced78c9784fedb5764\nparent 7c955409e3cb06b2a5c008e80c6856cb25a74b33\nauthor David Wood <david@davidtw.co> 1555024742 +0200\ncommitter David Wood <david@davidtw.co> 1555026873 +0200\n\nImprove robustness of nested check.\n\nThis commit removes the assumption that the start of a use statement\nwill always be on one line with a single space - which was silly in the\nfirst place.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/137ffa10229bfec497a446d24045388ee3c418d6", "html_url": "https://github.com/rust-lang/rust/commit/137ffa10229bfec497a446d24045388ee3c418d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/137ffa10229bfec497a446d24045388ee3c418d6/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c955409e3cb06b2a5c008e80c6856cb25a74b33", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c955409e3cb06b2a5c008e80c6856cb25a74b33", "html_url": "https://github.com/rust-lang/rust/commit/7c955409e3cb06b2a5c008e80c6856cb25a74b33"}], "stats": {"total": 99, "additions": 71, "deletions": 28}, "files": [{"sha": "5372c4ee44bdc97772ece2b5cf671e16d8716e6f", "filename": "src/librustc_resolve/error_reporting.rs", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/137ffa10229bfec497a446d24045388ee3c418d6/src%2Flibrustc_resolve%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137ffa10229bfec497a446d24045388ee3c418d6/src%2Flibrustc_resolve%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Ferror_reporting.rs?ref=137ffa10229bfec497a446d24045388ee3c418d6", "patch": "@@ -827,28 +827,29 @@ fn find_span_immediately_after_crate_name(\n            module_name, use_span);\n     let source_map = sess.source_map();\n \n-    // Get position of the first `{` character for the use statement.\n-    //  ie. `use foo::{a, b::{c, d}};`\n-    //                ^\n-    let pos_of_use_tree_left_bracket = source_map.span_until_char(use_span, '{').hi();\n-    debug!(\"find_span_immediately_after_crate_name: pos_of_use_tree_left_bracket={:?}\",\n-           pos_of_use_tree_left_bracket);\n-\n-    // Calculate the expected difference between the first `{` character and the start of a\n-    // use statement.\n-    //  ie. `use foo::{..};`\n-    //       ^^^^\n-    //       |   ^^^\n-    //       4   |  ^^\n-    //           3  |\n-    //              2\n-    let expected_difference = BytePos((module_name.as_str().len() + 4 + 2) as u32);\n-    debug!(\"find_span_immediately_after_crate_name: expected_difference={:?}\",\n-           expected_difference);\n-    let actual_difference = pos_of_use_tree_left_bracket - use_span.lo();\n-    debug!(\"find_span_immediately_after_crate_name: actual_difference={:?}\",\n-           actual_difference);\n-\n-    (expected_difference == actual_difference,\n-     use_span.with_lo(use_span.lo() + expected_difference))\n+    // Using `use issue_59764::foo::{baz, makro};` as an example throughout..\n+    let mut num_colons = 0;\n+    // Find second colon.. `use issue_59764:`\n+    let until_second_colon = source_map.span_take_while(use_span, |c| {\n+        if *c == ':' { num_colons += 1; }\n+        match c {\n+            ':' if num_colons == 2 => false,\n+            _ => true,\n+        }\n+    });\n+    // Find everything after the second colon.. `foo::{baz, makro};`\n+    let from_second_colon = use_span.with_lo(until_second_colon.hi() + BytePos(1));\n+\n+    let mut found_a_non_whitespace_character = false;\n+    // Find the first non-whitespace character in `from_second_colon`.. `f`\n+    let after_second_colon = source_map.span_take_while(from_second_colon, |c| {\n+        if found_a_non_whitespace_character { return false; }\n+        if !c.is_whitespace() { found_a_non_whitespace_character = true; }\n+        true\n+    });\n+\n+    // Find the first `{` in from_second_colon.. `foo::{`\n+    let next_left_bracket = source_map.span_through_char(from_second_colon, '{');\n+\n+    (next_left_bracket == after_second_colon, from_second_colon)\n }"}, {"sha": "ad3bab50cfca33e49fcdf4250a2d5acb00f84115", "filename": "src/test/ui/issue-59764.fixed", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/137ffa10229bfec497a446d24045388ee3c418d6/src%2Ftest%2Fui%2Fissue-59764.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/137ffa10229bfec497a446d24045388ee3c418d6/src%2Ftest%2Fui%2Fissue-59764.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-59764.fixed?ref=137ffa10229bfec497a446d24045388ee3c418d6", "patch": "@@ -109,6 +109,17 @@ mod renamed_multiple_imports {\n     //~^ ERROR unresolved import `issue_59764::foo::makro` [E0432]\n }\n \n+mod lots_of_whitespace {\n+    use issue_59764::{makro as foobar, \n+\n+            foobaz,\n+\n+\n+            foo::{baz} //~ ERROR unresolved import `issue_59764::foo::makro` [E0432]\n+\n+        };\n+}\n+\n // Simple case..\n \n use issue_59764::makro;"}, {"sha": "0c6787691de0a67a9da1d3b76e3edc9ed7f9780c", "filename": "src/test/ui/issue-59764.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/137ffa10229bfec497a446d24045388ee3c418d6/src%2Ftest%2Fui%2Fissue-59764.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137ffa10229bfec497a446d24045388ee3c418d6/src%2Ftest%2Fui%2Fissue-59764.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-59764.rs?ref=137ffa10229bfec497a446d24045388ee3c418d6", "patch": "@@ -109,6 +109,20 @@ mod renamed_multiple_imports {\n     //~^ ERROR unresolved import `issue_59764::foo::makro` [E0432]\n }\n \n+mod lots_of_whitespace {\n+    use\n+        issue_59764::{\n+\n+            foobaz,\n+\n+\n+            foo::{baz,\n+\n+                makro as foobar} //~ ERROR unresolved import `issue_59764::foo::makro` [E0432]\n+\n+        };\n+}\n+\n // Simple case..\n \n use issue_59764::foo::makro;"}, {"sha": "89b1f84605dc7353839f06df0f7e85929f854b46", "filename": "src/test/ui/issue-59764.stderr", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/137ffa10229bfec497a446d24045388ee3c418d6/src%2Ftest%2Fui%2Fissue-59764.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/137ffa10229bfec497a446d24045388ee3c418d6/src%2Ftest%2Fui%2Fissue-59764.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-59764.stderr?ref=137ffa10229bfec497a446d24045388ee3c418d6", "patch": "@@ -196,7 +196,24 @@ LL |     use issue_59764::{makro as foobar, foo::{baz}};\n    |\n \n error[E0432]: unresolved import `issue_59764::foo::makro`\n-  --> $DIR/issue-59764.rs:114:5\n+  --> $DIR/issue-59764.rs:121:17\n+   |\n+LL |                 makro as foobar}\n+   |                 ^^^^^^^^^^^^^^^ no `makro` in `foo`\n+   |\n+   = note: this could be because a macro annotated with `#[macro_export]` will be exported at the root of the crate instead of the module where it is defined\n+help: a macro with this name exists at the root of the crate\n+   |\n+LL |     use issue_59764::{makro as foobar, \n+LL | \n+LL |             foobaz,\n+LL | \n+LL | \n+LL |             foo::{baz}\n+ ...\n+\n+error[E0432]: unresolved import `issue_59764::foo::makro`\n+  --> $DIR/issue-59764.rs:128:5\n    |\n LL | use issue_59764::foo::makro;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ no `makro` in `foo`\n@@ -208,20 +225,20 @@ LL | use issue_59764::makro;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: cannot determine resolution for the macro `makro`\n-  --> $DIR/issue-59764.rs:117:1\n+  --> $DIR/issue-59764.rs:131:1\n    |\n LL | makro!(bar);\n    | ^^^^^\n    |\n    = note: import resolution is stuck, try simplifying macro imports\n \n error[E0425]: cannot find function `bar` in this scope\n-  --> $DIR/issue-59764.rs:121:5\n+  --> $DIR/issue-59764.rs:135:5\n    |\n LL |     bar();\n    |     ^^^ not found in this scope\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 18 previous errors\n \n Some errors occurred: E0425, E0432.\n For more information about an error, try `rustc --explain E0425`."}]}