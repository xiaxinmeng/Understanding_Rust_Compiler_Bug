{"sha": "3a65d380ae9c9622229b406b1a4783d6aed8355a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNjVkMzgwYWU5Yzk2MjIyMjliNDA2YjFhNDc4M2Q2YWVkODM1NWE=", "commit": {"author": {"name": "Jeremy Stucki", "email": "dev@jeremystucki.ch", "date": "2020-03-23T19:15:45Z"}, "committer": {"name": "Jeremy Stucki", "email": "dev@jeremystucki.ch", "date": "2020-03-23T19:15:45Z"}, "message": "Increase verbosity when using update syntax", "tree": {"sha": "0f620d08cc6baa9b6bea79429e9e4c094015ecf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f620d08cc6baa9b6bea79429e9e4c094015ecf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a65d380ae9c9622229b406b1a4783d6aed8355a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEqb4qJQjc+6Oz6tP6ScQbsLIGYysFAl55CuEACgkQScQbsLIG\nYytdZA//ZGpZADxDMYFEQJvUkSVjoLDB+t5mLfYVLEsmF5nhbCrYz7p15QfO7Vvx\nRiPZE2WOPVkHfGEw52gaPbiUK9N5Fe+5Jpyw5Temsh2u2CHwYwX2Ycw3UEVU0MR3\nOSO0O3UXTYBG3D2KUeBQQ4q226qCi2RWcCvw+nW0Kzkj0jTAIoIUTNMUX7ZJVzTB\nro3zmPD0bAWXbC192+Z1yCFL2V5pfVJbZBDj+pw9a9nSrlG6LyCcBvfCXqm1kV7z\nHVrvcCop3Cx2hh7KqE6HuQX4PwPuCm8eQXhPHt/od3lUVlHDiXJzkokkfZpiVmQE\nKZ4vwBNzoceLTNZhZJwwgcBzv/3M8f5fRUyChUh4DCT8ftu/TerAUnIy3Svn/96o\nfLLNbDRWlyoUWDR4Z1YC1N23c/7S3QkclF8E+68iE+77wb3OQQMiASEqTMdcJQYU\nlqF6YlRThOH6JNdIOmLQi2zfNqSiC5ocGOTkOpYSKjqRNqFFHJ8/vocC1JOqhWml\nJdDrrUHOtId/osVR+5/ghpWJLxh9bMjjUGhUOdiYuJFqCsegpjKT9iuxJ2Fx7htS\nsF8zA4O05crRKQNlayf4lrL54c62WgThzBiMcooA73D9OsKdUjtg9yUoug9mUR+a\n0tMPGf9SZVf1rNNJMfEL++k97Rca8/ZKBKRo4MsC7UUarDmaVtc=\n=gaAt\n-----END PGP SIGNATURE-----", "payload": "tree 0f620d08cc6baa9b6bea79429e9e4c094015ecf4\nparent 8549cfed4bbcdd28ef3a36e5de72c000e32f650e\nauthor Jeremy Stucki <dev@jeremystucki.ch> 1584990945 +0100\ncommitter Jeremy Stucki <dev@jeremystucki.ch> 1584990945 +0100\n\nIncrease verbosity when using update syntax\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a65d380ae9c9622229b406b1a4783d6aed8355a", "html_url": "https://github.com/rust-lang/rust/commit/3a65d380ae9c9622229b406b1a4783d6aed8355a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a65d380ae9c9622229b406b1a4783d6aed8355a/comments", "author": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8549cfed4bbcdd28ef3a36e5de72c000e32f650e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8549cfed4bbcdd28ef3a36e5de72c000e32f650e", "html_url": "https://github.com/rust-lang/rust/commit/8549cfed4bbcdd28ef3a36e5de72c000e32f650e"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "411a5cad2ffcfa8b36a3eaf29a4af1e924d0de1e", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3a65d380ae9c9622229b406b1a4783d6aed8355a/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a65d380ae9c9622229b406b1a4783d6aed8355a/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=3a65d380ae9c9622229b406b1a4783d6aed8355a", "patch": "@@ -1023,12 +1023,19 @@ impl<'a, 'tcx> NamePrivacyVisitor<'a, 'tcx> {\n         span: Span,            // span of the field pattern, e.g., `x: 0`\n         def: &'tcx ty::AdtDef, // definition of the struct or enum\n         field: &'tcx ty::FieldDef,\n+        in_update_syntax: bool\n     ) {\n         // definition of the field\n         let ident = Ident::new(kw::Invalid, use_ctxt);\n         let current_hir = self.current_item;\n         let def_id = self.tcx.adjust_ident_and_get_scope(ident, def.did, current_hir).1;\n         if !def.is_enum() && !field.vis.is_accessible_from(def_id, self.tcx) {\n+            let label = if in_update_syntax {\n+                format!(\"field `{}` is private\", field.ident)\n+            } else {\n+                \"private field\".to_string()\n+            };\n+\n             struct_span_err!(\n                 self.tcx.sess,\n                 span,\n@@ -1038,7 +1045,7 @@ impl<'a, 'tcx> NamePrivacyVisitor<'a, 'tcx> {\n                 def.variant_descr(),\n                 self.tcx.def_path_str(def.did)\n             )\n-            .span_label(span, \"private field\")\n+            .span_label(span, label)\n             .emit();\n         }\n     }\n@@ -1106,13 +1113,13 @@ impl<'a, 'tcx> Visitor<'tcx> for NamePrivacyVisitor<'a, 'tcx> {\n                             Some(field) => (field.ident.span, field.span),\n                             None => (base.span, base.span),\n                         };\n-                        self.check_field(use_ctxt, span, adt, variant_field);\n+                        self.check_field(use_ctxt, span, adt, variant_field, true);\n                     }\n                 } else {\n                     for field in fields {\n                         let use_ctxt = field.ident.span;\n                         let index = self.tcx.field_index(field.hir_id, self.tables);\n-                        self.check_field(use_ctxt, field.span, adt, &variant.fields[index]);\n+                        self.check_field(use_ctxt, field.span, adt, &variant.fields[index], false);\n                     }\n                 }\n             }\n@@ -1131,7 +1138,7 @@ impl<'a, 'tcx> Visitor<'tcx> for NamePrivacyVisitor<'a, 'tcx> {\n                 for field in fields {\n                     let use_ctxt = field.ident.span;\n                     let index = self.tcx.field_index(field.hir_id, self.tables);\n-                    self.check_field(use_ctxt, field.span, adt, &variant.fields[index]);\n+                    self.check_field(use_ctxt, field.span, adt, &variant.fields[index], false);\n                 }\n             }\n             _ => {}"}, {"sha": "2aeffc3e5e4575ac809ac5c15ff4417f59c4fd36", "filename": "src/test/ui/functional-struct-update/functional-struct-update-respects-privacy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a65d380ae9c9622229b406b1a4783d6aed8355a/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a65d380ae9c9622229b406b1a4783d6aed8355a/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr?ref=3a65d380ae9c9622229b406b1a4783d6aed8355a", "patch": "@@ -2,7 +2,7 @@ error[E0451]: field `secret_uid` of struct `foo::S` is private\n   --> $DIR/functional-struct-update-respects-privacy.rs:28:49\n    |\n LL |     let s_2 = foo::S { b: format!(\"ess two\"), ..s_1 }; // FRU ...\n-   |                                                 ^^^ private field\n+   |                                                 ^^^ field `secret_uid` is private\n \n error: aborting due to previous error\n "}]}