{"sha": "05ae505a4c438b80268680747713c84ebad662f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YWU1MDVhNGM0MzhiODAyNjg2ODA3NDc3MTNjODRlYmFkNjYyZjM=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-18T22:24:56Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-19T14:06:35Z"}, "message": "Rollup merge of #56011 - CBenoit:master, r=QuietMisdreavus\n\nReplace data.clone() by Arc::clone(&data) in mutex doc.\n\nArc::clone(&from) is considered as more idiomatic because it conveys more explicitly the meaning of the code.\nSince this clone is visible in the official documentation, I thought it could be better to use the more idiomatic version.", "tree": {"sha": "0009c1b9aac60614602331feb030710a03804562", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0009c1b9aac60614602331feb030710a03804562"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05ae505a4c438b80268680747713c84ebad662f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvyw2sACgkQ/vbIBR0O\nATzQ5Q//fL7zFKLJSb7B+31glgApGG3cLSAOPG+HVZ/D+gfksj0irrpOGC5eBuIy\nrMMGdfRcViJPHJZqurGUMepU6zUz7x5ipe44YKCkDWSBuiRFiVXzeQQRhGPYUduo\nclSxuhCspENra3SVy2vPGLkqNpcv8FnxLIBp5pI/HTMizMzIgbhZH3XAmeG9qiyr\nJh1BcNqziftJAdVcaynfsSyOnLAETx3xOaT2JqS909CRw48V2pwGXohrJjmeX9aw\nWu6eUJWaj59PwgahMXQau+HCYIxQLlUE+QJicL2tR+ZppRTUbarMJqnAVd3USH8H\n4bDOT05UGwaeXnjo5LzoxCvU9WbAi06vH+ZgeaDMYhdkbrnQDdkDeMzwVn2uVYlc\n499H7DlvWJyBnQhIXvar+7Df/0Cbhxs0I1G+ELIqGMQ0JHrrygFSa8b0YEOT/NyW\nNe+oNpHlLuXmuzVBOu+/8FVF1jKXk9/9Gp9wRIn5/80AYi2MjsuQrQbjQ9hp1/If\nBwUnyCY4McR7ZXEcaGHTvscc/lB92HXIFS3e3K+BLsnjjyhq2GVSgLMRdZb5WFab\nl+x4+z7HOurAtNjXO511BFBcGGowILDXz7QM5tJNo506yr9oPgJbyFiY3nyLlOlz\nze8Ej2EGtldr8e3OBMcLP5SRMjrtYpcX4UqYE0iJrtC6qRti+kc=\n=pKoq\n-----END PGP SIGNATURE-----", "payload": "tree 0009c1b9aac60614602331feb030710a03804562\nparent c0d48ce39a62292f370f756cac45c2a77687a2a1\nparent c1221e2072beebe90d6bbe8be99a51be1e6d11ea\nauthor Pietro Albini <pietro@pietroalbini.org> 1542579896 +0100\ncommitter kennytm <kennytm@gmail.com> 1542636395 +0800\n\nRollup merge of #56011 - CBenoit:master, r=QuietMisdreavus\n\nReplace data.clone() by Arc::clone(&data) in mutex doc.\n\nArc::clone(&from) is considered as more idiomatic because it conveys more explicitly the meaning of the code.\nSince this clone is visible in the official documentation, I thought it could be better to use the more idiomatic version.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05ae505a4c438b80268680747713c84ebad662f3", "html_url": "https://github.com/rust-lang/rust/commit/05ae505a4c438b80268680747713c84ebad662f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05ae505a4c438b80268680747713c84ebad662f3/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0d48ce39a62292f370f756cac45c2a77687a2a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d48ce39a62292f370f756cac45c2a77687a2a1", "html_url": "https://github.com/rust-lang/rust/commit/c0d48ce39a62292f370f756cac45c2a77687a2a1"}, {"sha": "c1221e2072beebe90d6bbe8be99a51be1e6d11ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1221e2072beebe90d6bbe8be99a51be1e6d11ea", "html_url": "https://github.com/rust-lang/rust/commit/c1221e2072beebe90d6bbe8be99a51be1e6d11ea"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ec9207ea45b4fc74592a519a6e6f171105b2fc7e", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05ae505a4c438b80268680747713c84ebad662f3/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05ae505a4c438b80268680747713c84ebad662f3/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=05ae505a4c438b80268680747713c84ebad662f3", "patch": "@@ -69,7 +69,7 @@ use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n ///\n /// let (tx, rx) = channel();\n /// for _ in 0..N {\n-///     let (data, tx) = (data.clone(), tx.clone());\n+///     let (data, tx) = (Arc::clone(&data), tx.clone());\n ///     thread::spawn(move || {\n ///         // The shared state can only be accessed once the lock is held.\n ///         // Our non-atomic increment is safe because we're the only thread"}]}