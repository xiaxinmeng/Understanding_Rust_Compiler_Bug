{"sha": "df5555aa6742afe93805a1e36444b5ff6cd304a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNTU1NWFhNjc0MmFmZTkzODA1YTFlMzY0NDRiNWZmNmNkMzA0YTU=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-04-10T05:45:12Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-04-10T05:45:12Z"}, "message": "Rename tydecode::parse_int to parse_uint\n\nIt does not handle signs.", "tree": {"sha": "3f4b4296c79210ef8439f5f4b8be67cbf2dfd6e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f4b4296c79210ef8439f5f4b8be67cbf2dfd6e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df5555aa6742afe93805a1e36444b5ff6cd304a5", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df5555aa6742afe93805a1e36444b5ff6cd304a5", "html_url": "https://github.com/rust-lang/rust/commit/df5555aa6742afe93805a1e36444b5ff6cd304a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df5555aa6742afe93805a1e36444b5ff6cd304a5/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6100bb5cba90091510298a314d1f48ede880367f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6100bb5cba90091510298a314d1f48ede880367f", "html_url": "https://github.com/rust-lang/rust/commit/6100bb5cba90091510298a314d1f48ede880367f"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "0b2c3769916bf0cc1d80d63c862afaa7f1cdf44a", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/df5555aa6742afe93805a1e36444b5ff6cd304a5/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df5555aa6742afe93805a1e36444b5ff6cd304a5/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=df5555aa6742afe93805a1e36444b5ff6cd304a5", "patch": "@@ -171,7 +171,7 @@ fn parse_vstore(st: @mut PState) -> ty::vstore {\n \n     let c = peek(st);\n     if '0' <= c && c <= '9' {\n-        let n = parse_int(st) as uint;\n+        let n = parse_uint(st);\n         assert!(next(st) == '|');\n         return ty::vstore_fixed(n);\n     }\n@@ -214,13 +214,13 @@ fn parse_bound_region(st: @mut PState) -> ty::bound_region {\n     match next(st) {\n       's' => ty::br_self,\n       'a' => {\n-        let id = parse_int(st) as uint;\n+        let id = parse_uint(st);\n         assert!(next(st) == '|');\n         ty::br_anon(id)\n       }\n       '[' => ty::br_named(st.tcx.sess.ident_of(parse_str(st, ']'))),\n       'c' => {\n-        let id = parse_int(st);\n+        let id = parse_uint(st) as int;\n         assert!(next(st) == '|');\n         ty::br_cap_avoid(id, @parse_bound_region(st))\n       },\n@@ -235,14 +235,14 @@ fn parse_region(st: @mut PState) -> ty::Region {\n       }\n       'f' => {\n         assert!(next(st) == '[');\n-        let id = parse_int(st);\n+        let id = parse_uint(st) as int;\n         assert!(next(st) == '|');\n         let br = parse_bound_region(st);\n         assert!(next(st) == ']');\n         ty::re_free(id, br)\n       }\n       's' => {\n-        let id = parse_int(st);\n+        let id = parse_uint(st) as int;\n         assert!(next(st) == '|');\n         ty::re_scope(id)\n       }\n@@ -318,7 +318,7 @@ fn parse_ty(st: @mut PState, conv: conv_did) -> ty::t {\n       'p' => {\n         let did = parse_def(st, TypeParameter, conv);\n         debug!(\"parsed ty_param: did=%?\", did);\n-        return ty::mk_param(st.tcx, parse_int(st) as uint, did);\n+        return ty::mk_param(st.tcx, parse_uint(st), did);\n       }\n       's' => {\n         let did = parse_def(st, TypeParameter, conv);\n@@ -413,14 +413,14 @@ fn parse_def(st: @mut PState, source: DefIdSource,\n     return conv(source, parse_def_id(def));\n }\n \n-fn parse_int(st: @mut PState) -> int {\n+fn parse_uint(st: @mut PState) -> uint {\n     let mut n = 0;\n     loop {\n         let cur = peek(st);\n         if cur < '0' || cur > '9' { return n; }\n         st.pos = st.pos + 1u;\n         n *= 10;\n-        n += (cur as int) - ('0' as int);\n+        n += (cur as uint) - ('0' as uint);\n     };\n }\n "}]}