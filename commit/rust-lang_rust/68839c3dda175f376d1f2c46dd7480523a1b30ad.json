{"sha": "68839c3dda175f376d1f2c46dd7480523a1b30ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ODM5YzNkZGExNzVmMzc2ZDFmMmM0NmRkNzQ4MDUyM2ExYjMwYWQ=", "commit": {"author": {"name": "Stefan Plantikow", "email": "stefan.plantikow@googlemail.com", "date": "2011-11-20T17:44:37Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-21T11:59:59Z"}, "message": "Added logarithm functions for floats to std::math\n\nThanks to marijn for helping with #[link_name]", "tree": {"sha": "ec52faa830b280f69ee8f8851a9e58981a61ae6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec52faa830b280f69ee8f8851a9e58981a61ae6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68839c3dda175f376d1f2c46dd7480523a1b30ad", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68839c3dda175f376d1f2c46dd7480523a1b30ad", "html_url": "https://github.com/rust-lang/rust/commit/68839c3dda175f376d1f2c46dd7480523a1b30ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68839c3dda175f376d1f2c46dd7480523a1b30ad/comments", "author": {"login": "boggle", "id": 50886, "node_id": "MDQ6VXNlcjUwODg2", "avatar_url": "https://avatars.githubusercontent.com/u/50886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boggle", "html_url": "https://github.com/boggle", "followers_url": "https://api.github.com/users/boggle/followers", "following_url": "https://api.github.com/users/boggle/following{/other_user}", "gists_url": "https://api.github.com/users/boggle/gists{/gist_id}", "starred_url": "https://api.github.com/users/boggle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boggle/subscriptions", "organizations_url": "https://api.github.com/users/boggle/orgs", "repos_url": "https://api.github.com/users/boggle/repos", "events_url": "https://api.github.com/users/boggle/events{/privacy}", "received_events_url": "https://api.github.com/users/boggle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6b2a2cdb1c93971ae5925ad312043754680180f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6b2a2cdb1c93971ae5925ad312043754680180f", "html_url": "https://github.com/rust-lang/rust/commit/a6b2a2cdb1c93971ae5925ad312043754680180f"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "3f4625aae130362a75eeeca85b15ad17e92c0106", "filename": "src/lib/math.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/68839c3dda175f376d1f2c46dd7480523a1b30ad/src%2Flib%2Fmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68839c3dda175f376d1f2c46dd7480523a1b30ad/src%2Flib%2Fmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmath.rs?ref=68839c3dda175f376d1f2c46dd7480523a1b30ad", "patch": "@@ -10,6 +10,11 @@ native mod libc {\n     fn acos(n: float) -> float;\n     fn tan(n: float) -> float;\n     fn atan(n: float) -> float;\n+    #[link_name=\"log\"]\n+    fn ln(n: float) -> float;\n+    fn log2(n: float) -> float;\n+    fn log10(n: float) -> float;\n+    fn log1p(n: float) -> float;\n }\n \n /*\n@@ -81,3 +86,40 @@ Function: max\n Returns the maximum of two values\n */\n fn max<copy T>(x: T, y: T) -> T { x < y ? y : x }\n+\n+/*\n+Const: e\n+\n+Euler's number\n+*/\n+const e: float = 2.718281828459045235;\n+\n+/*\n+Function: ln\n+\n+Returns the natural logaritm\n+*/\n+fn ln(n: float) -> float { libc::ln(n) }\n+\n+/*\n+Function: log2\n+\n+Returns the logarithm to base 2\n+*/\n+fn log2(n: float) -> float { libc::log2(n) }\n+\n+/*\n+Function: log2\n+\n+Returns the logarithm to base 10\n+*/\n+fn log10(n: float) -> float { libc::log10(n) }\n+\n+\n+/*\n+Function: log1p\n+\n+Returns the natural logarithm of `1+n` accurately, \n+even for very small values of `n`\n+*/\n+fn ln1p(n: float) -> float { libc::log1p(n) }"}, {"sha": "b09302000a671f9faf4b1c77ea0f604f7235e971", "filename": "src/test/stdtest/math.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/68839c3dda175f376d1f2c46dd7480523a1b30ad/src%2Ftest%2Fstdtest%2Fmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68839c3dda175f376d1f2c46dd7480523a1b30ad/src%2Ftest%2Fstdtest%2Fmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fmath.rs?ref=68839c3dda175f376d1f2c46dd7480523a1b30ad", "patch": "@@ -1,5 +1,6 @@\n use std;\n import std::math::*;\n+import std::float;\n \n #[test]\n fn test_sqrt() {\n@@ -32,3 +33,41 @@ fn test_angle() {\n     assert angle((1f, 1f)) == 0.25 * pi;\n     assert angle((0f, 1f)) == 0.5 * pi;\n }\n+\n+\n+#[test]\n+fn test_log_functions() {\n+    assert ln(1.0) == 0.0;\n+    assert log2(1.0) == 0.0;\n+    assert log10(1.0) == 0.0;\n+\n+    assert ln(e) == 1.0;\n+    assert log2(2.0) == 1.0;\n+    assert log10(10.0) == 1.0;\n+\n+    assert ln(e*e*e*e) == 4.0;\n+    assert log2(256.0) == 8.0;\n+    assert log10(1000.0) == 3.0;\n+\n+    assert ln(0.0) == float::neg_infinity;\n+    assert log2(0.0) == float::neg_infinity;\n+    assert log10(0.0) == float::neg_infinity;\n+\n+    assert ln(-0.0) == float::neg_infinity;\n+    assert log2(-0.0) == float::neg_infinity;\n+    assert log10(-0.0) == float::neg_infinity;\n+\n+    assert float::isNaN(ln(-1.0));\n+    assert float::isNaN(log2(-1.0));\n+    assert float::isNaN(log10(-1.0));\n+\n+    assert ln(float::infinity) == float::infinity;\n+    assert log2(float::infinity) == float::infinity;\n+    assert log10(float::infinity) == float::infinity;\n+\n+    assert ln1p(0.0) == 0.0;\n+    assert ln1p(-0.0) == 0.0;\n+    assert ln1p(-1.0) == float::neg_infinity;\n+    assert float::isNaN(ln1p(-2.0f));\n+    assert ln1p(float::infinity) == float::infinity;\n+}\n\\ No newline at end of file"}]}