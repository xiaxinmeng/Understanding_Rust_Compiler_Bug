{"sha": "30de2e71065dc0af710de34d72db20679ddd5c6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZGUyZTcxMDY1ZGMwYWY3MTBkZTM0ZDcyZGIyMDY3OWRkZDVjNmE=", "commit": {"author": {"name": "Adam Lusch", "email": "alusch@gmail.com", "date": "2018-01-15T04:10:36Z"}, "committer": {"name": "Adam Lusch", "email": "alusch@gmail.com", "date": "2018-01-15T04:10:36Z"}, "message": "Update UI test expected output", "tree": {"sha": "44fc65ab1a8981125f9880409dd66b29b5ba6508", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44fc65ab1a8981125f9880409dd66b29b5ba6508"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30de2e71065dc0af710de34d72db20679ddd5c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30de2e71065dc0af710de34d72db20679ddd5c6a", "html_url": "https://github.com/rust-lang/rust/commit/30de2e71065dc0af710de34d72db20679ddd5c6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30de2e71065dc0af710de34d72db20679ddd5c6a/comments", "author": {"login": "alusch", "id": 5668977, "node_id": "MDQ6VXNlcjU2Njg5Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5668977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alusch", "html_url": "https://github.com/alusch", "followers_url": "https://api.github.com/users/alusch/followers", "following_url": "https://api.github.com/users/alusch/following{/other_user}", "gists_url": "https://api.github.com/users/alusch/gists{/gist_id}", "starred_url": "https://api.github.com/users/alusch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alusch/subscriptions", "organizations_url": "https://api.github.com/users/alusch/orgs", "repos_url": "https://api.github.com/users/alusch/repos", "events_url": "https://api.github.com/users/alusch/events{/privacy}", "received_events_url": "https://api.github.com/users/alusch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alusch", "id": 5668977, "node_id": "MDQ6VXNlcjU2Njg5Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5668977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alusch", "html_url": "https://github.com/alusch", "followers_url": "https://api.github.com/users/alusch/followers", "following_url": "https://api.github.com/users/alusch/following{/other_user}", "gists_url": "https://api.github.com/users/alusch/gists{/gist_id}", "starred_url": "https://api.github.com/users/alusch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alusch/subscriptions", "organizations_url": "https://api.github.com/users/alusch/orgs", "repos_url": "https://api.github.com/users/alusch/repos", "events_url": "https://api.github.com/users/alusch/events{/privacy}", "received_events_url": "https://api.github.com/users/alusch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16158139605059b76bf72f948e90f063ee918414", "url": "https://api.github.com/repos/rust-lang/rust/commits/16158139605059b76bf72f948e90f063ee918414", "html_url": "https://github.com/rust-lang/rust/commit/16158139605059b76bf72f948e90f063ee918414"}], "stats": {"total": 58, "additions": 32, "deletions": 26}, "files": [{"sha": "298a9393486eb8a0345e012df051ede150699e90", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 32, "deletions": 26, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/30de2e71065dc0af710de34d72db20679ddd5c6a/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30de2e71065dc0af710de34d72db20679ddd5c6a/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=30de2e71065dc0af710de34d72db20679ddd5c6a", "patch": "@@ -1,75 +1,81 @@\n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:11:5\n+  --> $DIR/unnecessary_clone.rs:16:5\n    |\n-11 |     42.clone();\n+16 |     42.clone();\n    |     ^^^^^^^^^^ help: try removing the `clone` call: `42`\n    |\n    = note: `-D clone-on-copy` implied by `-D warnings`\n \n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:15:5\n+  --> $DIR/unnecessary_clone.rs:20:5\n    |\n-15 |     (&42).clone();\n+20 |     (&42).clone();\n    |     ^^^^^^^^^^^^^ help: try dereferencing it: `*(&42)`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:25:5\n+  --> $DIR/unnecessary_clone.rs:30:5\n    |\n-25 |     rc.clone();\n-   |     ^^^^^^^^^^ help: try this: `Rc::clone(&rc)`\n+30 |     rc.clone();\n+   |     ^^^^^^^^^^ help: try this: `Rc<bool>::clone(&rc)`\n    |\n    = note: `-D clone-on-ref-ptr` implied by `-D warnings`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:28:5\n+  --> $DIR/unnecessary_clone.rs:33:5\n    |\n-28 |     arc.clone();\n-   |     ^^^^^^^^^^^ help: try this: `Arc::clone(&arc)`\n+33 |     arc.clone();\n+   |     ^^^^^^^^^^^ help: try this: `Arc<bool>::clone(&arc)`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:31:5\n+  --> $DIR/unnecessary_clone.rs:36:5\n    |\n-31 |     rcweak.clone();\n-   |     ^^^^^^^^^^^^^^ help: try this: `Weak::clone(&rcweak)`\n+36 |     rcweak.clone();\n+   |     ^^^^^^^^^^^^^^ help: try this: `Weak<bool>::clone(&rcweak)`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:34:5\n+  --> $DIR/unnecessary_clone.rs:39:5\n    |\n-34 |     arc_weak.clone();\n-   |     ^^^^^^^^^^^^^^^^ help: try this: `Weak::clone(&arc_weak)`\n+39 |     arc_weak.clone();\n+   |     ^^^^^^^^^^^^^^^^ help: try this: `Weak<bool>::clone(&arc_weak)`\n+\n+error: using '.clone()' on a ref-counted pointer\n+  --> $DIR/unnecessary_clone.rs:43:29\n+   |\n+43 |     let _: Arc<SomeTrait> = x.clone(); \n+   |                             ^^^^^^^^^ help: try this: `Arc<SomeImpl>::clone(&x)`\n \n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:41:5\n+  --> $DIR/unnecessary_clone.rs:47:5\n    |\n-41 |     t.clone();\n+47 |     t.clone();\n    |     ^^^^^^^^^ help: try removing the `clone` call: `t`\n \n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:43:5\n+  --> $DIR/unnecessary_clone.rs:49:5\n    |\n-43 |     Some(t).clone();\n+49 |     Some(t).clone();\n    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call: `Some(t)`\n \n error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n-  --> $DIR/unnecessary_clone.rs:49:22\n+  --> $DIR/unnecessary_clone.rs:55:22\n    |\n-49 |     let z: &Vec<_> = y.clone();\n+55 |     let z: &Vec<_> = y.clone();\n    |                      ^^^^^^^^^\n    |\n    = note: `-D clone-double-ref` implied by `-D warnings`\n help: try dereferencing it\n    |\n-49 |     let z: &Vec<_> = &(*y).clone();\n+55 |     let z: &Vec<_> = &(*y).clone();\n    |                      ^^^^^^^^^^^^^\n help: or try being explicit about what type to clone\n    |\n-49 |     let z: &Vec<_> = &std::vec::Vec<i32>::clone(y);\n+55 |     let z: &Vec<_> = &std::vec::Vec<i32>::clone(y);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n-  --> $DIR/unnecessary_clone.rs:56:27\n+  --> $DIR/unnecessary_clone.rs:62:27\n    |\n-56 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n+62 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D iter-cloned-collect` implied by `-D warnings`"}]}