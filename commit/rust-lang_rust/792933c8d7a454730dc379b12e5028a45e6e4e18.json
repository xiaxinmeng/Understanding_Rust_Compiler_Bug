{"sha": "792933c8d7a454730dc379b12e5028a45e6e4e18", "node_id": "C_kwDOAAsO6NoAKDc5MjkzM2M4ZDdhNDU0NzMwZGMzNzliMTJlNTAyOGE0NWU2ZTRlMTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-07T09:43:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-07T09:43:12Z"}, "message": "Auto merge of #95317 - Jules-Bertholet:round_ties_to_even, r=pnkfelix,m-ou-se,scottmcm\n\nAdd `round_ties_even` to `f32` and `f64`\n\nTracking issue: #96710\n\nRedux of #82273. See also #55107\n\nAdds a new method, `round_ties_even`, to `f32` and `f64`, that rounds the float to the nearest integer , rounding halfway cases to the number with an even least significant bit. Uses the `roundeven` LLVM intrinsic to do this.\n\nOf the five IEEE 754 rounding modes, this is the only one that doesn't already have a round-to-integer function exposed by Rust (others are `round`, `floor`, `ceil`, and `trunc`).  Ties-to-even is also the rounding mode used for int-to-float and float-to-float `as` casts, as well as float arithmentic operations. So not having an explicit rounding method for it seems like an oversight.\n\nBikeshed: this PR currently uses `round_ties_even` for the name of the method. But maybe `round_ties_to_even` is better, or `round_even`, or `round_to_even`?", "tree": {"sha": "9d4198a8851c6f10a753df52144be88f63807f38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d4198a8851c6f10a753df52144be88f63807f38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/792933c8d7a454730dc379b12e5028a45e6e4e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/792933c8d7a454730dc379b12e5028a45e6e4e18", "html_url": "https://github.com/rust-lang/rust/commit/792933c8d7a454730dc379b12e5028a45e6e4e18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/792933c8d7a454730dc379b12e5028a45e6e4e18/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b57cb6762a36c2f7823e87829c18b2ccd00f6de", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b57cb6762a36c2f7823e87829c18b2ccd00f6de", "html_url": "https://github.com/rust-lang/rust/commit/1b57cb6762a36c2f7823e87829c18b2ccd00f6de"}, {"sha": "20d6292596c86b0610074def2f426a25443ecb6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/20d6292596c86b0610074def2f426a25443ecb6d", "html_url": "https://github.com/rust-lang/rust/commit/20d6292596c86b0610074def2f426a25443ecb6d"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "24f8d5e464e4c19ebea82c258d383243707ca723", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/792933c8d7a454730dc379b12e5028a45e6e4e18/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/792933c8d7a454730dc379b12e5028a45e6e4e18/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=792933c8d7a454730dc379b12e5028a45e6e4e18", "patch": "@@ -281,8 +281,12 @@ fn codegen_float_intrinsic_call<'tcx>(\n         sym::ceilf64 => (\"ceil\", 1, fx.tcx.types.f64),\n         sym::truncf32 => (\"truncf\", 1, fx.tcx.types.f32),\n         sym::truncf64 => (\"trunc\", 1, fx.tcx.types.f64),\n+        sym::rintf32 => (\"rintf\", 1, fx.tcx.types.f32),\n+        sym::rintf64 => (\"rint\", 1, fx.tcx.types.f64),\n         sym::roundf32 => (\"roundf\", 1, fx.tcx.types.f32),\n         sym::roundf64 => (\"round\", 1, fx.tcx.types.f64),\n+        sym::roundevenf32 => (\"roundevenf\", 1, fx.tcx.types.f32),\n+        sym::roundevenf64 => (\"roundeven\", 1, fx.tcx.types.f64),\n         sym::sinf32 => (\"sinf\", 1, fx.tcx.types.f32),\n         sym::sinf64 => (\"sin\", 1, fx.tcx.types.f64),\n         sym::cosf32 => (\"cosf\", 1, fx.tcx.types.f32),"}]}