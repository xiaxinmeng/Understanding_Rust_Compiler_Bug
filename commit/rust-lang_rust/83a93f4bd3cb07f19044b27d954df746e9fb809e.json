{"sha": "83a93f4bd3cb07f19044b27d954df746e9fb809e", "node_id": "C_kwDOAAsO6NoAKDgzYTkzZjRiZDNjYjA3ZjE5MDQ0YjI3ZDk1NGRmNzQ2ZTlmYjgwOWU", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-15T17:30:59Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-15T19:28:37Z"}, "message": "Parse inline const pattern in nested patterns", "tree": {"sha": "25c277a6bab7ad3b738965b99327af28075a7769", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25c277a6bab7ad3b738965b99327af28075a7769"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83a93f4bd3cb07f19044b27d954df746e9fb809e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmQ6+uUACgkQ4laYqTBY\nYXFQBhAArjb/c+2eM9QP0FGcBndNGhpZzhuXCGcptLivwqkC+OaQpg5rIiasOjB3\nfr6hnw4977ROb7xePPjzPtTTEhsY6dgBE53mdFSd30EJ1/F9GPP+X4swgQmU9UIX\nqWipW2k7fWzGvxhMNPJuG5LInmxz80nEFGVp6SJak6uUpNSTvh9YAFATJZyCPOj0\nWSgEwjYnLCwvjCk2HIYygrQwW+1GjiE/ADrbuZCKg3zOQ3tbuGuiyEn1UOdBDEYM\ndo7ULlYAHKPI1dMq/7d6/ecC/vbZo91CjFpzvNzG7V/Lci7jdnvtK2/OJyuTKM5K\n7lXVJJluk9yB26BdgKztzMNLoy+OF/9oWziw7Hx6HJL0LQUQmXfZ7932w22dZhQy\n+Bj5Xz75TneCXKUDmSuTvSLq4ksSR1OFkJwiMfnLEHii4OU2RMjho8tQq5mnRQMv\nB9/FaUE7fi6wgxSIwW29xMdgU/OBAnQXYlVgmDdVW//1iMo73csFwiR6jdnFAMTQ\nLUDtvtIRZU8oBU+gPqiUNoeN5GzPN9CfXMyAQbiKAsH2ltno8USNm2tYHOdJMWJx\n1j4DgPF7qVr48YZdBrj+4Tn1vgfVwg4s2gHuDoGWh1Z6/XMgeVbRgHZA1/qZ0gHs\n3wYjxrXhfDuxuFkvwdidkbfl7cdltyIoTQHCWRK6FFSmmPM6A/E=\n=YCWC\n-----END PGP SIGNATURE-----", "payload": "tree 25c277a6bab7ad3b738965b99327af28075a7769\nparent 89a1439de3691dc1696d81701b6a09affb3328dd\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1681579859 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1681586917 +0900\n\nParse inline const pattern in nested patterns\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83a93f4bd3cb07f19044b27d954df746e9fb809e", "html_url": "https://github.com/rust-lang/rust/commit/83a93f4bd3cb07f19044b27d954df746e9fb809e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83a93f4bd3cb07f19044b27d954df746e9fb809e/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89a1439de3691dc1696d81701b6a09affb3328dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/89a1439de3691dc1696d81701b6a09affb3328dd", "html_url": "https://github.com/rust-lang/rust/commit/89a1439de3691dc1696d81701b6a09affb3328dd"}], "stats": {"total": 139, "additions": 138, "deletions": 1}, "files": [{"sha": "4801732101fc9c961f8e0313857da163daf2baf8", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/83a93f4bd3cb07f19044b27d954df746e9fb809e/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a93f4bd3cb07f19044b27d954df746e9fb809e/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=83a93f4bd3cb07f19044b27d954df746e9fb809e", "patch": "@@ -5,6 +5,7 @@ pub(super) const PATTERN_FIRST: TokenSet =\n         T![box],\n         T![ref],\n         T![mut],\n+        T![const],\n         T!['('],\n         T!['['],\n         T![&],\n@@ -17,7 +18,7 @@ const PAT_TOP_FIRST: TokenSet = PATTERN_FIRST.union(TokenSet::new(&[T![|]]));\n \n /// Set of possible tokens at the start of a range pattern's end bound.\n const RANGE_PAT_END_FIRST: TokenSet =\n-    expressions::LITERAL_FIRST.union(paths::PATH_FIRST).union(TokenSet::new(&[T![-]]));\n+    expressions::LITERAL_FIRST.union(paths::PATH_FIRST).union(TokenSet::new(&[T![-], T![const]]));\n \n pub(crate) fn pattern(p: &mut Parser<'_>) {\n     pattern_r(p, PAT_RECOVERY_SET);\n@@ -499,6 +500,14 @@ fn box_pat(p: &mut Parser<'_>) -> CompletedMarker {\n // fn main() {\n //     let const { 15 } = ();\n //     let const { foo(); bar() } = ();\n+//\n+//     match 42 {\n+//         const { 0 } .. const { 1 } => (),\n+//         .. const { 0 } => (),\n+//         const { 2 } .. => (),\n+//     }\n+//\n+//     let (const { () },) = ();\n // }\n fn const_block_pat(p: &mut Parser<'_>) -> CompletedMarker {\n     assert!(p.at(T![const]));"}, {"sha": "593867a7b12bb674ea99dbd4f60b93e268075197", "filename": "crates/parser/test_data/parser/inline/ok/0156_const_block_pat.rast", "status": "modified", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/83a93f4bd3cb07f19044b27d954df746e9fb809e/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_const_block_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/83a93f4bd3cb07f19044b27d954df746e9fb809e/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_const_block_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_const_block_pat.rast?ref=83a93f4bd3cb07f19044b27d954df746e9fb809e", "patch": "@@ -74,6 +74,126 @@ SOURCE_FILE\n             L_PAREN \"(\"\n             R_PAREN \")\"\n           SEMICOLON \";\"\n+        WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"42\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                RANGE_PAT\n+                  CONST_BLOCK_PAT\n+                    CONST_KW \"const\"\n+                    WHITESPACE \" \"\n+                    BLOCK_EXPR\n+                      STMT_LIST\n+                        L_CURLY \"{\"\n+                        WHITESPACE \" \"\n+                        LITERAL\n+                          INT_NUMBER \"0\"\n+                        WHITESPACE \" \"\n+                        R_CURLY \"}\"\n+                  WHITESPACE \" \"\n+                  DOT2 \"..\"\n+                  WHITESPACE \" \"\n+                  CONST_BLOCK_PAT\n+                    CONST_KW \"const\"\n+                    WHITESPACE \" \"\n+                    BLOCK_EXPR\n+                      STMT_LIST\n+                        L_CURLY \"{\"\n+                        WHITESPACE \" \"\n+                        LITERAL\n+                          INT_NUMBER \"1\"\n+                        WHITESPACE \" \"\n+                        R_CURLY \"}\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                RANGE_PAT\n+                  DOT2 \"..\"\n+                  WHITESPACE \" \"\n+                  CONST_BLOCK_PAT\n+                    CONST_KW \"const\"\n+                    WHITESPACE \" \"\n+                    BLOCK_EXPR\n+                      STMT_LIST\n+                        L_CURLY \"{\"\n+                        WHITESPACE \" \"\n+                        LITERAL\n+                          INT_NUMBER \"0\"\n+                        WHITESPACE \" \"\n+                        R_CURLY \"}\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                RANGE_PAT\n+                  CONST_BLOCK_PAT\n+                    CONST_KW \"const\"\n+                    WHITESPACE \" \"\n+                    BLOCK_EXPR\n+                      STMT_LIST\n+                        L_CURLY \"{\"\n+                        WHITESPACE \" \"\n+                        LITERAL\n+                          INT_NUMBER \"2\"\n+                        WHITESPACE \" \"\n+                        R_CURLY \"}\"\n+                  WHITESPACE \" \"\n+                  DOT2 \"..\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          TUPLE_PAT\n+            L_PAREN \"(\"\n+            CONST_BLOCK_PAT\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              BLOCK_EXPR\n+                STMT_LIST\n+                  L_CURLY \"{\"\n+                  WHITESPACE \" \"\n+                  TUPLE_EXPR\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  R_CURLY \"}\"\n+            COMMA \",\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\""}, {"sha": "6ecdee849b794b5ff979afef740d3232343d491d", "filename": "crates/parser/test_data/parser/inline/ok/0156_const_block_pat.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/83a93f4bd3cb07f19044b27d954df746e9fb809e/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_const_block_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a93f4bd3cb07f19044b27d954df746e9fb809e/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_const_block_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_const_block_pat.rs?ref=83a93f4bd3cb07f19044b27d954df746e9fb809e", "patch": "@@ -1,4 +1,12 @@\n fn main() {\n     let const { 15 } = ();\n     let const { foo(); bar() } = ();\n+\n+    match 42 {\n+        const { 0 } .. const { 1 } => (),\n+        .. const { 0 } => (),\n+        const { 2 } .. => (),\n+    }\n+\n+    let (const { () },) = ();\n }"}]}