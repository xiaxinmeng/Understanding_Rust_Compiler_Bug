{"sha": "89574a6fc7c660172030724a5d1e8c0ef83094a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NTc0YTZmYzdjNjYwMTcyMDMwNzI0YTVkMWU4YzBlZjgzMDk0YTQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-21T23:23:30Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-23T11:38:47Z"}, "message": "resolve type variables in the custom type op pathway", "tree": {"sha": "f56ec1301ce9b6c45d113be5d6a90090a8f4739e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f56ec1301ce9b6c45d113be5d6a90090a8f4739e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89574a6fc7c660172030724a5d1e8c0ef83094a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89574a6fc7c660172030724a5d1e8c0ef83094a4", "html_url": "https://github.com/rust-lang/rust/commit/89574a6fc7c660172030724a5d1e8c0ef83094a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89574a6fc7c660172030724a5d1e8c0ef83094a4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ca467d4a1ee8036a91250650c4b785048b77988", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca467d4a1ee8036a91250650c4b785048b77988", "html_url": "https://github.com/rust-lang/rust/commit/1ca467d4a1ee8036a91250650c4b785048b77988"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "6a5ef75a660ba454027c9b9c8749039e6cd7d944", "filename": "src/librustc/traits/query/type_op/custom.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/89574a6fc7c660172030724a5d1e8c0ef83094a4/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89574a6fc7c660172030724a5d1e8c0ef83094a4/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs?ref=89574a6fc7c660172030724a5d1e8c0ef83094a4", "patch": "@@ -106,7 +106,8 @@ fn scrape_region_constraints<'gcx, 'tcx, R>(\n         infcx.tcx,\n         region_obligations\n             .iter()\n-            .map(|(_, r_o)| (r_o.sup_type, r_o.sub_region)),\n+            .map(|(_, r_o)| (r_o.sup_type, r_o.sub_region))\n+            .map(|(ty, r)| (infcx.resolve_type_vars_if_possible(&ty), r)),\n         &region_constraint_data,\n     );\n "}, {"sha": "6b479f7517244d7de62da6b28e86cc79220e4962", "filename": "src/test/ui/issue-53568.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/89574a6fc7c660172030724a5d1e8c0ef83094a4/src%2Ftest%2Fui%2Fissue-53568.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89574a6fc7c660172030724a5d1e8c0ef83094a4/src%2Ftest%2Fui%2Fissue-53568.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-53568.rs?ref=89574a6fc7c660172030724a5d1e8c0ef83094a4", "patch": "@@ -0,0 +1,61 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for an NLL-related ICE (#53568) -- we failed to\n+// resolve inference variables in \"custom type-ops\".\n+//\n+// compile-pass\n+\n+#![feature(nll)]\n+#![allow(dead_code)]\n+\n+trait Future {\n+    type Item;\n+}\n+\n+impl<F, T> Future for F\n+where F: Fn() -> T\n+{\n+    type Item = T;\n+}\n+\n+trait Connect {}\n+\n+struct Connector<H> {\n+    handler: H,\n+}\n+\n+impl<H, T> Connect for Connector<H>\n+where\n+    T: 'static,\n+    H: Future<Item = T>\n+{\n+}\n+\n+struct Client<C> {\n+    connector: C,\n+}\n+\n+fn build<C>(_connector: C) -> Client<C> {\n+    unimplemented!()\n+}\n+\n+fn client<H>(handler: H) -> Client<impl Connect>\n+where H: Fn() + Copy\n+{\n+    let connector = Connector {\n+        handler,\n+    };\n+    let client = build(connector);\n+    client\n+}\n+\n+fn main() { }\n+"}]}