{"sha": "31fa86511c0b7ccfc3d9977730593d0fd442f6fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZmE4NjUxMWMwYjdjY2ZjM2Q5OTc3NzMwNTkzZDBmZDQ0MmY2ZmU=", "commit": {"author": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2013-08-29T18:22:04Z"}, "committer": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2013-08-29T19:24:24Z"}, "message": "drop some redundant Ord method implementations", "tree": {"sha": "31a267e91fa89b70f7ac18cc3b707fb7326882dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31a267e91fa89b70f7ac18cc3b707fb7326882dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31fa86511c0b7ccfc3d9977730593d0fd442f6fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31fa86511c0b7ccfc3d9977730593d0fd442f6fe", "html_url": "https://github.com/rust-lang/rust/commit/31fa86511c0b7ccfc3d9977730593d0fd442f6fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31fa86511c0b7ccfc3d9977730593d0fd442f6fe/comments", "author": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b035d908b6d81fea4e8aaabafac9f69d9e20936", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b035d908b6d81fea4e8aaabafac9f69d9e20936", "html_url": "https://github.com/rust-lang/rust/commit/2b035d908b6d81fea4e8aaabafac9f69d9e20936"}], "stats": {"total": 21, "additions": 3, "deletions": 18}, "files": [{"sha": "911d53da9092c8cb5ed2bbd7f4b566c3dde94146", "filename": "src/libextra/json.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/31fa86511c0b7ccfc3d9977730593d0fd442f6fe/src%2Flibextra%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31fa86511c0b7ccfc3d9977730593d0fd442f6fe/src%2Flibextra%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fjson.rs?ref=31fa86511c0b7ccfc3d9977730593d0fd442f6fe", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -1164,9 +1164,6 @@ impl Ord for Json {\n             }\n         }\n     }\n-    fn le(&self, other: &Json) -> bool { !(*other).lt(&(*self)) }\n-    fn ge(&self, other: &Json) -> bool { !(*self).lt(other) }\n-    fn gt(&self, other: &Json) -> bool { (*other).lt(&(*self))  }\n }\n \n /// A trait for converting values to JSON"}, {"sha": "3ef34b9cee9e5b47e1c3f479f8fc4188b9a2f9fc", "filename": "src/libextra/num/rational.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31fa86511c0b7ccfc3d9977730593d0fd442f6fe/src%2Flibextra%2Fnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31fa86511c0b7ccfc3d9977730593d0fd442f6fe/src%2Flibextra%2Fnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Frational.rs?ref=31fa86511c0b7ccfc3d9977730593d0fd442f6fe", "patch": "@@ -107,7 +107,7 @@ macro_rules! cmp_impl {\n }\n cmp_impl!(impl Eq, eq, ne)\n cmp_impl!(impl TotalEq, equals)\n-cmp_impl!(impl Ord, lt, gt, le, ge)\n+cmp_impl!(impl Ord, lt)\n cmp_impl!(impl TotalOrd, cmp -> cmp::Ordering)\n \n impl<T: Clone + Integer + Ord> Orderable for Ratio<T> {"}, {"sha": "8f7c6a03d1a7363ab7b3f4002f646497f83fdb88", "filename": "src/libextra/semver.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/31fa86511c0b7ccfc3d9977730593d0fd442f6fe/src%2Flibextra%2Fsemver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31fa86511c0b7ccfc3d9977730593d0fd442f6fe/src%2Flibextra%2Fsemver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsemver.rs?ref=31fa86511c0b7ccfc3d9977730593d0fd442f6fe", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -37,18 +37,6 @@ impl cmp::Ord for Identifier {\n             (&AlphaNumeric(_), _) => false\n         }\n     }\n-    #[inline]\n-    fn le(&self, other: &Identifier) -> bool {\n-        ! (other < self)\n-    }\n-    #[inline]\n-    fn gt(&self, other: &Identifier) -> bool {\n-        other < self\n-    }\n-    #[inline]\n-    fn ge(&self, other: &Identifier) -> bool {\n-        ! (self < other)\n-    }\n }\n \n impl ToStr for Identifier {"}]}