{"sha": "b5cd81d0e54fb2310ce0de6f746957501130ce5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1Y2Q4MWQwZTU0ZmIyMzEwY2UwZGU2Zjc0Njk1NzUwMTEzMGNlNWY=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-03T19:34:00Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-06T02:05:08Z"}, "message": "std: Improve the documentation for iterator::Invert", "tree": {"sha": "e3f2971eeadbc37a4f18719b78b0fbf50ca385b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3f2971eeadbc37a4f18719b78b0fbf50ca385b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5cd81d0e54fb2310ce0de6f746957501130ce5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5cd81d0e54fb2310ce0de6f746957501130ce5f", "html_url": "https://github.com/rust-lang/rust/commit/b5cd81d0e54fb2310ce0de6f746957501130ce5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5cd81d0e54fb2310ce0de6f746957501130ce5f/comments", "author": null, "committer": null, "parents": [{"sha": "520f292e48a61538e681ce61d46a58f965c800a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/520f292e48a61538e681ce61d46a58f965c800a1", "html_url": "https://github.com/rust-lang/rust/commit/520f292e48a61538e681ce61d46a58f965c800a1"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "56a0dca56679ccf3a34d89038944614d0c497263", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b5cd81d0e54fb2310ce0de6f746957501130ce5f/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5cd81d0e54fb2310ce0de6f746957501130ce5f/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=b5cd81d0e54fb2310ce0de6f746957501130ce5f", "patch": "@@ -82,6 +82,17 @@ pub trait DoubleEndedIteratorUtil {\n /// In the future these will be default methods instead of a utility trait.\n impl<A, T: DoubleEndedIterator<A>> DoubleEndedIteratorUtil for T {\n     /// Flip the direction of the iterator\n+    ///\n+    /// The inverted iterator flips the ends on an iterator that can already\n+    /// be iterated from the front and from the back.\n+    ///\n+    ///\n+    /// If the iterator also implements RandomAccessIterator, the inverted\n+    /// iterator is also random access, with the indices starting at the back\n+    /// of the original iterator.\n+    ///\n+    /// Note: Random access with inverted indices still only applies to the first\n+    /// `uint::max_value` elements of the original iterator.\n     #[inline]\n     fn invert(self) -> Invert<T> {\n         Invert{iter: self}"}]}