{"sha": "b47a442f0b868b8501a894c3fdc05719eb337962", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0N2E0NDJmMGI4NjhiODUwMWE4OTRjM2ZkYzA1NzE5ZWIzMzc5NjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-02T12:28:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-02T12:28:46Z"}, "message": "Auto merge of #34034 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 7 pull requests\n\n- Successful merges: #33993, #34013, #34014, #34015, #34019, #34021, #34033\n- Failed merges:", "tree": {"sha": "1d546c07d895dfcfabd5ac03d4d613f9f443c4be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d546c07d895dfcfabd5ac03d4d613f9f443c4be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b47a442f0b868b8501a894c3fdc05719eb337962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b47a442f0b868b8501a894c3fdc05719eb337962", "html_url": "https://github.com/rust-lang/rust/commit/b47a442f0b868b8501a894c3fdc05719eb337962", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b47a442f0b868b8501a894c3fdc05719eb337962/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "270bd7c89792d4f19432183c981418a27072f4c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/270bd7c89792d4f19432183c981418a27072f4c2", "html_url": "https://github.com/rust-lang/rust/commit/270bd7c89792d4f19432183c981418a27072f4c2"}, {"sha": "7399403f38410f82a2f26efdb594a7325b0da52c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7399403f38410f82a2f26efdb594a7325b0da52c", "html_url": "https://github.com/rust-lang/rust/commit/7399403f38410f82a2f26efdb594a7325b0da52c"}], "stats": {"total": 361, "additions": 344, "deletions": 17}, "files": [{"sha": "d88f619260ac0ca4d95a3edc5a6a12b63480991a", "filename": "src/doc/book/choosing-your-guarantees.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fchoosing-your-guarantees.md", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fchoosing-your-guarantees.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fchoosing-your-guarantees.md?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -232,7 +232,7 @@ indicator (one word in size) along with the data.\n \n At runtime each borrow causes a modification/check of the refcount.\n \n-[cell-mod]: ../std/cell/\n+[cell-mod]: ../std/cell/index.html\n [cell]: ../std/cell/struct.Cell.html\n [refcell]: ../std/cell/struct.RefCell.html\n "}, {"sha": "3c6643fbfe1554e0ae02c5bc551f0a04353715c2", "filename": "src/doc/book/documentation.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fdocumentation.md", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fdocumentation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fdocumentation.md?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -76,7 +76,7 @@ This [unfortunate error](https://github.com/rust-lang/rust/issues/22547) is\n correct; documentation comments apply to the thing after them, and there's\n nothing after that last comment.\n \n-[rc-new]: https://doc.rust-lang.org/nightly/std/rc/struct.Rc.html#method.new\n+[rc-new]: ../std/rc/struct.Rc.html#method.new\n \n ### Writing documentation comments\n "}, {"sha": "bca3418706771e08259946c1d36935a47345201c", "filename": "src/doc/book/error-handling.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ferror-handling.md?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -2205,7 +2205,7 @@ heuristics!\n [3]: ../std/option/enum.Option.html#method.unwrap_or\n [4]: ../std/option/enum.Option.html#method.unwrap_or_else\n [5]: ../std/option/enum.Option.html\n-[6]: ../std/result/\n+[6]: ../std/result/index.html\n [7]: ../std/result/enum.Result.html#method.unwrap\n [8]: ../std/fmt/trait.Debug.html\n [9]: ../std/primitive.str.html#method.parse"}, {"sha": "69958dd3e68a41c717527cc05347eb9d064705d1", "filename": "src/doc/book/using-rust-without-the-standard-library.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fusing-rust-without-the-standard-library.md", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fusing-rust-without-the-standard-library.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fusing-rust-without-the-standard-library.md?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -22,11 +22,12 @@ fn plus_one(x: i32) -> i32 {\n ```\n \n Much of the functionality that\u2019s exposed in the standard library is also\n-available via the [`core` crate](../core/). When we\u2019re using the standard\n-library, Rust automatically brings `std` into scope, allowing you to use\n-its features without an explicit import. By the same token, when using\n+available via the [`core` crate](../core/index.html). When we\u2019re using the\n+standard library, Rust automatically brings `std` into scope, allowing you to\n+use its features without an explicit import. By the same token, when using\n `#![no_std]`, Rust will bring `core` into scope for you, as well as [its\n-prelude](../core/prelude/v1/). This means that a lot of code will Just Work:\n+prelude](../core/prelude/v1/index.html). This means that a lot of code will Just\n+Work:\n \n ```rust\n #![no_std]"}, {"sha": "f3854b8ffddce4598749fca9625996f11b03d21d", "filename": "src/doc/book/vectors.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fvectors.md", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fbook%2Fvectors.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fvectors.md?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -152,5 +152,5 @@ API documentation][vec].\n [box]: ../std/boxed/index.html\n [generic]: generics.html\n [panic]: concurrency.html#panics\n-[get]: http://doc.rust-lang.org/std/vec/struct.Vec.html#method.get\n-[get_mut]: http://doc.rust-lang.org/std/vec/struct.Vec.html#method.get_mut\n+[get]: ../std/vec/struct.Vec.html#method.get\n+[get_mut]: ../std/vec/struct.Vec.html#method.get_mut"}, {"sha": "b2e1eac5e0dccea7692c23a131faae5b288280d6", "filename": "src/doc/nomicon/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fnomicon%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Fdoc%2Fnomicon%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2FREADME.md?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -35,4 +35,4 @@ exception-safety, pointer aliasing, memory models, and even some type-theory.\n We will also be spending a lot of time talking about the different kinds\n of safety and guarantees.\n \n-[trpl]: ../book/\n+[trpl]: ../book/index.html"}, {"sha": "f2abdf831a3b8fdbdae8c6033bbc17085e38b3cc", "filename": "src/librustc_const_eval/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibrustc_const_eval%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibrustc_const_eval%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fdiagnostics.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -384,18 +384,19 @@ let irr = Irrefutable(0);\n \n // This fails to compile because the match is irrefutable.\n while let Irrefutable(x) = irr {\n-    ...\n+    // ...\n }\n+```\n \n Try this instead:\n \n-```\n+```no_run\n struct Irrefutable(i32);\n let irr = Irrefutable(0);\n \n loop {\n     let Irrefutable(x) = irr;\n-    ...\n+    // ...\n }\n ```\n \"##,"}, {"sha": "e9e52a0121a3695467d6518adc732571e313f486", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -2040,6 +2040,7 @@ impl Foo for Bar {\n     // the trait\n     fn foo(&self) {}\n }\n+```\n \"##,\n \n E0186: r##\""}, {"sha": "0180c3118a586f41c813e65b5ddfa207e3b945f6", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -32,6 +32,8 @@ use time::SystemTime;\n /// it was opened with. Files also implement `Seek` to alter the logical cursor\n /// that the file contains internally.\n ///\n+/// Files are automatically closed when they go out of scope.\n+///\n /// # Examples\n ///\n /// ```no_run\n@@ -1341,8 +1343,9 @@ pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n ///     if dir.is_dir() {\n ///         for entry in try!(fs::read_dir(dir)) {\n ///             let entry = try!(entry);\n-///             if try!(entry.file_type()).is_dir() {\n-///                 try!(visit_dirs(&entry.path(), cb));\n+///             let path = entry.path();\n+///             if path.is_dir() {\n+///                 try!(visit_dirs(&path, cb));\n ///             } else {\n ///                 cb(&entry);\n ///             }"}, {"sha": "11af768c5b9b0a0abc8c186a4fae546b00040370", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -28,7 +28,7 @@\n /// ```\n ///\n /// [`assert!`]: macro.assert!.html\n-/// [`if` conditionals]: ../book/if.html\n+/// [`if`]: ../book/if.html\n /// [`BitAnd`]: ops/trait.BitAnd.html\n /// [`BitOr`]: ops/trait.BitOr.html\n /// [`Not`]: ops/trait.Not.html"}, {"sha": "3ce9bcc79f24ad8dfdedceb315286d0deba49188", "filename": "src/libstd/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -195,7 +195,7 @@ impl FromInner<AnonPipe> for ChildStderr {\n ///                      .arg(\"-c\")\n ///                      .arg(\"echo hello\")\n ///                      .output()\n-///                      .expect(\"failed to execute proces\");\n+///                      .expect(\"failed to execute process\");\n ///\n /// let hello = output.stdout;\n /// ```"}, {"sha": "e13b0af6f7977436c43684f1ee62b89eb1582cea", "filename": "src/test/compile-fail/E0162.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0162.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0162.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0162.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Irrefutable(i32);\n+\n+fn main() {\n+    let irr = Irrefutable(0);\n+    if let Irrefutable(x) = irr { //~ ERROR E0162\n+        println!(\"{}\", x);\n+    }\n+}"}, {"sha": "5cb6f4d2803e199e3dd472ce7279c3bd52c51378", "filename": "src/test/compile-fail/E0163.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0163.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0163.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0163.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo { B(u32) }\n+\n+fn bar(foo: Foo) -> u32 {\n+    match foo {\n+        Foo::B { i } => i, //~ ERROR E0163\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "491b2e9e5b246ed9d888a9c0ffd3d4a61ab9d91d", "filename": "src/test/compile-fail/E0164.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0164.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0164.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0164.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo { B { i: u32 } }\n+\n+fn bar(foo: Foo) -> u32 {\n+    match foo {\n+        Foo::B(i) => i, //~ ERROR E0164\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "cca714bbcc1bf369700c40fc8d381297126742a8", "filename": "src/test/compile-fail/E0165.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0165.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0165.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0165.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Irrefutable(i32);\n+\n+fn main() {\n+    let irr = Irrefutable(0);\n+    while let Irrefutable(x) = irr { //~ ERROR E0165\n+        // ...\n+    }\n+}"}, {"sha": "9fa41249aa50b06a78d8286e4963c8ababc4f31f", "filename": "src/test/compile-fail/E0166.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0166.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0166.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0166.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo() -> ! { return; } //~ ERROR E0166\n+\n+fn main() {\n+}"}, {"sha": "7011bf0e93734f9a4220b17c9a5a66ccfcfbca47", "filename": "src/test/compile-fail/E0172.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0172.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0172.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0172.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo(bar: i32+std::fmt::Display) {} //~ ERROR E0172\n+\n+fn main() {\n+}"}, {"sha": "f34f3834e05b196d47fd5715dfdc159745a5df1b", "filename": "src/test/compile-fail/E0178.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0178.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0178.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0178.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {}\n+\n+struct Bar<'a> {\n+    w: &'a Foo + Copy, //~ ERROR E0178\n+    x: &'a Foo + 'a, //~ ERROR E0178\n+    y: &'a mut Foo + 'a, //~ ERROR E0178\n+    z: fn() -> Foo + 'a, //~ ERROR E0178\n+}\n+\n+fn main() {\n+}"}, {"sha": "5d72d00ffe8765bb7ade9cda1f14eb4afa4ccd2d", "filename": "src/test/compile-fail/E0184.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0184.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0184.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0184.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive(Copy)] //~ ERROR E0184\n+struct Foo;\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "0e33687a84dfb6857fae8f563c874600bc434f73", "filename": "src/test/compile-fail/E0185.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0185.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0185.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0185.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {\n+    fn foo();\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    fn foo(&self) {} //~ ERROR E0185\n+}\n+\n+fn main() {\n+}"}, {"sha": "aa0a38bedcb543e932123f4bb59d0798c6658a19", "filename": "src/test/compile-fail/E0186.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0186.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0186.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0186.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {\n+    fn foo(&self);\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    fn foo() {} //~ ERROR E0186\n+}\n+\n+fn main() {\n+}"}, {"sha": "489ebb033f84e8133c98961750ff7530ba4878dc", "filename": "src/test/compile-fail/E0191.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0191.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0191.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0191.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Trait {\n+    type Bar;\n+}\n+\n+type Foo = Trait; //~ ERROR E0191\n+\n+fn main() {\n+}"}, {"sha": "92f5876ee04d5879fc2521b1ab65cfe9aa9a34f1", "filename": "src/test/compile-fail/E0192.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0192.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0192.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0192.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(optin_builtin_traits)]\n+\n+trait Trait {\n+    type Bar;\n+}\n+\n+struct Foo;\n+\n+impl !Trait for Foo { } //~ ERROR E0192\n+\n+fn main() {\n+}"}, {"sha": "96b3062cacb78d6af758a25d7b54a20e0b6a1d9e", "filename": "src/test/compile-fail/E0194.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0194.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0194.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0194.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo<T> {\n+    fn do_something(&self) -> T;\n+    fn do_something_else<T: Clone>(&self, bar: T); //~ ERROR E0194\n+}\n+\n+fn main() {\n+}"}, {"sha": "0630dfea5e64b4e09d007147be9c4b500d2b9a3b", "filename": "src/test/compile-fail/E0195.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0195.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0195.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0195.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Trait {\n+    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n+}\n+\n+struct Foo;\n+\n+impl Trait for Foo {\n+    fn bar<'a,'b>(x: &'a str, y: &'b str) { //~ ERROR E0195\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "f25fa9b92b9a0a7da1b4192d1e3d97254197d4a8", "filename": "src/test/compile-fail/E0197.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0197.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo;\n+\n+unsafe impl Foo { } //~ ERROR E0197\n+\n+fn main() {\n+}"}, {"sha": "8bd3ffdf6f6ee05c2e13940a4e164ebbae2e18da", "filename": "src/test/compile-fail/E0199.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0199.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(optin_builtin_traits)]\n+\n+struct Foo;\n+\n+unsafe impl !Clone for Foo { } //~ ERROR E0199\n+\n+fn main() {\n+}"}, {"sha": "6bfea0e59d76ea215107c184a63288c262c4924d", "filename": "src/test/compile-fail/E0200.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0200.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47a442f0b868b8501a894c3fdc05719eb337962/src%2Ftest%2Fcompile-fail%2FE0200.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0200.rs?ref=b47a442f0b868b8501a894c3fdc05719eb337962", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo;\n+\n+unsafe trait Bar { }\n+\n+impl Bar for Foo { } //~ ERROR E0200\n+\n+fn main() {\n+}"}]}