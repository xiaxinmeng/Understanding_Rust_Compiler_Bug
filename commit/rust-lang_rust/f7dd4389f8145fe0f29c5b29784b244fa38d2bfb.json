{"sha": "f7dd4389f8145fe0f29c5b29784b244fa38d2bfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZGQ0Mzg5ZjgxNDVmZTBmMjljNWIyOTc4NGIyNDRmYTM4ZDJiZmI=", "commit": {"author": {"name": "Dan Robertson", "email": "dan@dlrobertson.com", "date": "2019-02-24T00:17:25Z"}, "committer": {"name": "Dan Robertson", "email": "dan@dlrobertson.com", "date": "2019-02-27T15:21:59Z"}, "message": "Fix doc comments in librustc/hir/lowering.rs", "tree": {"sha": "8fc1ad6c23e9e5a7ec561aa98fb708ce794da53d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fc1ad6c23e9e5a7ec561aa98fb708ce794da53d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7dd4389f8145fe0f29c5b29784b244fa38d2bfb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEkZ4/WpQ0/P8yWDLRTebu+Etcl4MFAlx2qxgACgkQTebu+Etc\nl4PnlA/+MOPHWH5GT56nDXUmw66pSLfHgdgBXIQKXNI08N1DarwKYkEgfyXLIlh3\n6HFDVSqNyoGejuEqpF6bQ+pagRSgE+Awappojv647Y/NnF726683TKofAH0vMAJ7\nOYiG07xskU7g9edi8A9UUCHQWW9KnGJNQ7nXJMBiwjU8Dlw4rSWmIiA0dLm8TeMd\nS0BM4gMJXNr0fXJZ9t0Wfdn/aCVM3/JDxAygoI3QN9WppstcsuE8WYnR7gE2B1DE\n66mRomlUtF72p9kGonT2olLsMF/OhrCGKivt2KC+hBgrb7USUvoHFIL0FfBnL/yn\nv9bGYBYZ+V/qzm2Pybjiv/alH8a/YCQ4sU06ukICY2ob0YvIKKF9AncnEZEh0oK+\nC25jln5Vs3W4/ZejTO4hWC0IP9WyQC7BH0o98+UfJpp+4LWpFhUx92EE40pOaPpS\nTaiwblQXxUE6wyd73eHQPsgENbrn0NVAZ+OfSvxqbRtW1qZ99bFH1kd2awYy7Ln1\ndeSLUMjD3ReEslYkHCHU8Js24rAZiX5sCv3OV1oD0qFql9KhkZ6LfT/FFQ5cb/+N\nq7fpGymwimKcWUf/6bBsrijvzvgHGgqDf2+ItroENVRVC7oKxzIYVuumrMILRDSK\ndUmjVBGw/XvqlT/rYB/caG/NFkDYdAZlLbfavJ9Qe1Az+5MWCTM=\n=buEI\n-----END PGP SIGNATURE-----", "payload": "tree 8fc1ad6c23e9e5a7ec561aa98fb708ce794da53d\nparent 08bd4ff9987fc57215a2fe54c63da0e86d9e6fbf\nauthor Dan Robertson <dan@dlrobertson.com> 1550967445 +0000\ncommitter Dan Robertson <dan@dlrobertson.com> 1551280919 -0500\n\nFix doc comments in librustc/hir/lowering.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7dd4389f8145fe0f29c5b29784b244fa38d2bfb", "html_url": "https://github.com/rust-lang/rust/commit/f7dd4389f8145fe0f29c5b29784b244fa38d2bfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7dd4389f8145fe0f29c5b29784b244fa38d2bfb/comments", "author": {"login": "dlrobertson", "id": 7504153, "node_id": "MDQ6VXNlcjc1MDQxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7504153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlrobertson", "html_url": "https://github.com/dlrobertson", "followers_url": "https://api.github.com/users/dlrobertson/followers", "following_url": "https://api.github.com/users/dlrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/dlrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlrobertson/subscriptions", "organizations_url": "https://api.github.com/users/dlrobertson/orgs", "repos_url": "https://api.github.com/users/dlrobertson/repos", "events_url": "https://api.github.com/users/dlrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/dlrobertson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dlrobertson", "id": 7504153, "node_id": "MDQ6VXNlcjc1MDQxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7504153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlrobertson", "html_url": "https://github.com/dlrobertson", "followers_url": "https://api.github.com/users/dlrobertson/followers", "following_url": "https://api.github.com/users/dlrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/dlrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlrobertson/subscriptions", "organizations_url": "https://api.github.com/users/dlrobertson/orgs", "repos_url": "https://api.github.com/users/dlrobertson/repos", "events_url": "https://api.github.com/users/dlrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/dlrobertson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08bd4ff9987fc57215a2fe54c63da0e86d9e6fbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/08bd4ff9987fc57215a2fe54c63da0e86d9e6fbf", "html_url": "https://github.com/rust-lang/rust/commit/08bd4ff9987fc57215a2fe54c63da0e86d9e6fbf"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "7a6c7f1e899791316e1d2d9a45f91bde5bb03d4c", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f7dd4389f8145fe0f29c5b29784b244fa38d2bfb/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7dd4389f8145fe0f29c5b29784b244fa38d2bfb/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f7dd4389f8145fe0f29c5b29784b244fa38d2bfb", "patch": "@@ -74,7 +74,7 @@ const HIR_ID_COUNTER_LOCKED: u32 = 0xFFFFFFFF;\n pub struct LoweringContext<'a> {\n     crate_root: Option<&'static str>,\n \n-    // Used to assign ids to HIR nodes that do not directly correspond to an AST node.\n+    /// Used to assign ids to HIR nodes that do not directly correspond to an AST node.\n     sess: &'a Session,\n \n     cstore: &'a dyn CrateStore,\n@@ -107,25 +107,25 @@ pub struct LoweringContext<'a> {\n     /// written at all (e.g., `&T` or `std::cell::Ref<T>`).\n     anonymous_lifetime_mode: AnonymousLifetimeMode,\n \n-    // Used to create lifetime definitions from in-band lifetime usages.\n-    // e.g., `fn foo(x: &'x u8) -> &'x u8` to `fn foo<'x>(x: &'x u8) -> &'x u8`\n-    // When a named lifetime is encountered in a function or impl header and\n-    // has not been defined\n-    // (i.e., it doesn't appear in the in_scope_lifetimes list), it is added\n-    // to this list. The results of this list are then added to the list of\n-    // lifetime definitions in the corresponding impl or function generics.\n+    /// Used to create lifetime definitions from in-band lifetime usages.\n+    /// e.g., `fn foo(x: &'x u8) -> &'x u8` to `fn foo<'x>(x: &'x u8) -> &'x u8`\n+    /// When a named lifetime is encountered in a function or impl header and\n+    /// has not been defined\n+    /// (i.e., it doesn't appear in the in_scope_lifetimes list), it is added\n+    /// to this list. The results of this list are then added to the list of\n+    /// lifetime definitions in the corresponding impl or function generics.\n     lifetimes_to_define: Vec<(Span, ParamName)>,\n \n-    // Whether or not in-band lifetimes are being collected. This is used to\n-    // indicate whether or not we're in a place where new lifetimes will result\n-    // in in-band lifetime definitions, such a function or an impl header,\n-    // including implicit lifetimes from `impl_header_lifetime_elision`.\n+    /// Whether or not in-band lifetimes are being collected. This is used to\n+    /// indicate whether or not we're in a place where new lifetimes will result\n+    /// in in-band lifetime definitions, such a function or an impl header,\n+    /// including implicit lifetimes from `impl_header_lifetime_elision`.\n     is_collecting_in_band_lifetimes: bool,\n \n-    // Currently in-scope lifetimes defined in impl headers, fn headers, or HRTB.\n-    // When `is_collectin_in_band_lifetimes` is true, each lifetime is checked\n-    // against this list to see if it is already in-scope, or if a definition\n-    // needs to be created for it.\n+    /// Currently in-scope lifetimes defined in impl headers, fn headers, or HRTB.\n+    /// When `is_collectin_in_band_lifetimes` is true, each lifetime is checked\n+    /// against this list to see if it is already in-scope, or if a definition\n+    /// needs to be created for it.\n     in_scope_lifetimes: Vec<Ident>,\n \n     current_module: NodeId,"}]}