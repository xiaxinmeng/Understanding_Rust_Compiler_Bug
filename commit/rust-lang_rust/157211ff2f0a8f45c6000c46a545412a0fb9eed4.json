{"sha": "157211ff2f0a8f45c6000c46a545412a0fb9eed4", "node_id": "C_kwDOAAsO6NoAKDE1NzIxMWZmMmYwYThmNDVjNjAwMGM0NmE1NDU0MTJhMGZiOWVlZDQ", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2023-01-02T22:26:43Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2023-01-02T22:42:27Z"}, "message": "Document rustc_ast::FnHeader fields", "tree": {"sha": "1cfbbc6a6858171fd4da4d7bcd1ba4e5171dcdb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cfbbc6a6858171fd4da4d7bcd1ba4e5171dcdb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/157211ff2f0a8f45c6000c46a545412a0fb9eed4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/157211ff2f0a8f45c6000c46a545412a0fb9eed4", "html_url": "https://github.com/rust-lang/rust/commit/157211ff2f0a8f45c6000c46a545412a0fb9eed4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/157211ff2f0a8f45c6000c46a545412a0fb9eed4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c7c694e734b6bcc41663eaf230a7f26c19de0f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7c694e734b6bcc41663eaf230a7f26c19de0f4", "html_url": "https://github.com/rust-lang/rust/commit/3c7c694e734b6bcc41663eaf230a7f26c19de0f4"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "37dfa46f696eaeb91f8a437b122b405d45b3d452", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/157211ff2f0a8f45c6000c46a545412a0fb9eed4/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/157211ff2f0a8f45c6000c46a545412a0fb9eed4/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=157211ff2f0a8f45c6000c46a545412a0fb9eed4", "patch": "@@ -2736,9 +2736,13 @@ impl Extern {\n /// included in this struct (e.g., `async unsafe fn` or `const extern \"C\" fn`).\n #[derive(Clone, Copy, Encodable, Decodable, Debug)]\n pub struct FnHeader {\n+    /// The `unsafe` keyword, if any\n     pub unsafety: Unsafe,\n+    /// The `async` keyword, if any\n     pub asyncness: Async,\n+    /// The `const` keyword, if any\n     pub constness: Const,\n+    /// The `extern` keyword and corresponding ABI string, if any\n     pub ext: Extern,\n }\n "}]}