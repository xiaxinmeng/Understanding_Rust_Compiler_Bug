{"sha": "3ad0834700ec3db9952a7b69daf805c04a98d8e0", "node_id": "C_kwDOAAsO6NoAKDNhZDA4MzQ3MDBlYzNkYjk5NTJhN2I2OWRhZjgwNWMwNGE5OGQ4ZTA", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T23:50:24Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T23:51:57Z"}, "message": "Fix another place that used `def_id_no_primitives()`", "tree": {"sha": "9c6b174cee5638ff3779a2733eed2a95b27892e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c6b174cee5638ff3779a2733eed2a95b27892e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ad0834700ec3db9952a7b69daf805c04a98d8e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ad0834700ec3db9952a7b69daf805c04a98d8e0", "html_url": "https://github.com/rust-lang/rust/commit/3ad0834700ec3db9952a7b69daf805c04a98d8e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ad0834700ec3db9952a7b69daf805c04a98d8e0/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "865d99f82be5718abce2c75a9ed87b1ed028910e", "url": "https://api.github.com/repos/rust-lang/rust/commits/865d99f82be5718abce2c75a9ed87b1ed028910e", "html_url": "https://github.com/rust-lang/rust/commit/865d99f82be5718abce2c75a9ed87b1ed028910e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c5e0587581970fd4ef3ca0338f606f951866368b", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ad0834700ec3db9952a7b69daf805c04a98d8e0/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ad0834700ec3db9952a7b69daf805c04a98d8e0/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=3ad0834700ec3db9952a7b69daf805c04a98d8e0", "patch": "@@ -482,7 +482,7 @@ crate fn build_impl(\n     trace!(\n         \"build_impl: impl {:?} for {:?}\",\n         trait_.as_ref().map(|t| t.def_id()),\n-        for_.def_id_no_primitives()\n+        for_.def_id(&cx.cache)\n     );\n     ret.push(clean::Item::from_def_id_and_attrs_and_parts(\n         did,"}]}