{"sha": "cf05cd8abffadd701cab32de43e59b5ac73241f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMDVjZDhhYmZmYWRkNzAxY2FiMzJkZTQzZTU5YjVhYzczMjQxZjM=", "commit": {"author": {"name": "Dennis Schridde", "email": "devurandom@users.noreply.github.com", "date": "2017-05-07T21:20:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-07T21:20:28Z"}, "message": "bootstrap: Output name of failed config in case of errors", "tree": {"sha": "70f74af914a9b53f61bd80df5bc13f5ea717d4f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70f74af914a9b53f61bd80df5bc13f5ea717d4f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf05cd8abffadd701cab32de43e59b5ac73241f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf05cd8abffadd701cab32de43e59b5ac73241f3", "html_url": "https://github.com/rust-lang/rust/commit/cf05cd8abffadd701cab32de43e59b5ac73241f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf05cd8abffadd701cab32de43e59b5ac73241f3/comments", "author": {"login": "devurandom", "id": 63082, "node_id": "MDQ6VXNlcjYzMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/63082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devurandom", "html_url": "https://github.com/devurandom", "followers_url": "https://api.github.com/users/devurandom/followers", "following_url": "https://api.github.com/users/devurandom/following{/other_user}", "gists_url": "https://api.github.com/users/devurandom/gists{/gist_id}", "starred_url": "https://api.github.com/users/devurandom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devurandom/subscriptions", "organizations_url": "https://api.github.com/users/devurandom/orgs", "repos_url": "https://api.github.com/users/devurandom/repos", "events_url": "https://api.github.com/users/devurandom/events{/privacy}", "received_events_url": "https://api.github.com/users/devurandom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d19877ecea0cd22b7f5feaac5fb549f38aa3f71", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d19877ecea0cd22b7f5feaac5fb549f38aa3f71", "html_url": "https://github.com/rust-lang/rust/commit/8d19877ecea0cd22b7f5feaac5fb549f38aa3f71"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9c536111811aab1d41a261c3130e4dc862ddad9c", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf05cd8abffadd701cab32de43e59b5ac73241f3/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf05cd8abffadd701cab32de43e59b5ac73241f3/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=cf05cd8abffadd701cab32de43e59b5ac73241f3", "patch": "@@ -264,7 +264,7 @@ impl Config {\n             let table = match p.parse() {\n                 Some(table) => table,\n                 None => {\n-                    println!(\"failed to parse TOML configuration:\");\n+                    println!(\"failed to parse TOML configuration '{}':\", file.to_str().unwrap());\n                     for err in p.errors.iter() {\n                         let (loline, locol) = p.to_linecol(err.lo);\n                         let (hiline, hicol) = p.to_linecol(err.hi);"}]}