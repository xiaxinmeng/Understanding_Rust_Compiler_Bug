{"sha": "72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "node_id": "C_kwDOAAsO6NoAKDcyZDg4NzljMjk1NzBlZTE4Y2MzYWIyYzNlOTZiZmQ5NzIyMWQwYmI", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2022-11-24T11:12:34Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2022-11-24T11:12:46Z"}, "message": "make `error_reported` check for delayed bugs", "tree": {"sha": "aa5db5c888d1e5da5df848167835b6c56214ba5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa5db5c888d1e5da5df848167835b6c56214ba5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "html_url": "https://github.com/rust-lang/rust/commit/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e0d0d757e2f1b61ec809420b006545a9f8974c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0d0d757e2f1b61ec809420b006545a9f8974c0", "html_url": "https://github.com/rust-lang/rust/commit/4e0d0d757e2f1b61ec809420b006545a9f8974c0"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "2be36a6eeb4a25c55f32174be78fb93f47a90d50", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -1044,13 +1044,24 @@ impl Handler {\n     }\n     pub fn has_errors_or_lint_errors(&self) -> Option<ErrorGuaranteed> {\n         if self.inner.borrow().has_errors_or_lint_errors() {\n-            Some(ErrorGuaranteed(()))\n+            Some(ErrorGuaranteed::unchecked_claim_error_was_emitted())\n+        } else {\n+            None\n+        }\n+    }\n+    pub fn has_errors_or_delayed_span_bugs(&self) -> Option<ErrorGuaranteed> {\n+        if self.inner.borrow().has_errors_or_delayed_span_bugs() {\n+            Some(ErrorGuaranteed::unchecked_claim_error_was_emitted())\n         } else {\n             None\n         }\n     }\n-    pub fn has_errors_or_delayed_span_bugs(&self) -> bool {\n-        self.inner.borrow().has_errors_or_delayed_span_bugs()\n+    pub fn is_compilation_going_to_fail(&self) -> Option<ErrorGuaranteed> {\n+        if self.inner.borrow().is_compilation_going_to_fail() {\n+            Some(ErrorGuaranteed::unchecked_claim_error_was_emitted())\n+        } else {\n+            None\n+        }\n     }\n \n     pub fn print_error_count(&self, registry: &Registry) {\n@@ -1484,6 +1495,10 @@ impl HandlerInner {\n         self.err_count() > 0 || self.lint_err_count > 0 || self.warn_count > 0\n     }\n \n+    fn is_compilation_going_to_fail(&self) -> bool {\n+        self.has_errors() || self.lint_err_count > 0 || !self.delayed_span_bugs.is_empty()\n+    }\n+\n     fn abort_if_errors(&mut self) {\n         self.emit_stashed_diagnostics();\n "}, {"sha": "58d6e6d7efd69c0d757ff903b4356a586904f7d9", "filename": "compiler/rustc_incremental/src/persist/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -322,7 +322,7 @@ pub fn finalize_session_directory(sess: &Session, svh: Svh) {\n \n     let incr_comp_session_dir: PathBuf = sess.incr_comp_session_dir().clone();\n \n-    if sess.has_errors_or_delayed_span_bugs() {\n+    if let Some(_) = sess.has_errors_or_delayed_span_bugs() {\n         // If there have been any errors during compilation, we don't want to\n         // publish this session directory. Rather, we'll just delete it.\n "}, {"sha": "6e9dcdd981ec4d87b265686aec3789e2a3c23868", "filename": "compiler/rustc_incremental/src/persist/save.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fsave.rs?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -28,7 +28,7 @@ pub fn save_dep_graph(tcx: TyCtxt<'_>) {\n             return;\n         }\n         // This is going to be deleted in finalize_session_directory, so let's not create it\n-        if sess.has_errors_or_delayed_span_bugs() {\n+        if let Some(_) = sess.has_errors_or_delayed_span_bugs() {\n             return;\n         }\n \n@@ -89,7 +89,7 @@ pub fn save_work_product_index(\n         return;\n     }\n     // This is going to be deleted in finalize_session_directory, so let's not create it\n-    if sess.has_errors_or_delayed_span_bugs() {\n+    if let Some(_) = sess.has_errors_or_delayed_span_bugs() {\n         return;\n     }\n "}, {"sha": "b04afe549ac551d4bc1e516dcc40cb39e378d38f", "filename": "compiler/rustc_middle/src/ty/visit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -97,10 +97,10 @@ pub trait TypeVisitable<'tcx>: fmt::Debug + Clone {\n     }\n     fn error_reported(&self) -> Result<(), ErrorGuaranteed> {\n         if self.references_error() {\n-            if let Some(reported) = ty::tls::with(|tcx| tcx.sess.has_errors()) {\n+            if let Some(reported) = ty::tls::with(|tcx| tcx.sess.is_compilation_going_to_fail()) {\n                 Err(reported)\n             } else {\n-                bug!(\"expect tcx.sess.has_errors return true\");\n+                bug!(\"expect tcx.sess.is_compilation_going_to_fail return `Some`\");\n             }\n         } else {\n             Ok(())"}, {"sha": "e90afc591b53e0b9e5d057fc03faebb3116cfedd", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -667,7 +667,7 @@ impl<K: DepKind> DepGraph<K> {\n             None => {}\n         }\n \n-        if !qcx.dep_context().sess().has_errors_or_delayed_span_bugs() {\n+        if let None = qcx.dep_context().sess().has_errors_or_delayed_span_bugs() {\n             panic!(\"try_mark_previous_green() - Forcing the DepNode should have set its color\")\n         }\n "}, {"sha": "5c56494c80e35767fb17fae3dab557a31e1e2069", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -538,9 +538,12 @@ impl Session {\n     pub fn has_errors(&self) -> Option<ErrorGuaranteed> {\n         self.diagnostic().has_errors()\n     }\n-    pub fn has_errors_or_delayed_span_bugs(&self) -> bool {\n+    pub fn has_errors_or_delayed_span_bugs(&self) -> Option<ErrorGuaranteed> {\n         self.diagnostic().has_errors_or_delayed_span_bugs()\n     }\n+    pub fn is_compilation_going_to_fail(&self) -> Option<ErrorGuaranteed> {\n+        self.diagnostic().is_compilation_going_to_fail()\n+    }\n     pub fn abort_if_errors(&self) {\n         self.diagnostic().abort_if_errors();\n     }"}, {"sha": "3192daafa0b925b95ad19a37c54c9d715faf3c9b", "filename": "src/test/ui/consts/issue-104768.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/src%2Ftest%2Fui%2Fconsts%2Fissue-104768.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/src%2Ftest%2Fui%2Fconsts%2Fissue-104768.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-104768.rs?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -0,0 +1,4 @@\n+const A: &_ = 0_u32;\n+//~^ ERROR: the placeholder `_` is not allowed within types on item signatures for constants\n+\n+fn main() {}"}, {"sha": "55b2b6f04358f7367f79cde7727c74b8122d6731", "filename": "src/test/ui/consts/issue-104768.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/src%2Ftest%2Fui%2Fconsts%2Fissue-104768.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d8879c29570ee18cc3ab2c3e96bfd97221d0bb/src%2Ftest%2Fui%2Fconsts%2Fissue-104768.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-104768.stderr?ref=72d8879c29570ee18cc3ab2c3e96bfd97221d0bb", "patch": "@@ -0,0 +1,12 @@\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/issue-104768.rs:1:10\n+   |\n+LL | const A: &_ = 0_u32;\n+   |          ^^\n+   |          |\n+   |          not allowed in type signatures\n+   |          help: replace with the correct type: `u32`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0121`."}]}