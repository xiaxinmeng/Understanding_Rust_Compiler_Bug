{"sha": "759c7e43971132f7708c1de8b090392e0aef659f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OWM3ZTQzOTcxMTMyZjc3MDhjMWRlOGIwOTAzOTJlMGFlZjY1OWY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-15T06:50:52Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-15T06:50:52Z"}, "message": "Correct `const_in_array_repeat_expressions` feature name", "tree": {"sha": "b16098857a03f6b2966f0bca2a053a7eb6f81fe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b16098857a03f6b2966f0bca2a053a7eb6f81fe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/759c7e43971132f7708c1de8b090392e0aef659f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/759c7e43971132f7708c1de8b090392e0aef659f", "html_url": "https://github.com/rust-lang/rust/commit/759c7e43971132f7708c1de8b090392e0aef659f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/759c7e43971132f7708c1de8b090392e0aef659f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e8c4e6fb1c952048fb823e59f4c9c6487bf9a58", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8c4e6fb1c952048fb823e59f4c9c6487bf9a58", "html_url": "https://github.com/rust-lang/rust/commit/9e8c4e6fb1c952048fb823e59f4c9c6487bf9a58"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c7e51ff3217717cc5353ff184049fedcfd152eb6", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=759c7e43971132f7708c1de8b090392e0aef659f", "patch": "@@ -2176,15 +2176,15 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 err.note(&format!(\"required by cast to type `{}`\",\n                                   self.ty_to_string(target)));\n             }\n-            ObligationCauseCode::RepeatVec(suggest_const_in_array_repeat_expression) => {\n+            ObligationCauseCode::RepeatVec(suggest_const_in_array_repeat_expressions) => {\n                 err.note(\"the `Copy` trait is required because the \\\n                           repeated element will be copied\");\n-                if suggest_const_in_array_repeat_expression {\n+                if suggest_const_in_array_repeat_expressions {\n                     err.note(\"this array initializer can be evaluated at compile-time, for more \\\n                               information, see issue \\\n                               https://github.com/rust-lang/rust/issues/49147\");\n                     if tcx.sess.opts.unstable_features.is_nightly_build() {\n-                        err.help(\"add `#![feature(const_in_array_repeat_expression)]` to the \\\n+                        err.help(\"add `#![feature(const_in_array_repeat_expressions)]` to the \\\n                                   crate attributes to enable\");\n                     }\n                 }"}, {"sha": "e052ba4478145ece1f37ece589a6a3150bd19a2d", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=759c7e43971132f7708c1de8b090392e0aef659f", "patch": "@@ -206,7 +206,7 @@ pub enum ObligationCauseCode<'tcx> {\n     SizedReturnType,\n     /// Yield type must be Sized\n     SizedYieldType,\n-    /// [T,..n] --> T must be Copy. If `true`, suggest `const_in_array_repeat_expression` feature\n+    /// [T,..n] --> T must be Copy. If `true`, suggest `const_in_array_repeat_expressions` feature\n     /// flag.\n     RepeatVec(bool),\n "}, {"sha": "9f20a24a183c91416112e39367ed83e07b49809e", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=759c7e43971132f7708c1de8b090392e0aef659f", "patch": "@@ -1987,7 +1987,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                     let span = body.source_info(location).span;\n                     let ty = operand.ty(body, tcx);\n                     if !self.infcx.type_is_copy_modulo_regions(self.param_env, ty, span) {\n-                        // To determine if `const_in_array_repeat_expression` feature gate should\n+                        // To determine if `const_in_array_repeat_expressions` feature gate should\n                         // be mentioned, need to check if the rvalue is promotable.\n                         let should_suggest =\n                             should_suggest_const_in_array_repeat_expressions_attribute("}, {"sha": "b4da437279db13279325a63f365ced78a993b088", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759c7e43971132f7708c1de8b090392e0aef659f/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=759c7e43971132f7708c1de8b090392e0aef659f", "patch": "@@ -1185,7 +1185,7 @@ pub fn promote_candidates<'tcx>(\n     promotions\n }\n \n-/// This function returns `true` if the `const_in_array_repeat_expression` feature attribute should\n+/// This function returns `true` if the `const_in_array_repeat_expressions` feature attribute should\n /// be suggested. This function is probably quite expensive, it shouldn't be run in the happy path.\n /// Feature attribute should be suggested if `operand` can be promoted and the feature is not\n /// enabled."}, {"sha": "08d9ada884a53941f49af0549db1af5e0e3b8ebe", "filename": "src/test/ui/feature-gates/feature-gate-const_in_array_repeat_expressions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/759c7e43971132f7708c1de8b090392e0aef659f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/759c7e43971132f7708c1de8b090392e0aef659f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.stderr?ref=759c7e43971132f7708c1de8b090392e0aef659f", "patch": "@@ -8,7 +8,7 @@ LL |     let arr: [Option<String>; 2] = [None::<String>; 2];\n              <std::option::Option<T> as std::marker::Copy>\n    = note: the `Copy` trait is required because the repeated element will be copied\n    = note: this array initializer can be evaluated at compile-time, for more information, see issue https://github.com/rust-lang/rust/issues/49147\n-   = help: add `#![feature(const_in_array_repeat_expression)]` to the crate attributes to enable\n+   = help: add `#![feature(const_in_array_repeat_expressions)]` to the crate attributes to enable\n \n error[E0277]: the trait bound `std::option::Option<std::string::String>: std::marker::Copy` is not satisfied\n   --> $DIR/feature-gate-const_in_array_repeat_expressions.rs:14:36"}]}