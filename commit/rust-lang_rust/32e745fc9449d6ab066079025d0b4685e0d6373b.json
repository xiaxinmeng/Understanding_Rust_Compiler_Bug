{"sha": "32e745fc9449d6ab066079025d0b4685e0d6373b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZTc0NWZjOTQ0OWQ2YWIwNjYwNzkwMjVkMGI0Njg1ZTBkNjM3M2I=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-06T02:28:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-06T02:28:17Z"}, "message": "Rollup merge of #66101 - estebank:break-tail-e0308, r=Centril\n\nTweak type mismatch caused by break on tail expr\n\nWhen `break;` has a type mismatch because the `Destination` points at a tail\nexpression with an obligation flowing from a return type, point at the\nreturn type.\n\nFix #39968.", "tree": {"sha": "37ed4c2998fbb45bbd7557486ba5f378d6bfed7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37ed4c2998fbb45bbd7557486ba5f378d6bfed7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32e745fc9449d6ab066079025d0b4685e0d6373b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdwi/BCRBK7hj4Ov3rIwAAdHIIAFsOWPOOUQSh3bZPt8GRqPkf\nsINOVir1xT/rd6m4zcetL+upSOqqP9F7bSMaJQ22jDnwXBET/k29BpjhAL9fcxJN\nSaTK9CeoFC4Fn0lUD30roQxRWRh8UDux1Z6zcgueQx6AiA7j8u7WJOSz8O1gS+Nf\nsZ9EZh+uNBPnkvBU/Cj5RLrFBN3zoV0+3ym3w3MxwBOVRUCV0LsgKoyWXO5mkg9X\nn4grv02BwM/XAQd6fL9K+CI+aE8FfNz6CeX141zxGXYF+oJYpx6FGA5k2NDW1zbK\nS+/8tLT9lH/5ozmZFCDsr3F8LFWrW8l2ESW9xBdl4Lod9h4t3JW+M8VYAzBOoe4=\n=WNq+\n-----END PGP SIGNATURE-----\n", "payload": "tree 37ed4c2998fbb45bbd7557486ba5f378d6bfed7d\nparent 409b2bf941b2724a028f65518c64f799f205a186\nparent b0f258b2c4c5bc0764890e4989874783a8d37db3\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1573007297 +0100\ncommitter GitHub <noreply@github.com> 1573007297 +0100\n\nRollup merge of #66101 - estebank:break-tail-e0308, r=Centril\n\nTweak type mismatch caused by break on tail expr\n\nWhen `break;` has a type mismatch because the `Destination` points at a tail\nexpression with an obligation flowing from a return type, point at the\nreturn type.\n\nFix #39968.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32e745fc9449d6ab066079025d0b4685e0d6373b", "html_url": "https://github.com/rust-lang/rust/commit/32e745fc9449d6ab066079025d0b4685e0d6373b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32e745fc9449d6ab066079025d0b4685e0d6373b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409b2bf941b2724a028f65518c64f799f205a186", "url": "https://api.github.com/repos/rust-lang/rust/commits/409b2bf941b2724a028f65518c64f799f205a186", "html_url": "https://github.com/rust-lang/rust/commit/409b2bf941b2724a028f65518c64f799f205a186"}, {"sha": "b0f258b2c4c5bc0764890e4989874783a8d37db3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f258b2c4c5bc0764890e4989874783a8d37db3", "html_url": "https://github.com/rust-lang/rust/commit/b0f258b2c4c5bc0764890e4989874783a8d37db3"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "888d84d69fa014d7d821b436404f561582e02577", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=32e745fc9449d6ab066079025d0b4685e0d6373b", "patch": "@@ -1231,7 +1231,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     fn suggest_fn_call(\n         &self,\n         obligation: &PredicateObligation<'tcx>,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         trait_ref: &ty::Binder<ty::TraitRef<'tcx>>,\n         points_at_arg: bool,\n     ) {"}, {"sha": "af892bf8179f2106eaeac7dd2cf3d687f0d4e8b7", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=32e745fc9449d6ab066079025d0b4685e0d6373b", "patch": "@@ -553,7 +553,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n     pub fn check_for_cast(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         expr: &hir::Expr,\n         checked_ty: Ty<'tcx>,\n         expected_ty: Ty<'tcx>,"}, {"sha": "81e4bb6f2ad8bbb988a94aa24050c362869e24c5", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=32e745fc9449d6ab066079025d0b4685e0d6373b", "patch": "@@ -583,7 +583,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 } else {\n                     assert!(e_ty.is_unit());\n                     let ty = coerce.expected_ty();\n-                    coerce.coerce_forced_unit(self, &cause, &mut |err| {\n+                    coerce.coerce_forced_unit(self, &cause, &mut |mut err| {\n+                        self.suggest_mismatched_types_on_tail(\n+                            &mut err,\n+                            expr,\n+                            ty,\n+                            e_ty,\n+                            cause.span,\n+                            target_id,\n+                        );\n                         let val = match ty.kind {\n                             ty::Bool => \"true\",\n                             ty::Char => \"'a'\","}, {"sha": "fcafb0e88da49de3951c3cb835e0e549ea661583", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=32e745fc9449d6ab066079025d0b4685e0d6373b", "patch": "@@ -4245,7 +4245,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// - Possible missing return type if the return type is the default, and not `fn main()`.\n     pub fn suggest_mismatched_types_on_tail(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         expr: &'tcx hir::Expr,\n         expected: Ty<'tcx>,\n         found: Ty<'tcx>,\n@@ -4272,7 +4272,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// ```\n     fn suggest_fn_call(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         expr: &hir::Expr,\n         expected: Ty<'tcx>,\n         found: Ty<'tcx>,\n@@ -4385,7 +4385,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n     pub fn suggest_ref_or_into(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         expr: &hir::Expr,\n         expected: Ty<'tcx>,\n         found: Ty<'tcx>,\n@@ -4453,7 +4453,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// in the heap by calling `Box::new()`.\n     fn suggest_boxing_when_appropriate(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         expr: &hir::Expr,\n         expected: Ty<'tcx>,\n         found: Ty<'tcx>,\n@@ -4497,7 +4497,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// it suggests adding a semicolon.\n     fn suggest_missing_semicolon(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         expression: &'tcx hir::Expr,\n         expected: Ty<'tcx>,\n         cause_span: Span,\n@@ -4536,7 +4536,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// type.\n     fn suggest_missing_return_type(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         fn_decl: &hir::FnDecl,\n         expected: Ty<'tcx>,\n         found: Ty<'tcx>,\n@@ -4602,7 +4602,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// `.await` to the tail of the expression.\n     fn suggest_missing_await(\n         &self,\n-        err: &mut DiagnosticBuilder<'tcx>,\n+        err: &mut DiagnosticBuilder<'_>,\n         expr: &hir::Expr,\n         expected: Ty<'tcx>,\n         found: Ty<'tcx>,"}, {"sha": "d4e3e93d06bc70fa6f5fa1d85afdaef8e3f52874", "filename": "src/test/ui/type/type-error-break-tail.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Ftest%2Fui%2Ftype%2Ftype-error-break-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Ftest%2Fui%2Ftype%2Ftype-error-break-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-error-break-tail.rs?ref=32e745fc9449d6ab066079025d0b4685e0d6373b", "patch": "@@ -0,0 +1,8 @@\n+fn loop_ending() -> i32 {\n+    loop {\n+        if false { break; } //~ ERROR mismatched types\n+        return 42;\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "e5297d9a596d862b8992fd432f33cd3f978ecfe2", "filename": "src/test/ui/type/type-error-break-tail.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Ftest%2Fui%2Ftype%2Ftype-error-break-tail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32e745fc9449d6ab066079025d0b4685e0d6373b/src%2Ftest%2Fui%2Ftype%2Ftype-error-break-tail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-error-break-tail.stderr?ref=32e745fc9449d6ab066079025d0b4685e0d6373b", "patch": "@@ -0,0 +1,18 @@\n+error[E0308]: mismatched types\n+  --> $DIR/type-error-break-tail.rs:3:20\n+   |\n+LL | fn loop_ending() -> i32 {\n+   |                     --- expected `i32` because of return type\n+LL |     loop {\n+LL |         if false { break; }\n+   |                    ^^^^^\n+   |                    |\n+   |                    expected i32, found ()\n+   |                    help: give it a value of the expected type: `break 42`\n+   |\n+   = note: expected type `i32`\n+              found type `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}