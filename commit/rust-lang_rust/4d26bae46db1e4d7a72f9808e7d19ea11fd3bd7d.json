{"sha": "4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMjZiYWU0NmRiMWU0ZDdhNzJmOTgwOGU3ZDE5ZWExMWZkM2JkN2Q=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-25T07:13:58Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-25T07:13:58Z"}, "message": "Rename source_edit to source_file_edit to match file_system_edit", "tree": {"sha": "9007703d98bb2405b99a19c049364c8ce457f8b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9007703d98bb2405b99a19c049364c8ce457f8b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "html_url": "https://github.com/rust-lang/rust/commit/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b92fcbc9567674cd240cc533aa021f63019ec38d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92fcbc9567674cd240cc533aa021f63019ec38d", "html_url": "https://github.com/rust-lang/rust/commit/b92fcbc9567674cd240cc533aa021f63019ec38d"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "355c0a42aa23ff2bce47d87f1bc861df8f6e1a76", "filename": "crates/ra_ide_api/src/assists.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Fassists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Fassists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fassists.rs?ref=4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "patch": "@@ -17,7 +17,7 @@ pub(crate) fn assists(db: &RootDatabase, frange: FileRange) -> Vec<Assist> {\n             let file_id = frange.file_id;\n             let file_edit = SourceFileEdit { file_id, edit: action.edit };\n             let id = label.id;\n-            let change = SourceChange::source_edit(label.label, file_edit).with_cursor_opt(\n+            let change = SourceChange::source_file_edit(label.label, file_edit).with_cursor_opt(\n                 action.cursor_position.map(|offset| FilePosition { offset, file_id }),\n             );\n             Assist { id, change }"}, {"sha": "156f28ca33a20cae7fd9f545498013dfdc458f6e", "filename": "crates/ra_ide_api/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs?ref=4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "patch": "@@ -71,7 +71,7 @@ fn check_unnecessary_braces_in_use_statement(\n             range,\n             message: format!(\"Unnecessary braces in use statement\"),\n             severity: Severity::WeakWarning,\n-            fix: Some(SourceChange::source_edit(\n+            fix: Some(SourceChange::source_file_edit(\n                 \"Remove unnecessary braces\",\n                 SourceFileEdit { file_id, edit },\n             )),\n@@ -117,7 +117,7 @@ fn check_struct_shorthand_initialization(\n                     range: named_field.syntax().range(),\n                     message: format!(\"Shorthand struct initialization\"),\n                     severity: Severity::WeakWarning,\n-                    fix: Some(SourceChange::source_edit(\n+                    fix: Some(SourceChange::source_file_edit(\n                         \"use struct shorthand initialization\",\n                         SourceFileEdit { file_id, edit },\n                     )),"}, {"sha": "8aa3eb088b31b2efd1358429c08ff14e83b33675", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "patch": "@@ -115,7 +115,7 @@ impl SourceChange {\n \n     /// Creates a new SourceChange with the given label,\n     /// containing only the given `SourceFileEdits`.\n-    pub(crate) fn source_edits<L: Into<String>>(label: L, edits: Vec<SourceFileEdit>) -> Self {\n+    pub(crate) fn source_file_edits<L: Into<String>>(label: L, edits: Vec<SourceFileEdit>) -> Self {\n         SourceChange {\n             label: label.into(),\n             source_file_edits: edits,\n@@ -137,8 +137,8 @@ impl SourceChange {\n \n     /// Creates a new SourceChange with the given label,\n     /// containing only a single `SourceFileEdit`.\n-    pub(crate) fn source_edit<L: Into<String>>(label: L, edit: SourceFileEdit) -> Self {\n-        SourceChange::source_edits(label, vec![edit])\n+    pub(crate) fn source_file_edit<L: Into<String>>(label: L, edit: SourceFileEdit) -> Self {\n+        SourceChange::source_file_edits(label, vec![edit])\n     }\n \n     /// Creates a new SourceChange with the given label\n@@ -148,7 +148,7 @@ impl SourceChange {\n         file_id: FileId,\n         edit: TextEdit,\n     ) -> Self {\n-        SourceChange::source_edit(label, SourceFileEdit { file_id, edit })\n+        SourceChange::source_file_edit(label, SourceFileEdit { file_id, edit })\n     }\n \n     /// Creates a new SourceChange with the given label\n@@ -358,7 +358,7 @@ impl Analysis {\n             file_id: frange.file_id,\n             edit: join_lines::join_lines(&file, frange.range),\n         };\n-        SourceChange::source_edit(\"join lines\", file_edit)\n+        SourceChange::source_file_edit(\"join lines\", file_edit)\n     }\n \n     /// Returns an edit which should be applied when opening a new line, fixing\n@@ -373,7 +373,7 @@ impl Analysis {\n     pub fn on_eq_typed(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.db.parse(position.file_id);\n         let edit = typing::on_eq_typed(&file, position.offset)?;\n-        Some(SourceChange::source_edit(\n+        Some(SourceChange::source_file_edit(\n             \"add semicolon\",\n             SourceFileEdit { edit, file_id: position.file_id },\n         ))"}, {"sha": "22741445ad6b31ef2976d3d5c3385bf008962974", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "patch": "@@ -206,7 +206,7 @@ fn rename_reference(\n         return None;\n     }\n \n-    Some(SourceChange::source_edits(\"rename\", edit))\n+    Some(SourceChange::source_file_edits(\"rename\", edit))\n }\n \n #[cfg(test)]"}, {"sha": "501d44dbbe0353e2566ce5f9c4a1c8856532a3c9", "filename": "crates/ra_ide_api/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d/crates%2Fra_ide_api%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Ftyping.rs?ref=4d26bae46db1e4d7a72f9808e7d19ea11fd3bd7d", "patch": "@@ -33,7 +33,7 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Sour\n     edit.insert(position.offset, inserted);\n \n     Some(\n-        SourceChange::source_edit(\n+        SourceChange::source_file_edit(\n             \"on enter\",\n             SourceFileEdit { edit: edit.finish(), file_id: position.file_id },\n         )"}]}