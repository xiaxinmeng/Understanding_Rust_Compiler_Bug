{"sha": "ff678ea3f4f0e0ec2fd552db57d57889470ee7f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNjc4ZWEzZjRmMGUwZWMyZmQ1NTJkYjU3ZDU3ODg5NDcwZWU3ZjU=", "commit": {"author": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2015-02-27T16:42:51Z"}, "committer": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2015-02-27T16:42:51Z"}, "message": "std: Fixed backtrace warnings and tests for non-Linux platforms.\n\n- Fixed a couple of dead code warnings in std::sys::backtrace.\n- Made `backtrace-debuginfo` test a no-op on non-Linux platforms.\n- `backtrace-debuginfo` is no longer tested on pretty-rpass.", "tree": {"sha": "8c493eeafc097184b2ca965878ba30817fa02a5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c493eeafc097184b2ca965878ba30817fa02a5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5", "html_url": "https://github.com/rust-lang/rust/commit/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5/comments", "author": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "587f10aa36a1fcab73c6012125f6a3a9a8104412", "url": "https://api.github.com/repos/rust-lang/rust/commits/587f10aa36a1fcab73c6012125f6a3a9a8104412", "html_url": "https://github.com/rust-lang/rust/commit/587f10aa36a1fcab73c6012125f6a3a9a8104412"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "09630f8f584fe7c93c91bbae0fe267ae65faa7ae", "filename": "src/libstd/sys/unix/backtrace.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs?ref=ff678ea3f4f0e0ec2fd552db57d57889470ee7f5", "patch": "@@ -224,7 +224,7 @@ pub fn write(w: &mut Writer) -> IoResult<()> {\n \n #[cfg(any(target_os = \"macos\", target_os = \"ios\"))]\n fn print(w: &mut Writer, idx: int, addr: *mut libc::c_void,\n-         symaddr: *mut libc::c_void) -> IoResult<()> {\n+         _symaddr: *mut libc::c_void) -> IoResult<()> {\n     use intrinsics;\n     #[repr(C)]\n     struct Dl_info {\n@@ -450,6 +450,7 @@ fn output(w: &mut Writer, idx: int, addr: *mut libc::c_void,\n     w.write_all(&['\\n' as u8])\n }\n \n+#[allow(dead_code)]\n fn output_fileline(w: &mut Writer, file: &[u8], line: libc::c_int,\n                    more: bool) -> IoResult<()> {\n     let file = str::from_utf8(file).ok().unwrap_or(\"<unknown>\");"}, {"sha": "a2a63d44a784575041c658712d6faf6fbe6149b9", "filename": "src/test/run-pass/backtrace-debuginfo.rs", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff678ea3f4f0e0ec2fd552db57d57889470ee7f5/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs?ref=ff678ea3f4f0e0ec2fd552db57d57889470ee7f5", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags:-g\n+// ignore-pretty as this critically relies on line numbers\n \n use std::old_io::stderr;\n use std::env;\n@@ -19,14 +20,35 @@ macro_rules! pos {\n     () => ((file!(), line!()))\n }\n \n+#[cfg(all(unix,\n+          not(target_os = \"macos\"),\n+          not(target_os = \"ios\"),\n+          not(target_os = \"android\"),\n+          not(all(target_os = \"linux\", target_arch = \"arm\"))))]\n+macro_rules! dump_and_die {\n+    ($($pos:expr),*) => ({\n+        // FIXME(#18285): we cannot include the current position because\n+        // the macro span takes over the last frame's file/line.\n+        dump_filelines(&[$($pos),*]);\n+        panic!();\n+    })\n+}\n+\n+// this does not work on Windows, Android, OSX or iOS\n+#[cfg(any(not(unix),\n+          target_os = \"macos\",\n+          target_os = \"ios\",\n+          target_os = \"android\",\n+          all(target_os = \"linux\", target_arch = \"arm\")))]\n+macro_rules! dump_and_die {\n+    ($($pos:expr),*) => ({ let _ = [$($pos),*]; })\n+}\n+\n // we can't use a function as it will alter the backtrace\n macro_rules! check {\n     ($counter:expr; $($pos:expr),*) => ({\n         if *$counter == 0 {\n-            // FIXME(#18285): we cannot include the current position because\n-            // the macro span takes over the last frame's file/line.\n-            dump_filelines(&[$($pos),*]);\n-            panic!();\n+            dump_and_die!($($pos),*)\n         } else {\n             *$counter -= 1;\n         }"}]}