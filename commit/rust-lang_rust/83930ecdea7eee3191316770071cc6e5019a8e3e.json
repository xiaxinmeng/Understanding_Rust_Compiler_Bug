{"sha": "83930ecdea7eee3191316770071cc6e5019a8e3e", "node_id": "C_kwDOAAsO6NoAKDgzOTMwZWNkZWE3ZWVlMzE5MTMxNjc3MDA3MWNjNmU1MDE5YThlM2U", "commit": {"author": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2023-05-15T18:08:45Z"}, "committer": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2023-05-15T18:16:35Z"}, "message": "Give better error when collecting into `&[T]`", "tree": {"sha": "e7de6eddeb1aea5438bb12170a5f77589ba77bc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7de6eddeb1aea5438bb12170a5f77589ba77bc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83930ecdea7eee3191316770071cc6e5019a8e3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83930ecdea7eee3191316770071cc6e5019a8e3e", "html_url": "https://github.com/rust-lang/rust/commit/83930ecdea7eee3191316770071cc6e5019a8e3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83930ecdea7eee3191316770071cc6e5019a8e3e/comments", "author": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d941cd9812891af3b83dd4de64aa7d8ee99641a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d941cd9812891af3b83dd4de64aa7d8ee99641a", "html_url": "https://github.com/rust-lang/rust/commit/4d941cd9812891af3b83dd4de64aa7d8ee99641a"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "10bd027b6848a1600da45c9f404e9a98cd08f8ba", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/on_unimplemented.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/83930ecdea7eee3191316770071cc6e5019a8e3e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83930ecdea7eee3191316770071cc6e5019a8e3e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs?ref=83930ecdea7eee3191316770071cc6e5019a8e3e", "patch": "@@ -306,6 +306,14 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                     }\n                 }\n             }\n+\n+            // `&[{integral}]` - `FromIterator` needs that.\n+            if let ty::Ref(_, ref_ty, rustc_ast::Mutability::Not) = self_ty.kind()\n+                && let ty::Slice(sty) = ref_ty.kind()\n+                && sty.is_integral()\n+            {\n+                flags.push((sym::_Self, Some(\"&[{integral}]\".to_owned())));\n+            }\n         });\n \n         if let Ok(Some(command)) = OnUnimplementedDirective::of_item(self.tcx, def_id) {"}, {"sha": "0675e56358f9bd76b9cedaa9d875c1ef6f0837c6", "filename": "library/core/src/iter/traits/collect.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83930ecdea7eee3191316770071cc6e5019a8e3e/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83930ecdea7eee3191316770071cc6e5019a8e3e/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs?ref=83930ecdea7eee3191316770071cc6e5019a8e3e", "patch": "@@ -94,6 +94,16 @@\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_on_unimplemented(\n+    on(\n+        _Self = \"&[{A}]\",\n+        message = \"a slice of type `{Self}` cannot be built since we need to store the elements somewhere\",\n+        label = \"try explicitly collecting into a `Vec<{A}>`\",\n+    ),\n+    on(\n+        all(A = \"{integer}\", any(_Self = \"&[{integral}]\",)),\n+        message = \"a slice of type `{Self}` cannot be built since we need to store the elements somewhere\",\n+        label = \"try explicitly collecting into a `Vec<{A}>`\",\n+    ),\n     on(\n         _Self = \"[{A}]\",\n         message = \"a slice of type `{Self}` cannot be built since `{Self}` has no definite size\","}, {"sha": "045d40a6f71ae61b22cb0a53fd82e51bd674a850", "filename": "tests/ui/iterators/collect-into-slice.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/83930ecdea7eee3191316770071cc6e5019a8e3e/tests%2Fui%2Fiterators%2Fcollect-into-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83930ecdea7eee3191316770071cc6e5019a8e3e/tests%2Fui%2Fiterators%2Fcollect-into-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiterators%2Fcollect-into-slice.rs?ref=83930ecdea7eee3191316770071cc6e5019a8e3e", "patch": "@@ -14,4 +14,10 @@ fn main() {\n     //~| NOTE doesn't have a size known at compile-time\n     //~| NOTE doesn't have a size known at compile-time\n     process_slice(&some_generated_vec);\n+\n+    let some_generated_vec = (0..10).collect();\n+    //~^ ERROR a slice of type `&[i32]` cannot be built since we need to store the elements somewhere\n+    //~| NOTE try explicitly collecting into a `Vec<{integer}>`\n+    //~| NOTE required by a bound in `collect`\n+    process_slice(some_generated_vec);\n }"}, {"sha": "07dc561f06a690009a37fac5e6e547fc77e78f6b", "filename": "tests/ui/iterators/collect-into-slice.stderr", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83930ecdea7eee3191316770071cc6e5019a8e3e/tests%2Fui%2Fiterators%2Fcollect-into-slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83930ecdea7eee3191316770071cc6e5019a8e3e/tests%2Fui%2Fiterators%2Fcollect-into-slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiterators%2Fcollect-into-slice.stderr?ref=83930ecdea7eee3191316770071cc6e5019a8e3e", "patch": "@@ -28,6 +28,16 @@ LL |     let some_generated_vec = (0..10).collect();\n note: required by a bound in `collect`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n \n-error: aborting due to 3 previous errors\n+error[E0277]: a slice of type `&[i32]` cannot be built since we need to store the elements somewhere\n+  --> $DIR/collect-into-slice.rs:18:38\n+   |\n+LL |     let some_generated_vec = (0..10).collect();\n+   |                                      ^^^^^^^ try explicitly collecting into a `Vec<{integer}>`\n+   |\n+   = help: the trait `FromIterator<{integer}>` is not implemented for `&[i32]`\n+note: required by a bound in `collect`\n+  --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}