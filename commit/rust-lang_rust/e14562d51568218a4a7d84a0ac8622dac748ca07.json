{"sha": "e14562d51568218a4a7d84a0ac8622dac748ca07", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNDU2MmQ1MTU2ODIxOGE0YTdkODRhMGFjODYyMmRhYzc0OGNhMDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-11-17T22:47:51Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-11-19T00:22:18Z"}, "message": "Rework the `IdVisitor` so that it only visits item contents (and doesn't\nvisit nested items). This is what all clients wanted anyhow.", "tree": {"sha": "66ae7720f9f7c496ac1623a6a5cd546ec5d27b1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66ae7720f9f7c496ac1623a6a5cd546ec5d27b1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e14562d51568218a4a7d84a0ac8622dac748ca07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e14562d51568218a4a7d84a0ac8622dac748ca07", "html_url": "https://github.com/rust-lang/rust/commit/e14562d51568218a4a7d84a0ac8622dac748ca07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e14562d51568218a4a7d84a0ac8622dac748ca07/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25727d70d172df47641f2db86e926927a45b6228", "url": "https://api.github.com/repos/rust-lang/rust/commits/25727d70d172df47641f2db86e926927a45b6228", "html_url": "https://github.com/rust-lang/rust/commit/25727d70d172df47641f2db86e926927a45b6228"}], "stats": {"total": 47, "additions": 13, "deletions": 34}, "files": [{"sha": "f9a71f3c52b5a05e7a921b5519d42135dc9806de", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=e14562d51568218a4a7d84a0ac8622dac748ca07", "patch": "@@ -555,7 +555,6 @@ impl<'a> EarlyContext<'a> {\n     {\n         let mut v = ast_util::IdVisitor {\n             operation: self,\n-            pass_through_items: false,\n             visited_outermost: false,\n         };\n         f(&mut v);\n@@ -583,11 +582,7 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n     fn visit_ids<F>(&mut self, f: F)\n         where F: FnOnce(&mut util::IdVisitor<LateContext>)\n     {\n-        let mut v = util::IdVisitor {\n-            operation: self,\n-            pass_through_items: false,\n-            visited_outermost: false,\n-        };\n+        let mut v = util::IdVisitor::new(self);\n         f(&mut v);\n     }\n }"}, {"sha": "52b34586089c8e8d699ef665484b8f388716d872", "filename": "src/librustc/metadata/inline.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibrustc%2Fmetadata%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibrustc%2Fmetadata%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Finline.rs?ref=e14562d51568218a4a7d84a0ac8622dac748ca07", "patch": "@@ -48,11 +48,7 @@ impl InlinedItem {\n     }\n \n     pub fn visit_ids<O: IdVisitingOperation>(&self, operation: &mut O) {\n-        let mut id_visitor = IdVisitor {\n-            operation: operation,\n-            pass_through_items: true,\n-            visited_outermost: false,\n-        };\n+        let mut id_visitor = IdVisitor::new(operation);\n         self.visit(&mut id_visitor);\n     }\n "}, {"sha": "39ec3ef5b008b5747fd08d20b55a972833b40c4b", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=e14562d51568218a4a7d84a0ac8622dac748ca07", "patch": "@@ -485,11 +485,7 @@ impl<'a, 'tcx> Folder for StaticInliner<'a, 'tcx> {\n                 renaming_map: renaming_map,\n             };\n \n-            let mut id_visitor = front_util::IdVisitor {\n-                operation: &mut renaming_recorder,\n-                pass_through_items: true,\n-                visited_outermost: false,\n-            };\n+            let mut id_visitor = front_util::IdVisitor::new(&mut renaming_recorder);\n \n             id_visitor.visit_expr(const_expr);\n         }"}, {"sha": "44334762d90225c50e6fa19ba577082587be0429", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14562d51568218a4a7d84a0ac8622dac748ca07/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=e14562d51568218a4a7d84a0ac8622dac748ca07", "patch": "@@ -289,7 +289,6 @@ pub trait IdVisitingOperation {\n \n pub struct IdVisitor<'a, O:'a> {\n     pub operation: &'a mut O,\n-    pub pass_through_items: bool,\n     pub visited_outermost: bool,\n }\n \n@@ -319,12 +318,10 @@ impl<'a, 'v, O: IdVisitingOperation> Visitor<'v> for IdVisitor<'a, O> {\n     }\n \n     fn visit_item(&mut self, item: &Item) {\n-        if !self.pass_through_items {\n-            if self.visited_outermost {\n-                return\n-            } else {\n-                self.visited_outermost = true\n-            }\n+        if self.visited_outermost {\n+            return\n+        } else {\n+            self.visited_outermost = true\n         }\n \n         self.operation.visit_id(item.id);\n@@ -390,12 +387,10 @@ impl<'a, 'v, O: IdVisitingOperation> Visitor<'v> for IdVisitor<'a, O> {\n                 block: &'v Block,\n                 span: Span,\n                 node_id: NodeId) {\n-        if !self.pass_through_items {\n-            match function_kind {\n-                FnKind::Method(..) if self.visited_outermost => return,\n-                FnKind::Method(..) => self.visited_outermost = true,\n-                _ => {}\n-            }\n+        match function_kind {\n+            FnKind::Method(..) if self.visited_outermost => return,\n+            FnKind::Method(..) => self.visited_outermost = true,\n+            _ => {}\n         }\n \n         self.operation.visit_id(node_id);\n@@ -420,10 +415,8 @@ impl<'a, 'v, O: IdVisitingOperation> Visitor<'v> for IdVisitor<'a, O> {\n                        block,\n                        span);\n \n-        if !self.pass_through_items {\n-            if let FnKind::Method(..) = function_kind {\n-                self.visited_outermost = false;\n-            }\n+        if let FnKind::Method(..) = function_kind {\n+            self.visited_outermost = false;\n         }\n     }\n \n@@ -497,7 +490,6 @@ pub fn compute_id_range_for_fn_body(fk: FnKind,\n     let mut visitor = IdRangeComputingVisitor::new();\n     let mut id_visitor = IdVisitor {\n         operation: &mut visitor,\n-        pass_through_items: false,\n         visited_outermost: false,\n     };\n     id_visitor.visit_fn(fk, decl, body, sp, id);"}]}