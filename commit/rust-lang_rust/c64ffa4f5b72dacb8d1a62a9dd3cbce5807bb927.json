{"sha": "c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NGZmYTRmNWI3MmRhY2I4ZDFhNjJhOWRkM2NiY2U1ODA3YmI5Mjc=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T00:24:12Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T01:03:27Z"}, "message": "Updating examples", "tree": {"sha": "e9c33bdc08c58c65970b798ebb21fd07153eeb9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9c33bdc08c58c65970b798ebb21fd07153eeb9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927", "html_url": "https://github.com/rust-lang/rust/commit/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0874dbd21c89854c68e8db7201f5557ab5e6259", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0874dbd21c89854c68e8db7201f5557ab5e6259", "html_url": "https://github.com/rust-lang/rust/commit/c0874dbd21c89854c68e8db7201f5557ab5e6259"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "949a4a1032e6f9439c4f045c4b001158264f6a3a", "filename": "src/test/run-pass/pipe-presentation-examples.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs?ref=c64ffa4f5b72dacb8d1a62a9dd3cbce5807bb927", "patch": "@@ -21,7 +21,6 @@ macro_rules! select_if {\n               -> $nexts:ident $es:expr),+\n         ], )*\n     } => {\n-        log_syntax!{select_if1};\n         if $index == $count {\n             match move pipes::try_recv($port) {\n               $(some($message($($(copy $x,)+)* next)) => {\n@@ -47,7 +46,6 @@ macro_rules! select_if {\n         $index:expr,\n         $count:expr,\n     } => {\n-        log_syntax!{select_if2};\n         fail\n     }\n }\n@@ -60,12 +58,6 @@ macro_rules! select {\n         } )+\n     } => {\n         let index = pipes::selecti([$(($port).header()),+]/_);\n-        log_syntax!{select};\n-        log_syntax!{\n-        select_if!{index, 0, $( $port => [\n-            $($message$(($($x),+))dont_type_this* -> $next $e),+\n-        ], )+}\n-        };\n         select_if!{index, 0, $( $port => [\n             $($message$(($($x),+))dont_type_this* -> $next $e),+\n         ], )+}\n@@ -134,11 +126,10 @@ fn draw_two_frames(+channel: double_buffer::client::acquire) {\n #[cfg(bad1)]\n fn draw_two_frames_bad1(+channel: double_buffer::client::acquire) {\n     let channel = request(channel);\n-    let channel = select! {\n+    select! {\n         channel => {\n             give_buffer(buffer) -> channel {\n                 render(&buffer);\n-                channel\n             }\n         }\n     };\n@@ -168,4 +159,4 @@ fn draw_two_frames_bad2(+channel: double_buffer::client::acquire) {\n     };\n }\n \n-fn main() { }\n\\ No newline at end of file\n+fn main() { }"}]}