{"sha": "120d76e0a3bd72dc70186830e0a1ca51cee5ac8b", "node_id": "C_kwDOAAsO6NoAKDEyMGQ3NmUwYTNiZDcyZGM3MDE4NjgzMGUwYTFjYTUxY2VlNWFjOGI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-03T13:28:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-03T13:28:56Z"}, "message": "Merge #11179\n\n11179: minor: simplify mbe matcher r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d0f990ec3c0c09a8168fe08d957875f9a7c45aee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0f990ec3c0c09a8168fe08d957875f9a7c45aee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0voYCRBK7hj4Ov3rIwAADsUIABqbx+bunJXjkvSdkHNXsAFB\njB2Y2emOHoPNnPOyu+IXa5KTIFaFXgo6sZhoKAVfQt3YowifksnKNenRwzWhuw+9\nX1WDvG2hR49kgC409teSGkcg5XQK/MTKNjWFdHDkZ2DF5zuWPQEYdkRqVEuF7mDH\neMxwVZzfYHUIJ/0Rdi1xA+bPI5ttlfsdZ66c/Ibw8hbp7SvQ1fmfydl9aQ6t87mA\n1AzrxDAM24qp64hOoBfcHT3R1UwJ6KsKs8svxIr4Xtfuq48ead8yI0AUyL8ajmgN\nPIZvRPj09WlKjxFxPowYCB7EcXzL2KohdsCVyz+TIhP2JfK8QllIx9wBXReX71w=\n=VfCg\n-----END PGP SIGNATURE-----\n", "payload": "tree d0f990ec3c0c09a8168fe08d957875f9a7c45aee\nparent 29fc022d851bb7b11e30acc3df6d3d425b104821\nparent 303814189aabefd963c838d86dc922a9828df6d0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1641216536 +0000\ncommitter GitHub <noreply@github.com> 1641216536 +0000\n\nMerge #11179\n\n11179: minor: simplify mbe matcher r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b", "html_url": "https://github.com/rust-lang/rust/commit/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29fc022d851bb7b11e30acc3df6d3d425b104821", "url": "https://api.github.com/repos/rust-lang/rust/commits/29fc022d851bb7b11e30acc3df6d3d425b104821", "html_url": "https://github.com/rust-lang/rust/commit/29fc022d851bb7b11e30acc3df6d3d425b104821"}, {"sha": "303814189aabefd963c838d86dc922a9828df6d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/303814189aabefd963c838d86dc922a9828df6d0", "html_url": "https://github.com/rust-lang/rust/commit/303814189aabefd963c838d86dc922a9828df6d0"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "fb785665b97fd300ad3e9cb41f87b5de146ccde6", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=120d76e0a3bd72dc70186830e0a1ca51cee5ac8b", "patch": "@@ -697,6 +697,7 @@ fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragmen\n         \"block\" => parser::PrefixEntryPoint::Block,\n         \"meta\" => parser::PrefixEntryPoint::MetaItem,\n         \"item\" => parser::PrefixEntryPoint::Item,\n+        \"vis\" => parser::PrefixEntryPoint::Vis,\n         \"expr\" => {\n             return input\n                 .expect_fragment(parser::PrefixEntryPoint::Expr)\n@@ -706,33 +707,29 @@ fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragmen\n             let tt_result = match kind {\n                 \"ident\" => input\n                     .expect_ident()\n-                    .map(|ident| Some(tt::Leaf::from(ident.clone()).into()))\n+                    .map(|ident| tt::Leaf::from(ident.clone()).into())\n                     .map_err(|()| err!(\"expected ident\")),\n-                \"tt\" => input.expect_tt().map(Some).map_err(|()| err!()),\n-                \"lifetime\" => {\n-                    input.expect_lifetime().map(Some).map_err(|()| err!(\"expected lifetime\"))\n-                }\n+                \"tt\" => input.expect_tt().map_err(|()| err!()),\n+                \"lifetime\" => input.expect_lifetime().map_err(|()| err!(\"expected lifetime\")),\n                 \"literal\" => {\n                     let neg = input.eat_char('-');\n                     input\n                         .expect_literal()\n                         .map(|literal| {\n                             let lit = literal.clone();\n                             match neg {\n-                                None => Some(lit.into()),\n-                                Some(neg) => Some(tt::TokenTree::Subtree(tt::Subtree {\n+                                None => lit.into(),\n+                                Some(neg) => tt::TokenTree::Subtree(tt::Subtree {\n                                     delimiter: None,\n                                     token_trees: vec![neg, lit.into()],\n-                                })),\n+                                }),\n                             }\n                         })\n                         .map_err(|()| err!())\n                 }\n-                // `vis` is optional\n-                \"vis\" => Ok(input.expect_fragment(parser::PrefixEntryPoint::Vis).value),\n                 _ => Err(ExpandError::UnexpectedToken),\n             };\n-            return tt_result.map(|it| it.map(Fragment::Tokens)).into();\n+            return tt_result.map(|it| Some(Fragment::Tokens(it))).into();\n         }\n     };\n     input.expect_fragment(fragment).map(|it| it.map(Fragment::Tokens))"}, {"sha": "9d2b1da9abde6196b7e6d030bacc0c32c44692e2", "filename": "crates/mbe/src/tt_iter.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b/crates%2Fmbe%2Fsrc%2Ftt_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/120d76e0a3bd72dc70186830e0a1ca51cee5ac8b/crates%2Fmbe%2Fsrc%2Ftt_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftt_iter.rs?ref=120d76e0a3bd72dc70186830e0a1ca51cee5ac8b", "patch": "@@ -114,7 +114,7 @@ impl<'a> TtIter<'a> {\n             }\n         }\n \n-        let mut err = if !cursor.is_root() || error {\n+        let err = if error || !cursor.is_root() {\n             Some(err!(\"expected {:?}\", entry_point))\n         } else {\n             None\n@@ -132,9 +132,6 @@ impl<'a> TtIter<'a> {\n             }\n         }\n         self.inner = self.inner.as_slice()[res.len()..].iter();\n-        if res.is_empty() && err.is_none() {\n-            err = Some(err!(\"no tokens consumed\"));\n-        }\n         let res = match res.len() {\n             1 => Some(res[0].cloned()),\n             0 => None,"}]}