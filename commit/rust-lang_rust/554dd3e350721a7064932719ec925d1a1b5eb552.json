{"sha": "554dd3e350721a7064932719ec925d1a1b5eb552", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NGRkM2UzNTA3MjFhNzA2NDkzMjcxOWVjOTI1ZDFhMWI1ZWI1NTI=", "commit": {"author": {"name": "Alexis Hunt", "email": "lexer@google.com", "date": "2018-03-27T01:18:50Z"}, "committer": {"name": "Alexis Hunt", "email": "lexer@google.com", "date": "2018-03-27T01:18:50Z"}, "message": "Add missing '?' to format grammar.", "tree": {"sha": "56a248e4cd520313ebf563a4830f8d66c0616d3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56a248e4cd520313ebf563a4830f8d66c0616d3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554dd3e350721a7064932719ec925d1a1b5eb552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554dd3e350721a7064932719ec925d1a1b5eb552", "html_url": "https://github.com/rust-lang/rust/commit/554dd3e350721a7064932719ec925d1a1b5eb552", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554dd3e350721a7064932719ec925d1a1b5eb552/comments", "author": null, "committer": null, "parents": [{"sha": "5570cdcc9e7da0cca84e394e872bc16df2c6dc50", "url": "https://api.github.com/repos/rust-lang/rust/commits/5570cdcc9e7da0cca84e394e872bc16df2c6dc50", "html_url": "https://github.com/rust-lang/rust/commit/5570cdcc9e7da0cca84e394e872bc16df2c6dc50"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "c69c2cd98c8c4359b3119d14685afba4d084c686", "filename": "src/liballoc/fmt.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/554dd3e350721a7064932719ec925d1a1b5eb552/src%2Fliballoc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554dd3e350721a7064932719ec925d1a1b5eb552/src%2Fliballoc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ffmt.rs?ref=554dd3e350721a7064932719ec925d1a1b5eb552", "patch": "@@ -324,7 +324,7 @@\n //! sign := '+' | '-'\n //! width := count\n //! precision := count | '*'\n-//! type := identifier | ''\n+//! type := identifier | '?' | ''\n //! count := parameter | integer\n //! parameter := argument '$'\n //! ```\n@@ -514,17 +514,17 @@ pub use core::fmt::rt;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::fmt::{Formatter, Result, Write};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::fmt::{Octal, Binary};\n+pub use core::fmt::{Binary, Octal};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::fmt::{Display, Debug};\n+pub use core::fmt::{Debug, Display};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::fmt::{LowerHex, UpperHex, Pointer};\n+pub use core::fmt::{LowerHex, Pointer, UpperHex};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::fmt::{LowerExp, UpperExp};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::fmt::Error;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::fmt::{ArgumentV1, Arguments, write};\n+pub use core::fmt::{write, ArgumentV1, Arguments};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::fmt::{DebugList, DebugMap, DebugSet, DebugStruct, DebugTuple};\n \n@@ -561,7 +561,8 @@ use string;\n pub fn format(args: Arguments) -> string::String {\n     let capacity = args.estimated_capacity();\n     let mut output = string::String::with_capacity(capacity);\n-    output.write_fmt(args)\n-          .expect(\"a formatting trait implementation returned an error\");\n+    output\n+        .write_fmt(args)\n+        .expect(\"a formatting trait implementation returned an error\");\n     output\n }"}]}