{"sha": "ea5314d59c1ab220d5e8f9f85f18c19813d8f719", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNTMxNGQ1OWMxYWIyMjBkNWU4ZjlmODVmMThjMTk4MTNkOGY3MTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-24T11:10:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-24T11:10:09Z"}, "message": "Merge #10010\n\n10010: internal: use idiomatic form of assertions r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "bde4cffb4f03b42a3acaa816d82162a6d864f217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde4cffb4f03b42a3acaa816d82162a6d864f217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea5314d59c1ab220d5e8f9f85f18c19813d8f719", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhJNORCRBK7hj4Ov3rIwAAmAEIAEAqSXScyVYPC9DdOztmwYDH\n19VuNIZVAjurMd8ToWz67zU3wEEJfhlYIe8V3AuoB/H7yJe8X0p9vRekiXkz0iLL\njcVGnBydq6JfWKfZ+KwKzfMuDSCOWUW4fDPFqIsMy4I3ceE4G6MAqB5U/LGzwvZG\nUQP5ih+F+CmexoGPDPvOvyk8T99x8Gv4KAxEmC/tjxwVs5+tjq1RcYqdT/1gH+ko\nUy1O5qYkqwoH+d9o6h0rvLL9AzLtH8cmHVRw4PiFjw9in2FSzO5CDcfp/w5btzJ3\n+EwCjQDcjw3XAajaw1y145kHMWJm9tOhI4RFSrp341NZW5M4tMzMtWJkKpFWILQ=\n=tBzL\n-----END PGP SIGNATURE-----\n", "payload": "tree bde4cffb4f03b42a3acaa816d82162a6d864f217\nparent 43021525e5eeb7a4ece3d8f9a64a6303610479d6\nparent 1660820e516fef175c98ae7e7e8c30b866d6e67c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629803409 +0000\ncommitter GitHub <noreply@github.com> 1629803409 +0000\n\nMerge #10010\n\n10010: internal: use idiomatic form of assertions r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea5314d59c1ab220d5e8f9f85f18c19813d8f719", "html_url": "https://github.com/rust-lang/rust/commit/ea5314d59c1ab220d5e8f9f85f18c19813d8f719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea5314d59c1ab220d5e8f9f85f18c19813d8f719/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43021525e5eeb7a4ece3d8f9a64a6303610479d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/43021525e5eeb7a4ece3d8f9a64a6303610479d6", "html_url": "https://github.com/rust-lang/rust/commit/43021525e5eeb7a4ece3d8f9a64a6303610479d6"}, {"sha": "1660820e516fef175c98ae7e7e8c30b866d6e67c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1660820e516fef175c98ae7e7e8c30b866d6e67c", "html_url": "https://github.com/rust-lang/rust/commit/1660820e516fef175c98ae7e7e8c30b866d6e67c"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "d196db6f5916fb36bbbde41721f28c0a5fd1ac85", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ea5314d59c1ab220d5e8f9f85f18c19813d8f719/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5314d59c1ab220d5e8f9f85f18c19813d8f719/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=ea5314d59c1ab220d5e8f9f85f18c19813d8f719", "patch": "@@ -7,6 +7,7 @@ use std::{\n     process::{self, Stdio},\n };\n \n+use always_assert::always;\n use ide::{\n     AnnotationConfig, AssistKind, AssistResolveStrategy, FileId, FilePosition, FileRange,\n     HoverAction, HoverGotoTypeData, Query, RangeInfo, Runnable, RunnableKind, SingleResolve,\n@@ -265,10 +266,11 @@ pub(crate) fn handle_on_type_formatting(\n     // `text.char_at(position) == typed_char`.\n     position.offset -= TextSize::of('.');\n     let char_typed = params.ch.chars().next().unwrap_or('\\0');\n-    assert!({\n-        let text = snap.analysis.file_text(position.file_id)?;\n-        text[usize::from(position.offset)..].starts_with(char_typed)\n-    });\n+\n+    let text = snap.analysis.file_text(position.file_id)?;\n+    if !always!(text[usize::from(position.offset)..].starts_with(char_typed)) {\n+        return Ok(None);\n+    }\n \n     // We have an assist that inserts ` ` after typing `->` in `fn foo() ->{`,\n     // but it requires precise cursor positioning to work, and one can't"}, {"sha": "7954ae8ec6de41315df3f6731fd0479fb73a9df5", "filename": "docs/dev/style.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea5314d59c1ab220d5e8f9f85f18c19813d8f719/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/ea5314d59c1ab220d5e8f9f85f18c19813d8f719/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=ea5314d59c1ab220d5e8f9f85f18c19813d8f719", "patch": "@@ -260,7 +260,9 @@ if idx >= len {\n ## Assertions\n \n Assert liberally.\n-Prefer `stdx::never!` to standard `assert!`.\n+Prefer [`stdx::never!`](https://docs.rs/always-assert/0.1.2/always_assert/macro.never.html) to standard `assert!`.\n+\n+**Rationale:** See [cross cutting concern: error handling](https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/dev/architecture.md#error-handling).\n \n ## Getters & Setters\n "}]}