{"sha": "5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMDRjMTZiZDY5NTRhMjhlMWJjZjVmY2ZjN2ZiOWE3ODRjYTI5MTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-06T03:33:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-06T03:33:42Z"}, "message": "Auto merge of #24879 - Stebalien:vec_deque, r=alexcrichton\n\nAccording to rust-lang/rfcs#235, `VecDeque` should have this method (`VecDeque` was called `RingBuf` at the time) but it was never implemented.\r\n\r\nI marked this stable since \"1.0.0\" because it's stable in `Vec`.", "tree": {"sha": "f39129d59f8e11279f441e267d8983964c028af3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f39129d59f8e11279f441e267d8983964c028af3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914", "html_url": "https://github.com/rust-lang/rust/commit/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bd71637ca40910dbd310813a19abf76db84f8f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd71637ca40910dbd310813a19abf76db84f8f6", "html_url": "https://github.com/rust-lang/rust/commit/7bd71637ca40910dbd310813a19abf76db84f8f6"}, {"sha": "decf395221c986d41947266febf05ae18909b0e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/decf395221c986d41947266febf05ae18909b0e4", "html_url": "https://github.com/rust-lang/rust/commit/decf395221c986d41947266febf05ae18909b0e4"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "f70906f84b8692b4e36f2d1145e197ba053d15f8", "filename": "src/libcollections/vec_deque.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914/src%2Flibcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914/src%2Flibcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_deque.rs?ref=5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914", "patch": "@@ -1395,6 +1395,42 @@ impl<T> VecDeque<T> {\n         // naive impl\n         self.extend(other.drain());\n     }\n+\n+    /// Retains only the elements specified by the predicate.\n+    ///\n+    /// In other words, remove all elements `e` such that `f(&e)` returns false.\n+    /// This method operates in place and preserves the order of the retained\n+    /// elements.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// # #![feature(vec_deque_retain)]\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut buf = VecDeque::new();\n+    /// buf.extend(1..5);\n+    /// buf.retain(|&x| x%2 == 0);\n+    ///\n+    /// let v: Vec<_> = buf.into_iter().collect();\n+    /// assert_eq!(&v[..], &[2, 4]);\n+    /// ```\n+    #[unstable(feature = \"vec_deque_retain\",\n+               reason = \"new API, waiting for dust to settle\")]\n+    pub fn retain<F>(&mut self, mut f: F) where F: FnMut(&T) -> bool {\n+        let len = self.len();\n+        let mut del = 0;\n+        for i in 0..len {\n+            if !f(&self[i]) {\n+                del += 1;\n+            } else if del > 0 {\n+                self.swap(i-del, i);\n+            }\n+        }\n+        if del > 0 {\n+            self.truncate(len - del);\n+        }\n+    }\n }\n \n impl<T: Clone> VecDeque<T> {"}, {"sha": "c5edc4e621b6787d5ddefd6eb7d8cfea956bd33a", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914", "patch": "@@ -21,6 +21,7 @@\n #![feature(into_cow)]\n #![feature(step_by)]\n #![cfg_attr(test, feature(str_char))]\n+#![cfg_attr(test, feature(vec_deque_retain))]\n \n #[macro_use] extern crate log;\n "}, {"sha": "7870447281bc1335fc48b1c9e3c3b255f5488753", "filename": "src/libcollectionstest/vec_deque.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914/src%2Flibcollectionstest%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914/src%2Flibcollectionstest%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec_deque.rs?ref=5b04c16bd6954a28e1bcf5fcfc7fb9a784ca2914", "patch": "@@ -885,3 +885,12 @@ fn test_append() {\n     assert_eq!(b.iter().cloned().collect::<Vec<_>>(), [1, 2, 3, 4, 5, 6]);\n     assert_eq!(a.iter().cloned().collect::<Vec<_>>(), []);\n }\n+\n+#[test]\n+fn test_retain() {\n+    let mut buf = VecDeque::new();\n+    buf.extend(1..5);\n+    buf.retain(|&x| x % 2 == 0);\n+    let v: Vec<_> = buf.into_iter().collect();\n+    assert_eq!(&v[..], &[2, 4]);\n+}"}]}