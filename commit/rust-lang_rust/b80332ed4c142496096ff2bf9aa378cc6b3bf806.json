{"sha": "b80332ed4c142496096ff2bf9aa378cc6b3bf806", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MDMzMmVkNGMxNDI0OTYwOTZmZjJiZjlhYTM3OGNjNmIzYmY4MDY=", "commit": {"author": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-01-20T01:45:25Z"}, "committer": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-01-20T14:49:49Z"}, "message": "cast the sign_extend result to i128.", "tree": {"sha": "81464459c19d57f2b478617c50993b9c373f60ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81464459c19d57f2b478617c50993b9c373f60ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b80332ed4c142496096ff2bf9aa378cc6b3bf806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b80332ed4c142496096ff2bf9aa378cc6b3bf806", "html_url": "https://github.com/rust-lang/rust/commit/b80332ed4c142496096ff2bf9aa378cc6b3bf806", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b80332ed4c142496096ff2bf9aa378cc6b3bf806/comments", "author": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3383514d9db48295124b349323379952c33a2c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3383514d9db48295124b349323379952c33a2c4", "html_url": "https://github.com/rust-lang/rust/commit/a3383514d9db48295124b349323379952c33a2c4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9d3275ffde2c0a3f6000bcf760bdce386f5bbaae", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b80332ed4c142496096ff2bf9aa378cc6b3bf806/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b80332ed4c142496096ff2bf9aa378cc6b3bf806/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=b80332ed4c142496096ff2bf9aa378cc6b3bf806", "patch": "@@ -371,7 +371,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypeLimits {\n                 ty::Int(t) => {\n                     let ity = attr::IntType::SignedInt(t);\n                     let size = layout::Integer::from_attr(&cx.tcx, ity).size();\n-                    let actually = sign_extend(val, size);\n+                    let actually = sign_extend(val, size) as i128;\n                     (format!(\"{:?}\", t), actually.to_string())\n                 }\n                 ty::Uint(t) => {"}]}