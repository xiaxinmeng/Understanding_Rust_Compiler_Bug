{"sha": "631766c0555acad0571f761f948bc4b144620534", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMTc2NmMwNTU1YWNhZDA1NzFmNzYxZjk0OGJjNGIxNDQ2MjA1MzQ=", "commit": {"author": {"name": "Michael Watzko", "email": "michael@watzko.de", "date": "2021-08-12T07:06:43Z"}, "committer": {"name": "Michael Watzko", "email": "michael@watzko.de", "date": "2021-08-12T07:06:43Z"}, "message": "Make all the impls for Staturating unstable saturating_int_impl", "tree": {"sha": "a35cd30753d246c7c33406b12472ee1cda664169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a35cd30753d246c7c33406b12472ee1cda664169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/631766c0555acad0571f761f948bc4b144620534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/631766c0555acad0571f761f948bc4b144620534", "html_url": "https://github.com/rust-lang/rust/commit/631766c0555acad0571f761f948bc4b144620534", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/631766c0555acad0571f761f948bc4b144620534/comments", "author": {"login": "kellerkindt", "id": 1133787, "node_id": "MDQ6VXNlcjExMzM3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1133787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellerkindt", "html_url": "https://github.com/kellerkindt", "followers_url": "https://api.github.com/users/kellerkindt/followers", "following_url": "https://api.github.com/users/kellerkindt/following{/other_user}", "gists_url": "https://api.github.com/users/kellerkindt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellerkindt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellerkindt/subscriptions", "organizations_url": "https://api.github.com/users/kellerkindt/orgs", "repos_url": "https://api.github.com/users/kellerkindt/repos", "events_url": "https://api.github.com/users/kellerkindt/events{/privacy}", "received_events_url": "https://api.github.com/users/kellerkindt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kellerkindt", "id": 1133787, "node_id": "MDQ6VXNlcjExMzM3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1133787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellerkindt", "html_url": "https://github.com/kellerkindt", "followers_url": "https://api.github.com/users/kellerkindt/followers", "following_url": "https://api.github.com/users/kellerkindt/following{/other_user}", "gists_url": "https://api.github.com/users/kellerkindt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellerkindt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellerkindt/subscriptions", "organizations_url": "https://api.github.com/users/kellerkindt/orgs", "repos_url": "https://api.github.com/users/kellerkindt/repos", "events_url": "https://api.github.com/users/kellerkindt/events{/privacy}", "received_events_url": "https://api.github.com/users/kellerkindt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4c9f76fd287698e4341c0e1137b1fda0d339743", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4c9f76fd287698e4341c0e1137b1fda0d339743", "html_url": "https://github.com/rust-lang/rust/commit/d4c9f76fd287698e4341c0e1137b1fda0d339743"}], "stats": {"total": 66, "additions": 33, "deletions": 33}, "files": [{"sha": "4616656b1acc624298e1fe145e6a8673982f8cd9", "filename": "library/core/src/num/saturating.rs", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/631766c0555acad0571f761f948bc4b144620534/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631766c0555acad0571f761f948bc4b144620534/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs?ref=631766c0555acad0571f761f948bc4b144620534", "patch": "@@ -36,44 +36,44 @@ use crate::ops::{Sub, SubAssign};\n #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n #[derive(PartialEq, Eq, PartialOrd, Ord, Clone, Copy, Default, Hash)]\n #[repr(transparent)]\n-pub struct Saturating<T>(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub T);\n+pub struct Saturating<T>(#[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] pub T);\n \n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n impl<T: fmt::Debug> fmt::Debug for Saturating<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         self.0.fmt(f)\n     }\n }\n \n-#[stable(feature = \"saturating_display\", since = \"1.10.0\")]\n+#[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n impl<T: fmt::Display> fmt::Display for Saturating<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         self.0.fmt(f)\n     }\n }\n \n-#[stable(feature = \"saturating_fmt\", since = \"1.11.0\")]\n+#[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n impl<T: fmt::Binary> fmt::Binary for Saturating<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         self.0.fmt(f)\n     }\n }\n \n-#[stable(feature = \"saturating_fmt\", since = \"1.11.0\")]\n+#[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n impl<T: fmt::Octal> fmt::Octal for Saturating<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         self.0.fmt(f)\n     }\n }\n \n-#[stable(feature = \"saturating_fmt\", since = \"1.11.0\")]\n+#[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n impl<T: fmt::LowerHex> fmt::LowerHex for Saturating<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         self.0.fmt(f)\n     }\n }\n \n-#[stable(feature = \"saturating_fmt\", since = \"1.11.0\")]\n+#[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n impl<T: fmt::UpperHex> fmt::UpperHex for Saturating<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         self.0.fmt(f)\n@@ -83,7 +83,7 @@ impl<T: fmt::UpperHex> fmt::UpperHex for Saturating<T> {\n // FIXME(30524): impl Op<T> for Saturating<T>, impl OpAssign<T> for Saturating<T>\n macro_rules! saturating_impl {\n     ($($t:ty)*) => ($(\n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl Add for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -93,9 +93,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_binop! { impl Add, add for Saturating<$t>, Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n \n-        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl AddAssign for Saturating<$t> {\n             #[inline]\n             fn add_assign(&mut self, other: Saturating<$t>) {\n@@ -104,7 +104,7 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl AddAssign, add_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl Sub for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -114,9 +114,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_binop! { impl Sub, sub for Saturating<$t>, Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n-        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl SubAssign for Saturating<$t> {\n             #[inline]\n             fn sub_assign(&mut self, other: Saturating<$t>) {\n@@ -125,7 +125,7 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl SubAssign, sub_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl Mul for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -135,9 +135,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_binop! { impl Mul, mul for Saturating<$t>, Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n-        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl MulAssign for Saturating<$t> {\n             #[inline]\n             fn mul_assign(&mut self, other: Saturating<$t>) {\n@@ -146,7 +146,7 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl MulAssign, mul_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[stable(feature = \"saturating_div\", since = \"1.3.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl Div for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -157,9 +157,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_binop! { impl Div, div for Saturating<$t>, Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n-        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl DivAssign for Saturating<$t> {\n             #[inline]\n             fn div_assign(&mut self, other: Saturating<$t>) {\n@@ -168,7 +168,7 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl DivAssign, div_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl Not for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -178,9 +178,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_unop! { impl Not, not for Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl BitXor for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -190,9 +190,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_binop! { impl BitXor, bitxor for Saturating<$t>, Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n-        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl BitXorAssign for Saturating<$t> {\n             #[inline]\n             fn bitxor_assign(&mut self, other: Saturating<$t>) {\n@@ -201,7 +201,7 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl BitXorAssign, bitxor_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl BitOr for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -211,9 +211,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_binop! { impl BitOr, bitor for Saturating<$t>, Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n-        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl BitOrAssign for Saturating<$t> {\n             #[inline]\n             fn bitor_assign(&mut self, other: Saturating<$t>) {\n@@ -222,7 +222,7 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl BitOrAssign, bitor_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl BitAnd for Saturating<$t> {\n             type Output = Saturating<$t>;\n \n@@ -232,9 +232,9 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_binop! { impl BitAnd, bitand for Saturating<$t>, Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n-        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl BitAndAssign for Saturating<$t> {\n             #[inline]\n             fn bitand_assign(&mut self, other: Saturating<$t>) {\n@@ -243,7 +243,7 @@ macro_rules! saturating_impl {\n         }\n         forward_ref_op_assign! { impl BitAndAssign, bitand_assign for Saturating<$t>, Saturating<$t> }\n \n-        #[stable(feature = \"saturating_neg\", since = \"1.45.0\")]\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n         impl Neg for Saturating<$t> {\n             type Output = Self;\n             #[inline]\n@@ -252,7 +252,7 @@ macro_rules! saturating_impl {\n             }\n         }\n         forward_ref_unop! { impl Neg, neg for Saturating<$t>,\n-                #[stable(feature = \"saturating_ref\", since = \"1.14.0\")] }\n+                #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")] }\n \n     )*)\n }\n@@ -464,7 +464,7 @@ macro_rules! saturating_int_impl {\n             /// assert_eq!(m.0 as u16, 0b10101010_00000000);\n             /// assert_eq!(m, Saturating(-22016));\n             /// ```\n-            #[stable(feature = \"reverse_bits\", since = \"1.37.0\")]\n+            #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n             #[rustc_const_stable(feature = \"const_reverse_bits\", since = \"1.37.0\")]\n             #[inline]\n             #[must_use]"}]}