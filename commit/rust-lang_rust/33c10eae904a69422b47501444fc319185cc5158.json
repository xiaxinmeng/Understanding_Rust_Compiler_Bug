{"sha": "33c10eae904a69422b47501444fc319185cc5158", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYzEwZWFlOTA0YTY5NDIyYjQ3NTAxNDQ0ZmMzMTkxODVjYzUxNTg=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-23T14:36:51Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-09-22T19:01:21Z"}, "message": "improve panic message", "tree": {"sha": "9e55348deaae4615add4755981bc6a9185f4ae46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e55348deaae4615add4755981bc6a9185f4ae46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33c10eae904a69422b47501444fc319185cc5158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33c10eae904a69422b47501444fc319185cc5158", "html_url": "https://github.com/rust-lang/rust/commit/33c10eae904a69422b47501444fc319185cc5158", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33c10eae904a69422b47501444fc319185cc5158/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce6e6f93330b9333e188b7d3e99cbffdac725a59", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce6e6f93330b9333e188b7d3e99cbffdac725a59", "html_url": "https://github.com/rust-lang/rust/commit/ce6e6f93330b9333e188b7d3e99cbffdac725a59"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "b3ca78d59def33119348ce31ef147169aeba7278", "filename": "src/librustc_codegen_llvm/mir/block.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/33c10eae904a69422b47501444fc319185cc5158/src%2Flibrustc_codegen_llvm%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c10eae904a69422b47501444fc319185cc5158/src%2Flibrustc_codegen_llvm%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Fblock.rs?ref=33c10eae904a69422b47501444fc319185cc5158", "patch": "@@ -475,14 +475,12 @@ impl FunctionCx<'a, 'll, 'tcx> {\n                         .max(tcx.data_layout.i32_align)\n                         .max(tcx.data_layout.pointer_align);\n \n-                    let str = if intrinsic == Some(\"init\") {\n-                        \"Attempted to instantiate an uninhabited type (e.g. `!`) \\\n-                         using mem::zeroed()\"\n-                    } else {\n-                        \"Attempted to instantiate an uninhabited type (e.g. `!`) \\\n-                         using mem::uninitialized()\"\n-                    };\n-                    let msg_str = Symbol::intern(str).as_str();\n+                    let str = format!(\n+                        \"Attempted to instantiate uninhabited type {} using mem::{}\",\n+                        sig.output(),\n+                        if intrinsic == Some(\"init\") { \"zeroed\" } else { \"uninitialized\" }\n+                    );\n+                    let msg_str = Symbol::intern(&str).as_str();\n                     let msg_str = C_str_slice(bx.cx, msg_str);\n                     let msg_file_line_col = C_struct(bx.cx,\n                                                     &[msg_str, filename, line, col],"}]}