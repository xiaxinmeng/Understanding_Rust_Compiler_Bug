{"sha": "c197dc467fc18c3923f27c8e57e174497f2e63ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOTdkYzQ2N2ZjMThjMzkyM2YyN2M4ZTU3ZTE3NDQ5N2YyZTYzZWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-21T14:01:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-21T14:01:58Z"}, "message": "clarify write_bytes a bit", "tree": {"sha": "39b68eb260043a5a6a092a748ca58198dcd09bb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39b68eb260043a5a6a092a748ca58198dcd09bb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c197dc467fc18c3923f27c8e57e174497f2e63ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c197dc467fc18c3923f27c8e57e174497f2e63ed", "html_url": "https://github.com/rust-lang/rust/commit/c197dc467fc18c3923f27c8e57e174497f2e63ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c197dc467fc18c3923f27c8e57e174497f2e63ed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adcc0d21687f642e3d947cd6d547bec1768c0941", "url": "https://api.github.com/repos/rust-lang/rust/commits/adcc0d21687f642e3d947cd6d547bec1768c0941", "html_url": "https://github.com/rust-lang/rust/commit/adcc0d21687f642e3d947cd6d547bec1768c0941"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "56a24168e28d959629f08b8d81079488e4b693ad", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c197dc467fc18c3923f27c8e57e174497f2e63ed/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c197dc467fc18c3923f27c8e57e174497f2e63ed/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=c197dc467fc18c3923f27c8e57e174497f2e63ed", "patch": "@@ -1162,6 +1162,10 @@ extern \"rust-intrinsic\" {\n     /// // Even leaking `v` \"uses\" it, and hence is undefined behavior.\n     /// // mem::forget(v); // ERROR\n     ///\n+    /// // In fact, `v` is invalid according to basic type layout invariants, so *any*\n+    /// // operation touching it is undefined behavior.\n+    /// // let v2 = v; // ERROR\n+    ///\n     /// unsafe {\n     ///     // Let us instead put in a valid value\n     ///     ptr::write(&mut v as *mut Box<i32>, Box::new(42i32));"}]}