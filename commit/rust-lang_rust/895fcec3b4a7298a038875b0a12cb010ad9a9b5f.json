{"sha": "895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NWZjZWMzYjRhNzI5OGEwMzg4NzViMGExMmNiMDEwYWQ5YTliNWY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-23T11:22:23Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-05T14:54:49Z"}, "message": "Fix test/compile-fail", "tree": {"sha": "9a4f3d086d58896226b78e63313ddcda1a6c54c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a4f3d086d58896226b78e63313ddcda1a6c54c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "html_url": "https://github.com/rust-lang/rust/commit/895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "279fbaa29c4b7007497d5273c0d11d4e9e843d74", "url": "https://api.github.com/repos/rust-lang/rust/commits/279fbaa29c4b7007497d5273c0d11d4e9e843d74", "html_url": "https://github.com/rust-lang/rust/commit/279fbaa29c4b7007497d5273c0d11d4e9e843d74"}], "stats": {"total": 447, "additions": 231, "deletions": 216}, "files": [{"sha": "a1abfb704ec15fa692677d94fc910ad8f573bbf7", "filename": "src/librustc/middle/lib_features.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flib_features.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -66,7 +66,9 @@ impl<'a, 'tcx> LibFeatureCollector<'a, 'tcx> {\n \n             // Find a stability attribute (i.e. `#[stable (..)]`, `#[unstable (..)]`,\n             // `#[rustc_const_unstable (..)]`).\n-            if stab_attrs.iter().any(|stab_attr| attr.check_name(stab_attr)) {\n+            if let Some(stab_attr) = stab_attrs.iter().find(|stab_attr| {\n+                attr.check_name(stab_attr)\n+            }) {\n                 let meta_item = attr.meta();\n                 if let Some(MetaItem { node: MetaItemKind::List(ref metas), .. }) = meta_item {\n                     let mut feature = None;\n@@ -82,7 +84,12 @@ impl<'a, 'tcx> LibFeatureCollector<'a, 'tcx> {\n                         }\n                     }\n                     if let Some(feature) = feature {\n-                        features.push((feature, since, attr.span));\n+                        // This additional check for stability is to make sure we\n+                        // don't emit additional, irrelevant errors for malformed\n+                        // attributes.\n+                        if *stab_attr != \"stable\" || since.is_some() {\n+                            features.push((feature, since, attr.span));\n+                        }\n                     }\n                     // We need to iterate over the other attributes, because\n                     // `rustc_const_unstable` is not mutually exclusive with"}, {"sha": "f690cbd029d5fc59ff81f2a484111a1e5ca9b471", "filename": "src/test/compile-fail/auxiliary/inherited_stability.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Finherited_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Finherited_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Finherited_stability.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n #![crate_name=\"inherited_stability\"]\n #![crate_type = \"lib\"]\n-#![unstable(feature = \"test_feature\", issue = \"0\")]\n+#![unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #![feature(staged_api)]\n \n pub fn unstable() {}\n@@ -19,16 +19,16 @@ pub fn stable() {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub mod stable_mod {\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub fn unstable() {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn stable() {}\n }\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub mod unstable_mod {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated() {}\n \n@@ -37,7 +37,7 @@ pub mod unstable_mod {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Stable {\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     fn unstable(&self);\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "6ba66f3e45fece9f5e7e0eec334526d6ac6278fe", "filename": "src/test/compile-fail/auxiliary/lint_output_format.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_output_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_output_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_output_format.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -11,20 +11,20 @@\n #![crate_name=\"lint_output_format\"]\n #![crate_type = \"lib\"]\n #![feature(staged_api)]\n-#![unstable(feature = \"test_feature\", issue = \"0\")]\n+#![unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub fn foo() -> usize {\n     20\n }\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub fn bar() -> usize {\n     40\n }\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub fn baz() -> usize {\n     30\n }"}, {"sha": "5547458abbef8e1a8fd281adc66f9751af639e02", "filename": "src/test/compile-fail/auxiliary/lint_stability.rs", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_stability.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -14,27 +14,27 @@\n #![feature(associated_type_defaults)]\n #![stable(feature = \"lint_stability\", since = \"1.0.0\")]\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub fn deprecated() {}\n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub fn deprecated_text() {}\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"99.99.99\", reason = \"text\")]\n pub fn deprecated_future() {}\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub fn deprecated_unstable() {}\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub fn deprecated_unstable_text() {}\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub fn unstable() {}\n-#[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n pub fn unstable_text() {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -46,23 +46,23 @@ pub fn stable_text() {}\n pub struct MethodTester;\n \n impl MethodTester {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn method_deprecated(&self) {}\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn method_deprecated_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn method_deprecated_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn method_deprecated_unstable_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub fn method_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n     pub fn method_unstable_text(&self) {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -71,25 +71,25 @@ impl MethodTester {\n     pub fn method_stable_text(&self) {}\n }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n pub trait Trait {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn trait_deprecated(&self) {}\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn trait_deprecated_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn trait_deprecated_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn trait_deprecated_unstable_text(&self) {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     fn trait_unstable(&self) {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n     fn trait_unstable_text(&self) {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -98,100 +98,100 @@ pub trait Trait {\n     fn trait_stable_text(&self) {}\n }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n pub trait TraitWithAssociatedTypes {\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     type TypeUnstable = u8;\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     type TypeDeprecated = u8;\n }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n impl Trait for MethodTester {}\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub trait UnstableTrait { fn dummy(&self) { } }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub trait DeprecatedTrait {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")] fn dummy(&self) { }\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] fn dummy(&self) { }\n }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct DeprecatedStruct {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] pub i: isize\n }\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct DeprecatedUnstableStruct {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] pub i: isize\n }\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub struct UnstableStruct {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] pub i: isize\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableStruct {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] pub i: isize\n }\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub enum UnstableEnum {}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum StableEnum {}\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct DeprecatedUnitStruct;\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct DeprecatedUnstableUnitStruct;\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub struct UnstableUnitStruct;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableUnitStruct;\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n pub enum Enum {\n-    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     DeprecatedVariant,\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     DeprecatedUnstableVariant,\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     UnstableVariant,\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     StableVariant,\n }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct DeprecatedTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct DeprecatedUnstableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub struct UnstableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[macro_export]\n macro_rules! macro_test {\n     () => (deprecated());\n }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[macro_export]\n macro_rules! macro_test_arg {\n     ($func:expr) => ($func);\n }\n \n-#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n #[macro_export]\n macro_rules! macro_test_arg_nested {\n     ($func:ident) => (macro_test_arg!($func()));"}, {"sha": "6b79c36fc0587ea9c663edcf0a458eef5e47e314", "filename": "src/test/compile-fail/auxiliary/lint_stability_fields.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_stability_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_stability_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Flint_stability_fields.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -15,47 +15,47 @@\n pub struct Stable {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub inherit: u8, // it's a lie (stable doesn't inherit)\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub override1: u8,\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub override2: u8,\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Stable2(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n-                   #[unstable(feature = \"test_feature\", issue = \"0\")] pub u8,\n-                   #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                   #[unstable(feature = \"unstable_test_feature\", issue = \"0\")] pub u8,\n+                   #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n                    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] pub u8);\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub struct Unstable {\n     pub inherit: u8,\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub override1: u8,\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub override2: u8,\n }\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub struct Unstable2(pub u8,\n                      #[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n-                     #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                     #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n                      #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] pub u8);\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct Deprecated {\n     pub inherit: u8,\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub override1: u8,\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub override2: u8,\n }\n \n-#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n pub struct Deprecated2(pub u8,\n                        #[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n-                       #[unstable(feature = \"test_feature\", issue = \"0\")] pub u8);\n+                       #[unstable(feature = \"unstable_test_feature\", issue = \"0\")] pub u8);"}, {"sha": "1ee623c34fb48d9cd6333de6074da3e33b45b38e", "filename": "src/test/compile-fail/auxiliary/stability_attribute_issue.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fstability_attribute_issue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fstability_attribute_issue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fstability_attribute_issue.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n #![feature(staged_api)]\n-#![stable(feature = \"foo\", since = \"1.2.0\")]\n+#![stable(feature = \"stable_test_feature\", since = \"1.2.0\")]\n \n \n-#[unstable(feature = \"foo\", issue = \"1\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"1\")]\n pub fn unstable() {}\n \n-#[unstable(feature = \"foo\", reason = \"message\", issue = \"2\")]\n+#[unstable(feature = \"unstable_test_feature\", reason = \"message\", issue = \"2\")]\n pub fn unstable_msg() {}"}, {"sha": "a59f4b4e8f44b9760b72452564435acd3a4f6f6b", "filename": "src/test/compile-fail/auxiliary/stability_cfg2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fstability_cfg2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fstability_cfg2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fstability_cfg2.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -10,6 +10,6 @@\n \n // compile-flags:--cfg foo\n \n-#![cfg_attr(foo, unstable(feature = \"test_feature\", issue = \"0\"))]\n+#![cfg_attr(foo, unstable(feature = \"unstable_test_feature\", issue = \"0\"))]\n #![cfg_attr(not(foo), stable(feature = \"test_feature\", since = \"1.0.0\"))]\n #![feature(staged_api)]"}, {"sha": "5c6facbf01436ad6abf05e175638236c49a83ace", "filename": "src/test/compile-fail/deprecation-in-staged-api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fdeprecation-in-staged-api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fdeprecation-in-staged-api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdeprecation-in-staged-api.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -12,7 +12,7 @@\n \n #![feature(staged_api)]\n \n-#![stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#![stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n \n #[deprecated]\n fn main() { } //~ERROR `#[deprecated]` cannot be used in staged api"}, {"sha": "b10a0a60f1471598562f94b9b4a1e9a53aec50b6", "filename": "src/test/compile-fail/enable-unstable-lib-feature.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fenable-unstable-lib-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fenable-unstable-lib-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fenable-unstable-lib-feature.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -12,7 +12,7 @@\n \n // aux-build:stability_cfg2.rs\n \n-#![feature(test_feature)]\n+#![feature(unstable_test_feature)]\n #![deny(non_snake_case)] // To trigger a hard error\n \n // Shouldn't generate a warning about unstable features"}, {"sha": "0f6b9d1b5dc4fc5a6c6a893b440090b02b267f57", "filename": "src/test/compile-fail/issue-28075.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fissue-28075.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fissue-28075.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28075.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -16,7 +16,8 @@\n \n extern crate lint_stability;\n \n-use lint_stability::{unstable, deprecated}; //~ ERROR use of unstable library feature 'test_feature'\n+use lint_stability::{unstable, deprecated};\n+//~^ ERROR use of unstable library feature 'unstable_test_feature'\n \n fn main() {\n }"}, {"sha": "12e3457ef9e34c0b5817a34a7ee98dccd0178710", "filename": "src/test/compile-fail/issue-28388-3.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fissue-28388-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fissue-28388-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28388-3.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -14,7 +14,8 @@\n \n extern crate lint_stability;\n \n-use lint_stability::UnstableEnum::{}; //~ ERROR use of unstable library feature 'test_feature'\n+use lint_stability::UnstableEnum::{};\n+//~^ ERROR use of unstable library feature 'unstable_test_feature'\n use lint_stability::StableEnum::{}; // OK\n \n fn main() {}"}, {"sha": "f5abf2733b97793c28e64d8229daaf30f565cd5f", "filename": "src/test/compile-fail/lint-renamed-cmdline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-renamed-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-renamed-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-renamed-cmdline.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:-D unknown_features\n+// compile-flags:-D bare_trait_object\n \n-// error-pattern:lint `unknown_features` has been renamed to `unused_features`\n-// error-pattern:requested on the command line with `-D unknown_features`\n+// error-pattern:lint `bare_trait_object` has been renamed to `bare_trait_objects`\n+// error-pattern:requested on the command line with `-D bare_trait_object`\n // error-pattern:unused\n \n #[deny(unused)]"}, {"sha": "c147ec5cf95052dd35e7e99e5ded2148b9f1bb4d", "filename": "src/test/compile-fail/lint-renamed.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-renamed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-renamed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-renamed.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deny(unknown_features)] //~ WARN lint `unknown_features` has been renamed to `unused_features`\n+#[deny(bare_trait_object)]\n+//~^ WARN lint `bare_trait_object` has been renamed to `bare_trait_objects`\n #[deny(unused)]\n fn main() { let unused = (); } //~ ERROR unused"}, {"sha": "1f2fa077cafc8292a6d82590091d7e2739c28cce", "filename": "src/test/compile-fail/lint-stability-2.rs", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability-2.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -76,15 +76,15 @@ mod cross_crate {\n         <Foo>::trait_unstable(&foo); //~ ERROR use of unstable library feature\n \n         foo.method_unstable_text();\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         Foo::method_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         <Foo>::method_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         foo.trait_unstable_text();\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         <Foo>::trait_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n \n         stable();\n         foo.method_stable();\n@@ -149,9 +149,9 @@ mod cross_crate {\n         foo.trait_unstable(); //~ ERROR use of unstable library feature\n         <Foo>::trait_unstable(&foo); //~ ERROR use of unstable library feature\n         foo.trait_unstable_text();\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         <Foo>::trait_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         foo.trait_stable();\n         Trait::trait_stable(&foo);\n         <Foo>::trait_stable(&foo);\n@@ -167,7 +167,7 @@ mod cross_crate {\n         //~^ ERROR use of unstable library feature\n         foo.trait_unstable(); //~ ERROR use of unstable library feature\n         foo.trait_unstable_text();\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         foo.trait_stable();\n     }\n \n@@ -178,16 +178,16 @@ mod cross_crate {\n }\n \n mod this_crate {\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated() {}\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated_text() {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub fn unstable() {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n     pub fn unstable_text() {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -199,16 +199,16 @@ mod this_crate {\n     pub struct MethodTester;\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         pub fn method_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         pub fn method_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         pub fn method_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n         pub fn method_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -218,16 +218,16 @@ mod this_crate {\n     }\n \n     pub trait Trait {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn trait_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn trait_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         fn trait_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n         fn trait_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -238,43 +238,43 @@ mod this_crate {\n \n     impl Trait for MethodTester {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedUnitStruct;\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableUnitStruct;\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableUnitStruct;\n \n     pub enum Enum {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         DeprecatedVariant,\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         UnstableVariant,\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         StableVariant,\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedTupleStruct(isize);\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableTupleStruct(isize);\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableTupleStruct(isize);\n@@ -391,23 +391,23 @@ mod this_crate {\n         foo.trait_stable();\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn test_fn_body() {\n         fn fn_in_body() {}\n         fn_in_body();\n     }\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn test_method_body(&self) {\n             fn fn_in_body() {}\n             fn_in_body();\n         }\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub trait DeprecatedTrait {\n         fn dummy(&self) { }"}, {"sha": "de2c27bdcbcca690fc1c03337780db68b29566ce", "filename": "src/test/compile-fail/lint-stability-deprecated.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability-deprecated.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -16,7 +16,7 @@\n \n #![warn(deprecated)]\n #![allow(dead_code, unused_extern_crates)]\n-#![feature(staged_api, test_feature, rustc_attrs)]\n+#![feature(staged_api, unstable_test_feature, rustc_attrs)]\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n@@ -227,16 +227,16 @@ mod inheritance {\n }\n \n mod this_crate {\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated() {}\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated_text() {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub fn unstable() {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n     pub fn unstable_text() {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -248,16 +248,16 @@ mod this_crate {\n     pub struct MethodTester;\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         pub fn method_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         pub fn method_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         pub fn method_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n         pub fn method_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -267,16 +267,16 @@ mod this_crate {\n     }\n \n     pub trait Trait {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn trait_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn trait_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         fn trait_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n         fn trait_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -287,43 +287,43 @@ mod this_crate {\n \n     impl Trait for MethodTester {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedUnitStruct;\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableUnitStruct;\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableUnitStruct;\n \n     pub enum Enum {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         DeprecatedVariant,\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         UnstableVariant,\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         StableVariant,\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedTupleStruct(isize);\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableTupleStruct(isize);\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableTupleStruct(isize);\n@@ -441,23 +441,23 @@ mod this_crate {\n         foo.trait_stable();\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn test_fn_body() {\n         fn fn_in_body() {}\n         fn_in_body(); //~ WARN use of deprecated item 'this_crate::test_fn_body::fn_in_body': text\n     }\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn test_method_body(&self) {\n             fn fn_in_body() {}\n             fn_in_body(); //~ WARN use of deprecated item 'this_crate::MethodTester::test_method_body::fn_in_body': text\n         }\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub trait DeprecatedTrait {\n         fn dummy(&self) { }"}, {"sha": "0ad4466d0e271142071cae0b9a1dbf9ab4ffe289", "filename": "src/test/compile-fail/lint-stability-fields-deprecated.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-fields-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-fields-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability-fields-deprecated.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -9,9 +9,10 @@\n // except according to those terms.\n \n // aux-build:lint_stability_fields.rs\n+\n #![deny(deprecated)]\n #![allow(dead_code)]\n-#![feature(staged_api, test_feature)]\n+#![feature(staged_api, unstable_test_feature)]\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n@@ -162,50 +163,50 @@ mod this_crate {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     struct Stable {\n         inherit: u8,\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override1: u8,\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     struct Stable2(u8,\n                    #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                   #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                   #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n                    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] u8);\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     struct Unstable {\n         inherit: u8,\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         override1: u8,\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     struct Unstable2(u8,\n                      #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                     #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                     #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n                      #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] u8);\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     struct Deprecated {\n         inherit: u8,\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         override1: u8,\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     struct Deprecated2(u8,\n                        #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                       #[unstable(feature = \"test_feature\", issue = \"0\")] u8);\n+                       #[unstable(feature = \"unstable_test_feature\", issue = \"0\")] u8);\n \n     pub fn foo() {\n         let x = Stable {"}, {"sha": "db6b64dabfe4b446dc4eabc897e23c2c63f7d254", "filename": "src/test/compile-fail/lint-stability-fields.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -138,50 +138,50 @@ mod this_crate {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     struct Stable {\n         inherit: u8,\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override1: u8,\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     struct Stable2(u8,\n                    #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                   #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                   #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n                    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] u8);\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     struct Unstable {\n         inherit: u8,\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         override1: u8,\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     struct Unstable2(u8,\n                      #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                     #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                     #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n                      #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] u8);\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     struct Deprecated {\n         inherit: u8,\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         override1: u8,\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         override2: u8,\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     struct Deprecated2(u8,\n                        #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n-                       #[unstable(feature = \"test_feature\", issue = \"0\")] u8);\n+                       #[unstable(feature = \"unstable_test_feature\", issue = \"0\")] u8);\n \n     pub fn foo() {\n         let x = Stable {"}, {"sha": "720b1235d47f684c45d5bfe307ce99816a94e7f7", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -71,11 +71,11 @@ mod cross_crate {\n         <Foo as Trait>::trait_unstable(&foo); //~ ERROR use of unstable library feature\n \n         unstable_text();\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         Trait::trait_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         <Foo as Trait>::trait_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n \n         stable();\n         foo.method_stable();\n@@ -162,9 +162,9 @@ mod cross_crate {\n         Trait::trait_unstable(&foo); //~ ERROR use of unstable library feature\n         <Foo as Trait>::trait_unstable(&foo); //~ ERROR use of unstable library feature\n         Trait::trait_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         <Foo as Trait>::trait_unstable_text(&foo);\n-        //~^ ERROR use of unstable library feature 'test_feature': text\n+        //~^ ERROR use of unstable library feature 'unstable_test_feature': text\n         foo.trait_stable();\n         Trait::trait_stable(&foo);\n         <Foo>::trait_stable(&foo);\n@@ -213,20 +213,20 @@ mod inheritance {\n }\n \n mod this_crate {\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated() {}\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub fn deprecated_text() {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"99.99.99\", reason = \"text\")]\n     pub fn deprecated_future() {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub fn unstable() {}\n-    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n     pub fn unstable_text() {}\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -238,16 +238,16 @@ mod this_crate {\n     pub struct MethodTester;\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         pub fn method_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         pub fn method_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         pub fn method_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n         pub fn method_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -257,16 +257,16 @@ mod this_crate {\n     }\n \n     pub trait Trait {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn trait_deprecated(&self) {}\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn trait_deprecated_text(&self) {}\n \n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         fn trait_unstable(&self) {}\n-        #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", reason = \"text\", issue = \"0\")]\n         fn trait_unstable_text(&self) {}\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -277,43 +277,43 @@ mod this_crate {\n \n     impl Trait for MethodTester {}\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableStruct {\n-        #[stable(feature = \"test_feature\", since = \"1.0.0\")] i: isize\n+        #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] i: isize\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedUnitStruct;\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableUnitStruct;\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableUnitStruct;\n \n     pub enum Enum {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         DeprecatedVariant,\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         UnstableVariant,\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         StableVariant,\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub struct DeprecatedTupleStruct(isize);\n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     pub struct UnstableTupleStruct(isize);\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub struct StableTupleStruct(isize);\n@@ -432,23 +432,23 @@ mod this_crate {\n         foo.trait_stable();\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     fn test_fn_body() {\n         fn fn_in_body() {}\n         fn_in_body();\n     }\n \n     impl MethodTester {\n-        #[unstable(feature = \"test_feature\", issue = \"0\")]\n+        #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         fn test_method_body(&self) {\n             fn fn_in_body() {}\n             fn_in_body();\n         }\n     }\n \n-    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     pub trait DeprecatedTrait {\n         fn dummy(&self) { }"}, {"sha": "1922efb5e19dc379b04b7e3a455bcda7ff0eef61", "filename": "src/test/compile-fail/missing-stability.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fmissing-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fmissing-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-stability.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -13,20 +13,20 @@\n #![crate_type=\"lib\"]\n #![feature(staged_api)]\n \n-#![stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#![stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n \n pub fn unmarked() {\n     //~^ ERROR This node does not have a stability attribute\n     ()\n }\n \n-#[unstable(feature = \"foo\", issue = \"0\")]\n+#[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n pub mod foo {\n     // #[unstable] is inherited\n     pub fn unmarked() {}\n }\n \n-#[stable(feature = \"bar\", since=\"1.0.0\")]\n+#[stable(feature = \"stable_test_feature\", since=\"1.0.0\")]\n pub mod bar {\n     // #[stable] is not inherited\n     pub fn unmarked() {}"}, {"sha": "754c6f792f95dc5e594e14cb584735683243c3db", "filename": "src/test/compile-fail/stability-attribute-issue.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-issue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-issue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-issue.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -9,13 +9,16 @@\n // except according to those terms.\n \n // aux-build:stability_attribute_issue.rs\n+// ignore-tidy-linelength\n \n #![deny(deprecated)]\n \n extern crate stability_attribute_issue;\n use stability_attribute_issue::*;\n \n fn main() {\n-    unstable(); //~ ERROR use of unstable library feature 'foo' (see issue #1)\n-    unstable_msg(); //~ ERROR use of unstable library feature 'foo': message (see issue #2)\n+    unstable();\n+    //~^ ERROR use of unstable library feature 'unstable_test_feature' (see issue #1)\n+    unstable_msg();\n+    //~^ ERROR use of unstable library feature 'unstable_test_feature': message (see issue #2)\n }"}, {"sha": "9c54315bfd0045a55eea0d09b606beb35de0cee9", "filename": "src/test/compile-fail/stability-attribute-sanity-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity-2.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -12,7 +12,7 @@\n \n #![feature(staged_api)]\n \n-#![stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#![stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n \n #[stable(feature = \"a\", feature = \"b\", since = \"1.0.0\")] //~ ERROR multiple 'feature' items\n fn f1() { }"}, {"sha": "d4821e009f22353077940792a573e1a50290f8a1", "filename": "src/test/compile-fail/stability-attribute-sanity-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity-3.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -12,7 +12,7 @@\n \n #![feature(staged_api)]\n \n-#![stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#![stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n \n #[macro_export]\n macro_rules! mac { //~ ERROR This node does not have a stability attribute"}, {"sha": "794ae1ca08707a1a5f2d0f194fef16c70a2f5e5d", "filename": "src/test/compile-fail/stability-attribute-sanity.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -15,7 +15,7 @@\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n mod bogus_attribute_types_1 {\n-    #[stable(feature = \"a\", since = \"a\", reason)] //~ ERROR unknown meta item 'reason' [E0541]\n+    #[stable(feature = \"a\", since = \"b\", reason)] //~ ERROR unknown meta item 'reason' [E0541]\n     fn f1() { }\n \n     #[stable(feature = \"a\", since)] //~ ERROR incorrect meta item [E0539]\n@@ -35,7 +35,7 @@ mod bogus_attribute_types_2 {\n     #[unstable] //~ ERROR incorrect stability attribute type [E0548]\n     fn f1() { }\n \n-    #[unstable = \"a\"] //~ ERROR incorrect stability attribute type [E0548]\n+    #[unstable = \"b\"] //~ ERROR incorrect stability attribute type [E0548]\n     fn f2() { }\n \n     #[stable] //~ ERROR incorrect stability attribute type [E0548]\n@@ -57,7 +57,7 @@ mod missing_feature_names {\n     #[unstable(issue = \"0\")] //~ ERROR missing 'feature' [E0546]\n     fn f1() { }\n \n-    #[unstable(feature = \"a\")] //~ ERROR missing 'issue' [E0547]\n+    #[unstable(feature = \"b\")] //~ ERROR missing 'issue' [E0547]\n     fn f2() { }\n \n     #[stable(since = \"a\")] //~ ERROR missing 'feature' [E0546]\n@@ -73,12 +73,12 @@ mod missing_version {\n     fn f2() { }\n }\n \n-#[unstable(feature = \"a\", issue = \"0\")]\n+#[unstable(feature = \"b\", issue = \"0\")]\n #[stable(feature = \"a\", since = \"b\")] //~ ERROR multiple stability levels [E0544]\n fn multiple1() { }\n \n-#[unstable(feature = \"a\", issue = \"0\")]\n-#[unstable(feature = \"a\", issue = \"0\")] //~ ERROR multiple stability levels [E0544]\n+#[unstable(feature = \"b\", issue = \"0\")]\n+#[unstable(feature = \"b\", issue = \"0\")] //~ ERROR multiple stability levels [E0544]\n fn multiple2() { }\n \n #[stable(feature = \"a\", since = \"b\")]\n@@ -88,8 +88,8 @@ fn multiple3() { }\n #[stable(feature = \"a\", since = \"b\")]\n #[rustc_deprecated(since = \"b\", reason = \"text\")]\n #[rustc_deprecated(since = \"b\", reason = \"text\")]\n-#[rustc_const_unstable(feature = \"a\")]\n-#[rustc_const_unstable(feature = \"b\")]\n+#[rustc_const_unstable(feature = \"c\")]\n+#[rustc_const_unstable(feature = \"d\")]\n pub const fn multiple4() { } //~ ERROR multiple rustc_deprecated attributes [E0540]\n //~^ ERROR Invalid stability or deprecation version found\n //~| ERROR multiple rustc_const_unstable attributes"}, {"sha": "32991dd6499b5ceaaad0175bd1a109ffa13a3ac4", "filename": "src/test/compile-fail/stable-features.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstable-features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Fcompile-fail%2Fstable-features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstable-features.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -13,10 +13,11 @@\n \n #![deny(stable_features)]\n \n-#![feature(test_accepted_feature)] //~ ERROR this feature has been stable since 1.0.0\n+#![feature(test_accepted_feature)]\n+//~^ ERROR the feature `test_accepted_feature` has been stable since 1.0.0\n \n-// FIXME(#44232) we should error that this isn't used.\n #![feature(rust1)]\n+//~^ ERROR the feature `rust1` has been stable since 1.0.0\n \n fn main() {\n     let _foo: Vec<()> = Vec::new();"}, {"sha": "5eb62316d81fbfc3c8888c0f5273a9f845ca2b4a", "filename": "src/test/run-make-fulldeps/allow-warnings-cmdline-stability/bar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Frun-make-fulldeps%2Fallow-warnings-cmdline-stability%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/895fcec3b4a7298a038875b0a12cb010ad9a9b5f/src%2Ftest%2Frun-make-fulldeps%2Fallow-warnings-cmdline-stability%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fallow-warnings-cmdline-stability%2Fbar.rs?ref=895fcec3b4a7298a038875b0a12cb010ad9a9b5f", "patch": "@@ -10,6 +10,6 @@\n \n #![crate_type = \"lib\"]\n #![feature(staged_api)]\n-#![unstable(feature = \"test_feature\", issue = \"0\")]\n+#![unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n \n pub fn baz() { }"}]}