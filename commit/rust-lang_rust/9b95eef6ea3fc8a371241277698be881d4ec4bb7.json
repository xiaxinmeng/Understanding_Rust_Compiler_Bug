{"sha": "9b95eef6ea3fc8a371241277698be881d4ec4bb7", "node_id": "C_kwDOAAsO6NoAKDliOTVlZWY2ZWEzZmM4YTM3MTI0MTI3NzY5OGJlODgxZDRlYzRiYjc", "commit": {"author": {"name": "Wonchul Lee", "email": "wonchul.dev@gmail.com", "date": "2022-08-19T21:40:31Z"}, "committer": {"name": "Wonchul Lee", "email": "wonchul.dev@gmail.com", "date": "2022-08-23T21:50:16Z"}, "message": "save_analysis: Migrate diagnostics", "tree": {"sha": "7ce2f1abfa1897c912b622a225f6bc38f297c602", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ce2f1abfa1897c912b622a225f6bc38f297c602"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b95eef6ea3fc8a371241277698be881d4ec4bb7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEVsgfkNBKVHs50ooew8Dl1s6HEmoFAmMFS5sACgkQw8Dl1s6H\nEmoAEBAAmxeBZyTDpLTSlUAYNUoBsKddm+cxZNBs6wy3ymsB1THdB8Lh3NhrMFkI\nhb8ntfKze7EiAR2QdbNFea1VI6hBKYRMznkrOvr1/H0uojsgmwSulCmaJZ3d5Igh\nOVyA1611YqpL2olmxot0kJXlc1nUHtKgMTPIQkU8UuHFSCyCkErXIj5hFdkR4672\nLlX1dAjRm8a354enbGMA2WHuB0ZSxYgG1hi+mJXnJQoYYEDB+PU8cmqDOSzHUbO8\ntJiZto1qtxhl37NeTRj2GyXuiSAtx8Li6xZ/cukxehNTPk3T/Ich38yC74UgSREV\ngpLdnFmS7wFFoY3W3Voa2Fo5ue5PsTbYbma93MEOwK+MOSaUyX68s7u3570hDHbC\nRggFgcqk7tKnADTK7eGya/IfY3/+o9ggdDY2G3jy+Yg6wKlwTA5lbcyj136cWwaA\nPiIMyuSu4QbpHKExbvYvreog/IGkIDHfzAWNcZuBmwdPxsRLe/P8u1c9ydAc5VKS\nKnCUvzBsKZjaVgtKs8eyXeLa9GW0WweHITVlhOXuV0iDYQxHCQC4NXVz2HF6YWFk\ncqiZmL4UrRFBTODcRyvo6IOTh7MWw74pRbr72lmeIiwQVpKAxZRhjq5rGvIE3ufU\nFoWd4pON1mzyhRfwsGs2wzDfdYJT7/UuIiLsXPn0grWoMDmhUZs=\n=1XWV\n-----END PGP SIGNATURE-----", "payload": "tree 7ce2f1abfa1897c912b622a225f6bc38f297c602\nparent a1bea1551b8312b6abfbbf7d49bafac2e6ce8ee4\nauthor Wonchul Lee <wonchul.dev@gmail.com> 1660945231 +0900\ncommitter Wonchul Lee <wonchul.dev@gmail.com> 1661291416 +0900\n\nsave_analysis: Migrate diagnostics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b95eef6ea3fc8a371241277698be881d4ec4bb7", "html_url": "https://github.com/rust-lang/rust/commit/9b95eef6ea3fc8a371241277698be881d4ec4bb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b95eef6ea3fc8a371241277698be881d4ec4bb7/comments", "author": {"login": "wonchulee", "id": 3182824, "node_id": "MDQ6VXNlcjMxODI4MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3182824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wonchulee", "html_url": "https://github.com/wonchulee", "followers_url": "https://api.github.com/users/wonchulee/followers", "following_url": "https://api.github.com/users/wonchulee/following{/other_user}", "gists_url": "https://api.github.com/users/wonchulee/gists{/gist_id}", "starred_url": "https://api.github.com/users/wonchulee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wonchulee/subscriptions", "organizations_url": "https://api.github.com/users/wonchulee/orgs", "repos_url": "https://api.github.com/users/wonchulee/repos", "events_url": "https://api.github.com/users/wonchulee/events{/privacy}", "received_events_url": "https://api.github.com/users/wonchulee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wonchulee", "id": 3182824, "node_id": "MDQ6VXNlcjMxODI4MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3182824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wonchulee", "html_url": "https://github.com/wonchulee", "followers_url": "https://api.github.com/users/wonchulee/followers", "following_url": "https://api.github.com/users/wonchulee/following{/other_user}", "gists_url": "https://api.github.com/users/wonchulee/gists{/gist_id}", "starred_url": "https://api.github.com/users/wonchulee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wonchulee/subscriptions", "organizations_url": "https://api.github.com/users/wonchulee/orgs", "repos_url": "https://api.github.com/users/wonchulee/repos", "events_url": "https://api.github.com/users/wonchulee/events{/privacy}", "received_events_url": "https://api.github.com/users/wonchulee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1bea1551b8312b6abfbbf7d49bafac2e6ce8ee4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1bea1551b8312b6abfbbf7d49bafac2e6ce8ee4", "html_url": "https://github.com/rust-lang/rust/commit/a1bea1551b8312b6abfbbf7d49bafac2e6ce8ee4"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "9e88b9089174ae187148edf185123e9169d91174", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b95eef6ea3fc8a371241277698be881d4ec4bb7/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9b95eef6ea3fc8a371241277698be881d4ec4bb7/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9b95eef6ea3fc8a371241277698be881d4ec4bb7", "patch": "@@ -4421,9 +4421,11 @@ dependencies = [\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n+ \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_hir_pretty\",\n  \"rustc_lexer\",\n+ \"rustc_macros\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\","}, {"sha": "36c2ff4682301c967c1656e4ac8441d9f6c92196", "filename": "compiler/rustc_error_messages/locales/en-US/save_analysis.ftl", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsave_analysis.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsave_analysis.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsave_analysis.ftl?ref=9b95eef6ea3fc8a371241277698be881d4ec4bb7", "patch": "@@ -0,0 +1 @@\n+save_analysis_could_not_open = Could not open `{$file_name}`: `{$err}`"}, {"sha": "2d001d445be02b632356729b07acd98d1ecceb38", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=9b95eef6ea3fc8a371241277698be881d4ec4bb7", "patch": "@@ -43,6 +43,7 @@ fluent_messages! {\n     passes => \"../locales/en-US/passes.ftl\",\n     plugin_impl => \"../locales/en-US/plugin_impl.ftl\",\n     privacy => \"../locales/en-US/privacy.ftl\",\n+    save_analysis => \"../locales/en-US/save_analysis.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n }\n "}, {"sha": "181e27f334b40219e08be56fb5c3cc5f9b70e4f9", "filename": "compiler/rustc_save_analysis/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2FCargo.toml?ref=9b95eef6ea3fc8a371241277698be881d4ec4bb7", "patch": "@@ -9,9 +9,11 @@ rustc_middle = { path = \"../rustc_middle\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n+rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_hir_pretty = { path = \"../rustc_hir_pretty\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n serde_json = \"1\"\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "f0ce41d02a6fb2d2a1b3029d220fdbbf6a82c806", "filename": "compiler/rustc_save_analysis/src/errors.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_save_analysis%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_save_analysis%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Ferrors.rs?ref=9b95eef6ea3fc8a371241277698be881d4ec4bb7", "patch": "@@ -0,0 +1,10 @@\n+use rustc_macros::SessionDiagnostic;\n+\n+use std::path::Path;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(save_analysis::could_not_open)]\n+pub(crate) struct CouldNotOpen<'a> {\n+    pub file_name: &'a Path,\n+    pub err: std::io::Error,\n+}"}, {"sha": "619e083d89ad398b1991ecbf49e808e37409321a", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b95eef6ea3fc8a371241277698be881d4ec4bb7/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=9b95eef6ea3fc8a371241277698be881d4ec4bb7", "patch": "@@ -3,11 +3,15 @@\n #![feature(let_else)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n+#![feature(never_type)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n mod dump_visitor;\n mod dumper;\n #[macro_use]\n mod span_utils;\n+mod errors;\n mod sig;\n \n use rustc_ast as ast;\n@@ -928,7 +932,7 @@ impl<'a> DumpHandler<'a> {\n         info!(\"Writing output to {}\", file_name.display());\n \n         let output_file = BufWriter::new(File::create(&file_name).unwrap_or_else(|e| {\n-            sess.fatal(&format!(\"Could not open {}: {}\", file_name.display(), e))\n+            sess.emit_fatal(errors::CouldNotOpen { file_name: file_name.as_path(), err: e })\n         }));\n \n         (output_file, file_name)"}]}