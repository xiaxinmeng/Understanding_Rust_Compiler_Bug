{"sha": "4050a689891c012c31175430349bb20cf3a739bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTBhNjg5ODkxYzAxMmMzMTE3NTQzMDM0OWJiMjBjZjNhNzM5YmM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-09-03T21:12:50Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-09-03T21:13:48Z"}, "message": "Make `Default` do what `default` used to do", "tree": {"sha": "1bbe17110eaa77e2ca5677315b1a4b1ec7d319c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bbe17110eaa77e2ca5677315b1a4b1ec7d319c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4050a689891c012c31175430349bb20cf3a739bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4050a689891c012c31175430349bb20cf3a739bc", "html_url": "https://github.com/rust-lang/rust/commit/4050a689891c012c31175430349bb20cf3a739bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4050a689891c012c31175430349bb20cf3a739bc/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6f01f3a6c16d2fc350c36fb704ef68277ef426e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f01f3a6c16d2fc350c36fb704ef68277ef426e", "html_url": "https://github.com/rust-lang/rust/commit/d6f01f3a6c16d2fc350c36fb704ef68277ef426e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "16e39ff13ea2635913bff974685ec6d703fa175b", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4050a689891c012c31175430349bb20cf3a739bc/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4050a689891c012c31175430349bb20cf3a739bc/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=4050a689891c012c31175430349bb20cf3a739bc", "patch": "@@ -3,6 +3,7 @@\n #![deny(clippy::missing_docs_in_private_items)]\n \n use lazy_static::lazy_static;\n+use std::default::Default;\n use std::{env, fmt, fs, io, path};\n use std::io::Read;\n use syntax::{ast, source_map};\n@@ -65,7 +66,7 @@ macro_rules! define_Conf {\n         mod helpers {\n             use serde_derive::Deserialize;\n             /// Type used to store lint configuration.\n-            #[derive(Default, Deserialize)]\n+            #[derive(Deserialize)]\n             #[serde(rename_all=\"kebab-case\", deny_unknown_fields)]\n             pub struct Conf {\n                 $(#[$doc] #[serde(default=$rust_name_str)] #[serde(with=$rust_name_str)]\n@@ -146,6 +147,12 @@ define_Conf! {\n     (trivial_copy_size_limit, \"trivial_copy_size_limit\", None => Option<u64>),\n }\n \n+impl Default for Conf {\n+    fn default() -> Conf {\n+        toml::from_str(\"\").expect(\"we never error on empty config files\")\n+    }\n+}\n+\n /// Search for the configuration file.\n pub fn lookup_conf_file() -> io::Result<Option<path::PathBuf>> {\n     /// Possible filename to search for.\n@@ -180,7 +187,7 @@ pub fn lookup_conf_file() -> io::Result<Option<path::PathBuf>> {\n ///\n /// Used internally for convenience\n fn default(errors: Vec<Error>) -> (Conf, Vec<Error>) {\n-    (toml::from_str(\"\").expect(\"we never error on empty config files\"), errors)\n+    (Conf::default(), errors)\n }\n \n /// Read the `toml` configuration file."}]}