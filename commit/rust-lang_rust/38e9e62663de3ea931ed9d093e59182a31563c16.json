{"sha": "38e9e62663de3ea931ed9d093e59182a31563c16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZTllNjI2NjNkZTNlYTkzMWVkOWQwOTNlNTkxODJhMzE1NjNjMTY=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-17T17:12:30Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-21T21:06:00Z"}, "message": "`try_update` -> `try_upgrade`", "tree": {"sha": "8bc71522de7564e63e1dc0f2c851b436fd1ebd6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bc71522de7564e63e1dc0f2c851b436fd1ebd6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38e9e62663de3ea931ed9d093e59182a31563c16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38e9e62663de3ea931ed9d093e59182a31563c16", "html_url": "https://github.com/rust-lang/rust/commit/38e9e62663de3ea931ed9d093e59182a31563c16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38e9e62663de3ea931ed9d093e59182a31563c16/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebc0c15610e9956fadbda44c998414b0d7130a53", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc0c15610e9956fadbda44c998414b0d7130a53", "html_url": "https://github.com/rust-lang/rust/commit/ebc0c15610e9956fadbda44c998414b0d7130a53"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "947f7444753cc2c58bcdea5b65309eb3bf800544", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e9e62663de3ea931ed9d093e59182a31563c16/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e9e62663de3ea931ed9d093e59182a31563c16/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=38e9e62663de3ea931ed9d093e59182a31563c16", "patch": "@@ -1634,7 +1634,7 @@ impl WithOptConstParam<LocalDefId> {\n     /// In case `self` is unknown but `self.did` is a const argument, this returns\n     /// a `WithOptConstParam` with the correct `const_param_did`.\n     #[inline(always)]\n-    pub fn try_update(self, tcx: TyCtxt<'_>) -> Option<WithOptConstParam<LocalDefId>> {\n+    pub fn try_upgrade(self, tcx: TyCtxt<'_>) -> Option<WithOptConstParam<LocalDefId>> {\n         if self.const_param_did.is_none() {\n             if let const_param_did @ Some(_) = tcx.opt_const_param_of(self.did) {\n                 return Some(WithOptConstParam { did: self.did, const_param_did });"}, {"sha": "c79da239a40ac3dc4a8a23209bde4cc8bcdc21fe", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38e9e62663de3ea931ed9d093e59182a31563c16/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e9e62663de3ea931ed9d093e59182a31563c16/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=38e9e62663de3ea931ed9d093e59182a31563c16", "patch": "@@ -270,7 +270,7 @@ fn mir_const<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     def: ty::WithOptConstParam<LocalDefId>,\n ) -> &'tcx Steal<Body<'tcx>> {\n-    if let Some(def) = ty::WithOptConstParam::try_update(def, tcx) {\n+    if let Some(def) = def.try_upgrade(tcx) {\n         return tcx.mir_const(def);\n     }\n \n@@ -314,7 +314,7 @@ fn mir_validated(\n     tcx: TyCtxt<'tcx>,\n     def: ty::WithOptConstParam<LocalDefId>,\n ) -> (&'tcx Steal<Body<'tcx>>, &'tcx Steal<IndexVec<Promoted, Body<'tcx>>>) {\n-    if let Some(def) = ty::WithOptConstParam::try_update(def, tcx) {\n+    if let Some(def) = def.try_upgrade(tcx) {\n         return tcx.mir_validated(def);\n     }\n \n@@ -357,7 +357,7 @@ fn mir_drops_elaborated_and_const_checked<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     def: ty::WithOptConstParam<LocalDefId>,\n ) -> &'tcx Steal<Body<'tcx>> {\n-    if let Some(def) = ty::WithOptConstParam::try_update(def, tcx) {\n+    if let Some(def) = def.try_upgrade(tcx) {\n         return tcx.mir_drops_elaborated_and_const_checked(def);\n     }\n "}, {"sha": "120617160daf3183cf0465cedde441ada5601fcf", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e9e62663de3ea931ed9d093e59182a31563c16/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e9e62663de3ea931ed9d093e59182a31563c16/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=38e9e62663de3ea931ed9d093e59182a31563c16", "patch": "@@ -22,7 +22,7 @@ use rustc_target::spec::PanicStrategy;\n use super::lints;\n \n crate fn mir_built<'tcx>(tcx: TyCtxt<'tcx>, def: ty::WithOptConstParam<LocalDefId>) -> &'tcx ty::steal::Steal<Body<'tcx>> {\n-    if let Some(def) = ty::WithOptConstParam::try_update(def, tcx) {\n+    if let Some(def) = def.try_upgrade(tcx) {\n         return tcx.mir_built(def);\n     }\n "}]}