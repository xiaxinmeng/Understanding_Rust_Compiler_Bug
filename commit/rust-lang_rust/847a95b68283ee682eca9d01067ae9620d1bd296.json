{"sha": "847a95b68283ee682eca9d01067ae9620d1bd296", "node_id": "C_kwDOAAsO6NoAKDg0N2E5NWI2ODI4M2VlNjgyZWNhOWQwMTA2N2FlOTYyMGQxYmQyOTY", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-25T03:59:18Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-11-11T02:30:40Z"}, "message": "Refactor utils on checking attribute\n\nMoved out reusable pieces from `is_automatically_derived` and\n`any_parent_is_automatically_derived`.", "tree": {"sha": "62be7d2e4632bb43825cb49e602d6cade16c0ef9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62be7d2e4632bb43825cb49e602d6cade16c0ef9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/847a95b68283ee682eca9d01067ae9620d1bd296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/847a95b68283ee682eca9d01067ae9620d1bd296", "html_url": "https://github.com/rust-lang/rust/commit/847a95b68283ee682eca9d01067ae9620d1bd296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/847a95b68283ee682eca9d01067ae9620d1bd296/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e170357146b37cef8764ada47e4727e237b80b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e170357146b37cef8764ada47e4727e237b80b1", "html_url": "https://github.com/rust-lang/rust/commit/2e170357146b37cef8764ada47e4727e237b80b1"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "95642adeff6cc212c9d087c7a38c204535a5bf43", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/847a95b68283ee682eca9d01067ae9620d1bd296/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/847a95b68283ee682eca9d01067ae9620d1bd296/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=847a95b68283ee682eca9d01067ae9620d1bd296", "patch": "@@ -1402,7 +1402,7 @@ pub fn recurse_or_patterns<'tcx, F: FnMut(&'tcx Pat<'tcx>)>(pat: &'tcx Pat<'tcx>\n /// Checks for the `#[automatically_derived]` attribute all `#[derive]`d\n /// implementations have.\n pub fn is_automatically_derived(attrs: &[ast::Attribute]) -> bool {\n-    attrs.iter().any(|attr| attr.has_name(sym::automatically_derived))\n+    has_attr(attrs, sym::automatically_derived)\n }\n \n /// Remove blocks around an expression.\n@@ -1524,20 +1524,29 @@ pub fn clip(tcx: TyCtxt<'_>, u: u128, ity: rustc_ty::UintTy) -> u128 {\n     (u << amt) >> amt\n }\n \n-pub fn any_parent_is_automatically_derived(tcx: TyCtxt<'_>, node: HirId) -> bool {\n+pub fn has_attr(attrs: &[ast::Attribute], symbol: Symbol) -> bool {\n+    attrs.iter().any(|attr| attr.has_name(symbol))\n+}\n+\n+pub fn any_parent_has_attr(tcx: TyCtxt<'_>, node: HirId, symbol: Symbol) -> bool {\n     let map = &tcx.hir();\n     let mut prev_enclosing_node = None;\n     let mut enclosing_node = node;\n     while Some(enclosing_node) != prev_enclosing_node {\n-        if is_automatically_derived(map.attrs(enclosing_node)) {\n+        if has_attr(map.attrs(enclosing_node), symbol) {\n             return true;\n         }\n         prev_enclosing_node = Some(enclosing_node);\n         enclosing_node = map.get_parent_item(enclosing_node);\n     }\n+\n     false\n }\n \n+pub fn any_parent_is_automatically_derived(tcx: TyCtxt<'_>, node: HirId) -> bool {\n+    any_parent_has_attr(tcx, node, sym::automatically_derived)\n+}\n+\n /// Matches a function call with the given path and returns the arguments.\n ///\n /// Usage:"}]}