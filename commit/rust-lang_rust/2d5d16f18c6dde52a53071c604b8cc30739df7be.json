{"sha": "2d5d16f18c6dde52a53071c604b8cc30739df7be", "node_id": "C_kwDOAAsO6NoAKDJkNWQxNmYxOGM2ZGRlNTJhNTMwNzFjNjA0YjhjYzMwNzM5ZGY3YmU", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-05-03T14:47:33Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-05-05T14:27:35Z"}, "message": "Remove `ast::Literal::token`", "tree": {"sha": "11ccfbdffdab0ef615cb923c6085bc9a9ebc592a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11ccfbdffdab0ef615cb923c6085bc9a9ebc592a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d5d16f18c6dde52a53071c604b8cc30739df7be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d5d16f18c6dde52a53071c604b8cc30739df7be", "html_url": "https://github.com/rust-lang/rust/commit/2d5d16f18c6dde52a53071c604b8cc30739df7be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d5d16f18c6dde52a53071c604b8cc30739df7be/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dfd1cb572d8d4fd951237361e43ecddd9c9a852", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dfd1cb572d8d4fd951237361e43ecddd9c9a852", "html_url": "https://github.com/rust-lang/rust/commit/7dfd1cb572d8d4fd951237361e43ecddd9c9a852"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "cc2a4437000d344363d3dcc2aeb27e070c092109", "filename": "crates/ide-completion/src/completions/postfix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=2d5d16f18c6dde52a53071c604b8cc30739df7be", "patch": "@@ -5,7 +5,7 @@ mod format_like;\n use hir::{Documentation, HasAttrs};\n use ide_db::{imports::insert_use::ImportScope, ty_filter::TryEnum, SnippetCap};\n use syntax::{\n-    ast::{self, AstNode, AstToken},\n+    ast::{self, AstNode, LiteralKind},\n     SyntaxKind::{EXPR_STMT, STMT_LIST},\n     TextRange, TextSize,\n };\n@@ -191,7 +191,7 @@ pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     }\n \n     if let ast::Expr::Literal(literal) = dot_receiver.clone() {\n-        if let Some(literal_text) = ast::String::cast(literal.token()) {\n+        if let LiteralKind::String(literal_text) = literal.kind() {\n             add_format_like_completions(acc, ctx, &dot_receiver, cap, &literal_text);\n         }\n     }"}, {"sha": "c1db8ce4a6cd8892d33f2a5b2777dd7efaa3ec0b", "filename": "crates/ide-completion/src/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fide-completion%2Fsrc%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fide-completion%2Fsrc%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fpatterns.rs?ref=2d5d16f18c6dde52a53071c604b8cc30739df7be", "patch": "@@ -230,7 +230,7 @@ pub(crate) fn determine_location(\n                 let receiver = find_in_original_file(it.expr(), original_file);\n                 let receiver_is_ambiguous_float_literal = if let Some(ast::Expr::Literal(l)) = &receiver {\n                     match l.kind() {\n-                        ast::LiteralKind::FloatNumber { .. } => l.token().text().ends_with('.'),\n+                        ast::LiteralKind::FloatNumber { .. } => l.to_string().ends_with('.'),\n                         _ => false,\n                     }\n                 } else {"}, {"sha": "23b1145a774b371a8721cdaccdd1cde00c68df90", "filename": "crates/syntax/src/ast/expr_ext.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs?ref=2d5d16f18c6dde52a53071c604b8cc30739df7be", "patch": "@@ -8,7 +8,7 @@ use crate::{\n         operators::{ArithOp, BinaryOp, CmpOp, LogicOp, Ordering, RangeOp, UnaryOp},\n         support, AstChildren, AstNode,\n     },\n-    AstToken,\n+    AstToken, SyntaxElement,\n     SyntaxKind::*,\n     SyntaxNode, SyntaxToken, T,\n };\n@@ -289,16 +289,17 @@ pub enum LiteralKind {\n }\n \n impl ast::Literal {\n-    pub fn token(&self) -> SyntaxToken {\n+    pub fn value(&self) -> SyntaxElement {\n         self.syntax()\n             .children_with_tokens()\n             .find(|e| e.kind() != ATTR && !e.kind().is_trivia())\n-            .and_then(|e| e.into_token())\n             .unwrap()\n     }\n-\n     pub fn kind(&self) -> LiteralKind {\n-        let token = self.token();\n+        let token = match self.value() {\n+            rowan::NodeOrToken::Node(_node) => unreachable!(),\n+            rowan::NodeOrToken::Token(token) => token,\n+        };\n \n         if let Some(t) = ast::IntNumber::cast(token.clone()) {\n             return LiteralKind::IntNumber(t);\n@@ -364,7 +365,7 @@ impl ast::BlockExpr {\n fn test_literal_with_attr() {\n     let parse = ast::SourceFile::parse(r#\"const _: &str = { #[attr] \"Hello\" };\"#);\n     let lit = parse.tree().syntax().descendants().find_map(ast::Literal::cast).unwrap();\n-    assert_eq!(lit.token().text(), r#\"\"Hello\"\"#);\n+    assert_eq!(lit.value().to_string(), r#\"\"Hello\"\"#);\n }\n \n impl ast::RecordExprField {"}, {"sha": "3edca3eb8f9d6e89954522cc9ef47fdc435aa5e3", "filename": "crates/syntax/src/validation.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d5d16f18c6dde52a53071c604b8cc30739df7be/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fvalidation.rs?ref=2d5d16f18c6dde52a53071c604b8cc30739df7be", "patch": "@@ -119,8 +119,15 @@ fn validate_literal(literal: ast::Literal, acc: &mut Vec<SyntaxError>) {\n         text.rfind(end_delimiter).and_then(|end| text.get(prefix_len..end))\n     }\n \n-    let token = literal.token();\n-    let text = token.text();\n+    let token = literal.value();\n+    let text;\n+    let text = match &token {\n+        rowan::NodeOrToken::Node(node) => {\n+            text = node.text().to_string();\n+            &*text\n+        }\n+        rowan::NodeOrToken::Token(token) => token.text(),\n+    };\n \n     // FIXME: lift this lambda refactor to `fn` (https://github.com/rust-analyzer/rust-analyzer/pull/2834#discussion_r366199205)\n     let mut push_err = |prefix_len, (off, err): (usize, unescape::EscapeError)| {"}]}