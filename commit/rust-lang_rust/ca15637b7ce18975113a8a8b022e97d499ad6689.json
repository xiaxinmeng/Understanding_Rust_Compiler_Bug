{"sha": "ca15637b7ce18975113a8a8b022e97d499ad6689", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMTU2MzdiN2NlMTg5NzUxMTNhOGE4YjAyMmU5N2Q0OTlhZDY2ODk=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-27T19:17:12Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-29T00:57:34Z"}, "message": "Reject casts to unsized types and suggest use of reference or box\n\nThis prevents ICEs or less helpful diagnostics if typeck proceeds\nfurther.  Closes issue #17441", "tree": {"sha": "bdccf11ce63bc1d8eb0ac572e63cdae8816d4a1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdccf11ce63bc1d8eb0ac572e63cdae8816d4a1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca15637b7ce18975113a8a8b022e97d499ad6689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca15637b7ce18975113a8a8b022e97d499ad6689", "html_url": "https://github.com/rust-lang/rust/commit/ca15637b7ce18975113a8a8b022e97d499ad6689", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca15637b7ce18975113a8a8b022e97d499ad6689/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34dfa45718d9d40361dadf0abf9c3dc5cc0b0381", "url": "https://api.github.com/repos/rust-lang/rust/commits/34dfa45718d9d40361dadf0abf9c3dc5cc0b0381", "html_url": "https://github.com/rust-lang/rust/commit/34dfa45718d9d40361dadf0abf9c3dc5cc0b0381"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "d4c38d48a8c561584c9acfae9250d2e6f7cb80de", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ca15637b7ce18975113a8a8b022e97d499ad6689/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca15637b7ce18975113a8a8b022e97d499ad6689/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=ca15637b7ce18975113a8a8b022e97d499ad6689", "patch": "@@ -1405,6 +1405,37 @@ fn check_cast(fcx: &FnCtxt,\n         return\n     }\n \n+    if !ty::type_is_sized(fcx.tcx(), t_1) {\n+        let tstr = fcx.infcx().ty_to_string(t_1);\n+        fcx.type_error_message(span, |actual| {\n+            format!(\"cast to unsized type: `{}` as `{}`\", actual, tstr)\n+        }, t_e, None);\n+        match ty::get(t_e).sty {\n+            ty::ty_rptr(_, ty::mt { mutbl: mt, .. }) => {\n+                let mtstr = match mt {\n+                    ast::MutMutable => \"mut \",\n+                    ast::MutImmutable => \"\"\n+                };\n+                if ty::type_is_trait(t_1) {\n+                    span_note!(fcx.tcx().sess, t.span, \"did you mean `&{}{}`?\", mtstr, tstr);\n+                } else {\n+                    span_note!(fcx.tcx().sess, span,\n+                               \"consider using an implicit coercion to `&{}{}` instead\",\n+                               mtstr, tstr);\n+                }\n+            }\n+            ty::ty_uniq(..) => {\n+                span_note!(fcx.tcx().sess, t.span, \"did you mean `Box<{}>`?\", tstr);\n+            }\n+            _ => {\n+                span_note!(fcx.tcx().sess, e.span,\n+                           \"consider using a box or reference as appropriate\");\n+            }\n+        }\n+        fcx.write_error(id);\n+        return\n+    }\n+\n     if ty::type_is_trait(t_1) {\n         // This will be looked up later on.\n         vtable2::check_object_cast(fcx, cast_expr, e, t_1);"}]}