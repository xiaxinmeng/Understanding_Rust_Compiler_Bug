{"sha": "9f38ce09ae76bf3770f06f6b09d81ddacde36ef0", "node_id": "C_kwDOAAsO6NoAKDlmMzhjZTA5YWU3NmJmMzc3MGYwNmY2YjA5ZDgxZGRhY2RlMzZlZjA", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-30T23:22:48Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-30T23:31:51Z"}, "message": "Add `x {check,build,doc} {compiler/library}` aliases.\n\nWhile working on https://github.com/rust-lang/rust/pull/95503,\nI realized that this will interfere with existing command lines:\nCurrently people run `x build library/std` expecting it to be added to the sysroot,\nbut after that change, it will *only* build `libstd` without making it available\nfor the toolchain.\n\nIt's debatable whether that's a breaking change that will be accepted; if so, this PR is absolutely\nnecessary to make sure there's a command for \"build the standard library and add it to the sysroot\".\nEven if not, though, I think `x build library` is more clear about what actually happens than the\ncurrent `x build library/std`.\n\nFor consistency, also add support for `compiler` and all other command variants.  Note that `doc\ncompiler` was already supported, so in a sense this is just fixing an existing inconsistency.\n\nI plan to change the dev-guide and various instructions in the README to `build library` once this is merged.", "tree": {"sha": "2beff9deba3a837dee0cad2228295427b47d2240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2beff9deba3a837dee0cad2228295427b47d2240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0", "html_url": "https://github.com/rust-lang/rust/commit/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11909e3588319235e28e99294e17cca11db1d7e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/11909e3588319235e28e99294e17cca11db1d7e2", "html_url": "https://github.com/rust-lang/rust/commit/11909e3588319235e28e99294e17cca11db1d7e2"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "674f891427b9c9abf36e5bcf5d09b06e7fc51938", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=9f38ce09ae76bf3770f06f6b09d81ddacde36ef0", "patch": "@@ -64,7 +64,7 @@ impl Step for Std {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.all_krates(\"test\")\n+        run.all_krates(\"test\").path(\"library\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -162,7 +162,7 @@ impl Step for Rustc {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.all_krates(\"rustc-main\")\n+        run.all_krates(\"rustc-main\").path(\"compiler\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "8ba081a1c0cd0e74017d5b08a43b2ddd71108a39", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=9f38ce09ae76bf3770f06f6b09d81ddacde36ef0", "patch": "@@ -43,7 +43,7 @@ impl Step for Std {\n         // When downloading stage1, the standard library has already been copied to the sysroot, so\n         // there's no need to rebuild it.\n         let download_rustc = run.builder.config.download_rustc;\n-        run.all_krates(\"test\").default_condition(!download_rustc)\n+        run.all_krates(\"test\").path(\"library\").default_condition(!download_rustc)\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -1047,7 +1047,7 @@ impl Step for Assemble {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"compiler/rustc\")\n+        run.path(\"compiler/rustc\").path(\"compiler\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "248ae916e38cbe6c122ec8b96783855a833f8b23", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f38ce09ae76bf3770f06f6b09d81ddacde36ef0/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=9f38ce09ae76bf3770f06f6b09d81ddacde36ef0", "patch": "@@ -417,7 +417,7 @@ impl Step for Std {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        run.all_krates(\"test\").default_condition(builder.config.docs)\n+        run.all_krates(\"test\").path(\"library\").default_condition(builder.config.docs)\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -479,11 +479,14 @@ impl Step for Std {\n             .iter()\n             .map(components_simplified)\n             .filter_map(|path| {\n-                if path.get(0) == Some(&\"library\") {\n+                if path.len() >= 2 && path.get(0) == Some(&\"library\") {\n+                    // single crate\n                     Some(path[1].to_owned())\n                 } else if !path.is_empty() {\n+                    // ??\n                     Some(path[0].to_owned())\n                 } else {\n+                    // all library crates\n                     None\n                 }\n             })"}]}