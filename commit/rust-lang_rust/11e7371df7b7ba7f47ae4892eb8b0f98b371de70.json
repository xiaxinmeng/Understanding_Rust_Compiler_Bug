{"sha": "11e7371df7b7ba7f47ae4892eb8b0f98b371de70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZTczNzFkZjdiN2JhN2Y0N2FlNDg5MmViOGIwZjk4YjM3MWRlNzA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-13T09:23:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-13T09:23:24Z"}, "message": "Merge #8499\n\n8499: internal: don't use `#[should_panic]` for tests r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "27d88010e9441d2af973f04c9b979220b0b07ebf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27d88010e9441d2af973f04c9b979220b0b07ebf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11e7371df7b7ba7f47ae4892eb8b0f98b371de70", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgdWMMCRBK7hj4Ov3rIwAAdHIIABXvRVaWfGjz8CpBLZmJeZ5j\nr8wtSsR2e8EdlDzO6s8N5w1ckg2pMp8+m8vgmdZz0WiEOu9tmySvqhtzJOM0/hpE\nToEs6r8abxRuH8PwUDRcTlaisPhzgFYstHudI4OJ3COVLSa5mcs2KTyXIjsER4ZP\nmL4cisVpL2l79pTldWdgfrjBMD1siJQ+TrJ0uJXwtZJiFG/7RYHWYi8QApVo0erN\nt8EPJ3qvUK0WQMLkLEg/rfkMEaUxOjgZqEHjDbnQyrMU0y2FtXDmCwx1gH/WgErm\nAHprNYCzh6uZlKTpDxxvfvcml5fQ5+vogPEyXEKURjj5G/9On7kHYBVzTDcwRKc=\n=neVz\n-----END PGP SIGNATURE-----\n", "payload": "tree 27d88010e9441d2af973f04c9b979220b0b07ebf\nparent 6081b437cc842f8885c26636bef8af4cbc5483e3\nparent db2a989565ea2b3d3c06e34cd385cfb574a32fbb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618305804 +0000\ncommitter GitHub <noreply@github.com> 1618305804 +0000\n\nMerge #8499\n\n8499: internal: don't use `#[should_panic]` for tests r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11e7371df7b7ba7f47ae4892eb8b0f98b371de70", "html_url": "https://github.com/rust-lang/rust/commit/11e7371df7b7ba7f47ae4892eb8b0f98b371de70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11e7371df7b7ba7f47ae4892eb8b0f98b371de70/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6081b437cc842f8885c26636bef8af4cbc5483e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6081b437cc842f8885c26636bef8af4cbc5483e3", "html_url": "https://github.com/rust-lang/rust/commit/6081b437cc842f8885c26636bef8af4cbc5483e3"}, {"sha": "db2a989565ea2b3d3c06e34cd385cfb574a32fbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/db2a989565ea2b3d3c06e34cd385cfb574a32fbb", "html_url": "https://github.com/rust-lang/rust/commit/db2a989565ea2b3d3c06e34cd385cfb574a32fbb"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "a04333e63e442c1ea283a2a90a06f125423da6ff", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/11e7371df7b7ba7f47ae4892eb8b0f98b371de70/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e7371df7b7ba7f47ae4892eb8b0f98b371de70/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=11e7371df7b7ba7f47ae4892eb8b0f98b371de70", "patch": "@@ -110,6 +110,13 @@ mod tests {\n         assert_eq!(expected, FileRange { file_id: nav.file_id, range: nav.focus_or_full_range() });\n     }\n \n+    fn check_unresolved(ra_fixture: &str) {\n+        let (analysis, position) = fixture::position(ra_fixture);\n+        let navs = analysis.goto_definition(position).unwrap().expect(\"no definition found\").info;\n+\n+        assert!(navs.is_empty(), \"didn't expect this to resolve anywhere: {:?}\", navs)\n+    }\n+\n     #[test]\n     fn goto_def_for_extern_crate() {\n         check(\n@@ -927,17 +934,12 @@ fn f() -> impl Iterator<Item$0 = u8> {}\n     }\n \n     #[test]\n-    #[should_panic = \"unresolved reference\"]\n     fn unknown_assoc_ty() {\n-        check(\n+        check_unresolved(\n             r#\"\n-trait Iterator {\n-    type Item;\n-       //^^^^\n-}\n-\n+trait Iterator { type Item; }\n fn f() -> impl Iterator<Invalid$0 = u8> {}\n-            \"#,\n+\"#,\n         )\n     }\n "}, {"sha": "99be5e090ce2a53d7eb1492536cf88d5eb7234e8", "filename": "crates/ide_assists/src/handlers/flip_comma.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/11e7371df7b7ba7f47ae4892eb8b0f98b371de70/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e7371df7b7ba7f47ae4892eb8b0f98b371de70/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs?ref=11e7371df7b7ba7f47ae4892eb8b0f98b371de70", "patch": "@@ -66,26 +66,12 @@ mod tests {\n     }\n \n     #[test]\n-    #[should_panic]\n     fn flip_comma_before_punct() {\n         // See https://github.com/rust-analyzer/rust-analyzer/issues/1619\n         // \"Flip comma\" assist shouldn't be applicable to the last comma in enum or struct\n         // declaration body.\n-        check_assist_target(\n-            flip_comma,\n-            \"pub enum Test { \\\n-             A,$0 \\\n-             }\",\n-            \",\",\n-        );\n-\n-        check_assist_target(\n-            flip_comma,\n-            \"pub struct Test { \\\n-             foo: usize,$0 \\\n-             }\",\n-            \",\",\n-        );\n+        check_assist_not_applicable(flip_comma, \"pub enum Test { A,$0 }\");\n+        check_assist_not_applicable(flip_comma, \"pub struct Test { foo: usize,$0 }\");\n     }\n \n     #[test]"}, {"sha": "7c47c26b2d46441f456f77c1d38113263ff72a52", "filename": "docs/dev/style.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/11e7371df7b7ba7f47ae4892eb8b0f98b371de70/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/11e7371df7b7ba7f47ae4892eb8b0f98b371de70/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=11e7371df7b7ba7f47ae4892eb8b0f98b371de70", "patch": "@@ -152,6 +152,16 @@ Do not reuse marks between several tests.\n \n **Rationale:** marks provide an easy way to find the canonical test for each bit of code.\n This makes it much easier to understand.\n+More than one mark per test / code branch doesn't add significantly to understanding.\n+\n+## `#[should_panic]`\n+\n+Do not use `#[should_panic]` tests.\n+Instead, explicitly check for `None`, `Err`, etc.\n+\n+**Rationale:**a `#[should_panic]` is a tool for library authors, to makes sure that API does not fail silently, when misused.\n+`rust-analyzer` is not a library, we don't need to test for API misuse, and we have to handle any user input without panics.\n+Panic messages in the logs from the `#[should_panic]` tests are confusing.\n \n ## Function Preconditions\n "}]}