{"sha": "8493dbed6c29b30844830d6e50a33493c6ea70af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OTNkYmVkNmMyOWIzMDg0NDgzMGQ2ZTUwYTMzNDkzYzZlYTcwYWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-26T10:52:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-26T10:52:56Z"}, "message": "Auto merge of #38536 - retep998:flauschige-kaninchen, r=petrochenkov\n\nFix fs tests on Windows systems with non-english locales.\n\nFixes https://github.com/rust-lang/rust/issues/34628\n\nr? @alexcrichton", "tree": {"sha": "34379f5a01301433027a70ed831e167000e59a36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34379f5a01301433027a70ed831e167000e59a36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8493dbed6c29b30844830d6e50a33493c6ea70af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8493dbed6c29b30844830d6e50a33493c6ea70af", "html_url": "https://github.com/rust-lang/rust/commit/8493dbed6c29b30844830d6e50a33493c6ea70af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8493dbed6c29b30844830d6e50a33493c6ea70af/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5752eae5f5ce3517d36f6668619dd2c70e6d2d88", "url": "https://api.github.com/repos/rust-lang/rust/commits/5752eae5f5ce3517d36f6668619dd2c70e6d2d88", "html_url": "https://github.com/rust-lang/rust/commit/5752eae5f5ce3517d36f6668619dd2c70e6d2d88"}, {"sha": "23cfcddd775e5e4b3888033b65d90a0f6c4c3506", "url": "https://api.github.com/repos/rust-lang/rust/commits/23cfcddd775e5e4b3888033b65d90a0f6c4c3506", "html_url": "https://github.com/rust-lang/rust/commit/23cfcddd775e5e4b3888033b65d90a0f6c4c3506"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "41934dc057e37eff774143b916e3924ade13a38a", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/8493dbed6c29b30844830d6e50a33493c6ea70af/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8493dbed6c29b30844830d6e50a33493c6ea70af/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=8493dbed6c29b30844830d6e50a33493c6ea70af", "patch": "@@ -1799,6 +1799,16 @@ mod tests {\n         }\n     ) }\n \n+    #[cfg(windows)]\n+    macro_rules! error { ($e:expr, $s:expr) => (\n+        match $e {\n+            Ok(_) => panic!(\"Unexpected success. Should've been: {:?}\", $s),\n+            Err(ref err) => assert!(err.raw_os_error() == Some($s),\n+                                    format!(\"`{}` did not have a code of `{}`\", err, $s))\n+        }\n+    ) }\n+\n+    #[cfg(unix)]\n     macro_rules! error { ($e:expr, $s:expr) => (\n         match $e {\n             Ok(_) => panic!(\"Unexpected success. Should've been: {:?}\", $s),\n@@ -1819,12 +1829,9 @@ mod tests {\n \n         match symlink_file(r\"nonexisting_target\", link) {\n             Ok(_) => true,\n-            Err(ref err) =>\n-                if err.to_string().contains(\"A required privilege is not held by the client.\") {\n-                    false\n-                } else {\n-                    true\n-                }\n+            // ERROR_PRIVILEGE_NOT_HELD = 1314\n+            Err(ref err) if err.raw_os_error() == Some(1314) => false,\n+            Err(_) => true,\n         }\n     }\n \n@@ -1855,12 +1862,10 @@ mod tests {\n         let filename = &tmpdir.join(\"file_that_does_not_exist.txt\");\n         let result = File::open(filename);\n \n-        if cfg!(unix) {\n-            error!(result, \"No such file or directory\");\n-        }\n-        if cfg!(windows) {\n-            error!(result, \"The system cannot find the file specified\");\n-        }\n+        #[cfg(unix)]\n+        error!(result, \"No such file or directory\");\n+        #[cfg(windows)]\n+        error!(result, 2); // ERROR_FILE_NOT_FOUND\n     }\n \n     #[test]\n@@ -1870,12 +1875,10 @@ mod tests {\n \n         let result = fs::remove_file(filename);\n \n-        if cfg!(unix) {\n-            error!(result, \"No such file or directory\");\n-        }\n-        if cfg!(windows) {\n-            error!(result, \"The system cannot find the file specified\");\n-        }\n+        #[cfg(unix)]\n+        error!(result, \"No such file or directory\");\n+        #[cfg(windows)]\n+        error!(result, 2); // ERROR_FILE_NOT_FOUND\n     }\n \n     #[test]\n@@ -2630,8 +2633,10 @@ mod tests {\n         let mut a = OO::new(); a.append(true);\n         let mut ra = OO::new(); ra.read(true).append(true);\n \n-        let invalid_options = if cfg!(windows) { \"The parameter is incorrect\" }\n-                              else { \"Invalid argument\" };\n+        #[cfg(windows)]\n+        let invalid_options = 87; // ERROR_INVALID_PARAMETER\n+        #[cfg(unix)]\n+        let invalid_options = \"Invalid argument\";\n \n         // Test various combinations of creation modes and access modes.\n         //"}]}