{"sha": "a4eb6630f333e227da86dca4a59be218c05b719d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZWI2NjMwZjMzM2UyMjdkYTg2ZGNhNGE1OWJlMjE4YzA1YjcxOWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-18T02:00:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-18T02:01:14Z"}, "message": "rustc: Increment by the dynamically-computed size in ivec::trans_append. Uncomment init_fn test in lib-ivec.", "tree": {"sha": "348c7471f4c01de5d0a987982fa869b161243571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/348c7471f4c01de5d0a987982fa869b161243571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4eb6630f333e227da86dca4a59be218c05b719d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4eb6630f333e227da86dca4a59be218c05b719d", "html_url": "https://github.com/rust-lang/rust/commit/a4eb6630f333e227da86dca4a59be218c05b719d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4eb6630f333e227da86dca4a59be218c05b719d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59c76a371fd0522af1034a9e55efe0f44983a0a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/59c76a371fd0522af1034a9e55efe0f44983a0a7", "html_url": "https://github.com/rust-lang/rust/commit/59c76a371fd0522af1034a9e55efe0f44983a0a7"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "e37717dc1fe131abfb9faa1d1d71df91193d5c62", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a4eb6630f333e227da86dca4a59be218c05b719d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4eb6630f333e227da86dca4a59be218c05b719d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=a4eb6630f333e227da86dca4a59be218c05b719d", "patch": "@@ -3473,14 +3473,18 @@ mod ivec {\n             }\n         }\n \n+        auto rslt = size_of(cx, unit_ty);\n+        auto bcx = rslt.bcx;\n+        auto unit_sz = rslt.val;\n+\n         // Gather the various type descriptors we'll need.\n \n         // FIXME (issue #511): This is needed to prevent a leak.\n         auto no_tydesc_info = none;\n \n-        auto rslt = get_tydesc(cx, t, false, no_tydesc_info);\n+        rslt = get_tydesc(bcx, t, false, no_tydesc_info);\n         auto vec_tydesc = rslt.val;\n-        auto bcx = rslt.bcx;\n+        bcx = rslt.bcx;\n         rslt = get_tydesc(bcx, unit_ty, false, no_tydesc_info);\n         auto unit_tydesc = rslt.val;\n         bcx = rslt.bcx;\n@@ -3526,12 +3530,19 @@ mod ivec {\n         auto post_copy_cx = rslt.bcx;\n         // Increment both pointers.\n \n-        post_copy_cx.build.Store(post_copy_cx.build.InBoundsGEP(copy_dest_ptr,\n-                                                                [C_int(1)]),\n-                                 dest_ptr);\n-        post_copy_cx.build.Store(post_copy_cx.build.InBoundsGEP(copy_src_ptr,\n-                                                                [C_int(1)]),\n-                                 src_ptr);\n+        if (ty::type_has_dynamic_size(cx.fcx.lcx.ccx.tcx, t)) {\n+            // We have to increment by the dynamically-computed size.\n+            post_copy_cx.build.Store(post_copy_cx.build.InBoundsGEP(\n+                copy_dest_ptr, [unit_sz]), dest_ptr);\n+            post_copy_cx.build.Store(post_copy_cx.build.InBoundsGEP(\n+                copy_src_ptr, [unit_sz]), src_ptr);\n+        } else {\n+            post_copy_cx.build.Store(post_copy_cx.build.InBoundsGEP(\n+                copy_dest_ptr, [C_int(1)]), dest_ptr);\n+            post_copy_cx.build.Store(post_copy_cx.build.InBoundsGEP(\n+                copy_src_ptr, [C_int(1)]), src_ptr);\n+        }\n+\n         post_copy_cx.build.Br(copy_loop_header_cx.llbb);\n         ret res(next_cx, C_nil());\n     }\n@@ -6656,7 +6667,8 @@ fn new_block_ctxt(&@fn_ctxt cx, &block_parent parent, block_kind kind,\n                   &str name) -> @block_ctxt {\n     let vec[cleanup] cleanups = [];\n     auto s = str::buf(\"\");\n-    if (cx.lcx.ccx.sess.get_opts().save_temps) {\n+    if (cx.lcx.ccx.sess.get_opts().save_temps ||\n+        cx.lcx.ccx.sess.get_opts().debuginfo) {\n         s = str::buf(cx.lcx.ccx.names.next(name));\n     }\n     let BasicBlockRef llbb = llvm::LLVMAppendBasicBlock(cx.llfn, s);"}, {"sha": "43031f7f05256db9e8ad3bbee9b9a5ee88168a00", "filename": "src/test/run-pass/lib-ivec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4eb6630f333e227da86dca4a59be218c05b719d/src%2Ftest%2Frun-pass%2Flib-ivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4eb6630f333e227da86dca4a59be218c05b719d/src%2Ftest%2Frun-pass%2Flib-ivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-ivec.rs?ref=a4eb6630f333e227da86dca4a59be218c05b719d", "patch": "@@ -57,6 +57,6 @@ fn test_init_fn() {\n fn main() {\n     test_reserve_and_on_heap();\n     test_unsafe_ptrs();\n-    //test_init_fn();\n+    test_init_fn();\n }\n "}]}