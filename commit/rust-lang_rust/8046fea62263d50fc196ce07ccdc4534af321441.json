{"sha": "8046fea62263d50fc196ce07ccdc4534af321441", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNDZmZWE2MjI2M2Q1MGZjMTk2Y2UwN2NjZGM0NTM0YWYzMjE0NDE=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-07-30T05:17:18Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-07-30T05:17:18Z"}, "message": "Improve diagnostics when constant pattern is too generic", "tree": {"sha": "4a1aaa903af8c6aae09835be05a64ddebb31fff3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a1aaa903af8c6aae09835be05a64ddebb31fff3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8046fea62263d50fc196ce07ccdc4534af321441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8046fea62263d50fc196ce07ccdc4534af321441", "html_url": "https://github.com/rust-lang/rust/commit/8046fea62263d50fc196ce07ccdc4534af321441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8046fea62263d50fc196ce07ccdc4534af321441/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e50a225fd67576e43bab1d4dfa3c97f310786a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e50a225fd67576e43bab1d4dfa3c97f310786a8", "html_url": "https://github.com/rust-lang/rust/commit/6e50a225fd67576e43bab1d4dfa3c97f310786a8"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f813ba0c077cadb662d6aeed5e8bfdb2f0b0e562", "filename": "src/librustc_mir_build/hair/pattern/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8046fea62263d50fc196ce07ccdc4534af321441/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8046fea62263d50fc196ce07ccdc4534af321441/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs?ref=8046fea62263d50fc196ce07ccdc4534af321441", "patch": "@@ -16,7 +16,7 @@ use rustc_hir::pat_util::EnumerateAndAdjustIterator;\n use rustc_hir::RangeEnd;\n use rustc_index::vec::Idx;\n use rustc_middle::mir::interpret::{get_slice_bytes, sign_extend, ConstValue};\n-use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n+use rustc_middle::mir::interpret::{ErrorHandled, LitToConstError, LitToConstInput};\n use rustc_middle::mir::UserTypeProjection;\n use rustc_middle::mir::{BorrowKind, Field, Mutability};\n use rustc_middle::ty::subst::{GenericArg, SubstsRef};\n@@ -834,6 +834,12 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n                     pattern\n                 }\n             }\n+            Err(ErrorHandled::TooGeneric) => {\n+                // While `Reported | Linted` cases will have diagnostics emitted already\n+                // it is not true for TooGeneric case, so we need to give user more information.\n+                self.tcx.sess.span_err(span, \"constant pattern depends on a generic parameter\");\n+                pat_from_kind(PatKind::Wild)\n+            }\n             Err(_) => {\n                 self.tcx.sess.span_err(span, \"could not evaluate constant pattern\");\n                 pat_from_kind(PatKind::Wild)"}]}