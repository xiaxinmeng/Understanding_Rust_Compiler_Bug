{"sha": "de0092c48ec11a1da78bcb267fa057cf9519e683", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMDA5MmM0OGVjMTFhMWRhNzhiY2IyNjdmYTA1N2NmOTUxOWU2ODM=", "commit": {"author": {"name": "Gareth Smith", "email": "garethdanielsmith@gmail.com", "date": "2013-07-30T22:43:39Z"}, "committer": {"name": "Gareth Smith", "email": "garethdanielsmith@gmail.com", "date": "2013-07-30T22:43:39Z"}, "message": "No longer treat \\ as a path separator on posix systems.", "tree": {"sha": "e599b1280a1484790a161e5a554eb5e60a1ed0ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e599b1280a1484790a161e5a554eb5e60a1ed0ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de0092c48ec11a1da78bcb267fa057cf9519e683", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de0092c48ec11a1da78bcb267fa057cf9519e683", "html_url": "https://github.com/rust-lang/rust/commit/de0092c48ec11a1da78bcb267fa057cf9519e683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de0092c48ec11a1da78bcb267fa057cf9519e683/comments", "author": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85b55131bebb5f485fa94c9b786ef76b7e01c32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/85b55131bebb5f485fa94c9b786ef76b7e01c32f", "html_url": "https://github.com/rust-lang/rust/commit/85b55131bebb5f485fa94c9b786ef76b7e01c32f"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "af6bfc16e540bf4f8633e8992e77871426bf1b47", "filename": "src/libstd/path.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/de0092c48ec11a1da78bcb267fa057cf9519e683/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de0092c48ec11a1da78bcb267fa057cf9519e683/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=de0092c48ec11a1da78bcb267fa057cf9519e683", "patch": "@@ -587,7 +587,7 @@ impl GenericPath for PosixPath {\n     }\n \n     fn with_filename(&self, f: &str) -> PosixPath {\n-        assert!(! f.iter().all(windows::is_sep));\n+        assert!(!f.iter().all(posix::is_sep));\n         self.dir_path().push(f)\n     }\n \n@@ -648,7 +648,7 @@ impl GenericPath for PosixPath {\n     fn push_many<S: Str>(&self, cs: &[S]) -> PosixPath {\n         let mut v = self.components.clone();\n         for cs.iter().advance |e| {\n-            for e.as_slice().split_iter(windows::is_sep).advance |s| {\n+            for e.as_slice().split_iter(posix::is_sep).advance |s| {\n                 if !s.is_empty() {\n                     v.push(s.to_owned())\n                 }\n@@ -662,7 +662,7 @@ impl GenericPath for PosixPath {\n \n     fn push(&self, s: &str) -> PosixPath {\n         let mut v = self.components.clone();\n-        for s.split_iter(windows::is_sep).advance |s| {\n+        for s.split_iter(posix::is_sep).advance |s| {\n             if !s.is_empty() {\n                 v.push(s.to_owned())\n             }\n@@ -1001,7 +1001,17 @@ pub fn normalize(components: &[~str]) -> ~[~str] {\n     cs\n }\n \n-// Various windows helpers, and tests for the impl.\n+// Various posix helpers.\n+pub mod posix {\n+\n+    #[inline]\n+    pub fn is_sep(u: char) -> bool {\n+        u == '/'\n+    }\n+\n+}\n+\n+// Various windows helpers.\n pub mod windows {\n     use libc;\n     use option::{None, Option, Some};\n@@ -1139,6 +1149,14 @@ mod tests {\n \n     }\n \n+    #[test]\n+    fn test_posix_push_with_backslash() {\n+        let a = PosixPath(\"/aaa/bbb\");\n+        let b = a.push(\"x\\\\y\"); // \\ is not a file separator for posix paths\n+        assert_eq!(a.components.len(), 2);\n+        assert_eq!(b.components.len(), 3);\n+    }\n+\n     #[test]\n     fn test_normalize() {\n         fn t(wp: &PosixPath, s: &str) {"}]}