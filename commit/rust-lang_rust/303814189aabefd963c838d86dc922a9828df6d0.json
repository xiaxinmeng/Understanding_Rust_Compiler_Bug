{"sha": "303814189aabefd963c838d86dc922a9828df6d0", "node_id": "C_kwDOAAsO6NoAKDMwMzgxNDE4OWFhYmVmZDk2M2M4MzhkODZkYzkyMmE5ODI4ZGY2ZDA", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-03T13:27:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-03T13:27:16Z"}, "message": "simplify", "tree": {"sha": "46705a6a0da3b3b40b72f6b6809770b2d93c60b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46705a6a0da3b3b40b72f6b6809770b2d93c60b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/303814189aabefd963c838d86dc922a9828df6d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/303814189aabefd963c838d86dc922a9828df6d0", "html_url": "https://github.com/rust-lang/rust/commit/303814189aabefd963c838d86dc922a9828df6d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/303814189aabefd963c838d86dc922a9828df6d0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "966983c7072f2daa1e88e84d605ecdf6be0cc601", "url": "https://api.github.com/repos/rust-lang/rust/commits/966983c7072f2daa1e88e84d605ecdf6be0cc601", "html_url": "https://github.com/rust-lang/rust/commit/966983c7072f2daa1e88e84d605ecdf6be0cc601"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "fb785665b97fd300ad3e9cb41f87b5de146ccde6", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/303814189aabefd963c838d86dc922a9828df6d0/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/303814189aabefd963c838d86dc922a9828df6d0/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=303814189aabefd963c838d86dc922a9828df6d0", "patch": "@@ -707,31 +707,29 @@ fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragmen\n             let tt_result = match kind {\n                 \"ident\" => input\n                     .expect_ident()\n-                    .map(|ident| Some(tt::Leaf::from(ident.clone()).into()))\n+                    .map(|ident| tt::Leaf::from(ident.clone()).into())\n                     .map_err(|()| err!(\"expected ident\")),\n-                \"tt\" => input.expect_tt().map(Some).map_err(|()| err!()),\n-                \"lifetime\" => {\n-                    input.expect_lifetime().map(Some).map_err(|()| err!(\"expected lifetime\"))\n-                }\n+                \"tt\" => input.expect_tt().map_err(|()| err!()),\n+                \"lifetime\" => input.expect_lifetime().map_err(|()| err!(\"expected lifetime\")),\n                 \"literal\" => {\n                     let neg = input.eat_char('-');\n                     input\n                         .expect_literal()\n                         .map(|literal| {\n                             let lit = literal.clone();\n                             match neg {\n-                                None => Some(lit.into()),\n-                                Some(neg) => Some(tt::TokenTree::Subtree(tt::Subtree {\n+                                None => lit.into(),\n+                                Some(neg) => tt::TokenTree::Subtree(tt::Subtree {\n                                     delimiter: None,\n                                     token_trees: vec![neg, lit.into()],\n-                                })),\n+                                }),\n                             }\n                         })\n                         .map_err(|()| err!())\n                 }\n                 _ => Err(ExpandError::UnexpectedToken),\n             };\n-            return tt_result.map(|it| it.map(Fragment::Tokens)).into();\n+            return tt_result.map(|it| Some(Fragment::Tokens(it))).into();\n         }\n     };\n     input.expect_fragment(fragment).map(|it| it.map(Fragment::Tokens))"}]}