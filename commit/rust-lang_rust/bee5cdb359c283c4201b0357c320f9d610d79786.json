{"sha": "bee5cdb359c283c4201b0357c320f9d610d79786", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZTVjZGIzNTljMjgzYzQyMDFiMDM1N2MzMjBmOWQ2MTBkNzk3ODY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-13T11:09:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-13T12:54:14Z"}, "message": "Parse variadics correctly\n\ncloses #3571", "tree": {"sha": "5c6bdb8bd7a3a8db3fd2869bd42e35eaa9d22ddd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c6bdb8bd7a3a8db3fd2869bd42e35eaa9d22ddd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bee5cdb359c283c4201b0357c320f9d610d79786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bee5cdb359c283c4201b0357c320f9d610d79786", "html_url": "https://github.com/rust-lang/rust/commit/bee5cdb359c283c4201b0357c320f9d610d79786", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bee5cdb359c283c4201b0357c320f9d610d79786/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93527b5f193ed214f6ae0f8112eaec2eebabd016", "url": "https://api.github.com/repos/rust-lang/rust/commits/93527b5f193ed214f6ae0f8112eaec2eebabd016", "html_url": "https://github.com/rust-lang/rust/commit/93527b5f193ed214f6ae0f8112eaec2eebabd016"}], "stats": {"total": 192, "additions": 178, "deletions": 14}, "files": [{"sha": "f0da173cc17a9d8c1cf28ec5d526b6f90a765ce5", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=bee5cdb359c283c4201b0357c320f9d610d79786", "patch": "@@ -56,21 +56,17 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n         // fn f(#[attr1] pat: Type) {}\n         attributes::outer_attributes(p);\n \n-        // test param_list_vararg\n-        // extern \"C\" { fn printf(format: *const i8, ...) -> i32; }\n-        match flavor {\n-            FnDef | FnPointer if p.eat(T![...]) => break,\n-            _ => (),\n-        }\n-\n         if !p.at_ts(VALUE_PARAMETER_FIRST) {\n             p.error(\"expected value parameter\");\n             break;\n         }\n-        value_parameter(p, flavor);\n+        let param = value_parameter(p, flavor);\n         if !p.at(ket) {\n             p.expect(T![,]);\n         }\n+        if let Variadic(true) = param {\n+            break;\n+        }\n     }\n \n     p.expect(ket);\n@@ -79,14 +75,25 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n \n const VALUE_PARAMETER_FIRST: TokenSet = patterns::PATTERN_FIRST.union(types::TYPE_FIRST);\n \n-fn value_parameter(p: &mut Parser, flavor: Flavor) {\n+struct Variadic(bool);\n+\n+fn value_parameter(p: &mut Parser, flavor: Flavor) -> Variadic {\n+    let mut res = Variadic(false);\n     let m = p.start();\n     match flavor {\n+        // test param_list_vararg\n+        // extern \"C\" { fn printf(format: *const i8, ...) -> i32; }\n+        Flavor::FnDef | Flavor::FnPointer if p.eat(T![...]) => res = Variadic(true),\n+\n         // test fn_def_param\n         // fn foo((x, y): (i32, i32)) {}\n         Flavor::FnDef => {\n             patterns::pattern(p);\n-            types::ascription(p);\n+            if variadic_param(p) {\n+                res = Variadic(true)\n+            } else {\n+                types::ascription(p);\n+            }\n         }\n         // test value_parameters_no_patterns\n         // type F = Box<Fn(i32, &i32, &i32, ())>;\n@@ -102,7 +109,11 @@ fn value_parameter(p: &mut Parser, flavor: Flavor) {\n         Flavor::FnPointer => {\n             if (p.at(IDENT) || p.at(UNDERSCORE)) && p.nth(1) == T![:] && !p.nth_at(1, T![::]) {\n                 patterns::pattern_single(p);\n-                types::ascription(p);\n+                if variadic_param(p) {\n+                    res = Variadic(true)\n+                } else {\n+                    types::ascription(p);\n+                }\n             } else {\n                 types::type_(p);\n             }\n@@ -119,6 +130,17 @@ fn value_parameter(p: &mut Parser, flavor: Flavor) {\n         }\n     }\n     m.complete(p, PARAM);\n+    res\n+}\n+\n+fn variadic_param(p: &mut Parser) -> bool {\n+    if p.at(T![:]) && p.nth_at(1, T![...]) {\n+        p.bump(T![:]);\n+        p.bump(T![...]);\n+        true\n+    } else {\n+        false\n+    }\n }\n \n // test self_param"}, {"sha": "6a8cb6bb57b43c18cee64d94624c1ebb6aa7609c", "filename": "crates/ra_syntax/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ftests.rs?ref=bee5cdb359c283c4201b0357c320f9d610d79786", "patch": "@@ -34,6 +34,7 @@ fn main() {\n     \"##;\n \n     let parse = SourceFile::parse(code);\n+    // eprintln!(\"{:#?}\", parse.syntax_node());\n     assert!(parse.ok().is_ok());\n }\n "}, {"sha": "4c17f0db81c811ede75ad655c35ef5a15d1bca5f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0032_fn_pointer_type.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.txt?ref=bee5cdb359c283c4201b0357c320f9d610d79786", "patch": "@@ -81,7 +81,8 @@ SOURCE_FILE@[0; 113)\n         WHITESPACE@[97; 98) \" \"\n         COMMA@[98; 99) \",\"\n         WHITESPACE@[99; 100) \" \"\n-        DOTDOTDOT@[100; 103) \"...\"\n+        PARAM@[100; 103)\n+          DOTDOTDOT@[100; 103) \"...\"\n         WHITESPACE@[103; 104) \" \"\n         R_PAREN@[104; 105) \")\"\n       WHITESPACE@[105; 106) \" \""}, {"sha": "6c3b17868c9095e6fb60d1b12fd9359f2385c1c9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0123_param_list_vararg.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.txt?ref=bee5cdb359c283c4201b0357c320f9d610d79786", "patch": "@@ -32,7 +32,8 @@ SOURCE_FILE@[0; 57)\n                       IDENT@[38; 40) \"i8\"\n           COMMA@[40; 41) \",\"\n           WHITESPACE@[41; 42) \" \"\n-          DOTDOTDOT@[42; 45) \"...\"\n+          PARAM@[42; 45)\n+            DOTDOTDOT@[42; 45) \"...\"\n           R_PAREN@[45; 46) \")\"\n         WHITESPACE@[46; 47) \" \"\n         RET_TYPE@[47; 53)"}, {"sha": "254eafc36488d51e5543cd6dfc7653cab8460fc4", "filename": "crates/ra_syntax/test_data/parser/ok/0051_parameter_attrs.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt?ref=bee5cdb359c283c4201b0357c320f9d610d79786", "patch": "@@ -118,7 +118,8 @@ SOURCE_FILE@[0; 519)\n                   IDENT@[108; 112) \"attr\"\n             R_BRACK@[112; 113) \"]\"\n           WHITESPACE@[113; 114) \" \"\n-          DOTDOTDOT@[114; 117) \"...\"\n+          PARAM@[114; 117)\n+            DOTDOTDOT@[114; 117) \"...\"\n           R_PAREN@[117; 118) \")\"\n         WHITESPACE@[118; 119) \" \"\n         RET_TYPE@[119; 125)"}, {"sha": "a16afbaf386d5701f912ba4e89e931bbf552b5e9", "filename": "crates/ra_syntax/test_data/parser/ok/0063_variadic_fun.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rs?ref=bee5cdb359c283c4201b0357c320f9d610d79786", "patch": "@@ -0,0 +1,5 @@\n+extern \"C\" {\n+    fn a(_: *mut u8, ...,);\n+    fn b(_: *mut u8, _: ...);\n+    fn c(_: *mut u8, #[cfg(never)] [w, t, f]: ...,);\n+}"}, {"sha": "186f0362697b9d927051c0a99722b9b596e94d86", "filename": "crates/ra_syntax/test_data/parser/ok/0063_variadic_fun.txt", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bee5cdb359c283c4201b0357c320f9d610d79786/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.txt?ref=bee5cdb359c283c4201b0357c320f9d610d79786", "patch": "@@ -0,0 +1,133 @@\n+SOURCE_FILE@[0; 126)\n+  EXTERN_BLOCK@[0; 125)\n+    ABI@[0; 10)\n+      EXTERN_KW@[0; 6) \"extern\"\n+      WHITESPACE@[6; 7) \" \"\n+      STRING@[7; 10) \"\\\"C\\\"\"\n+    WHITESPACE@[10; 11) \" \"\n+    EXTERN_ITEM_LIST@[11; 125)\n+      L_CURLY@[11; 12) \"{\"\n+      WHITESPACE@[12; 17) \"\\n    \"\n+      FN_DEF@[17; 40)\n+        FN_KW@[17; 19) \"fn\"\n+        WHITESPACE@[19; 20) \" \"\n+        NAME@[20; 21)\n+          IDENT@[20; 21) \"a\"\n+        PARAM_LIST@[21; 39)\n+          L_PAREN@[21; 22) \"(\"\n+          PARAM@[22; 32)\n+            PLACEHOLDER_PAT@[22; 23)\n+              UNDERSCORE@[22; 23) \"_\"\n+            COLON@[23; 24) \":\"\n+            WHITESPACE@[24; 25) \" \"\n+            POINTER_TYPE@[25; 32)\n+              STAR@[25; 26) \"*\"\n+              MUT_KW@[26; 29) \"mut\"\n+              WHITESPACE@[29; 30) \" \"\n+              PATH_TYPE@[30; 32)\n+                PATH@[30; 32)\n+                  PATH_SEGMENT@[30; 32)\n+                    NAME_REF@[30; 32)\n+                      IDENT@[30; 32) \"u8\"\n+          COMMA@[32; 33) \",\"\n+          WHITESPACE@[33; 34) \" \"\n+          PARAM@[34; 37)\n+            DOTDOTDOT@[34; 37) \"...\"\n+          COMMA@[37; 38) \",\"\n+          R_PAREN@[38; 39) \")\"\n+        SEMI@[39; 40) \";\"\n+      WHITESPACE@[40; 45) \"\\n    \"\n+      FN_DEF@[45; 70)\n+        FN_KW@[45; 47) \"fn\"\n+        WHITESPACE@[47; 48) \" \"\n+        NAME@[48; 49)\n+          IDENT@[48; 49) \"b\"\n+        PARAM_LIST@[49; 69)\n+          L_PAREN@[49; 50) \"(\"\n+          PARAM@[50; 60)\n+            PLACEHOLDER_PAT@[50; 51)\n+              UNDERSCORE@[50; 51) \"_\"\n+            COLON@[51; 52) \":\"\n+            WHITESPACE@[52; 53) \" \"\n+            POINTER_TYPE@[53; 60)\n+              STAR@[53; 54) \"*\"\n+              MUT_KW@[54; 57) \"mut\"\n+              WHITESPACE@[57; 58) \" \"\n+              PATH_TYPE@[58; 60)\n+                PATH@[58; 60)\n+                  PATH_SEGMENT@[58; 60)\n+                    NAME_REF@[58; 60)\n+                      IDENT@[58; 60) \"u8\"\n+          COMMA@[60; 61) \",\"\n+          WHITESPACE@[61; 62) \" \"\n+          PARAM@[62; 68)\n+            PLACEHOLDER_PAT@[62; 63)\n+              UNDERSCORE@[62; 63) \"_\"\n+            COLON@[63; 64) \":\"\n+            WHITESPACE@[64; 65) \" \"\n+            DOTDOTDOT@[65; 68) \"...\"\n+          R_PAREN@[68; 69) \")\"\n+        SEMI@[69; 70) \";\"\n+      WHITESPACE@[70; 75) \"\\n    \"\n+      FN_DEF@[75; 123)\n+        FN_KW@[75; 77) \"fn\"\n+        WHITESPACE@[77; 78) \" \"\n+        NAME@[78; 79)\n+          IDENT@[78; 79) \"c\"\n+        PARAM_LIST@[79; 122)\n+          L_PAREN@[79; 80) \"(\"\n+          PARAM@[80; 90)\n+            PLACEHOLDER_PAT@[80; 81)\n+              UNDERSCORE@[80; 81) \"_\"\n+            COLON@[81; 82) \":\"\n+            WHITESPACE@[82; 83) \" \"\n+            POINTER_TYPE@[83; 90)\n+              STAR@[83; 84) \"*\"\n+              MUT_KW@[84; 87) \"mut\"\n+              WHITESPACE@[87; 88) \" \"\n+              PATH_TYPE@[88; 90)\n+                PATH@[88; 90)\n+                  PATH_SEGMENT@[88; 90)\n+                    NAME_REF@[88; 90)\n+                      IDENT@[88; 90) \"u8\"\n+          COMMA@[90; 91) \",\"\n+          WHITESPACE@[91; 92) \" \"\n+          ATTR@[92; 105)\n+            POUND@[92; 93) \"#\"\n+            L_BRACK@[93; 94) \"[\"\n+            PATH@[94; 97)\n+              PATH_SEGMENT@[94; 97)\n+                NAME_REF@[94; 97)\n+                  IDENT@[94; 97) \"cfg\"\n+            TOKEN_TREE@[97; 104)\n+              L_PAREN@[97; 98) \"(\"\n+              IDENT@[98; 103) \"never\"\n+              R_PAREN@[103; 104) \")\"\n+            R_BRACK@[104; 105) \"]\"\n+          WHITESPACE@[105; 106) \" \"\n+          PARAM@[106; 120)\n+            SLICE_PAT@[106; 115)\n+              L_BRACK@[106; 107) \"[\"\n+              BIND_PAT@[107; 108)\n+                NAME@[107; 108)\n+                  IDENT@[107; 108) \"w\"\n+              COMMA@[108; 109) \",\"\n+              WHITESPACE@[109; 110) \" \"\n+              BIND_PAT@[110; 111)\n+                NAME@[110; 111)\n+                  IDENT@[110; 111) \"t\"\n+              COMMA@[111; 112) \",\"\n+              WHITESPACE@[112; 113) \" \"\n+              BIND_PAT@[113; 114)\n+                NAME@[113; 114)\n+                  IDENT@[113; 114) \"f\"\n+              R_BRACK@[114; 115) \"]\"\n+            COLON@[115; 116) \":\"\n+            WHITESPACE@[116; 117) \" \"\n+            DOTDOTDOT@[117; 120) \"...\"\n+          COMMA@[120; 121) \",\"\n+          R_PAREN@[121; 122) \")\"\n+        SEMI@[122; 123) \";\"\n+      WHITESPACE@[123; 124) \"\\n\"\n+      R_CURLY@[124; 125) \"}\"\n+  WHITESPACE@[125; 126) \"\\n\""}]}