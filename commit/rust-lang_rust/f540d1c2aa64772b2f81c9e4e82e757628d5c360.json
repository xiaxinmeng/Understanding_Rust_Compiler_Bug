{"sha": "f540d1c2aa64772b2f81c9e4e82e757628d5c360", "node_id": "C_kwDOAAsO6NoAKGY1NDBkMWMyYWE2NDc3MmIyZjgxYzllNGU4MmU3NTc2MjhkNWMzNjA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-15T18:02:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-15T18:02:15Z"}, "message": "fix: Fix source root panic in global state when checking out older git revs", "tree": {"sha": "eb3341577d1c406ba640830694f89de7611012c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb3341577d1c406ba640830694f89de7611012c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f540d1c2aa64772b2f81c9e4e82e757628d5c360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f540d1c2aa64772b2f81c9e4e82e757628d5c360", "html_url": "https://github.com/rust-lang/rust/commit/f540d1c2aa64772b2f81c9e4e82e757628d5c360", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f540d1c2aa64772b2f81c9e4e82e757628d5c360/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58660dee2a166e28c50b2d8f4a2292838bff3192", "url": "https://api.github.com/repos/rust-lang/rust/commits/58660dee2a166e28c50b2d8f4a2292838bff3192", "html_url": "https://github.com/rust-lang/rust/commit/58660dee2a166e28c50b2d8f4a2292838bff3192"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "9fc3e30199170bf1e87557ed8f187c6358a8c164", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f540d1c2aa64772b2f81c9e4e82e757628d5c360/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f540d1c2aa64772b2f81c9e4e82e757628d5c360/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=f540d1c2aa64772b2f81c9e4e82e757628d5c360", "patch": "@@ -180,25 +180,15 @@ impl GlobalState {\n         // A file was added or deleted\n         let mut has_structure_changes = false;\n \n-        let change = {\n+        let (change, changed_files) = {\n             let mut change = Change::new();\n             let (vfs, line_endings_map) = &mut *self.vfs.write();\n             let changed_files = vfs.take_changes();\n             if changed_files.is_empty() {\n                 return false;\n             }\n \n-            for file in changed_files {\n-                if !file.is_created_or_deleted() {\n-                    // FIXME: https://github.com/rust-analyzer/rust-analyzer/issues/11357\n-                    let crates = self.analysis_host.raw_database().relevant_crates(file.file_id);\n-                    let crate_graph = self.analysis_host.raw_database().crate_graph();\n-\n-                    if crates.iter().any(|&krate| !crate_graph[krate].proc_macro.is_empty()) {\n-                        self.proc_macro_changed = true;\n-                    }\n-                }\n-\n+            for file in &changed_files {\n                 if let Some(path) = vfs.file_path(file.file_id).as_path() {\n                     let path = path.to_path_buf();\n                     if reload::should_refresh_for_change(&path, file.change_kind) {\n@@ -212,14 +202,11 @@ impl GlobalState {\n \n                 let text = if file.exists() {\n                     let bytes = vfs.file_contents(file.file_id).to_vec();\n-                    match String::from_utf8(bytes).ok() {\n-                        Some(text) => {\n-                            let (text, line_endings) = LineEndings::normalize(text);\n-                            line_endings_map.insert(file.file_id, line_endings);\n-                            Some(Arc::new(text))\n-                        }\n-                        None => None,\n-                    }\n+                    String::from_utf8(bytes).ok().and_then(|text| {\n+                        let (text, line_endings) = LineEndings::normalize(text);\n+                        line_endings_map.insert(file.file_id, line_endings);\n+                        Some(Arc::new(text))\n+                    })\n                 } else {\n                     None\n                 };\n@@ -229,10 +216,19 @@ impl GlobalState {\n                 let roots = self.source_root_config.partition(vfs);\n                 change.set_roots(roots);\n             }\n-            change\n+            (change, changed_files)\n         };\n \n         self.analysis_host.apply_change(change);\n+\n+        let raw_database = &self.analysis_host.raw_database();\n+        self.proc_macro_changed =\n+            changed_files.iter().filter(|file| !file.is_created_or_deleted()).any(|file| {\n+                let crates = raw_database.relevant_crates(file.file_id);\n+                let crate_graph = raw_database.crate_graph();\n+\n+                crates.iter().any(|&krate| !crate_graph[krate].is_proc_macro)\n+            });\n         true\n     }\n "}]}