{"sha": "e24aba2c1a8663c2ddebdae740689f8a7bdcadb7", "node_id": "C_kwDOAAsO6NoAKGUyNGFiYTJjMWE4NjYzYzJkZGViZGFlNzQwNjg5ZjhhN2JkY2FkYjc", "commit": {"author": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-09-07T09:06:50Z"}, "committer": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-11-20T08:40:11Z"}, "message": "Use applicability for snippets", "tree": {"sha": "71009674788e499be3a201beeff20a7c008224c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71009674788e499be3a201beeff20a7c008224c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e24aba2c1a8663c2ddebdae740689f8a7bdcadb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e24aba2c1a8663c2ddebdae740689f8a7bdcadb7", "html_url": "https://github.com/rust-lang/rust/commit/e24aba2c1a8663c2ddebdae740689f8a7bdcadb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e24aba2c1a8663c2ddebdae740689f8a7bdcadb7/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dca4f261d01584aac507379649458fbaf04d4c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dca4f261d01584aac507379649458fbaf04d4c8", "html_url": "https://github.com/rust-lang/rust/commit/6dca4f261d01584aac507379649458fbaf04d4c8"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "ec09bfd743d0a3f3344dcb08c436bcf122b8e92d", "filename": "clippy_lints/src/methods/search_is_some.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e24aba2c1a8663c2ddebdae740689f8a7bdcadb7/clippy_lints%2Fsrc%2Fmethods%2Fsearch_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e24aba2c1a8663c2ddebdae740689f8a7bdcadb7/clippy_lints%2Fsrc%2Fmethods%2Fsearch_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsearch_is_some.rs?ref=e24aba2c1a8663c2ddebdae740689f8a7bdcadb7", "patch": "@@ -167,6 +167,7 @@ fn get_closure_suggestion<'tcx>(\n         next_pos: None,\n         suggestion_start: String::new(),\n         suggestion_end: String::new(),\n+        applicability: Applicability::MachineApplicable,\n     };\n \n     let fn_def_id = cx.tcx.hir().local_def_id(search_arg.hir_id);\n@@ -188,6 +189,7 @@ struct DerefDelegate<'a, 'tcx> {\n     next_pos: Option<BytePos>,\n     suggestion_start: String,\n     suggestion_end: String,\n+    applicability: Applicability,\n }\n \n impl<'tcx> Delegate<'tcx> for DerefDelegate<'_, 'tcx> {\n@@ -203,9 +205,9 @@ impl<'tcx> Delegate<'tcx> for DerefDelegate<'_, 'tcx> {\n             } else {\n                 self.closure_span.until(span)\n             };\n-            let start_snip = snippet(self.cx, start_span, \"..\");\n+            let start_snip = snippet_with_applicability(self.cx, start_span, \"..\", &mut self.applicability);\n             let end_span = Span::new(span.hi(), self.closure_span.hi(), span.ctxt());\n-            let end_snip = snippet(self.cx, end_span, \"..\");\n+            let end_snip = snippet_with_applicability(self.cx, end_span, \"..\", &mut self.applicability);\n \n             if cmt.place.projections.is_empty() {\n                 // handle item without any projection, that needs an explicit borrowing\n@@ -227,11 +229,14 @@ impl<'tcx> Delegate<'tcx> for DerefDelegate<'_, 'tcx> {\n                                     } else {\n                                         self.closure_span.until(span)\n                                     };\n-                                    let start_snip = snippet(self.cx, start_span, \"..\");\n+                                    let start_snip =\n+                                        snippet_with_applicability(self.cx, start_span, \"..\", &mut self.applicability);\n \n                                     self.suggestion_start.push_str(&format!(\"{}&{}\", start_snip, ident_str));\n                                     self.suggestion_end = end_snip.to_string();\n                                     self.next_pos = Some(span.hi());\n+                                } else {\n+                                    self.applicability = Applicability::Unspecified;\n                                 }\n                             }\n                             return;"}]}