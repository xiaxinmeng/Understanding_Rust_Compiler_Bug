{"sha": "342ce3da05eea9f119ecf367052d681a386b1761", "node_id": "C_kwDOAAsO6NoAKDM0MmNlM2RhMDVlZWE5ZjExOWVjZjM2NzA1MmQ2ODFhMzg2YjE3NjE", "commit": {"author": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-09T18:50:47Z"}, "committer": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-09T18:50:47Z"}, "message": "fix reviewer comments", "tree": {"sha": "9c87a56e3139a177877f7bd64504966125ec653a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c87a56e3139a177877f7bd64504966125ec653a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/342ce3da05eea9f119ecf367052d681a386b1761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/342ce3da05eea9f119ecf367052d681a386b1761", "html_url": "https://github.com/rust-lang/rust/commit/342ce3da05eea9f119ecf367052d681a386b1761", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/342ce3da05eea9f119ecf367052d681a386b1761/comments", "author": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "committer": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb6bf1ebf66497386ea4c90a953b7b287ae19706", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6bf1ebf66497386ea4c90a953b7b287ae19706", "html_url": "https://github.com/rust-lang/rust/commit/fb6bf1ebf66497386ea4c90a953b7b287ae19706"}], "stats": {"total": 139, "additions": 47, "deletions": 92}, "files": [{"sha": "0064619ef89d1bb4ec78d14abb972600e8f5b854", "filename": "clippy_lints/src/matches/match_like_matches.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -183,12 +183,9 @@ fn find_bool_lit(ex: &ExprKind<'_>) -> Option<bool> {\n \n fn is_some(path_kind: PatKind<'_>) -> bool {\n     match path_kind {\n-        PatKind::TupleStruct(QPath::Resolved(_, path), patterns, _) if is_wild(&patterns[0]) => {\n+        PatKind::TupleStruct(QPath::Resolved(_, path), [first, ..], _) if is_wild(first) => {\n             let name = path.segments[0].ident;\n-            if name.name == rustc_span::sym::Some {\n-                return true;\n-            }\n-            false\n+            name.name == rustc_span::sym::Some\n         },\n         _ => false,\n     }"}, {"sha": "7a06443f5d9d2ee48432dc1da2c9ef4dee48679d", "filename": "clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -188,9 +188,8 @@ fn find_sugg_for_if_let<'tcx>(\n pub(super) fn check_match<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, op: &Expr<'_>, arms: &[Arm<'_>]) {\n     if arms.len() == 2 {\n         let node_pair = (&arms[0].pat.kind, &arms[1].pat.kind);\n-        let found_good_method = found_good_method(cx, arms, node_pair);\n \n-        if let Some(good_method) = found_good_method {\n+        if let Some(good_method) = found_good_method(cx, arms, node_pair) {\n             let span = expr.span.to(op.span);\n             let result_expr = match &op.kind {\n                 ExprKind::AddrOf(_, _, borrowed) => borrowed,\n@@ -310,6 +309,9 @@ fn get_good_method<'a>(cx: &LateContext<'_>, arms: &[Arm<'_>], path_left: &QPath\n             \"Ok\" => {\n                 find_good_method_for_matches_macro(cx, arms, path_left, Item::Lang(ResultOk), \"is_ok()\", \"is_err()\")\n             },\n+            \"Err\" => {\n+                find_good_method_for_matches_macro(cx, arms, path_left, Item::Lang(ResultErr), \"is_err()\", \"is_ok()\")\n+            },\n             \"Some\" => find_good_method_for_matches_macro(\n                 cx,\n                 arms,"}, {"sha": "2f907f7ae3dd1569f64c1d878da69779a2fc1754", "filename": "tests/ui/redundant_pattern_matching_option.fixed", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.fixed?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -95,15 +95,12 @@ fn issue10726() {\n \n     Some(42).is_none();\n \n-    Some(42).is_none();\n-\n-    Some(42).is_some();\n-\n-    None::<()>.is_none();\n-\n-    None::<()>.is_none();\n+    None::<()>.is_some();\n \n     None::<()>.is_none();\n \n-    None::<()>.is_some();\n+    match Some(42) {\n+        Some(21) => true,\n+        _ => false,\n+    };\n }"}, {"sha": "5e80a2b384b7017f212084e5c68d8f7ca1f9546a", "filename": "tests/ui/redundant_pattern_matching_option.rs", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.rs?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -111,38 +111,23 @@ fn issue10726() {\n         _ => false,\n     };\n \n-    match Some(42) {\n-        Some(_) => false,\n-        _ => true,\n-    };\n-\n     match Some(42) {\n         None => true,\n         _ => false,\n     };\n \n-    match Some(42) {\n-        None => false,\n-        _ => true,\n-    };\n-\n     match None::<()> {\n-        Some(_) => false,\n-        _ => true,\n-    };\n-\n-    match None::<()> {\n-        Some(_) => false,\n-        _ => true,\n+        Some(_) => true,\n+        _ => false,\n     };\n \n     match None::<()> {\n         None => true,\n         _ => false,\n     };\n \n-    match None::<()> {\n-        None => false,\n-        _ => true,\n+    match Some(42) {\n+        Some(21) => true,\n+        _ => false,\n     };\n }"}, {"sha": "97de2f1c86f2c3b39b6b04d5eef4b227ae0bb5b5", "filename": "tests/ui/redundant_pattern_matching_option.stderr", "status": "modified", "additions": 6, "deletions": 42, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.stderr?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -161,64 +161,28 @@ error: redundant pattern matching, consider using `is_none()`\n   --> $DIR/redundant_pattern_matching_option.rs:114:5\n    |\n LL | /     match Some(42) {\n-LL | |         Some(_) => false,\n-LL | |         _ => true,\n-LL | |     };\n-   | |_____^ help: try this: `Some(42).is_none()`\n-\n-error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:119:5\n-   |\n-LL | /     match Some(42) {\n LL | |         None => true,\n LL | |         _ => false,\n LL | |     };\n    | |_____^ help: try this: `Some(42).is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:124:5\n-   |\n-LL | /     match Some(42) {\n-LL | |         None => false,\n-LL | |         _ => true,\n-LL | |     };\n-   | |_____^ help: try this: `Some(42).is_some()`\n-\n-error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:129:5\n-   |\n-LL | /     match None::<()> {\n-LL | |         Some(_) => false,\n-LL | |         _ => true,\n-LL | |     };\n-   | |_____^ help: try this: `None::<()>.is_none()`\n-\n-error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:134:5\n+  --> $DIR/redundant_pattern_matching_option.rs:119:5\n    |\n LL | /     match None::<()> {\n-LL | |         Some(_) => false,\n-LL | |         _ => true,\n+LL | |         Some(_) => true,\n+LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `None::<()>.is_none()`\n+   | |_____^ help: try this: `None::<()>.is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:139:5\n+  --> $DIR/redundant_pattern_matching_option.rs:124:5\n    |\n LL | /     match None::<()> {\n LL | |         None => true,\n LL | |         _ => false,\n LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n-error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:144:5\n-   |\n-LL | /     match None::<()> {\n-LL | |         None => false,\n-LL | |         _ => true,\n-LL | |     };\n-   | |_____^ help: try this: `None::<()>.is_some()`\n-\n-error: aborting due to 30 previous errors\n+error: aborting due to 26 previous errors\n "}, {"sha": "a242c38e8334df0f01b6292a9c3afaab00d5f248", "filename": "tests/ui/redundant_pattern_matching_result.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.fixed?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -114,7 +114,12 @@ fn issue10726() {\n \n     Ok::<i32, i32>(42).is_err();\n \n+    Err::<i32, i32>(42).is_ok();\n+\n     Err::<i32, i32>(42).is_err();\n \n-    Err::<i32, i32>(42).is_ok();\n+    match Ok::<i32, i32>(42) {\n+        Ok(21) => true,\n+        _ => false,\n+    };\n }"}, {"sha": "a4b0673ae5bcadd3133cce975bfd38b062f7dde4", "filename": "tests/ui/redundant_pattern_matching_result.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.rs?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -134,17 +134,22 @@ fn issue10726() {\n     };\n \n     match Ok::<i32, i32>(42) {\n-        Ok(_) => false,\n-        _ => true,\n+        Err(_) => true,\n+        _ => false,\n     };\n \n     match Err::<i32, i32>(42) {\n-        Ok(_) => false,\n-        _ => true,\n+        Ok(_) => true,\n+        _ => false,\n     };\n \n     match Err::<i32, i32>(42) {\n-        Ok(_) => true,\n+        Err(_) => true,\n+        _ => false,\n+    };\n+\n+    match Ok::<i32, i32>(42) {\n+        Ok(21) => true,\n         _ => false,\n     };\n }"}, {"sha": "151a74402517aa1a1ff8e4b0161696d7f1fe8ff1", "filename": "tests/ui/redundant_pattern_matching_result.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/342ce3da05eea9f119ecf367052d681a386b1761/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.stderr?ref=342ce3da05eea9f119ecf367052d681a386b1761", "patch": "@@ -163,28 +163,28 @@ error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/redundant_pattern_matching_result.rs:136:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n-LL | |         Ok(_) => false,\n-LL | |         _ => true,\n+LL | |         Err(_) => true,\n+LL | |         _ => false,\n LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_err()`\n \n-error: redundant pattern matching, consider using `is_err()`\n+error: redundant pattern matching, consider using `is_ok()`\n   --> $DIR/redundant_pattern_matching_result.rs:141:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n-LL | |         Ok(_) => false,\n-LL | |         _ => true,\n+LL | |         Ok(_) => true,\n+LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n+   | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n \n-error: redundant pattern matching, consider using `is_ok()`\n+error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/redundant_pattern_matching_result.rs:146:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n-LL | |         Ok(_) => true,\n+LL | |         Err(_) => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n+   | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: aborting due to 26 previous errors\n "}]}