{"sha": "37381d33a4761a064311dd95fbc54b5da6ad3766", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MzgxZDMzYTQ3NjFhMDY0MzExZGQ5NWZiYzU0YjVkYTZhZDM3NjY=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-05-31T12:05:57Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-05-31T12:05:57Z"}, "message": "Fix sync fallout", "tree": {"sha": "e47ebf5b7d00bb96fd727a73d7361abe420bdaca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e47ebf5b7d00bb96fd727a73d7361abe420bdaca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37381d33a4761a064311dd95fbc54b5da6ad3766", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl7TnaUACgkQaTCGhp1Q\nZjcn3w//RP7cCViZ3OXAwwKsUHh3fj5EPD0mtidTG+a4lGISrgzfTOH1R33cpvMU\nrLyFR/2OyqdJhDeb5zvDppsgPD2RwV6TIlEQa+hc4DsvkWJzHTz3RFpTji67rF9B\nXq3jTt8V2hYo8c8ktSWkIkpKxdeaXHXl4HlpLngIV4EL/bl5T3giCYNG5c1knW2i\nbjVIwm+Bq33wO2jZ/0ZEQQ+/SuSOPw13tuwIhAHQy+RBkRoFn0k9Pi/f6RziKpdl\n3uQEg9D/o60iwWhKUp3gH712I1Z7p0OY3hEvz0oO2FnC3tdv/P3/EbZxG796X34t\npMOIINHlcE4Y4uWos7PBd8xsNmTtj9HOOAgsikWJ71sGnm42niHPj/UT9U5K8SlQ\nTSqL6mwJpf+vyOLQEh1eabY3KK4oqTl6bYr2s4NR2O7vMOTGzi5whQlf6gdwKo3O\nqGDG/tz01TI9jhwuOYSZTIlpuoXsPCyVmT3sIF7Y8F6f9N1BjBJ1L/QDQYpSFqWH\n4tAGAGqNS/Cv20bcksPUwxUwKwYdUY6vtXp/1YRpUAPXamxvMW38Tv2VEzeSnaOM\nGqbPMGFsgwCw2+jUQGjBqCr3Z3h1mbC5aL4RYblHHv04ySxuESaVcS1VcBgAzt/y\nGRcCNxFJPEwsnTMbcUMgUsQIgW4mrP3K5afQnYqkQCdpbT9tZzQ=\n=8WBg\n-----END PGP SIGNATURE-----", "payload": "tree e47ebf5b7d00bb96fd727a73d7361abe420bdaca\nparent e6f5dd52a47f02d6d029effe071cd3c4767126e1\nauthor flip1995 <hello@philkrones.com> 1590926757 +0200\ncommitter flip1995 <hello@philkrones.com> 1590926757 +0200\n\nFix sync fallout\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37381d33a4761a064311dd95fbc54b5da6ad3766", "html_url": "https://github.com/rust-lang/rust/commit/37381d33a4761a064311dd95fbc54b5da6ad3766", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37381d33a4761a064311dd95fbc54b5da6ad3766/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6f5dd52a47f02d6d029effe071cd3c4767126e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6f5dd52a47f02d6d029effe071cd3c4767126e1", "html_url": "https://github.com/rust-lang/rust/commit/e6f5dd52a47f02d6d029effe071cd3c4767126e1"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "9c508fc0e4a1ac99c20c238bf78829f90745dae3", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/37381d33a4761a064311dd95fbc54b5da6ad3766/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37381d33a4761a064311dd95fbc54b5da6ad3766/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=37381d33a4761a064311dd95fbc54b5da6ad3766", "patch": "@@ -173,13 +173,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                     !preds.is_empty() && {\n                         let ty_empty_region = cx.tcx.mk_imm_ref(cx.tcx.lifetimes.re_root_empty, ty);\n                         preds.iter().all(|t| {\n-                            let ty_params = &t\n-                                .skip_binder()\n-                                .trait_ref\n-                                .substs\n-                                .iter()\n-                                .skip(1)\n-                                .collect::<Vec<_>>();\n+                            let ty_params = &t.skip_binder().trait_ref.substs.iter().skip(1).collect::<Vec<_>>();\n                             implements_trait(cx, ty_empty_region, t.def_id(), ty_params)\n                         })\n                     },"}, {"sha": "5f794598052f6bbd7926008bae27bb30014e865e", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/37381d33a4761a064311dd95fbc54b5da6ad3766/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37381d33a4761a064311dd95fbc54b5da6ad3766/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=37381d33a4761a064311dd95fbc54b5da6ad3766", "patch": "@@ -279,13 +279,12 @@ impl EarlyLintPass for Write {\n             if let (Some(fmt_str), expr) = self.check_tts(cx, &mac.args.inner_tokens(), true) {\n                 if fmt_str.symbol == Symbol::intern(\"\") {\n                     let mut applicability = Applicability::MachineApplicable;\n-                    let suggestion = expr.map_or_else(\n-                        move || {\n-                            applicability = Applicability::HasPlaceholders;\n-                            Cow::Borrowed(\"v\")\n-                        },\n-                        move |expr| snippet_with_applicability(cx, expr.span, \"v\", &mut applicability),\n-                    );\n+                    let suggestion = if let Some(e) = expr {\n+                        snippet_with_applicability(cx, e.span, \"v\", &mut applicability)\n+                    } else {\n+                        applicability = Applicability::HasPlaceholders;\n+                        Cow::Borrowed(\"v\")\n+                    };\n \n                     span_lint_and_sugg(\n                         cx,"}, {"sha": "7bd5f09f333dd2fd4fa8a36f7e4e388d249767cb", "filename": "tests/compile-test.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37381d33a4761a064311dd95fbc54b5da6ad3766/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37381d33a4761a064311dd95fbc54b5da6ad3766/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=37381d33a4761a064311dd95fbc54b5da6ad3766", "patch": "@@ -153,9 +153,6 @@ fn run_ui_toml(config: &mut compiletest::Config) {\n }\n \n fn run_ui_cargo(config: &mut compiletest::Config) {\n-    if cargo::is_rustc_test_suite() {\n-        return;\n-    }\n     fn run_tests(\n         config: &compiletest::Config,\n         filter: &Option<String>,\n@@ -216,6 +213,10 @@ fn run_ui_cargo(config: &mut compiletest::Config) {\n         Ok(result)\n     }\n \n+    if cargo::is_rustc_test_suite() {\n+        return;\n+    }\n+\n     config.mode = TestMode::Ui;\n     config.src_base = Path::new(\"tests\").join(\"ui-cargo\").canonicalize().unwrap();\n "}]}