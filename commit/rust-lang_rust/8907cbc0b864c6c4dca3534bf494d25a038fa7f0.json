{"sha": "8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDdjYmMwYjg2NGM2YzRkY2EzNTM0YmY0OTRkMjVhMDM4ZmE3ZjA=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2016-07-13T07:43:33Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2016-07-13T07:43:33Z"}, "message": "Added sign check on Constant f64 PartialEq implementation", "tree": {"sha": "1a9d7b38b09a8aca8dcac3b7c6b0c6e63e20a22f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a9d7b38b09a8aca8dcac3b7c6b0c6e63e20a22f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "html_url": "https://github.com/rust-lang/rust/commit/8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8907cbc0b864c6c4dca3534bf494d25a038fa7f0/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a0ddf31b15de9c4934a977e3083ec823439fcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a0ddf31b15de9c4934a977e3083ec823439fcf", "html_url": "https://github.com/rust-lang/rust/commit/f1a0ddf31b15de9c4934a977e3083ec823439fcf"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "d4ee76590561666cb73fd873248d1bce0c46c5e7", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8907cbc0b864c6c4dca3534bf494d25a038fa7f0/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8907cbc0b864c6c4dca3534bf494d25a038fa7f0/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "patch": "@@ -92,7 +92,8 @@ impl PartialEq for Constant {\n                 // we want `Fw32 == FwAny` and `FwAny == Fw64`, by transitivity we must have\n                 // `Fw32 == Fw64` so don\u2019t compare them\n                 match (ls.parse::<f64>(), rs.parse::<f64>()) {\n-                    (Ok(l), Ok(r)) => l.eq(&r),\n+                    (Ok(l), Ok(r)) => l.eq(&r) &&\n+                        (l.is_sign_positive() == r.is_sign_positive()), // needed for 0.0 != -0.0\n                     _ => false,\n                 }\n             }"}, {"sha": "66452048df4ff37cc111c3bb8e2adef8b777c64f", "filename": "tests/compile-fail/copies.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8907cbc0b864c6c4dca3534bf494d25a038fa7f0/tests%2Fcompile-fail%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8907cbc0b864c6c4dca3534bf494d25a038fa7f0/tests%2Fcompile-fail%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcopies.rs?ref=8907cbc0b864c6c4dca3534bf494d25a038fa7f0", "patch": "@@ -229,6 +229,31 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n         _ => 0,\n     };\n \n+    let _ = if true {\n+        //~^NOTE same as this\n+        0.0\n+    } else { //~ERROR this `if` has identical blocks\n+        0.0\n+    };\n+\n+    let _ = if true {\n+        //~^NOTE same as this\n+        -0.0\n+    } else { //~ERROR this `if` has identical blocks\n+        -0.0\n+    };\n+\n+    let _ = if true {\n+        0.0\n+    } else {\n+        -0.0\n+    };\n+\n+    let _ = match Some(()) {\n+        Some(()) => 0.0,\n+        None => -0.0\n+    };\n+\n     match (Some(42), Some(\"\")) {\n         (Some(a), None) => bar(a),\n         (None, Some(a)) => bar(a), // bindings have different types"}]}