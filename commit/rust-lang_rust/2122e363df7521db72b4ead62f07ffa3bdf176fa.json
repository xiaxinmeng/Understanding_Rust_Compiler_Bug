{"sha": "2122e363df7521db72b4ead62f07ffa3bdf176fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMjJlMzYzZGY3NTIxZGI3MmI0ZWFkNjJmMDdmZmEzYmRmMTc2ZmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-06T01:27:57Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-06T01:31:20Z"}, "message": "Teach rustc to generate type descriptors.", "tree": {"sha": "a3685ba8900b1a6062456dfa122cbd30c2cfe7c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3685ba8900b1a6062456dfa122cbd30c2cfe7c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2122e363df7521db72b4ead62f07ffa3bdf176fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2122e363df7521db72b4ead62f07ffa3bdf176fa", "html_url": "https://github.com/rust-lang/rust/commit/2122e363df7521db72b4ead62f07ffa3bdf176fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2122e363df7521db72b4ead62f07ffa3bdf176fa/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3956b983123cd204b736c7b43ed5f1c7c607717a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3956b983123cd204b736c7b43ed5f1c7c607717a", "html_url": "https://github.com/rust-lang/rust/commit/3956b983123cd204b736c7b43ed5f1c7c607717a"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "528734c4bcfa89df7a446f85b3a04d379c702227", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2122e363df7521db72b4ead62f07ffa3bdf176fa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2122e363df7521db72b4ead62f07ffa3bdf176fa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=2122e363df7521db72b4ead62f07ffa3bdf176fa", "patch": "@@ -322,6 +322,19 @@ fn C_struct(vec[ValueRef] elts) -> ValueRef {\n                              False);\n }\n \n+fn C_tydesc(TypeRef t) -> ValueRef {\n+    ret C_struct(vec(C_null(T_opaque()),        // first_param\n+                     llvm.LLVMSizeOf(t),        // size\n+                     llvm.LLVMAlignOf(t),       // align\n+                     C_null(T_opaque()),        // copy_glue_off\n+                     C_null(T_opaque()),        // drop_glue_off\n+                     C_null(T_opaque()),        // free_glue_off\n+                     C_null(T_opaque()),        // sever_glue_off\n+                     C_null(T_opaque()),        // mark_glue_off\n+                     C_null(T_opaque()),        // obj_drop_glue_off\n+                     C_null(T_opaque())));      // is_stateful\n+}\n+\n fn decl_cdecl_fn(ModuleRef llmod, str name,\n                  vec[TypeRef] inputs, TypeRef output) -> ValueRef {\n     let TypeRef llty = T_fn(inputs, output);"}]}