{"sha": "63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZGJmYjNjMzBjOTY0NDllYjFlMDIzNmI0ZjZmYTVkNjBiZGY2MDk=", "commit": {"author": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-09-19T07:42:15Z"}, "committer": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-09-21T01:48:31Z"}, "message": "Start of moving some functionality to separate files", "tree": {"sha": "31877b936e312c929e7b5a435adc897f57a4c3ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31877b936e312c929e7b5a435adc897f57a4c3ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609", "html_url": "https://github.com/rust-lang/rust/commit/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609/comments", "author": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7467d17bb94d388a056526dd143ce43612296ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7467d17bb94d388a056526dd143ce43612296ce6", "html_url": "https://github.com/rust-lang/rust/commit/7467d17bb94d388a056526dd143ce43612296ce6"}], "stats": {"total": 60, "additions": 34, "deletions": 26}, "files": [{"sha": "1b542818b6fb94d2b6bc3d8876224bd586b8c47b", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 6, "deletions": 26, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-filelength\n-\n /*!\n \n # typeck: check phase\n@@ -82,6 +80,7 @@ mod pat;\n mod place_op;\n mod regionck;\n mod upvar;\n+mod util;\n mod wfcheck;\n pub mod writeback;\n \n@@ -97,7 +96,7 @@ use rustc_errors::ErrorReported;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n-use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, LOCAL_CRATE};\n+use rustc_hir::def_id::{DefId, DefIdMap, LocalDefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::lang_items::LangItem;\n@@ -738,31 +737,12 @@ pub fn check_wf_new(tcx: TyCtxt<'_>) {\n     tcx.hir().krate().par_visit_all_item_likes(&visit);\n }\n \n-fn check_mod_item_types(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n-    tcx.hir().visit_item_likes_in_module(module_def_id, &mut CheckItemTypesVisitor { tcx });\n-}\n-\n-fn typeck_item_bodies(tcx: TyCtxt<'_>, crate_num: CrateNum) {\n-    debug_assert!(crate_num == LOCAL_CRATE);\n-    tcx.par_body_owners(|body_owner_def_id| {\n-        tcx.ensure().typeck(body_owner_def_id);\n-    });\n-}\n-\n-fn check_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n-    wfcheck::check_item_well_formed(tcx, def_id);\n-}\n-\n-fn check_trait_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n-    wfcheck::check_trait_item(tcx, def_id);\n-}\n-\n-fn check_impl_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n-    wfcheck::check_impl_item(tcx, def_id);\n-}\n-\n pub fn provide(providers: &mut Providers) {\n     method::provide(providers);\n+    use util::{\n+        check_impl_item_well_formed, check_item_well_formed, check_mod_item_types,\n+        check_trait_item_well_formed, typeck_item_bodies,\n+    };\n     *providers = Providers {\n         typeck_item_bodies,\n         typeck_const_arg,"}, {"sha": "c215a9c2f909dcee69bedf36e08e8f9f2a274db9", "filename": "compiler/rustc_typeck/src/check/util.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Futil.rs?ref=63dbfb3c30c96449eb1e0236b4f6fa5d60bdf609", "patch": "@@ -0,0 +1,28 @@\n+use rustc_hir::def_id::{CrateNum, LocalDefId, LOCAL_CRATE};\n+\n+use crate::TyCtxt;\n+use super::wfcheck;\n+use crate::check::CheckItemTypesVisitor;\n+\n+pub fn check_mod_item_types(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n+    tcx.hir().visit_item_likes_in_module(module_def_id, &mut CheckItemTypesVisitor { tcx });\n+}\n+\n+pub fn check_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n+    wfcheck::check_item_well_formed(tcx, def_id);\n+}\n+\n+pub fn check_trait_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n+    wfcheck::check_trait_item(tcx, def_id);\n+}\n+\n+pub fn check_impl_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n+    wfcheck::check_impl_item(tcx, def_id);\n+}\n+\n+pub fn typeck_item_bodies(tcx: TyCtxt<'_>, crate_num: CrateNum) {\n+    debug_assert!(crate_num == LOCAL_CRATE);\n+    tcx.par_body_owners(|body_owner_def_id| {\n+        tcx.ensure().typeck(body_owner_def_id);\n+    });\n+}"}]}