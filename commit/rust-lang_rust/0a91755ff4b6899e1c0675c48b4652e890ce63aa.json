{"sha": "0a91755ff4b6899e1c0675c48b4652e890ce63aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhOTE3NTVmZjRiNjg5OWUxYzA2NzVjNDhiNDY1MmU4OTBjZTYzYWE=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2020-10-20T01:48:58Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2020-10-26T01:37:01Z"}, "message": "Properly define va_arg and va_list for aarch64-apple-darwin\n\nFrom [Apple][]:\n\n> Because of these changes, the type `va_list` is an alias for `char*`,\n> and not for the struct type in the generic procedure call standard.\n\nWith this change `/x.py test --stage 1 src/test/ui/abi/variadic-ffi`\npasses.\n\nFixes #78092\n\n[Apple]: https://developer.apple.com/documentation/xcode/writing_arm64_code_for_apple_platforms", "tree": {"sha": "13c2c974b10287de2d427dad4a22692cd5db2106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13c2c974b10287de2d427dad4a22692cd5db2106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a91755ff4b6899e1c0675c48b4652e890ce63aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a91755ff4b6899e1c0675c48b4652e890ce63aa", "html_url": "https://github.com/rust-lang/rust/commit/0a91755ff4b6899e1c0675c48b4652e890ce63aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a91755ff4b6899e1c0675c48b4652e890ce63aa/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ab758e54bd509f75df7a21fd72aa740ac5a4b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ab758e54bd509f75df7a21fd72aa740ac5a4b0", "html_url": "https://github.com/rust-lang/rust/commit/c6ab758e54bd509f75df7a21fd72aa740ac5a4b0"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "b6a0516b8bc9cb1a44f1af9a4ce15a89af539c27", "filename": "compiler/rustc_codegen_llvm/src/va_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a91755ff4b6899e1c0675c48b4652e890ce63aa/compiler%2Frustc_codegen_llvm%2Fsrc%2Fva_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a91755ff4b6899e1c0675c48b4652e890ce63aa/compiler%2Frustc_codegen_llvm%2Fsrc%2Fva_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fva_arg.rs?ref=0a91755ff4b6899e1c0675c48b4652e890ce63aa", "patch": "@@ -184,8 +184,8 @@ pub(super) fn emit_va_arg(\n         \"aarch64\" if target.options.is_like_windows => {\n             emit_ptr_va_arg(bx, addr, target_ty, false, Align::from_bytes(8).unwrap(), false)\n         }\n-        // iOS AArch64\n-        \"aarch64\" if target.target_os == \"ios\" => {\n+        // macOS / iOS AArch64\n+        \"aarch64\" if target.options.is_like_osx => {\n             emit_ptr_va_arg(bx, addr, target_ty, false, Align::from_bytes(8).unwrap(), true)\n         }\n         \"aarch64\" => emit_aapcs_va_arg(bx, addr, target_ty),"}, {"sha": "4b303acfd3bfb922cd5da041e97c600d620d1d46", "filename": "library/core/src/ffi.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0a91755ff4b6899e1c0675c48b4652e890ce63aa/library%2Fcore%2Fsrc%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a91755ff4b6899e1c0675c48b4652e890ce63aa/library%2Fcore%2Fsrc%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi.rs?ref=0a91755ff4b6899e1c0675c48b4652e890ce63aa", "patch": "@@ -62,7 +62,7 @@ impl fmt::Debug for c_void {\n // The name is WIP, using `VaListImpl` for now.\n #[cfg(any(\n     all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"), not(target_arch = \"x86_64\")),\n-    all(target_arch = \"aarch64\", target_os = \"ios\"),\n+    all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n     target_arch = \"wasm32\",\n     target_arch = \"asmjs\",\n     windows\n@@ -85,7 +85,7 @@ pub struct VaListImpl<'f> {\n \n #[cfg(any(\n     all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"), not(target_arch = \"x86_64\")),\n-    all(target_arch = \"aarch64\", target_os = \"ios\"),\n+    all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n     target_arch = \"wasm32\",\n     target_arch = \"asmjs\",\n     windows\n@@ -107,7 +107,11 @@ impl<'f> fmt::Debug for VaListImpl<'f> {\n ///\n /// [AArch64 Procedure Call Standard]:\n /// http://infocenter.arm.com/help/topic/com.arm.doc.ihi0055b/IHI0055B_aapcs64.pdf\n-#[cfg(all(target_arch = \"aarch64\", not(target_os = \"ios\"), not(windows)))]\n+#[cfg(all(\n+    target_arch = \"aarch64\",\n+    not(any(target_os = \"macos\", target_os = \"ios\")),\n+    not(windows)\n+))]\n #[repr(C)]\n #[derive(Debug)]\n #[unstable(\n@@ -181,7 +185,7 @@ pub struct VaList<'a, 'f: 'a> {\n             not(target_arch = \"powerpc\"),\n             not(target_arch = \"x86_64\")\n         ),\n-        all(target_arch = \"aarch64\", target_os = \"ios\"),\n+        all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n         target_arch = \"wasm32\",\n         target_arch = \"asmjs\",\n         windows\n@@ -190,7 +194,7 @@ pub struct VaList<'a, 'f: 'a> {\n \n     #[cfg(all(\n         any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-        any(not(target_arch = \"aarch64\"), not(target_os = \"ios\")),\n+        any(not(target_arch = \"aarch64\"), not(any(target_os = \"macos\", target_os = \"ios\"))),\n         not(target_arch = \"wasm32\"),\n         not(target_arch = \"asmjs\"),\n         not(windows)\n@@ -202,7 +206,7 @@ pub struct VaList<'a, 'f: 'a> {\n \n #[cfg(any(\n     all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"), not(target_arch = \"x86_64\")),\n-    all(target_arch = \"aarch64\", target_os = \"ios\"),\n+    all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n     target_arch = \"wasm32\",\n     target_arch = \"asmjs\",\n     windows\n@@ -223,7 +227,7 @@ impl<'f> VaListImpl<'f> {\n \n #[cfg(all(\n     any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-    any(not(target_arch = \"aarch64\"), not(target_os = \"ios\")),\n+    any(not(target_arch = \"aarch64\"), not(any(target_os = \"macos\", target_os = \"ios\"))),\n     not(target_arch = \"wasm32\"),\n     not(target_arch = \"asmjs\"),\n     not(windows)"}]}