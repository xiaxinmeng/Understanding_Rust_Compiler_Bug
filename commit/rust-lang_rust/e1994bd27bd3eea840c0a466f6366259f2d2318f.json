{"sha": "e1994bd27bd3eea840c0a466f6366259f2d2318f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxOTk0YmQyN2JkM2VlYTg0MGMwYTQ2NmY2MzY2MjU5ZjJkMjMxOGY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-09-27T16:30:26Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-10-02T13:38:57Z"}, "message": "incr.comp.: Make some DepNodes non-anonymous.", "tree": {"sha": "1c0eed8a3c95cbbfbac2c5d7feaf2b66dccc6374", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c0eed8a3c95cbbfbac2c5d7feaf2b66dccc6374"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1994bd27bd3eea840c0a466f6366259f2d2318f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1994bd27bd3eea840c0a466f6366259f2d2318f", "html_url": "https://github.com/rust-lang/rust/commit/e1994bd27bd3eea840c0a466f6366259f2d2318f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1994bd27bd3eea840c0a466f6366259f2d2318f/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0bbf4e1f25fb9f1882bbf0e4c92395f38474fb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0bbf4e1f25fb9f1882bbf0e4c92395f38474fb5", "html_url": "https://github.com/rust-lang/rust/commit/f0bbf4e1f25fb9f1882bbf0e4c92395f38474fb5"}], "stats": {"total": 95, "additions": 36, "deletions": 59}, "files": [{"sha": "14f5aa19b6e3aa5486fce9356cceb10ed57b864e", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 8, "deletions": 46, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=e1994bd27bd3eea840c0a466f6366259f2d2318f", "patch": "@@ -65,7 +65,8 @@ use hir::map::DefPathHash;\n use hir::{HirId, ItemLocalId};\n \n use ich::Fingerprint;\n-use ty::{TyCtxt, Instance, InstanceDef};\n+use ty::{TyCtxt, Instance, InstanceDef, ParamEnvAnd, Ty};\n+use ty::subst::Substs;\n use rustc_data_structures::stable_hasher::{StableHasher, HashStable};\n use ich::StableHashingContext;\n use std::fmt;\n@@ -480,17 +481,17 @@ define_dep_nodes!( <'tcx>\n     [] TypeckBodiesKrate,\n     [] TypeckTables(DefId),\n     [] HasTypeckTables(DefId),\n-    [anon] ConstEval,\n+    [] ConstEval { param_env: ParamEnvAnd<'tcx, (DefId, &'tcx Substs<'tcx>)> },\n     [] SymbolName(DefId),\n     [] InstanceSymbolName { instance: Instance<'tcx> },\n     [] SpecializationGraph(DefId),\n     [] ObjectSafety(DefId),\n \n-    [anon] IsCopy,\n-    [anon] IsSized,\n-    [anon] IsFreeze,\n-    [anon] NeedsDrop,\n-    [anon] Layout,\n+    [] IsCopy { param_env: ParamEnvAnd<'tcx, Ty<'tcx>> },\n+    [] IsSized { param_env: ParamEnvAnd<'tcx, Ty<'tcx>> },\n+    [] IsFreeze { param_env: ParamEnvAnd<'tcx, Ty<'tcx>> },\n+    [] NeedsDrop { param_env: ParamEnvAnd<'tcx, Ty<'tcx>> },\n+    [] Layout { param_env: ParamEnvAnd<'tcx, Ty<'tcx>> },\n \n     // The set of impls for a given trait.\n     [] TraitImpls(DefId),\n@@ -524,10 +525,6 @@ define_dep_nodes!( <'tcx>\n     // trait-select node.\n     [anon] TraitSelect,\n \n-    // For proj. cache, we just keep a list of all def-ids, since it is\n-    // not a hotspot.\n-    [] ProjectionCache { def_ids: DefIdList },\n-\n     [] ParamEnv(DefId),\n     [] DescribeDef(DefId),\n     [] DefSpan(DefId),\n@@ -708,40 +705,6 @@ impl<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> DepNodeParams<'a, 'gcx, 'tcx> for (DefId, De\n     }\n }\n \n-\n-impl<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> DepNodeParams<'a, 'gcx, 'tcx> for (DefIdList,) {\n-    const CAN_RECONSTRUCT_QUERY_KEY: bool = false;\n-\n-    // We actually would not need to specialize the implementation of this\n-    // method but it's faster to combine the hashes than to instantiate a full\n-    // hashing context and stable-hashing state.\n-    fn to_fingerprint(&self, tcx: TyCtxt) -> Fingerprint {\n-        let mut fingerprint = Fingerprint::zero();\n-\n-        for &def_id in self.0.iter() {\n-            let def_path_hash = tcx.def_path_hash(def_id);\n-            fingerprint = fingerprint.combine(def_path_hash.0);\n-        }\n-\n-        fingerprint\n-    }\n-\n-    fn to_debug_str(&self, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> String {\n-        use std::fmt::Write;\n-\n-        let mut s = String::new();\n-        write!(&mut s, \"[\").unwrap();\n-\n-        for &def_id in self.0.iter() {\n-            write!(&mut s, \"{}\", tcx.def_path(def_id).to_string(tcx)).unwrap();\n-        }\n-\n-        write!(&mut s, \"]\").unwrap();\n-\n-        s\n-    }\n-}\n-\n impl<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> DepNodeParams<'a, 'gcx, 'tcx> for (HirId,) {\n     const CAN_RECONSTRUCT_QUERY_KEY: bool = false;\n \n@@ -800,4 +763,3 @@ impl_stable_hash_for!(struct ::dep_graph::WorkProductId {\n     hash\n });\n \n-type DefIdList = Vec<DefId>;"}, {"sha": "3dcbeda94bc0158a8024faca7a9311fd940ab003", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=e1994bd27bd3eea840c0a466f6366259f2d2318f", "patch": "@@ -377,9 +377,9 @@ fn typeck_item_bodies_dep_node<'tcx>(_: CrateNum) -> DepConstructor<'tcx> {\n     DepConstructor::TypeckBodiesKrate\n }\n \n-fn const_eval_dep_node<'tcx>(_: ty::ParamEnvAnd<'tcx, (DefId, &'tcx Substs<'tcx>)>)\n+fn const_eval_dep_node<'tcx>(param_env: ty::ParamEnvAnd<'tcx, (DefId, &'tcx Substs<'tcx>)>)\n                              -> DepConstructor<'tcx> {\n-    DepConstructor::ConstEval\n+    DepConstructor::ConstEval { param_env }\n }\n \n fn mir_keys<'tcx>(_: CrateNum) -> DepConstructor<'tcx> {\n@@ -390,24 +390,24 @@ fn crate_variances<'tcx>(_: CrateNum) -> DepConstructor<'tcx> {\n     DepConstructor::CrateVariances\n }\n \n-fn is_copy_dep_node<'tcx>(_: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n-    DepConstructor::IsCopy\n+fn is_copy_dep_node<'tcx>(param_env: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n+    DepConstructor::IsCopy { param_env }\n }\n \n-fn is_sized_dep_node<'tcx>(_: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n-    DepConstructor::IsSized\n+fn is_sized_dep_node<'tcx>(param_env: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n+    DepConstructor::IsSized { param_env }\n }\n \n-fn is_freeze_dep_node<'tcx>(_: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n-    DepConstructor::IsFreeze\n+fn is_freeze_dep_node<'tcx>(param_env: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n+    DepConstructor::IsFreeze { param_env }\n }\n \n-fn needs_drop_dep_node<'tcx>(_: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n-    DepConstructor::NeedsDrop\n+fn needs_drop_dep_node<'tcx>(param_env: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n+    DepConstructor::NeedsDrop { param_env }\n }\n \n-fn layout_dep_node<'tcx>(_: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n-    DepConstructor::Layout\n+fn layout_dep_node<'tcx>(param_env: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> DepConstructor<'tcx> {\n+    DepConstructor::Layout { param_env }\n }\n \n fn lint_levels_node<'tcx>(_: CrateNum) -> DepConstructor<'tcx> {"}, {"sha": "959f11a89bd01586447f89fcea009fa305988a2e", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=e1994bd27bd3eea840c0a466f6366259f2d2318f", "patch": "@@ -672,7 +672,6 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::NeedsDrop |\n         DepKind::Layout |\n         DepKind::TraitSelect |\n-        DepKind::ProjectionCache |\n         DepKind::ConstEval |\n \n         // We don't have enough information to reconstruct the query key of"}, {"sha": "129b2e77b13aace59a2105e71cc09a3d3e0b10e4", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1994bd27bd3eea840c0a466f6366259f2d2318f/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=e1994bd27bd3eea840c0a466f6366259f2d2318f", "patch": "@@ -1253,6 +1253,22 @@ impl<'tcx, T> ParamEnvAnd<'tcx, T> {\n     }\n }\n \n+impl<'gcx, T> HashStable<StableHashingContext<'gcx>> for ParamEnvAnd<'gcx, T>\n+    where T: HashStable<StableHashingContext<'gcx>>\n+{\n+    fn hash_stable<W: StableHasherResult>(&self,\n+                                          hcx: &mut StableHashingContext<'gcx>,\n+                                          hasher: &mut StableHasher<W>) {\n+        let ParamEnvAnd {\n+            ref param_env,\n+            ref value\n+        } = *self;\n+\n+        param_env.hash_stable(hcx, hasher);\n+        value.hash_stable(hcx, hasher);\n+    }\n+}\n+\n #[derive(Copy, Clone, Debug)]\n pub struct Destructor {\n     /// The def-id of the destructor method"}]}