{"sha": "07c0faa4070b13f7b59134ecd23f5810852319af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YzBmYWE0MDcwYjEzZjdiNTkxMzRlY2QyM2Y1ODEwODUyMzE5YWY=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-02-19T09:49:14Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-02-19T10:46:47Z"}, "message": "Fix an ICE when translating `if loop {} {}`\n\nIn `if loop {} {}`, the `if` is actually unreachable, but we didn't\nhandle that correctly and when trying to translate the `if` we tried to\nbranch on the \"return value\" of the loop expression, which is not an\n`i1` and therefore triggered an LLVM assertion.", "tree": {"sha": "aa7711739ca76b371d5bae168f663fbf25246673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa7711739ca76b371d5bae168f663fbf25246673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07c0faa4070b13f7b59134ecd23f5810852319af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07c0faa4070b13f7b59134ecd23f5810852319af", "html_url": "https://github.com/rust-lang/rust/commit/07c0faa4070b13f7b59134ecd23f5810852319af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07c0faa4070b13f7b59134ecd23f5810852319af/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22992358bc74956f53b1a2ab99ae245cd3ca5550", "url": "https://api.github.com/repos/rust-lang/rust/commits/22992358bc74956f53b1a2ab99ae245cd3ca5550", "html_url": "https://github.com/rust-lang/rust/commit/22992358bc74956f53b1a2ab99ae245cd3ca5550"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "ea549889ffa7e5e3662c2265c31d533c01041839", "filename": "src/librustc_trans/trans/controlflow.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/07c0faa4070b13f7b59134ecd23f5810852319af/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c0faa4070b13f7b59134ecd23f5810852319af/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs?ref=07c0faa4070b13f7b59134ecd23f5810852319af", "patch": "@@ -12,6 +12,7 @@ use llvm::ValueRef;\n use middle::def;\n use middle::lang_items::{PanicFnLangItem, PanicBoundsCheckFnLangItem};\n use trans::base::*;\n+use trans::basic_block::BasicBlock;\n use trans::build::*;\n use trans::callee;\n use trans::cleanup::CleanupMethods;\n@@ -280,6 +281,12 @@ pub fn trans_loop<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n \n     fcx.pop_loop_cleanup_scope(loop_expr.id);\n \n+    // If there are no predecessors for the next block, we just translated an endless loop and the\n+    // next block is unreachable\n+    if BasicBlock(next_bcx_in.llbb).pred_iter().next().is_none() {\n+        Unreachable(next_bcx_in);\n+    }\n+\n     return next_bcx_in;\n }\n "}, {"sha": "15f04df6939811dce2bc9ac603907d710de24ade", "filename": "src/test/compile-fail/if-loop.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/07c0faa4070b13f7b59134ecd23f5810852319af/src%2Ftest%2Fcompile-fail%2Fif-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c0faa4070b13f7b59134ecd23f5810852319af/src%2Ftest%2Fcompile-fail%2Fif-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-loop.rs?ref=07c0faa4070b13f7b59134ecd23f5810852319af", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+#![allow(warnings)]\n+\n+// This used to ICE because the \"if\" being unreachable was not handled correctly\n+fn err() {\n+    if loop {} {}\n+}\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}