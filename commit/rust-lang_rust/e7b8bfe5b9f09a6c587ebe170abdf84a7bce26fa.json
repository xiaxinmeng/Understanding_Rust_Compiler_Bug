{"sha": "e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YjhiZmU1YjlmMDlhNmM1ODdlYmUxNzBhYmRmODRhN2JjZTI2ZmE=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-08T22:02:33Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-21T12:35:28Z"}, "message": "Fix rustdoc", "tree": {"sha": "efa8ef0c68009c72467b7b012d45486d51cea71c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efa8ef0c68009c72467b7b012d45486d51cea71c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa", "html_url": "https://github.com/rust-lang/rust/commit/e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2687985b0e15a954ca0459acfbfd08a14f93eb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2687985b0e15a954ca0459acfbfd08a14f93eb0", "html_url": "https://github.com/rust-lang/rust/commit/c2687985b0e15a954ca0459acfbfd08a14f93eb0"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "dda4a7596a7103fd015e53c37514ad53f94850e0", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=e7b8bfe5b9f09a6c587ebe170abdf84a7bce26fa", "patch": "@@ -21,7 +21,7 @@ use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc::hir::ptr::P;\n use rustc::ty::subst::InternalSubsts;\n-use rustc::ty::{self, TyCtxt, Ty, AdtKind};\n+use rustc::ty::{self, TyCtxt, Ty, AdtKind, Lift};\n use rustc::ty::fold::TypeFolder;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use syntax::ast::{self, Ident};\n@@ -551,7 +551,8 @@ impl<'tcx> Clean<WherePredicate> for ty::ProjectionPredicate<'tcx> {\n \n impl<'tcx> Clean<Type> for ty::ProjectionTy<'tcx> {\n     fn clean(&self, cx: &DocContext<'_>) -> Type {\n-        let trait_ = match self.trait_ref(cx.tcx).clean(cx) {\n+        let lifted = self.lift_to_tcx(cx.tcx).unwrap();\n+        let trait_ = match lifted.trait_ref(cx.tcx).clean(cx) {\n             GenericBound::TraitBound(t, _) => t.trait_,\n             GenericBound::Outlives(_) => panic!(\"cleaning a trait got a lifetime\"),\n         };"}]}