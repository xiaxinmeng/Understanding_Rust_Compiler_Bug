{"sha": "1875c797721a84b3a4cbb77d4e4bd0a367ff22c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NzVjNzk3NzIxYTg0YjNhNGNiYjc3ZDRlNGJkMGEzNjdmZjIyYzM=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-06-27T11:15:12Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-06-27T11:15:12Z"}, "message": "more LocalDefId in ty::context", "tree": {"sha": "3cfa3bfeabc17fcf5d7a8eb486995a646d1fdfe9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cfa3bfeabc17fcf5d7a8eb486995a646d1fdfe9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3", "html_url": "https://github.com/rust-lang/rust/commit/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4e7b4798405917560a224b6e9f2eab07524e0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e7b4798405917560a224b6e9f2eab07524e0b7", "html_url": "https://github.com/rust-lang/rust/commit/a4e7b4798405917560a224b6e9f2eab07524e0b7"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "d881a529cad3846509ba26948d9a1b9b8e2c59ca", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=1875c797721a84b3a4cbb77d4e4bd0a367ff22c3", "patch": "@@ -26,7 +26,8 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n                 );\n                 let anon_reg_sup = self.tcx().is_suitable_region(sup_r)?;\n                 debug!(\"try_report_static_impl_trait: anon_reg_sup={:?}\", anon_reg_sup);\n-                let fn_returns = self.tcx().return_type_impl_or_dyn_traits(anon_reg_sup.def_id);\n+                let fn_returns =\n+                    self.tcx().return_type_impl_or_dyn_traits(anon_reg_sup.def_id.expect_local());\n                 if fn_returns.is_empty() {\n                     return None;\n                 }"}, {"sha": "fb89e0e41d94d8ec906d066fbe2d7106d714ed3d", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=1875c797721a84b3a4cbb77d4e4bd0a367ff22c3", "patch": "@@ -1436,8 +1436,11 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     /// Given a `DefId` for an `fn`, return all the `dyn` and `impl` traits in its return type.\n-    pub fn return_type_impl_or_dyn_traits(&self, scope_def_id: DefId) -> Vec<&'tcx hir::Ty<'tcx>> {\n-        let hir_id = self.hir().as_local_hir_id(scope_def_id.expect_local());\n+    pub fn return_type_impl_or_dyn_traits(\n+        &self,\n+        scope_def_id: LocalDefId,\n+    ) -> Vec<&'tcx hir::Ty<'tcx>> {\n+        let hir_id = self.hir().as_local_hir_id(scope_def_id);\n         let hir_output = match self.hir().get(hir_id) {\n             Node::Item(hir::Item {\n                 kind:\n@@ -1480,9 +1483,9 @@ impl<'tcx> TyCtxt<'tcx> {\n         v.0\n     }\n \n-    pub fn return_type_impl_trait(&self, scope_def_id: DefId) -> Option<(Ty<'tcx>, Span)> {\n+    pub fn return_type_impl_trait(&self, scope_def_id: LocalDefId) -> Option<(Ty<'tcx>, Span)> {\n         // HACK: `type_of_def_id()` will fail on these (#55796), so return `None`.\n-        let hir_id = self.hir().as_local_hir_id(scope_def_id.expect_local());\n+        let hir_id = self.hir().as_local_hir_id(scope_def_id);\n         match self.hir().get(hir_id) {\n             Node::Item(item) => {\n                 match item.kind {"}, {"sha": "d639a0f69d451e464db0f05c8a39ce2a065d0463", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1875c797721a84b3a4cbb77d4e4bd0a367ff22c3/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=1875c797721a84b3a4cbb77d4e4bd0a367ff22c3", "patch": "@@ -583,7 +583,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                 .infcx\n                 .tcx\n                 .is_suitable_region(f)\n-                .map(|r| r.def_id)\n+                .map(|r| r.def_id.expect_local())\n                 .map(|id| self.infcx.tcx.return_type_impl_trait(id))\n                 .unwrap_or(None)\n             {"}]}