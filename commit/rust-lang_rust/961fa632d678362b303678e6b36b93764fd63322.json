{"sha": "961fa632d678362b303678e6b36b93764fd63322", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MWZhNjMyZDY3ODM2MmIzMDM2NzhlNmIzNmI5Mzc2NGZkNjMzMjI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-03T15:19:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-03T15:19:37Z"}, "message": "Rollup merge of #83780 - matklad:doc-error-message, r=JohnTitor\n\nDocument \"standard\" conventions for error messages\n\nThese are currently documented in the API guidelines:\n\nhttps://rust-lang.github.io/api-guidelines/interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err\n\nI think it makes sense to uplift this guideline (in a milder form) into\nstd docs. Printing and producing errors is something that even\nnon-expert users do frequently, so it is useful to give at least some\nindication of what a typical error message looks like.", "tree": {"sha": "8c319acd07038c423d6801610009070424026c06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c319acd07038c423d6801610009070424026c06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/961fa632d678362b303678e6b36b93764fd63322", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgaIeJCRBK7hj4Ov3rIwAAdHIIAA442Kb0uVENoNSnjjgfYUMA\nEUu50dxSQQaOOnSrknvOVX7MHI+4Dh6J9LiA4V0IGPDgcxa715ZIC59OPRybZn/M\ngtZ9AP63arSf2p9RmGhddE2dIW8oGmdBSTFiJnLYh9pJh+9Y3NxEDTcmcDPH7ng0\nyM1K1sNI2k3Abv9qXVCYowTMbeSnb7oHb5UCh2Qf3GLLasZN+2z42uLXeUwoc//y\ne3+NY5lPmxJtreTnd4yVFqTXhhVLE75gRSW3ufEpCxJ99dOz5PlbH3nGZsfIAIdY\n/ihcSuoGRI3Zxra1hIcv2KKPYlVErL0ujxfkj5d4dUhAf7iekjMghh+0Sczy98M=\n=dlkx\n-----END PGP SIGNATURE-----\n", "payload": "tree 8c319acd07038c423d6801610009070424026c06\nparent 0daec04d657141e2eb2cea1675dd3e44624a8671\nparent 5547d927467ef3398c3f509f0212ba26645a18da\nauthor Yuki Okushi <jtitor@2k36.org> 1617463177 +0900\ncommitter GitHub <noreply@github.com> 1617463177 +0900\n\nRollup merge of #83780 - matklad:doc-error-message, r=JohnTitor\n\nDocument \"standard\" conventions for error messages\n\nThese are currently documented in the API guidelines:\n\nhttps://rust-lang.github.io/api-guidelines/interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err\n\nI think it makes sense to uplift this guideline (in a milder form) into\nstd docs. Printing and producing errors is something that even\nnon-expert users do frequently, so it is useful to give at least some\nindication of what a typical error message looks like.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/961fa632d678362b303678e6b36b93764fd63322", "html_url": "https://github.com/rust-lang/rust/commit/961fa632d678362b303678e6b36b93764fd63322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/961fa632d678362b303678e6b36b93764fd63322/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0daec04d657141e2eb2cea1675dd3e44624a8671", "url": "https://api.github.com/repos/rust-lang/rust/commits/0daec04d657141e2eb2cea1675dd3e44624a8671", "html_url": "https://github.com/rust-lang/rust/commit/0daec04d657141e2eb2cea1675dd3e44624a8671"}, {"sha": "5547d927467ef3398c3f509f0212ba26645a18da", "url": "https://api.github.com/repos/rust-lang/rust/commits/5547d927467ef3398c3f509f0212ba26645a18da", "html_url": "https://github.com/rust-lang/rust/commit/5547d927467ef3398c3f509f0212ba26645a18da"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "14c2f961d32619a4422f8ea7af162cb84cf1ec61", "filename": "library/std/src/error.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/961fa632d678362b303678e6b36b93764fd63322/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/961fa632d678362b303678e6b36b93764fd63322/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=961fa632d678362b303678e6b36b93764fd63322", "patch": "@@ -33,15 +33,22 @@ use crate::string;\n use crate::sync::Arc;\n \n /// `Error` is a trait representing the basic expectations for error values,\n-/// i.e., values of type `E` in [`Result<T, E>`]. Errors must describe\n-/// themselves through the [`Display`] and [`Debug`] traits, and may provide\n-/// cause chain information:\n+/// i.e., values of type `E` in [`Result<T, E>`].\n ///\n-/// [`Error::source()`] is generally used when errors cross\n-/// \"abstraction boundaries\". If one module must report an error that is caused\n-/// by an error from a lower-level module, it can allow accessing that error\n-/// via [`Error::source()`]. This makes it possible for the high-level\n-/// module to provide its own errors while also revealing some of the\n+/// Errors must describe themselves through the [`Display`] and [`Debug`]\n+/// traits. Error messages are typically concise lowercase sentences without\n+/// trailing punctuation:\n+///\n+/// ```\n+/// let err = \"NaN\".parse::<u32>().unwrap_err();\n+/// assert_eq!(err.to_string(), \"invalid digit found in string\");\n+/// ```\n+///\n+/// Errors may provide cause chain information. [`Error::source()`] is generally\n+/// used when errors cross \"abstraction boundaries\". If one module must report\n+/// an error that is caused by an error from a lower-level module, it can allow\n+/// accessing that error via [`Error::source()`]. This makes it possible for the\n+/// high-level module to provide its own errors while also revealing some of the\n /// implementation for debugging via `source` chains.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Error: Debug + Display {"}]}