{"sha": "39fcfa8ccb4605e307eed4c7515b58c5edc97c74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZmNmYThjY2I0NjA1ZTMwN2VlZDRjNzUxNWI1OGM1ZWRjOTdjNzQ=", "commit": {"author": {"name": "Emerentius", "email": "emerentius@arcor.de", "date": "2018-07-09T22:00:51Z"}, "committer": {"name": "Emerentius", "email": "emerentius@arcor.de", "date": "2018-07-09T23:44:27Z"}, "message": "step_by: leave time of item skip unspecified\n\nthis gives us some leeway when optimizing", "tree": {"sha": "3baafb9ee5e7054df9861e7c56ba5bcd15721ced", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3baafb9ee5e7054df9861e7c56ba5bcd15721ced"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39fcfa8ccb4605e307eed4c7515b58c5edc97c74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39fcfa8ccb4605e307eed4c7515b58c5edc97c74", "html_url": "https://github.com/rust-lang/rust/commit/39fcfa8ccb4605e307eed4c7515b58c5edc97c74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39fcfa8ccb4605e307eed4c7515b58c5edc97c74/comments", "author": {"login": "Emerentius", "id": 9992929, "node_id": "MDQ6VXNlcjk5OTI5Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/9992929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emerentius", "html_url": "https://github.com/Emerentius", "followers_url": "https://api.github.com/users/Emerentius/followers", "following_url": "https://api.github.com/users/Emerentius/following{/other_user}", "gists_url": "https://api.github.com/users/Emerentius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emerentius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emerentius/subscriptions", "organizations_url": "https://api.github.com/users/Emerentius/orgs", "repos_url": "https://api.github.com/users/Emerentius/repos", "events_url": "https://api.github.com/users/Emerentius/events{/privacy}", "received_events_url": "https://api.github.com/users/Emerentius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Emerentius", "id": 9992929, "node_id": "MDQ6VXNlcjk5OTI5Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/9992929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emerentius", "html_url": "https://github.com/Emerentius", "followers_url": "https://api.github.com/users/Emerentius/followers", "following_url": "https://api.github.com/users/Emerentius/following{/other_user}", "gists_url": "https://api.github.com/users/Emerentius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emerentius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emerentius/subscriptions", "organizations_url": "https://api.github.com/users/Emerentius/orgs", "repos_url": "https://api.github.com/users/Emerentius/repos", "events_url": "https://api.github.com/users/Emerentius/events{/privacy}", "received_events_url": "https://api.github.com/users/Emerentius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "html_url": "https://github.com/rust-lang/rust/commit/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "c0681619bf8b584ce9f71997a9e8b3e103a48221", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/39fcfa8ccb4605e307eed4c7515b58c5edc97c74/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39fcfa8ccb4605e307eed4c7515b58c5edc97c74/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=39fcfa8ccb4605e307eed4c7515b58c5edc97c74", "patch": "@@ -271,9 +271,30 @@ pub trait Iterator {\n     /// Creates an iterator starting at the same point, but stepping by\n     /// the given amount at each iteration.\n     ///\n-    /// Note that it will always return the first element of the iterator,\n+    /// Note 1: The first element of the iterator will always be returned,\n     /// regardless of the step given.\n     ///\n+    /// Note 2: The time at which ignored elements are pulled is not fixed.\n+    /// `StepBy` behaves like the sequence `next(), nth(step-1), nth(step-1), \u2026`,\n+    /// but is also free to behave like the sequence\n+    /// `advance_n_and_return_first(step), advance_n_and_return_first(step), \u2026`\n+    /// Which way is used may change for some iterators for performance reasons.\n+    /// The second way will advance the iterator earlier and may consume more items.\n+    ///\n+    /// `advance_n_and_return_first` is the equivalent of:\n+    /// ```\n+    /// fn advance_n_and_return_first<I>(iter: &mut I, total_step: usize) -> Option<I::Item>\n+    /// where\n+    ///     I: Iterator,\n+    /// {\n+    ///     let next = iter.next();\n+    ///     if total_step > 1 {\n+    ///         iter.nth(total_step-2);\n+    ///     }\n+    ///     next\n+    /// }\n+    /// ```\n+    ///\n     /// # Panics\n     ///\n     /// The method will panic if the given step is `0`."}]}