{"sha": "b9445311462549fdc22e5ca0732be60c1b2a5d32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NDQ1MzExNDYyNTQ5ZmRjMjJlNWNhMDczMmJlNjBjMWIyYTVkMzI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-15T19:53:07Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-26T19:45:46Z"}, "message": "Update codegen-units tests", "tree": {"sha": "81dde9c295058bc70e802ccef38e83964c1e104f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81dde9c295058bc70e802ccef38e83964c1e104f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9445311462549fdc22e5ca0732be60c1b2a5d32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9445311462549fdc22e5ca0732be60c1b2a5d32", "html_url": "https://github.com/rust-lang/rust/commit/b9445311462549fdc22e5ca0732be60c1b2a5d32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9445311462549fdc22e5ca0732be60c1b2a5d32/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "859302302100d21443315e5ffa1faf6dbeb3eaaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/859302302100d21443315e5ffa1faf6dbeb3eaaf", "html_url": "https://github.com/rust-lang/rust/commit/859302302100d21443315e5ffa1faf6dbeb3eaaf"}], "stats": {"total": 56, "additions": 23, "deletions": 33}, "files": [{"sha": "662519067d78e77cb1923dcbc10805c4156ce72a", "filename": "src/test/codegen-units/partitioning/extern-drop-glue.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b9445311462549fdc22e5ca0732be60c1b2a5d32/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9445311462549fdc22e5ca0732be60c1b2a5d32/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs?ref=b9445311462549fdc22e5ca0732be60c1b2a5d32", "patch": "@@ -2,23 +2,23 @@\n \n // We specify -Z incremental here because we want to test the partitioning for\n // incremental compilation\n+// We specify opt-level=0 because `drop_in_place` is `Internal` when optimizing\n // compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/extern-drop-glue\n-// compile-flags:-Zinline-in-all-cgus\n+// compile-flags:-Zinline-in-all-cgus -Copt-level=0\n \n #![allow(dead_code)]\n-#![crate_type=\"rlib\"]\n+#![crate_type = \"rlib\"]\n \n // aux-build:cgu_extern_drop_glue.rs\n extern crate cgu_extern_drop_glue;\n \n-//~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<cgu_extern_drop_glue::Struct[0]> @@ extern_drop_glue[Internal] extern_drop_glue-mod1[Internal]\n+//~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<cgu_extern_drop_glue::Struct[0]> @@ extern_drop_glue-fallback.cgu[External]\n \n struct LocalStruct(cgu_extern_drop_glue::Struct);\n \n //~ MONO_ITEM fn extern_drop_glue::user[0] @@ extern_drop_glue[External]\n-pub fn user()\n-{\n-    //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<extern_drop_glue::LocalStruct[0]> @@ extern_drop_glue[Internal]\n+pub fn user() {\n+    //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<extern_drop_glue::LocalStruct[0]> @@ extern_drop_glue-fallback.cgu[External]\n     let _ = LocalStruct(cgu_extern_drop_glue::Struct(0));\n }\n \n@@ -28,9 +28,8 @@ pub mod mod1 {\n     struct LocalStruct(cgu_extern_drop_glue::Struct);\n \n     //~ MONO_ITEM fn extern_drop_glue::mod1[0]::user[0] @@ extern_drop_glue-mod1[External]\n-    pub fn user()\n-    {\n-        //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<extern_drop_glue::mod1[0]::LocalStruct[0]> @@ extern_drop_glue-mod1[Internal]\n+    pub fn user() {\n+        //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<extern_drop_glue::mod1[0]::LocalStruct[0]> @@ extern_drop_glue-fallback.cgu[External]\n         let _ = LocalStruct(cgu_extern_drop_glue::Struct(0));\n     }\n }"}, {"sha": "14a50bf579806ffde6101c713d6e057a7e2dbcf4", "filename": "src/test/codegen-units/partitioning/local-drop-glue.rs", "status": "modified", "additions": 15, "deletions": 24, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b9445311462549fdc22e5ca0732be60c1b2a5d32/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9445311462549fdc22e5ca0732be60c1b2a5d32/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs?ref=b9445311462549fdc22e5ca0732be60c1b2a5d32", "patch": "@@ -1,54 +1,45 @@\n // ignore-tidy-linelength\n // We specify -Z incremental here because we want to test the partitioning for\n // incremental compilation\n+// We specify opt-level=0 because `drop_in_place` is `Internal` when optimizing\n // compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/local-drop-glue\n-// compile-flags:-Zinline-in-all-cgus\n+// compile-flags:-Zinline-in-all-cgus -Copt-level=0\n \n #![allow(dead_code)]\n-#![crate_type=\"rlib\"]\n+#![crate_type = \"rlib\"]\n \n-//~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<local_drop_glue::Struct[0]> @@ local_drop_glue[Internal] local_drop_glue-mod1[Internal]\n+//~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<local_drop_glue::Struct[0]> @@ local_drop_glue-fallback.cgu[External]\n struct Struct {\n-    _a: u32\n+    _a: u32,\n }\n \n impl Drop for Struct {\n-    //~ MONO_ITEM fn local_drop_glue::{{impl}}[0]::drop[0] @@ local_drop_glue[External]\n+    //~ MONO_ITEM fn local_drop_glue::{{impl}}[0]::drop[0] @@ local_drop_glue-fallback.cgu[External]\n     fn drop(&mut self) {}\n }\n \n-//~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<local_drop_glue::Outer[0]> @@ local_drop_glue[Internal]\n+//~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<local_drop_glue::Outer[0]> @@ local_drop_glue-fallback.cgu[External]\n struct Outer {\n-    _a: Struct\n+    _a: Struct,\n }\n \n //~ MONO_ITEM fn local_drop_glue::user[0] @@ local_drop_glue[External]\n-pub fn user()\n-{\n-    let _ = Outer {\n-        _a: Struct {\n-            _a: 0\n-        }\n-    };\n+pub fn user() {\n+    let _ = Outer { _a: Struct { _a: 0 } };\n }\n \n-pub mod mod1\n-{\n+pub mod mod1 {\n     use super::Struct;\n \n-    //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<local_drop_glue::mod1[0]::Struct2[0]> @@ local_drop_glue-mod1[Internal]\n+    //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<local_drop_glue::mod1[0]::Struct2[0]> @@ local_drop_glue-fallback.cgu[External]\n     struct Struct2 {\n         _a: Struct,\n-        //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<(u32, local_drop_glue::Struct[0])> @@ local_drop_glue-mod1[Internal]\n+        //~ MONO_ITEM fn core::ptr[0]::drop_in_place[0]<(u32, local_drop_glue::Struct[0])> @@ local_drop_glue-fallback.cgu[Internal]\n         _b: (u32, Struct),\n     }\n \n     //~ MONO_ITEM fn local_drop_glue::mod1[0]::user[0] @@ local_drop_glue-mod1[External]\n-    pub fn user()\n-    {\n-        let _ = Struct2 {\n-            _a: Struct { _a: 0 },\n-            _b: (0, Struct { _a: 0 }),\n-        };\n+    pub fn user() {\n+        let _ = Struct2 { _a: Struct { _a: 0 }, _b: (0, Struct { _a: 0 }) };\n     }\n }"}]}