{"sha": "d832149a1f16fe83163455da560bb665a672d4d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MzIxNDlhMWYxNmZlODMxNjM0NTVkYTU2MGJiNjY1YTY3MmQ0ZDc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-19T17:20:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-21T08:27:01Z"}, "message": "start chapter about interners", "tree": {"sha": "a69f5818b2829e96c5f0e3585bbe8290f82cd585", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a69f5818b2829e96c5f0e3585bbe8290f82cd585"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d832149a1f16fe83163455da560bb665a672d4d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d832149a1f16fe83163455da560bb665a672d4d7", "html_url": "https://github.com/rust-lang/rust/commit/d832149a1f16fe83163455da560bb665a672d4d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d832149a1f16fe83163455da560bb665a672d4d7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb8dfab21c85f79b97cfd8e5cf3cff88c2e6d269", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8dfab21c85f79b97cfd8e5cf3cff88c2e6d269", "html_url": "https://github.com/rust-lang/rust/commit/cb8dfab21c85f79b97cfd8e5cf3cff88c2e6d269"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "de51f7216c6d59ad926352a93faa5542b5abec36", "filename": "guide.md", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d832149a1f16fe83163455da560bb665a672d4d7/guide.md", "raw_url": "https://github.com/rust-lang/rust/raw/d832149a1f16fe83163455da560bb665a672d4d7/guide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/guide.md?ref=d832149a1f16fe83163455da560bb665a672d4d7", "patch": "@@ -351,11 +351,37 @@ declarations.\n [`submodules_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/module_tree.rs#L41)\n \n We store the resulting modules in a `Vec`-based indexed arena. The indices in\n-the arena becomes module identifiers.\n-\n+the arena becomes module ids. And this brings us to the next topic:\n+assigning ids in the general case.\n \n ## Location Interner pattern\n \n+One way to assign ids is how we've dealt with modules: collect all items into a\n+single array in some specific order and use index in the array as an id. The\n+main drawback of this approach is that ids are not stable: adding a new item can\n+shift ids of all other items. This works for modules, because adding a module is\n+a comparatively rare operation, but would be less convenient for, for example\n+functions.\n+\n+Another solution here is positional ids: we can identify a function as \"the\n+function with name `foo` in a ModuleId(92) module\". Such locations are stable:\n+adding a new function to the module (unless it is also named `foo`) does not\n+change the location. However, such \"id\" ceases to be a `Copy` integer and in\n+general can become pretty large if we account for nesting (third parameter of\n+the foo function of the bar impl in the baz module).\n+\n+[`LocationInterner`] allows us to combine benefits of positional and numeric\n+ids. It is a bidirectional append only map between locations and consecutive\n+integers which can \"intern\" a location and return an integer id back. Salsa\n+database we use includes a couple of [interners]. How to \"garbage collect\"\n+unused locations is an open question.\n+\n+[`LocationInterner`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_db/src/loc2id.rs#L65-L71\n+[interners]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/db.rs#L22-L23\n+\n+For example, we use `LocationInterner` to assign ids to defs: functions,\n+structs, enums, etc.\n+\n ## Macros and recursive locations\n \n ## Name resolution"}]}