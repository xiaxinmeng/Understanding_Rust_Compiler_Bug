{"sha": "de6f430140a49e3ecf34dcb914326bb5b9789772", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNmY0MzAxNDBhNDllM2VjZjM0ZGNiOTE0MzI2YmI1Yjk3ODk3NzI=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-05-06T08:15:40Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-05-31T19:03:46Z"}, "message": "Fix panics on pattern_arena.borrow with ugly cloning", "tree": {"sha": "1f493d2e613d3aaa03ae2f3b70b563937f476378", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f493d2e613d3aaa03ae2f3b70b563937f476378"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de6f430140a49e3ecf34dcb914326bb5b9789772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de6f430140a49e3ecf34dcb914326bb5b9789772", "html_url": "https://github.com/rust-lang/rust/commit/de6f430140a49e3ecf34dcb914326bb5b9789772", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de6f430140a49e3ecf34dcb914326bb5b9789772/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "975109051caf05de6d166779589e299d9aca9cd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/975109051caf05de6d166779589e299d9aca9cd5", "html_url": "https://github.com/rust-lang/rust/commit/975109051caf05de6d166779589e299d9aca9cd5"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "ddf6b1198f7e9560200fa33310091779eff00c68", "filename": "crates/hir_ty/src/diagnostics/pattern/deconstruct_pat.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/de6f430140a49e3ecf34dcb914326bb5b9789772/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fpattern%2Fdeconstruct_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de6f430140a49e3ecf34dcb914326bb5b9789772/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fpattern%2Fdeconstruct_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fpattern%2Fdeconstruct_pat.rs?ref=de6f430140a49e3ecf34dcb914326bb5b9789772", "patch": "@@ -837,20 +837,19 @@ impl Fields {\n         pat: PatId,\n         cx: &MatchCheckCtx<'_>,\n     ) -> Self {\n-        // TODO: these alocations are so unfortunate (+1 for switching to references)\n-        match cx.pattern_arena.borrow()[pat].kind.as_ref() {\n+        // TODO: these alocations and clones are so unfortunate (+1 for switching to references)\n+        let mut arena = cx.pattern_arena.borrow_mut();\n+        match arena[pat].kind.as_ref() {\n             PatKind::Deref { subpattern } => {\n                 assert_eq!(self.len(), 1);\n-                let subpattern = cx.pattern_arena.borrow_mut().alloc(subpattern.clone());\n-                Fields::from_single_pattern(subpattern)\n+                let subpattern = subpattern.clone();\n+                Fields::from_single_pattern(arena.alloc(subpattern))\n             }\n             PatKind::Leaf { subpatterns } | PatKind::Variant { subpatterns, .. } => {\n-                let subpatterns = subpatterns.iter().map(|field_pat| {\n-                    (\n-                        field_pat.field,\n-                        cx.pattern_arena.borrow_mut().alloc(field_pat.pattern.clone()),\n-                    )\n-                });\n+                let subpatterns = subpatterns.clone();\n+                let subpatterns = subpatterns\n+                    .iter()\n+                    .map(|field_pat| (field_pat.field, arena.alloc(field_pat.pattern.clone())));\n                 self.replace_with_fieldpats(subpatterns)\n             }\n "}, {"sha": "3bfb7afed0404b3f047f9c61e52558cbdb662bb1", "filename": "crates/hir_ty/src/diagnostics/pattern/usefulness.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/de6f430140a49e3ecf34dcb914326bb5b9789772/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fpattern%2Fusefulness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de6f430140a49e3ecf34dcb914326bb5b9789772/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fpattern%2Fusefulness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fpattern%2Fusefulness.rs?ref=de6f430140a49e3ecf34dcb914326bb5b9789772", "patch": "@@ -94,12 +94,12 @@ impl PatIdExt for PatId {\n     fn expand_or_pat(self, cx: &MatchCheckCtx<'_>) -> Vec<Self> {\n         fn expand(pat: PatId, vec: &mut Vec<PatId>, mut pat_arena: &mut PatternArena) {\n             if let PatKind::Or { pats } = pat_arena[pat].kind.as_ref() {\n-                // for pat in pats {\n-                //     // TODO(iDawer): Ugh, I want to go back to references (PatId -> &Pat)\n-                //     let pat = pat_arena.alloc(pat.clone());\n-                //     expand(pat, vec, pat_arena);\n-                // }\n-                todo!()\n+                let pats = pats.clone();\n+                for pat in pats {\n+                    // TODO(iDawer): Ugh, I want to go back to references (PatId -> &Pat)\n+                    let pat = pat_arena.alloc(pat.clone());\n+                    expand(pat, vec, pat_arena);\n+                }\n             } else {\n                 vec.push(pat)\n             }"}]}