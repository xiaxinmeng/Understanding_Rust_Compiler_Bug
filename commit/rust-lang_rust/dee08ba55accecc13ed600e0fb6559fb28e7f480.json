{"sha": "dee08ba55accecc13ed600e0fb6559fb28e7f480", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZTA4YmE1NWFjY2VjYzEzZWQ2MDBlMGZiNjU1OWZiMjhlN2Y0ODA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-14T20:16:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-14T20:16:03Z"}, "message": "Rollup merge of #61797 - Thomasdezeeuw:stablise-weak_ptr_eq, r=RalfJung\n\nStabilise weak_ptr_eq\n\nImplemented in #55987.\n\nCloses #55981.", "tree": {"sha": "2344d7c63d885ba7907b6e02f2e2370e9ee702da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2344d7c63d885ba7907b6e02f2e2370e9ee702da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dee08ba55accecc13ed600e0fb6559fb28e7f480", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdfUqECRBK7hj4Ov3rIwAAdHIIABOsabFpURhsaZkhA4vCXvb6\nZ6sH11udJgpwnLZk15qrygvZN9VtUnzh4mNuQmE6z25GUi4GS/bmlwqrGVQaO8OZ\nDtiE/ncbNRe2PxBBEEEPm9/0Utw1VIxWV8fVxd+1z4QIpBCbE2pnjLm0KoqMtYtq\nh3+HzvWLLnIwVF6TXkHTmxV5hMyK9tUeKXePv6SVg7IkUdEer41JSa1de1yDTvWm\nZzD79QtlTTCfeCnOu72dYnGY+3+4jJu63prc5RsmD3Nh1B6iSQO5/970dlBV14iU\ndujIaNIM9TnFF5GqfgNuRW1+SAHcQCXBaZDt97lmmu4j9RQBZ7HoLO/Y3LCIB0s=\n=VF4w\n-----END PGP SIGNATURE-----\n", "payload": "tree 2344d7c63d885ba7907b6e02f2e2370e9ee702da\nparent ca3766e2e58f462a20922e42c821a37eaf0e13db\nparent 307804a00d191b6f15d1a1a5b98fbae5ea6593b0\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1568492163 +0200\ncommitter GitHub <noreply@github.com> 1568492163 +0200\n\nRollup merge of #61797 - Thomasdezeeuw:stablise-weak_ptr_eq, r=RalfJung\n\nStabilise weak_ptr_eq\n\nImplemented in #55987.\n\nCloses #55981.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dee08ba55accecc13ed600e0fb6559fb28e7f480", "html_url": "https://github.com/rust-lang/rust/commit/dee08ba55accecc13ed600e0fb6559fb28e7f480", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dee08ba55accecc13ed600e0fb6559fb28e7f480/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca3766e2e58f462a20922e42c821a37eaf0e13db", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca3766e2e58f462a20922e42c821a37eaf0e13db", "html_url": "https://github.com/rust-lang/rust/commit/ca3766e2e58f462a20922e42c821a37eaf0e13db"}, {"sha": "307804a00d191b6f15d1a1a5b98fbae5ea6593b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/307804a00d191b6f15d1a1a5b98fbae5ea6593b0", "html_url": "https://github.com/rust-lang/rust/commit/307804a00d191b6f15d1a1a5b98fbae5ea6593b0"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "f234ac5ebe51bcd2628df98ccbe5d86199eb5c9d", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dee08ba55accecc13ed600e0fb6559fb28e7f480/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dee08ba55accecc13ed600e0fb6559fb28e7f480/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=dee08ba55accecc13ed600e0fb6559fb28e7f480", "patch": "@@ -1832,8 +1832,9 @@ impl<T: ?Sized> Weak<T> {\n         }\n     }\n \n-    /// Returns `true` if the two `Weak`s point to the same value (not just values\n-    /// that compare as equal).\n+    /// Returns `true` if the two `Weak`s point to the same value (not just\n+    /// values that compare as equal), or if both don't point to any value\n+    /// (because they were created with `Weak::new()`).\n     ///\n     /// # Notes\n     ///\n@@ -1843,7 +1844,6 @@ impl<T: ?Sized> Weak<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_ptr_eq)]\n     /// use std::rc::Rc;\n     ///\n     /// let first_rc = Rc::new(5);\n@@ -1861,7 +1861,6 @@ impl<T: ?Sized> Weak<T> {\n     /// Comparing `Weak::new`.\n     ///\n     /// ```\n-    /// #![feature(weak_ptr_eq)]\n     /// use std::rc::{Rc, Weak};\n     ///\n     /// let first = Weak::new();\n@@ -1873,7 +1872,7 @@ impl<T: ?Sized> Weak<T> {\n     /// assert!(!first.ptr_eq(&third));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"weak_ptr_eq\", issue = \"55981\")]\n+    #[stable(feature = \"weak_ptr_eq\", since = \"1.39.0\")]\n     pub fn ptr_eq(&self, other: &Self) -> bool {\n         self.ptr.as_ptr() == other.ptr.as_ptr()\n     }"}, {"sha": "45f98162e4cd57fa3e8798f31b2ee6f76025a68c", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dee08ba55accecc13ed600e0fb6559fb28e7f480/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dee08ba55accecc13ed600e0fb6559fb28e7f480/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=dee08ba55accecc13ed600e0fb6559fb28e7f480", "patch": "@@ -1550,19 +1550,18 @@ impl<T: ?Sized> Weak<T> {\n         }\n     }\n \n-    /// Returns `true` if the two `Weak`s point to the same value (not just values\n-    /// that compare as equal).\n+    /// Returns `true` if the two `Weak`s point to the same value (not just\n+    /// values that compare as equal), or if both don't point to any value\n+    /// (because they were created with `Weak::new()`).\n     ///\n     /// # Notes\n     ///\n     /// Since this compares pointers it means that `Weak::new()` will equal each\n     /// other, even though they don't point to any value.\n     ///\n-    ///\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(weak_ptr_eq)]\n     /// use std::sync::Arc;\n     ///\n     /// let first_rc = Arc::new(5);\n@@ -1580,7 +1579,6 @@ impl<T: ?Sized> Weak<T> {\n     /// Comparing `Weak::new`.\n     ///\n     /// ```\n-    /// #![feature(weak_ptr_eq)]\n     /// use std::sync::{Arc, Weak};\n     ///\n     /// let first = Weak::new();\n@@ -1592,7 +1590,7 @@ impl<T: ?Sized> Weak<T> {\n     /// assert!(!first.ptr_eq(&third));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"weak_ptr_eq\", issue = \"55981\")]\n+    #[stable(feature = \"weak_ptr_eq\", since = \"1.39.0\")]\n     pub fn ptr_eq(&self, other: &Self) -> bool {\n         self.ptr.as_ptr() == other.ptr.as_ptr()\n     }"}]}