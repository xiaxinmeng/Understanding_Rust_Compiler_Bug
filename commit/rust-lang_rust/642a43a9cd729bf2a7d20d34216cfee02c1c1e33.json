{"sha": "642a43a9cd729bf2a7d20d34216cfee02c1c1e33", "node_id": "C_kwDOAAsO6NoAKDY0MmE0M2E5Y2Q3MjliZjJhN2QyMGQzNDIxNmNmZWUwMmMxYzFlMzM", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-06T03:23:40Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-12T20:10:10Z"}, "message": "Test crate loading error stderr\n\nAnd remove E0464 from test-exemption list, since it now has a full test.", "tree": {"sha": "09ea3937b95ebe03d79ed8d32b841070d419ad7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09ea3937b95ebe03d79ed8d32b841070d419ad7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/642a43a9cd729bf2a7d20d34216cfee02c1c1e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/642a43a9cd729bf2a7d20d34216cfee02c1c1e33", "html_url": "https://github.com/rust-lang/rust/commit/642a43a9cd729bf2a7d20d34216cfee02c1c1e33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/642a43a9cd729bf2a7d20d34216cfee02c1c1e33/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6792c6a8510640dcdf7b6e82dc9c35d39dbf4226", "url": "https://api.github.com/repos/rust-lang/rust/commits/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226", "html_url": "https://github.com/rust-lang/rust/commit/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "8e01862746f53d0c4285c2cc3a40b34550f0f18e", "filename": "src/test/ui/crate-loading/crateresolve1.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/642a43a9cd729bf2a7d20d34216cfee02c1c1e33/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642a43a9cd729bf2a7d20d34216cfee02c1c1e33/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.rs?ref=642a43a9cd729bf2a7d20d34216cfee02c1c1e33", "patch": "@@ -1,10 +1,13 @@\n-// dont-check-compiler-stderr\n // aux-build:crateresolve1-1.rs\n // aux-build:crateresolve1-2.rs\n // aux-build:crateresolve1-3.rs\n-// error-pattern:multiple matching crates for `crateresolve1`\n+\n+// normalize-stderr-test: \"\\.nll/\" -> \"/\"\n+// normalize-stderr-test: \"\\\\\\?\\\\\" -> \"\"\n+// normalize-stderr-test: \"libcrateresolve1-([123])\\.[a-z]+\" -> \"libcrateresolve1-$1.somelib\"\n \n extern crate crateresolve1;\n+//~^ ERROR multiple matching crates for `crateresolve1`\n \n fn main() {\n }"}, {"sha": "1cae13922d6be73ae9897710abdaf8260b1bfd64", "filename": "src/test/ui/crate-loading/crateresolve1.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/642a43a9cd729bf2a7d20d34216cfee02c1c1e33/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/642a43a9cd729bf2a7d20d34216cfee02c1c1e33/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.stderr?ref=642a43a9cd729bf2a7d20d34216cfee02c1c1e33", "patch": "@@ -0,0 +1,13 @@\n+error[E0464]: multiple matching crates for `crateresolve1`\n+  --> $DIR/crateresolve1.rs:9:1\n+   |\n+LL | extern crate crateresolve1;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: candidates:\n+           crate `crateresolve1`: $TEST_BUILD_DIR/crate-loading/crateresolve1/auxiliary/libcrateresolve1-1.somelib\n+           crate `crateresolve1`: $TEST_BUILD_DIR/crate-loading/crateresolve1/auxiliary/libcrateresolve1-2.somelib\n+           crate `crateresolve1`: $TEST_BUILD_DIR/crate-loading/crateresolve1/auxiliary/libcrateresolve1-3.somelib\n+\n+error: aborting due to previous error\n+"}, {"sha": "6d802cdcd03a6ab31e5a245458472e7badaab83d", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/642a43a9cd729bf2a7d20d34216cfee02c1c1e33/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642a43a9cd729bf2a7d20d34216cfee02c1c1e33/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=642a43a9cd729bf2a7d20d34216cfee02c1c1e33", "patch": "@@ -10,8 +10,8 @@ use regex::Regex;\n \n // A few of those error codes can't be tested but all the others can and *should* be tested!\n const EXEMPTED_FROM_TEST: &[&str] = &[\n-    \"E0227\", \"E0279\", \"E0280\", \"E0313\", \"E0377\", \"E0461\", \"E0462\", \"E0464\", \"E0465\", \"E0476\",\n-    \"E0514\", \"E0519\", \"E0523\", \"E0554\", \"E0640\", \"E0717\", \"E0729\",\n+    \"E0227\", \"E0279\", \"E0280\", \"E0313\", \"E0377\", \"E0461\", \"E0462\", \"E0465\", \"E0476\", \"E0514\",\n+    \"E0519\", \"E0523\", \"E0554\", \"E0640\", \"E0717\", \"E0729\",\n ];\n \n // Some error codes don't have any tests apparently..."}]}