{"sha": "95e1a39c048b922754b3bc0fc5d305259a56289f", "node_id": "C_kwDOAAsO6NoAKDk1ZTFhMzljMDQ4YjkyMjc1NGIzYmMwZmM1ZDMwNTI1OWE1NjI4OWY", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2022-11-23T09:25:01Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-11-25T09:28:44Z"}, "message": "correctly intern `List<Const<'tcx>>`", "tree": {"sha": "abf96f227ae1cb7f4ef687a65abf4372f7782883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abf96f227ae1cb7f4ef687a65abf4372f7782883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95e1a39c048b922754b3bc0fc5d305259a56289f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95e1a39c048b922754b3bc0fc5d305259a56289f", "html_url": "https://github.com/rust-lang/rust/commit/95e1a39c048b922754b3bc0fc5d305259a56289f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95e1a39c048b922754b3bc0fc5d305259a56289f/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a496aab03d2e3ba9ce1bb1bd0b791c83513d2cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a496aab03d2e3ba9ce1bb1bd0b791c83513d2cb", "html_url": "https://github.com/rust-lang/rust/commit/5a496aab03d2e3ba9ce1bb1bd0b791c83513d2cb"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8cf33a5ca0bb9f0ba745b4fe231a5835e18a9455", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/95e1a39c048b922754b3bc0fc5d305259a56289f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95e1a39c048b922754b3bc0fc5d305259a56289f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=95e1a39c048b922754b3bc0fc5d305259a56289f", "patch": "@@ -137,6 +137,7 @@ pub struct CtxtInterners<'tcx> {\n     // Specifically use a speedy hash algorithm for these hash sets, since\n     // they're accessed quite often.\n     type_: InternedSet<'tcx, WithStableHash<TyS<'tcx>>>,\n+    const_lists: InternedSet<'tcx, List<ty::Const<'tcx>>>,\n     substs: InternedSet<'tcx, InternalSubsts<'tcx>>,\n     canonical_var_infos: InternedSet<'tcx, List<CanonicalVarInfo<'tcx>>>,\n     region: InternedSet<'tcx, RegionKind<'tcx>>,\n@@ -157,6 +158,7 @@ impl<'tcx> CtxtInterners<'tcx> {\n         CtxtInterners {\n             arena,\n             type_: Default::default(),\n+            const_lists: Default::default(),\n             substs: Default::default(),\n             region: Default::default(),\n             poly_existential_predicates: Default::default(),\n@@ -2261,6 +2263,7 @@ macro_rules! slice_interners {\n }\n \n slice_interners!(\n+    const_lists: _intern_const_list(Const<'tcx>),\n     substs: _intern_substs(GenericArg<'tcx>),\n     canonical_var_infos: _intern_canonical_var_infos(CanonicalVarInfo<'tcx>),\n     poly_existential_predicates:\n@@ -2722,7 +2725,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     pub fn intern_const_list(self, cs: &[ty::Const<'tcx>]) -> &'tcx List<ty::Const<'tcx>> {\n-        if cs.is_empty() { List::empty() } else { List::from_arena(self.arena, cs) }\n+        if cs.is_empty() { List::empty() } else { self._intern_const_list(cs) }\n     }\n \n     pub fn intern_type_list(self, ts: &[Ty<'tcx>]) -> &'tcx List<Ty<'tcx>> {"}]}