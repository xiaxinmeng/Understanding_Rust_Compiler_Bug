{"sha": "0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMzVlNGVhMTkwN2U0ZGU5NTI3ZjZjNGNkN2JmNDFhYzRjOGRhZTI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-19T14:24:08Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-19T14:27:21Z"}, "message": "Set correct linkage for statics", "tree": {"sha": "038410cd01da9dd0f8a300b0d14c487a712324e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/038410cd01da9dd0f8a300b0d14c487a712324e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2", "html_url": "https://github.com/rust-lang/rust/commit/0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edbb5730ea966be9d810a3ec46db8245dce51b4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/edbb5730ea966be9d810a3ec46db8245dce51b4e", "html_url": "https://github.com/rust-lang/rust/commit/edbb5730ea966be9d810a3ec46db8245dce51b4e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "960097f2d1372b0644139dd68c3d4b349d03e674", "filename": "src/constant.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=0e35e4ea1907e4de9527f6c4cd7bf41ac4c8dae2", "patch": "@@ -268,8 +268,11 @@ fn define_all_allocs(\n                     _ => bug!(\"static const eval returned {:#?}\", const_),\n                 };\n \n-                // FIXME set correct linkage\n-                let data_id = data_id_for_static(tcx, module, def_id, Linkage::Export);\n+                let data_id = data_id_for_static(tcx, module, def_id, if tcx.is_reachable_non_generic(def_id) {\n+                    Linkage::Export\n+                } else {\n+                    Linkage::Local\n+                });\n                 (data_id, alloc)\n             }\n         };"}]}