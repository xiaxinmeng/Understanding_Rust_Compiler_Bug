{"sha": "29177864c353efd98182b02f5593e87183d184af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MTc3ODY0YzM1M2VmZDk4MTgyYjAyZjU1OTNlODcxODNkMTg0YWY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T14:37:37Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T14:37:37Z"}, "message": "Add tests for returning by reference\n\nIssue #918", "tree": {"sha": "cc6baa5e0cfa311e0c79b709fe4968305bcbe152", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc6baa5e0cfa311e0c79b709fe4968305bcbe152"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29177864c353efd98182b02f5593e87183d184af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29177864c353efd98182b02f5593e87183d184af", "html_url": "https://github.com/rust-lang/rust/commit/29177864c353efd98182b02f5593e87183d184af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29177864c353efd98182b02f5593e87183d184af/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3abe3671bd39a359de3421b062b98d3adaa1942d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3abe3671bd39a359de3421b062b98d3adaa1942d", "html_url": "https://github.com/rust-lang/rust/commit/3abe3671bd39a359de3421b062b98d3adaa1942d"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "2a6d05f23d4a25be49028778749f4f300e23bbea", "filename": "src/test/compile-fail/ret-by-reference-from-temporary.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-from-temporary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-from-temporary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-from-temporary.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,9 @@\n+// error-pattern:a reference binding can't be rooted in a temporary\n+\n+fn f(a: {x: int}) -> &int {\n+    ret a.x;\n+}\n+\n+fn main() {\n+    let &_a = f({x: 4});\n+}"}, {"sha": "5e0df4fc3cdf2937536be6f2ea0aa5315e32f47b", "filename": "src/test/compile-fail/ret-by-reference-local-value.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-local-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-local-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-local-value.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,8 @@\n+// error-pattern:can not return a reference to a function-local value\n+\n+fn f(a: {mutable x: int}) -> &int {\n+    let x = {y: 4};\n+    ret x.y;\n+}\n+\n+fn main() {}"}, {"sha": "a40b9aeba2dec6d4241f323320acb17d6b9196eb", "filename": "src/test/compile-fail/ret-by-reference-mutable-field.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-mutable-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-mutable-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-mutable-field.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:can not return a reference to a mutable field\n+\n+fn f(a: {mutable x: int}) -> &int {\n+    ret a.x;\n+}\n+\n+fn main() {}"}, {"sha": "f6cd81308e943a1235ea8c1b0efdfafc13c7ebc9", "filename": "src/test/compile-fail/ret-by-reference-safety-1.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-safety-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-safety-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-safety-1.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,12 @@\n+// error-pattern:taking the value of x will invalidate reference a\n+\n+fn f(a: {mutable x: int}) -> &!int {\n+    ret a.x;\n+}\n+\n+fn main() {\n+    let x = {mutable x: 4};\n+    let &a = f(x);\n+    x;\n+    a;\n+}"}, {"sha": "546511419c130fde18eb177d8851b64ee62801cc", "filename": "src/test/compile-fail/ret-by-reference-safety-2.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-safety-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-safety-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-safety-2.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,12 @@\n+// error-pattern:overwriting x will invalidate reference a\n+\n+fn f(a: {x: {mutable x: int}}) -> &{mutable x: int} {\n+    ret a.x;\n+}\n+\n+fn main() {\n+    let x = {x: {mutable x: 4}};\n+    let &a = f(x);\n+    x = {x: {mutable x: 5}};\n+    a;\n+}"}, {"sha": "a99dfc1c8dd94f7fb4b14a5168b61097ec12e8eb", "filename": "src/test/compile-fail/ret-by-reference-specify-param.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-specify-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-specify-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-specify-param.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:must specify referenced parameter\n+\n+fn f(a: int, b: int) -> &int {\n+    ret a;\n+}\n+\n+fn main() {}"}, {"sha": "5a571cf3ecc8b660bcc53dcac52192f09e7ffb5d", "filename": "src/test/compile-fail/ret-by-reference-temporary.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-temporary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-temporary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-temporary.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:can not return a reference to a temporary\n+\n+fn f(a: int) -> &int {\n+    ret 10;\n+}\n+\n+fn main() {}"}, {"sha": "41014bb17d76ea4ff67762bb01f35bb5482c0c68", "filename": "src/test/compile-fail/ret-by-reference-wrong-param.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-wrong-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Fcompile-fail%2Fret-by-reference-wrong-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fret-by-reference-wrong-param.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:can not return a reference to the wrong parameter\n+\n+fn f(a: int, b: int) -> &1 int {\n+    ret a;\n+}\n+\n+fn main() {}"}, {"sha": "6f098160e6ae19461727241ef7d93791652f8bd3", "filename": "src/test/run-pass/ret-by-reference.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Frun-pass%2Fret-by-reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29177864c353efd98182b02f5593e87183d184af/src%2Ftest%2Frun-pass%2Fret-by-reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fret-by-reference.rs?ref=29177864c353efd98182b02f5593e87183d184af", "patch": "@@ -0,0 +1,23 @@\n+tag option<T> { some(T); none; }\n+\n+fn get<@T>(opt: option<T>) -> &T {\n+    alt opt {\n+      some(x) { ret x; }\n+    }\n+}\n+\n+fn get_mut(a: {mutable x: @int}, _b: int) -> &!0 @int {\n+    ret a.x;\n+}\n+\n+fn main() {\n+    let x = some(@50);\n+    let &y = get(x);\n+    assert *y == 50;\n+    assert get(some(10)) == 10;\n+\n+    let y = {mutable x: @50};\n+    let &box = get_mut(y, 4);\n+    assert *box == 50;\n+    assert *get_mut({mutable x: @70}, 5) == 70;\n+}"}]}