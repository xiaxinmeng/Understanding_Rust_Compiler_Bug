{"sha": "5507512eafdbe3fd8ad42e608c2feb6b16a82b49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MDc1MTJlYWZkYmUzZmQ4YWQ0MmU2MDhjMmZlYjZiMTZhODJiNDk=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-21T23:43:28Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-22T12:23:59Z"}, "message": "Replace stripped derives with whitespace in process_macro_input", "tree": {"sha": "901f6fb7d7a8bcc812689be05ba8029052b6cf58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/901f6fb7d7a8bcc812689be05ba8029052b6cf58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5507512eafdbe3fd8ad42e608c2feb6b16a82b49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5507512eafdbe3fd8ad42e608c2feb6b16a82b49", "html_url": "https://github.com/rust-lang/rust/commit/5507512eafdbe3fd8ad42e608c2feb6b16a82b49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5507512eafdbe3fd8ad42e608c2feb6b16a82b49/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cd171cd949f6c82a9ce50645f6ca68b1249c4c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cd171cd949f6c82a9ce50645f6ca68b1249c4c8", "html_url": "https://github.com/rust-lang/rust/commit/8cd171cd949f6c82a9ce50645f6ca68b1249c4c8"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "0ad48a470b2953c42a8aa07437ea623afce99d15", "filename": "crates/hir_expand/src/input.rs", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5507512eafdbe3fd8ad42e608c2feb6b16a82b49/crates%2Fhir_expand%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5507512eafdbe3fd8ad42e608c2feb6b16a82b49/crates%2Fhir_expand%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Finput.rs?ref=5507512eafdbe3fd8ad42e608c2feb6b16a82b49", "patch": "@@ -40,7 +40,7 @@ fn remove_derives_up_to(item: ast::Item, attr_index: usize) -> ast::Item {\n             attr.path().and_then(|path| path.as_single_segment()).and_then(|seg| seg.name_ref())\n         {\n             if name.as_name() == name![derive] {\n-                attr.syntax().detach();\n+                replace_attr(&item, &attr);\n             }\n         }\n     }\n@@ -54,10 +54,14 @@ fn remove_attr_invoc(item: ast::Item, attr_index: usize) -> ast::Item {\n         .attrs()\n         .nth(attr_index)\n         .unwrap_or_else(|| panic!(\"cannot find attribute #{}\", attr_index));\n+    replace_attr(&item, &attr);\n+    item\n+}\n+\n+fn replace_attr(item: &ast::Item, attr: &ast::Attr) {\n     let syntax_index = attr.syntax().index();\n     let ws = make::tokens::whitespace(&\" \".repeat(u32::from(attr.syntax().text().len()) as usize));\n     item.syntax().splice_children(syntax_index..syntax_index + 1, vec![ws.into()]);\n-    item\n }\n \n #[cfg(test)]\n@@ -78,7 +82,9 @@ mod tests {\n         assert_eq!(items.len(), 1);\n \n         let item = remove_derives_up_to(items.pop().unwrap(), attr);\n-        expect.assert_eq(&item.to_string());\n+        let res: String =\n+            item.syntax().children_with_tokens().map(|e| format!(\"{:?}\\n\", e)).collect();\n+        expect.assert_eq(&res);\n     }\n \n     #[test]\n@@ -95,13 +101,20 @@ struct A {\n }\n         \"#,\n             expect![[r#\"\n-#[allow(unused)]\n-\n-\n-#[derive(Clone)]\n-struct A {\n-    bar: u32\n-}\"#]],\n+                Node(ATTR@0..16)\n+                Token(WHITESPACE@16..17 \"\\n\")\n+                Token(WHITESPACE@17..32 \"               \")\n+                Token(WHITESPACE@32..33 \"\\n\")\n+                Token(WHITESPACE@33..49 \"                \")\n+                Token(WHITESPACE@49..50 \"\\n\")\n+                Node(ATTR@50..66)\n+                Token(WHITESPACE@66..67 \"\\n\")\n+                Token(STRUCT_KW@67..73 \"struct\")\n+                Token(WHITESPACE@73..74 \" \")\n+                Node(NAME@74..75)\n+                Token(WHITESPACE@75..76 \" \")\n+                Node(RECORD_FIELD_LIST@76..92)\n+            \"#]],\n         );\n     }\n }"}]}