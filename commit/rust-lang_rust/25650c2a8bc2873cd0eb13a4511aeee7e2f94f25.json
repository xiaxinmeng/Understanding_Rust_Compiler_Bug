{"sha": "25650c2a8bc2873cd0eb13a4511aeee7e2f94f25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NjUwYzJhOGJjMjg3M2NkMGViMTNhNDUxMWFlZWU3ZTJmOTRmMjU=", "commit": {"author": {"name": "cassiersg", "email": "cassiersg@users.noreply.github.com", "date": "2015-08-26T22:12:33Z"}, "committer": {"name": "cassiersg", "email": "cassiersg@users.noreply.github.com", "date": "2015-08-26T22:12:33Z"}, "message": "Merge pull request #206 from posix4e/usage\n\nFix usage of the tool. Provide -h and --help", "tree": {"sha": "dac827ffd9ff6fbaf924c8579f1823243549b7be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dac827ffd9ff6fbaf924c8579f1823243549b7be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25650c2a8bc2873cd0eb13a4511aeee7e2f94f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25650c2a8bc2873cd0eb13a4511aeee7e2f94f25", "html_url": "https://github.com/rust-lang/rust/commit/25650c2a8bc2873cd0eb13a4511aeee7e2f94f25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25650c2a8bc2873cd0eb13a4511aeee7e2f94f25/comments", "author": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0957f3101ed77dd3b5f4c23ffaa0ea83fe7b3e91", "url": "https://api.github.com/repos/rust-lang/rust/commits/0957f3101ed77dd3b5f4c23ffaa0ea83fe7b3e91", "html_url": "https://github.com/rust-lang/rust/commit/0957f3101ed77dd3b5f4c23ffaa0ea83fe7b3e91"}, {"sha": "39538a0c772694930185178eb6aa9bf83cc47c60", "url": "https://api.github.com/repos/rust-lang/rust/commits/39538a0c772694930185178eb6aa9bf83cc47c60", "html_url": "https://github.com/rust-lang/rust/commit/39538a0c772694930185178eb6aa9bf83cc47c60"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "eda3eba107cd8a8ae6e1641365b5c361552ef9e1", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/25650c2a8bc2873cd0eb13a4511aeee7e2f94f25/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25650c2a8bc2873cd0eb13a4511aeee7e2f94f25/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=25650c2a8bc2873cd0eb13a4511aeee7e2f94f25", "patch": "@@ -67,22 +67,40 @@ fn main() {\n     std::process::exit(0);\n }\n \n+fn usage<S: Into<String>>(reason: S) {\n+    print!(\"{}\\n\\r usage: rustfmt [-h Help] [--write-mode=[true/false]] <file_name>\", reason.into());\n+    std::process::exit(1);\n+}\n+\n fn determine_params<I>(args: I) -> (Vec<String>, WriteMode)\n     where I: Iterator<Item = String>\n {\n-    let prefix = \"--write-mode=\";\n+    let arg_prefix = \"-\";\n+    let write_mode_prefix = \"--write-mode=\";\n+    let help_mode = \"-h\";\n+    let long_help_mode = \"--help\";\n     let mut write_mode = WriteMode::Replace;\n \n     // The NewFile option currently isn't supported because it requires another\n     // parameter, but it can be added later.\n-    let args = args.filter(|arg| {\n-        if arg.starts_with(prefix) {\n-            write_mode = FromStr::from_str(&arg[prefix.len()..]).expect(\"Unrecognized write mode\");\n+    let args:Vec<String> = args.filter(|arg| {\n+        if arg.starts_with(write_mode_prefix) {\n+            write_mode = FromStr::from_str(&arg[write_mode_prefix.len()..]).expect(\"Unrecognized write mode\");\n+            false\n+        } else if arg.starts_with(help_mode) || arg.starts_with(long_help_mode) {\n+            usage(\"\");\n+            false\n+        } else if arg.starts_with(arg_prefix) {\n+            usage(\"Invalid argument\");\n             false\n         } else {\n             true\n         }\n     }).collect();\n+    if args.len() < 2 {\n+        usage(\"Please provide a file to be formatted\");\n+    }\n+\n \n     (args, write_mode)\n }"}]}