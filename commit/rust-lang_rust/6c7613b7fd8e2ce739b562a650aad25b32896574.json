{"sha": "6c7613b7fd8e2ce739b562a650aad25b32896574", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNzYxM2I3ZmQ4ZTJjZTczOWI1NjJhNjUwYWFkMjViMzI4OTY1NzQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-29T19:04:32Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-29T19:39:36Z"}, "message": "Add semantic test for rest patterns.", "tree": {"sha": "282f55e14cea48ef18bd698d541931aefb7dd651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/282f55e14cea48ef18bd698d541931aefb7dd651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c7613b7fd8e2ce739b562a650aad25b32896574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c7613b7fd8e2ce739b562a650aad25b32896574", "html_url": "https://github.com/rust-lang/rust/commit/6c7613b7fd8e2ce739b562a650aad25b32896574", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c7613b7fd8e2ce739b562a650aad25b32896574/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15bc63e8bfd575c709a45f7c6845acfe0f3fdc92", "url": "https://api.github.com/repos/rust-lang/rust/commits/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92", "html_url": "https://github.com/rust-lang/rust/commit/15bc63e8bfd575c709a45f7c6845acfe0f3fdc92"}], "stats": {"total": 270, "additions": 270, "deletions": 0}, "files": [{"sha": "36a45a3ccdc4b04257e422a426d404c2c478550f", "filename": "src/test/ui/pattern/rest-pat-semantic-disallowed.rs", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/6c7613b7fd8e2ce739b562a650aad25b32896574/src%2Ftest%2Fui%2Fpattern%2Frest-pat-semantic-disallowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7613b7fd8e2ce739b562a650aad25b32896574/src%2Ftest%2Fui%2Fpattern%2Frest-pat-semantic-disallowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Frest-pat-semantic-disallowed.rs?ref=6c7613b7fd8e2ce739b562a650aad25b32896574", "patch": "@@ -0,0 +1,82 @@\n+// Here we test that rest patterns, i.e. `..`, are not allowed\n+// outside of slice (+ ident patterns witin those), tuple,\n+// and tuple struct patterns and that duplicates are caught in these contexts.\n+\n+#![feature(slice_patterns, box_patterns)]\n+\n+fn main() {}\n+\n+macro_rules! mk_pat {\n+    () => { .. } //~ ERROR `..` patterns are not allowed here\n+}\n+\n+fn rest_patterns() {\n+    let mk_pat!();\n+\n+    // Top level:\n+    fn foo(..: u8) {} //~ ERROR `..` patterns are not allowed here\n+    let ..;  //~ ERROR `..` patterns are not allowed here\n+\n+    // Box patterns:\n+    let box ..;  //~ ERROR `..` patterns are not allowed here\n+\n+    // In or-patterns:\n+    match 1 {\n+        1 | .. => {} //~ ERROR `..` patterns are not allowed here\n+    }\n+\n+    // Ref patterns:\n+    let &..; //~ ERROR `..` patterns are not allowed here\n+    let &mut ..; //~ ERROR `..` patterns are not allowed here\n+\n+    // Ident patterns:\n+    let x @ ..; //~ ERROR `..` patterns are not allowed here\n+    let ref x @ ..; //~ ERROR `..` patterns are not allowed here\n+    let ref mut x @ ..; //~ ERROR `..` patterns are not allowed here\n+\n+    // Tuple:\n+    let (..): (u8,); // OK.\n+    let (..,): (u8,); // OK.\n+    let (\n+        ..,\n+        .., //~ ERROR `..` can only be used once per tuple pattern\n+        .. //~ ERROR `..` can only be used once per tuple pattern\n+    ): (u8, u8, u8);\n+    let (\n+        ..,\n+        x,\n+        .. //~ ERROR `..` can only be used once per tuple pattern\n+    ): (u8, u8, u8);\n+\n+    struct A(u8, u8, u8);\n+\n+    // Tuple struct (same idea as for tuple patterns):\n+    let A(..); // OK.\n+    let A(..,); // OK.\n+    let A(\n+        ..,\n+        .., //~ ERROR `..` can only be used once per tuple struct pattern\n+        .. //~ ERROR `..` can only be used once per tuple struct pattern\n+    );\n+    let A(\n+        ..,\n+        x,\n+        .. //~ ERROR `..` can only be used once per tuple struct pattern\n+    );\n+\n+    // Array/Slice:\n+    let [..]: &[u8]; // OK.\n+    let [..,]: &[u8]; // OK.\n+    let [\n+        ..,\n+        .., //~ ERROR `..` can only be used once per slice pattern\n+        .. //~ ERROR `..` can only be used once per slice pattern\n+    ]: &[u8];\n+    let [\n+        ..,\n+        ref x @ .., //~ ERROR `..` can only be used once per slice pattern\n+        ref mut y @ .., //~ ERROR `..` can only be used once per slice pattern\n+        (ref z @ ..), //~ ERROR `..` patterns are not allowed here\n+        .. //~ ERROR `..` can only be used once per slice pattern\n+    ]: &[u8];\n+}"}, {"sha": "826f76b356cf1684dec31bbb005166d9fdac2832", "filename": "src/test/ui/pattern/rest-pat-semantic-disallowed.stderr", "status": "added", "additions": 188, "deletions": 0, "changes": 188, "blob_url": "https://github.com/rust-lang/rust/blob/6c7613b7fd8e2ce739b562a650aad25b32896574/src%2Ftest%2Fui%2Fpattern%2Frest-pat-semantic-disallowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c7613b7fd8e2ce739b562a650aad25b32896574/src%2Ftest%2Fui%2Fpattern%2Frest-pat-semantic-disallowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Frest-pat-semantic-disallowed.stderr?ref=6c7613b7fd8e2ce739b562a650aad25b32896574", "patch": "@@ -0,0 +1,188 @@\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:10:13\n+   |\n+LL |     () => { .. }\n+   |             ^^\n+...\n+LL |     let mk_pat!();\n+   |         --------- in this macro invocation\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:18:9\n+   |\n+LL |     let ..;\n+   |         ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:21:13\n+   |\n+LL |     let box ..;\n+   |             ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:25:13\n+   |\n+LL |         1 | .. => {}\n+   |             ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:29:10\n+   |\n+LL |     let &..;\n+   |          ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:30:14\n+   |\n+LL |     let &mut ..;\n+   |              ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:33:13\n+   |\n+LL |     let x @ ..;\n+   |             ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:34:17\n+   |\n+LL |     let ref x @ ..;\n+   |                 ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:35:21\n+   |\n+LL |     let ref mut x @ ..;\n+   |                     ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` can only be used once per tuple pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:42:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ..,\n+   |         ^^ can only be used once per tuple pattern\n+\n+error: `..` can only be used once per tuple pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:43:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ..,\n+LL |         ..\n+   |         ^^ can only be used once per tuple pattern\n+\n+error: `..` can only be used once per tuple pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:48:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         x,\n+LL |         ..\n+   |         ^^ can only be used once per tuple pattern\n+\n+error: `..` can only be used once per tuple struct pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:58:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ..,\n+   |         ^^ can only be used once per tuple struct pattern\n+\n+error: `..` can only be used once per tuple struct pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:59:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ..,\n+LL |         ..\n+   |         ^^ can only be used once per tuple struct pattern\n+\n+error: `..` can only be used once per tuple struct pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:64:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         x,\n+LL |         ..\n+   |         ^^ can only be used once per tuple struct pattern\n+\n+error: `..` can only be used once per slice pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:72:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ..,\n+   |         ^^ can only be used once per slice pattern\n+\n+error: `..` can only be used once per slice pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:73:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ..,\n+LL |         ..\n+   |         ^^ can only be used once per slice pattern\n+\n+error: `..` can only be used once per slice pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:77:17\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ref x @ ..,\n+   |                 ^^ can only be used once per slice pattern\n+\n+error: `..` can only be used once per slice pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:78:21\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+LL |         ref x @ ..,\n+LL |         ref mut y @ ..,\n+   |                     ^^ can only be used once per slice pattern\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:79:18\n+   |\n+LL |         (ref z @ ..),\n+   |                  ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: `..` can only be used once per slice pattern\n+  --> $DIR/rest-pat-semantic-disallowed.rs:80:9\n+   |\n+LL |         ..,\n+   |         -- previously used here\n+...\n+LL |         ..\n+   |         ^^ can only be used once per slice pattern\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/rest-pat-semantic-disallowed.rs:17:12\n+   |\n+LL |     fn foo(..: u8) {}\n+   |            ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error: aborting due to 22 previous errors\n+"}]}