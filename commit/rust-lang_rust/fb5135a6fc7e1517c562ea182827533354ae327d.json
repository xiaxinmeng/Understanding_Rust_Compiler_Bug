{"sha": "fb5135a6fc7e1517c562ea182827533354ae327d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNTEzNWE2ZmM3ZTE1MTdjNTYyZWExODI4Mjc1MzMzNTRhZTMyN2Q=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-14T16:48:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-14T16:48:17Z"}, "message": "prettier miri backtrace printing", "tree": {"sha": "be684a4999461408d3c4439ceaff53a43ba0a007", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be684a4999461408d3c4439ceaff53a43ba0a007"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb5135a6fc7e1517c562ea182827533354ae327d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb5135a6fc7e1517c562ea182827533354ae327d", "html_url": "https://github.com/rust-lang/rust/commit/fb5135a6fc7e1517c562ea182827533354ae327d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb5135a6fc7e1517c562ea182827533354ae327d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57a7c85f93d78b507c3779944b2978c617f91c5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/57a7c85f93d78b507c3779944b2978c617f91c5d", "html_url": "https://github.com/rust-lang/rust/commit/57a7c85f93d78b507c3779944b2978c617f91c5d"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "e1b22c64ed69c37206cb6762a7be15b881c4f59e", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fb5135a6fc7e1517c562ea182827533354ae327d/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb5135a6fc7e1517c562ea182827533354ae327d/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=fb5135a6fc7e1517c562ea182827533354ae327d", "patch": "@@ -191,16 +191,23 @@ fn print_backtrace(backtrace: &mut Backtrace) -> String {\n     write!(trace_text, \"backtrace frames: {}\\n\", backtrace.frames().len()).unwrap();\n     'frames: for (i, frame) in backtrace.frames().iter().enumerate() {\n         if frame.symbols().is_empty() {\n-            write!(trace_text, \"{}: no symbols\\n\", i).unwrap();\n+            write!(trace_text, \"  {}: no symbols\\n\", i).unwrap();\n         }\n+        let mut first = true;\n         for symbol in frame.symbols() {\n-            write!(trace_text, \"{}: \", i).unwrap();\n+            if first {\n+                write!(trace_text, \"  {}: \", i).unwrap();\n+                first = false;\n+            } else {\n+                let len = i.to_string().len();\n+                write!(trace_text, \"  {}  \", \" \".repeat(len)).unwrap();\n+            }\n             if let Some(name) = symbol.name() {\n                 write!(trace_text, \"{}\\n\", name).unwrap();\n             } else {\n                 write!(trace_text, \"<unknown>\\n\").unwrap();\n             }\n-            write!(trace_text, \"\\tat \").unwrap();\n+            write!(trace_text, \"           at \").unwrap();\n             if let Some(file_path) = symbol.filename() {\n                 write!(trace_text, \"{}\", file_path.display()).unwrap();\n             } else {"}]}