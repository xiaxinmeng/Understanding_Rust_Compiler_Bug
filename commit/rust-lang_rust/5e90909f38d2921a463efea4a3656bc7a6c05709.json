{"sha": "5e90909f38d2921a463efea4a3656bc7a6c05709", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlOTA5MDlmMzhkMjkyMWE0NjNlZmVhNGEzNjU2YmM3YTZjMDU3MDk=", "commit": {"author": {"name": "Tim Vermeulen", "email": "tvermeulen@me.com", "date": "2020-10-02T00:47:01Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-07-22T20:05:41Z"}, "message": "Add tests", "tree": {"sha": "7803cad48127be9638bfafe8bf8f1d86165a7a2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7803cad48127be9638bfafe8bf8f1d86165a7a2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e90909f38d2921a463efea4a3656bc7a6c05709", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e90909f38d2921a463efea4a3656bc7a6c05709", "html_url": "https://github.com/rust-lang/rust/commit/5e90909f38d2921a463efea4a3656bc7a6c05709", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e90909f38d2921a463efea4a3656bc7a6c05709/comments", "author": {"login": "timvermeulen", "id": 2904179, "node_id": "MDQ6VXNlcjI5MDQxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvermeulen", "html_url": "https://github.com/timvermeulen", "followers_url": "https://api.github.com/users/timvermeulen/followers", "following_url": "https://api.github.com/users/timvermeulen/following{/other_user}", "gists_url": "https://api.github.com/users/timvermeulen/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvermeulen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvermeulen/subscriptions", "organizations_url": "https://api.github.com/users/timvermeulen/orgs", "repos_url": "https://api.github.com/users/timvermeulen/repos", "events_url": "https://api.github.com/users/timvermeulen/events{/privacy}", "received_events_url": "https://api.github.com/users/timvermeulen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b8991496226e736d96ef77193ba0595081284a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8991496226e736d96ef77193ba0595081284a4", "html_url": "https://github.com/rust-lang/rust/commit/2b8991496226e736d96ef77193ba0595081284a4"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "5434827e5dd0cffaf878c696b354c7c1145e53e4", "filename": "library/core/src/slice/iter/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e90909f38d2921a463efea4a3656bc7a6c05709/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e90909f38d2921a463efea4a3656bc7a6c05709/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs?ref=5e90909f38d2921a463efea4a3656bc7a6c05709", "patch": "@@ -188,7 +188,7 @@ macro_rules! iterator {\n             #[inline]\n             fn advance_by(&mut self, n: usize) -> Result<(), usize>{\n                 let advance = cmp::min(n, len!(self));\n-                // SAFETY: `advance` does not exceed `self.len()` by construction\n+                // SAFETY: By construction, `advance` does not exceed `self.len()`.\n                 unsafe { self.post_inc_start(advance as isize) };\n                 if advance == n { Ok(()) } else { Err(advance) }\n             }\n@@ -383,7 +383,7 @@ macro_rules! iterator {\n             #[inline]\n             fn advance_back_by(&mut self, n: usize) -> Result<(), usize> {\n                 let advance = cmp::min(n, len!(self));\n-                // SAFETY: `advance` does not exceed `self.len()` by construction\n+                // SAFETY: By construction, `advance` does not exceed `self.len()`.\n                 unsafe { self.pre_dec_end(advance as isize) };\n                 if advance == n { Ok(()) } else { Err(advance) }\n             }"}, {"sha": "240b894057c3e80016dc5f052b9afebe285e8c90", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5e90909f38d2921a463efea4a3656bc7a6c05709/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e90909f38d2921a463efea4a3656bc7a6c05709/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=5e90909f38d2921a463efea4a3656bc7a6c05709", "patch": "@@ -134,6 +134,48 @@ fn test_partition_point() {\n     assert_eq!(b.partition_point(|&x| x < 8), 5);\n }\n \n+#[test]\n+fn test_iterator_advance_by() {\n+    let v = &[0, 1, 2, 3, 4];\n+\n+    for i in 0..=v.len() {\n+        let mut iter = v.iter();\n+        iter.advance_by(i).unwrap();\n+        assert_eq!(iter.as_slice(), &v[i..]);\n+    }\n+\n+    let mut iter = v.iter();\n+    assert_eq!(iter.advance_by(v.len() + 1), Err(v.len()));\n+    assert_eq!(iter.as_slice(), &[]);\n+\n+    let mut iter = v.iter();\n+    iter.advance_by(3).unwrap();\n+    assert_eq!(iter.as_slice(), &v[3..]);\n+    iter.advance_by(2).unwrap();\n+    assert_eq!(iter.as_slice(), &[]);\n+}\n+\n+#[test]\n+fn test_iterator_advance_back_by() {\n+    let v = &[0, 1, 2, 3, 4];\n+\n+    for i in 0..=v.len() {\n+        let mut iter = v.iter();\n+        iter.advance_back_by(i).unwrap();\n+        assert_eq!(iter.as_slice(), &v[..v.len() - i]);\n+    }\n+\n+    let mut iter = v.iter();\n+    assert_eq!(iter.advance_back_by(v.len() + 1), Err(v.len()));\n+    assert_eq!(iter.as_slice(), &[]);\n+\n+    let mut iter = v.iter();\n+    iter.advance_back_by(3).unwrap();\n+    assert_eq!(iter.as_slice(), &v[..v.len() - 3]);\n+    iter.advance_back_by(2).unwrap();\n+    assert_eq!(iter.as_slice(), &[]);\n+}\n+\n #[test]\n fn test_iterator_nth() {\n     let v: &[_] = &[0, 1, 2, 3, 4];"}]}