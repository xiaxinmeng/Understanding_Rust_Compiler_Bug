{"sha": "2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMDdlNzNkMmYwNjA1ZTkxNmQ3YjE3YjFjYzBkYmI1YTEzNTM3NjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-15T10:43:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-15T10:43:54Z"}, "message": "fix exceeding_bitshift lint and test", "tree": {"sha": "5730e71dc0c8198a25b52041004f4586a7c1af71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5730e71dc0c8198a25b52041004f4586a7c1af71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "html_url": "https://github.com/rust-lang/rust/commit/2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b8c78496815e22652fdf0da216659fe06936b50", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8c78496815e22652fdf0da216659fe06936b50", "html_url": "https://github.com/rust-lang/rust/commit/4b8c78496815e22652fdf0da216659fe06936b50"}], "stats": {"total": 833, "additions": 640, "deletions": 193}, "files": [{"sha": "05e70ed217a5f6042df17b47b225d395882cf0ca", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "patch": "@@ -547,16 +547,18 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n         left: &Operand<'tcx>,\n         right: &Operand<'tcx>,\n         source_info: SourceInfo,\n-        place_layout: TyLayout<'tcx>,\n     ) -> Option<()> {\n         let r =\n             self.use_ecx(|this| this.ecx.read_immediate(this.ecx.eval_operand(right, None)?))?;\n         // Check for exceeding shifts *even if* we cannot evaluate the LHS.\n         if op == BinOp::Shr || op == BinOp::Shl {\n-            let left_bits = place_layout.size.bits();\n+            // We need the type of the LHS. We cannot use `place_layout` as that is the type\n+            // of the result, which for checked binops is not the same!\n+            let left_ty = left.ty(&self.local_decls, self.tcx);\n+            let left_size_bits = self.ecx.layout_of(left_ty).ok()?.size.bits();\n             let right_size = r.layout.size;\n             let r_bits = r.to_scalar().and_then(|r| r.to_bits(right_size));\n-            if r_bits.map_or(false, |b| b >= left_bits as u128) {\n+            if r_bits.map_or(false, |b| b >= left_size_bits as u128) {\n                 self.report_assert_as_lint(\n                     lint::builtin::EXCEEDING_BITSHIFTS,\n                     source_info,\n@@ -618,7 +620,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             }\n             Rvalue::BinaryOp(op, left, right) => {\n                 trace!(\"checking BinaryOp(op = {:?}, left = {:?}, right = {:?})\", op, left, right);\n-                self.check_binary_op(*op, left, right, source_info, place_layout)?;\n+                self.check_binary_op(*op, left, right, source_info)?;\n             }\n             Rvalue::CheckedBinaryOp(op, left, right) => {\n                 trace!(\n@@ -627,7 +629,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                     left,\n                     right\n                 );\n-                self.check_binary_op(*op, left, right, source_info, place_layout)?;\n+                self.check_binary_op(*op, left, right, source_info)?;\n             }\n \n             // Do not try creating references (#67862)"}, {"sha": "5e32466c4e053ecafc663524c0adbbc2b3eae025", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.default.stderr", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.default.stderr?ref=2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "patch": "@@ -0,0 +1,146 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:22:13\n+   |\n+LL |     let _ = x << 42;\n+   |             ^^^^^^^ attempt to shift left with overflow\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-exceeding-bitshifts.rs:9:9\n+   |\n+LL | #![deny(exceeding_bitshifts, const_err)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:27:15\n+   |\n+LL |       let n = 1u8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:29:15\n+   |\n+LL |       let n = 1u16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:31:15\n+   |\n+LL |       let n = 1u32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:33:15\n+   |\n+LL |       let n = 1u64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:35:15\n+   |\n+LL |       let n = 1i8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:37:15\n+   |\n+LL |       let n = 1i16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:39:15\n+   |\n+LL |       let n = 1i32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:41:15\n+   |\n+LL |       let n = 1i64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:44:15\n+   |\n+LL |       let n = 1u8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:46:15\n+   |\n+LL |       let n = 1u16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:48:15\n+   |\n+LL |       let n = 1u32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:50:15\n+   |\n+LL |       let n = 1u64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:52:15\n+   |\n+LL |       let n = 1i8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:54:15\n+   |\n+LL |       let n = 1i16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:56:15\n+   |\n+LL |       let n = 1i32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:58:15\n+   |\n+LL |       let n = 1i64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:62:15\n+   |\n+LL |       let n = n << 8;\n+   |               ^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:64:15\n+   |\n+LL |       let n = 1u8 << -8;\n+   |               ^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:69:15\n+   |\n+LL |       let n = 1u8 << (4+4);\n+   |               ^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:71:15\n+   |\n+LL |       let n = 1i64 >> [64][0];\n+   |               ^^^^^^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:77:15\n+   |\n+LL |       let n = 1_isize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:78:15\n+   |\n+LL |       let n = 1_usize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: aborting due to 23 previous errors\n+"}, {"sha": "5e32466c4e053ecafc663524c0adbbc2b3eae025", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.noopt.stderr", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.noopt.stderr?ref=2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "patch": "@@ -0,0 +1,146 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:22:13\n+   |\n+LL |     let _ = x << 42;\n+   |             ^^^^^^^ attempt to shift left with overflow\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-exceeding-bitshifts.rs:9:9\n+   |\n+LL | #![deny(exceeding_bitshifts, const_err)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:27:15\n+   |\n+LL |       let n = 1u8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:29:15\n+   |\n+LL |       let n = 1u16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:31:15\n+   |\n+LL |       let n = 1u32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:33:15\n+   |\n+LL |       let n = 1u64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:35:15\n+   |\n+LL |       let n = 1i8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:37:15\n+   |\n+LL |       let n = 1i16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:39:15\n+   |\n+LL |       let n = 1i32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:41:15\n+   |\n+LL |       let n = 1i64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:44:15\n+   |\n+LL |       let n = 1u8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:46:15\n+   |\n+LL |       let n = 1u16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:48:15\n+   |\n+LL |       let n = 1u32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:50:15\n+   |\n+LL |       let n = 1u64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:52:15\n+   |\n+LL |       let n = 1i8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:54:15\n+   |\n+LL |       let n = 1i16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:56:15\n+   |\n+LL |       let n = 1i32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:58:15\n+   |\n+LL |       let n = 1i64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:62:15\n+   |\n+LL |       let n = n << 8;\n+   |               ^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:64:15\n+   |\n+LL |       let n = 1u8 << -8;\n+   |               ^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:69:15\n+   |\n+LL |       let n = 1u8 << (4+4);\n+   |               ^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:71:15\n+   |\n+LL |       let n = 1i64 >> [64][0];\n+   |               ^^^^^^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:77:15\n+   |\n+LL |       let n = 1_isize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:78:15\n+   |\n+LL |       let n = 1_usize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: aborting due to 23 previous errors\n+"}, {"sha": "5e32466c4e053ecafc663524c0adbbc2b3eae025", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.opt.stderr", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.opt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.opt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.opt.stderr?ref=2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "patch": "@@ -0,0 +1,146 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:22:13\n+   |\n+LL |     let _ = x << 42;\n+   |             ^^^^^^^ attempt to shift left with overflow\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-exceeding-bitshifts.rs:9:9\n+   |\n+LL | #![deny(exceeding_bitshifts, const_err)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:27:15\n+   |\n+LL |       let n = 1u8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:29:15\n+   |\n+LL |       let n = 1u16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:31:15\n+   |\n+LL |       let n = 1u32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:33:15\n+   |\n+LL |       let n = 1u64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:35:15\n+   |\n+LL |       let n = 1i8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:37:15\n+   |\n+LL |       let n = 1i16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:39:15\n+   |\n+LL |       let n = 1i32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:41:15\n+   |\n+LL |       let n = 1i64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:44:15\n+   |\n+LL |       let n = 1u8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:46:15\n+   |\n+LL |       let n = 1u16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:48:15\n+   |\n+LL |       let n = 1u32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:50:15\n+   |\n+LL |       let n = 1u64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:52:15\n+   |\n+LL |       let n = 1i8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:54:15\n+   |\n+LL |       let n = 1i16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:56:15\n+   |\n+LL |       let n = 1i32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:58:15\n+   |\n+LL |       let n = 1i64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:62:15\n+   |\n+LL |       let n = n << 8;\n+   |               ^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:64:15\n+   |\n+LL |       let n = 1u8 << -8;\n+   |               ^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:69:15\n+   |\n+LL |       let n = 1u8 << (4+4);\n+   |               ^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:71:15\n+   |\n+LL |       let n = 1i64 >> [64][0];\n+   |               ^^^^^^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:77:15\n+   |\n+LL |       let n = 1_isize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:78:15\n+   |\n+LL |       let n = 1_usize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: aborting due to 23 previous errors\n+"}, {"sha": "5e32466c4e053ecafc663524c0adbbc2b3eae025", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.opt_with_overflow_checks.stderr", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.opt_with_overflow_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.opt_with_overflow_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.opt_with_overflow_checks.stderr?ref=2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "patch": "@@ -0,0 +1,146 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:22:13\n+   |\n+LL |     let _ = x << 42;\n+   |             ^^^^^^^ attempt to shift left with overflow\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-exceeding-bitshifts.rs:9:9\n+   |\n+LL | #![deny(exceeding_bitshifts, const_err)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:27:15\n+   |\n+LL |       let n = 1u8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:29:15\n+   |\n+LL |       let n = 1u16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:31:15\n+   |\n+LL |       let n = 1u32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:33:15\n+   |\n+LL |       let n = 1u64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:35:15\n+   |\n+LL |       let n = 1i8 << 8;\n+   |               ^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:37:15\n+   |\n+LL |       let n = 1i16 << 16;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:39:15\n+   |\n+LL |       let n = 1i32 << 32;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:41:15\n+   |\n+LL |       let n = 1i64 << 64;\n+   |               ^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:44:15\n+   |\n+LL |       let n = 1u8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:46:15\n+   |\n+LL |       let n = 1u16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:48:15\n+   |\n+LL |       let n = 1u32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:50:15\n+   |\n+LL |       let n = 1u64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:52:15\n+   |\n+LL |       let n = 1i8 >> 8;\n+   |               ^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:54:15\n+   |\n+LL |       let n = 1i16 >> 16;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:56:15\n+   |\n+LL |       let n = 1i32 >> 32;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:58:15\n+   |\n+LL |       let n = 1i64 >> 64;\n+   |               ^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:62:15\n+   |\n+LL |       let n = n << 8;\n+   |               ^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:64:15\n+   |\n+LL |       let n = 1u8 << -8;\n+   |               ^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:69:15\n+   |\n+LL |       let n = 1u8 << (4+4);\n+   |               ^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:71:15\n+   |\n+LL |       let n = 1i64 >> [64][0];\n+   |               ^^^^^^^^^^^^^^^ attempt to shift right with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:77:15\n+   |\n+LL |       let n = 1_isize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/lint-exceeding-bitshifts.rs:78:15\n+   |\n+LL |       let n = 1_usize << BITS;\n+   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n+\n+error: aborting due to 23 previous errors\n+"}, {"sha": "3c6d70e7a6ffac7df8b2e063d0b189235b4faa76", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.rs", "status": "modified", "additions": 49, "deletions": 20, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2107e73d2f0605e916d7b17b1cc0dbb5a1353765/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.rs?ref=2107e73d2f0605e916d7b17b1cc0dbb5a1353765", "patch": "@@ -1,50 +1,79 @@\n+// revisions: default noopt opt opt_with_overflow_checks\n+//[noopt]compile-flags: -C opt-level=0\n+//[opt]compile-flags: -O\n+//[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O\n+\n // build-fail\n-// compile-flags: -O\n \n+#![crate_type=\"lib\"]\n #![deny(exceeding_bitshifts, const_err)]\n #![allow(unused_variables)]\n #![allow(dead_code)]\n \n-fn main() {\n+pub trait Foo {\n+    const N: i32;\n+}\n+\n+impl<T: Foo> Foo for Vec<T> {\n+    const N: i32 = T::N << 42; // FIXME this should warn\n+}\n+\n+pub fn foo(x: i32) {\n+    let _ = x << 42; //~ ERROR: arithmetic operation will overflow\n+}\n+\n+pub fn main() {\n       let n = 1u8 << 7;\n-      let n = 1u8 << 8;   //~ ERROR: attempt to shift left with overflow\n+      let n = 1u8 << 8;   //~ ERROR: arithmetic operation will overflow\n       let n = 1u16 << 15;\n-      let n = 1u16 << 16; //~ ERROR: attempt to shift left with overflow\n+      let n = 1u16 << 16; //~ ERROR: arithmetic operation will overflow\n       let n = 1u32 << 31;\n-      let n = 1u32 << 32; //~ ERROR: attempt to shift left with overflow\n+      let n = 1u32 << 32; //~ ERROR: arithmetic operation will overflow\n       let n = 1u64 << 63;\n-      let n = 1u64 << 64; //~ ERROR: attempt to shift left with overflow\n+      let n = 1u64 << 64; //~ ERROR: arithmetic operation will overflow\n       let n = 1i8 << 7;\n-      let n = 1i8 << 8;   //~ ERROR: attempt to shift left with overflow\n+      let n = 1i8 << 8;   //~ ERROR: arithmetic operation will overflow\n       let n = 1i16 << 15;\n-      let n = 1i16 << 16; //~ ERROR: attempt to shift left with overflow\n+      let n = 1i16 << 16; //~ ERROR: arithmetic operation will overflow\n       let n = 1i32 << 31;\n-      let n = 1i32 << 32; //~ ERROR: attempt to shift left with overflow\n+      let n = 1i32 << 32; //~ ERROR: arithmetic operation will overflow\n       let n = 1i64 << 63;\n-      let n = 1i64 << 64; //~ ERROR: attempt to shift left with overflow\n+      let n = 1i64 << 64; //~ ERROR: arithmetic operation will overflow\n \n       let n = 1u8 >> 7;\n-      let n = 1u8 >> 8;   //~ ERROR: attempt to shift right with overflow\n+      let n = 1u8 >> 8;   //~ ERROR: arithmetic operation will overflow\n       let n = 1u16 >> 15;\n-      let n = 1u16 >> 16; //~ ERROR: attempt to shift right with overflow\n+      let n = 1u16 >> 16; //~ ERROR: arithmetic operation will overflow\n       let n = 1u32 >> 31;\n-      let n = 1u32 >> 32; //~ ERROR: attempt to shift right with overflow\n+      let n = 1u32 >> 32; //~ ERROR: arithmetic operation will overflow\n       let n = 1u64 >> 63;\n-      let n = 1u64 >> 64; //~ ERROR: attempt to shift right with overflow\n+      let n = 1u64 >> 64; //~ ERROR: arithmetic operation will overflow\n       let n = 1i8 >> 7;\n-      let n = 1i8 >> 8;   //~ ERROR: attempt to shift right with overflow\n+      let n = 1i8 >> 8;   //~ ERROR: arithmetic operation will overflow\n       let n = 1i16 >> 15;\n-      let n = 1i16 >> 16; //~ ERROR: attempt to shift right with overflow\n+      let n = 1i16 >> 16; //~ ERROR: arithmetic operation will overflow\n       let n = 1i32 >> 31;\n-      let n = 1i32 >> 32; //~ ERROR: attempt to shift right with overflow\n+      let n = 1i32 >> 32; //~ ERROR: arithmetic operation will overflow\n       let n = 1i64 >> 63;\n-      let n = 1i64 >> 64; //~ ERROR: attempt to shift right with overflow\n+      let n = 1i64 >> 64; //~ ERROR: arithmetic operation will overflow\n \n       let n = 1u8;\n       let n = n << 7;\n-      let n = n << 8; //~ ERROR: attempt to shift left with overflow\n+      let n = n << 8; //~ ERROR: arithmetic operation will overflow\n \n-      let n = 1u8 << -8; //~ ERROR: attempt to shift left with overflow\n+      let n = 1u8 << -8; //~ ERROR: arithmetic operation will overflow\n \n       let n = 1i8<<(1isize+-1);\n+\n+      let n = 1u8 << (4+3);\n+      let n = 1u8 << (4+4); //~ ERROR: arithmetic operation will overflow\n+      let n = 1i64 >> [63][0];\n+      let n = 1i64 >> [64][0]; //~ ERROR: arithmetic operation will overflow\n+\n+      #[cfg(target_pointer_width = \"32\")]\n+      const BITS: usize = 32;\n+      #[cfg(target_pointer_width = \"64\")]\n+      const BITS: usize = 64;\n+      let n = 1_isize << BITS; //~ ERROR: arithmetic operation will overflow\n+      let n = 1_usize << BITS; //~ ERROR: arithmetic operation will overflow\n }"}, {"sha": "658577213b3cd57c2ac23db5db6390aa90d1ee11", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.stderr", "status": "removed", "additions": 0, "deletions": 116, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.stderr?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -1,116 +0,0 @@\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:10:15\n-   |\n-LL |       let n = 1u8 << 8;\n-   |               ^^^^^^^^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/lint-exceeding-bitshifts.rs:4:9\n-   |\n-LL | #![deny(exceeding_bitshifts, const_err)]\n-   |         ^^^^^^^^^^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:12:15\n-   |\n-LL |       let n = 1u16 << 16;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:14:15\n-   |\n-LL |       let n = 1u32 << 32;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:16:15\n-   |\n-LL |       let n = 1u64 << 64;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:18:15\n-   |\n-LL |       let n = 1i8 << 8;\n-   |               ^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:20:15\n-   |\n-LL |       let n = 1i16 << 16;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:22:15\n-   |\n-LL |       let n = 1i32 << 32;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:24:15\n-   |\n-LL |       let n = 1i64 << 64;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:27:15\n-   |\n-LL |       let n = 1u8 >> 8;\n-   |               ^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:29:15\n-   |\n-LL |       let n = 1u16 >> 16;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:31:15\n-   |\n-LL |       let n = 1u32 >> 32;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:33:15\n-   |\n-LL |       let n = 1u64 >> 64;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:35:15\n-   |\n-LL |       let n = 1i8 >> 8;\n-   |               ^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:37:15\n-   |\n-LL |       let n = 1i16 >> 16;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:39:15\n-   |\n-LL |       let n = 1i32 >> 32;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:41:15\n-   |\n-LL |       let n = 1i64 >> 64;\n-   |               ^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:45:15\n-   |\n-LL |       let n = n << 8;\n-   |               ^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:47:15\n-   |\n-LL |       let n = 1u8 << -8;\n-   |               ^^^^^^^^^\n-\n-error: aborting due to 18 previous errors\n-"}, {"sha": "2a7cbc10f7746c6959e79c9728c51ec228cb4d7c", "filename": "src/test/ui/lint/lint-exceeding-bitshifts2.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.rs?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -1,20 +0,0 @@\n-// build-fail\n-// compile-flags: -O\n-\n-#![deny(exceeding_bitshifts, const_err)]\n-#![allow(unused_variables)]\n-#![allow(dead_code)]\n-\n-fn main() {\n-      let n = 1u8 << (4+3);\n-      let n = 1u8 << (4+4); //~ ERROR: attempt to shift left with overflow\n-      let n = 1i64 >> [63][0];\n-      let n = 1i64 >> [64][0]; //~ ERROR: attempt to shift right with overflow\n-\n-      #[cfg(target_pointer_width = \"32\")]\n-      const BITS: usize = 32;\n-      #[cfg(target_pointer_width = \"64\")]\n-      const BITS: usize = 64;\n-      let n = 1_isize << BITS; //~ ERROR: attempt to shift left with overflow\n-      let n = 1_usize << BITS; //~ ERROR: attempt to shift left with overflow\n-}"}, {"sha": "ac9f3b1e56bc3953f5ed12eadd9bcd1cc66fbf4c", "filename": "src/test/ui/lint/lint-exceeding-bitshifts2.stderr", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts2.stderr?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -1,32 +0,0 @@\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts2.rs:10:15\n-   |\n-LL |       let n = 1u8 << (4+4);\n-   |               ^^^^^^^^^^^^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/lint-exceeding-bitshifts2.rs:4:9\n-   |\n-LL | #![deny(exceeding_bitshifts, const_err)]\n-   |         ^^^^^^^^^^^^^^^^^^^\n-\n-error: attempt to shift right with overflow\n-  --> $DIR/lint-exceeding-bitshifts2.rs:12:15\n-   |\n-LL |       let n = 1i64 >> [64][0];\n-   |               ^^^^^^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts2.rs:18:15\n-   |\n-LL |       let n = 1_isize << BITS;\n-   |               ^^^^^^^^^^^^^^^\n-\n-error: attempt to shift left with overflow\n-  --> $DIR/lint-exceeding-bitshifts2.rs:19:15\n-   |\n-LL |       let n = 1_usize << BITS;\n-   |               ^^^^^^^^^^^^^^^\n-\n-error: aborting due to 4 previous errors\n-"}]}