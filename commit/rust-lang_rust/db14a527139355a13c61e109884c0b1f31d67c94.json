{"sha": "db14a527139355a13c61e109884c0b1f31d67c94", "node_id": "C_kwDOAAsO6NoAKGRiMTRhNTI3MTM5MzU1YTEzYzYxZTEwOTg4NGMwYjFmMzFkNjdjOTQ", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-09-23T12:54:55Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-09-23T13:36:24Z"}, "message": "add the --sequential flag to compiletest", "tree": {"sha": "aff8a4b7cc635fdccdb3ae539ab598d24c799067", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aff8a4b7cc635fdccdb3ae539ab598d24c799067"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db14a527139355a13c61e109884c0b1f31d67c94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmMttlgACgkQzXazX3c0\ndp5x9w//TKs4bKDabz5sIEYScFfXdsPbQ9ta2NZCchIx04auDrBjmV4NOIyBi3GY\n9r9wjgvJtO5/TZd2Iu5xVgJl2hlphRtAz9J4ThO4MbS98Dj+aSjy4QEaW4EpfrI2\nB9ZSWkpRZZ3uodQwr7lubw5nxn5wjUZ4ZVX6fH7pWOuLkDdRGVirdUuYPf2tk9L4\noMMSOKfv2RnnCfstHPXyJ+jJVbdRsXbPmyvemEalcwjQA6+x5i+ZnQgevFhLHdrt\nMuV30fKzRGkhGfpEDLWZ16W1ODUTcasifcMPV9jMYXDRCafw2i1JG4MIO4EtbFBP\nd+jBjCFE9bl3v9V85HXvkADhQT81dEUerbFUNeDw9cwgWfHwfsaDLm9e5xKTZgXP\nuxQ7YXSN1U0fsFZTLj3dUIOLgvQhKgKGKLgXeb0JAeiordWD6v942GWAaChC09LV\n7G0fW0ARnt/pcapLRnKn4DagPR4SjWZO/nFFk3pOcyfP61BMSkJ00BW1t96t07sU\nWow0wAs7Q7wCVE3lz0hyvoAJMzcqtu9TCN3bT1R7fj/oQZR9PKlLfyQSDln+MHA3\ntEo68xpgPqWfs3Szva/eLbHsIDWzndmoIBakFaA3tT3Zi54fJRUAhlEzqp6v5hFS\nD+mr5I5kSwj1dQQEBTXIOnvbFTCUENxVEfywgn8v4mT6w/4K6GA=\n=lHUv\n-----END PGP SIGNATURE-----", "payload": "tree aff8a4b7cc635fdccdb3ae539ab598d24c799067\nparent 02869e3041cf7c30d8cb71c967931352dea66b80\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1663937695 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1663940184 +0200\n\nadd the --sequential flag to compiletest\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db14a527139355a13c61e109884c0b1f31d67c94", "html_url": "https://github.com/rust-lang/rust/commit/db14a527139355a13c61e109884c0b1f31d67c94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db14a527139355a13c61e109884c0b1f31d67c94/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02869e3041cf7c30d8cb71c967931352dea66b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/02869e3041cf7c30d8cb71c967931352dea66b80", "html_url": "https://github.com/rust-lang/rust/commit/02869e3041cf7c30d8cb71c967931352dea66b80"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "0c60d500a80bf14ee0e81063be0576565ee467e3", "filename": "src/tools/remote-test-server/src/main.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db14a527139355a13c61e109884c0b1f31d67c94/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db14a527139355a13c61e109884c0b1f31d67c94/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs?ref=db14a527139355a13c61e109884c0b1f31d67c94", "patch": "@@ -43,13 +43,15 @@ static TEST: AtomicUsize = AtomicUsize::new(0);\n #[derive(Copy, Clone)]\n struct Config {\n     verbose: bool,\n+    sequential: bool,\n     bind: SocketAddr,\n }\n \n impl Config {\n     pub fn default() -> Config {\n         Config {\n             verbose: false,\n+            sequential: false,\n             bind: if cfg!(target_os = \"android\") || cfg!(windows) {\n                 ([0, 0, 0, 0], 12345).into()\n             } else {\n@@ -70,6 +72,7 @@ impl Config {\n                     next_is_bind = false;\n                 }\n                 \"--bind\" => next_is_bind = true,\n+                \"--sequential\" => config.sequential = true,\n                 \"--verbose\" | \"-v\" => config.verbose = true,\n                 arg => panic!(\"unknown argument: {}\", arg),\n             }\n@@ -125,7 +128,12 @@ fn main() {\n             let lock = lock.clone();\n             let work = work.clone();\n             let tmp = tmp.clone();\n-            thread::spawn(move || handle_run(socket, &work, &tmp, &lock, config));\n+            let f = move || handle_run(socket, &work, &tmp, &lock, config);\n+            if config.sequential {\n+                f();\n+            } else {\n+                thread::spawn(f);\n+            }\n         } else {\n             panic!(\"unknown command {:?}\", buf);\n         }"}]}