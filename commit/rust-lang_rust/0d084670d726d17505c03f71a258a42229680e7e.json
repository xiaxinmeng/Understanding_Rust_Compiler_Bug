{"sha": "0d084670d726d17505c03f71a258a42229680e7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMDg0NjcwZDcyNmQxNzUwNWMwM2Y3MWEyNThhNDIyMjk2ODBlN2U=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-09-05T15:04:58Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-09-07T14:19:39Z"}, "message": "resolve: Do not afraid to set current module to enums and traits", "tree": {"sha": "ba0ab7709de7f01403386a9c2cb4651f203e91b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba0ab7709de7f01403386a9c2cb4651f203e91b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d084670d726d17505c03f71a258a42229680e7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d084670d726d17505c03f71a258a42229680e7e", "html_url": "https://github.com/rust-lang/rust/commit/0d084670d726d17505c03f71a258a42229680e7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d084670d726d17505c03f71a258a42229680e7e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef54f57c5b9d894a38179d09b00610c1b337b086", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef54f57c5b9d894a38179d09b00610c1b337b086", "html_url": "https://github.com/rust-lang/rust/commit/ef54f57c5b9d894a38179d09b00610c1b337b086"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "333509e18504d9c9a2e11cab81af5f6df36c7b12", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0d084670d726d17505c03f71a258a42229680e7e/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d084670d726d17505c03f71a258a42229680e7e/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=0d084670d726d17505c03f71a258a42229680e7e", "patch": "@@ -728,9 +728,10 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                                              expansion,\n                                              item.span);\n                 self.r.define(parent, ident, TypeNS, (module, vis, sp, expansion));\n+                self.parent_scope.module = module;\n \n                 for variant in &(*enum_definition).variants {\n-                    self.build_reduced_graph_for_variant(variant, module, vis);\n+                    self.build_reduced_graph_for_variant(variant, vis);\n                 }\n             }\n \n@@ -818,10 +819,8 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n \n     // Constructs the reduced graph for one variant. Variants exist in the\n     // type and value namespaces.\n-    fn build_reduced_graph_for_variant(&mut self,\n-                                       variant: &Variant,\n-                                       parent: Module<'a>,\n-                                       vis: ty::Visibility) {\n+    fn build_reduced_graph_for_variant(&mut self, variant: &Variant, vis: ty::Visibility) {\n+        let parent = self.parent_scope.module;\n         let expn_id = self.parent_scope.expansion;\n         let ident = variant.ident;\n \n@@ -1253,9 +1252,7 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n         let expansion = self.parent_scope.expansion;\n         self.r.define(parent, item.ident, ns, (res, vis, item.span, expansion));\n \n-        self.parent_scope.module = parent.parent.unwrap(); // nearest normal ancestor\n         visit::walk_trait_item(self, item);\n-        self.parent_scope.module = parent;\n     }\n \n     fn visit_token(&mut self, t: Token) {"}, {"sha": "29676f96ce7a8bd19138764638f8480abf9ea1d5", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d084670d726d17505c03f71a258a42229680e7e/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d084670d726d17505c03f71a258a42229680e7e/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=0d084670d726d17505c03f71a258a42229680e7e", "patch": "@@ -538,7 +538,11 @@ impl<'a> ModuleData<'a> {\n     }\n \n     fn nearest_item_scope(&'a self) -> Module<'a> {\n-        if self.is_trait() { self.parent.unwrap() } else { self }\n+        match self.kind {\n+            ModuleKind::Def(DefKind::Enum, ..) | ModuleKind::Def(DefKind::Trait, ..) =>\n+                self.parent.expect(\"enum or trait module without a parent\"),\n+            _ => self,\n+        }\n     }\n \n     fn is_ancestor_of(&self, mut other: &Self) -> bool {"}]}