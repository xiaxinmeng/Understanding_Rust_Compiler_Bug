{"sha": "4a9364868949a5390d85d26af4d6562bc4a18fb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhOTM2NDg2ODk0OWE1MzkwZDg1ZDI2YWY0ZDY1NjJiYzRhMThmYjM=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-23T21:43:41Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-23T22:02:39Z"}, "message": "Support `use *;` and `use ::*;`.", "tree": {"sha": "415b97589fad7e896ff7398bd5d2cf7cebefc689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/415b97589fad7e896ff7398bd5d2cf7cebefc689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a9364868949a5390d85d26af4d6562bc4a18fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a9364868949a5390d85d26af4d6562bc4a18fb3", "html_url": "https://github.com/rust-lang/rust/commit/4a9364868949a5390d85d26af4d6562bc4a18fb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a9364868949a5390d85d26af4d6562bc4a18fb3/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4845adde360c306624faa3305ea95f95cd11e2b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4845adde360c306624faa3305ea95f95cd11e2b4", "html_url": "https://github.com/rust-lang/rust/commit/4845adde360c306624faa3305ea95f95cd11e2b4"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "cd62ecd4e977742e7f5b815c42f590db2571e97a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4a9364868949a5390d85d26af4d6562bc4a18fb3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a9364868949a5390d85d26af4d6562bc4a18fb3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4a9364868949a5390d85d26af4d6562bc4a18fb3", "patch": "@@ -6113,15 +6113,20 @@ impl<'a> Parser<'a> {\n     /// MOD_SEP? LBRACE item_seq RBRACE\n     fn parse_view_path(&mut self) -> PResult<'a, P<ViewPath>> {\n         let lo = self.span.lo;\n-        if self.check(&token::OpenDelim(token::Brace)) || self.is_import_coupler() {\n-            // `{foo, bar}` or `::{foo, bar}`\n+        if self.check(&token::OpenDelim(token::Brace)) || self.check(&token::BinOp(token::Star)) ||\n+           self.is_import_coupler() {\n+            // `{foo, bar}`, `::{foo, bar}`, `*`, or `::*`.\n             let prefix = ast::Path {\n                 global: self.eat(&token::ModSep),\n                 segments: Vec::new(),\n                 span: mk_sp(lo, self.span.hi),\n             };\n-            let items = self.parse_path_list_items()?;\n-            Ok(P(spanned(lo, self.span.hi, ViewPathList(prefix, items))))\n+            let view_path_kind = if self.eat(&token::BinOp(token::Star)) {\n+                ViewPathGlob(prefix)\n+            } else {\n+                ViewPathList(prefix, self.parse_path_list_items()?)\n+            };\n+            Ok(P(spanned(lo, self.span.hi, view_path_kind)))\n         } else {\n             let prefix = self.parse_path(PathStyle::Mod)?;\n             if self.is_import_coupler() {"}, {"sha": "fec46c7e1f82d9eeffea15398ed755296fd26e8c", "filename": "src/test/run-pass/import-glob-crate.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4a9364868949a5390d85d26af4d6562bc4a18fb3/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a9364868949a5390d85d26af4d6562bc4a18fb3/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs?ref=4a9364868949a5390d85d26af4d6562bc4a18fb3", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-#![allow(dead_assignment)]\n-\n use std::mem::*;\n \n pub fn main() {\n@@ -20,3 +17,12 @@ pub fn main() {\n     assert_eq!(x, 2);\n     assert_eq!(y, 1);\n }\n+\n+#[allow(unused)]\n+fn f() {\n+    mod foo { pub use *; }\n+    mod bar { pub use ::*; }\n+\n+    foo::main();\n+    bar::main();\n+}"}]}