{"sha": "252a6dfa354e15bd08e34618b811091ff57c14c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MmE2ZGZhMzU0ZTE1YmQwOGUzNDYxOGI4MTEwOTFmZjU3YzE0Yzk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-07T09:38:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-26T14:31:49Z"}, "message": "introduce `DropckOutlives` type-op", "tree": {"sha": "77f55b1dd422608a9e81f9259b5ebe5c22561314", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77f55b1dd422608a9e81f9259b5ebe5c22561314"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/252a6dfa354e15bd08e34618b811091ff57c14c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/252a6dfa354e15bd08e34618b811091ff57c14c9", "html_url": "https://github.com/rust-lang/rust/commit/252a6dfa354e15bd08e34618b811091ff57c14c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/252a6dfa354e15bd08e34618b811091ff57c14c9/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a641cb14525d1111d24e9060ebe07c3ce10ab83", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a641cb14525d1111d24e9060ebe07c3ce10ab83", "html_url": "https://github.com/rust-lang/rust/commit/7a641cb14525d1111d24e9060ebe07c3ce10ab83"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "2640082c7cfed87b673ace694bc626d0116de5d9", "filename": "src/librustc_mir/borrow_check/nll/type_check/liveness.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/252a6dfa354e15bd08e34618b811091ff57c14c9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/252a6dfa354e15bd08e34618b811091ff57c14c9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs?ref=252a6dfa354e15bd08e34618b811091ff57c14c9", "patch": "@@ -9,15 +9,14 @@\n // except according to those terms.\n \n use borrow_check::nll::region_infer::Cause;\n-use borrow_check::nll::type_check::type_op::CustomTypeOp;\n+use borrow_check::nll::type_check::type_op::DropckOutlives;\n use borrow_check::nll::type_check::AtLocation;\n use dataflow::move_paths::{HasMoveData, MoveData};\n use dataflow::MaybeInitializedPlaces;\n use dataflow::{FlowAtLocation, FlowsAtLocation};\n use rustc::infer::region_constraints::RegionConstraintData;\n use rustc::mir::Local;\n use rustc::mir::{BasicBlock, Location, Mir};\n-use rustc::traits::ObligationCause;\n use rustc::ty::subst::Kind;\n use rustc::ty::{Ty, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n@@ -217,15 +216,11 @@ impl<'gen, 'typeck, 'flow, 'gcx, 'tcx> TypeLivenessGenerator<'gen, 'typeck, 'flo\n     ) -> DropData<'tcx> {\n         debug!(\"compute_drop_data(dropped_ty={:?})\", dropped_ty,);\n \n+        let param_env = cx.param_env;\n         let (dropped_kinds, region_constraint_data) =\n-            cx.fully_perform_op_and_get_region_constraint_data(CustomTypeOp::new(\n-                |cx| {\n-                    Ok(cx\n-                        .infcx\n-                        .at(&ObligationCause::dummy(), cx.param_env)\n-                        .dropck_outlives(dropped_ty))\n-                },\n-                || format!(\"compute_drop_data(dropped_ty={:?})\", dropped_ty),\n+            cx.fully_perform_op_and_get_region_constraint_data(DropckOutlives::new(\n+                param_env,\n+                dropped_ty,\n             )).unwrap();\n \n         DropData {"}, {"sha": "cf4464905c0777ac1abc9466ac7cc10bd5618af5", "filename": "src/librustc_mir/borrow_check/nll/type_check/type_op.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/252a6dfa354e15bd08e34618b811091ff57c14c9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/252a6dfa354e15bd08e34618b811091ff57c14c9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Ftype_op.rs?ref=252a6dfa354e15bd08e34618b811091ff57c14c9", "patch": "@@ -13,6 +13,7 @@ use rustc::infer::{InferCtxt, InferOk, InferResult};\n use rustc::traits::query::NoSolution;\n use rustc::traits::{Normalized, Obligation, ObligationCause, PredicateObligation};\n use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::subst::Kind;\n use rustc::ty::{ParamEnv, Predicate, Ty};\n use std::fmt;\n \n@@ -242,3 +243,32 @@ where\n         Ok(InferOk { value, obligations })\n     }\n }\n+\n+#[derive(Debug)]\n+pub(super) struct DropckOutlives<'tcx> {\n+    param_env: ParamEnv<'tcx>,\n+    dropped_ty: Ty<'tcx>,\n+}\n+\n+impl<'tcx> DropckOutlives<'tcx> {\n+    pub(super) fn new(\n+        param_env: ParamEnv<'tcx>,\n+        dropped_ty: Ty<'tcx>,\n+    ) -> Self {\n+        DropckOutlives { param_env, dropped_ty }\n+    }\n+}\n+\n+impl<'gcx, 'tcx> InfcxTypeOp<'gcx, 'tcx> for DropckOutlives<'tcx> {\n+    type Output = Vec<Kind<'tcx>>;\n+\n+    fn trivial_noop(self) -> Result<Self::Output, Self> {\n+        Err(self)\n+    }\n+\n+    fn perform(self, infcx: &InferCtxt<'_, 'gcx, 'tcx>) -> InferResult<'tcx, Self::Output> {\n+        Ok(infcx\n+           .at(&ObligationCause::dummy(), self.param_env)\n+           .dropck_outlives(self.dropped_ty))\n+    }\n+}"}]}