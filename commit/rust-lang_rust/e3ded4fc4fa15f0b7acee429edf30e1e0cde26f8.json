{"sha": "e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "node_id": "C_kwDOAAsO6NoAKGUzZGVkNGZjNGZhMTVmMGI3YWNlZTQyOWVkZjMwZTFlMGNkZTI2Zjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-18T15:23:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-18T15:23:28Z"}, "message": "Rollup merge of #92933 - bjorn3:no_bin_lib_mixing, r=estebank\n\nDeny mixing bin crate type with lib crate types\n\nThe produced library would get a main shim too which conflicts with the\nmain shim of the executable linking the library.\n\n```\n$ cat > main1.rs <<EOF\nfn main() {}\npub fn bar() {}\nEOF\n$ cat > main2.rs <<EOF\nextern crate main1;\nfn main() {\n    main1::bar();\n}\nEOF\n$ rustc --crate-type bin --crate-type lib main1.rs\n$ rustc -L. main2.rs\nerror: linking with `cc` failed: exit status: 1\n[...]\n  = note: /usr/bin/ld: /tmp/crate_bin_lib/libmain1.rlib(main1.main1.707747aa-cgu.0.rcgu.o): in function `main':\n          main1.707747aa-cgu.0:(.text.main+0x0): multiple definition of `main'; main2.main2.02a148fe-cgu.0.rcgu.o:main2.02a148fe-cgu.0:(.text.main+0x0): first defined here\n          collect2: error: ld returned 1 exit status\n```", "tree": {"sha": "55d6dc9b06fc459da34e45980eea5f1bb69db04d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55d6dc9b06fc459da34e45980eea5f1bb69db04d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiD7nxCRBK7hj4Ov3rIwAAkxoIAJ99Q9UDwgyV9DrAMryjNYaG\nHVoAJe1LvmMK6/KP57oYpKMVP6GR/Ob3+k+Um/con9AePIXvgcbW544bwzkpErR3\nju5Cq37QH3+TQOTOeqx9/ZeAGXCjl6XufcMdjPsA/LR7TwMJIwFH+S6AwQ36N+3l\nQmLZYhZfbJr5I2DiVBHqh0sUaMB6wfBj+oMOZdqLbUCQwZ7lcBQwaFB1cat31pPv\nc6K5pIBAVpW8FylcnrdbKtJSFhECeKBecpwCEUXBzn+nSpDJBdgmbxz5siuivMhw\nGKokhuKkkBOxGzPfYvOF2Wv8YHx0OoOBs3sw/MMUnMuimnyhGwoL00iWApeZRUE=\n=EEJG\n-----END PGP SIGNATURE-----\n", "payload": "tree 55d6dc9b06fc459da34e45980eea5f1bb69db04d\nparent dd111262b2a18e532d700b67a8062faa286d1a36\nparent 0b5963023d9d3bdbbf27e9f92171047cf2a7f008\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645197808 +0100\ncommitter GitHub <noreply@github.com> 1645197808 +0100\n\nRollup merge of #92933 - bjorn3:no_bin_lib_mixing, r=estebank\n\nDeny mixing bin crate type with lib crate types\n\nThe produced library would get a main shim too which conflicts with the\nmain shim of the executable linking the library.\n\n```\n$ cat > main1.rs <<EOF\nfn main() {}\npub fn bar() {}\nEOF\n$ cat > main2.rs <<EOF\nextern crate main1;\nfn main() {\n    main1::bar();\n}\nEOF\n$ rustc --crate-type bin --crate-type lib main1.rs\n$ rustc -L. main2.rs\nerror: linking with `cc` failed: exit status: 1\n[...]\n  = note: /usr/bin/ld: /tmp/crate_bin_lib/libmain1.rlib(main1.main1.707747aa-cgu.0.rcgu.o): in function `main':\n          main1.707747aa-cgu.0:(.text.main+0x0): multiple definition of `main'; main2.main2.02a148fe-cgu.0.rcgu.o:main2.02a148fe-cgu.0:(.text.main+0x0): first defined here\n          collect2: error: ld returned 1 exit status\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "html_url": "https://github.com/rust-lang/rust/commit/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd111262b2a18e532d700b67a8062faa286d1a36", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd111262b2a18e532d700b67a8062faa286d1a36", "html_url": "https://github.com/rust-lang/rust/commit/dd111262b2a18e532d700b67a8062faa286d1a36"}, {"sha": "0b5963023d9d3bdbbf27e9f92171047cf2a7f008", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b5963023d9d3bdbbf27e9f92171047cf2a7f008", "html_url": "https://github.com/rust-lang/rust/commit/0b5963023d9d3bdbbf27e9f92171047cf2a7f008"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "c9dd114047b76eda6c0fb10bc249d2cdd82306b9", "filename": "compiler/rustc_builtin_macros/src/proc_macro_harness.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/compiler%2Frustc_builtin_macros%2Fsrc%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/compiler%2Frustc_builtin_macros%2Fsrc%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fproc_macro_harness.rs?ref=e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "patch": "@@ -56,7 +56,6 @@ pub fn inject(\n     is_proc_macro_crate: bool,\n     has_proc_macro_decls: bool,\n     is_test_crate: bool,\n-    num_crate_types: usize,\n     handler: &rustc_errors::Handler,\n ) -> ast::Crate {\n     let ecfg = ExpansionConfig::default(\"proc_macro\".to_string());\n@@ -81,10 +80,6 @@ pub fn inject(\n         return krate;\n     }\n \n-    if num_crate_types > 1 {\n-        handler.err(\"cannot mix `proc-macro` crate type with others\");\n-    }\n-\n     if is_test_crate {\n         return krate;\n     }"}, {"sha": "c0552fd200be8d83680401202cc82d9cf3a318a7", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "patch": "@@ -393,8 +393,18 @@ pub fn configure_and_expand(\n     });\n \n     let crate_types = sess.crate_types();\n+    let is_executable_crate = crate_types.contains(&CrateType::Executable);\n     let is_proc_macro_crate = crate_types.contains(&CrateType::ProcMacro);\n \n+    if crate_types.len() > 1 {\n+        if is_executable_crate {\n+            sess.err(\"cannot mix `bin` crate type with others\");\n+        }\n+        if is_proc_macro_crate {\n+            sess.err(\"cannot mix `proc-macro` crate type with others\");\n+        }\n+    }\n+\n     // For backwards compatibility, we don't try to run proc macro injection\n     // if rustdoc is run on a proc macro crate without '--crate-type proc-macro' being\n     // specified. This should only affect users who manually invoke 'rustdoc', as\n@@ -411,7 +421,6 @@ pub fn configure_and_expand(\n         msg.emit()\n     } else {\n         krate = sess.time(\"maybe_create_a_macro_crate\", || {\n-            let num_crate_types = crate_types.len();\n             let is_test_crate = sess.opts.test;\n             rustc_builtin_macros::proc_macro_harness::inject(\n                 sess,\n@@ -420,7 +429,6 @@ pub fn configure_and_expand(\n                 is_proc_macro_crate,\n                 has_proc_macro_decls,\n                 is_test_crate,\n-                num_crate_types,\n                 sess.diagnostic(),\n             )\n         });"}, {"sha": "cc3b257a5c5bf6b9efa35011a6962f4638f6ff61", "filename": "src/test/run-make-fulldeps/libs-and-bins/Makefile", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dd111262b2a18e532d700b67a8062faa286d1a36/src%2Ftest%2Frun-make-fulldeps%2Flibs-and-bins%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/dd111262b2a18e532d700b67a8062faa286d1a36/src%2Ftest%2Frun-make-fulldeps%2Flibs-and-bins%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibs-and-bins%2FMakefile?ref=dd111262b2a18e532d700b67a8062faa286d1a36", "patch": "@@ -1,6 +0,0 @@\n--include ../tools.mk\n-\n-all:\n-\t$(RUSTC) foo.rs\n-\t$(call RUN,foo)\n-\trm $(TMPDIR)/$(call DYLIB_GLOB,foo)"}, {"sha": "ae166b17840e3c8d93529767205504b0d79558d8", "filename": "src/test/run-make-fulldeps/libs-and-bins/foo.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd111262b2a18e532d700b67a8062faa286d1a36/src%2Ftest%2Frun-make-fulldeps%2Flibs-and-bins%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd111262b2a18e532d700b67a8062faa286d1a36/src%2Ftest%2Frun-make-fulldeps%2Flibs-and-bins%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibs-and-bins%2Ffoo.rs?ref=dd111262b2a18e532d700b67a8062faa286d1a36", "patch": "@@ -1,4 +0,0 @@\n-#![crate_type = \"dylib\"]\n-#![crate_type = \"bin\"]\n-\n-fn main() {}"}, {"sha": "69a286f0b74f83a3faf3e75502fe1c33822d3ba6", "filename": "src/test/run-make-fulldeps/output-with-hyphens/Makefile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/src%2Ftest%2Frun-make-fulldeps%2Foutput-with-hyphens%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/src%2Ftest%2Frun-make-fulldeps%2Foutput-with-hyphens%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Foutput-with-hyphens%2FMakefile?ref=e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "patch": "@@ -1,6 +1,7 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) foo-bar.rs\n+\t$(RUSTC) foo-bar.rs --crate-type bin\n \t[ -f $(TMPDIR)/$(call BIN,foo-bar) ]\n+\t$(RUSTC) foo-bar.rs --crate-type lib\n \t[ -f $(TMPDIR)/libfoo_bar.rlib ]"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "src/test/run-make-fulldeps/output-with-hyphens/foo-bar.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/src%2Ftest%2Frun-make-fulldeps%2Foutput-with-hyphens%2Ffoo-bar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8/src%2Ftest%2Frun-make-fulldeps%2Foutput-with-hyphens%2Ffoo-bar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Foutput-with-hyphens%2Ffoo-bar.rs?ref=e3ded4fc4fa15f0b7acee429edf30e1e0cde26f8", "patch": "@@ -1,4 +1 @@\n-#![crate_type = \"lib\"]\n-#![crate_type = \"bin\"]\n-\n fn main() {}"}]}