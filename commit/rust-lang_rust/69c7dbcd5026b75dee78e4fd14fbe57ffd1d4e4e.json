{"sha": "69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YzdkYmNkNTAyNmI3NWRlZTc4ZTRmZDE0ZmJlNTdmZmQxZDRlNGU=", "commit": {"author": {"name": "Rui", "email": "xiongmao86dev@sina.com", "date": "2019-10-19T09:19:47Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-10-19T09:19:47Z"}, "message": "Try to solve issue3456. (#3556)", "tree": {"sha": "2baca3e65c101b9f8761b883428da1da8a98aa6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2baca3e65c101b9f8761b883428da1da8a98aa6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "html_url": "https://github.com/rust-lang/rust/commit/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/comments", "author": {"login": "xiongmao86", "id": 1770218, "node_id": "MDQ6VXNlcjE3NzAyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1770218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiongmao86", "html_url": "https://github.com/xiongmao86", "followers_url": "https://api.github.com/users/xiongmao86/followers", "following_url": "https://api.github.com/users/xiongmao86/following{/other_user}", "gists_url": "https://api.github.com/users/xiongmao86/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiongmao86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiongmao86/subscriptions", "organizations_url": "https://api.github.com/users/xiongmao86/orgs", "repos_url": "https://api.github.com/users/xiongmao86/repos", "events_url": "https://api.github.com/users/xiongmao86/events{/privacy}", "received_events_url": "https://api.github.com/users/xiongmao86/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a073f177ca7466cf3e8327a7fc847d495d75fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a073f177ca7466cf3e8327a7fc847d495d75fd7", "html_url": "https://github.com/rust-lang/rust/commit/3a073f177ca7466cf3e8327a7fc847d495d75fd7"}], "stats": {"total": 55, "additions": 33, "deletions": 22}, "files": [{"sha": "8665f2a7248df2ac7181ab88ba0fa9a0352550f4", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "patch": "@@ -1187,27 +1187,9 @@ fn rewrite_string_lit(context: &RewriteContext<'_>, span: Span, shape: Shape) ->\n             .lines()\n             .dropping_back(1)\n             .all(|line| line.ends_with('\\\\'))\n+            && context.config.version() == Version::Two\n         {\n-            let new_indent = shape.visual_indent(1).indent;\n-            let indented_string_lit = String::from(\n-                string_lit\n-                    .lines()\n-                    .map(|line| {\n-                        format!(\n-                            \"{}{}\",\n-                            new_indent.to_string(context.config),\n-                            line.trim_start()\n-                        )\n-                    })\n-                    .collect::<Vec<_>>()\n-                    .join(\"\\n\")\n-                    .trim_start(),\n-            );\n-            return if context.config.version() == Version::Two {\n-                Some(indented_string_lit)\n-            } else {\n-                wrap_str(indented_string_lit, context.config.max_width(), shape)\n-            };\n+            return Some(string_lit.to_owned());\n         } else {\n             return wrap_str(string_lit.to_owned(), context.config.max_width(), shape);\n         }"}, {"sha": "d01a0ff73ba333d6b0c22d7653746f16614931c1", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "patch": "@@ -618,9 +618,8 @@ pub(crate) fn trim_left_preserve_layout(\n \n /// Based on the given line, determine if the next line can be indented or not.\n /// This allows to preserve the indentation of multi-line literals.\n-pub(crate) fn indent_next_line(kind: FullCodeCharKind, line: &str, config: &Config) -> bool {\n+pub(crate) fn indent_next_line(kind: FullCodeCharKind, _line: &str, config: &Config) -> bool {\n     !(kind.is_string() || (config.version() == Version::Two && kind.is_commented_string()))\n-        || line.ends_with('\\\\')\n }\n \n pub(crate) fn is_empty_line(s: &str) -> bool {"}, {"sha": "dafc738f8dbd56735cb1f292146d28cbdc5a0411", "filename": "tests/target/multiline_string_in_macro_def.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/tests%2Ftarget%2Fmultiline_string_in_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/tests%2Ftarget%2Fmultiline_string_in_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiline_string_in_macro_def.rs?ref=69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "patch": "@@ -0,0 +1,14 @@\n+macro_rules! assert_approx_eq {\n+    ($a:expr, $b:expr, $eps:expr) => {{\n+        let (a, b) = (&$a, &$b);\n+        assert!(\n+            (*a - *b).abs() < $eps,\n+            \"assertion failed: `(left !== right)` \\\n+             (left: `{:?}`, right: `{:?}`, expect diff: `{:?}`, real diff: `{:?}`)\",\n+            *a,\n+            *b,\n+            $eps,\n+            (*a - *b).abs()\n+        );\n+    }};\n+}"}, {"sha": "efb755d4aea868227209eca8a3512d504af59649", "filename": "tests/target/should_not_format_string_when_format_strings_is_not_set.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/tests%2Ftarget%2Fshould_not_format_string_when_format_strings_is_not_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e/tests%2Ftarget%2Fshould_not_format_string_when_format_strings_is_not_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fshould_not_format_string_when_format_strings_is_not_set.rs?ref=69c7dbcd5026b75dee78e4fd14fbe57ffd1d4e4e", "patch": "@@ -0,0 +1,16 @@\n+// format_strings is false by default.\n+\n+println!(\n+    \"DirEntry {{ \\\n+        binary_name: {:<64}, \\\n+        context_id: {:>2}, \\\n+        file_size: {:>6}, \\\n+        offset: 0x {:>08X}, \\\n+        actual_crc: 0x{:>08X} \\\n+    }}\",\n+    dir_entry.binary_name,\n+    dir_entry.context_id,\n+    dir_entry.file_size,\n+    dir_entry.offset,\n+    dir_entry.actual_crc\n+);"}]}