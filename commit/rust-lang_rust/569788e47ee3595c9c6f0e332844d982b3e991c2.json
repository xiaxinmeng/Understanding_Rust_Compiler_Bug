{"sha": "569788e47ee3595c9c6f0e332844d982b3e991c2", "node_id": "C_kwDOAAsO6NoAKDU2OTc4OGU0N2VlMzU5NWM5YzZmMGUzMzI4NDRkOTgyYjNlOTkxYzI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-12T09:49:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-12T09:49:55Z"}, "message": "Auto merge of #99624 - vincenzopalazzo:macros/unix_error, r=Amanieu\n\npromote debug_assert to assert when possible and useful\n\nThis PR fixed a very old issue https://github.com/rust-lang/rust/issues/94705 to clarify and improve the POSIX error checking, and some of the checks are skipped because can have no benefit, but I'm sure that this can open some interesting discussion.\n\nFixes https://github.com/rust-lang/rust/issues/94705\n\ncc: `@tavianator`\ncc: `@cuviper`", "tree": {"sha": "8e88e20df9face042294c44f868e177152681f6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e88e20df9face042294c44f868e177152681f6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/569788e47ee3595c9c6f0e332844d982b3e991c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/569788e47ee3595c9c6f0e332844d982b3e991c2", "html_url": "https://github.com/rust-lang/rust/commit/569788e47ee3595c9c6f0e332844d982b3e991c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/569788e47ee3595c9c6f0e332844d982b3e991c2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc65e1a548abee1d664113abd117b79055532ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc65e1a548abee1d664113abd117b79055532ffa", "html_url": "https://github.com/rust-lang/rust/commit/cc65e1a548abee1d664113abd117b79055532ffa"}, {"sha": "d91dff3c1b1dfa1e6a1b890057019259b97d6ea4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d91dff3c1b1dfa1e6a1b890057019259b97d6ea4", "html_url": "https://github.com/rust-lang/rust/commit/d91dff3c1b1dfa1e6a1b890057019259b97d6ea4"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1f2f9d97bddbbb1e837b1b844ade995c853ca9c6", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/569788e47ee3595c9c6f0e332844d982b3e991c2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569788e47ee3595c9c6f0e332844d982b3e991c2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=569788e47ee3595c9c6f0e332844d982b3e991c2", "patch": "@@ -687,7 +687,11 @@ impl Iterator for ReadDir {\n impl Drop for Dir {\n     fn drop(&mut self) {\n         let r = unsafe { libc::closedir(self.0) };\n-        debug_assert_eq!(r, 0);\n+        assert!(\n+            r == 0 || crate::io::Error::last_os_error().kind() == crate::io::ErrorKind::Interrupted,\n+            \"unexpected error during closedir: {:?}\",\n+            crate::io::Error::last_os_error()\n+        );\n     }\n }\n "}, {"sha": "4741c0c6736e37f1a28c6a1b9468df1eceeabe84", "filename": "library/std/src/sys/unix/locks/pthread_condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/569788e47ee3595c9c6f0e332844d982b3e991c2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Fpthread_condvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569788e47ee3595c9c6f0e332844d982b3e991c2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Fpthread_condvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Fpthread_condvar.rs?ref=569788e47ee3595c9c6f0e332844d982b3e991c2", "patch": "@@ -172,7 +172,7 @@ impl Condvar {\n         let mut sys_now = libc::timeval { tv_sec: 0, tv_usec: 0 };\n         let stable_now = Instant::now();\n         let r = libc::gettimeofday(&mut sys_now, ptr::null_mut());\n-        debug_assert_eq!(r, 0);\n+        assert_eq!(r, 0, \"unexpected error: {:?}\", crate::io::Error::last_os_error());\n \n         let nsec = dur.subsec_nanos() as libc::c_long + (sys_now.tv_usec * 1000) as libc::c_long;\n         let extra = (nsec / 1_000_000_000) as libc::time_t;"}]}