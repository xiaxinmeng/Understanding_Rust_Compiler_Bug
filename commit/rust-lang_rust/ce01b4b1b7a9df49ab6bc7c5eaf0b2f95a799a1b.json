{"sha": "ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMDFiNGIxYjdhOWRmNDlhYjZiYzdjNWVhZjBiMmY5NWE3OTlhMWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-03T06:31:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-03T06:31:09Z"}, "message": "auto merge of #16155 : huonw/rust/Ordering-reverse, r=alexcrichton\n\nThis flips the comparison and is designed to be used when sorting etc.", "tree": {"sha": "4e2b33ca8d5d5598f0b3b471540643730d1211ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e2b33ca8d5d5598f0b3b471540643730d1211ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b", "html_url": "https://github.com/rust-lang/rust/commit/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "055e25acbe9fd48e0791c6a97db27a19b4f36b45", "url": "https://api.github.com/repos/rust-lang/rust/commits/055e25acbe9fd48e0791c6a97db27a19b4f36b45", "html_url": "https://github.com/rust-lang/rust/commit/055e25acbe9fd48e0791c6a97db27a19b4f36b45"}, {"sha": "7df277115ac009a671e0a68a27d4c9896bd81a7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7df277115ac009a671e0a68a27d4c9896bd81a7b", "html_url": "https://github.com/rust-lang/rust/commit/7df277115ac009a671e0a68a27d4c9896bd81a7b"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "a2537a1281e918480763f5db85ac022391819eb3", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b", "patch": "@@ -100,6 +100,40 @@ pub enum Ordering {\n    Greater = 1i,\n }\n \n+impl Ordering {\n+    /// Reverse the `Ordering`, so that `Less` becomes `Greater` and\n+    /// vice versa.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```rust\n+    /// assert_eq!(Less.reverse(), Greater);\n+    /// assert_eq!(Equal.reverse(), Equal);\n+    /// assert_eq!(Greater.reverse(), Less);\n+    ///\n+    ///\n+    /// let mut data = &mut [2u, 10, 5, 8];\n+    ///\n+    /// // sort the array from largest to smallest.\n+    /// data.sort_by(|a, b| a.cmp(b).reverse());\n+    ///\n+    /// assert_eq!(data, &mut [10u, 8, 5, 2]);\n+    /// ```\n+    #[inline]\n+    #[experimental]\n+    pub fn reverse(self) -> Ordering {\n+        unsafe {\n+            // this compiles really nicely (to a single instruction);\n+            // an explicit match has a pile of branches and\n+            // comparisons.\n+            //\n+            // NB. it is safe because of the explicit discriminants\n+            // given above.\n+            ::mem::transmute::<_, Ordering>(-(self as i8))\n+        }\n+    }\n+}\n+\n /// Trait for types that form a [total order](\n /// https://en.wikipedia.org/wiki/Total_order).\n ///"}, {"sha": "4a38bb33d3310757f627b669907dff79159cd90d", "filename": "src/libcoretest/cmp.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b/src%2Flibcoretest%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b/src%2Flibcoretest%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fcmp.rs?ref=ce01b4b1b7a9df49ab6bc7c5eaf0b2f95a799a1b", "patch": "@@ -28,6 +28,13 @@ fn test_mut_int_totalord() {\n     assert_eq!((&mut 12i).cmp(&&mut -5), Greater);\n }\n \n+#[test]\n+fn test_ordering_reverse() {\n+    assert_eq!(Less.reverse(), Greater);\n+    assert_eq!(Equal.reverse(), Equal);\n+    assert_eq!(Greater.reverse(), Less);\n+}\n+\n #[test]\n fn test_ordering_order() {\n     assert!(Less < Equal);"}]}