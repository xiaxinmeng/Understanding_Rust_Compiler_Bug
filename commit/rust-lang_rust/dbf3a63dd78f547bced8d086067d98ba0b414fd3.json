{"sha": "dbf3a63dd78f547bced8d086067d98ba0b414fd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZjNhNjNkZDc4ZjU0N2JjZWQ4ZDA4NjA2N2Q5OGJhMGI0MTRmZDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-30T13:39:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-30T13:39:08Z"}, "message": "Auto merge of #27386 - chris-morgan:ctags-stuff-update, r=alexcrichton\n\nAs there\u2019s no C++ runtime any more there\u2019s really no point in having anything but Rust tags being made.\r\n\r\nI\u2019ve also taken the liberty of excluding the compiler parts of this in the `librust%,,` pattern substitution. Whether or not this is \u201ccorrect\u201d will depend on whether you want tags for the compiler or for general use. For myself, I want it for general use.\r\n\r\nI\u2019m not sure how much people use the tags files anyway. I definitely do, but with Racer existing the tags files aren\u2019t quite so necessary.", "tree": {"sha": "4484ea9e4059c1f65b1f3477988a439c096bbed5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4484ea9e4059c1f65b1f3477988a439c096bbed5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbf3a63dd78f547bced8d086067d98ba0b414fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf3a63dd78f547bced8d086067d98ba0b414fd3", "html_url": "https://github.com/rust-lang/rust/commit/dbf3a63dd78f547bced8d086067d98ba0b414fd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbf3a63dd78f547bced8d086067d98ba0b414fd3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fcaf9567691c91eb48693ba9ec234703fd4e0d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fcaf9567691c91eb48693ba9ec234703fd4e0d0", "html_url": "https://github.com/rust-lang/rust/commit/5fcaf9567691c91eb48693ba9ec234703fd4e0d0"}, {"sha": "aede1c73bd2e5540bb62216bff23362e9d8b55a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/aede1c73bd2e5540bb62216bff23362e9d8b55a9", "html_url": "https://github.com/rust-lang/rust/commit/aede1c73bd2e5540bb62216bff23362e9d8b55a9"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "a116f2aba6437ef627a13306d7dd75efe6c805ae", "filename": "mk/ctags.mk", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dbf3a63dd78f547bced8d086067d98ba0b414fd3/mk%2Fctags.mk", "raw_url": "https://github.com/rust-lang/rust/raw/dbf3a63dd78f547bced8d086067d98ba0b414fd3/mk%2Fctags.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fctags.mk?ref=dbf3a63dd78f547bced8d086067d98ba0b414fd3", "patch": "@@ -15,24 +15,11 @@\n \n .PHONY: TAGS.emacs TAGS.vi\n \n-# This is using a blacklist approach, probably more durable than a whitelist.\n-# We exclude: external dependencies (llvm, rt/{msvc,vg}),\n-# tests (compiletest, test) and a couple of other things (rt/arch, etc)\n-CTAGS_LOCATIONS=$(patsubst ${CFG_SRC_DIR}src/llvm,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/compiletest,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/test,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/etc,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/arch,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/msvc,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/vg,, \\\n-\t\t\t\t$(wildcard ${CFG_SRC_DIR}src/*) $(wildcard ${CFG_SRC_DIR}src/rt/*) \\\n-\t\t\t\t))))))))\n-CTAGS_OPTS=--options=\"${CFG_SRC_DIR}src/etc/ctags.rust\" --languages=-javascript --recurse ${CTAGS_LOCATIONS}\n-# We could use `--languages=Rust`, but there is value in producing tags for the\n-# C++ parts of the code base too (at the time of writing, those are .h and .cpp\n-# files in src/rt, src/rt/sync and src/rustllvm); we mainly just want to\n-# exclude the external dependencies.\n+CTAGS_LOCATIONS=$(wildcard ${CFG_SRC_DIR}src/lib*)\n+CTAGS_LOCATIONS=$(patsubst ${CFG_SRC_DIR}src/librust%,, \\\n+                $(patsubst ${CFG_SRC_DIR}src/lib%test,, \\\n+\t\t\t\t$(wildcard ${CFG_SRC_DIR}src/lib*))) ${CFG_SRC_DIR}src/libtest\n+CTAGS_OPTS=--options=\"${CFG_SRC_DIR}src/etc/ctags.rust\" --languages=Rust --recurse ${CTAGS_LOCATIONS}\n \n TAGS.emacs:\n \tctags -e -f $@ ${CTAGS_OPTS}"}, {"sha": "4397f290a5f5de9e6a3aeb29b2d44307d27a631b", "filename": "src/etc/ctags.rust", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbf3a63dd78f547bced8d086067d98ba0b414fd3/src%2Fetc%2Fctags.rust", "raw_url": "https://github.com/rust-lang/rust/raw/dbf3a63dd78f547bced8d086067d98ba0b414fd3/src%2Fetc%2Fctags.rust", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fctags.rust?ref=dbf3a63dd78f547bced8d086067d98ba0b414fd3", "patch": "@@ -5,7 +5,7 @@\n --regex-Rust=/^[ \\t]*(pub[ \\t]+)?enum[ \\t]+([a-zA-Z0-9_]+)/\\2/g,enum,enumeration names/\n --regex-Rust=/^[ \\t]*(pub[ \\t]+)?struct[ \\t]+([a-zA-Z0-9_]+)/\\2/s,structure names/\n --regex-Rust=/^[ \\t]*(pub[ \\t]+)?mod[ \\t]+([a-zA-Z0-9_]+)/\\2/m,modules,module names/\n---regex-Rust=/^[ \\t]*(pub[ \\t]+)?static[ \\t]+([a-zA-Z0-9_]+)/\\2/c,consts,static constants/\n---regex-Rust=/^[ \\t]*(pub[ \\t]+)?trait[ \\t]+([a-zA-Z0-9_]+)/\\2/t,traits,traits/\n---regex-Rust=/^[ \\t]*(pub[ \\t]+)?impl([ \\t\\n]*<[^>]*>)?[ \\t]+(([a-zA-Z0-9_:]+)[ \\t]*(<[^>]*>)?[ \\t]+(for)[ \\t]+)?([a-zA-Z0-9_]+)/\\4 \\6 \\7/i,impls,trait implementations/\n+--regex-Rust=/^[ \\t]*(pub[ \\t]+)?(static|const)[ \\t]+(mut[ \\t]+)?([a-zA-Z0-9_]+)/\\4/c,consts,static constants/\n+--regex-Rust=/^[ \\t]*(pub[ \\t]+)?(unsafe[ \\t]+)?trait[ \\t]+([a-zA-Z0-9_]+)/\\3/t,traits,traits/\n+--regex-Rust=/^[ \\t]*(pub[ \\t]+)?(unsafe[ \\t]+)?impl([ \\t\\n]*<[^>]*>)?[ \\t]+(([a-zA-Z0-9_:]+)[ \\t]*(<[^>]*>)?[ \\t]+(for)[ \\t]+)?([a-zA-Z0-9_]+)/\\5 \\7 \\8/i,impls,trait implementations/\n --regex-Rust=/^[ \\t]*macro_rules![ \\t]+([a-zA-Z0-9_]+)/\\1/d,macros,macro definitions/"}]}