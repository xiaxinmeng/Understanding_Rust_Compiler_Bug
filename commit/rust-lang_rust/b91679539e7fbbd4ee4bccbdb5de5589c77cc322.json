{"sha": "b91679539e7fbbd4ee4bccbdb5de5589c77cc322", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MTY3OTUzOWU3ZmJiZDRlZTRiY2NiZGI1ZGU1NTg5Yzc3Y2MzMjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-27T10:26:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-27T10:26:53Z"}, "message": "use proper platform cache dir", "tree": {"sha": "b20289f7b35bd5b09da375270f46e9f63ae511b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b20289f7b35bd5b09da375270f46e9f63ae511b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b91679539e7fbbd4ee4bccbdb5de5589c77cc322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b91679539e7fbbd4ee4bccbdb5de5589c77cc322", "html_url": "https://github.com/rust-lang/rust/commit/b91679539e7fbbd4ee4bccbdb5de5589c77cc322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b91679539e7fbbd4ee4bccbdb5de5589c77cc322/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4459d14243395e8c90c5b354cf526b9e6ca3ca23", "url": "https://api.github.com/repos/rust-lang/rust/commits/4459d14243395e8c90c5b354cf526b9e6ca3ca23", "html_url": "https://github.com/rust-lang/rust/commit/4459d14243395e8c90c5b354cf526b9e6ca3ca23"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "f06bb2d37235210e40b29cd5ca7bfca340520d05", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b91679539e7fbbd4ee4bccbdb5de5589c77cc322/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91679539e7fbbd4ee4bccbdb5de5589c77cc322/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=b91679539e7fbbd4ee4bccbdb5de5589c77cc322", "patch": "@@ -145,8 +145,9 @@ fn setup(ask_user: bool) {\n         }\n     }\n \n-    // Next, we need our own libstd. We will do this work in ~/.miri.\n-    let dir = directories::UserDirs::new().unwrap().home_dir().join(\".miri\");\n+    // Next, we need our own libstd. We will do this work in whatever is a good cache dir for this platform.\n+    let dirs = directories::ProjectDirs::from(\"miri\", \"miri\", \"miri\").unwrap();\n+    let dir = dirs.cache_dir();\n     if !dir.exists() {\n         fs::create_dir(&dir).unwrap();\n     }"}]}