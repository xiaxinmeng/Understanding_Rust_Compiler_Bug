{"sha": "f8dbd32433bce7e63f48604423ba8d88e2bf47aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZGJkMzI0MzNiY2U3ZTYzZjQ4NjA0NDIzYmE4ZDg4ZTJiZjQ3YWE=", "commit": {"author": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-29T20:42:37Z"}, "committer": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-29T20:42:37Z"}, "message": "Add a couple small tests to the match-same-arm lint.", "tree": {"sha": "69e8c6794f89fa4b2371e2a62c8f397c7b242847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69e8c6794f89fa4b2371e2a62c8f397c7b242847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8dbd32433bce7e63f48604423ba8d88e2bf47aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8dbd32433bce7e63f48604423ba8d88e2bf47aa", "html_url": "https://github.com/rust-lang/rust/commit/f8dbd32433bce7e63f48604423ba8d88e2bf47aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8dbd32433bce7e63f48604423ba8d88e2bf47aa/comments", "author": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "273ddafac59869d35dc654be79e89b0c33b33569", "url": "https://api.github.com/repos/rust-lang/rust/commits/273ddafac59869d35dc654be79e89b0c33b33569", "html_url": "https://github.com/rust-lang/rust/commit/273ddafac59869d35dc654be79e89b0c33b33569"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "04874e60224bf98b823387b1d8122b3114419bba", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f8dbd32433bce7e63f48604423ba8d88e2bf47aa/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8dbd32433bce7e63f48604423ba8d88e2bf47aa/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=f8dbd32433bce7e63f48604423ba8d88e2bf47aa", "patch": "@@ -203,14 +203,10 @@ fn lint_match_arms(cx: &LateContext, expr: &Expr) {\n                     db.span_note(i.body.span, \"same as this\");\n \n                     // Note: this does not use `span_suggestion` on purpose: there is no clean way\n-                    // to\n-                    // remove the other arm. Building a span and suggest to replace it to \"\" makes\n-                    // an\n-                    // even more confusing error message. Also in order not to make up a span for\n-                    // the\n-                    // whole pattern, the suggestion is only shown when there is only one pattern.\n-                    // The\n-                    // user should know about `|` if they are already using it\u2026\n+                    // to remove the other arm. Building a span and suggest to replace it to \"\"\n+                    // makes an even more confusing error message. Also in order not to make up a\n+                    // span for the whole pattern, the suggestion is only shown when there is only\n+                    // one pattern. The user should know about `|` if they are already using it\u2026\n \n                     if i.pats.len() == 1 && j.pats.len() == 1 {\n                         let lhs = snippet(cx, i.pats[0].span, \"<pat1>\");"}, {"sha": "f15a57c4f856f0ec0d234a9b68a0cc483239a608", "filename": "tests/ui/matches.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f8dbd32433bce7e63f48604423ba8d88e2bf47aa/tests%2Fui%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8dbd32433bce7e63f48604423ba8d88e2bf47aa/tests%2Fui%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.rs?ref=f8dbd32433bce7e63f48604423ba8d88e2bf47aa", "patch": "@@ -277,6 +277,26 @@ fn match_wild_err_arm() {\n         Ok(_) => println!(\"ok\"),\n         Err(_) => {unreachable!();}\n     }\n+\n+    // no warning because of the guard\n+    match x {\n+        Ok(x) if x*x == 64 => println!(\"ok\"),\n+        Ok(_) => println!(\"ok\"),\n+        Err(_) => println!(\"err\")\n+    }\n+\n+    match (x, Some(1i32)) {\n+        (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+        (Ok(_), Some(x)) => println!(\"ok {}\", x),\n+        _ => println!(\"err\")\n+    }\n+\n+    // no warning because of the different types for x\n+    match (x, Some(1.0f64)) {\n+        (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+        (Ok(_), Some(x)) => println!(\"ok {}\", x),\n+        _ => println!(\"err\")\n+    }\n }\n \n fn main() {"}, {"sha": "cc7c5a4fee223cef960caf6949d34dede47ee0c4", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f8dbd32433bce7e63f48604423ba8d88e2bf47aa/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8dbd32433bce7e63f48604423ba8d88e2bf47aa/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=f8dbd32433bce7e63f48604423ba8d88e2bf47aa", "patch": "@@ -390,3 +390,21 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:290:29\n+    |\n+290 |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n+    |                             ^^^^^^^^^^^^^^^^^^^^\n+    |\n+note: same as this\n+   --> $DIR/matches.rs:289:29\n+    |\n+289 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+    |                             ^^^^^^^^^^^^^^^^^^^^\n+note: consider refactoring into `(Ok(x), Some(_)) | (Ok(_), Some(x))`\n+   --> $DIR/matches.rs:289:29\n+    |\n+289 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+    |                             ^^^^^^^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+"}]}