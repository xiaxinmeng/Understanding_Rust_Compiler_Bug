{"sha": "5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "node_id": "C_kwDOAAsO6NoAKDVjYWFjOTJkYzA1ZDcyZmVmMzEyMmM0ZTIxYmQzYjcwYzc1ZmNiY2I", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-19T06:24:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-19T06:24:44Z"}, "message": "Rollup merge of #104528 - WaffleLapkin:lazy_lock_docfix, r=matklad\n\nProperly link `{Once,Lazy}{Cell,Lock}` in docs\n\nSee https://github.com/rust-lang/rust/issues/74465#issuecomment-1317947443", "tree": {"sha": "74a7908b2524cb0a44f2fc1ea58734c9803ea212", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74a7908b2524cb0a44f2fc1ea58734c9803ea212"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjeHasCRBK7hj4Ov3rIwAAQiYIAJX+AcpiV80gn4zTTAjMu9GU\nqVo/auiyddQi+rm2QCEgFdmVxSUOpMLMzBj4D4AaVujXa6Nqzyob2fM8HP+OfovQ\nmC+wYbScp4d7b3ZnfH15dSVw7C87O6RG52IjPgIIW8SUzQdxlwrglmxRN+xe9CUT\nfGrwUpdtlPPUctFjTI7u74XV/WRq5vinFJh8kKNx9vJG/ZmEncprlFln+gFnNzgi\n4OZeTNEqn88AgD7Gi64r30r2vDKoJdQ0jL0hYHEBQmlyoUSpP8AmGrMP5+a6HYTI\nhphUagam1Hn2QaX/0ZtXacBvsj0lTUyIao/FZZ15VG2IEWRXSH95OAx6iOnMy4M=\n=8Wj0\n-----END PGP SIGNATURE-----\n", "payload": "tree 74a7908b2524cb0a44f2fc1ea58734c9803ea212\nparent 00876c68c46d892790957931384d15d643de32fa\nparent 57e726108a84802ed61e30c4117eb1756af14e3d\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1668839084 +0530\ncommitter GitHub <noreply@github.com> 1668839084 +0530\n\nRollup merge of #104528 - WaffleLapkin:lazy_lock_docfix, r=matklad\n\nProperly link `{Once,Lazy}{Cell,Lock}` in docs\n\nSee https://github.com/rust-lang/rust/issues/74465#issuecomment-1317947443\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "html_url": "https://github.com/rust-lang/rust/commit/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00876c68c46d892790957931384d15d643de32fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/00876c68c46d892790957931384d15d643de32fa", "html_url": "https://github.com/rust-lang/rust/commit/00876c68c46d892790957931384d15d643de32fa"}, {"sha": "57e726108a84802ed61e30c4117eb1756af14e3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/57e726108a84802ed61e30c4117eb1756af14e3d", "html_url": "https://github.com/rust-lang/rust/commit/57e726108a84802ed61e30c4117eb1756af14e3d"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "b355d94ce4976697ff0226398b040c248f97ee38", "filename": "library/core/src/cell/lazy.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fcore%2Fsrc%2Fcell%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fcore%2Fsrc%2Fcell%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell%2Flazy.rs?ref=5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "patch": "@@ -4,6 +4,10 @@ use crate::ops::Deref;\n \n /// A value which is initialized on the first access.\n ///\n+/// For a thread-safe version of this struct, see [`std::sync::LazyLock`].\n+///\n+/// [`std::sync::LazyLock`]: ../../std/sync/struct.LazyLock.html\n+///\n /// # Examples\n ///\n /// ```"}, {"sha": "8c01643c7ac177a4d0e5027536b605a74e699278", "filename": "library/core/src/cell/once.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fcore%2Fsrc%2Fcell%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fcore%2Fsrc%2Fcell%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell%2Fonce.rs?ref=5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "patch": "@@ -4,8 +4,14 @@ use crate::mem;\n \n /// A cell which can be written to only once.\n ///\n-/// Unlike `RefCell`, a `OnceCell` only provides shared `&T` references to its value.\n-/// Unlike `Cell`, a `OnceCell` doesn't require copying or replacing the value to access it.\n+/// Unlike [`RefCell`], a `OnceCell` only provides shared `&T` references to its value.\n+/// Unlike [`Cell`], a `OnceCell` doesn't require copying or replacing the value to access it.\n+///\n+/// For a thread-safe version of this struct, see [`std::sync::OnceLock`].\n+///\n+/// [`RefCell`]: crate::cell::RefCell\n+/// [`Cell`]: crate::cell::Cell\n+/// [`std::sync::OnceLock`]: ../../std/sync/struct.OnceLock.html\n ///\n /// # Examples\n ///"}, {"sha": "c8d3289ca4a06986bd81ff1ea97ced5996745bd7", "filename": "library/std/src/sync/lazy_lock.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fstd%2Fsrc%2Fsync%2Flazy_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fstd%2Fsrc%2Fsync%2Flazy_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Flazy_lock.rs?ref=5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "patch": "@@ -6,7 +6,9 @@ use crate::sync::OnceLock;\n \n /// A value which is initialized on the first access.\n ///\n-/// This type is a thread-safe `Lazy`, and can be used in statics.\n+/// This type is a thread-safe [`LazyCell`], and can be used in statics.\n+///\n+/// [`LazyCell`]: crate::cell::LazyCell\n ///\n /// # Examples\n ///"}, {"sha": "16d1fd2a576b97703ae8483cd01953997d5b6e0d", "filename": "library/std/src/sync/once_lock.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fstd%2Fsrc%2Fsync%2Fonce_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5caac92dc05d72fef3122c4e21bd3b70c75fcbcb/library%2Fstd%2Fsrc%2Fsync%2Fonce_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce_lock.rs?ref=5caac92dc05d72fef3122c4e21bd3b70c75fcbcb", "patch": "@@ -7,7 +7,9 @@ use crate::sync::Once;\n \n /// A synchronization primitive which can be written to only once.\n ///\n-/// This type is a thread-safe `OnceCell`.\n+/// This type is a thread-safe [`OnceCell`], and can be used in statics.\n+///\n+/// [`OnceCell`]: crate::cell::OnceCell\n ///\n /// # Examples\n ///\n@@ -33,7 +35,7 @@ use crate::sync::Once;\n #[unstable(feature = \"once_cell\", issue = \"74465\")]\n pub struct OnceLock<T> {\n     once: Once,\n-    // Whether or not the value is initialized is tracked by `state_and_queue`.\n+    // Whether or not the value is initialized is tracked by `once.is_completed()`.\n     value: UnsafeCell<MaybeUninit<T>>,\n     /// `PhantomData` to make sure dropck understands we're dropping T in our Drop impl.\n     ///"}]}