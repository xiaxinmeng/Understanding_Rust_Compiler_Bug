{"sha": "e69f2ab8c071f53a09cca0cca335c7e38270f159", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OWYyYWI4YzA3MWY1M2EwOWNjYTBjY2EzMzVjN2UzODI3MGYxNTk=", "commit": {"author": {"name": "Felix Raimundo", "email": "felix.raimundo@telecom-paristech.fr", "date": "2014-10-04T00:16:38Z"}, "committer": {"name": "Felix Raimundo", "email": "felix.raimundo@telecom-paristech.fr", "date": "2014-10-04T17:51:22Z"}, "message": "Changed `extern crate foo as bar;` error message\n\nCloses #17709", "tree": {"sha": "4f4b82baa518fe49b67149dc2c8fd86d2afe8f49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f4b82baa518fe49b67149dc2c8fd86d2afe8f49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e69f2ab8c071f53a09cca0cca335c7e38270f159", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e69f2ab8c071f53a09cca0cca335c7e38270f159", "html_url": "https://github.com/rust-lang/rust/commit/e69f2ab8c071f53a09cca0cca335c7e38270f159", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e69f2ab8c071f53a09cca0cca335c7e38270f159/comments", "author": null, "committer": null, "parents": [{"sha": "ae81c89f34f1ac2cdb596cf216612e94822a8466", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae81c89f34f1ac2cdb596cf216612e94822a8466", "html_url": "https://github.com/rust-lang/rust/commit/ae81c89f34f1ac2cdb596cf216612e94822a8466"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "f2236b6a463e2a004e798e00039e62869f33f771", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e69f2ab8c071f53a09cca0cca335c7e38270f159/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e69f2ab8c071f53a09cca0cca335c7e38270f159/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e69f2ab8c071f53a09cca0cca335c7e38270f159", "patch": "@@ -4981,18 +4981,27 @@ impl<'a> Parser<'a> {\n                                 attrs: Vec<Attribute> )\n                                 -> ItemOrViewItem {\n \n+        let span = self.span;\n         let (maybe_path, ident) = match self.token {\n             token::IDENT(..) => {\n                 let the_ident = self.parse_ident();\n-                self.expect_one_of(&[], &[token::EQ, token::SEMI]);\n-                let path = if self.token == token::EQ {\n-                    self.bump();\n+                let path = if self.eat(&token::EQ) {\n                     let path = self.parse_str();\n                     let span = self.span;\n                     self.obsolete(span, ObsoleteExternCrateRenaming);\n                     Some(path)\n-                } else {None};\n-\n+                } else if self.eat_keyword(keywords::As) {\n+                    // skip the ident if there is one\n+                    if is_ident(&self.token) { self.bump(); }\n+\n+                    self.span_err(span,\n+                                  format!(\"expected `;`, found `as`; perhaps you meant \\\n+                                          to enclose the crate name `{}` in a string?\",\n+                                          the_ident.as_str()).as_slice());\n+                    None\n+                } else {\n+                    None\n+                };\n                 self.expect(&token::SEMI);\n                 (path, the_ident)\n             },"}, {"sha": "70d4ae9ab03dedb5b2f149e1698b38ea35ac064a", "filename": "src/test/compile-fail/extern-crate-as-no-string-help.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e69f2ab8c071f53a09cca0cca335c7e38270f159/src%2Ftest%2Fcompile-fail%2Fextern-crate-as-no-string-help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e69f2ab8c071f53a09cca0cca335c7e38270f159/src%2Ftest%2Fcompile-fail%2Fextern-crate-as-no-string-help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextern-crate-as-no-string-help.rs?ref=e69f2ab8c071f53a09cca0cca335c7e38270f159", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests that the proper help is displayed in the error message\n+\n+extern crate foo as bar;\n+//~^ ERROR expected `;`, found `as`; perhaps you meant to enclose the crate name `foo` in a string?"}]}