{"sha": "ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZGI1ZTk4Y2JiNGZlMTQxMWRkNzFhZDg0ZWYyZWVjZjg4MjE0ODc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T03:02:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-08T03:02:41Z"}, "message": "Rollup merge of #65154 - skinny121:const-arg-diagnostic, r=varkor\n\nFix const generic arguments not displaying in types mismatch diagnostic\n\nFixes #61395", "tree": {"sha": "e2a2b14b9d5eef0fa423e77cf83012f9709ed88c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2a2b14b9d5eef0fa423e77cf83012f9709ed88c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdm/xRCRBK7hj4Ov3rIwAAdHIIAFQJqmqyXQ0Q4WmBCSNTbgg8\nhqK64PovgxOB+O+7PdL8kdMKP79ephYf4IA28tqdjsnsvDOoKqMR6WNBUpnBmmnN\nyIBt7e+gjE20kjR/TSPWqz+K/acDEG/pTnujMFTrv63vD4MvVvvzVIFGljdWwKe1\n3QtX9FD7N35OXiBluOa/43PjEpySY7bGdKs+1j/oXrBwJhiRSUXh40c8mWEMA4+g\nW34Rc11iIV1ki7OxYkH1GrQNUgS40Octa0QQKIVAcdPD30ggtlBDOpRTqmkoLijn\nOqmL2xiAvwmsXOfUz+Uuw4xin2nxOtyMk/Zr2rIykRH/NIyYk44oej28kFwHz/w=\n=QB5b\n-----END PGP SIGNATURE-----\n", "payload": "tree e2a2b14b9d5eef0fa423e77cf83012f9709ed88c\nparent 5422ed783415e07d5cc0e87e5ac87cb75d63a868\nparent 74eac929c270e896752fb826a3fed34aa0ef5725\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570503761 +0200\ncommitter GitHub <noreply@github.com> 1570503761 +0200\n\nRollup merge of #65154 - skinny121:const-arg-diagnostic, r=varkor\n\nFix const generic arguments not displaying in types mismatch diagnostic\n\nFixes #61395\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "html_url": "https://github.com/rust-lang/rust/commit/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5422ed783415e07d5cc0e87e5ac87cb75d63a868", "url": "https://api.github.com/repos/rust-lang/rust/commits/5422ed783415e07d5cc0e87e5ac87cb75d63a868", "html_url": "https://github.com/rust-lang/rust/commit/5422ed783415e07d5cc0e87e5ac87cb75d63a868"}, {"sha": "74eac929c270e896752fb826a3fed34aa0ef5725", "url": "https://api.github.com/repos/rust-lang/rust/commits/74eac929c270e896752fb826a3fed34aa0ef5725", "html_url": "https://github.com/rust-lang/rust/commit/74eac929c270e896752fb826a3fed34aa0ef5725"}], "stats": {"total": 79, "additions": 72, "deletions": 7}, "files": [{"sha": "f1192c7ce10a9577858ea98883b977e91831a69e", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "patch": "@@ -935,6 +935,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         .filter(|(a, b)| a == b)\n                         .count();\n                     let len = sub1.len() - common_default_params;\n+                    let consts_offset = len - sub1.consts().count();\n \n                     // Only draw `<...>` if there're lifetime/type arguments.\n                     if len > 0 {\n@@ -981,7 +982,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     //         ^ elided type as this type argument was the same in both sides\n                     let type_arguments = sub1.types().zip(sub2.types());\n                     let regions_len = sub1.regions().count();\n-                    for (i, (ta1, ta2)) in type_arguments.take(len).enumerate() {\n+                    let num_display_types = consts_offset - regions_len;\n+                    for (i, (ta1, ta2)) in type_arguments.take(num_display_types).enumerate() {\n                         let i = i + regions_len;\n                         if ta1 == ta2 {\n                             values.0.push_normal(\"_\");\n@@ -994,6 +996,21 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         self.push_comma(&mut values.0, &mut values.1, len, i);\n                     }\n \n+                    // Do the same for const arguments, if they are equal, do not highlight and\n+                    // elide them from the output.\n+                    let const_arguments = sub1.consts().zip(sub2.consts());\n+                    for (i, (ca1, ca2)) in const_arguments.enumerate() {\n+                        let i = i + consts_offset;\n+                        if ca1 == ca2 {\n+                            values.0.push_normal(\"_\");\n+                            values.1.push_normal(\"_\");\n+                        } else {\n+                            values.0.push_highlighted(ca1.to_string());\n+                            values.1.push_highlighted(ca2.to_string());\n+                        }\n+                        self.push_comma(&mut values.0, &mut values.1, len, i);\n+                    }\n+\n                     // Close the type argument bracket.\n                     // Only draw `<...>` if there're lifetime/type arguments.\n                     if len > 0 {"}, {"sha": "380a70d664e05939a032bf5041b79ffd158a82f5", "filename": "src/test/ui/const-generics/slice-const-param-mismatch.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr?ref=ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "patch": "@@ -12,26 +12,26 @@ error[E0308]: mismatched types\n LL |     let _: ConstString<\"Hello\"> = ConstString::<\"World\">;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `\"Hello\"`, found `\"World\"`\n    |\n-   = note: expected type `ConstString<>`\n-              found type `ConstString<>`\n+   = note: expected type `ConstString<\"Hello\">`\n+              found type `ConstString<\"World\">`\n \n error[E0308]: mismatched types\n   --> $DIR/slice-const-param-mismatch.rs:11:33\n    |\n LL |     let _: ConstString<\"\u2107\u31c8\u21a6\"> = ConstString::<\"\u2107\u31c8\u21a5\">;\n    |                                  ^^^^^^^^^^^^^^^^^^^^^ expected `\"\u2107\u31c8\u21a6\"`, found `\"\u2107\u31c8\u21a5\"`\n    |\n-   = note: expected type `ConstString<>`\n-              found type `ConstString<>`\n+   = note: expected type `ConstString<\"\u2107\u31c8\u21a6\">`\n+              found type `ConstString<\"\u2107\u31c8\u21a5\">`\n \n error[E0308]: mismatched types\n   --> $DIR/slice-const-param-mismatch.rs:13:33\n    |\n LL |     let _: ConstBytes<b\"AAA\"> = ConstBytes::<b\"BBB\">;\n    |                                 ^^^^^^^^^^^^^^^^^^^^ expected `b\"AAA\"`, found `b\"BBB\"`\n    |\n-   = note: expected type `ConstBytes<>`\n-              found type `ConstBytes<>`\n+   = note: expected type `ConstBytes<b\"AAA\">`\n+              found type `ConstBytes<b\"BBB\">`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "b25b7331017e72dc7a5f7753d6099e9673211708", "filename": "src/test/ui/const-generics/types-mismatch-const-args.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.rs?ref=ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "patch": "@@ -0,0 +1,19 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+// tests the diagnostic output of type mismatches for types that have const generics arguments.\n+\n+use std::marker::PhantomData;\n+\n+struct A<'a, T, const X: u32, const Y: u32> {\n+    data: PhantomData<&'a T>\n+}\n+\n+fn a<'a, 'b>() {\n+    let _: A<'a, u32, {2u32}, {3u32}> = A::<'a, u32, {4u32}, {3u32}> { data: PhantomData };\n+    //~^ ERROR mismatched types\n+    let _: A<'a, u16, {2u32}, {3u32}> = A::<'b, u32, {2u32}, {3u32}> { data: PhantomData };\n+    //~^ ERROR mismatched types\n+}\n+\n+pub fn main() {}"}, {"sha": "805a3067d3b6bff0237906ca30537bee5495c4a1", "filename": "src/test/ui/const-generics/types-mismatch-const-args.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.stderr?ref=ecdb5e98cbb4fe1411dd71ad84ef2eecf8821487", "patch": "@@ -0,0 +1,29 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/types-mismatch-const-args.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0308]: mismatched types\n+  --> $DIR/types-mismatch-const-args.rs:13:41\n+   |\n+LL |     let _: A<'a, u32, {2u32}, {3u32}> = A::<'a, u32, {4u32}, {3u32}> { data: PhantomData };\n+   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `2u32`, found `4u32`\n+   |\n+   = note: expected type `A<'_, _, 2u32, _>`\n+              found type `A<'_, _, 4u32, _>`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/types-mismatch-const-args.rs:15:41\n+   |\n+LL |     let _: A<'a, u16, {2u32}, {3u32}> = A::<'b, u32, {2u32}, {3u32}> { data: PhantomData };\n+   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected u16, found u32\n+   |\n+   = note: expected type `A<'a, u16, _, _>`\n+              found type `A<'b, u32, _, _>`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}