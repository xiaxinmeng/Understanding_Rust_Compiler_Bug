{"sha": "2eef27a6c1808377e84d68c474f8246a2dafda63", "node_id": "C_kwDOAAsO6NoAKDJlZWYyN2E2YzE4MDgzNzdlODRkNjhjNDc0ZjgyNDZhMmRhZmRhNjM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-10T14:33:15Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-05-16T11:43:25Z"}, "message": "Merge `MetadataRef` type aliases", "tree": {"sha": "05c7c9b6004831d3112a90fd377892bc2f0f2b13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05c7c9b6004831d3112a90fd377892bc2f0f2b13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eef27a6c1808377e84d68c474f8246a2dafda63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eef27a6c1808377e84d68c474f8246a2dafda63", "html_url": "https://github.com/rust-lang/rust/commit/2eef27a6c1808377e84d68c474f8246a2dafda63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eef27a6c1808377e84d68c474f8246a2dafda63/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8006510ab0f69ee75e9c3f7e8bff3776886dae51", "url": "https://api.github.com/repos/rust-lang/rust/commits/8006510ab0f69ee75e9c3f7e8bff3776886dae51", "html_url": "https://github.com/rust-lang/rust/commit/8006510ab0f69ee75e9c3f7e8bff3776886dae51"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "661dd5dacf517deba4cca469df1ec877e6854f59", "filename": "compiler/rustc_data_structures/src/sync.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2eef27a6c1808377e84d68c474f8246a2dafda63/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eef27a6c1808377e84d68c474f8246a2dafda63/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs?ref=2eef27a6c1808377e84d68c474f8246a2dafda63", "patch": "@@ -92,6 +92,9 @@ mod mode {\n }\n \n pub use mode::{is_dyn_thread_safe, set_dyn_thread_safe_mode};\n+\n+pub type MetadataRef = OwnedSlice;\n+\n cfg_if! {\n     if #[cfg(not(parallel_compiler))] {\n         pub unsafe auto trait Send {}\n@@ -244,8 +247,6 @@ cfg_if! {\n             r\n         }\n \n-        pub type MetadataRef = OwnedSlice;\n-\n         pub use std::rc::Rc as Lrc;\n         pub use std::rc::Weak as Weak;\n         pub use std::cell::Ref as ReadGuard;\n@@ -517,8 +518,6 @@ cfg_if! {\n             }\n         }\n \n-        pub type MetadataRef = OwnedSlice;\n-\n         /// This makes locks panic if they are already held.\n         /// It is only useful when you are running in a single thread\n         const ERROR_CHECKING: bool = false;"}]}