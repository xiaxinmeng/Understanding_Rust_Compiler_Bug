{"sha": "220ecdaf713e48a9c7f264b11f2acb197f95bfe4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMGVjZGFmNzEzZTQ4YTljN2YyNjRiMTFmMmFjYjE5N2Y5NWJmZTQ=", "commit": {"author": {"name": "Sinh Pham", "email": "phamansinh@gmail.com", "date": "2015-09-27T20:32:07Z"}, "committer": {"name": "Sinh Pham", "email": "phamansinh@gmail.com", "date": "2015-09-27T21:03:48Z"}, "message": "Fix https://github.com/nrc/rustfmt/issues/377", "tree": {"sha": "6b8a707de36318894e1900a941c743244a31a169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b8a707de36318894e1900a941c743244a31a169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/220ecdaf713e48a9c7f264b11f2acb197f95bfe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/220ecdaf713e48a9c7f264b11f2acb197f95bfe4", "html_url": "https://github.com/rust-lang/rust/commit/220ecdaf713e48a9c7f264b11f2acb197f95bfe4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/220ecdaf713e48a9c7f264b11f2acb197f95bfe4/comments", "author": {"login": "sinhpham", "id": 633331, "node_id": "MDQ6VXNlcjYzMzMzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/633331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinhpham", "html_url": "https://github.com/sinhpham", "followers_url": "https://api.github.com/users/sinhpham/followers", "following_url": "https://api.github.com/users/sinhpham/following{/other_user}", "gists_url": "https://api.github.com/users/sinhpham/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinhpham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinhpham/subscriptions", "organizations_url": "https://api.github.com/users/sinhpham/orgs", "repos_url": "https://api.github.com/users/sinhpham/repos", "events_url": "https://api.github.com/users/sinhpham/events{/privacy}", "received_events_url": "https://api.github.com/users/sinhpham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinhpham", "id": 633331, "node_id": "MDQ6VXNlcjYzMzMzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/633331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinhpham", "html_url": "https://github.com/sinhpham", "followers_url": "https://api.github.com/users/sinhpham/followers", "following_url": "https://api.github.com/users/sinhpham/following{/other_user}", "gists_url": "https://api.github.com/users/sinhpham/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinhpham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinhpham/subscriptions", "organizations_url": "https://api.github.com/users/sinhpham/orgs", "repos_url": "https://api.github.com/users/sinhpham/repos", "events_url": "https://api.github.com/users/sinhpham/events{/privacy}", "received_events_url": "https://api.github.com/users/sinhpham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7efdd60c870b064f91c9fb413a1fc9c9aeb3834", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7efdd60c870b064f91c9fb413a1fc9c9aeb3834", "html_url": "https://github.com/rust-lang/rust/commit/d7efdd60c870b064f91c9fb413a1fc9c9aeb3834"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "333c0164d832bd8b4556e087c1e6cc9687d6c63b", "filename": "src/types.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/220ecdaf713e48a9c7f264b11f2acb197f95bfe4/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220ecdaf713e48a9c7f264b11f2acb197f95bfe4/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=220ecdaf713e48a9c7f264b11f2acb197f95bfe4", "patch": "@@ -482,6 +482,27 @@ impl Rewrite for ast::Ty {\n                 let budget = try_opt!(width.checked_sub(2));\n                 ty.rewrite(context, budget, offset + 1).map(|ty_str| format!(\"({})\", ty_str))\n             }\n+            ast::TyTup(ref tup_ret) => {\n+                let inner = try_opt!(tup_ret.iter()\n+                                            .map(|item| item.rewrite(context, width, offset))\n+                                            .fold(Some(\"\".to_owned()),\n+                                                  |sum, x| {\n+                                                      match (sum, x) {\n+                                                          (Some(sum), Some(x)) => {\n+                                                              if sum == \"\" {\n+                                                                  // First item.\n+                                                                  Some(x)\n+                                                              } else {\n+                                                                  Some(sum + \", \" + &x)\n+                                                              }\n+                                                          }\n+                                                          _ => None,\n+                                                      }\n+                                                  }));\n+\n+                let ret = format!(\"({})\", inner);\n+                wrap_str(ret, context.config.max_width, width, offset)\n+            }\n             _ => wrap_str(pprust::ty_to_string(self),\n                           context.config.max_width,\n                           width,"}, {"sha": "d8a705fb39b1f500d360af580ee1257a391838ac", "filename": "tests/target/fn.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/220ecdaf713e48a9c7f264b11f2acb197f95bfe4/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220ecdaf713e48a9c7f264b11f2acb197f95bfe4/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=220ecdaf713e48a9c7f264b11f2acb197f95bfe4", "patch": "@@ -79,6 +79,9 @@ fn homura<T: Deref<Target = i32>>(_: T) {\n \n }\n \n+fn issue377() -> (Box<CompositorProxy + Send>, Box<CompositorReceiver>) {\n+}\n+\n fn main() {\n     let _ = function(move || 5);\n     let _ = move || 42;"}]}