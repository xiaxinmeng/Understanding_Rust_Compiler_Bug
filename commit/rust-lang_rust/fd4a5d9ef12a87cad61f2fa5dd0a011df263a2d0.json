{"sha": "fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNGE1ZDllZjEyYTg3Y2FkNjFmMmZhNWRkMGEwMTFkZjI2M2EyZDA=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-15T03:46:05Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-19T15:43:24Z"}, "message": "librbml: use `#[deriving(Copy)]`", "tree": {"sha": "4975bc3dc192d495bafa0f1bf5dcdfb6ff3ba59a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4975bc3dc192d495bafa0f1bf5dcdfb6ff3ba59a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0", "html_url": "https://github.com/rust-lang/rust/commit/fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0/comments", "author": null, "committer": null, "parents": [{"sha": "a18d090c3cf6223b90c5a39e66ddef3e1932c7c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a18d090c3cf6223b90c5a39e66ddef3e1932c7c7", "html_url": "https://github.com/rust-lang/rust/commit/a18d090c3cf6223b90c5a39e66ddef3e1932c7c7"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "19e79b1eb7b2d4cf7bca0c6b7e91c023c81e7599", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=fd4a5d9ef12a87cad61f2fa5dd0a011df263a2d0", "patch": "@@ -41,15 +41,13 @@ use std::str;\n pub mod io;\n \n /// Common data structures\n-#[deriving(Clone)]\n+#[deriving(Clone, Copy)]\n pub struct Doc<'a> {\n     pub data: &'a [u8],\n     pub start: uint,\n     pub end: uint,\n }\n \n-impl<'doc> Copy for Doc<'doc> {}\n-\n impl<'doc> Doc<'doc> {\n     pub fn new(data: &'doc [u8]) -> Doc<'doc> {\n         Doc { data: data, start: 0u, end: data.len() }\n@@ -73,7 +71,7 @@ pub struct TaggedDoc<'a> {\n     pub doc: Doc<'a>,\n }\n \n-#[deriving(Show)]\n+#[deriving(Copy, Show)]\n pub enum EbmlEncoderTag {\n     EsUint,     // 0\n     EsU64,      // 1\n@@ -107,8 +105,6 @@ pub enum EbmlEncoderTag {\n     EsLabel, // Used only when debugging\n }\n \n-impl Copy for EbmlEncoderTag {}\n-\n #[deriving(Show)]\n pub enum Error {\n     IntTooBig(uint),\n@@ -151,13 +147,12 @@ pub mod reader {\n         )\n     }\n \n+    #[deriving(Copy)]\n     pub struct Res {\n         pub val: uint,\n         pub next: uint\n     }\n \n-    impl Copy for Res {}\n-\n     #[inline(never)]\n     fn vuint_at_slow(data: &[u8], start: uint) -> DecodeResult<Res> {\n         let a = data[start];"}]}