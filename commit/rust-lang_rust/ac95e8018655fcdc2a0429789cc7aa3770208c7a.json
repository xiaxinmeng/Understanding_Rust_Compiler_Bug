{"sha": "ac95e8018655fcdc2a0429789cc7aa3770208c7a", "node_id": "C_kwDOAAsO6NoAKGFjOTVlODAxODY1NWZjZGMyYTA0Mjk3ODljYzdhYTM3NzAyMDhjN2E", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-03-29T02:30:39Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-03-29T05:27:07Z"}, "message": "Suggest function borrow ignoring needs_note\n\n`needs_note` is false if we've already suggested why the type is Copy...\nbut that has nothing to do with the diagnostic.", "tree": {"sha": "f70a8b9d933775c640b6a7e0ebdd4f5f880f9e19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f70a8b9d933775c640b6a7e0ebdd4f5f880f9e19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac95e8018655fcdc2a0429789cc7aa3770208c7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac95e8018655fcdc2a0429789cc7aa3770208c7a", "html_url": "https://github.com/rust-lang/rust/commit/ac95e8018655fcdc2a0429789cc7aa3770208c7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac95e8018655fcdc2a0429789cc7aa3770208c7a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9b02e13a6b4572570c816e46aab3aba62473863", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9b02e13a6b4572570c816e46aab3aba62473863", "html_url": "https://github.com/rust-lang/rust/commit/a9b02e13a6b4572570c816e46aab3aba62473863"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "883f711b201a97c837faab91470a18378fb08656", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -284,10 +284,14 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 None => \"value\".to_owned(),\n             };\n             if self.suggest_borrow_fn_like(&mut err, ty, &move_site_vec, &note_msg) {\n-                // Suppress the next note, since we don't want to put more `Fn`-like bounds onto something that already has them\n-            } else if needs_note {\n+                // Suppress the next suggestion since we don't want to put more bounds onto\n+                // something that already has `Fn`-like bounds (or is a closure), so we can't\n+                // restrict anyways.\n+            } else {\n                 self.suggest_adding_copy_bounds(&mut err, ty, span);\n+            }\n \n+            if needs_note {\n                 let span = if let Some(local) = place.as_local() {\n                     Some(self.body.local_decls[local].source_info.span)\n                 } else {"}, {"sha": "515e0cf01429d51563467852f6d1d08d92e07958", "filename": "src/test/ui/chalkify/closure.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fchalkify%2Fclosure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fchalkify%2Fclosure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Fclosure.stderr?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -12,6 +12,10 @@ note: closure cannot be moved more than once as it is not `Copy` due to moving t\n    |\n LL |         a = 1;\n    |         ^\n+help: consider mutably borrowing `b`\n+   |\n+LL |     let mut c = &mut b;\n+   |                 ++++\n \n error: aborting due to previous error\n "}, {"sha": "83d282aadb9153dce4f0dd7cd542f463e54772f4", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/closure-origin-multi-variant-diagnostics.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-multi-variant-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-multi-variant-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-multi-variant-diagnostics.stderr?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -11,6 +11,10 @@ note: closure cannot be moved more than once as it is not `Copy` due to moving t\n    |\n LL |         if let MultiVariant::Point(ref mut x, _) = point {\n    |                                                    ^^^^^\n+help: consider mutably borrowing `c`\n+   |\n+LL |     let a = &mut c;\n+   |             ++++\n \n error: aborting due to previous error\n "}, {"sha": "46323b75210cb417a70ee620f364f96e0d6b5086", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/closure-origin-single-variant-diagnostics.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-single-variant-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-single-variant-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-single-variant-diagnostics.stderr?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -11,6 +11,10 @@ note: closure cannot be moved more than once as it is not `Copy` due to moving t\n    |\n LL |         let SingleVariant::Point(ref mut x, _) = point;\n    |                                                  ^^^^^\n+help: consider mutably borrowing `c`\n+   |\n+LL |     let b = &mut c;\n+   |             ++++\n \n error: aborting due to previous error\n "}, {"sha": "25029cc7bd8b899c93341d0dda08c5203486652c", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/closure-origin-struct-diagnostics.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-struct-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-struct-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-struct-diagnostics.stderr?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -11,6 +11,10 @@ note: closure cannot be moved more than once as it is not `Copy` due to moving t\n    |\n LL |         x.y.a += 1;\n    |         ^^^^^\n+help: consider mutably borrowing `hello`\n+   |\n+LL |     let b = &mut hello;\n+   |             ++++\n \n error: aborting due to previous error\n "}, {"sha": "06ef7baf9c068b84f62ab7cb042a2e8bc1dc0dad", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/closure-origin-tuple-diagnostics-1.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-tuple-diagnostics-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-tuple-diagnostics-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-tuple-diagnostics-1.stderr?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -11,6 +11,10 @@ note: closure cannot be moved more than once as it is not `Copy` due to moving t\n    |\n LL |         x.0 += 1;\n    |         ^^^\n+help: consider mutably borrowing `hello`\n+   |\n+LL |     let b = &mut hello;\n+   |             ++++\n \n error: aborting due to previous error\n "}, {"sha": "51771ced7f22f527fb0a18ac1187e5fba32d4fb7", "filename": "src/test/ui/moves/borrow-closures-instead-of-move.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.rs?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -17,11 +17,13 @@ fn takes_fn_mut(m: impl FnMut()) {\n \n fn has_closure() {\n     let mut x = 0;\n-    let closure = || {\n+    let mut closure = || {\n         x += 1;\n     };\n     takes_fnonce(closure);\n+    //~^ HELP consider mutably borrowing\n     closure();\n+    //~^ ERROR borrow of moved value\n }\n \n fn maybe() -> bool {"}, {"sha": "3146b6959001eb7c90793711f26044e01a63166e", "filename": "src/test/ui/moves/borrow-closures-instead-of-move.stderr", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.stderr?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -29,6 +29,25 @@ help: consider mutably borrowing `m`\n LL |         takes_fnonce(&mut m);\n    |                      ++++\n \n-error: aborting due to 2 previous errors\n+error[E0382]: borrow of moved value: `closure`\n+  --> $DIR/borrow-closures-instead-of-move.rs:25:5\n+   |\n+LL |     takes_fnonce(closure);\n+   |                  ------- value moved here\n+LL |\n+LL |     closure();\n+   |     ^^^^^^^ value borrowed here after move\n+   |\n+note: closure cannot be moved more than once as it is not `Copy` due to moving the variable `x` out of its environment\n+  --> $DIR/borrow-closures-instead-of-move.rs:21:9\n+   |\n+LL |         x += 1;\n+   |         ^\n+help: consider mutably borrowing `closure`\n+   |\n+LL |     takes_fnonce(&mut closure);\n+   |                  ++++\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0382`."}, {"sha": "93e011ccec4fab83aa1490311dbd3c4c02915dbd", "filename": "src/test/ui/not-copy-closure.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fnot-copy-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac95e8018655fcdc2a0429789cc7aa3770208c7a/src%2Ftest%2Fui%2Fnot-copy-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnot-copy-closure.stderr?ref=ac95e8018655fcdc2a0429789cc7aa3770208c7a", "patch": "@@ -11,6 +11,10 @@ note: closure cannot be moved more than once as it is not `Copy` due to moving t\n    |\n LL |         a += 1;\n    |         ^\n+help: consider mutably borrowing `hello`\n+   |\n+LL |     let b = &mut hello;\n+   |             ++++\n \n error: aborting due to previous error\n "}]}