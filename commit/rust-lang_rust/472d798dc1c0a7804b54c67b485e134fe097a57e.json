{"sha": "472d798dc1c0a7804b54c67b485e134fe097a57e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MmQ3OThkYzFjMGE3ODA0YjU0YzY3YjQ4NWUxMzRmZTA5N2E1N2U=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-10-20T18:13:41Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-10-29T16:09:20Z"}, "message": "Work around const_eval issues by changing signed integer `min_value`s.\n\nOtherwise, run-pass/deriving-primitive.rs breaks on 32-bit platforms,\nbecause `int::min_value` is `0xffffffff7fffffff` when evaluated for the\ndiscriminant declaration.", "tree": {"sha": "08b5e84befe41e821f7cdfd9d3a03f591e10c9e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08b5e84befe41e821f7cdfd9d3a03f591e10c9e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/472d798dc1c0a7804b54c67b485e134fe097a57e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/472d798dc1c0a7804b54c67b485e134fe097a57e", "html_url": "https://github.com/rust-lang/rust/commit/472d798dc1c0a7804b54c67b485e134fe097a57e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/472d798dc1c0a7804b54c67b485e134fe097a57e/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9bb9738d8fcd95222fc0c9383953881e31d4d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/de9bb9738d8fcd95222fc0c9383953881e31d4d5", "html_url": "https://github.com/rust-lang/rust/commit/de9bb9738d8fcd95222fc0c9383953881e31d4d5"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "ba1a7a4f912b8c6ea38dec45ab1b0cddd81414bb", "filename": "src/libstd/num/int_macros.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/472d798dc1c0a7804b54c67b485e134fe097a57e/src%2Flibstd%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/472d798dc1c0a7804b54c67b485e134fe097a57e/src%2Flibstd%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint_macros.rs?ref=472d798dc1c0a7804b54c67b485e134fe097a57e", "patch": "@@ -29,7 +29,8 @@ pub static bits : uint = $bits;\n pub static bytes : uint = ($bits / 8);\n \n pub static min_value: $T = (-1 as $T) << (bits - 1);\n-pub static max_value: $T = min_value - 1 as $T;\n+// FIXME(#9837): Compute min_value like this so the high bits that shouldn't exist are 0.\n+pub static max_value: $T = !min_value;\n \n impl CheckedDiv for $T {\n     #[inline]"}]}