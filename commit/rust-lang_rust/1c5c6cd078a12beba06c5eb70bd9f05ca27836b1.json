{"sha": "1c5c6cd078a12beba06c5eb70bd9f05ca27836b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNWM2Y2QwNzhhMTJiZWJhMDZjNWViNzBiZDlmMDVjYTI3ODM2YjE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-15T15:15:17Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-15T15:15:17Z"}, "message": "allow zsts in the zero case of a nullable pointer optimized enum", "tree": {"sha": "997775607c3bd5786dd5c73de4dcc5d8b2784689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/997775607c3bd5786dd5c73de4dcc5d8b2784689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYKyaFAAoJEFbW7qD8Z6xGKcwP/2Ykgnv5F/WaYA9xzxXIFWpu\nNC4mIWN4zvqRtWSHD0NULCu/sbmkWFS7ef5NqHRIJjGc/oxEz91xGj8SBTzGUdaQ\nL2BcOgBRs0YMLMvVkBAk6EVkOCBVrlaNTI5E+q4ZS5GT2zQpunDdbdrZ6KYYbxJF\nY3uXJC1u8M/OSvdYGHjt1hLCbcRfVdproPMZDS8IED066/HI+eKRH170KnmG8hBv\nN1a2qTzs9i2V3MQm2lTRawqX12H2Kc2YBJDah098+jEYhNyZrZUlZuTxkF//u5BL\nvXXfXko7iLJpdI5DcxcC8X/28tmncGG6R1MNlrYtPlLtGFq0SbXpuSBr4dfS0wJo\nO5B7q5+81XyYwO0t8+Y8y+IKsazmriryBrpQd+Nx51VKJOBa52t8UthV2EsCXUSb\nMOM9LaBD4NRaXSyohLBbWwNeN9U8V8wyfWg9B8Q3PWl5t46XImPMqAHCN3ym8wR+\nEUA4XmN5HrO4WHKu/Ioj0J24mKSk0N+IE+QPd2+fQ02GT3Xqz6Vy2oI1Yszf3I32\nbe6H2ZFRkvcFi7dhzNuexXIOzCS96yXIkUEHZPrqjew8vsTUZYBz2IOdbD2roBFA\nbhGqHmkzEsykml/BzK42XEfWyAmF1sp5ZCiRu+9MNDwJcOjQqWUPm5RtwvoSoPTJ\nYt1Lbtx3fZ8MfKdWQgjf\n=W7kR\n-----END PGP SIGNATURE-----", "payload": "tree 997775607c3bd5786dd5c73de4dcc5d8b2784689\nparent 5ee75c0805be98f89ac4edd6101a0960add75108\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1479222917 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1479222917 +0100\n\nallow zsts in the zero case of a nullable pointer optimized enum"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1", "html_url": "https://github.com/rust-lang/rust/commit/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ee75c0805be98f89ac4edd6101a0960add75108", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ee75c0805be98f89ac4edd6101a0960add75108", "html_url": "https://github.com/rust-lang/rust/commit/5ee75c0805be98f89ac4edd6101a0960add75108"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "6697dcd60e65bf6002ce5d0d3c9d76963e701847", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=1c5c6cd078a12beba06c5eb70bd9f05ca27836b1", "patch": "@@ -518,7 +518,11 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                                 let value_ty = self.operand_ty(operand);\n                                 self.write_value(value, dest, value_ty)?;\n                             } else {\n-                                assert_eq!(operands.len(), 0);\n+                                if let Some(operand) = operands.get(0) {\n+                                    assert_eq!(operands.len(), 1);\n+                                    let operand_ty = self.operand_ty(operand);\n+                                    assert_eq!(self.type_size(operand_ty), Some(0));\n+                                }\n                                 let value_size = self.type_size(dest_ty).expect(\"pointer types are sized\");\n                                 let zero = PrimVal::from_int_with_size(0, value_size);\n                                 self.write_primval(dest, zero)?;"}, {"sha": "1342c4e104de5bf01f16f6375a90dfe87068ac65", "filename": "tests/run-pass/enum-nullable-const-null-with-fields.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1/tests%2Frun-pass%2Fenum-nullable-const-null-with-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1/tests%2Frun-pass%2Fenum-nullable-const-null-with-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fenum-nullable-const-null-with-fields.rs?ref=1c5c6cd078a12beba06c5eb70bd9f05ca27836b1", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+use std::result::Result;\n+use std::result::Result::Ok;\n+\n+static C: Result<(), Box<isize>> = Ok(());\n+\n+// This is because of yet another bad assertion (ICE) about the null side of a nullable enum.\n+// So we won't actually compile if the bug is present, but we check the value in main anyway.\n+\n+pub fn main() {\n+    assert!(C.is_ok());\n+}"}, {"sha": "7644da08e4afa7cf144dbbb3a5b0142f687ac5c7", "filename": "tests/run-pass/unique-send.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1/tests%2Frun-pass%2Funique-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c5c6cd078a12beba06c5eb70bd9f05ca27836b1/tests%2Frun-pass%2Funique-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Funique-send.rs?ref=1c5c6cd078a12beba06c5eb70bd9f05ca27836b1", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(box_syntax)]\n+\n+use std::sync::mpsc::channel;\n+\n+pub fn main() {\n+    let (tx, rx) = channel::<Box<_>>();\n+    tx.send(box 100).unwrap();\n+    let v = rx.recv().unwrap();\n+    assert_eq!(v, box 100);\n+}"}]}