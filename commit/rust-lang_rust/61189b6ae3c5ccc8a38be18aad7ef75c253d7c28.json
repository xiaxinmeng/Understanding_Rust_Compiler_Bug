{"sha": "61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "node_id": "C_kwDOAAsO6NoAKDYxMTg5YjZhZTNjNWNjYzhhMzhiZTE4YWFkN2VmNzVjMjUzZDdjMjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-06T12:27:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-06T12:27:43Z"}, "message": "Rollup merge of #105310 - compiler-errors:issue-105288, r=eholk\n\nBe more careful about unresolved exprs in suggestion\n\nFixes #105288", "tree": {"sha": "8e9023d7c59d97d11788747ef7c9e4651b8cfc7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e9023d7c59d97d11788747ef7c9e4651b8cfc7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjjzU/CRBK7hj4Ov3rIwAAeH8IABvEhUBJLVNxUNmCo6mlAMy0\nOeKYWWtrzMwGIUIWkcl2r7aydqJTAbKF5ty/3BQSbESnWD2BCi6JdGbb74jJebDZ\n2jdQZmd/ptatNM0pOrQOCdz3gx4jaNs7cs4PJJibltHujGGZjdoyzG2hd+22xpNU\niLVizTuwgLd/oXKUjf0R5jhZ5K+J8wsBQnZymqfHmH1+34xdFRc91Uhwsh2BNEN0\nyZwoAXCWB0mBl4sWsntZAx0Z6qOM4FsMyUgAna2NOOWC1ACfkC5Q2Kpj0h3sXubi\nqOoAp/mh2hgEtnBUH0N3Mza/zwapTa6LTF3wgkM0n9CvI4huW9trz9p12duT7SU=\n=nAtp\n-----END PGP SIGNATURE-----\n", "payload": "tree 8e9023d7c59d97d11788747ef7c9e4651b8cfc7e\nparent 0a07ffe4ad8f29e22a237cad8099401faf3995b4\nparent f4c76b193d54eeb88b2c966612679d733536efaf\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670329663 +0100\ncommitter GitHub <noreply@github.com> 1670329663 +0100\n\nRollup merge of #105310 - compiler-errors:issue-105288, r=eholk\n\nBe more careful about unresolved exprs in suggestion\n\nFixes #105288\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "html_url": "https://github.com/rust-lang/rust/commit/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a07ffe4ad8f29e22a237cad8099401faf3995b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a07ffe4ad8f29e22a237cad8099401faf3995b4", "html_url": "https://github.com/rust-lang/rust/commit/0a07ffe4ad8f29e22a237cad8099401faf3995b4"}, {"sha": "f4c76b193d54eeb88b2c966612679d733536efaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c76b193d54eeb88b2c966612679d733536efaf", "html_url": "https://github.com/rust-lang/rust/commit/f4c76b193d54eeb88b2c966612679d733536efaf"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "db93cfab2c0dbd6a45508b9c35607b642cfe6c51", "filename": "compiler/rustc_hir_typeck/src/method/suggest.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs?ref=61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "patch": "@@ -1482,25 +1482,28 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             ident_name: Symbol,\n         }\n \n+        // FIXME: This really should be taking scoping, etc into account.\n         impl<'v> Visitor<'v> for LetVisitor<'v> {\n             fn visit_stmt(&mut self, ex: &'v hir::Stmt<'v>) {\n-                if let hir::StmtKind::Local(hir::Local { pat, init, .. }) = &ex.kind {\n-                    if let Binding(_, _, ident, ..) = pat.kind &&\n-                        ident.name == self.ident_name {\n-                        self.result = *init;\n-                    }\n+                if let hir::StmtKind::Local(hir::Local { pat, init, .. }) = &ex.kind\n+                    && let Binding(_, _, ident, ..) = pat.kind\n+                    && ident.name == self.ident_name\n+                {\n+                    self.result = *init;\n+                } else {\n+                    hir::intravisit::walk_stmt(self, ex);\n                 }\n-                hir::intravisit::walk_stmt(self, ex);\n             }\n         }\n \n         let mut visitor = LetVisitor { result: None, ident_name: seg1.ident.name };\n         visitor.visit_body(&body);\n \n         let parent = self.tcx.hir().get_parent_node(seg1.hir_id);\n-        if let Some(Node::Expr(call_expr)) = self.tcx.hir().find(parent) &&\n-            let Some(expr) = visitor.result {\n-            let self_ty = self.node_ty(expr.hir_id);\n+        if let Some(Node::Expr(call_expr)) = self.tcx.hir().find(parent)\n+            && let Some(expr) = visitor.result\n+            && let Some(self_ty) = self.node_ty_opt(expr.hir_id)\n+        {\n             let probe = self.lookup_probe(\n                 seg2.ident,\n                 self_ty,\n@@ -1513,7 +1516,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     sm.span_extend_while(seg1.ident.span.shrink_to_hi(), |c| c == ':').unwrap(),\n                     \"you may have meant to call an instance method\",\n                     \".\".to_string(),\n-                    Applicability::MaybeIncorrect\n+                    Applicability::MaybeIncorrect,\n                 );\n             }\n         }"}, {"sha": "fb56b394493dc7f553887891d4bd53109e93ed3d", "filename": "src/test/ui/typeck/path-to-method-sugg-unresolved-expr.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.rs?ref=61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let page_size = page_size::get();\n+    //~^ ERROR failed to resolve: use of undeclared crate or module `page_size`\n+}"}, {"sha": "b01e30be54de0bde80173b4b4ee0cd8136e3f17d", "filename": "src/test/ui/typeck/path-to-method-sugg-unresolved-expr.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61189b6ae3c5ccc8a38be18aad7ef75c253d7c28/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fpath-to-method-sugg-unresolved-expr.stderr?ref=61189b6ae3c5ccc8a38be18aad7ef75c253d7c28", "patch": "@@ -0,0 +1,9 @@\n+error[E0433]: failed to resolve: use of undeclared crate or module `page_size`\n+  --> $DIR/path-to-method-sugg-unresolved-expr.rs:2:21\n+   |\n+LL |     let page_size = page_size::get();\n+   |                     ^^^^^^^^^ use of undeclared crate or module `page_size`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}]}