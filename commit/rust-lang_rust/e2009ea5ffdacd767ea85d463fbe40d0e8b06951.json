{"sha": "e2009ea5ffdacd767ea85d463fbe40d0e8b06951", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMDA5ZWE1ZmZkYWNkNzY3ZWE4NWQ0NjNmYmU0MGQwZThiMDY5NTE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-02-28T05:51:35Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-03-16T20:13:15Z"}, "message": "Add tests for malformed input in `#[proc_macro_derive]`", "tree": {"sha": "140429c7c67aef0b028167c02a0e0bb5afdd81d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/140429c7c67aef0b028167c02a0e0bb5afdd81d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2009ea5ffdacd767ea85d463fbe40d0e8b06951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2009ea5ffdacd767ea85d463fbe40d0e8b06951", "html_url": "https://github.com/rust-lang/rust/commit/e2009ea5ffdacd767ea85d463fbe40d0e8b06951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2009ea5ffdacd767ea85d463fbe40d0e8b06951/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff", "html_url": "https://github.com/rust-lang/rust/commit/2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff"}], "stats": {"total": 202, "additions": 118, "deletions": 84}, "files": [{"sha": "f1775307fb4e5916f1ca35b4ea6b0d6df28de1dc", "filename": "src/test/ui/proc-macro/attribute.rs", "status": "modified", "additions": 57, "deletions": 37, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/e2009ea5ffdacd767ea85d463fbe40d0e8b06951/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2009ea5ffdacd767ea85d463fbe40d0e8b06951/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs?ref=e2009ea5ffdacd767ea85d463fbe40d0e8b06951", "patch": "@@ -4,53 +4,73 @@\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro;\n+use proc_macro::*;\n \n #[proc_macro_derive]\n //~^ ERROR: attribute must be of the form\n-pub fn foo1(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n+pub fn foo1(input: TokenStream) -> TokenStream { input }\n \n-#[proc_macro_derive = \"foo\"]\n+#[proc_macro_derive = \"\"]\n //~^ ERROR: attribute must be of the form\n-pub fn foo2(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n-\n-#[proc_macro_derive(\n-    a = \"b\"\n-)]\n-//~^^ ERROR: must only be one word\n-pub fn foo3(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n-\n-#[proc_macro_derive(b, c, d)]\n+pub fn foo2(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d3, a, b)]\n+//~^ ERROR: attribute must have either one or two arguments\n+pub fn foo3(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d4, attributes(a), b)]\n //~^ ERROR: attribute must have either one or two arguments\n-pub fn foo4(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n+pub fn foo4(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(\"a\")]\n+//~^ ERROR: not a meta item\n+pub fn foo5(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d6 = \"\")]\n+//~^ ERROR: must only be one word\n+pub fn foo6(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(m::d7)]\n+//FIXME ERROR: must only be one word\n+pub fn foo7(input: TokenStream) -> TokenStream { input }\n \n-#[proc_macro_derive(d(e))]\n+#[proc_macro_derive(d8(a))]\n //~^ ERROR: must only be one word\n-pub fn foo5(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n+pub fn foo8(input: TokenStream) -> TokenStream { input }\n \n-#[proc_macro_derive(f, attributes(g = \"h\"))]\n+#[proc_macro_derive(self)]\n+//FIXME ERROR: `self` cannot be a name of derive macro\n+pub fn foo9(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(PartialEq)]\n+//~^ ERROR: cannot override a built-in #[derive] mode\n+pub fn foo10(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d11, a)]\n+//~^ ERROR: second argument must be `attributes`\n+//~| ERROR: attribute must be of form: `attributes(foo, bar)`\n+pub fn foo11(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d12, attributes)]\n+//~^ ERROR: attribute must be of form: `attributes(foo, bar)`\n+pub fn foo12(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d13, attributes(\"a\"))]\n+//~^ ERROR: not a meta item\n+pub fn foo13(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d14, attributes(a = \"\"))]\n //~^ ERROR: must only be one word\n-pub fn foo6(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n+pub fn foo14(input: TokenStream) -> TokenStream { input }\n+\n+#[proc_macro_derive(d15, attributes(m::a))]\n+//FIXME ERROR: must only be one word\n+pub fn foo15(input: TokenStream) -> TokenStream { input }\n \n-#[proc_macro_derive(i, attributes(j(k)))]\n+#[proc_macro_derive(d16, attributes(a(b)))]\n //~^ ERROR: must only be one word\n-pub fn foo7(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n+pub fn foo16(input: TokenStream) -> TokenStream { input }\n \n-#[proc_macro_derive(l, attributes(m), n)]\n-//~^ ERROR: attribute must have either one or two arguments\n-pub fn foo8(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-    input\n-}\n+#[proc_macro_derive(d17, attributes(self))]\n+//FIXME ERROR: `self` cannot be a name of derive helper attribute\n+pub fn foo17(input: TokenStream) -> TokenStream { input }"}, {"sha": "7bafb0abc4f8a9be31cb34aac199d04a6e4974d5", "filename": "src/test/ui/proc-macro/attribute.stderr", "status": "modified", "additions": 61, "deletions": 25, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/e2009ea5ffdacd767ea85d463fbe40d0e8b06951/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2009ea5ffdacd767ea85d463fbe40d0e8b06951/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr?ref=e2009ea5ffdacd767ea85d463fbe40d0e8b06951", "patch": "@@ -1,50 +1,86 @@\n-error: must only be one word\n-  --> $DIR/attribute.rs:21:5\n+error: attribute must have either one or two arguments\n+  --> $DIR/attribute.rs:17:1\n    |\n-LL |     a = \"b\"\n-   |     ^^^^^^^\n+LL | #[proc_macro_derive(d3, a, b)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: attribute must have either one or two arguments\n-  --> $DIR/attribute.rs:28:1\n+  --> $DIR/attribute.rs:21:1\n+   |\n+LL | #[proc_macro_derive(d4, attributes(a), b)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: not a meta item\n+  --> $DIR/attribute.rs:25:21\n    |\n-LL | #[proc_macro_derive(b, c, d)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[proc_macro_derive(\"a\")]\n+   |                     ^^^\n \n error: must only be one word\n-  --> $DIR/attribute.rs:34:21\n+  --> $DIR/attribute.rs:29:21\n    |\n-LL | #[proc_macro_derive(d(e))]\n-   |                     ^^^^\n+LL | #[proc_macro_derive(d6 = \"\")]\n+   |                     ^^^^^^^\n \n error: must only be one word\n-  --> $DIR/attribute.rs:40:35\n+  --> $DIR/attribute.rs:37:21\n+   |\n+LL | #[proc_macro_derive(d8(a))]\n+   |                     ^^^^^\n+\n+error: cannot override a built-in #[derive] mode\n+  --> $DIR/attribute.rs:45:21\n+   |\n+LL | #[proc_macro_derive(PartialEq)]\n+   |                     ^^^^^^^^^\n+\n+error: second argument must be `attributes`\n+  --> $DIR/attribute.rs:49:26\n    |\n-LL | #[proc_macro_derive(f, attributes(g = \"h\"))]\n-   |                                   ^^^^^^^\n+LL | #[proc_macro_derive(d11, a)]\n+   |                          ^\n+\n+error: attribute must be of form: `attributes(foo, bar)`\n+  --> $DIR/attribute.rs:49:26\n+   |\n+LL | #[proc_macro_derive(d11, a)]\n+   |                          ^\n+\n+error: attribute must be of form: `attributes(foo, bar)`\n+  --> $DIR/attribute.rs:54:26\n+   |\n+LL | #[proc_macro_derive(d12, attributes)]\n+   |                          ^^^^^^^^^^\n+\n+error: not a meta item\n+  --> $DIR/attribute.rs:58:37\n+   |\n+LL | #[proc_macro_derive(d13, attributes(\"a\"))]\n+   |                                     ^^^\n \n error: must only be one word\n-  --> $DIR/attribute.rs:46:35\n+  --> $DIR/attribute.rs:62:37\n    |\n-LL | #[proc_macro_derive(i, attributes(j(k)))]\n-   |                                   ^^^^\n+LL | #[proc_macro_derive(d14, attributes(a = \"\"))]\n+   |                                     ^^^^^^\n \n-error: attribute must have either one or two arguments\n-  --> $DIR/attribute.rs:52:1\n+error: must only be one word\n+  --> $DIR/attribute.rs:70:37\n    |\n-LL | #[proc_macro_derive(l, attributes(m), n)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[proc_macro_derive(d16, attributes(a(b)))]\n+   |                                     ^^^^\n \n error: attribute must be of the form `#[proc_macro_derive(TraitName, /*opt*/ attributes(name1, name2, ...))]`\n-  --> $DIR/attribute.rs:8:1\n+  --> $DIR/attribute.rs:9:1\n    |\n LL | #[proc_macro_derive]\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: attribute must be of the form `#[proc_macro_derive(TraitName, /*opt*/ attributes(name1, name2, ...))]`\n-  --> $DIR/attribute.rs:14:1\n+  --> $DIR/attribute.rs:13:1\n    |\n-LL | #[proc_macro_derive = \"foo\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[proc_macro_derive = \"\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 14 previous errors\n "}, {"sha": "afcc0ebc3464c15e2060e78695443242d2bfb881", "filename": "src/test/ui/proc-macro/shadow-builtin.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.rs?ref=2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff", "patch": "@@ -1,14 +0,0 @@\n-// force-host\n-// no-prefer-dynamic\n-\n-#![crate_type = \"proc-macro\"]\n-\n-extern crate proc_macro;\n-\n-use proc_macro::TokenStream;\n-\n-#[proc_macro_derive(PartialEq)]\n-//~^ ERROR: cannot override a built-in #[derive] mode\n-pub fn foo(input: TokenStream) -> TokenStream {\n-    input\n-}"}, {"sha": "668579509dc3bcb3795469acfc1a2aeaafb5c700", "filename": "src/test/ui/proc-macro/shadow-builtin.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.stderr?ref=2c8bbf50db0ef90a33f986ba8fc2e1fe129197ff", "patch": "@@ -1,8 +0,0 @@\n-error: cannot override a built-in #[derive] mode\n-  --> $DIR/shadow-builtin.rs:10:21\n-   |\n-LL | #[proc_macro_derive(PartialEq)]\n-   |                     ^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}]}