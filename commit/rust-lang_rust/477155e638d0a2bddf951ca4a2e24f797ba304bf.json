{"sha": "477155e638d0a2bddf951ca4a2e24f797ba304bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NzE1NWU2MzhkMGEyYmRkZjk1MWNhNGEyZTI0Zjc5N2JhMzA0YmY=", "commit": {"author": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-11-09T16:30:18Z"}, "committer": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-11-09T16:31:33Z"}, "message": "Add Encodable and Decodable for VecMap", "tree": {"sha": "5dfd324c14003bd285df385574d4e23d7e6e64df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dfd324c14003bd285df385574d4e23d7e6e64df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/477155e638d0a2bddf951ca4a2e24f797ba304bf", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/477155e638d0a2bddf951ca4a2e24f797ba304bf", "html_url": "https://github.com/rust-lang/rust/commit/477155e638d0a2bddf951ca4a2e24f797ba304bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/477155e638d0a2bddf951ca4a2e24f797ba304bf/comments", "author": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2f303ad098844351d08800038a4f99fa2ff0817", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f303ad098844351d08800038a4f99fa2ff0817", "html_url": "https://github.com/rust-lang/rust/commit/a2f303ad098844351d08800038a4f99fa2ff0817"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "ffeb190ddf87c99f77483804c792230531eff96c", "filename": "src/libserialize/collection_impls.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/477155e638d0a2bddf951ca4a2e24f797ba304bf/src%2Flibserialize%2Fcollection_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477155e638d0a2bddf951ca4a2e24f797ba304bf/src%2Flibserialize%2Fcollection_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fcollection_impls.rs?ref=477155e638d0a2bddf951ca4a2e24f797ba304bf", "patch": "@@ -16,7 +16,7 @@ use std::hash::{Hash, Hasher};\n \n use {Decodable, Encodable, Decoder, Encoder};\n use std::collections::{DList, RingBuf, TreeMap, TreeSet, HashMap, HashSet,\n-                       TrieMap, TrieSet};\n+                       TrieMap, TrieSet, VecMap};\n use std::collections::enum_set::{EnumSet, CLike};\n \n impl<\n@@ -311,3 +311,37 @@ impl<E, D: Decoder<E>> Decodable<D, E> for TrieSet {\n         })\n     }\n }\n+\n+impl<\n+    E,\n+    S: Encoder<E>,\n+    V: Encodable<S, E>\n+> Encodable<S, E> for VecMap<V> {\n+    fn encode(&self, e: &mut S) -> Result<(), E> {\n+        e.emit_map(self.len(), |e| {\n+                for (i, (key, val)) in self.iter().enumerate() {\n+                    try!(e.emit_map_elt_key(i, |e| key.encode(e)));\n+                    try!(e.emit_map_elt_val(i, |e| val.encode(e)));\n+                }\n+                Ok(())\n+            })\n+    }\n+}\n+\n+impl<\n+    E,\n+    D: Decoder<E>,\n+    V: Decodable<D, E>\n+> Decodable<D, E> for VecMap<V> {\n+    fn decode(d: &mut D) -> Result<VecMap<V>, E> {\n+        d.read_map(|d, len| {\n+            let mut map = VecMap::new();\n+            for i in range(0u, len) {\n+                let key = try!(d.read_map_elt_key(i, |d| Decodable::decode(d)));\n+                let val = try!(d.read_map_elt_val(i, |d| Decodable::decode(d)));\n+                map.insert(key, val);\n+            }\n+            Ok(map)\n+        })\n+    }\n+}"}]}