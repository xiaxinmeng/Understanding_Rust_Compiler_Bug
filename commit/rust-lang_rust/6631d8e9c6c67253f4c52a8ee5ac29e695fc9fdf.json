{"sha": "6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MzFkOGU5YzZjNjcyNTNmNGM1MmE4ZWU1YWMyOWU2OTVmYzlmZGY=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-31T13:29:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-31T13:29:11Z"}, "message": "Rollup merge of #36147 - mikhail-m1:master, r=jonathandturner\n\nupdate E0265 to new format\n\nFixes #35309 as part of #35233.\nI've describe partially bonus achieve in #35309\n\nr? @jonathandturner", "tree": {"sha": "85569107e784e62775565ba26cb58c0e39de014e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85569107e784e62775565ba26cb58c0e39de014e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf", "html_url": "https://github.com/rust-lang/rust/commit/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93c5d6cfd79f785eb8c69ba97308f9144fa665b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c5d6cfd79f785eb8c69ba97308f9144fa665b0", "html_url": "https://github.com/rust-lang/rust/commit/93c5d6cfd79f785eb8c69ba97308f9144fa665b0"}, {"sha": "507fe146377171013e445783ba00ad8ff2c35e69", "url": "https://api.github.com/repos/rust-lang/rust/commits/507fe146377171013e445783ba00ad8ff2c35e69", "html_url": "https://github.com/rust-lang/rust/commit/507fe146377171013e445783ba00ad8ff2c35e69"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "d23f77af321552683c4f07b052f6f9142866f6fa", "filename": "src/librustc_passes/static_recursion.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf/src%2Flibrustc_passes%2Fstatic_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf/src%2Flibrustc_passes%2Fstatic_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstatic_recursion.rs?ref=6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf", "patch": "@@ -126,7 +126,7 @@ impl<'a, 'ast: 'a> CheckItemRecursionVisitor<'a, 'ast> {\n             idstack: Vec::new(),\n         }\n     }\n-    fn with_item_id_pushed<F>(&mut self, id: ast::NodeId, f: F)\n+    fn with_item_id_pushed<F>(&mut self, id: ast::NodeId, f: F, span: Span)\n         where F: Fn(&mut Self)\n     {\n         if self.idstack.iter().any(|&x| x == id) {\n@@ -150,7 +150,9 @@ impl<'a, 'ast: 'a> CheckItemRecursionVisitor<'a, 'ast> {\n                                      \"recursive static\");\n                 }\n             } else {\n-                span_err!(self.sess, *self.root_span, E0265, \"recursive constant\");\n+                struct_span_err!(self.sess, span, E0265, \"recursive constant\")\n+                    .span_label(span, &format!(\"recursion not allowed in constant\"))\n+                    .emit();\n             }\n             return;\n         }\n@@ -203,7 +205,7 @@ impl<'a, 'ast: 'a> CheckItemRecursionVisitor<'a, 'ast> {\n \n impl<'a, 'ast: 'a> Visitor<'ast> for CheckItemRecursionVisitor<'a, 'ast> {\n     fn visit_item(&mut self, it: &'ast hir::Item) {\n-        self.with_item_id_pushed(it.id, |v| intravisit::walk_item(v, it));\n+        self.with_item_id_pushed(it.id, |v| intravisit::walk_item(v, it), it.span);\n     }\n \n     fn visit_enum_def(&mut self,\n@@ -233,16 +235,16 @@ impl<'a, 'ast: 'a> Visitor<'ast> for CheckItemRecursionVisitor<'a, 'ast> {\n         // If `maybe_expr` is `None`, that's because no discriminant is\n         // specified that affects this variant. Thus, no risk of recursion.\n         if let Some(expr) = maybe_expr {\n-            self.with_item_id_pushed(expr.id, |v| intravisit::walk_expr(v, expr));\n+            self.with_item_id_pushed(expr.id, |v| intravisit::walk_expr(v, expr), expr.span);\n         }\n     }\n \n     fn visit_trait_item(&mut self, ti: &'ast hir::TraitItem) {\n-        self.with_item_id_pushed(ti.id, |v| intravisit::walk_trait_item(v, ti));\n+        self.with_item_id_pushed(ti.id, |v| intravisit::walk_trait_item(v, ti), ti.span);\n     }\n \n     fn visit_impl_item(&mut self, ii: &'ast hir::ImplItem) {\n-        self.with_item_id_pushed(ii.id, |v| intravisit::walk_impl_item(v, ii));\n+        self.with_item_id_pushed(ii.id, |v| intravisit::walk_impl_item(v, ii), ii.span);\n     }\n \n     fn visit_expr(&mut self, e: &'ast hir::Expr) {"}, {"sha": "35f32d16a9a2a7470ba98647c4e073749e9093d3", "filename": "src/test/compile-fail/issue-23302.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf/src%2Ftest%2Fcompile-fail%2Fissue-23302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf/src%2Ftest%2Fcompile-fail%2Fissue-23302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23302.rs?ref=6631d8e9c6c67253f4c52a8ee5ac29e695fc9fdf", "patch": "@@ -12,13 +12,21 @@\n // the appropriate error (rather than, say, blowing the stack).\n enum X {\n     A = X::A as isize, //~ ERROR E0265\n+                       //~^ NOTE recursion not allowed in constant\n }\n \n // Since `Y::B` here defaults to `Y::A+1`, this is also a\n // recursive definition.\n enum Y {\n     A = Y::B as isize, //~ ERROR E0265\n+                       //~^ NOTE recursion not allowed in constant\n     B,\n }\n \n+const A: i32 = B; //~ ERROR E0265\n+                  //~^ NOTE recursion not allowed in constant\n+\n+const B: i32 = A; //~ ERROR E0265\n+                  //~^ NOTE recursion not allowed in constant\n+\n fn main() { }"}]}