{"sha": "cac97d7ee565eef14b9e7385d1c088c1eb0a9295", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYzk3ZDdlZTU2NWVlZjE0YjllNzM4NWQxYzA4OGMxZWIwYTkyOTU=", "commit": {"author": {"name": "Tom Lee", "email": "github@tomlee.co", "date": "2013-05-12T19:19:28Z"}, "committer": {"name": "Tom Lee", "email": "github@tomlee.co", "date": "2013-05-20T00:07:18Z"}, "message": "Remove unused variable.", "tree": {"sha": "0cb56b08a6f047033ce6272f81a05e5f3f0d80ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cb56b08a6f047033ce6272f81a05e5f3f0d80ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cac97d7ee565eef14b9e7385d1c088c1eb0a9295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cac97d7ee565eef14b9e7385d1c088c1eb0a9295", "html_url": "https://github.com/rust-lang/rust/commit/cac97d7ee565eef14b9e7385d1c088c1eb0a9295", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cac97d7ee565eef14b9e7385d1c088c1eb0a9295/comments", "author": {"login": "thomaslee", "id": 93216, "node_id": "MDQ6VXNlcjkzMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/93216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaslee", "html_url": "https://github.com/thomaslee", "followers_url": "https://api.github.com/users/thomaslee/followers", "following_url": "https://api.github.com/users/thomaslee/following{/other_user}", "gists_url": "https://api.github.com/users/thomaslee/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaslee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaslee/subscriptions", "organizations_url": "https://api.github.com/users/thomaslee/orgs", "repos_url": "https://api.github.com/users/thomaslee/repos", "events_url": "https://api.github.com/users/thomaslee/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaslee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomaslee", "id": 93216, "node_id": "MDQ6VXNlcjkzMjE2", "avatar_url": "https://avatars.githubusercontent.com/u/93216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaslee", "html_url": "https://github.com/thomaslee", "followers_url": "https://api.github.com/users/thomaslee/followers", "following_url": "https://api.github.com/users/thomaslee/following{/other_user}", "gists_url": "https://api.github.com/users/thomaslee/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaslee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaslee/subscriptions", "organizations_url": "https://api.github.com/users/thomaslee/orgs", "repos_url": "https://api.github.com/users/thomaslee/repos", "events_url": "https://api.github.com/users/thomaslee/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaslee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e02716e6d3a65bde24f49207274a74a22790a201", "url": "https://api.github.com/repos/rust-lang/rust/commits/e02716e6d3a65bde24f49207274a74a22790a201", "html_url": "https://github.com/rust-lang/rust/commit/e02716e6d3a65bde24f49207274a74a22790a201"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "110d17b9b15bf119bc919593ca11758b6ac9ff0c", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cac97d7ee565eef14b9e7385d1c088c1eb0a9295/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cac97d7ee565eef14b9e7385d1c088c1eb0a9295/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=cac97d7ee565eef14b9e7385d1c088c1eb0a9295", "patch": "@@ -387,7 +387,6 @@ fn encode_reexported_static_methods(ecx: @EncodeContext,\n         Some(methods) => {\n             match ecx.tcx.items.find(&exp.def_id.node) {\n                 Some(&ast_map::node_item(item, path)) => {\n-                    let interner = ecx.tcx.sess.parse_sess.interner;\n                     let original_name = ecx.tcx.sess.str_of(item.ident);\n                     if mod_path != *path || *exp.name != *original_name {\n                         for methods.each |&m| {"}]}