{"sha": "355932407ba324d33cd9353a69203f7f76c059a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NTkzMjQwN2JhMzI0ZDMzY2Q5MzUzYTY5MjAzZjdmNzZjMDU5YTY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-03-01T02:04:40Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-03-02T06:40:53Z"}, "message": "libfourcc: Fix errors arising from the automated `~[T]` conversion", "tree": {"sha": "8695509abdf59826b7efb0e711e723f299359648", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8695509abdf59826b7efb0e711e723f299359648"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/355932407ba324d33cd9353a69203f7f76c059a6", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/355932407ba324d33cd9353a69203f7f76c059a6", "html_url": "https://github.com/rust-lang/rust/commit/355932407ba324d33cd9353a69203f7f76c059a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/355932407ba324d33cd9353a69203f7f76c059a6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c6622aa0f36faff87840f94083abab0bf58d074", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c6622aa0f36faff87840f94083abab0bf58d074", "html_url": "https://github.com/rust-lang/rust/commit/0c6622aa0f36faff87840f94083abab0bf58d074"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "c465c8f1e1608a7ec8801917fc1645687c26c76a", "filename": "src/libfourcc/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/355932407ba324d33cd9353a69203f7f76c059a6/src%2Flibfourcc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/355932407ba324d33cd9353a69203f7f76c059a6/src%2Flibfourcc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfourcc%2Flib.rs?ref=355932407ba324d33cd9353a69203f7f76c059a6", "patch": "@@ -131,7 +131,11 @@ struct Ident {\n }\n \n fn parse_tts(cx: &ExtCtxt, tts: &[ast::TokenTree]) -> (@ast::Expr, Option<Ident>) {\n-    let p = &mut parse::new_parser_from_tts(cx.parse_sess(), cx.cfg(), tts.to_owned());\n+    let p = &mut parse::new_parser_from_tts(cx.parse_sess(),\n+                                            cx.cfg(),\n+                                            tts.iter()\n+                                               .map(|x| (*x).clone())\n+                                               .collect());\n     let ex = p.parse_expr();\n     let id = if p.token == token::EOF {\n         None\n@@ -151,7 +155,7 @@ fn parse_tts(cx: &ExtCtxt, tts: &[ast::TokenTree]) -> (@ast::Expr, Option<Ident>\n fn target_endian_little(cx: &ExtCtxt, sp: Span) -> bool {\n     let meta = cx.meta_name_value(sp, InternedString::new(\"target_endian\"),\n         ast::LitStr(InternedString::new(\"little\"), ast::CookedStr));\n-    contains(cx.cfg(), meta)\n+    contains(cx.cfg().as_slice(), meta)\n }\n \n // FIXME (10872): This is required to prevent an LLVM assert on Windows"}]}