{"sha": "2499d819d41b87d9b562377479e4a81f74bd49f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OTlkODE5ZDQxYjg3ZDliNTYyMzc3NDc5ZTRhODFmNzRiZDQ5ZjE=", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@gmail.com", "date": "2017-04-13T20:24:30Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gmail.com", "date": "2017-04-28T19:33:17Z"}, "message": "fmt: use the minimum parts array size\n\nThe comments for flt2dec::to_shortest_str says that we only need a slice\nof length 5 for the parts array.  Initializing a 16-part array is just\nwasted effort and wasted stack space.  Other functions in the flt2dec\nmodule have similar comments, so we adjust the parts arrays passed to\nthose functions accordingly.", "tree": {"sha": "81ab890de6b111b162f280c8cff2157fb96a3cfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81ab890de6b111b162f280c8cff2157fb96a3cfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2499d819d41b87d9b562377479e4a81f74bd49f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2499d819d41b87d9b562377479e4a81f74bd49f1", "html_url": "https://github.com/rust-lang/rust/commit/2499d819d41b87d9b562377479e4a81f74bd49f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2499d819d41b87d9b562377479e4a81f74bd49f1/comments", "author": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a21f61685d4aa2bd93152eaf53c469b29a3a9bee", "url": "https://api.github.com/repos/rust-lang/rust/commits/a21f61685d4aa2bd93152eaf53c469b29a3a9bee", "html_url": "https://github.com/rust-lang/rust/commit/a21f61685d4aa2bd93152eaf53c469b29a3a9bee"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4252807fb9f5a89704b89c109fc64cb173626e1c", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2499d819d41b87d9b562377479e4a81f74bd49f1/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2499d819d41b87d9b562377479e4a81f74bd49f1/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=2499d819d41b87d9b562377479e4a81f74bd49f1", "patch": "@@ -19,7 +19,7 @@ fn float_to_decimal_common_exact<T>(fmt: &mut Formatter, num: &T,\n     where T: flt2dec::DecodableFloat\n {\n     let mut buf = [0; 1024]; // enough for f32 and f64\n-    let mut parts = [flt2dec::Part::Zero(0); 16];\n+    let mut parts = [flt2dec::Part::Zero(0); 5];\n     let formatted = flt2dec::to_exact_fixed_str(flt2dec::strategy::grisu::format_exact,\n                                                 *num, sign, precision,\n                                                 false, &mut buf, &mut parts);\n@@ -34,7 +34,7 @@ fn float_to_decimal_common_shortest<T>(fmt: &mut Formatter,\n     where T: flt2dec::DecodableFloat\n {\n     let mut buf = [0; flt2dec::MAX_SIG_DIGITS]; // enough for f32 and f64\n-    let mut parts = [flt2dec::Part::Zero(0); 16];\n+    let mut parts = [flt2dec::Part::Zero(0); 5];\n     let formatted = flt2dec::to_shortest_str(flt2dec::strategy::grisu::format_shortest,\n                                              *num, sign, 0, false, &mut buf, &mut parts);\n     fmt.pad_formatted_parts(&formatted)\n@@ -68,7 +68,7 @@ fn float_to_exponential_common_exact<T>(fmt: &mut Formatter, num: &T,\n     where T: flt2dec::DecodableFloat\n {\n     let mut buf = [0; 1024]; // enough for f32 and f64\n-    let mut parts = [flt2dec::Part::Zero(0); 16];\n+    let mut parts = [flt2dec::Part::Zero(0); 7];\n     let formatted = flt2dec::to_exact_exp_str(flt2dec::strategy::grisu::format_exact,\n                                               *num, sign, precision,\n                                               upper, &mut buf, &mut parts);\n@@ -84,7 +84,7 @@ fn float_to_exponential_common_shortest<T>(fmt: &mut Formatter,\n     where T: flt2dec::DecodableFloat\n {\n     let mut buf = [0; flt2dec::MAX_SIG_DIGITS]; // enough for f32 and f64\n-    let mut parts = [flt2dec::Part::Zero(0); 16];\n+    let mut parts = [flt2dec::Part::Zero(0); 7];\n     let formatted = flt2dec::to_shortest_exp_str(flt2dec::strategy::grisu::format_shortest, *num,\n                                                  sign, (0, 0), upper, &mut buf, &mut parts);\n     fmt.pad_formatted_parts(&formatted)"}]}