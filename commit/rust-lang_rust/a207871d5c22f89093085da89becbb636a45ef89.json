{"sha": "a207871d5c22f89093085da89becbb636a45ef89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMDc4NzFkNWMyMmY4OTA5MzA4NWRhODliZWNiYjYzNmE0NWVmODk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T12:51:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T12:51:41Z"}, "message": "Auto merge of #83781 - JohnTitor:rollup-1vm3dxo, r=JohnTitor\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #83535 (Break when there is a mismatch in the type count)\n - #83721 (Add a button to copy the \"use statement\")\n - #83740 (Fix comment typo in once.rs)\n - #83745 (Add my new email address to .mailmap)\n - #83754 (Add test to ensure search tabs behaviour)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "9f19a2745da149ce12881fbd0503a917c6e3b3b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f19a2745da149ce12881fbd0503a917c6e3b3b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a207871d5c22f89093085da89becbb636a45ef89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a207871d5c22f89093085da89becbb636a45ef89", "html_url": "https://github.com/rust-lang/rust/commit/a207871d5c22f89093085da89becbb636a45ef89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a207871d5c22f89093085da89becbb636a45ef89/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0978a9eb99eca9f99889014b232f67ece898aadb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0978a9eb99eca9f99889014b232f67ece898aadb", "html_url": "https://github.com/rust-lang/rust/commit/0978a9eb99eca9f99889014b232f67ece898aadb"}, {"sha": "1dfbca926660e3a9de0ca9e53a4fce72dc80650c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dfbca926660e3a9de0ca9e53a4fce72dc80650c", "html_url": "https://github.com/rust-lang/rust/commit/1dfbca926660e3a9de0ca9e53a4fce72dc80650c"}], "stats": {"total": 132, "additions": 117, "deletions": 15}, "files": [{"sha": "1019710dc979335b0395ff2308fc958d038492fd", "filename": ".mailmap", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/.mailmap", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/.mailmap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.mailmap?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -286,7 +286,7 @@ Xuefeng Wu <benewu@gmail.com> Xuefeng Wu <xfwu@thoughtworks.com>\n Xuefeng Wu <benewu@gmail.com> XuefengWu <benewu@gmail.com>\n York Xiang <bombless@126.com>\n Youngsoo Son <ysson83@gmail.com> <ysoo.son@samsung.com>\n-Yuki Okushi <huyuumi.dev@gmail.com>\n+Yuki Okushi <jtitor@2k36.org> <huyuumi.dev@gmail.com>\n Zach Pomerantz <zmp@umich.edu>\n Zack Corr <zack@z0w0.me> <zackcorr95@gmail.com>\n Zack Slayton <zack.slayton@gmail.com>"}, {"sha": "1bb447d1057815e7764d9342d2f56311813e506e", "filename": "compiler/rustc_mir/src/borrow_check/type_check/input_output.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -70,6 +70,12 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n \n         // Equate expected input tys with those in the MIR.\n         for (argument_index, &normalized_input_ty) in normalized_input_tys.iter().enumerate() {\n+            if argument_index + 1 >= body.local_decls.len() {\n+                self.tcx()\n+                    .sess\n+                    .delay_span_bug(body.span, \"found more normalized_input_ty than local_decls\");\n+                break;\n+            }\n             // In MIR, argument N is stored in local N+1.\n             let local = Local::new(argument_index + 1);\n "}, {"sha": "a24a5cb2ae39f0097cc73d5e9673833de80c3368", "filename": "library/std/src/sync/once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -471,7 +471,7 @@ fn wait(state_and_queue: &AtomicUsize, mut current_state: usize) {\n             // If the managing thread happens to signal and unpark us before we\n             // can park ourselves, the result could be this thread never gets\n             // unparked. Luckily `park` comes with the guarantee that if it got\n-            // an `unpark` just before on an unparked thread is does not park.\n+            // an `unpark` just before on an unparked thread it does not park.\n             thread::park();\n         }\n         break;"}, {"sha": "cdccb1c8581294ada20abcc3f7d6f0a13807976f", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -1355,6 +1355,7 @@ fn init_id_map() -> FxHashMap<String, usize> {\n     map.insert(\"default-settings\".to_owned(), 1);\n     map.insert(\"rustdoc-vars\".to_owned(), 1);\n     map.insert(\"sidebar-vars\".to_owned(), 1);\n+    map.insert(\"copy-path\".to_owned(), 1);\n     // This is the list of IDs used by rustdoc sections.\n     map.insert(\"fields\".to_owned(), 1);\n     map.insert(\"variants\".to_owned(), 1);"}, {"sha": "25314f87eb5aef7e98b6f3878045ff3c1f17df45", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -73,6 +73,7 @@ pub(super) fn print_item(cx: &Context<'_>, item: &clean::Item, buf: &mut Buffer)\n         }\n     }\n     write!(buf, \"<a class=\\\"{}\\\" href=\\\"\\\">{}</a>\", item.type_(), item.name.as_ref().unwrap());\n+    write!(buf, \"<button id=\\\"copy-path\\\" onclick=\\\"copy_path(this)\\\">\u2398</button>\");\n \n     buf.write_str(\"</span>\"); // in-band\n     buf.write_str(\"<span class=\\\"out-of-band\\\">\");"}, {"sha": "f2e62ee7b6b5e1c221d4c5778a354e560692e8f9", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -3061,3 +3061,28 @@ function hideThemeButtonState() {\n     window.onhashchange = onHashChange;\n     setupSearchLoader();\n }());\n+\n+function copy_path(but) {\n+    var parent = but.parentElement;\n+    var path = [];\n+\n+    onEach(parent.childNodes, function(child) {\n+        if (child.tagName === 'A') {\n+            path.push(child.textContent);\n+        }\n+    });\n+\n+    var el = document.createElement('textarea');\n+    el.value = 'use ' + path.join('::') + ';';\n+    el.setAttribute('readonly', '');\n+    // To not make it appear on the screen.\n+    el.style.position = 'absolute';\n+    el.style.left = '-9999px';\n+\n+    document.body.appendChild(el);\n+    el.select();\n+    document.execCommand('copy');\n+    document.body.removeChild(el);\n+\n+    but.textContent = '\u2713';\n+}"}, {"sha": "4d3332877c0d5281c9b6021ec8ebce972f8d1334", "filename": "src/librustdoc/html/static/noscript.css", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnoscript.css", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnoscript.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnoscript.css?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -33,3 +33,8 @@ rules.\n \t/* Since there is no toggle (the \"[-]\") when JS is disabled, no need for this margin either. */\n \tmargin-left: 0 !important;\n }\n+\n+#copy-path {\n+\t/* It requires JS to work so no need to display it in this case. */\n+\tdisplay: none;\n+}"}, {"sha": "07dfb7f5cf0182319cba9ec646483c1643b9b019", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -1318,20 +1318,29 @@ h4 > .notable-traits {\n \toutline: none;\n }\n \n+#theme-picker, #settings-menu, .help-button, #copy-path {\n+\tpadding: 4px;\n+\twidth: 27px;\n+\theight: 29px;\n+\tborder: 1px solid;\n+\tborder-radius: 3px;\n+\tcursor: pointer;\n+}\n+\n .help-button {\n \tright: 30px;\n \tfont-family: \"Fira Sans\", Arial, sans-serif;\n \ttext-align: center;\n \tfont-size: 17px;\n+\tpadding-top: 2px;\n }\n \n-#theme-picker, #settings-menu, .help-button {\n-\tpadding: 4px;\n-\twidth: 27px;\n-\theight: 29px;\n-\tborder: 1px solid;\n-\tborder-radius: 3px;\n-\tcursor: pointer;\n+#copy-path {\n+\theight: 30px;\n+\tfont-size: 18px;\n+\tmargin-left: 10px;\n+\tpadding: 0 6px;\n+\twidth: 28px;\n }\n \n #theme-choices {"}, {"sha": "b24f4035ca868d6056109970f5f65fca1e0b36b7", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -498,7 +498,7 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, .help-button {\n+#theme-picker, #settings-menu, .help-button, #copy-path {\n \tborder-color: #5c6773;\n \tbackground-color: #0f1419;\n \tcolor: #fff;\n@@ -510,7 +510,8 @@ kbd {\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-.help-button:hover, .help-button:focus {\n+.help-button:hover, .help-button:focus,\n+#copy-path:hover, #copy-path:focus {\n \tborder-color: #e0e0e0;\n }\n "}, {"sha": "e863ed03f515696172151eccc67d1dd624713480", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -388,15 +388,16 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, .help-button {\n+#theme-picker, #settings-menu, .help-button, #copy-path {\n \tborder-color: #e0e0e0;\n \tbackground: #f0f0f0;\n \tcolor: #000;\n }\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-.help-button:hover, .help-button:focus {\n+.help-button:hover, .help-button:focus,\n+#copy-path:hover, #copy-path:focus {\n \tborder-color: #ffb900;\n }\n "}, {"sha": "9335dd96d299af9e4d69858d6a1380f64c0a8f68", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -380,14 +380,15 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, .help-button {\n+#theme-picker, #settings-menu, .help-button, #copy-path {\n \tborder-color: #e0e0e0;\n \tbackground-color: #fff;\n }\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-.help-button:hover, .help-button:focus {\n+.help-button:hover, .help-button:focus,\n+#copy-path:hover, #copy-path:focus {\n \tborder-color: #717171;\n }\n "}, {"sha": "a4df102d245bea25f768454b83105258af2664ff", "filename": "src/test/rustdoc-gui/search-tab-selection-if-current-is-empty.goml", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-selection-if-current-is-empty.goml", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-selection-if-current-is-empty.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-tab-selection-if-current-is-empty.goml?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -0,0 +1,21 @@\n+goto: file://|DOC_PATH|/index.html\n+write: (\".search-input\", \"Foo\")\n+// Waiting for the search results to appear...\n+wait-for: \"#titles\"\n+assert: (\"#titles > button:nth-of-type(1)\", \"class\", \"selected\")\n+\n+// To go back to the original \"state\"\n+goto: file://|DOC_PATH|/index.html\n+write: (\".search-input\", \"-> String\")\n+// Waiting for the search results to appear...\n+wait-for: \"#titles\"\n+// With this search, only the last tab shouldn't be empty so it should be selected.\n+assert: (\"#titles > button:nth-of-type(3)\", \"class\", \"selected\")\n+\n+// To go back to the original \"state\"\n+goto: file://|DOC_PATH|/index.html\n+write: (\".search-input\", \"-> Something\")\n+// Waiting for the search results to appear...\n+wait-for: \"#titles\"\n+// With this search, all the tabs are empty so the first one should remain selected.\n+assert: (\"#titles > button:nth-of-type(1)\", \"class\", \"selected\")"}, {"sha": "4d404d015ec0b017e96f4827f1740bc02c9428a8", "filename": "src/test/ui/mir/issue-83499-input-output-iteration-ice.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.rs?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -0,0 +1,10 @@\n+// Test that when in MIR the amount of local_decls and amount of normalized_input_tys don't match\n+// that an out-of-bounds access does not occur.\n+#![feature(c_variadic)]\n+\n+fn main() {}\n+\n+fn foo(_: Bar, ...) -> impl {}\n+//~^ ERROR only foreign or `unsafe extern \"C\" functions may be C-variadic\n+//~| ERROR cannot find type `Bar` in this scope\n+//~| ERROR at least one trait must be specified"}, {"sha": "eb172684899cfbdd92f8de352591358fb514a241", "filename": "src/test/ui/mir/issue-83499-input-output-iteration-ice.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a207871d5c22f89093085da89becbb636a45ef89/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a207871d5c22f89093085da89becbb636a45ef89/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.stderr?ref=a207871d5c22f89093085da89becbb636a45ef89", "patch": "@@ -0,0 +1,21 @@\n+error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n+  --> $DIR/issue-83499-input-output-iteration-ice.rs:7:16\n+   |\n+LL | fn foo(_: Bar, ...) -> impl {}\n+   |                ^^^\n+\n+error: at least one trait must be specified\n+  --> $DIR/issue-83499-input-output-iteration-ice.rs:7:24\n+   |\n+LL | fn foo(_: Bar, ...) -> impl {}\n+   |                        ^^^^\n+\n+error[E0412]: cannot find type `Bar` in this scope\n+  --> $DIR/issue-83499-input-output-iteration-ice.rs:7:11\n+   |\n+LL | fn foo(_: Bar, ...) -> impl {}\n+   |           ^^^ not found in this scope\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0412`."}]}