{"sha": "aca9004c7e4bafe1fc60d0e0298f5687b2e7615a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYTkwMDRjN2U0YmFmZTFmYzYwZDBlMDI5OGY1Njg3YjJlNzYxNWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-31T12:08:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-31T12:08:12Z"}, "message": "Merge #8271\n\n8271: Fix fail to parse u128  in proc-macro r=edwin0cheng a=edwin0cheng\n\nfixes #8270\r\n\r\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "b4af4bf8f1354200d6a3b19133bf3651c3e2964a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4af4bf8f1354200d6a3b19133bf3651c3e2964a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aca9004c7e4bafe1fc60d0e0298f5687b2e7615a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgZGYsCRBK7hj4Ov3rIwAAdHIIAEf+c+gagEnb8aWx6b/JnElA\nHBeNSIJj9w8xMkFLE6diDEmEG9SlEoI351ZEdpG+p6+REgGK7C4SCw9Dzago9eQJ\n0+gJVG4uNCST/rN1VSIK2vzJgGk0XQV9bEzy9rF16BSbXXPk+ANkicmyVXa/datT\n7e4o0sUU13933MHdyhPRYTkssOXswdXE9Fp2054Jng1v12UtlL3G8srvOBKSRDr+\nE+MfE8nFXBeRhLHrwdPFgBfnf+9b6LeBMmvYAC7K9pRgShHEJTjQP2WM22rJDiyh\nBSHaCZYEvaM9m7tOr2Wj7m/Dqf/bJ2xbGP2YvpNpZJVFOEU3AvHsrIqBlMdzpqI=\n=Z662\n-----END PGP SIGNATURE-----\n", "payload": "tree b4af4bf8f1354200d6a3b19133bf3651c3e2964a\nparent b6e21a4ca45087b0a0bbe10948a4b9f11e5ee7fb\nparent 55a3364e35ef2adf7036483a4cba99bcb2450de3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617192492 +0000\ncommitter GitHub <noreply@github.com> 1617192492 +0000\n\nMerge #8271\n\n8271: Fix fail to parse u128  in proc-macro r=edwin0cheng a=edwin0cheng\n\nfixes #8270\r\n\r\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aca9004c7e4bafe1fc60d0e0298f5687b2e7615a", "html_url": "https://github.com/rust-lang/rust/commit/aca9004c7e4bafe1fc60d0e0298f5687b2e7615a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aca9004c7e4bafe1fc60d0e0298f5687b2e7615a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6e21a4ca45087b0a0bbe10948a4b9f11e5ee7fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6e21a4ca45087b0a0bbe10948a4b9f11e5ee7fb", "html_url": "https://github.com/rust-lang/rust/commit/b6e21a4ca45087b0a0bbe10948a4b9f11e5ee7fb"}, {"sha": "55a3364e35ef2adf7036483a4cba99bcb2450de3", "url": "https://api.github.com/repos/rust-lang/rust/commits/55a3364e35ef2adf7036483a4cba99bcb2450de3", "html_url": "https://github.com/rust-lang/rust/commit/55a3364e35ef2adf7036483a4cba99bcb2450de3"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "5d765f6e27283e0bcf6c2ec73bd20d737cf3be47", "filename": "crates/proc_macro_srv/src/rustc_server.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aca9004c7e4bafe1fc60d0e0298f5687b2e7615a/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aca9004c7e4bafe1fc60d0e0298f5687b2e7615a/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs?ref=aca9004c7e4bafe1fc60d0e0298f5687b2e7615a", "patch": "@@ -534,8 +534,12 @@ impl server::Literal for Rustc {\n     }\n \n     fn integer(&mut self, n: &str) -> Self::Literal {\n-        let n: i128 = n.parse().unwrap();\n-        Literal { text: n.to_string().into(), id: tt::TokenId::unspecified() }\n+        let n = if let Ok(n) = n.parse::<i128>() {\n+            n.to_string()\n+        } else {\n+            n.parse::<u128>().unwrap().to_string()\n+        };\n+        return Literal { text: n.into(), id: tt::TokenId::unspecified() };\n     }\n \n     fn typed_integer(&mut self, n: &str, kind: &str) -> Self::Literal {\n@@ -757,6 +761,17 @@ mod tests {\n         assert_eq!(srv.string(\"hello_world\").text, \"\\\"hello_world\\\"\");\n         assert_eq!(srv.character('c').text, \"'c'\");\n         assert_eq!(srv.byte_string(b\"1234586\\x88\").text, \"b\\\"1234586\\\\x88\\\"\");\n+\n+        // u128::max\n+        assert_eq!(\n+            srv.integer(\"340282366920938463463374607431768211455\").text,\n+            \"340282366920938463463374607431768211455\"\n+        );\n+        // i128::min\n+        assert_eq!(\n+            srv.integer(\"-170141183460469231731687303715884105728\").text,\n+            \"-170141183460469231731687303715884105728\"\n+        );\n     }\n \n     #[test]"}]}