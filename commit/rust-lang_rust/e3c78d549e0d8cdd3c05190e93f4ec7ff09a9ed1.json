{"sha": "e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYzc4ZDU0OWUwZDhjZGQzYzA1MTkwZTkzZjRlYzdmZjA5YTllZDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-15T17:01:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-15T17:01:59Z"}, "message": "Rollup merge of #66407 - JohnTitor:add-ice-tests, r=Centril\n\nAdd more tests for fixed ICEs\n\nCloses #36122 (fixed in 1.20.0)\nCloses #58094 (fixed in #66054)\nAlso, fix mistaken test case, from #30904 to #30906 (cc @eddyb)\n\nr? @Centril", "tree": {"sha": "1ad1a6f9e9f12f3d8f4720f187e5173e1f04d066", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ad1a6f9e9f12f3d8f4720f187e5173e1f04d066"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdztoHCRBK7hj4Ov3rIwAAdHIIAJa6EMU8CRdYGFMG7HyAB60T\nBbua39Wb0o1lgqXar8TzRmB1LRngg2aiw9zHKcOnTeWu6wj4uygRT3+8nHZL1fuG\nSFy9R02iqXUtr14afb3Zehx/9OlOdm80P35v8kXUJ7zH0RaOf1Y4zWNNPeDlPY3z\nLoFh20foVDfx0zq68Tg5d/dAgwVTYfTt5oWfqei3D0ILzKIg/UB/ErBBzWBzM1Vy\nRJo9Dfq4gV7Hnih35eOCpUs65fhiorFoJ2V5cXKDdXXUFM6bEeU8Vfj5RUuBVd10\nVT2+cYJYLpqvhiYQdvY08g+Upk2RX502k3xyCLUBcXwvbZUuryOemTpE5XNBCFY=\n=4UuD\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ad1a6f9e9f12f3d8f4720f187e5173e1f04d066\nparent 6e5a4c1385946386635b9e97aa0ecc79632211cd\nparent 614abe48b0b9edc62a9455e27f64fa525c732aae\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1573837319 +0100\ncommitter GitHub <noreply@github.com> 1573837319 +0100\n\nRollup merge of #66407 - JohnTitor:add-ice-tests, r=Centril\n\nAdd more tests for fixed ICEs\n\nCloses #36122 (fixed in 1.20.0)\nCloses #58094 (fixed in #66054)\nAlso, fix mistaken test case, from #30904 to #30906 (cc @eddyb)\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "html_url": "https://github.com/rust-lang/rust/commit/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e5a4c1385946386635b9e97aa0ecc79632211cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5a4c1385946386635b9e97aa0ecc79632211cd", "html_url": "https://github.com/rust-lang/rust/commit/6e5a4c1385946386635b9e97aa0ecc79632211cd"}, {"sha": "614abe48b0b9edc62a9455e27f64fa525c732aae", "url": "https://api.github.com/repos/rust-lang/rust/commits/614abe48b0b9edc62a9455e27f64fa525c732aae", "html_url": "https://github.com/rust-lang/rust/commit/614abe48b0b9edc62a9455e27f64fa525c732aae"}], "stats": {"total": 136, "additions": 76, "deletions": 60}, "files": [{"sha": "22229db8000a8e24e64a6afc6fa014f2617ba902", "filename": "src/test/ui/extern/issue-36122-accessing-externed-dst.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fextern%2Fissue-36122-accessing-externed-dst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fextern%2Fissue-36122-accessing-externed-dst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fissue-36122-accessing-externed-dst.rs?ref=e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    extern {\n+        static symbol: [usize]; //~ ERROR: the size for values of type\n+    }\n+    println!(\"{}\", symbol[0]);\n+}"}, {"sha": "add3a8e79267d5f588dc4fa9ba5953df5f17da77", "filename": "src/test/ui/extern/issue-36122-accessing-externed-dst.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fextern%2Fissue-36122-accessing-externed-dst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fextern%2Fissue-36122-accessing-externed-dst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fissue-36122-accessing-externed-dst.stderr?ref=e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "patch": "@@ -0,0 +1,12 @@\n+error[E0277]: the size for values of type `[usize]` cannot be known at compilation time\n+  --> $DIR/issue-36122-accessing-externed-dst.rs:3:24\n+   |\n+LL |         static symbol: [usize];\n+   |                        ^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `[usize]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "25699f9fe111e1687085e7b433a233b4e2d1fb78", "filename": "src/test/ui/parser/issue-58094-missing-right-square-bracket.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.rs?ref=e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "patch": "@@ -0,0 +1,4 @@\n+// Fixed in #66054.\n+// ignore-tidy-trailing-newlines\n+// error-pattern: aborting due to 2 previous errors\n+#[\u0405\n\\ No newline at end of file"}, {"sha": "2c987da81d83354119432e277a1057476be2d723", "filename": "src/test/ui/parser/issue-58094-missing-right-square-bracket.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-58094-missing-right-square-bracket.stderr?ref=e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "patch": "@@ -0,0 +1,16 @@\n+error: this file contains an un-closed delimiter\n+  --> $DIR/issue-58094-missing-right-square-bracket.rs:4:4\n+   |\n+LL | #[\u0405\n+   |  - ^\n+   |  |\n+   |  un-closed delimiter\n+\n+error: expected item after attributes\n+  --> $DIR/issue-58094-missing-right-square-bracket.rs:4:4\n+   |\n+LL | #[\u0405\n+   |    ^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "eec5e962b431e55ef2bcd69fcc003fd0c255a629", "filename": "src/test/ui/unboxed-closures/issue-30904.rs", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6e5a4c1385946386635b9e97aa0ecc79632211cd/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5a4c1385946386635b9e97aa0ecc79632211cd/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30904.rs?ref=6e5a4c1385946386635b9e97aa0ecc79632211cd", "patch": "@@ -1,36 +0,0 @@\n-#![feature(fn_traits, unboxed_closures)]\n-\n-fn test<F: for<'x> FnOnce<(&'x str,)>>(_: F) {}\n-\n-struct Compose<F,G>(F,G);\n-impl<T,F,G> FnOnce<(T,)> for Compose<F,G>\n-where F: FnOnce<(T,)>, G: FnOnce<(F::Output,)> {\n-    type Output = G::Output;\n-    extern \"rust-call\" fn call_once(self, (x,): (T,)) -> G::Output {\n-        (self.1)((self.0)(x))\n-    }\n-}\n-\n-struct Str<'a>(&'a str);\n-fn mk_str<'a>(s: &'a str) -> Str<'a> { Str(s) }\n-\n-fn main() {\n-    let _: for<'a> fn(&'a str) -> Str<'a> = mk_str;\n-    // expected concrete lifetime, found bound lifetime parameter 'a\n-    let _: for<'a> fn(&'a str) -> Str<'a> = Str;\n-    //~^ ERROR: mismatched types\n-\n-    test(|_: &str| {});\n-    test(mk_str);\n-    // expected concrete lifetime, found bound lifetime parameter 'x\n-    test(Str); //~ ERROR: type mismatch in function arguments\n-\n-    test(Compose(|_: &str| {}, |_| {}));\n-    test(Compose(mk_str, |_| {}));\n-    // internal compiler error: cannot relate bound region:\n-    //   ReLateBound(DebruijnIndex { depth: 2 },\n-    //     BrNamed(DefId { krate: 0, node: DefIndex(6) => test::'x }, 'x(65)))\n-    //<= ReSkolemized(0,\n-    //     BrNamed(DefId { krate: 0, node: DefIndex(6) => test::'x }, 'x(65)))\n-    test(Compose(Str, |_| {}));\n-}"}, {"sha": "943cbe0ccc2978d63f48c0db601cd66a50b7754b", "filename": "src/test/ui/unboxed-closures/issue-30904.stderr", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6e5a4c1385946386635b9e97aa0ecc79632211cd/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30904.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e5a4c1385946386635b9e97aa0ecc79632211cd/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30904.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30904.stderr?ref=6e5a4c1385946386635b9e97aa0ecc79632211cd", "patch": "@@ -1,24 +0,0 @@\n-error[E0308]: mismatched types\n-  --> $DIR/issue-30904.rs:20:45\n-   |\n-LL |     let _: for<'a> fn(&'a str) -> Str<'a> = Str;\n-   |                                             ^^^ expected concrete lifetime, found bound lifetime parameter 'a\n-   |\n-   = note: expected type `for<'a> fn(&'a str) -> Str<'a>`\n-              found type `fn(&str) -> Str<'_> {Str::<'_>}`\n-\n-error[E0631]: type mismatch in function arguments\n-  --> $DIR/issue-30904.rs:26:10\n-   |\n-LL | fn test<F: for<'x> FnOnce<(&'x str,)>>(_: F) {}\n-   |    ----    -------------------------- required by this bound in `test`\n-...\n-LL | struct Str<'a>(&'a str);\n-   | ------------------------ found signature of `fn(&str) -> _`\n-...\n-LL |     test(Str);\n-   |          ^^^ expected signature of `for<'x> fn(&'x str) -> _`\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0308`."}, {"sha": "5a2cbab9a15002396a4327965b7387268435717f", "filename": "src/test/ui/unboxed-closures/issue-30906.nll.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.nll.stderr?ref=e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "patch": "@@ -0,0 +1,8 @@\n+error: higher-ranked subtype error\n+  --> $DIR/issue-30906.rs:15:5\n+   |\n+LL |     test(Compose(f, |_| {}));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "03cce832775151a665ec8b3894255558502d0659", "filename": "src/test/ui/unboxed-closures/issue-30906.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.rs?ref=e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "patch": "@@ -0,0 +1,18 @@\n+#![feature(fn_traits, unboxed_closures)]\n+\n+fn test<F: for<'x> FnOnce<(&'x str,)>>(_: F) {}\n+\n+struct Compose<F,G>(F,G);\n+impl<T,F,G> FnOnce<(T,)> for Compose<F,G>\n+where F: FnOnce<(T,)>, G: FnOnce<(F::Output,)> {\n+    type Output = G::Output;\n+    extern \"rust-call\" fn call_once(self, (x,): (T,)) -> G::Output {\n+        (self.1)((self.0)(x))\n+    }\n+}\n+\n+fn bad<T>(f: fn(&'static str) -> T) {\n+    test(Compose(f, |_| {})); //~ ERROR: mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "5c3a1154e74c18fd6fda706bd8962ff911e2a137", "filename": "src/test/ui/unboxed-closures/issue-30906.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Fissue-30906.stderr?ref=e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-30906.rs:15:5\n+   |\n+LL |     test(Compose(f, |_| {}));\n+   |     ^^^^ one type is more general than the other\n+   |\n+   = note: expected type `std::ops::FnOnce<(&'x str,)>`\n+              found type `std::ops::FnOnce<(&str,)>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}