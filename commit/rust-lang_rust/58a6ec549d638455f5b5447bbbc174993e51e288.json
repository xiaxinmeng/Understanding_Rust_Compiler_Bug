{"sha": "58a6ec549d638455f5b5447bbbc174993e51e288", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YTZlYzU0OWQ2Mzg0NTVmNWI1NDQ3YmJiYzE3NDk5M2U1MWUyODg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-17T19:34:14Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-17T19:34:14Z"}, "message": "Add some more error messages to fixture failure cases", "tree": {"sha": "f493e017bda49ae6ac2517530bbea56b6f6c0189", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f493e017bda49ae6ac2517530bbea56b6f6c0189"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58a6ec549d638455f5b5447bbbc174993e51e288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58a6ec549d638455f5b5447bbbc174993e51e288", "html_url": "https://github.com/rust-lang/rust/commit/58a6ec549d638455f5b5447bbbc174993e51e288", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58a6ec549d638455f5b5447bbbc174993e51e288/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb38dc704fc6ac14059e61485467ce9ddf32a08c", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb38dc704fc6ac14059e61485467ce9ddf32a08c", "html_url": "https://github.com/rust-lang/rust/commit/eb38dc704fc6ac14059e61485467ce9ddf32a08c"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0132565e475516871fdebe64df086e0562bbbead", "filename": "crates/base_db/src/fixture.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58a6ec549d638455f5b5447bbbc174993e51e288/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a6ec549d638455f5b5447bbbc174993e51e288/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Ffixture.rs?ref=58a6ec549d638455f5b5447bbbc174993e51e288", "patch": "@@ -35,7 +35,7 @@ pub trait WithFixture: Default + SourceDatabaseExt + 'static {\n     fn with_position(ra_fixture: &str) -> (Self, FilePosition) {\n         let (db, file_id, range_or_offset) = Self::with_range_or_offset(ra_fixture);\n         let offset = match range_or_offset {\n-            RangeOrOffset::Range(_) => panic!(),\n+            RangeOrOffset::Range(_) => panic!(\"Expected a cursor position, got a range instead\"),\n             RangeOrOffset::Offset(it) => it,\n         };\n         (db, FilePosition { file_id, offset })\n@@ -45,7 +45,7 @@ pub trait WithFixture: Default + SourceDatabaseExt + 'static {\n         let (db, file_id, range_or_offset) = Self::with_range_or_offset(ra_fixture);\n         let range = match range_or_offset {\n             RangeOrOffset::Range(it) => it,\n-            RangeOrOffset::Offset(_) => panic!(),\n+            RangeOrOffset::Offset(_) => panic!(\"Expected a cursor range, got a position instead\"),\n         };\n         (db, FileRange { file_id, range })\n     }"}, {"sha": "60e3a1474b04aac1bd3ded6d06e9e555daf7d9ef", "filename": "crates/ide_assists/src/tests.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58a6ec549d638455f5b5447bbbc174993e51e288/crates%2Fide_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a6ec549d638455f5b5447bbbc174993e51e288/crates%2Fide_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests.rs?ref=58a6ec549d638455f5b5447bbbc174993e51e288", "patch": "@@ -84,7 +84,8 @@ fn check_doc_test(assist_id: &str, before: &str, after: &str) {\n         });\n \n     let actual = {\n-        let source_change = assist.source_change.unwrap();\n+        let source_change =\n+            assist.source_change.expect(\"Assist did not contain any source changes\");\n         let mut actual = before;\n         if let Some(source_file_edit) = source_change.get_source_edit(file_id) {\n             source_file_edit.apply(&mut actual);\n@@ -121,7 +122,8 @@ fn check(handler: Handler, before: &str, expected: ExpectedResult, assist_label:\n \n     match (assist, expected) {\n         (Some(assist), ExpectedResult::After(after)) => {\n-            let source_change = assist.source_change.unwrap();\n+            let source_change =\n+                assist.source_change.expect(\"Assist did not contain any source changes\");\n             assert!(!source_change.source_file_edits.is_empty());\n             let skip_header = source_change.source_file_edits.len() == 1\n                 && source_change.file_system_edits.len() == 0;"}]}