{"sha": "635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNWE0Y2RjZGNmNzI2YWFiNGI2ZjdkY2I2MjBmZmRiMzNjNWUzNjc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-01-14T10:20:46Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-01-27T12:22:25Z"}, "message": "Also look in home directory for global config.", "tree": {"sha": "0bb87785ab29e658bd4a3881f0f547633121fbcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bb87785ab29e658bd4a3881f0f547633121fbcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367", "html_url": "https://github.com/rust-lang/rust/commit/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13db34fb95339c4ec3bf6f9ebd37ce22a01bcd84", "url": "https://api.github.com/repos/rust-lang/rust/commits/13db34fb95339c4ec3bf6f9ebd37ce22a01bcd84", "html_url": "https://github.com/rust-lang/rust/commit/13db34fb95339c4ec3bf6f9ebd37ce22a01bcd84"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "3399f7ff782822ba267a1f0b3edb23ed98ffa674", "filename": "Configurations.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367", "patch": "@@ -1,6 +1,6 @@\n # Configuring Rustfmt\n \n-Rustfmt is designed to be very configurable. You can create a TOML file called `rustfmt.toml` or `.rustfmt.toml`, place it in the project or any other parent directory and it will apply the options in that file. If none of these directories contain such a file, your [global config directory](https://docs.rs/dirs/1.0.4/dirs/fn.config_dir.html) is checked for a folder called `rustfmt`, which may contain a `rustfmt.toml` (e.g. `~/.config/rustfmt/rustfmt.toml`).\n+Rustfmt is designed to be very configurable. You can create a TOML file called `rustfmt.toml` or `.rustfmt.toml`, place it in the project or any other parent directory and it will apply the options in that file. If none of these directories contain such a file, both your home directory and a directory called `rustfmt` in your [global config directory](https://docs.rs/dirs/1.0.4/dirs/fn.config_dir.html) (e.g. `.config/rustfmt/`) are checked as well.\n \n A possible content of `rustfmt.toml` or `.rustfmt.toml` might look like this:\n "}, {"sha": "9e58eac52a22d906f199c9764d303cf69410b699", "filename": "src/config/config_type.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367/src%2Fconfig%2Fconfig_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367/src%2Fconfig%2Fconfig_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fconfig_type.rs?ref=635a4cdcdcf726aab4b6f7dcb620ffdb33c5e367", "patch": "@@ -349,7 +349,14 @@ macro_rules! create_config {\n                         }\n                     }\n \n-                    // If none was found, check in the global configuration directory.\n+                    // If nothing was found, check in the home directory.\n+                    if let Some(home_dir) = dirs::home_dir() {\n+                        if let Some(path) = get_toml_path(&home_dir)? {\n+                            return Ok(Some(path));\n+                        }\n+                    }\n+\n+                    // If none was found ther either, check in the user's configuration directory.\n                     if let Some(mut config_dir) = dirs::config_dir() {\n                         config_dir.push(\"rustfmt\");\n                         if let Some(path) = get_toml_path(&config_dir)? {"}]}