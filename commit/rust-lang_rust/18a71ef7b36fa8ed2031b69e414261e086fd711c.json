{"sha": "18a71ef7b36fa8ed2031b69e414261e086fd711c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YTcxZWY3YjM2ZmE4ZWQyMDMxYjY5ZTQxNDI2MWUwODZmZDcxMWM=", "commit": {"author": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-03-07T16:35:00Z"}, "committer": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-03-07T16:35:00Z"}, "message": "minor corrections", "tree": {"sha": "9a850800aa8caba23314c44f191b4177590b8d37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a850800aa8caba23314c44f191b4177590b8d37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a71ef7b36fa8ed2031b69e414261e086fd711c", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCXmPNNAAKCRAnUl7150IK\nUPImAQDbF8CNiVIiITCNkKecaguV3YEa9p6CUBMwXKlOU/iHbgEAsuB0tFcNKpeE\nuO8lxKu/CqRd42FqYdg4joGpA/4AbwI=\n=mC1w\n-----END PGP SIGNATURE-----", "payload": "tree 9a850800aa8caba23314c44f191b4177590b8d37\nparent e31b8b3342f4fc97198609f5e7e13e484969c8b1\nauthor Christian Poveda <git@christianpoveda.xyz> 1583598900 -0500\ncommitter Christian Poveda <git@christianpoveda.xyz> 1583598900 -0500\n\nminor corrections\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a71ef7b36fa8ed2031b69e414261e086fd711c", "html_url": "https://github.com/rust-lang/rust/commit/18a71ef7b36fa8ed2031b69e414261e086fd711c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a71ef7b36fa8ed2031b69e414261e086fd711c/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e31b8b3342f4fc97198609f5e7e13e484969c8b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e31b8b3342f4fc97198609f5e7e13e484969c8b1", "html_url": "https://github.com/rust-lang/rust/commit/e31b8b3342f4fc97198609f5e7e13e484969c8b1"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "13b55a93f216cfee444064d9cd4285ffd6b61331", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a71ef7b36fa8ed2031b69e414261e086fd711c/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a71ef7b36fa8ed2031b69e414261e086fd711c/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=18a71ef7b36fa8ed2031b69e414261e086fd711c", "patch": "@@ -78,7 +78,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n     );\n     // Complete initialization.\n     MemoryExtra::init_extern_statics(&mut ecx)?;\n-    EnvVars::init(&mut ecx, config.excluded_env_vars);\n+    EnvVars::init(&mut ecx, config.excluded_env_vars)?;\n \n     // Setup first stack-frame\n     let main_instance = ty::Instance::mono(tcx, main_id);"}, {"sha": "0f0c44300108ac5078bf98e58f687eb86c518211", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a71ef7b36fa8ed2031b69e414261e086fd711c/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a71ef7b36fa8ed2031b69e414261e086fd711c/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=18a71ef7b36fa8ed2031b69e414261e086fd711c", "patch": "@@ -85,7 +85,7 @@ pub struct MemoryExtra<'tcx> {\n     /// (helps for debugging memory leaks).\n     tracked_alloc_id: Option<AllocId>,\n \n-    /// Place where the `environ` static is stored. Its value should not change after initialization.\n+    /// Place where the `environ` static is stored. Lazily initialized, but then never changes.\n     pub(crate) environ: Option<MPlaceTy<'tcx, Tag>>,\n }\n "}, {"sha": "1962ca026ccc51c4598e2f07c7b2aad48a69fdaf", "filename": "src/shims/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18a71ef7b36fa8ed2031b69e414261e086fd711c/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a71ef7b36fa8ed2031b69e414261e086fd711c/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=18a71ef7b36fa8ed2031b69e414261e086fd711c", "patch": "@@ -20,7 +20,7 @@ impl EnvVars {\n     pub(crate) fn init<'mir, 'tcx>(\n         ecx: &mut InterpCx<'mir, 'tcx, Evaluator<'tcx>>,\n         excluded_env_vars: Vec<String>,\n-    ) {\n+    ) -> InterpResult<'tcx> {\n         if ecx.machine.communicate {\n             for (name, value) in env::vars() {\n                 if !excluded_env_vars.contains(&name) {\n@@ -30,7 +30,7 @@ impl EnvVars {\n                 }\n             }\n         }\n-        ecx.update_environ().unwrap();\n+        ecx.update_environ()\n     }\n }\n "}, {"sha": "a3d82a884213cdafce49feca580169c543343887", "filename": "tests/compile-fail/environ-gets-deallocated.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/18a71ef7b36fa8ed2031b69e414261e086fd711c/tests%2Fcompile-fail%2Fenviron-gets-deallocated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a71ef7b36fa8ed2031b69e414261e086fd711c/tests%2Fcompile-fail%2Fenviron-gets-deallocated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fenviron-gets-deallocated.rs?ref=18a71ef7b36fa8ed2031b69e414261e086fd711c", "patch": "@@ -1,9 +1,23 @@\n-extern \"C\" {\n+//ignore-windows: TODO env var emulation stubbed out on Windows\n+\n+#[cfg(target_os=\"linux\")]\n+fn get_environ() -> *const *const u8 {\n+  extern \"C\" {\n     static environ: *const *const u8;\n+  }\n+  environ\n+}\n+\n+#[cfg(target_os=\"macos\")]\n+fn get_environ() -> *const *const u8 {\n+    extern \"C\" {\n+        fn _NSGetEnviron() -> *mut *const *const u8;\n+    }\n+    unsafe { *_NSGetEnviron() }\n }\n \n fn main() {\n-    let pointer = unsafe { environ };\n+    let pointer = get_environ();\n     let _x = unsafe { *pointer };\n     std::env::set_var(\"FOO\", \"BAR\");\n     let _y = unsafe { *pointer }; //~ ERROR dangling pointer was dereferenced"}]}