{"sha": "81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "node_id": "C_kwDOAAsO6NoAKDgxYmI1YTU0YzMwOTBmZjAxYWYzZjU0ZjYzZTQ4MThjYjY3NmU4ZTk", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-10-01T22:07:48Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-10-01T22:07:48Z"}, "message": "Revert \"Auto merge of #86853 - usbalbin:const_try, r=oli-obk\"\n\nThis reverts commit c6007fdc7059c677a6c089e8d2915b264c0d1326, reversing\nchanges made to 69c1c6a173dcae20c245348f6c7d19074b6109b7.", "tree": {"sha": "8a0df7c88b8426977198ff36fba75c7ca334a93c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a0df7c88b8426977198ff36fba75c7ca334a93c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEeQ9lb2ZjsXFBDRuFH1AezRu9cKcFAmFXhvgACgkQH1AezRu9\ncKdUww//cHxuDjgyUXJVsgSotspwIi29D0yj4fyUrw8HdPEu9BIizU9j5cqxxYYa\nfD5sfbuSasbhPexQZvakt8JHLJ3fe3kuCLc9VbRWmi9I+vCiZ7APWfU9Vjc7aIJs\nuXfeaNDZSadhq5/6u0Dr4ouO98tW1qV7f+Iv3bGmBRXyRiFZrq0XdLOj8m9XrkOr\nOxUQuQwtY1QInikasZk/fcysNwZnn/T1hAgAXHr7fLIG10iBH+dZp0iYCG/xcGMb\nP1HDHp1iwYGN106jxng0RepyoAUn5nzHpA7Jpqt8EhIF2e1Oec4V94pivLjZyf/e\nIWTDDDm7AFi5JgaYR/Zwt13Qn3gtxSz3FVgfDVNcEHyng9Cat4qhCuawhDvw8ElD\n9V4uYmdXCb2h4PvIaeuuoslQy2llo1d4IbLGbf1vL8WaNYF/+lX1vOTFNJp+ONeT\nL0G76zZJ+K+5hK4mOEOkHhU5A0QwCXxuSwfsj2ZJ8Gw9lragOaqbY7ROVsBP1UaM\nuroyqpKD2K+Ln4sRGZ8jRjNNDM5sbnBVVCf9WO+sjxZCknRUZAFWaEz7rKsiKsiW\nhlgMqm1gxswWzzwG3eRibG8mnv15e+vTARdqvEzBXqv2u1DJBOv0BhzDh0j2eJ/4\nKghDGOdx/JtlGhvx/aHiU/UP2+RAXDAkH0hXZVU43LecjZWmaAo=\n=hj+O\n-----END PGP SIGNATURE-----", "payload": "tree 8a0df7c88b8426977198ff36fba75c7ca334a93c\nparent b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2\nauthor Albin Hedman <albin9604@gmail.com> 1633126068 +0200\ncommitter Albin Hedman <albin9604@gmail.com> 1633126068 +0200\n\nRevert \"Auto merge of #86853 - usbalbin:const_try, r=oli-obk\"\n\nThis reverts commit c6007fdc7059c677a6c089e8d2915b264c0d1326, reversing\nchanges made to 69c1c6a173dcae20c245348f6c7d19074b6109b7.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "html_url": "https://github.com/rust-lang/rust/commit/81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2", "html_url": "https://github.com/rust-lang/rust/commit/b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2"}], "stats": {"total": 66, "additions": 8, "deletions": 58}, "files": [{"sha": "1e512af48051ed9dc7c5627ed29aef8b0906506f", "filename": "library/core/src/convert/mod.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs?ref=81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "patch": "@@ -532,10 +532,9 @@ where\n \n // From implies Into\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n-impl<T, U> const Into<U> for T\n+impl<T, U> Into<U> for T\n where\n-    U: ~const From<T>,\n+    U: From<T>,\n {\n     fn into(self) -> U {\n         U::from(self)\n@@ -544,8 +543,7 @@ where\n \n // From (and thus Into) is reflexive\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n-impl<T> const From<T> for T {\n+impl<T> From<T> for T {\n     fn from(t: T) -> T {\n         t\n     }"}, {"sha": "2230461b5f4b59ea0aba60578cfb759e58b6dedb", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "patch": "@@ -82,7 +82,6 @@\n #![feature(const_float_bits_conv)]\n #![feature(const_float_classify)]\n #![feature(const_heap)]\n-#![feature(const_convert)]\n #![feature(const_inherent_unchecked_arith)]\n #![feature(const_int_unchecked_arith)]\n #![feature(const_intrinsic_copy)]"}, {"sha": "94d892dd787a6874579ae7db1e405a5a1efbfcc6", "filename": "library/core/src/option.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "patch": "@@ -2019,8 +2019,7 @@ impl<A, V: FromIterator<A>> FromIterator<Option<A>> for Option<V> {\n }\n \n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n-#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n-impl<T> const ops::Try for Option<T> {\n+impl<T> ops::Try for Option<T> {\n     type Output = T;\n     type Residual = Option<convert::Infallible>;\n \n@@ -2039,8 +2038,7 @@ impl<T> const ops::Try for Option<T> {\n }\n \n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n-#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n-impl<T> const ops::FromResidual for Option<T> {\n+impl<T> ops::FromResidual for Option<T> {\n     #[inline]\n     fn from_residual(residual: Option<convert::Infallible>) -> Self {\n         match residual {"}, {"sha": "4a300f857e9ed9dd4623ca07c983dc6f0f5b6cb5", "filename": "library/core/src/result.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "patch": "@@ -1889,8 +1889,7 @@ impl<A, E, V: FromIterator<A>> FromIterator<Result<A, E>> for Result<V, E> {\n }\n \n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n-#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n-impl<T, E> const ops::Try for Result<T, E> {\n+impl<T, E> ops::Try for Result<T, E> {\n     type Output = T;\n     type Residual = Result<convert::Infallible, E>;\n \n@@ -1909,10 +1908,7 @@ impl<T, E> const ops::Try for Result<T, E> {\n }\n \n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n-#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n-impl<T, E, F: ~const From<E>> const ops::FromResidual<Result<convert::Infallible, E>>\n-    for Result<T, F>\n-{\n+impl<T, E, F: From<E>> ops::FromResidual<Result<convert::Infallible, E>> for Result<T, F> {\n     #[inline]\n     fn from_residual(residual: Result<convert::Infallible, E>) -> Self {\n         match residual {"}, {"sha": "f1048f4cf09cb1750d01338132af025d885c3fad", "filename": "library/core/tests/convert.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2/library%2Fcore%2Ftests%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2/library%2Fcore%2Ftests%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fconvert.rs?ref=b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2", "patch": "@@ -1,16 +0,0 @@\n-#[test]\n-fn convert() {\n-    const fn from(x: i32) -> i32 {\n-        i32::from(x)\n-    }\n-\n-    const FOO: i32 = from(42);\n-    assert_eq!(FOO, 42);\n-\n-    const fn into(x: Vec<String>) -> Vec<String> {\n-        x.into()\n-    }\n-\n-    const BAR: Vec<String> = into(Vec::new());\n-    assert_eq!(BAR, Vec::<String>::new());\n-}"}, {"sha": "cd3aed4cd28f81a7d90c9f7fc15cfb2a99d97d19", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bb5a54c3090ff01af3f54f63e4818cb676e8e9/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=81bb5a54c3090ff01af3f54f63e4818cb676e8e9", "patch": "@@ -9,13 +9,12 @@\n #![feature(cfg_target_has_atomic)]\n #![feature(const_assume)]\n #![feature(const_cell_into_inner)]\n-#![feature(const_convert)]\n #![feature(const_maybe_uninit_assume_init)]\n-#![feature(const_num_from_num)]\n #![feature(const_ptr_read)]\n #![feature(const_ptr_write)]\n #![feature(const_ptr_offset)]\n #![feature(const_trait_impl)]\n+#![feature(const_num_from_num)]\n #![feature(core_intrinsics)]\n #![feature(core_private_bignum)]\n #![feature(core_private_diy_float)]\n@@ -84,7 +83,6 @@ mod char;\n mod clone;\n mod cmp;\n mod const_ptr;\n-mod convert;\n mod fmt;\n mod hash;\n mod intrinsics;"}, {"sha": "fe43b132cbd7fb63e96a80b6c6b0464f16ca5a89", "filename": "src/test/ui/consts/try-operator.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2/src%2Ftest%2Fui%2Fconsts%2Ftry-operator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2/src%2Ftest%2Fui%2Fconsts%2Ftry-operator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Ftry-operator.rs?ref=b6057bf7b7ee7c58e6a39ead02eaa13b75f908c2", "patch": "@@ -1,23 +0,0 @@\n-// run-pass\n-\n-#![feature(try_trait_v2)]\n-#![feature(const_trait_impl)]\n-#![feature(const_try)]\n-#![feature(const_convert)]\n-\n-fn main() {\n-    const fn result() -> Result<bool, ()> {\n-        Err(())?;\n-        Ok(true)\n-    }\n-\n-    const FOO: Result<bool, ()> = result();\n-    assert_eq!(Err(()), FOO);\n-\n-    const fn option() -> Option<()> {\n-        None?;\n-        Some(())\n-    }\n-    const BAR: Option<()> = option();\n-    assert_eq!(None, BAR);\n-}"}]}