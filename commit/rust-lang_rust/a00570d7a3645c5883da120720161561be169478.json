{"sha": "a00570d7a3645c5883da120720161561be169478", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMDU3MGQ3YTM2NDVjNTg4M2RhMTIwNzIwMTYxNTYxYmUxNjk0Nzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T10:40:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T10:40:36Z"}, "message": "minor rename", "tree": {"sha": "cd51ddf26f7c9ce29a6d3fdaa3be88dfb88e3c9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd51ddf26f7c9ce29a6d3fdaa3be88dfb88e3c9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a00570d7a3645c5883da120720161561be169478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a00570d7a3645c5883da120720161561be169478", "html_url": "https://github.com/rust-lang/rust/commit/a00570d7a3645c5883da120720161561be169478", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a00570d7a3645c5883da120720161561be169478/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb085ded8d61d7b744d0a83ecbb3da254f6ab9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb085ded8d61d7b744d0a83ecbb3da254f6ab9f", "html_url": "https://github.com/rust-lang/rust/commit/cfb085ded8d61d7b744d0a83ecbb3da254f6ab9f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "13ee1305f76d94d2a586ecd067c272b92f6a52f6", "filename": "crates/ra_syntax/src/ptr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a00570d7a3645c5883da120720161561be169478/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a00570d7a3645c5883da120720161561be169478/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fptr.rs?ref=a00570d7a3645c5883da120720161561be169478", "patch": "@@ -42,7 +42,7 @@ impl SyntaxNodePtr {\n /// Like `SyntaxNodePtr`, but remembers the type of node\n #[derive(Debug, PartialEq, Eq, Hash)]\n pub struct AstPtr<N: AstNode> {\n-    ptr: SyntaxNodePtr,\n+    raw: SyntaxNodePtr,\n     _ty: PhantomData<N>,\n }\n \n@@ -56,18 +56,18 @@ impl<N: AstNode> Clone for AstPtr<N> {\n impl<N: AstNode> AstPtr<N> {\n     pub fn new(node: &N) -> AstPtr<N> {\n         AstPtr {\n-            ptr: SyntaxNodePtr::new(node.syntax()),\n+            raw: SyntaxNodePtr::new(node.syntax()),\n             _ty: PhantomData,\n         }\n     }\n \n     pub fn to_node(self, source_file: &SourceFile) -> &N {\n-        let syntax_node = self.ptr.to_node(source_file);\n+        let syntax_node = self.raw.to_node(source_file);\n         N::cast(syntax_node).unwrap()\n     }\n \n     pub fn syntax_node_ptr(self) -> SyntaxNodePtr {\n-        self.ptr\n+        self.raw\n     }\n }\n "}]}