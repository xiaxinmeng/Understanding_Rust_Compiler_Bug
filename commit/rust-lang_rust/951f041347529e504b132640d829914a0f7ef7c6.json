{"sha": "951f041347529e504b132640d829914a0f7ef7c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1MWYwNDEzNDc1MjllNTA0YjEzMjY0MGQ4Mjk5MTRhMGY3ZWY3YzY=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-11-26T17:03:53Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-12-19T02:19:05Z"}, "message": "fix import", "tree": {"sha": "618c75af9351f3cd21f0f1f5511d4a25ca1a0012", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/618c75af9351f3cd21f0f1f5511d4a25ca1a0012"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/951f041347529e504b132640d829914a0f7ef7c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/951f041347529e504b132640d829914a0f7ef7c6", "html_url": "https://github.com/rust-lang/rust/commit/951f041347529e504b132640d829914a0f7ef7c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/951f041347529e504b132640d829914a0f7ef7c6/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baaf864e07a8b8b99ed548c08606c1c7da74256b", "url": "https://api.github.com/repos/rust-lang/rust/commits/baaf864e07a8b8b99ed548c08606c1c7da74256b", "html_url": "https://github.com/rust-lang/rust/commit/baaf864e07a8b8b99ed548c08606c1c7da74256b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dff8364b8473027fc0af5729735546e25ac1287d", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/951f041347529e504b132640d829914a0f7ef7c6/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/951f041347529e504b132640d829914a0f7ef7c6/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=951f041347529e504b132640d829914a0f7ef7c6", "patch": "@@ -54,7 +54,7 @@ impl<T, A: Alloc> RawVec<T, A> {\n     pub const fn new_in(a: A) -> Self {\n         let cap = {\n             #[cfg(not(bootstrap))]\n-            { if mem::size_of::<T>() == 0 { usize::MAX } else { 0 } }\n+            { if mem::size_of::<T>() == 0 { core::usize::MAX } else { 0 } }\n \n             #[cfg(bootstrap)]\n             [0, !0][(mem::size_of::<T>() == 0) as usize]"}]}