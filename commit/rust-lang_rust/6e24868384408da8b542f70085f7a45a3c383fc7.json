{"sha": "6e24868384408da8b542f70085f7a45a3c383fc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMjQ4NjgzODQ0MDhkYThiNTQyZjcwMDg1ZjdhNDVhM2MzODNmYzc=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-21T10:57:11Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-21T10:59:42Z"}, "message": "Normalize source line and column numbers.\n\nThis commit adds a normalization for line and column numbers in stderr\nfiles where the line/col is from the source directory rather than\nthe test itself - thereby removing the need to update tests as\ncompiler source changes.", "tree": {"sha": "4d6ee024f02099454bb056558a46482f6e9e31dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d6ee024f02099454bb056558a46482f6e9e31dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e24868384408da8b542f70085f7a45a3c383fc7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlt78KkACgkQAXYLT59T\n8VRbXg/+IIL3gUfrSIpR70UXq/ybK/zAT51XXErtdTC1OfbTH4Q3GJDHfe5XynmG\nZIc1KC8j0fmGtA4MuUm8w7UTc22lWmUXSWY4FZy2lg4E8vL7HZ9R2V/cC6Lr+h/u\nuYF6wi7n98mbvvact7a9d62KRzP4/ANcdNnQbPReLzCk9S7iUzb1pDdV376aU/4k\nUfAVo6jHXliPlNmTTb3STbuVVH5xGPMt4hcySxlrY2dYDMQw0wY/1V94ZFngrYgk\n2ya65HgRqO2yLYyMWkJuzaZ+73qdDofOQOlKr6bUUE75Xa61KB4z3EhbUiXx4rDX\nK0O6JTUI1rkIBrSWBuCBWvFdQEKz1Nd9eyTrhvw+5tIaOGv5UdxnCNYh0ZQukTHu\nNDdDcfYmoxGArnwlhi/F+Q1oesTcJMzg7aw5pRIIbxaGRr3SCyNr1/KYIXwqTvpK\nswUdxgokCTqw7a6eyl9p/haQofIJpKFZfJJa2/5xSGWkTwlZhlYG7Ks329U8bC1Q\n4GQM899dTPDT//XwbsrVYcXq4o7fLRTjkdoiVTm+OxS+COeNGZ1+llH9Wju0UrqT\nLl4So0+HUsyIwUBTnsrzYJUp95ia1WxDFCrYAj+yXlWQ8Bg+8e9KHuZi7nAjLC6X\n1mfRDKnS7trECDyp2/+GYuwx/VsPF3wqj56CBmSHYiY49dkbN/Y=\n=R2sq\n-----END PGP SIGNATURE-----", "payload": "tree 4d6ee024f02099454bb056558a46482f6e9e31dc\nparent 70c33bb8e2649a019e48515128a0b447dfe66f6b\nauthor David Wood <david@davidtw.co> 1534849031 +0200\ncommitter David Wood <david@davidtw.co> 1534849182 +0200\n\nNormalize source line and column numbers.\n\nThis commit adds a normalization for line and column numbers in stderr\nfiles where the line/col is from the source directory rather than\nthe test itself - thereby removing the need to update tests as\ncompiler source changes.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e24868384408da8b542f70085f7a45a3c383fc7", "html_url": "https://github.com/rust-lang/rust/commit/6e24868384408da8b542f70085f7a45a3c383fc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e24868384408da8b542f70085f7a45a3c383fc7/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70c33bb8e2649a019e48515128a0b447dfe66f6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/70c33bb8e2649a019e48515128a0b447dfe66f6b", "html_url": "https://github.com/rust-lang/rust/commit/70c33bb8e2649a019e48515128a0b447dfe66f6b"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "16d87f7e31c9bb126b81f7ac4a0580d9fc1ef2c6", "filename": "src/test/ui/consts/const-size_of-cycle.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e24868384408da8b542f70085f7a45a3c383fc7/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e24868384408da8b542f70085f7a45a3c383fc7/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr?ref=6e24868384408da8b542f70085f7a45a3c383fc7", "patch": "@@ -2,13 +2,13 @@ error[E0391]: cycle detected when computing layout of `Foo`\n    |\n note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: [u8; _] }`...\n note: ...which requires const-evaluating `Foo::bytes::{{constant}}`...\n-  --> $SRC_DIR/libcore/mem.rs:323:14\n+  --> $SRC_DIR/libcore/mem.rs:LL:COL\n    |\n LL |     unsafe { intrinsics::size_of::<T>() }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: ...which again requires computing layout of `Foo`, completing the cycle\n note: cycle used when const-evaluating `Foo::bytes::{{constant}}`\n-  --> $SRC_DIR/libcore/mem.rs:323:14\n+  --> $SRC_DIR/libcore/mem.rs:LL:COL\n    |\n LL |     unsafe { intrinsics::size_of::<T>() }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "7ad16b1f8f237c0eeb2510d8e59f754b5e274b70", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e24868384408da8b542f70085f7a45a3c383fc7/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e24868384408da8b542f70085f7a45a3c383fc7/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr?ref=6e24868384408da8b542f70085f7a45a3c383fc7", "patch": "@@ -30,7 +30,7 @@ error[E0643]: method `hash` has incompatible signature for trait\n LL |     fn hash(&self, hasher: &mut impl Hasher) {}\n    |                                 ^^^^^^^^^^^ expected generic parameter, found `impl Trait`\n    | \n-  ::: $SRC_DIR/libcore/hash/mod.rs:185:13\n+  ::: $SRC_DIR/libcore/hash/mod.rs:LL:COL\n    |\n LL |     fn hash<H: Hasher>(&self, state: &mut H);\n    |             - declaration in trait here"}, {"sha": "24b575aae12f9f44c6a5c90e13b3a10ccce1c9ad", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e24868384408da8b542f70085f7a45a3c383fc7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e24868384408da8b542f70085f7a45a3c383fc7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=6e24868384408da8b542f70085f7a45a3c383fc7", "patch": "@@ -2963,6 +2963,13 @@ impl<'test> TestCx<'test> {\n             normalized = normalized.replace(\"\\\\n\", \"\\n\");\n         }\n \n+        // If there are `$SRC_DIR` normalizations with line and column numbers, then replace them\n+        // with placeholders as we do not want tests needing updated when compiler source code\n+        // changes.\n+        // eg. $SRC_DIR/libcore/mem.rs:323:14 becomes $SRC_DIR/libcore/mem.rs:LL:COL\n+        normalized = Regex::new(\"SRC_DIR(.+):\\\\d+:\\\\d+\").unwrap()\n+            .replace_all(&normalized, \"SRC_DIR$1:LL:COL\").into_owned();\n+\n         normalized = normalized.replace(\"\\\\\\\\\", \"\\\\\") // denormalize for paths on windows\n               .replace(\"\\\\\", \"/\") // normalize for paths on windows\n               .replace(\"\\r\\n\", \"\\n\") // normalize for linebreaks on windows"}]}