{"sha": "f7d12b4eec92b403909e4ae743fbb77e59ce3994", "node_id": "C_kwDOAAsO6NoAKGY3ZDEyYjRlZWM5MmI0MDM5MDllNGFlNzQzZmJiNzdlNTljZTM5OTQ", "commit": {"author": {"name": "Martin Kr\u00f6ning", "email": "mkroening@posteo.net", "date": "2022-06-01T21:13:46Z"}, "committer": {"name": "Martin Kr\u00f6ning", "email": "mkroening@posteo.net", "date": "2022-06-01T21:13:46Z"}, "message": "Session object: Decouple e_flags from FileFlags", "tree": {"sha": "00b13a7692778a80da413ee9cf85f21f95e1dc8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00b13a7692778a80da413ee9cf85f21f95e1dc8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7d12b4eec92b403909e4ae743fbb77e59ce3994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7d12b4eec92b403909e4ae743fbb77e59ce3994", "html_url": "https://github.com/rust-lang/rust/commit/f7d12b4eec92b403909e4ae743fbb77e59ce3994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7d12b4eec92b403909e4ae743fbb77e59ce3994/comments", "author": {"login": "mkroening", "id": 28776973, "node_id": "MDQ6VXNlcjI4Nzc2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/28776973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkroening", "html_url": "https://github.com/mkroening", "followers_url": "https://api.github.com/users/mkroening/followers", "following_url": "https://api.github.com/users/mkroening/following{/other_user}", "gists_url": "https://api.github.com/users/mkroening/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkroening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkroening/subscriptions", "organizations_url": "https://api.github.com/users/mkroening/orgs", "repos_url": "https://api.github.com/users/mkroening/repos", "events_url": "https://api.github.com/users/mkroening/events{/privacy}", "received_events_url": "https://api.github.com/users/mkroening/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mkroening", "id": 28776973, "node_id": "MDQ6VXNlcjI4Nzc2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/28776973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkroening", "html_url": "https://github.com/mkroening", "followers_url": "https://api.github.com/users/mkroening/followers", "following_url": "https://api.github.com/users/mkroening/following{/other_user}", "gists_url": "https://api.github.com/users/mkroening/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkroening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkroening/subscriptions", "organizations_url": "https://api.github.com/users/mkroening/orgs", "repos_url": "https://api.github.com/users/mkroening/repos", "events_url": "https://api.github.com/users/mkroening/events{/privacy}", "received_events_url": "https://api.github.com/users/mkroening/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "946a88a989acdcc3b0d05a666eaac0db414ec2cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/946a88a989acdcc3b0d05a666eaac0db414ec2cd", "html_url": "https://github.com/rust-lang/rust/commit/946a88a989acdcc3b0d05a666eaac0db414ec2cd"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "4c330c5906ab8f28bcb5d3b12865e2026f3cd722", "filename": "compiler/rustc_codegen_ssa/src/back/metadata.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f7d12b4eec92b403909e4ae743fbb77e59ce3994/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7d12b4eec92b403909e4ae743fbb77e59ce3994/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs?ref=f7d12b4eec92b403909e4ae743fbb77e59ce3994", "patch": "@@ -130,7 +130,7 @@ pub(crate) fn create_object_file(sess: &Session) -> Option<write::Object<'static\n     };\n \n     let mut file = write::Object::new(binary_format, architecture, endianness);\n-    match architecture {\n+    let e_flags = match architecture {\n         Architecture::Mips => {\n             let arch = match sess.target.options.cpu.as_ref() {\n                 \"mips1\" => elf::EF_MIPS_ARCH_1,\n@@ -149,7 +149,7 @@ pub(crate) fn create_object_file(sess: &Session) -> Option<write::Object<'static\n             if sess.target.options.cpu.contains(\"r6\") {\n                 e_flags |= elf::EF_MIPS_NAN2008;\n             }\n-            file.flags = FileFlags::Elf { e_flags };\n+            e_flags\n         }\n         Architecture::Mips64 => {\n             // copied from `mips64el-linux-gnuabi64-gcc foo.c -c`\n@@ -160,17 +160,18 @@ pub(crate) fn create_object_file(sess: &Session) -> Option<write::Object<'static\n                 } else {\n                     elf::EF_MIPS_ARCH_64R2\n                 };\n-            file.flags = FileFlags::Elf { e_flags };\n+            e_flags\n         }\n         Architecture::Riscv64 if sess.target.options.features.contains(\"+d\") => {\n             // copied from `riscv64-linux-gnu-gcc foo.c -c`, note though\n             // that the `+d` target feature represents whether the double\n             // float abi is enabled.\n             let e_flags = elf::EF_RISCV_RVC | elf::EF_RISCV_FLOAT_ABI_DOUBLE;\n-            file.flags = FileFlags::Elf { e_flags };\n+            e_flags\n         }\n-        _ => {}\n+        _ => 0,\n     };\n+    file.flags = FileFlags::Elf { e_flags };\n     Some(file)\n }\n "}]}