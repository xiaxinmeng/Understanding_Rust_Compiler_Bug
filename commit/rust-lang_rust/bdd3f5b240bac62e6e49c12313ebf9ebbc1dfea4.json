{"sha": "bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZDNmNWIyNDBiYWM2MmU2ZTQ5YzEyMzEzZWJmOWViYmMxZGZlYTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-12-21T12:18:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-21T12:18:21Z"}, "message": "Rollup merge of #46887 - pnkfelix:ensure-activations-are-from-assignments-to-locals, r=arielb1\n\nEnsure separate activations only occur for assignments to locals\n\nEnsure separate activations only occur for assignments to locals, not projections.\n\nFix #46746.\n\n(I didn't make a regression test because we do not really have a good way to directly express the case that we are trying to catch, because we cannot write MIR directly.)", "tree": {"sha": "48a7a548c355ca922f94e472214ec7a52b535114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48a7a548c355ca922f94e472214ec7a52b535114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4", "html_url": "https://github.com/rust-lang/rust/commit/bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1219494f6f1172343e8b08c43229c3ba148a9ffc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1219494f6f1172343e8b08c43229c3ba148a9ffc", "html_url": "https://github.com/rust-lang/rust/commit/1219494f6f1172343e8b08c43229c3ba148a9ffc"}, {"sha": "a0e1d509aba0ec14f6e95e1bf720563784ae6771", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0e1d509aba0ec14f6e95e1bf720563784ae6771", "html_url": "https://github.com/rust-lang/rust/commit/a0e1d509aba0ec14f6e95e1bf720563784ae6771"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "8083c1debb8ae69a5c204c8c0673a13f4f0b62ff", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=bdd3f5b240bac62e6e49c12313ebf9ebbc1dfea4", "patch": "@@ -361,7 +361,7 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n                 }\n             }\n \n-            mir::StatementKind::Assign(_, ref rhs) => {\n+            mir::StatementKind::Assign(ref lhs, ref rhs) => {\n                 // NOTE: if/when the Assign case is revised to inspect\n                 // the assigned_place here, make sure to also\n                 // re-consider the current implementations of the\n@@ -382,6 +382,22 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n                         panic!(\"could not find BorrowIndexs for region {:?}\", region);\n                     }).contains(&index));\n                     sets.gen(&ReserveOrActivateIndex::reserved(*index));\n+\n+                    if is_activations {\n+                        // Issue #46746: Two-phase borrows handles\n+                        // stmts of form `Tmp = &mut Borrow` ...\n+                        match lhs {\n+                            Place::Local(..) => {} // okay\n+                            Place::Static(..) => unreachable!(), // (filtered by is_unsafe_place)\n+                            Place::Projection(..) => {\n+                                // ... can assign into projections,\n+                                // e.g. `box (&mut _)`. Current\n+                                // conservative solution: force\n+                                // immediate activation here.\n+                                sets.gen(&ReserveOrActivateIndex::active(*index));\n+                            }\n+                        }\n+                    }\n                 }\n             }\n "}]}