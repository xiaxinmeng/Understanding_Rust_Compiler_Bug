{"sha": "cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "node_id": "C_kwDOAAsO6NoAKGNiODczYjJkOTNhYTVmOWVlZGMzODkyNjhhMTRjZWJjMmNiMWRiNWM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-28T16:16:23Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-27T18:57:10Z"}, "message": "Separate trait selection from ambiguity reporting.", "tree": {"sha": "02a18492d5b262349b728a6c2dfad9c87427c3bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02a18492d5b262349b728a6c2dfad9c87427c3bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "html_url": "https://github.com/rust-lang/rust/commit/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2870ce01b858acf16dacab7877186a5c1f265c6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2870ce01b858acf16dacab7877186a5c1f265c6b", "html_url": "https://github.com/rust-lang/rust/commit/2870ce01b858acf16dacab7877186a5c1f265c6b"}], "stats": {"total": 55, "additions": 25, "deletions": 30}, "files": [{"sha": "42f4b49889a2dc001bc91581d236ed52d44d01bf", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -525,8 +525,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     }\n \n     #[instrument(skip(self), level = \"debug\")]\n-    pub(in super::super) fn select_all_obligations_or_error(&self) {\n-        let mut errors = self.fulfillment_cx.borrow_mut().select_all_or_error(&self);\n+    pub(in super::super) fn report_ambiguity_errors(&self) {\n+        let mut errors = self.fulfillment_cx.borrow_mut().collect_remaining_errors();\n \n         if !errors.is_empty() {\n             self.adjust_fulfillment_errors_for_expr_obligation(&mut errors);"}, {"sha": "899ec9ff9de0f2d051faa598f8491b4c683b8c84", "filename": "compiler/rustc_hir_typeck/src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -301,7 +301,11 @@ fn typeck_with_fallback<'tcx>(\n             fcx.require_type_is_sized(ty, span, code);\n         }\n \n-        fcx.select_all_obligations_or_error();\n+        fcx.select_obligations_where_possible(|_| {});\n+\n+        if let None = fcx.infcx.tainted_by_errors() {\n+            fcx.report_ambiguity_errors();\n+        }\n \n         if let None = fcx.infcx.tainted_by_errors() {\n             fcx.check_transmutes();"}, {"sha": "9174bd524bee6d50b74246c8ea0e8df156907041", "filename": "compiler/rustc_infer/src/infer/canonical/query_response.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -17,7 +17,7 @@ use crate::infer::region_constraints::{Constraint, RegionConstraintData};\n use crate::infer::{InferCtxt, InferOk, InferResult, NllRegionVariableOrigin};\n use crate::traits::query::{Fallible, NoSolution};\n use crate::traits::{Obligation, ObligationCause, PredicateObligation};\n-use crate::traits::{PredicateObligations, TraitEngine};\n+use crate::traits::{PredicateObligations, TraitEngine, TraitEngineExt};\n use rustc_data_structures::captures::Captures;\n use rustc_index::vec::Idx;\n use rustc_index::vec::IndexVec;"}, {"sha": "805eb95e31612433e51ba5b34e55e92a9a06bccc", "filename": "compiler/rustc_infer/src/traits/engine.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fengine.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -36,10 +36,10 @@ pub trait TraitEngine<'tcx>: 'tcx {\n         obligation: PredicateObligation<'tcx>,\n     );\n \n-    fn select_all_or_error(&mut self, infcx: &InferCtxt<'tcx>) -> Vec<FulfillmentError<'tcx>>;\n-\n     fn select_where_possible(&mut self, infcx: &InferCtxt<'tcx>) -> Vec<FulfillmentError<'tcx>>;\n \n+    fn collect_remaining_errors(&mut self) -> Vec<FulfillmentError<'tcx>>;\n+\n     fn pending_obligations(&self) -> Vec<PredicateObligation<'tcx>>;\n }\n \n@@ -49,6 +49,8 @@ pub trait TraitEngineExt<'tcx> {\n         infcx: &InferCtxt<'tcx>,\n         obligations: impl IntoIterator<Item = PredicateObligation<'tcx>>,\n     );\n+\n+    fn select_all_or_error(&mut self, infcx: &InferCtxt<'tcx>) -> Vec<FulfillmentError<'tcx>>;\n }\n \n impl<'tcx, T: ?Sized + TraitEngine<'tcx>> TraitEngineExt<'tcx> for T {\n@@ -61,4 +63,13 @@ impl<'tcx, T: ?Sized + TraitEngine<'tcx>> TraitEngineExt<'tcx> for T {\n             self.register_predicate_obligation(infcx, obligation);\n         }\n     }\n+\n+    fn select_all_or_error(&mut self, infcx: &InferCtxt<'tcx>) -> Vec<FulfillmentError<'tcx>> {\n+        let errors = self.select_where_possible(infcx);\n+        if !errors.is_empty() {\n+            return errors;\n+        }\n+\n+        self.collect_remaining_errors()\n+    }\n }"}, {"sha": "45507ed4dcc9a141f9bc1e1a0956fe4ef9b85839", "filename": "compiler/rustc_trait_selection/src/solve/fulfill.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ffulfill.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -40,12 +40,7 @@ impl<'tcx> TraitEngine<'tcx> for FulfillmentCtxt<'tcx> {\n         self.obligations.push(obligation);\n     }\n \n-    fn select_all_or_error(&mut self, infcx: &InferCtxt<'tcx>) -> Vec<FulfillmentError<'tcx>> {\n-        let errors = self.select_where_possible(infcx);\n-        if !errors.is_empty() {\n-            return errors;\n-        }\n-\n+    fn collect_remaining_errors(&mut self) -> Vec<FulfillmentError<'tcx>> {\n         self.obligations\n             .drain(..)\n             .map(|obligation| FulfillmentError {"}, {"sha": "76e31845797aaee81c2d40f4a6d38ca5fa756acd", "filename": "compiler/rustc_trait_selection/src/traits/chalk_fulfill.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fchalk_fulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fchalk_fulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fchalk_fulfill.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -40,15 +40,7 @@ impl<'tcx> TraitEngine<'tcx> for FulfillmentContext<'tcx> {\n         self.obligations.insert(obligation);\n     }\n \n-    fn select_all_or_error(&mut self, infcx: &InferCtxt<'tcx>) -> Vec<FulfillmentError<'tcx>> {\n-        {\n-            let errors = self.select_where_possible(infcx);\n-\n-            if !errors.is_empty() {\n-                return errors;\n-            }\n-        }\n-\n+    fn collect_remaining_errors(&mut self) -> Vec<FulfillmentError<'tcx>> {\n         // any remaining obligations are errors\n         self.obligations\n             .iter()"}, {"sha": "111a2d034daa73a0e56774933808b76f9c912257", "filename": "compiler/rustc_trait_selection/src/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -132,14 +132,7 @@ impl<'tcx> TraitEngine<'tcx> for FulfillmentContext<'tcx> {\n             .register_obligation(PendingPredicateObligation { obligation, stalled_on: vec![] });\n     }\n \n-    fn select_all_or_error(&mut self, infcx: &InferCtxt<'tcx>) -> Vec<FulfillmentError<'tcx>> {\n-        {\n-            let errors = self.select_where_possible(infcx);\n-            if !errors.is_empty() {\n-                return errors;\n-            }\n-        }\n-\n+    fn collect_remaining_errors(&mut self) -> Vec<FulfillmentError<'tcx>> {\n         self.predicates.to_errors(CodeAmbiguity).into_iter().map(to_fulfillment_error).collect()\n     }\n "}, {"sha": "6f81d343e0fd85f54a66dc1921a2033116a94962", "filename": "compiler/rustc_traits/src/codegen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_traits%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb873b2d93aa5f9eedc389268a14cebc2cb1db5c/compiler%2Frustc_traits%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fcodegen.rs?ref=cb873b2d93aa5f9eedc389268a14cebc2cb1db5c", "patch": "@@ -4,7 +4,7 @@\n // general routines.\n \n use rustc_infer::infer::{DefiningAnchor, TyCtxtInferExt};\n-use rustc_infer::traits::FulfillmentErrorCode;\n+use rustc_infer::traits::{FulfillmentErrorCode, TraitEngineExt as _};\n use rustc_middle::traits::CodegenObligationError;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_trait_selection::traits::error_reporting::TypeErrCtxtExt;"}]}