{"sha": "d0df47fc58e305bd7817f81956e72bb27c060ced", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZGY0N2ZjNThlMzA1YmQ3ODE3ZjgxOTU2ZTcyYmIyN2MwNjBjZWQ=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-04-16T05:29:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-16T05:29:26Z"}, "message": "Merge pull request #3506 from rchaser53/issue-3505\n\nfix not to emit version", "tree": {"sha": "fa8ce8fefa75c31cb349f67338df8ec64846bfdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa8ce8fefa75c31cb349f67338df8ec64846bfdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0df47fc58e305bd7817f81956e72bb27c060ced", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJctWg2CRBK7hj4Ov3rIwAAdHIIAA66KWYK+3g02I//9sZRwuhm\n+EHdHHIrTG3Rn9EZJFCOZwSIysF/4I1eOOEzNdAA06UeIIPSjdNuQ3mGfXugXIgO\ngr5ZxuaMKBqcpVAxNSqwEwJaLbGtyKga8uJ6fWGb6mE33F3350niEEQRhAuiVDjE\nsPHqBBxlgmA3ZrJa/IEliPPuPCD7Fo8knZdKDXSVPioVWyMwJ4zQHZSZ1hSVFHPn\nuPZLMEfwNU3/0UoZv8w4YMBWJ2VS5t5XsDuQGavbUcUIx+d0+rSXiB8Ov0ZARd4t\n/nUM6W+AHdAgl5hGT3KffXr42UAjgnlFpfbxSQM3Id1mD4De5Ew49fJvslDz1g4=\n=s4by\n-----END PGP SIGNATURE-----\n", "payload": "tree fa8ce8fefa75c31cb349f67338df8ec64846bfdc\nparent 34bf13718a6af228260312139f646c7d79e6aa71\nparent 15ab3635084a4f6a7f56d20a2678e4c86019ac0e\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1555392566 +0200\ncommitter GitHub <noreply@github.com> 1555392566 +0200\n\nMerge pull request #3506 from rchaser53/issue-3505\n\nfix not to emit version"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0df47fc58e305bd7817f81956e72bb27c060ced", "html_url": "https://github.com/rust-lang/rust/commit/d0df47fc58e305bd7817f81956e72bb27c060ced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0df47fc58e305bd7817f81956e72bb27c060ced/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34bf13718a6af228260312139f646c7d79e6aa71", "url": "https://api.github.com/repos/rust-lang/rust/commits/34bf13718a6af228260312139f646c7d79e6aa71", "html_url": "https://github.com/rust-lang/rust/commit/34bf13718a6af228260312139f646c7d79e6aa71"}, {"sha": "15ab3635084a4f6a7f56d20a2678e4c86019ac0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ab3635084a4f6a7f56d20a2678e4c86019ac0e", "html_url": "https://github.com/rust-lang/rust/commit/15ab3635084a4f6a7f56d20a2678e4c86019ac0e"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "14d9c7f24237dc4d70d2f8ba54c1a49e95b1ade1", "filename": "src/cargo-fmt/main.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d0df47fc58e305bd7817f81956e72bb27c060ced/src%2Fcargo-fmt%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0df47fc58e305bd7817f81956e72bb27c060ced/src%2Fcargo-fmt%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo-fmt%2Fmain.rs?ref=d0df47fc58e305bd7817f81956e72bb27c060ced", "patch": "@@ -79,7 +79,7 @@ fn execute() -> i32 {\n     }\n \n     if matches.opt_present(\"version\") {\n-        return handle_command_status(get_version(verbosity), &opts);\n+        return handle_command_status(get_version(), &opts);\n     }\n \n     let strategy = CargoFmtStrategy::from_matches(&matches);\n@@ -122,8 +122,24 @@ fn handle_command_status(status: Result<i32, io::Error>, opts: &getopts::Options\n     }\n }\n \n-fn get_version(verbosity: Verbosity) -> Result<i32, io::Error> {\n-    run_rustfmt(&BTreeSet::new(), &[String::from(\"--version\")], verbosity)\n+fn get_version() -> Result<i32, io::Error> {\n+    let mut command = Command::new(\"rustfmt\")\n+        .stdout(std::process::Stdio::inherit())\n+        .args(&[String::from(\"--version\")])\n+        .spawn()\n+        .map_err(|e| match e.kind() {\n+            io::ErrorKind::NotFound => io::Error::new(\n+                io::ErrorKind::Other,\n+                \"Could not run rustfmt, please make sure it is in your PATH.\",\n+            ),\n+            _ => e,\n+        })?;\n+    let result = command.wait()?;\n+    if result.success() {\n+        Ok(SUCCESS)\n+    } else {\n+        Ok(result.code().unwrap_or(SUCCESS))\n+    }\n }\n \n fn format_crate(verbosity: Verbosity, strategy: &CargoFmtStrategy) -> Result<i32, io::Error> {"}]}