{"sha": "506e80c8998d299b61b7e75b8e6cb405bac71d9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNmU4MGM4OTk4ZDI5OWI2MWI3ZTc1YjhlNmNiNDA1YmFjNzFkOWU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-22T22:30:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-04T14:14:39Z"}, "message": "remove unused span from `eq_types` (and rustfmt slightly)", "tree": {"sha": "fb0ff70bfd5a2aab71f4209f23427185af951f29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb0ff70bfd5a2aab71f4209f23427185af951f29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/506e80c8998d299b61b7e75b8e6cb405bac71d9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/506e80c8998d299b61b7e75b8e6cb405bac71d9e", "html_url": "https://github.com/rust-lang/rust/commit/506e80c8998d299b61b7e75b8e6cb405bac71d9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/506e80c8998d299b61b7e75b8e6cb405bac71d9e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18cc0f9f374e4dcd6e933164037654b39e841148", "url": "https://api.github.com/repos/rust-lang/rust/commits/18cc0f9f374e4dcd6e933164037654b39e841148", "html_url": "https://github.com/rust-lang/rust/commit/18cc0f9f374e4dcd6e933164037654b39e841148"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "45594613fa43dbbdc69a59d1b38a95a08e45c4de", "filename": "src/librustc_mir/transform/type_check.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/506e80c8998d299b61b7e75b8e6cb405bac71d9e/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e80c8998d299b61b7e75b8e6cb405bac71d9e/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs?ref=506e80c8998d299b61b7e75b8e6cb405bac71d9e", "patch": "@@ -178,9 +178,7 @@ impl<'a, 'b, 'gcx, 'tcx> TypeVerifier<'a, 'b, 'gcx, 'tcx> {\n                 let sty = self.sanitize_type(place, sty);\n                 let ty = self.tcx().type_of(def_id);\n                 let ty = self.cx.normalize(&ty, location);\n-                if let Err(terr) = self.cx\n-                    .eq_types(self.last_span, ty, sty, location.at_self())\n-                {\n+                if let Err(terr) = self.cx.eq_types(ty, sty, location.at_self()) {\n                     span_mirbug!(\n                         self,\n                         place,\n@@ -230,7 +228,6 @@ impl<'a, 'b, 'gcx, 'tcx> TypeVerifier<'a, 'b, 'gcx, 'tcx> {\n         debug!(\"sanitize_projection: {:?} {:?} {:?}\", base, pi, place);\n         let tcx = self.tcx();\n         let base_ty = base.to_ty(tcx);\n-        let span = self.last_span;\n         match *pi {\n             ProjectionElem::Deref => {\n                 let deref_ty = base_ty.builtin_deref(true, ty::LvaluePreference::NoPreference);\n@@ -316,7 +313,7 @@ impl<'a, 'b, 'gcx, 'tcx> TypeVerifier<'a, 'b, 'gcx, 'tcx> {\n                 let fty = self.sanitize_type(place, fty);\n                 match self.field_ty(place, base, field, location) {\n                     Ok(ty) => {\n-                        if let Err(terr) = self.cx.eq_types(span, ty, fty, location.at_self()) {\n+                        if let Err(terr) = self.cx.eq_types(ty, fty, location.at_self()) {\n                             span_mirbug!(\n                                 self,\n                                 place,\n@@ -529,13 +526,7 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n         })\n     }\n \n-    fn eq_types(\n-        &mut self,\n-        _span: Span,\n-        a: Ty<'tcx>,\n-        b: Ty<'tcx>,\n-        locations: Locations,\n-    ) -> UnitResult<'tcx> {\n+    fn eq_types(&mut self, a: Ty<'tcx>, b: Ty<'tcx>, locations: Locations) -> UnitResult<'tcx> {\n         self.fully_perform_op(locations, |this| {\n             this.infcx\n                 .at(&this.misc(this.last_span), this.param_env)"}]}