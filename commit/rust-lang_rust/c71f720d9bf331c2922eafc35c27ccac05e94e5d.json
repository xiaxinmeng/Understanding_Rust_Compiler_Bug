{"sha": "c71f720d9bf331c2922eafc35c27ccac05e94e5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MWY3MjBkOWJmMzMxYzI5MjJlYWZjMzVjMjdjY2FjMDVlOTRlNWQ=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-01-22T13:34:10Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-03-05T12:08:47Z"}, "message": "Rename 'distance' -> 'displacement'", "tree": {"sha": "8071ba8c97ef139e28bf2116eee83d45397f21f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8071ba8c97ef139e28bf2116eee83d45397f21f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c71f720d9bf331c2922eafc35c27ccac05e94e5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c71f720d9bf331c2922eafc35c27ccac05e94e5d", "html_url": "https://github.com/rust-lang/rust/commit/c71f720d9bf331c2922eafc35c27ccac05e94e5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c71f720d9bf331c2922eafc35c27ccac05e94e5d/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d31d8a9a919b705fb8d22ba99a693d9f96b8bdd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d31d8a9a919b705fb8d22ba99a693d9f96b8bdd5", "html_url": "https://github.com/rust-lang/rust/commit/d31d8a9a919b705fb8d22ba99a693d9f96b8bdd5"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "820b47af7154e52412e1acd93b32fe4e1e6fbc3f", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c71f720d9bf331c2922eafc35c27ccac05e94e5d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c71f720d9bf331c2922eafc35c27ccac05e94e5d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=c71f720d9bf331c2922eafc35c27ccac05e94e5d", "patch": "@@ -393,7 +393,7 @@ fn pop_internal<K, V>(starting_bucket: FullBucketMut<K, V>) -> (K, V) {\n         None => return (retkey, retval)\n     };\n \n-    while gap.full().distance() != 0 {\n+    while gap.full().displacement() != 0 {\n         gap = match gap.shift() {\n             Some(b) => b,\n             None => break\n@@ -423,7 +423,7 @@ fn robin_hood<'a, K: 'a, V: 'a>(mut bucket: FullBucketMut<'a, K, V>,\n     // There can be at most `size - dib` buckets to displace, because\n     // in the worst case, there are `size` elements and we already are\n     // `distance` buckets away from the initial one.\n-    let idx_end = starting_index + size - bucket.distance();\n+    let idx_end = starting_index + size - bucket.displacement();\n \n     loop {\n         let (old_hash, old_key, old_val) = bucket.replace(hash, k, v);\n@@ -446,7 +446,7 @@ fn robin_hood<'a, K: 'a, V: 'a>(mut bucket: FullBucketMut<'a, K, V>,\n                 Full(bucket) => bucket\n             };\n \n-            let probe_ib = full_bucket.index() - full_bucket.distance();\n+            let probe_ib = full_bucket.index() - full_bucket.displacement();\n \n             bucket = full_bucket;\n \n@@ -731,7 +731,7 @@ impl<K, V, S> HashMap<K, V, S>\n         loop {\n             bucket = match bucket.peek() {\n                 Full(full) => {\n-                    if full.distance() == 0 {\n+                    if full.displacement() == 0 {\n                         // This bucket occupies its ideal spot.\n                         // It indicates the start of another \"cluster\".\n                         bucket = full.into_bucket();"}, {"sha": "3a7ff0c1e220106a2afe66aea7be9c3ad739d004", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c71f720d9bf331c2922eafc35c27ccac05e94e5d/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c71f720d9bf331c2922eafc35c27ccac05e94e5d/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=c71f720d9bf331c2922eafc35c27ccac05e94e5d", "patch": "@@ -370,7 +370,7 @@ impl<K, V, M: Deref<Target=RawTable<K, V>>> FullBucket<K, V, M> {\n     ///\n     /// In the cited blog posts above, this is called the \"distance to\n     /// initial bucket\", or DIB. Also known as \"probe count\".\n-    pub fn distance(&self) -> usize {\n+    pub fn displacement(&self) -> usize {\n         // Calculates the distance one has to travel when going from\n         // `hash mod capacity` onwards to `idx mod capacity`, wrapping around\n         // if the destination is not reached before the end of the table."}]}