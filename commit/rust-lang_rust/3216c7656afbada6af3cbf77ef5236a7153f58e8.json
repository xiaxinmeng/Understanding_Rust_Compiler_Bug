{"sha": "3216c7656afbada6af3cbf77ef5236a7153f58e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMTZjNzY1NmFmYmFkYTZhZjNjYmY3N2VmNTIzNmE3MTUzZjU4ZTg=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-07T15:56:05Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-12T15:28:52Z"}, "message": "Rename rustc_errors dependency in rust 2018 crates", "tree": {"sha": "e8050b4e56556ec8eb91357faa11bfbe07888828", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8050b4e56556ec8eb91357faa11bfbe07888828"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3216c7656afbada6af3cbf77ef5236a7153f58e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3216c7656afbada6af3cbf77ef5236a7153f58e8", "html_url": "https://github.com/rust-lang/rust/commit/3216c7656afbada6af3cbf77ef5236a7153f58e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3216c7656afbada6af3cbf77ef5236a7153f58e8/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c84e7976423bb910bb5eb5eecffc7e33a897a97f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c84e7976423bb910bb5eb5eecffc7e33a897a97f", "html_url": "https://github.com/rust-lang/rust/commit/c84e7976423bb910bb5eb5eecffc7e33a897a97f"}], "stats": {"total": 154, "additions": 72, "deletions": 82}, "files": [{"sha": "cb9eb32f8d21fda94fcc3e4d0d2ceb807e7f67e4", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -25,7 +25,7 @@ rustc-rayon-core = \"0.1.1\"\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "feaff39719b09a3e4fab05612364016abcc7d6eb", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::{Diagnostic, DiagnosticBuilder};\n+use errors::{Diagnostic, DiagnosticBuilder};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};"}, {"sha": "1a825c44add1efb78c216f0e6ba369697e559338", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -31,7 +31,7 @@\n //! in the HIR, especially for multiple identifiers.\n \n use crate::dep_graph::DepGraph;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n use crate::hir::{self, ParamName};\n use crate::hir::HirVec;\n use crate::hir::map::{DefKey, DefPathData, Definitions};"}, {"sha": "e454a4502d484035880509c1329cc8a1b3452638", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -10,7 +10,7 @@ pub use self::PrimTy::*;\n pub use self::UnOp::*;\n pub use self::UnsafeSource::*;\n \n-use crate::errors::FatalError;\n+use errors::FatalError;\n use crate::hir::def::Def;\n use crate::hir::def_id::{DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX};\n use crate::util::nodemap::{NodeMap, FxHashSet};"}, {"sha": "f408cc9e3e417265a56b886493ca368edeac4cd7", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -50,7 +50,7 @@ use super::region_constraints::GenericKind;\n use super::{InferCtxt, RegionVariableOrigin, SubregionOrigin, TypeTrace, ValuePairs};\n use crate::infer::{self, SuppressRegionErrors};\n \n-use crate::errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n+use errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n use crate::hir;\n use crate::hir::def_id::DefId;\n use crate::hir::Node;"}, {"sha": "7c8146a1a59432f3a3cdca810df1aa535ba93111", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -5,7 +5,7 @@ use crate::infer::type_variable::TypeVariableOrigin;\n use crate::ty::{self, Ty, Infer, TyVar};\n use syntax::source_map::CompilerDesugaringKind;\n use syntax_pos::Span;\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n struct FindLocalByTypeVisitor<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n     infcx: &'a InferCtxt<'a, 'gcx, 'tcx>,"}, {"sha": "b10af400f2b6c3301c6a15025e7a308626213ee5", "filename": "src/librustc/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -3,7 +3,7 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::ty;\n use crate::util::common::ErrorReported;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n     /// When given a `ConcreteFailure` for a function with arguments containing a named region and"}, {"sha": "843fa8b0182e25a09e5d5f62961b902f79e29322", "filename": "src/librustc/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n use crate::hir::def_id::DefId;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;"}, {"sha": "23acaeb31f8d4312cb04a66faf2c262611b37afb", "filename": "src/librustc/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -4,7 +4,7 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::ty::{BoundRegion, FreeRegion, RegionKind};\n use crate::util::common::ErrorReported;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n     /// Print the error message for lifetime errors when the return type is a static impl Trait."}, {"sha": "c05c6567bbefab50d49aa4a7a2dc827fb4753ba2", "filename": "src/librustc/infer/error_reporting/note.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -2,7 +2,7 @@ use crate::infer::{self, InferCtxt, SubregionOrigin};\n use crate::middle::region;\n use crate::ty::{self, Region};\n use crate::ty::error::TypeError;\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     pub(super) fn note_region_origin(&self,"}, {"sha": "706aae88d15ca48df4853fffb6b8b2b4a7590ce7", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -8,7 +8,7 @@ pub use self::ValuePairs::*;\n pub use crate::ty::IntVarValue;\n \n use arena::SyncDroplessArena;\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n use crate::hir::def_id::DefId;\n use crate::infer::canonical::{Canonical, CanonicalVarValues};\n use crate::middle::free_region::RegionRelations;"}, {"sha": "bfe59eda06e6fc44a3d519fc8da4ecd88dfede4c", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -153,8 +153,6 @@ mod rustc {\n     pub use crate::lint;\n }\n \n-use rustc_errors as errors;\n-\n // FIXME(#27438): right now the unit tests of librustc don't refer to any actual\n //                functions generated in librustc_data_structures (all\n //                references are through generic functions), but statics are"}, {"sha": "e6546617e2d984f1a1f119d64a115e6784da9328", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -4,7 +4,7 @@\n //! compiler code, rather than using their own custom pass. Those\n //! lints are all available in `rustc_lint::builtin`.\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use crate::lint::{LintPass, LateLintPass, LintArray};\n use crate::session::Session;\n use syntax::ast;"}, {"sha": "a2b34a705f78031bac073157e10483b8a0e2d35f", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -34,7 +34,7 @@ use std::default::Default as StdDefault;\n use syntax::ast;\n use syntax::edition;\n use syntax_pos::{MultiSpan, Span, symbol::{LocalInternedString, Symbol}};\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n use crate::hir;\n use crate::hir::def_id::LOCAL_CRATE;\n use crate::hir::intravisit as hir_visit;"}, {"sha": "5d2da6498684378d428dfe12192fc95744415152", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,6 +1,6 @@\n use std::cmp;\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use crate::hir::HirId;\n use crate::ich::StableHashingContext;\n use crate::lint::builtin;"}, {"sha": "7913afe1a4b12534bfc2d20d79a43c208ec84a0e", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -23,7 +23,7 @@ pub use self::LintSource::*;\n \n use rustc_data_structures::sync::{self, Lrc};\n \n-use crate::errors::{DiagnosticBuilder, DiagnosticId};\n+use errors::{DiagnosticBuilder, DiagnosticId};\n use crate::hir::def_id::{CrateNum, LOCAL_CRATE};\n use crate::hir::intravisit;\n use crate::hir;"}, {"sha": "c56c98ac00872c8a76ee552187ebb9e09ad36807", "filename": "src/librustc/middle/lib_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flib_features.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -10,7 +10,7 @@ use syntax::ast::{Attribute, MetaItem, MetaItemKind};\n use syntax_pos::Span;\n use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n-use crate::errors::DiagnosticId;\n+use errors::DiagnosticId;\n \n pub struct LibFeatures {\n     // A map from feature to stabilisation version."}, {"sha": "68f62bd96c23bd379977b06d54040ed03146b8ac", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -102,7 +102,7 @@ use crate::hir::Node;\n use crate::ty::{self, TyCtxt};\n use crate::ty::query::Providers;\n use crate::lint;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n use crate::util::nodemap::{NodeMap, HirIdMap, HirIdSet};\n \n use std::collections::{BTreeMap, VecDeque};"}, {"sha": "0e56c1664adf1ccde1a5db72639d6fc2a437038b", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -11,7 +11,7 @@ use crate::hir::map::Map;\n use crate::hir::{GenericArg, GenericParam, ItemLocalId, LifetimeName, Node, ParamName};\n use crate::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use crate::rustc::lint;\n use rustc_data_structures::sync::Lrc;\n use crate::session::Session;"}, {"sha": "b0bee80e40b54306fea300b92e3c9ccc45650764", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -11,7 +11,7 @@ use super::{RawConst, Pointer, InboundsCheck, ScalarMaybeUndef};\n use backtrace::Backtrace;\n \n use crate::ty::query::TyCtxtAt;\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax_pos::{Pos, Span};\n use syntax::ast;"}, {"sha": "aa5bc6e48a8ea154213021238b6ade0020ad555b", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -19,7 +19,7 @@ use syntax::parse;\n use syntax::symbol::Symbol;\n use syntax::feature_gate::UnstableFeatures;\n \n-use crate::errors::{ColorConfig, FatalError, Handler};\n+use errors::{ColorConfig, FatalError, Handler};\n \n use getopts;\n use std::collections::{BTreeMap, BTreeSet};\n@@ -2567,7 +2567,6 @@ mod dep_tracking {\n \n #[cfg(test)]\n mod tests {\n-    use crate::errors;\n     use getopts;\n     use crate::lint;\n     use crate::middle::cstore;"}, {"sha": "3df76bdfa60ca0df25a9d5175d2116dc76105358", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -21,8 +21,8 @@ use rustc_data_structures::sync::{\n     Ordering::SeqCst,\n };\n \n-use crate::errors::{self, DiagnosticBuilder, DiagnosticId, Applicability};\n-use crate::errors::emitter::{Emitter, EmitterWriter};\n+use errors::{DiagnosticBuilder, DiagnosticId, Applicability};\n+use errors::emitter::{Emitter, EmitterWriter};\n use syntax::ast::{self, NodeId};\n use syntax::edition::Edition;\n use syntax::feature_gate::{self, AttributeType};"}, {"sha": "a1ada9fe17f215c0f350bf589336f2e861d71290", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -39,7 +39,7 @@ pub struct OverlapResult<'tcx> {\n     pub involves_placeholder: bool,\n }\n \n-pub fn add_placeholder_note(err: &mut crate::errors::DiagnosticBuilder<'_>) {\n+pub fn add_placeholder_note(err: &mut errors::DiagnosticBuilder<'_>) {\n     err.note(&format!(\n         \"this behavior recently changed as a result of a bug fix; \\\n          see rust-lang/rust#56105 for details\""}, {"sha": "600311e6c34b840156d0df7071e4b1d4395ebf89", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -17,7 +17,7 @@ use super::{\n     Overflow,\n };\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use crate::hir;\n use crate::hir::Node;\n use crate::hir::def_id::DefId;"}, {"sha": "d4b656f2322a6f78e2ee6d25c3d6df355fb7d74f", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -103,7 +103,7 @@ impl IntercrateAmbiguityCause {\n     /// See #23980 for details.\n     pub fn add_intercrate_ambiguity_hint<'a, 'tcx>(\n         &self,\n-        err: &mut crate::errors::DiagnosticBuilder<'_>,\n+        err: &mut errors::DiagnosticBuilder<'_>,\n     ) {\n         err.note(&self.intercrate_ambiguity_hint());\n     }"}, {"sha": "0010eb98c6b35c16307ce12471d6fec26dddb2f9", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -2,7 +2,7 @@\n \n use crate::dep_graph::DepGraph;\n use crate::dep_graph::{self, DepNode, DepConstructor};\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n use crate::session::Session;\n use crate::session::config::{BorrowckMode, OutputFilenames};\n use crate::session::config::CrateType;\n@@ -1819,7 +1819,7 @@ pub mod tls {\n     use std::ptr;\n     use syntax_pos;\n     use crate::ty::query;\n-    use crate::errors::{Diagnostic, TRACK_DIAGNOSTICS};\n+    use errors::{Diagnostic, TRACK_DIAGNOSTICS};\n     use rustc_data_structures::OnDrop;\n     use rustc_data_structures::sync::{self, Lrc, Lock};\n     use rustc_data_structures::thin_vec::ThinVec;"}, {"sha": "e3e0ce147741fbb747bedee214febc0b58143202", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -4,7 +4,7 @@ use std::borrow::Cow;\n use std::fmt;\n use rustc_target::spec::abi;\n use syntax::ast;\n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::Span;\n \n use crate::hir;"}, {"sha": "cc43dbd779efca6a51bcd2df14bab288fc220817", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,5 +1,5 @@\n use crate::dep_graph::{self, DepConstructor, DepNode};\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n use crate::hir::def_id::{CrateNum, DefId, DefIndex};\n use crate::hir::def::{Def, Export};\n use crate::hir::{self, TraitCandidate, ItemLocalId, CodegenFnAttrs};"}, {"sha": "8b6e1aae74f9a6d3299ea1e0975d8f50c3f71d07", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,5 +1,5 @@\n use crate::dep_graph::{DepNodeIndex, SerializedDepNodeIndex};\n-use crate::errors::Diagnostic;\n+use errors::Diagnostic;\n use crate::hir;\n use crate::hir::def_id::{CrateNum, DefIndex, DefId, LocalDefId, LOCAL_CRATE};\n use crate::hir::map::definitions::DefPathHash;"}, {"sha": "6b1fa359037fbcbcacf47c839002b30906b9976a", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -3,10 +3,10 @@\n //! provider, manage the caches, and so forth.\n \n use crate::dep_graph::{DepNodeIndex, DepNode, DepKind, SerializedDepNodeIndex};\n-use crate::errors::DiagnosticBuilder;\n-use crate::errors::Level;\n-use crate::errors::Diagnostic;\n-use crate::errors::FatalError;\n+use errors::DiagnosticBuilder;\n+use errors::Level;\n+use errors::Diagnostic;\n+use errors::FatalError;\n use crate::ty::tls;\n use crate::ty::{TyCtxt};\n use crate::ty::query::Query;"}, {"sha": "836b4ad38ca8805f01521fc865fe83601cd62348", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -16,7 +16,7 @@ log = \"0.4\"\n syntax = { path = \"../libsyntax\" }\n rustc = { path = \"../librustc\" }\n arena = { path = \"../libarena\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_metadata = { path = \"../librustc_metadata\" }"}, {"sha": "c1942c47dbbe97ec4f83a40a7928ea874776a45e", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -22,7 +22,7 @@ use std::cell::Cell;\n use std::ptr;\n use rustc_data_structures::sync::Lrc;\n \n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n use syntax::ast::{Name, Ident};\n use syntax::attr;"}, {"sha": "1a3eb82a48efa7d924fa3a9d6840899659935c3b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -10,8 +10,6 @@\n \n #![deny(rust_2018_idioms)]\n \n-use rustc_errors as errors;\n-\n pub use rustc::hir::def::{Namespace, PerNS};\n \n use GenericParameters::*;"}, {"sha": "74ee45abdb8900cc5438a673ab3c9e5184a931e8", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -27,7 +27,7 @@ use syntax::symbol::{Symbol, keywords};\n use syntax::visit::Visitor;\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax_pos::{Span, DUMMY_SP};\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n use std::cell::Cell;\n use std::{mem, ptr};"}, {"sha": "4a0bb0302ffbc250907e3075641fa5d9beae5af6", "filename": "src/libsyntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2FCargo.toml?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -15,7 +15,7 @@ serialize = { path = \"../libserialize\" }\n log = \"0.4\"\n scoped-tls = \"0.1\"\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "bb44706c1e37860222cf58f759c794c0ede30279", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,7 +1,7 @@\n //! Parsing and validation of builtin attributes\n \n use crate::ast::{self, Attribute, MetaItem, Name, NestedMetaItemKind};\n-use crate::errors::{Applicability, Handler};\n+use errors::{Applicability, Handler};\n use crate::feature_gate::{Features, GatedCfg};\n use crate::parse::ParseSess;\n "}, {"sha": "9565d02a9c2c277fb3332f884ffc03f02ac129f8", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -9,7 +9,7 @@ use crate::feature_gate::{\n use crate::attr;\n use crate::ast;\n use crate::edition::Edition;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n use crate::mut_visit::*;\n use crate::parse::{token, ParseSess};\n use crate::ptr::P;"}, {"sha": "21024eb41ef50bca6cff6a3cad733bd6d293e666", "filename": "src/libsyntax/diagnostics/plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -15,7 +15,7 @@ use syntax_pos::Span;\n \n use crate::diagnostics::metadata::output_metadata;\n \n-pub use crate::errors::*;\n+pub use errors::*;\n \n // Maximum width of any line in an extended error description (inclusive).\n const MAX_DESCRIPTION_WIDTH: usize = 80;"}, {"sha": "5c0f391d271b0384359cd9288211e346329d614a", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -4,7 +4,7 @@ use crate::ast::{self, Attribute, Name, PatKind, MetaItem};\n use crate::attr::HasAttrs;\n use crate::source_map::{SourceMap, Spanned, respan};\n use crate::edition::Edition;\n-use crate::errors::{DiagnosticBuilder, DiagnosticId};\n+use errors::{DiagnosticBuilder, DiagnosticId};\n use crate::ext::expand::{self, AstFragment, Invocation};\n use crate::ext::hygiene::{self, Mark, SyntaxContext, Transparency};\n use crate::mut_visit::{self, MutVisitor};"}, {"sha": "c007377add0b3a8c093ec834eb4c200e3bdb52ca", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -3,7 +3,7 @@ use crate::ast::{MacStmtStyle, StmtKind, ItemKind};\n use crate::attr::{self, HasAttrs};\n use crate::source_map::{ExpnInfo, MacroBang, MacroAttribute, dummy_spanned, respan};\n use crate::config::StripUnconfigured;\n-use crate::errors::{Applicability, FatalError};\n+use errors::{Applicability, FatalError};\n use crate::ext::base::*;\n use crate::ext::derive::{add_derived_markers, collect_derives};\n use crate::ext::hygiene::{self, Mark, SyntaxContext};"}, {"sha": "b69a3b428bbe16c38fa15c92e2816a7d1620f89f", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -75,7 +75,7 @@ pub use ParseResult::*;\n use TokenTreeOrTokenTreeSlice::*;\n \n use crate::ast::Ident;\n-use crate::errors::FatalError;\n+use errors::FatalError;\n use crate::ext::tt::quoted::{self, TokenTree};\n use crate::parse::{Directory, ParseSess};\n use crate::parse::parser::{Parser, PathStyle};"}, {"sha": "a3bdb3ba2286ab44d02dc06dfbb170b045267877", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,6 +1,6 @@\n use crate::{ast, attr};\n use crate::edition::Edition;\n-use crate::errors::FatalError;\n+use errors::FatalError;\n use crate::ext::base::{DummyResult, ExtCtxt, MacResult, SyntaxExtension};\n use crate::ext::base::{NormalTT, TTMacroExpander};\n use crate::ext::expand::{AstFragment, AstFragmentKind};\n@@ -25,7 +25,7 @@ use std::borrow::Cow;\n use std::collections::hash_map::Entry;\n \n use rustc_data_structures::sync::Lrc;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n const VALID_FRAGMENT_NAMES_MSG: &str = \"valid fragment specifiers are \\\n     `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `lifetime`, `literal`, \\"}, {"sha": "8f1188d2aaa68436252639c2e16d90563f6e45f8", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -20,7 +20,7 @@ use crate::attr;\n use crate::early_buffered_lints::BufferedEarlyLintId;\n use crate::source_map::Spanned;\n use crate::edition::{ALL_EDITIONS, Edition};\n-use crate::errors::{DiagnosticBuilder, Handler};\n+use errors::{DiagnosticBuilder, Handler};\n use crate::visit::{self, FnKind, Visitor};\n use crate::parse::ParseSess;\n use crate::symbol::Symbol;"}, {"sha": "94b25111d9d186f5b25579d1217e8ee2704035d7", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -10,10 +10,10 @@\n // FIXME: spec the JSON output properly.\n \n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::registry::Registry;\n-use crate::errors::{DiagnosticBuilder, SubDiagnostic, CodeSuggestion, SourceMapper};\n-use crate::errors::{DiagnosticId, Applicability};\n-use crate::errors::emitter::{Emitter, EmitterWriter};\n+use errors::registry::Registry;\n+use errors::{DiagnosticBuilder, SubDiagnostic, CodeSuggestion, SourceMapper};\n+use errors::{DiagnosticId, Applicability};\n+use errors::emitter::{Emitter, EmitterWriter};\n \n use syntax_pos::{self, MacroBacktrace, Span, SpanLabel, MultiSpan};\n use rustc_data_structures::sync::{self, Lrc};"}, {"sha": "e0557147f9a0154d7833b78e8ba386da50900f6c", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -25,7 +25,7 @@\n #[allow(unused_extern_crates)]\n extern crate serialize as rustc_serialize; // used by deriving\n \n-pub use rustc_errors as errors;\n+pub use errors;\n use rustc_data_structures::sync::Lock;\n use rustc_data_structures::bit_set::GrowableBitSet;\n pub use rustc_data_structures::thin_vec::ThinVec;\n@@ -38,7 +38,7 @@ use ast::AttrId;\n macro_rules! panictry {\n     ($e:expr) => ({\n         use std::result::Result::{Ok, Err};\n-        use crate::errors::FatalError;\n+        use errors::FatalError;\n         match $e {\n             Ok(e) => e,\n             Err(mut e) => {\n@@ -53,7 +53,7 @@ macro_rules! panictry {\n macro_rules! panictry_buffer {\n     ($handler:expr, $e:expr) => ({\n         use std::result::Result::{Ok, Err};\n-        use crate::errors::{FatalError, DiagnosticBuilder};\n+        use errors::{FatalError, DiagnosticBuilder};\n         match $e {\n             Ok(e) => e,\n             Err(errs) => {"}, {"sha": "1634cbfc156293dd165ba997992dfc6ffb820a43", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,6 +1,6 @@\n use crate::ast::{self, Ident};\n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n+use errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n use crate::parse::{token, ParseSess};\n use crate::symbol::{Symbol, keywords};\n \n@@ -1882,7 +1882,6 @@ mod tests {\n     use crate::ast::{Ident, CrateConfig};\n     use crate::symbol::Symbol;\n     use crate::source_map::SourceMap;\n-    use crate::errors;\n     use crate::feature_gate::UnstableFeatures;\n     use crate::parse::token;\n     use crate::diagnostics::plugin::ErrorMap;"}, {"sha": "7da4284c0e4aac4c33ad8bedbcd4a809d0db14b9", "filename": "src/libsyntax/parse/lexer/unicode_chars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -2,7 +2,7 @@\n // http://www.unicode.org/Public/security/10.0.0/confusables.txt\n \n use syntax_pos::{Span, NO_EXPANSION};\n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use super::StringReader;\n \n const UNICODE_ARRAY: &[(char, &str, char)] = &["}, {"sha": "1ac3d8ec781660b3aede850906db5962dcded0ad", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -3,7 +3,7 @@\n use crate::ast::{self, CrateConfig, NodeId};\n use crate::early_buffered_lints::{BufferedEarlyLint, BufferedEarlyLintId};\n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::{FatalError, Level, Handler, ColorConfig, Diagnostic, DiagnosticBuilder};\n+use errors::{FatalError, Level, Handler, ColorConfig, Diagnostic, DiagnosticBuilder};\n use crate::feature_gate::UnstableFeatures;\n use crate::parse::parser::Parser;\n use crate::symbol::Symbol;"}, {"sha": "8db8c253bad454f3bb8e198460cbd69a11ed28cc", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -33,7 +33,7 @@ use crate::ast::{RangeEnd, RangeSyntax};\n use crate::{ast, attr};\n use crate::ext::base::DummyResult;\n use crate::source_map::{self, SourceMap, Spanned, respan};\n-use crate::errors::{self, Applicability, DiagnosticBuilder, DiagnosticId};\n+use errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use crate::parse::{self, SeqSep, classify, token};\n use crate::parse::lexer::{TokenAndSpan, UnmatchedBrace};\n use crate::parse::lexer::comments::{doc_comment_style, strip_doc_comment_decoration};"}, {"sha": "5e0cf9eea78b85a6f330e7edd5d27c84d7af1f26", "filename": "src/libsyntax/show_span.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fshow_span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fshow_span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fshow_span.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -6,7 +6,6 @@\n use std::str::FromStr;\n \n use crate::ast;\n-use crate::errors;\n use crate::visit;\n use crate::visit::Visitor;\n "}, {"sha": "d33415eb68a13aa37a8851933b7c152745a85c2c", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -24,7 +24,7 @@ use std::fs;\n use std::io;\n use log::debug;\n \n-use crate::errors::SourceMapper;\n+use errors::SourceMapper;\n \n /// Return the span itself if it doesn't come from a macro expansion,\n /// otherwise return the call site span up to the `enclosing_sp` by"}, {"sha": "6506546b3b2ef4dd21af40021cd8aff119429bac", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -16,7 +16,7 @@ use syntax_pos::{self, DUMMY_SP, NO_EXPANSION, Span, SourceFile, BytePos};\n \n use crate::attr::{self, HasAttrs};\n use crate::source_map::{self, SourceMap, ExpnInfo, MacroAttribute, dummy_spanned, respan};\n-use crate::errors;\n+use errors;\n use crate::config;\n use crate::entry::{self, EntryPointType};\n use crate::ext::base::{ExtCtxt, Resolver};"}, {"sha": "e9ea39b83d4cb5e3f05f26174cf215a74b21b1e6", "filename": "src/libsyntax/test_snippet.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Ftest_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax%2Ftest_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest_snippet.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,6 +1,6 @@\n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::Handler;\n-use crate::errors::emitter::EmitterWriter;\n+use errors::Handler;\n+use errors::emitter::EmitterWriter;\n use crate::with_globals;\n \n use std::io;"}, {"sha": "773f0948a8a108b7c5221c30dae69b03aad0c6c4", "filename": "src/libsyntax_ext/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2FCargo.toml?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -11,7 +11,7 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n fmt_macros = { path = \"../libfmt_macros\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "8edd0e1ae3884239b21a1b437cd0e1323108d22f", "filename": "src/libsyntax_ext/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fasm.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -4,7 +4,7 @@ use State::*;\n \n use rustc_data_structures::thin_vec::ThinVec;\n \n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast;\n use syntax::ext::base::{self, *};"}, {"sha": "d2c397e0eccb5259770c8fd21dd8354a5a2c5028", "filename": "src/libsyntax_ext/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fassert.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast::{self, *};\n use syntax::source_map::Spanned;"}, {"sha": "090d730289d26b1655eabeaeba5ca76156fa15fd", "filename": "src/libsyntax_ext/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fcfg.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -2,7 +2,7 @@\n /// a literal `true` or `false` based on whether the given cfg matches the\n /// current compilation environment.\n \n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast;\n use syntax::ext::base::{self, *};"}, {"sha": "81fcdc4be2b3db515bcd09889174132ca5c1b8a0", "filename": "src/libsyntax_ext/deriving/custom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::FatalError;\n+use errors::FatalError;\n use crate::proc_macro_impl::EXEC_STRATEGY;\n use crate::proc_macro_server;\n "}, {"sha": "a27630a714c288b10bfe82505fe0adeef350260c", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -3,8 +3,8 @@ use Position::*;\n \n use fmt_macros as parse;\n \n-use crate::errors::DiagnosticBuilder;\n-use crate::errors::Applicability;\n+use errors::DiagnosticBuilder;\n+use errors::Applicability;\n \n use syntax::ast;\n use syntax::ext::base::{self, *};"}, {"sha": "2baf530aedae7e37386ae7ae68104e64c8dfcf20", "filename": "src/libsyntax_ext/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fglobal_asm.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -8,7 +8,7 @@\n /// LLVM's `module asm \"some assembly here\"`. All of LLVM's caveats\n /// therefore apply.\n \n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast;\n use syntax::source_map::respan;"}, {"sha": "69f9e2c5eb0ecbc4df85f4417e67d8c419fb91d2", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -17,8 +17,6 @@\n \n extern crate proc_macro;\n \n-use rustc_errors as errors;\n-\n mod diagnostics;\n \n mod asm;"}, {"sha": "d8f8decef39b18418ea130f5b3d6bced2f5b03e7", "filename": "src/libsyntax_ext/proc_macro_decls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_decls.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,7 +1,6 @@\n use std::mem;\n \n use crate::deriving;\n-use crate::errors;\n \n use syntax::ast::{self, Ident};\n use syntax::attr;"}, {"sha": "03290df0c72ae5a5ae7d8b72b154806e347f887a", "filename": "src/libsyntax_ext/proc_macro_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fproc_macro_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fproc_macro_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_impl.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::FatalError;\n+use errors::FatalError;\n use crate::proc_macro_server;\n \n use syntax::source_map::Span;"}, {"sha": "fd82dac5ab6d8a0ee45ad360dc7c1a5728400942", "filename": "src/libsyntax_ext/proc_macro_server.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3216c7656afbada6af3cbf77ef5236a7153f58e8/src%2Flibsyntax_ext%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_server.rs?ref=3216c7656afbada6af3cbf77ef5236a7153f58e8", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::{self, Diagnostic, DiagnosticBuilder};\n+use errors::{Diagnostic, DiagnosticBuilder};\n \n use std::panic;\n "}]}