{"sha": "d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YjlkOWExZDZhNzNjZDk5YjBhMWY5NTlkM2FmYTc3YTQ0YmI4YmQ=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-02-17T19:51:27Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-02-17T20:36:59Z"}, "message": "std::src::os::raw: Refactor, introducing macro type_alias!\n\nThis file contained a lot of repetitive code.  This was about to get\nconsiderably worse, with introduction of a slew of new aliases.\n\nNo functional change.  I've eyeballed the docs and they don't seem to\nhave changed either.\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "f85cfd8f55631f5b4b5ae32f2b028f900bd2750e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f85cfd8f55631f5b4b5ae32f2b028f900bd2750e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd", "html_url": "https://github.com/rust-lang/rust/commit/d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1", "html_url": "https://github.com/rust-lang/rust/commit/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1"}], "stats": {"total": 81, "additions": 27, "deletions": 54}, "files": [{"sha": "1a2158555e6a91a0b69dcd6c814f33a72cd955ad", "filename": "library/std/src/os/raw/mod.rs", "status": "modified", "additions": 27, "deletions": 54, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs?ref=d6b9d9a1d6a73cd99b0a1f959d3afa77a44bb8bd", "patch": "@@ -11,7 +11,16 @@\n #[cfg(test)]\n mod tests;\n \n-#[doc(include = \"char.md\")]\n+macro_rules! type_alias {\n+    { $Docfile:tt, $Alias:ident = $Real:ty; $( $Cfg:tt )* } => {\n+        #[doc(include = $Docfile)]\n+        $( $Cfg )*\n+        #[stable(feature = \"raw_os\", since = \"1.1.0\")]\n+        pub type $Alias = $Real;\n+    }\n+}\n+\n+type_alias! { \"char.md\", c_char = u8;\n #[cfg(any(\n     all(\n         target_os = \"linux\",\n@@ -52,10 +61,8 @@ mod tests;\n         )\n     ),\n     all(target_os = \"fuchsia\", target_arch = \"aarch64\")\n-))]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_char = u8;\n-#[doc(include = \"char.md\")]\n+))]}\n+type_alias! { \"char.md\", c_char = i8;\n #[cfg(not(any(\n     all(\n         target_os = \"linux\",\n@@ -96,55 +103,21 @@ pub type c_char = u8;\n         )\n     ),\n     all(target_os = \"fuchsia\", target_arch = \"aarch64\")\n-)))]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_char = i8;\n-#[doc(include = \"schar.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_schar = i8;\n-#[doc(include = \"uchar.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_uchar = u8;\n-#[doc(include = \"short.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_short = i16;\n-#[doc(include = \"ushort.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_ushort = u16;\n-#[doc(include = \"int.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_int = i32;\n-#[doc(include = \"uint.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_uint = u32;\n-#[doc(include = \"long.md\")]\n-#[cfg(any(target_pointer_width = \"32\", windows))]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_long = i32;\n-#[doc(include = \"ulong.md\")]\n-#[cfg(any(target_pointer_width = \"32\", windows))]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_ulong = u32;\n-#[doc(include = \"long.md\")]\n-#[cfg(all(target_pointer_width = \"64\", not(windows)))]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_long = i64;\n-#[doc(include = \"ulong.md\")]\n-#[cfg(all(target_pointer_width = \"64\", not(windows)))]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_ulong = u64;\n-#[doc(include = \"longlong.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_longlong = i64;\n-#[doc(include = \"ulonglong.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_ulonglong = u64;\n-#[doc(include = \"float.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_float = f32;\n-#[doc(include = \"double.md\")]\n-#[stable(feature = \"raw_os\", since = \"1.1.0\")]\n-pub type c_double = f64;\n+)))]}\n+type_alias! { \"schar.md\", c_schar = i8; }\n+type_alias! { \"uchar.md\", c_uchar = u8; }\n+type_alias! { \"short.md\", c_short = i16; }\n+type_alias! { \"ushort.md\", c_ushort = u16; }\n+type_alias! { \"int.md\", c_int = i32; }\n+type_alias! { \"uint.md\", c_uint = u32; }\n+type_alias! { \"long.md\", c_long = i32; #[cfg(any(target_pointer_width = \"32\", windows))] }\n+type_alias! { \"ulong.md\", c_ulong = u32; #[cfg(any(target_pointer_width = \"32\", windows))] }\n+type_alias! { \"long.md\", c_long = i64; #[cfg(all(target_pointer_width = \"64\", not(windows)))] }\n+type_alias! { \"ulong.md\", c_ulong = u64; #[cfg(all(target_pointer_width = \"64\", not(windows)))] }\n+type_alias! { \"longlong.md\", c_longlong = i64; }\n+type_alias! { \"ulonglong.md\", c_ulonglong = u64; }\n+type_alias! { \"float.md\", c_float = f32; }\n+type_alias! { \"double.md\", c_double = f64; }\n \n #[stable(feature = \"raw_os\", since = \"1.1.0\")]\n #[doc(no_inline)]"}]}