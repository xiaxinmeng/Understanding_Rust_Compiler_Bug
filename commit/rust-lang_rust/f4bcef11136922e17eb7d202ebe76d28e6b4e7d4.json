{"sha": "f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YmNlZjExMTM2OTIyZTE3ZWI3ZDIwMmViZTc2ZDI4ZTZiNGU3ZDQ=", "commit": {"author": {"name": "JCTyBlaidd", "email": "JCTyblaidd@users.noreply.github.com", "date": "2020-12-07T18:58:31Z"}, "committer": {"name": "JCTyblaidd", "email": "JCTyblaidd@users.noreply.github.com", "date": "2020-12-13T11:04:58Z"}, "message": "Increase sleep times for the scheduler", "tree": {"sha": "149617375d60d80ebc7419da0a486198dcc6f85e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/149617375d60d80ebc7419da0a486198dcc6f85e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "html_url": "https://github.com/rust-lang/rust/commit/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/comments", "author": {"login": "JCTyblaidd", "id": 8288600, "node_id": "MDQ6VXNlcjgyODg2MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8288600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JCTyblaidd", "html_url": "https://github.com/JCTyblaidd", "followers_url": "https://api.github.com/users/JCTyblaidd/followers", "following_url": "https://api.github.com/users/JCTyblaidd/following{/other_user}", "gists_url": "https://api.github.com/users/JCTyblaidd/gists{/gist_id}", "starred_url": "https://api.github.com/users/JCTyblaidd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JCTyblaidd/subscriptions", "organizations_url": "https://api.github.com/users/JCTyblaidd/orgs", "repos_url": "https://api.github.com/users/JCTyblaidd/repos", "events_url": "https://api.github.com/users/JCTyblaidd/events{/privacy}", "received_events_url": "https://api.github.com/users/JCTyblaidd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JCTyblaidd", "id": 8288600, "node_id": "MDQ6VXNlcjgyODg2MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8288600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JCTyblaidd", "html_url": "https://github.com/JCTyblaidd", "followers_url": "https://api.github.com/users/JCTyblaidd/followers", "following_url": "https://api.github.com/users/JCTyblaidd/following{/other_user}", "gists_url": "https://api.github.com/users/JCTyblaidd/gists{/gist_id}", "starred_url": "https://api.github.com/users/JCTyblaidd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JCTyblaidd/subscriptions", "organizations_url": "https://api.github.com/users/JCTyblaidd/orgs", "repos_url": "https://api.github.com/users/JCTyblaidd/repos", "events_url": "https://api.github.com/users/JCTyblaidd/events{/privacy}", "received_events_url": "https://api.github.com/users/JCTyblaidd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ded6d328aa0c1a93f81491ea7821e9b6a7e0d12", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ded6d328aa0c1a93f81491ea7821e9b6a7e0d12", "html_url": "https://github.com/rust-lang/rust/commit/1ded6d328aa0c1a93f81491ea7821e9b6a7e0d12"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "ece831685287bb7164616c005ec3f3610243af7c", "filename": "tests/compile-fail/data_race/dangling_thread_async_race.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdangling_thread_async_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdangling_thread_async_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fdangling_thread_async_race.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -26,7 +26,7 @@ fn main() {\n \n     // Detatch the thread and sleep until it terminates\n     mem::drop(join);\n-    sleep(Duration::from_millis(100));\n+    sleep(Duration::from_millis(1000));\n \n     // Spawn and immediately join a thread\n     // to execute the join code-path"}, {"sha": "873d10b788f18e1bc3594f611f12a4ead4488ff2", "filename": "tests/compile-fail/data_race/dangling_thread_race.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdangling_thread_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdangling_thread_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fdangling_thread_race.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -26,7 +26,7 @@ fn main() {\n \n     // Detatch the thread and sleep until it terminates\n     mem::drop(join);\n-    sleep(Duration::from_millis(100));\n+    sleep(Duration::from_millis(1000));\n \n     // Spawn and immediately join a thread\n     // to execute the join code-path"}, {"sha": "95d7acea26607061e8211ebf6002a508e1212914", "filename": "tests/compile-fail/data_race/dealloc_read_race_stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_read_race_stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_read_race_stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_read_race_stack.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -36,7 +36,7 @@ pub fn main() {\n \n                 pointer.store(&mut stack_var as *mut _, Ordering::Release);\n \n-                sleep(Duration::from_millis(100));\n+                sleep(Duration::from_millis(1000));\n \n             } //~ ERROR Data race\n         });"}, {"sha": "ecdd841965e930ce19b1fb3c46a9a09fd2715e26", "filename": "tests/compile-fail/data_race/dealloc_read_race_stack_drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_read_race_stack_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_read_race_stack_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_read_race_stack_drop.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -36,7 +36,7 @@ pub fn main() {\n \n             pointer.store(&mut stack_var as *mut _, Ordering::Release);\n \n-            sleep(Duration::from_millis(100));\n+            sleep(Duration::from_millis(1000));\n \n             // NOTE: the race is also detected with thread 0, and so reported for thread 0 instead of 2, unsure of the cause.\n             drop(stack_var);"}, {"sha": "8008b6cdb91e7a3f9ecd63773164bc290b97653b", "filename": "tests/compile-fail/data_race/dealloc_write_race_stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_write_race_stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_write_race_stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_write_race_stack.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -36,7 +36,7 @@ pub fn main() {\n \n                 pointer.store(&mut stack_var as *mut _, Ordering::Release);\n \n-                sleep(Duration::from_millis(100));\n+                sleep(Duration::from_millis(1000));\n \n             } //~ ERROR Data race\n         });"}, {"sha": "733cdb7b1f04a3888532c6d85a24a1f3a0f5227a", "filename": "tests/compile-fail/data_race/dealloc_write_race_stack_drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_write_race_stack_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_write_race_stack_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fdealloc_write_race_stack_drop.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -36,7 +36,7 @@ pub fn main() {\n \n             pointer.store(&mut stack_var as *mut _, Ordering::Release);\n             \n-            sleep(Duration::from_millis(100));\n+            sleep(Duration::from_millis(1000));\n \n             drop(stack_var);  //~ ERROR Data race\n         });"}, {"sha": "fcd8a0606bae10bfdef91d1dbafef09f2b35a394", "filename": "tests/compile-fail/data_race/read_write_race_stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fread_write_race_stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fread_write_race_stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fread_write_race_stack.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -38,7 +38,7 @@ pub fn main() {\n \n             pointer.store(&mut stack_var as *mut _, Ordering::Release);\n             \n-            sleep(Duration::from_millis(100));\n+            sleep(Duration::from_millis(1000));\n \n             //read\n             stack_var //~ ERROR Data race"}, {"sha": "d0d625a6ce177ac1a3d06ac19aa78ba9fac0ad9a", "filename": "tests/compile-fail/data_race/release_seq_race.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Frelease_seq_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Frelease_seq_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Frelease_seq_race.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -30,7 +30,7 @@ pub fn main() {\n         let j1 = spawn(move || {\n             *c.0 = 1;\n             SYNC.store(1, Ordering::Release);\n-            sleep(Duration::from_millis(100));\n+            sleep(Duration::from_millis(1000));\n             SYNC.store(3, Ordering::Relaxed);\n         });\n \n@@ -40,7 +40,7 @@ pub fn main() {\n         });\n \n         let j3 = spawn(move || {\n-            sleep(Duration::from_millis(1000));\n+            sleep(Duration::from_millis(5000));\n             if SYNC.load(Ordering::Acquire) == 3 {\n                 *c.0 //~ ERROR Data race\n             } else {"}, {"sha": "46d0911be189faa4a795051f23e6b9c1efc1ed9f", "filename": "tests/compile-fail/data_race/write_write_race_stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fwrite_write_race_stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcef11136922e17eb7d202ebe76d28e6b4e7d4/tests%2Fcompile-fail%2Fdata_race%2Fwrite_write_race_stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Fwrite_write_race_stack.rs?ref=f4bcef11136922e17eb7d202ebe76d28e6b4e7d4", "patch": "@@ -38,7 +38,7 @@ pub fn main() {\n \n             pointer.store(&mut stack_var as *mut _, Ordering::Release);\n             \n-            sleep(Duration::from_millis(100));\n+            sleep(Duration::from_millis(1000));\n \n             stack_var = 1usize; //~ ERROR Data race\n             "}]}