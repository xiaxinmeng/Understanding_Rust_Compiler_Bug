{"sha": "53f78ae0f3ee454b5178aaaedf620d961dbbbb25", "node_id": "C_kwDOAAsO6NoAKDUzZjc4YWUwZjNlZTQ1NGI1MTc4YWFhZWRmNjIwZDk2MWRiYmJiMjU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-18T21:29:26Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-11-25T03:04:54Z"}, "message": "Simplify a bunch of trait ref obligation creations", "tree": {"sha": "e8b8c420ec80773b7fa691cb0bfd84107793a1c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8b8c420ec80773b7fa691cb0bfd84107793a1c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53f78ae0f3ee454b5178aaaedf620d961dbbbb25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53f78ae0f3ee454b5178aaaedf620d961dbbbb25", "html_url": "https://github.com/rust-lang/rust/commit/53f78ae0f3ee454b5178aaaedf620d961dbbbb25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53f78ae0f3ee454b5178aaaedf620d961dbbbb25/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ad5e486f6a6c98211b250563eb4c495dbde07c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad5e486f6a6c98211b250563eb4c495dbde07c7", "html_url": "https://github.com/rust-lang/rust/commit/2ad5e486f6a6c98211b250563eb4c495dbde07c7"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "8c4cff66f554b371f2b8fca8f15562485c3348f9", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/53f78ae0f3ee454b5178aaaedf620d961dbbbb25/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53f78ae0f3ee454b5178aaaedf620d961dbbbb25/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=53f78ae0f3ee454b5178aaaedf620d961dbbbb25", "patch": "@@ -698,9 +698,8 @@ fn matches_preds<'tcx>(\n             cx.tcx,\n             ObligationCause::dummy(),\n             cx.param_env,\n-            cx.tcx.mk_predicate(Binder::bind_with_vars(\n+            cx.tcx.mk_predicate(Binder::dummy(\n                 PredicateKind::Projection(p.with_self_ty(cx.tcx, ty)),\n-                List::empty(),\n             )),\n         )),\n         ExistentialPredicate::AutoTrait(p) => infcx"}]}