{"sha": "f24fbc20274962860e15e1160bfdaade543092bf", "node_id": "C_kwDOAAsO6NoAKGYyNGZiYzIwMjc0OTYyODYwZTE1ZTExNjBiZmRhYWRlNTQzMDkyYmY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T10:58:57Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T10:58:57Z"}, "message": "rustfmt", "tree": {"sha": "42bafc4098274343c9f44325e9fcb2cdf5108e40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42bafc4098274343c9f44325e9fcb2cdf5108e40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f24fbc20274962860e15e1160bfdaade543092bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f24fbc20274962860e15e1160bfdaade543092bf", "html_url": "https://github.com/rust-lang/rust/commit/f24fbc20274962860e15e1160bfdaade543092bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f24fbc20274962860e15e1160bfdaade543092bf/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5e6aa39c1cd6d45a6048fb41281ae23915cb89d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d", "html_url": "https://github.com/rust-lang/rust/commit/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "f24a6aacc900aca270a3dc492e98196cde49e323", "filename": "crates/ide-assists/src/handlers/extract_function.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f24fbc20274962860e15e1160bfdaade543092bf/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f24fbc20274962860e15e1160bfdaade543092bf/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=f24fbc20274962860e15e1160bfdaade543092bf", "patch": "@@ -127,10 +127,8 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext<'_>) -> Op\n \n             builder.replace(target_range, make_call(ctx, &fun, old_indent));\n \n-            let has_impl_wrapper = insert_after\n-                .ancestors()\n-                .find(|a| a.kind() == SyntaxKind::IMPL && a != &insert_after)\n-                .is_some();\n+            let has_impl_wrapper =\n+                insert_after.ancestors().any(|a| a.kind() == SyntaxKind::IMPL && a != insert_after);\n \n             let fn_def = match fun.self_param_adt(ctx) {\n                 Some(adt) if anchor == Anchor::Method && !has_impl_wrapper => {\n@@ -1250,8 +1248,7 @@ fn node_to_insert_after(body: &FunctionBody, anchor: Anchor) -> Option<SyntaxNod\n             SyntaxKind::IMPL => {\n                 if body.extracted_from_trait_impl() && matches!(anchor, Anchor::Method) {\n                     let impl_node = find_non_trait_impl(&next_ancestor);\n-                    let target_node = impl_node.as_ref().and_then(last_impl_member);\n-                    if target_node.is_some() {\n+                    if let target_node @ Some(_) = impl_node.as_ref().and_then(last_impl_member) {\n                         return target_node;\n                     }\n                 }\n@@ -1281,7 +1278,8 @@ fn find_non_trait_impl(trait_impl: &SyntaxNode) -> Option<ast::Impl> {\n     let impl_type = Some(impl_type_name(&as_impl)?);\n \n     let sibblings = trait_impl.parent()?.children();\n-    sibblings.filter_map(ast::Impl::cast)\n+    sibblings\n+        .filter_map(ast::Impl::cast)\n         .find(|s| impl_type_name(s) == impl_type && !is_trait_impl(s))\n }\n "}]}