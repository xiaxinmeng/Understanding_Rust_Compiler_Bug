{"sha": "b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YThjZTFiZTA3MGMwOTVmYWZjODgxZTZkZWIyYzFlZDg3OTQzZGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-07T08:14:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-07T08:14:23Z"}, "message": "move blosure tests to closures file; test Box<dyn> a bit more", "tree": {"sha": "b251e78e1b01426952590d8c4751fcb97cd56439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b251e78e1b01426952590d8c4751fcb97cd56439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "html_url": "https://github.com/rust-lang/rust/commit/b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7a8ce1be070c095fafc881e6deb2c1ed87943dd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04c12952ca11b286536ac2826446f5f686b4af73", "url": "https://api.github.com/repos/rust-lang/rust/commits/04c12952ca11b286536ac2826446f5f686b4af73", "html_url": "https://github.com/rust-lang/rust/commit/04c12952ca11b286536ac2826446f5f686b4af73"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "5e2e0f87bdaff22725d5a6e794ed53318f37ddb3", "filename": "tests/run-pass/closures.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b7a8ce1be070c095fafc881e6deb2c1ed87943dd/tests%2Frun-pass%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7a8ce1be070c095fafc881e6deb2c1ed87943dd/tests%2Frun-pass%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fclosures.rs?ref=b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "patch": "@@ -40,10 +40,21 @@ fn fn_once_closure_with_multiple_args() -> i64 {\n     }\n }\n \n-fn boxed(f: Box<dyn FnOnce() -> i32>) -> i32 {\n+fn boxed_fn_once(f: Box<dyn FnOnce() -> i32>) -> i32 {\n     f()\n }\n \n+fn box_dyn() {\n+    let x: Box<dyn Fn(i32) -> i32> = Box::new(|x| x * 2);\n+    assert_eq!(x(21), 42);\n+    let mut i = 5;\n+    {\n+        let mut x: Box<dyn FnMut()> = Box::new(|| i *= 2);\n+        x(); x();\n+    }\n+    assert_eq!(i, 20);\n+}\n+\n fn fn_item_as_closure_trait_object() {\n     fn foo() {}\n     let f: &dyn Fn() = &foo;\n@@ -96,8 +107,9 @@ fn main() {\n     assert_eq!(crazy_closure(), (84, 10, 10));\n     assert_eq!(closure_arg_adjustment_problem(), 3);\n     assert_eq!(fn_once_closure_with_multiple_args(), 6);\n-    assert_eq!(boxed(Box::new({let x = 13; move || x})), 13);\n+    assert_eq!(boxed_fn_once(Box::new({let x = 13; move || x})), 13);\n \n+    box_dyn();\n     fn_item_as_closure_trait_object();\n     fn_item_with_args_as_closure_trait_object();\n     fn_item_with_multiple_args_as_closure_trait_object();"}, {"sha": "f732c7bfaf1c957d600077b51e98a47c6de66b71", "filename": "tests/run-pass/dyn-traits.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b7a8ce1be070c095fafc881e6deb2c1ed87943dd/tests%2Frun-pass%2Fdyn-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7a8ce1be070c095fafc881e6deb2c1ed87943dd/tests%2Frun-pass%2Fdyn-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fdyn-traits.rs?ref=b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "patch": "@@ -1,6 +1,6 @@\n #![feature(unsized_locals)]\n \n-fn ref_dyn() {\n+fn ref_box_dyn() {\n     struct Struct(i32);\n \n     trait Trait {\n@@ -17,22 +17,19 @@ fn ref_dyn() {\n \n     let y: &dyn Trait = &Struct(42);\n     y.method();\n+\n     let x: Foo<Struct> = Foo(Struct(42));\n     let y: &Foo<dyn Trait> = &x;\n     y.0.method();\n-}\n \n-fn box_dyn() {\n-    let x: Box<dyn Fn(i32) -> i32> = Box::new(|x| x * 2);\n-    assert_eq!(x(21), 42);\n-    let mut i = 5;\n-    {\n-        let mut x: Box<dyn FnMut()> = Box::new(|| i *= 2);\n-        x(); x();\n-    }\n-    assert_eq!(i, 20);\n+    let y: Box<dyn Trait> = Box::new(Struct(42));\n+    y.method();\n+\n+    let y = &y;\n+    y.method();\n }\n \n+\n fn box_box_trait() {\n     struct DroppableStruct;\n \n@@ -130,8 +127,7 @@ fn unsized_dyn_autoderef() {\n }\n \n fn main() {\n-    ref_dyn();\n-    box_dyn();\n+    ref_box_dyn();\n     box_box_trait();\n \n     // \"exotic\" receivers"}]}