{"sha": "cc6ad45148af89cf82855df27ec1a1b695592796", "node_id": "C_kwDOAAsO6NoAKGNjNmFkNDUxNDhhZjg5Y2Y4Mjg1NWRmMjdlYzFhMWI2OTU1OTI3OTY", "commit": {"author": {"name": "Sarthak Singh", "email": "ss269@uw.edu", "date": "2022-10-21T07:38:30Z"}, "committer": {"name": "Sarthak Singh", "email": "ss269@uw.edu", "date": "2022-10-21T07:38:30Z"}, "message": "replaced wrong test with the correct mcve", "tree": {"sha": "0594eead31215e1c898e896a41d689b69b2c02f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0594eead31215e1c898e896a41d689b69b2c02f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc6ad45148af89cf82855df27ec1a1b695592796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6ad45148af89cf82855df27ec1a1b695592796", "html_url": "https://github.com/rust-lang/rust/commit/cc6ad45148af89cf82855df27ec1a1b695592796", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc6ad45148af89cf82855df27ec1a1b695592796/comments", "author": {"login": "SarthakSingh31", "id": 35749450, "node_id": "MDQ6VXNlcjM1NzQ5NDUw", "avatar_url": "https://avatars.githubusercontent.com/u/35749450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SarthakSingh31", "html_url": "https://github.com/SarthakSingh31", "followers_url": "https://api.github.com/users/SarthakSingh31/followers", "following_url": "https://api.github.com/users/SarthakSingh31/following{/other_user}", "gists_url": "https://api.github.com/users/SarthakSingh31/gists{/gist_id}", "starred_url": "https://api.github.com/users/SarthakSingh31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SarthakSingh31/subscriptions", "organizations_url": "https://api.github.com/users/SarthakSingh31/orgs", "repos_url": "https://api.github.com/users/SarthakSingh31/repos", "events_url": "https://api.github.com/users/SarthakSingh31/events{/privacy}", "received_events_url": "https://api.github.com/users/SarthakSingh31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SarthakSingh31", "id": 35749450, "node_id": "MDQ6VXNlcjM1NzQ5NDUw", "avatar_url": "https://avatars.githubusercontent.com/u/35749450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SarthakSingh31", "html_url": "https://github.com/SarthakSingh31", "followers_url": "https://api.github.com/users/SarthakSingh31/followers", "following_url": "https://api.github.com/users/SarthakSingh31/following{/other_user}", "gists_url": "https://api.github.com/users/SarthakSingh31/gists{/gist_id}", "starred_url": "https://api.github.com/users/SarthakSingh31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SarthakSingh31/subscriptions", "organizations_url": "https://api.github.com/users/SarthakSingh31/orgs", "repos_url": "https://api.github.com/users/SarthakSingh31/repos", "events_url": "https://api.github.com/users/SarthakSingh31/events{/privacy}", "received_events_url": "https://api.github.com/users/SarthakSingh31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1ab3b738ac718da74cd4aa0bb7f362d0adbdf84", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1ab3b738ac718da74cd4aa0bb7f362d0adbdf84", "html_url": "https://github.com/rust-lang/rust/commit/b1ab3b738ac718da74cd4aa0bb7f362d0adbdf84"}], "stats": {"total": 47, "additions": 11, "deletions": 36}, "files": [{"sha": "3f72734efa1dce3535b610a4007e66b98a062b75", "filename": "src/test/ui/generic-associated-types/bugs/issue-89008.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b1ab3b738ac718da74cd4aa0bb7f362d0adbdf84/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ab3b738ac718da74cd4aa0bb7f362d0adbdf84/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr?ref=b1ab3b738ac718da74cd4aa0bb7f362d0adbdf84", "patch": "@@ -1,19 +0,0 @@\n-error[E0271]: type mismatch resolving `<Empty<_> as Stream>::Item == Repr`\n-  --> $DIR/issue-89008.rs:38:43\n-   |\n-LL |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n-   |                        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type mismatch resolving `<Empty<_> as Stream>::Item == Repr`\n-   |                        |\n-   |                        this type parameter\n-   |\n-note: expected this to be `()`\n-  --> $DIR/issue-89008.rs:17:17\n-   |\n-LL |     type Item = ();\n-   |                 ^^\n-   = note:   expected unit type `()`\n-           found type parameter `Repr`\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0271`."}, {"sha": "669dbafb5d5deb038e23aa43b7d0ea5a13c6123c", "filename": "src/test/ui/generic-associated-types/issue-89008.rs", "status": "renamed", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/cc6ad45148af89cf82855df27ec1a1b695592796/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-89008.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6ad45148af89cf82855df27ec1a1b695592796/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-89008.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-89008.rs?ref=cc6ad45148af89cf82855df27ec1a1b695592796", "patch": "@@ -1,42 +1,36 @@\n-// check-fail\n+// check-pass\n // edition:2021\n-// known-bug: #88908\n-\n-// This should pass, but seems to run into a TAIT bug.\n \n #![feature(type_alias_impl_trait)]\n \n use std::future::Future;\n+use std::marker::PhantomData;\n \n trait Stream {\n     type Item;\n }\n \n-struct Empty<T>(T);\n-impl<T> Stream for Empty<T> {\n-    type Item = ();\n+struct Empty<T> {\n+    _phantom: PhantomData<T>,\n }\n-fn empty<T>() -> Empty<T> {\n-    todo!()\n+\n+impl<T> Stream for Empty<T> {\n+    type Item = T;\n }\n \n trait X {\n     type LineStream<'a, Repr>: Stream<Item = Repr> where Self: 'a;\n-\n-    type LineStreamFut<'a,Repr>: Future<Output = Self::LineStream<'a, Repr>> where Self: 'a;\n-\n-    fn line_stream<'a,Repr>(&'a self) -> Self::LineStreamFut<'a,Repr>;\n+    type LineStreamFut<'a, Repr>: Future<Output = Self::LineStream<'a, Repr>> where Self: 'a;\n+    fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr>;\n }\n \n struct Y;\n \n impl X for Y {\n     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n-\n-    type LineStreamFut<'a, Repr> = impl Future<Output = Self::LineStream<'a, Repr>> ;\n-\n+    type LineStreamFut<'a, Repr> = impl Future<Output = Self::LineStream<'a, Repr>>;\n     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n-        async {empty()}\n+        async { Empty { _phantom: PhantomData } }\n     }\n }\n ", "previous_filename": "src/test/ui/generic-associated-types/bugs/issue-89008.rs"}]}