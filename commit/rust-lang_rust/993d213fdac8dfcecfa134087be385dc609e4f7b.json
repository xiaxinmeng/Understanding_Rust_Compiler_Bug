{"sha": "993d213fdac8dfcecfa134087be385dc609e4f7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5M2QyMTNmZGFjOGRmY2VjZmExMzQwODdiZTM4NWRjNjA5ZTRmN2I=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-12-20T18:54:11Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-12-27T18:21:17Z"}, "message": "Set a `def_id` in `ParamEnv` only with `-Z chalk`", "tree": {"sha": "2968f353dc1d64f6d6342bd5279290265841cb23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2968f353dc1d64f6d6342bd5279290265841cb23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/993d213fdac8dfcecfa134087be385dc609e4f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/993d213fdac8dfcecfa134087be385dc609e4f7b", "html_url": "https://github.com/rust-lang/rust/commit/993d213fdac8dfcecfa134087be385dc609e4f7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/993d213fdac8dfcecfa134087be385dc609e4f7b/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81d6f9cc813e8946b6cb2ee29dffeb0000c63e69", "url": "https://api.github.com/repos/rust-lang/rust/commits/81d6f9cc813e8946b6cb2ee29dffeb0000c63e69", "html_url": "https://github.com/rust-lang/rust/commit/81d6f9cc813e8946b6cb2ee29dffeb0000c63e69"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "fd8a7db1b47604aab061e7433a5d992a38a3e41b", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/993d213fdac8dfcecfa134087be385dc609e4f7b/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993d213fdac8dfcecfa134087be385dc609e4f7b/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=993d213fdac8dfcecfa134087be385dc609e4f7b", "patch": "@@ -3158,7 +3158,7 @@ fn param_env<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let unnormalized_env = ty::ParamEnv::new(\n         tcx.intern_predicates(&predicates),\n         traits::Reveal::UserFacing,\n-        Some(def_id)\n+        if tcx.sess.opts.debugging_opts.chalk { Some(def_id) } else { None }\n     );\n \n     let body_id = tcx.hir().as_local_node_id(def_id).map_or(DUMMY_NODE_ID, |id| {"}, {"sha": "8f9498e834d8ff11bcdc6c80727b9e80eda9b566", "filename": "src/test/ui/consts/const-size_of-cycle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/993d213fdac8dfcecfa134087be385dc609e4f7b/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/993d213fdac8dfcecfa134087be385dc609e4f7b/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr?ref=993d213fdac8dfcecfa134087be385dc609e4f7b", "patch": "@@ -10,7 +10,7 @@ note: ...which requires const-evaluating `Foo::bytes::{{constant}}`...\n LL |     intrinsics::size_of::<T>()\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires computing layout of `Foo`...\n-note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: [u8; _] }`...\n+note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All, def_id: None }, value: [u8; _] }`...\n note: ...which requires const-evaluating + checking `Foo::bytes::{{constant}}`...\n   --> $DIR/const-size_of-cycle.rs:6:17\n    |"}, {"sha": "441f1b2a06960b27cffdff60690e4898005abb87", "filename": "src/test/ui/issues/issue-44415.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/993d213fdac8dfcecfa134087be385dc609e4f7b/src%2Ftest%2Fui%2Fissues%2Fissue-44415.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/993d213fdac8dfcecfa134087be385dc609e4f7b/src%2Ftest%2Fui%2Fissues%2Fissue-44415.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44415.stderr?ref=993d213fdac8dfcecfa134087be385dc609e4f7b", "patch": "@@ -10,7 +10,7 @@ note: ...which requires const-evaluating `Foo::bytes::{{constant}}`...\n LL |     bytes: [u8; unsafe { intrinsics::size_of::<Foo>() }],\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires computing layout of `Foo`...\n-note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: [u8; _] }`...\n+note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All, def_id: None }, value: [u8; _] }`...\n note: ...which requires const-evaluating + checking `Foo::bytes::{{constant}}`...\n   --> $DIR/issue-44415.rs:6:17\n    |"}]}