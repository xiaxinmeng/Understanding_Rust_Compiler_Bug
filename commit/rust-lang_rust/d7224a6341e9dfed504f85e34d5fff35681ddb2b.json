{"sha": "d7224a6341e9dfed504f85e34d5fff35681ddb2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MjI0YTYzNDFlOWRmZWQ1MDRmODVlMzRkNWZmZjM1NjgxZGRiMmI=", "commit": {"author": {"name": "Y0hy0h", "email": "Y0hy0h@users.noreply.github.com", "date": "2019-08-01T08:51:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-01T08:51:39Z"}, "message": "Improve documentation on implicit_hasher lint\n\nProvide an example of how to fix the lint.", "tree": {"sha": "cd174a4226ee0d6fe834d15b0a32f56b8474f28a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd174a4226ee0d6fe834d15b0a32f56b8474f28a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7224a6341e9dfed504f85e34d5fff35681ddb2b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdQqgbCRBK7hj4Ov3rIwAAdHIIAKhThsyK35MvFVD2BTRtchc0\n2oiLRh5mN2oVHWtU8sor7UzoCEOiYMTlEDj3hXDgE0j9OICZcxVFgN+/gx//ZiYy\neObfs0MNKHgI4J6VTw2umWNF5zp6A5H1dMgTHyFq/mS1SOGm/OBCl5dMCpbSDXoJ\nUtH0mKE6nwSgTPgA60QDrf+R31u9iLpapBrBnwh4Qx1nKg0hGB/CLpYNPbZU2JDy\nKO0Y7Ry8dWbjatd0HxmxTULRGUaeb4Tqq/g+vXRjEIqcHI17NbHBeSMC+ooc5vVm\nodajZ2lzOB5JiCzUX46BQmLqUZnaPclvcljzaxK2SAoi5mqs0QTnvE7AT4DkEIU=\n=wJaH\n-----END PGP SIGNATURE-----\n", "payload": "tree cd174a4226ee0d6fe834d15b0a32f56b8474f28a\nparent 5d061d7058c45e17a27ded16fed1ee55e23014e8\nauthor Y0hy0h <Y0hy0h@users.noreply.github.com> 1564649499 +0200\ncommitter GitHub <noreply@github.com> 1564649499 +0200\n\nImprove documentation on implicit_hasher lint\n\nProvide an example of how to fix the lint."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7224a6341e9dfed504f85e34d5fff35681ddb2b", "html_url": "https://github.com/rust-lang/rust/commit/d7224a6341e9dfed504f85e34d5fff35681ddb2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7224a6341e9dfed504f85e34d5fff35681ddb2b/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d061d7058c45e17a27ded16fed1ee55e23014e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d061d7058c45e17a27ded16fed1ee55e23014e8", "html_url": "https://github.com/rust-lang/rust/commit/5d061d7058c45e17a27ded16fed1ee55e23014e8"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "adc37fdcc9748c49917dae7985f2072df60b1df3", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d7224a6341e9dfed504f85e34d5fff35681ddb2b/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7224a6341e9dfed504f85e34d5fff35681ddb2b/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=d7224a6341e9dfed504f85e34d5fff35681ddb2b", "patch": "@@ -1923,12 +1923,21 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// # use std::collections::HashMap;\n-    /// # use std::hash::Hash;\n+    /// # use std::hash::{Hash, BuildHasher};\n     /// # trait Serialize {};\n     /// impl<K: Hash + Eq, V> Serialize for HashMap<K, V> { }\n     ///\n     /// pub fn foo(map: &mut HashMap<i32, i32>) { }\n     /// ```\n+    /// could be rewritten as\n+    /// ```rust\n+    /// # use std::collections::HashMap;\n+    /// # use std::hash::Hash;\n+    /// # trait Serialize {};\n+    /// impl<K: Hash + Eq, V, S: BuildHasher> Serialize for HashMap<K, V, S> { }\n+    ///\n+    /// pub fn foo<S: BuildHasher>(map: &mut HashMap<i32, i32, S>) { }\n+    /// ```\n     pub IMPLICIT_HASHER,\n     style,\n     \"missing generalization over different hashers\""}]}