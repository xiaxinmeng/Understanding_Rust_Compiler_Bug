{"sha": "cfc1a2cd6832f62aed7be6292a89e31dc29da056", "node_id": "C_kwDOAAsO6NoAKGNmYzFhMmNkNjgzMmY2MmFlZDdiZTYyOTJhODllMzFkYzI5ZGEwNTY", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-13T14:19:48Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-13T14:19:48Z"}, "message": "Remove decl_macro usage\n\nThis reduces the amount of unstable features used by cg_clif", "tree": {"sha": "88efb7869de1ad5aa628ee8424947fff6f1e7245", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88efb7869de1ad5aa628ee8424947fff6f1e7245"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfc1a2cd6832f62aed7be6292a89e31dc29da056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfc1a2cd6832f62aed7be6292a89e31dc29da056", "html_url": "https://github.com/rust-lang/rust/commit/cfc1a2cd6832f62aed7be6292a89e31dc29da056", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfc1a2cd6832f62aed7be6292a89e31dc29da056/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e937265673c79fdf6d8641d38b18958d3bc06a1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e937265673c79fdf6d8641d38b18958d3bc06a1f", "html_url": "https://github.com/rust-lang/rust/commit/e937265673c79fdf6d8641d38b18958d3bc06a1f"}], "stats": {"total": 74, "additions": 38, "deletions": 36}, "files": [{"sha": "c6a247cf59eed11ac5e738af98db46567a9dd87a", "filename": "src/compiler_builtins.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cfc1a2cd6832f62aed7be6292a89e31dc29da056/src%2Fcompiler_builtins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfc1a2cd6832f62aed7be6292a89e31dc29da056/src%2Fcompiler_builtins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiler_builtins.rs?ref=cfc1a2cd6832f62aed7be6292a89e31dc29da056", "patch": "@@ -1,16 +1,18 @@\n-macro builtin_functions($register:ident; $(fn $name:ident($($arg_name:ident: $arg_ty:ty),*) -> $ret_ty:ty;)*) {\n-    #[cfg(feature = \"jit\")]\n-    #[allow(improper_ctypes)]\n-    extern \"C\" {\n-        $(fn $name($($arg_name: $arg_ty),*) -> $ret_ty;)*\n-    }\n+macro_rules! builtin_functions {\n+    ($register:ident; $(fn $name:ident($($arg_name:ident: $arg_ty:ty),*) -> $ret_ty:ty;)*) => {\n+        #[cfg(feature = \"jit\")]\n+        #[allow(improper_ctypes)]\n+        extern \"C\" {\n+            $(fn $name($($arg_name: $arg_ty),*) -> $ret_ty;)*\n+        }\n \n-    #[cfg(feature = \"jit\")]\n-    pub(crate) fn $register(builder: &mut cranelift_jit::JITBuilder) {\n-        for (name, val) in [$((stringify!($name), $name as *const u8)),*] {\n-            builder.symbol(name, val);\n+        #[cfg(feature = \"jit\")]\n+        pub(crate) fn $register(builder: &mut cranelift_jit::JITBuilder) {\n+            for (name, val) in [$((stringify!($name), $name as *const u8)),*] {\n+                builder.symbol(name, val);\n+            }\n         }\n-    }\n+    };\n }\n \n builtin_functions! {"}, {"sha": "8411ec0e035c9bfb0bdcfde8a5f311486b0a73d2", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/cfc1a2cd6832f62aed7be6292a89e31dc29da056/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfc1a2cd6832f62aed7be6292a89e31dc29da056/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=cfc1a2cd6832f62aed7be6292a89e31dc29da056", "patch": "@@ -1,46 +1,32 @@\n //! Codegen of intrinsics. This includes `extern \"rust-intrinsic\"`, `extern \"platform-intrinsic\"`\n //! and LLVM intrinsics that have symbol names starting with `llvm.`.\n \n-mod cpuid;\n-mod llvm;\n-mod simd;\n-\n-pub(crate) use cpuid::codegen_cpuid_call;\n-pub(crate) use llvm::codegen_llvm_intrinsic_call;\n-\n-use rustc_middle::ty::print::with_no_trimmed_paths;\n-use rustc_middle::ty::subst::SubstsRef;\n-use rustc_span::symbol::{kw, sym, Symbol};\n-\n-use crate::prelude::*;\n-use cranelift_codegen::ir::AtomicRmwOp;\n-\n-macro intrinsic_pat {\n+macro_rules! intrinsic_pat {\n     (_) => {\n         _\n-    },\n+    };\n     ($name:ident) => {\n         sym::$name\n-    },\n+    };\n     (kw.$name:ident) => {\n         kw::$name\n-    },\n+    };\n     ($name:literal) => {\n         $name\n-    },\n+    };\n }\n \n-macro intrinsic_arg {\n-    (o $fx:expr, $arg:ident) => {},\n+macro_rules! intrinsic_arg {\n+    (o $fx:expr, $arg:ident) => {};\n     (c $fx:expr, $arg:ident) => {\n         let $arg = codegen_operand($fx, $arg);\n-    },\n+    };\n     (v $fx:expr, $arg:ident) => {\n         let $arg = codegen_operand($fx, $arg).load_scalar($fx);\n-    }\n+    };\n }\n \n-macro intrinsic_match {\n+macro_rules! intrinsic_match {\n     ($fx:expr, $intrinsic:expr, $args:expr,\n     _ => $unknown:block;\n     $(\n@@ -62,6 +48,20 @@ macro intrinsic_match {\n     }\n }\n \n+mod cpuid;\n+mod llvm;\n+mod simd;\n+\n+pub(crate) use cpuid::codegen_cpuid_call;\n+pub(crate) use llvm::codegen_llvm_intrinsic_call;\n+\n+use rustc_middle::ty::print::with_no_trimmed_paths;\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_span::symbol::{kw, sym, Symbol};\n+\n+use crate::prelude::*;\n+use cranelift_codegen::ir::AtomicRmwOp;\n+\n fn report_atomic_type_validation_error<'tcx>(\n     fx: &mut FunctionCx<'_, '_, 'tcx>,\n     intrinsic: Symbol,"}, {"sha": "8b517104df260bf4d432a6a280c979acc8cb3791", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfc1a2cd6832f62aed7be6292a89e31dc29da056/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfc1a2cd6832f62aed7be6292a89e31dc29da056/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=cfc1a2cd6832f62aed7be6292a89e31dc29da056", "patch": "@@ -1,4 +1,4 @@\n-#![feature(rustc_private, decl_macro)]\n+#![feature(rustc_private)]\n #![cfg_attr(feature = \"jit\", feature(never_type, vec_into_raw_parts, once_cell))]\n #![warn(rust_2018_idioms)]\n #![warn(unused_lifetimes)]"}]}