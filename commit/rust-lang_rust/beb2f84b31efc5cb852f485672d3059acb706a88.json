{"sha": "beb2f84b31efc5cb852f485672d3059acb706a88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYjJmODRiMzFlZmM1Y2I4NTJmNDg1NjcyZDMwNTlhY2I3MDZhODg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-22T22:15:52Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:11:19Z"}, "message": "Resolve FIXME in probe.rs", "tree": {"sha": "1d069c8bf0a7bc9a769af1bcb9523f241118c5a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d069c8bf0a7bc9a769af1bcb9523f241118c5a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb2f84b31efc5cb852f485672d3059acb706a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb2f84b31efc5cb852f485672d3059acb706a88", "html_url": "https://github.com/rust-lang/rust/commit/beb2f84b31efc5cb852f485672d3059acb706a88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb2f84b31efc5cb852f485672d3059acb706a88/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "388f823c03f539308695b06bbeb3a16bf11243e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/388f823c03f539308695b06bbeb3a16bf11243e5", "html_url": "https://github.com/rust-lang/rust/commit/388f823c03f539308695b06bbeb3a16bf11243e5"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "a35777873abdfc73ac5560149fb5b8ce49af6674", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/beb2f84b31efc5cb852f485672d3059acb706a88/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb2f84b31efc5cb852f485672d3059acb706a88/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=beb2f84b31efc5cb852f485672d3059acb706a88", "patch": "@@ -21,6 +21,7 @@ use rustc::traits::query::method_autoderef::{MethodAutoderefBadTy};\n use rustc::ty::{self, ParamEnvAnd, Ty, TyCtxt, ToPolyTraitRef, ToPredicate, TraitRef, TypeFoldable};\n use rustc::ty::GenericParamDefKind;\n use rustc::infer::type_variable::TypeVariableOrigin;\n+use rustc::infer::unify_key::ConstVariableOrigin;\n use rustc::util::nodemap::FxHashSet;\n use rustc::infer::{self, InferOk};\n use rustc::infer::canonical::{Canonical, QueryResponse};\n@@ -1572,7 +1573,9 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n                         self.tcx.def_span(def_id))).into()\n                 }\n                 GenericParamDefKind::Const { .. } => {\n-                    unimplemented!() // FIXME(const_generics)\n+                    let span = self.tcx.def_span(def_id);\n+                    let origin = ConstVariableOrigin::SubstitutionPlaceholder(span);\n+                    self.next_const_var(self.tcx.type_of(param.def_id), origin).into()\n                 }\n             }\n         })"}]}