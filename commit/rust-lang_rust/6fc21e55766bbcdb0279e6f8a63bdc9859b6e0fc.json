{"sha": "6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYzIxZTU1NzY2YmJjZGIwMjc5ZTZmOGE2M2JkYzk4NTliNmUwZmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-05T06:44:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-05T06:44:16Z"}, "message": "Auto merge of #51936 - japaric:rust-lld, r=alexcrichton\n\nrename rustc's lld to rust-lld\n\nto not shadow the system installed LLD when linking with LLD.\n\nBefore:\n\n- `-C linker=lld -Z linker-flavor=ld.lld` uses rustc's LLD\n- It's not possible to use a system installed LLD that's named `lld`\n\nWith this commit:\n\n- `-C linker=rust-lld -Z linker-flavor=ld.lld` uses rustc's LLD\n- `-C linker=lld -Z linker-flavor=ld.lld` uses the system installed LLD\n\nwe don't offer guarantees about the availability of LLD in the rustc sysroot so we can rename the tool as long as we don't break the wasm32-unknown-unknown target which depends on it.\n\nr? @alexcrichton we discussed this before", "tree": {"sha": "adffa6ef66cfad894f8bfadc93c327ae59ee235c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adffa6ef66cfad894f8bfadc93c327ae59ee235c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc", "html_url": "https://github.com/rust-lang/rust/commit/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c865d3934cbcf5c0d77d955a73711bd3700a57c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c865d3934cbcf5c0d77d955a73711bd3700a57c7", "html_url": "https://github.com/rust-lang/rust/commit/c865d3934cbcf5c0d77d955a73711bd3700a57c7"}, {"sha": "31ed5c7a01d9826c10bdd166ffcd23efd95b1efe", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ed5c7a01d9826c10bdd166ffcd23efd95b1efe", "html_url": "https://github.com/rust-lang/rust/commit/31ed5c7a01d9826c10bdd166ffcd23efd95b1efe"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "298bd58c6cdfe0545fc55271b948d46134e9e6a0", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc", "patch": "@@ -821,8 +821,11 @@ fn copy_lld_to_sysroot(builder: &Builder,\n         .join(\"bin\");\n     t!(fs::create_dir_all(&dst));\n \n-    let exe = exe(\"lld\", &target);\n-    builder.copy(&lld_install_root.join(\"bin\").join(&exe), &dst.join(&exe));\n+    let src_exe = exe(\"lld\", &target);\n+    let dst_exe = exe(\"rust-lld\", &target);\n+    // we prepend this bin directory to the user PATH when linking Rust binaries. To\n+    // avoid shadowing the system LLD we rename the LLD we provide to `rust-lld`.\n+    builder.copy(&lld_install_root.join(\"bin\").join(&src_exe), &dst.join(&dst_exe));\n }\n \n /// Cargo's output path for the standard library in a given stage, compiled"}, {"sha": "0da9611a5a9419cf192c28ebf7be7d1f9f5e2246", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc", "patch": "@@ -493,12 +493,13 @@ impl Step for Rustc {\n \n             // Copy over lld if it's there\n             if builder.config.lld_enabled {\n-                let exe = exe(\"lld\", &compiler.host);\n+                let exe = exe(\"rust-lld\", &compiler.host);\n                 let src = builder.sysroot_libdir(compiler, host)\n                     .parent()\n                     .unwrap()\n                     .join(\"bin\")\n                     .join(&exe);\n+                // for the rationale about this rename check `compile::copy_lld_to_sysroot`\n                 let dst = image.join(\"lib/rustlib\")\n                     .join(&*host)\n                     .join(\"bin\")"}, {"sha": "6f51495bae9d6211a3150cd2ef5ca4871732163a", "filename": "src/librustc_target/spec/wasm32_unknown_unknown.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_unknown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_unknown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_unknown.rs?ref=6fc21e55766bbcdb0279e6f8a63bdc9859b6e0fc", "patch": "@@ -51,6 +51,9 @@ pub fn target() -> Result<Target, String> {\n         // no dynamic linking, no need for default visibility!\n         default_hidden_visibility: true,\n \n+        // we use the LLD shipped with the Rust toolchain by default\n+        linker: Some(\"rust-lld\".to_owned()),\n+\n         .. Default::default()\n     };\n     Ok(Target {"}]}