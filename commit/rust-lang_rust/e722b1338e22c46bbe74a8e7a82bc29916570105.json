{"sha": "e722b1338e22c46bbe74a8e7a82bc29916570105", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MjJiMTMzOGUyMmM0NmJiZTc0YThlN2E4MmJjMjk5MTY1NzAxMDU=", "commit": {"author": {"name": "Peter F\u00fcrstenau", "email": "fuerstenau@mathematik.tu-darmstadt.de", "date": "2018-12-19T19:31:08Z"}, "committer": {"name": "Peter F\u00fcrstenau", "email": "fuerstenau@mathematik.tu-darmstadt.de", "date": "2018-12-19T19:31:08Z"}, "message": "Reinserted commata", "tree": {"sha": "1177328e4c636398d9b2ebcdc457f40c062127dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1177328e4c636398d9b2ebcdc457f40c062127dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e722b1338e22c46bbe74a8e7a82bc29916570105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e722b1338e22c46bbe74a8e7a82bc29916570105", "html_url": "https://github.com/rust-lang/rust/commit/e722b1338e22c46bbe74a8e7a82bc29916570105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e722b1338e22c46bbe74a8e7a82bc29916570105/comments", "author": {"login": "fuerstenau", "id": 44474815, "node_id": "MDQ6VXNlcjQ0NDc0ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/44474815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuerstenau", "html_url": "https://github.com/fuerstenau", "followers_url": "https://api.github.com/users/fuerstenau/followers", "following_url": "https://api.github.com/users/fuerstenau/following{/other_user}", "gists_url": "https://api.github.com/users/fuerstenau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuerstenau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuerstenau/subscriptions", "organizations_url": "https://api.github.com/users/fuerstenau/orgs", "repos_url": "https://api.github.com/users/fuerstenau/repos", "events_url": "https://api.github.com/users/fuerstenau/events{/privacy}", "received_events_url": "https://api.github.com/users/fuerstenau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fuerstenau", "id": 44474815, "node_id": "MDQ6VXNlcjQ0NDc0ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/44474815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuerstenau", "html_url": "https://github.com/fuerstenau", "followers_url": "https://api.github.com/users/fuerstenau/followers", "following_url": "https://api.github.com/users/fuerstenau/following{/other_user}", "gists_url": "https://api.github.com/users/fuerstenau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuerstenau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuerstenau/subscriptions", "organizations_url": "https://api.github.com/users/fuerstenau/orgs", "repos_url": "https://api.github.com/users/fuerstenau/repos", "events_url": "https://api.github.com/users/fuerstenau/events{/privacy}", "received_events_url": "https://api.github.com/users/fuerstenau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee0856cbeb4ec600399b01fcca58e1804478c3a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee0856cbeb4ec600399b01fcca58e1804478c3a1", "html_url": "https://github.com/rust-lang/rust/commit/ee0856cbeb4ec600399b01fcca58e1804478c3a1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "98aeb3a8e101eb91c96fb6ea756a57e0271e17ee", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e722b1338e22c46bbe74a8e7a82bc29916570105/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e722b1338e22c46bbe74a8e7a82bc29916570105/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=e722b1338e22c46bbe74a8e7a82bc29916570105", "patch": "@@ -127,15 +127,15 @@ impl Pass {\n                 }\n \n                 false\n-            }\n+            },\n             ExprKind::Ret(Some(ref expr)) => Self::expression_returns_none(cx, expr),\n             ExprKind::Path(ref qp) => {\n                 if let Def::VariantCtor(def_id, _) = cx.tables.qpath_def(qp, expression.hir_id) {\n                     return match_def_path(cx.tcx, def_id, &OPTION_NONE);\n                 }\n \n                 false\n-            }\n+            },\n             _ => false,\n         }\n     }"}]}