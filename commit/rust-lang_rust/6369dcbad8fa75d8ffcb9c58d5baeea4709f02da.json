{"sha": "6369dcbad8fa75d8ffcb9c58d5baeea4709f02da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNjlkY2JhZDhmYTc1ZDhmZmNiOWM1OGQ1YmFlZWE0NzA5ZjAyZGE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-09T09:38:11Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-09T11:08:29Z"}, "message": "Move collectionstest::char into coretest::char", "tree": {"sha": "69eb989c23a8a4473760fbbfd1541037c7f68c14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69eb989c23a8a4473760fbbfd1541037c7f68c14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da", "html_url": "https://github.com/rust-lang/rust/commit/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6a8d5e73308c6adb26807cfa1dc20f28b364009", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a8d5e73308c6adb26807cfa1dc20f28b364009", "html_url": "https://github.com/rust-lang/rust/commit/c6a8d5e73308c6adb26807cfa1dc20f28b364009"}], "stats": {"total": 71, "additions": 28, "deletions": 43}, "files": [{"sha": "1ef2f9e82f27c6259f25042a94239fad2edf308c", "filename": "src/libcollectionstest/char.rs", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/c6a8d5e73308c6adb26807cfa1dc20f28b364009/src%2Flibcollectionstest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6a8d5e73308c6adb26807cfa1dc20f28b364009/src%2Flibcollectionstest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fchar.rs?ref=c6a8d5e73308c6adb26807cfa1dc20f28b364009", "patch": "@@ -1,42 +0,0 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use collections::vec::Vec;\n-\n-#[test]\n-fn char_to_lowercase() {\n-    assert_iter_eq('A'.to_lowercase(), &['a']);\n-    assert_iter_eq('\u00c9'.to_lowercase(), &['\u00e9']);\n-    assert_iter_eq('\u01c5'.to_lowercase(), &['\u01c6']);\n-}\n-\n-#[test]\n-fn char_to_uppercase() {\n-    assert_iter_eq('a'.to_uppercase(), &['A']);\n-    assert_iter_eq('\u00e9'.to_uppercase(), &['\u00c9']);\n-    assert_iter_eq('\u01c5'.to_uppercase(), &['\u01c4']);\n-    assert_iter_eq('\u00df'.to_uppercase(), &['S', 'S']);\n-    assert_iter_eq('\ufb01'.to_uppercase(), &['F', 'I']);\n-    assert_iter_eq('\u1f80'.to_uppercase(), &['\u1f08', '\u0399']);\n-}\n-\n-#[test]\n-fn char_to_titlecase() {\n-    assert_iter_eq('a'.to_titlecase(), &['A']);\n-    assert_iter_eq('\u00e9'.to_titlecase(), &['\u00c9']);\n-    assert_iter_eq('\u01c4'.to_titlecase(), &['\u01c5']);\n-    assert_iter_eq('\u00df'.to_titlecase(), &['S', 's']);\n-    assert_iter_eq('\ufb01'.to_titlecase(), &['F', 'i']);\n-    assert_iter_eq('\u1f80'.to_titlecase(), &['\u1f88']);\n-}\n-\n-fn assert_iter_eq<I: Iterator<Item=char>>(iter: I, expected: &[char]) {\n-    assert_eq!(iter.collect::<Vec<_>>(), expected);\n-}"}, {"sha": "0e3f9d5aaddf6aa29c87069a0dfcd52cfaa61c37", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=6369dcbad8fa75d8ffcb9c58d5baeea4709f02da", "patch": "@@ -37,7 +37,6 @@ extern crate rustc_unicode;\n mod binary_heap;\n mod bit;\n mod btree;\n-mod char;  // char isn't really a collection, but didn't find a better place for this.\n mod enum_set;\n mod fmt;\n mod linked_list;"}, {"sha": "1506982586a00a55f819084d2e9f6b5a33b8e849", "filename": "src/libcoretest/char.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da/src%2Flibcoretest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6369dcbad8fa75d8ffcb9c58d5baeea4709f02da/src%2Flibcoretest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fchar.rs?ref=6369dcbad8fa75d8ffcb9c58d5baeea4709f02da", "patch": "@@ -75,6 +75,8 @@ fn test_to_lowercase() {\n     assert_eq!(lower('\u039c'), '\u03bc');\n     assert_eq!(lower('\u0391'), '\u03b1');\n     assert_eq!(lower('\u03a3'), '\u03c3');\n+    assert_eq!(lower('\u01c5'), '\u01c6');\n+    assert_eq!(lower('\ufb01'), '\ufb01');\n }\n \n #[test]\n@@ -95,6 +97,32 @@ fn test_to_uppercase() {\n     assert_eq!(upper('\u03bc'), ['\u039c']);\n     assert_eq!(upper('\u03b1'), ['\u0391']);\n     assert_eq!(upper('\u03c2'), ['\u03a3']);\n+    assert_eq!(upper('\u01c5'), ['\u01c4']);\n+    assert_eq!(upper('\ufb01'), ['F', 'I']);\n+    assert_eq!(upper('\u1f80'), ['\u1f08', '\u0399']);\n+}\n+\n+#[test]\n+fn test_to_titlecase() {\n+    fn title(c: char) -> Vec<char> {\n+        c.to_titlecase().collect()\n+    }\n+    assert_eq!(title('a'), ['A']);\n+    assert_eq!(title('\u00f6'), ['\u00d6']);\n+    assert_eq!(title('\u00df'), ['S', 's']); // not \u1e9e: Latin capital letter sharp s\n+    assert_eq!(title('\u00fc'), ['\u00dc']);\n+    assert_eq!(title('\ud83d\udca9'), ['\ud83d\udca9']);\n+\n+    assert_eq!(title('\u03c3'), ['\u03a3']);\n+    assert_eq!(title('\u03c4'), ['\u03a4']);\n+    assert_eq!(title('\u03b9'), ['\u0399']);\n+    assert_eq!(title('\u03b3'), ['\u0393']);\n+    assert_eq!(title('\u03bc'), ['\u039c']);\n+    assert_eq!(title('\u03b1'), ['\u0391']);\n+    assert_eq!(title('\u03c2'), ['\u03a3']);\n+    assert_eq!(title('\u01c4'), ['\u01c5']);\n+    assert_eq!(title('\ufb01'), ['F', 'i']);\n+    assert_eq!(title('\u1f80'), ['\u1f88']);\n }\n \n #[test]"}]}