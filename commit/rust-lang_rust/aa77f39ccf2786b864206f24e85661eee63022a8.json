{"sha": "aa77f39ccf2786b864206f24e85661eee63022a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNzdmMzljY2YyNzg2Yjg2NDIwNmYyNGU4NTY2MWVlZTYzMDIyYTg=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-01-04T16:35:06Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-01-04T16:51:12Z"}, "message": "Improve the range comparison\n\nAs mentioned in #29734, the range comparison closure can be improved.\n\nThe LLVM IR and the assembly from the new version are much simpler and\nunfortunately we cannot rely on the compiler to optimise this much, as\nit would need to know that `lo <= hi`.\n\nBesides from simpler code, there might also be a performance\nadvantage, although it is unlikely to appear on benchmarks, as we are\ndoing a binary search, which should always involve few comparisons.\n\nThe code is available on the playpen for ease of comparison:\nhttp://is.gd/4raMmH", "tree": {"sha": "d63a07fc865dd17c6c76efbef5d5e2d3c1afa905", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d63a07fc865dd17c6c76efbef5d5e2d3c1afa905"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa77f39ccf2786b864206f24e85661eee63022a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa77f39ccf2786b864206f24e85661eee63022a8", "html_url": "https://github.com/rust-lang/rust/commit/aa77f39ccf2786b864206f24e85661eee63022a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa77f39ccf2786b864206f24e85661eee63022a8/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf3fcf7758f4e568a5b97bdeffe7131a167e918f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf3fcf7758f4e568a5b97bdeffe7131a167e918f", "html_url": "https://github.com/rust-lang/rust/commit/cf3fcf7758f4e568a5b97bdeffe7131a167e918f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "10b864a902dc0a4bebb166b1d8ec0723fa3f4343", "filename": "src/etc/unicode.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa77f39ccf2786b864206f24e85661eee63022a8/src%2Fetc%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/aa77f39ccf2786b864206f24e85661eee63022a8/src%2Fetc%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Funicode.py?ref=aa77f39ccf2786b864206f24e85661eee63022a8", "patch": "@@ -279,12 +279,12 @@ def emit_bsearch_range_table(f):\n fn bsearch_range_table(c: char, r: &'static [(char, char)]) -> bool {\n     use core::cmp::Ordering::{Equal, Less, Greater};\n     r.binary_search_by(|&(lo, hi)| {\n-         if lo <= c && c <= hi {\n-             Equal\n+         if c < lo {\n+             Greater\n          } else if hi < c {\n              Less\n          } else {\n-             Greater\n+             Equal\n          }\n      })\n      .is_ok()"}]}