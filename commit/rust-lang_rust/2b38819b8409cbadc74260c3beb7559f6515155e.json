{"sha": "2b38819b8409cbadc74260c3beb7559f6515155e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMzg4MTliODQwOWNiYWRjNzQyNjBjM2JlYjc1NTlmNjUxNTE1NWU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-10T14:27:16Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-10T15:24:36Z"}, "message": "copyedits: documentation", "tree": {"sha": "7ceaaf0f28560d68a7ea8514cb0ecb5d6d06a735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ceaaf0f28560d68a7ea8514cb0ecb5d6d06a735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b38819b8409cbadc74260c3beb7559f6515155e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b38819b8409cbadc74260c3beb7559f6515155e", "html_url": "https://github.com/rust-lang/rust/commit/2b38819b8409cbadc74260c3beb7559f6515155e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b38819b8409cbadc74260c3beb7559f6515155e/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "734bdc656a6fae7a2c1f5722de4c1f9611bc28b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/734bdc656a6fae7a2c1f5722de4c1f9611bc28b5", "html_url": "https://github.com/rust-lang/rust/commit/734bdc656a6fae7a2c1f5722de4c1f9611bc28b5"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "fa27d1c226cc494cdf06bc9ce24b2a71d7d1d3fc", "filename": "src/doc/trpl/comments.md", "status": "modified", "additions": 18, "deletions": 20, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2b38819b8409cbadc74260c3beb7559f6515155e/src%2Fdoc%2Ftrpl%2Fcomments.md", "raw_url": "https://github.com/rust-lang/rust/raw/2b38819b8409cbadc74260c3beb7559f6515155e/src%2Fdoc%2Ftrpl%2Fcomments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fcomments.md?ref=2b38819b8409cbadc74260c3beb7559f6515155e", "patch": "@@ -1,47 +1,45 @@\n % Comments\n \n-Now that we have some functions, it's a good idea to learn about comments.\n+Now that we have some functions, it\u2019s a good idea to learn about comments.\n Comments are notes that you leave to other programmers to help explain things\n about your code. The compiler mostly ignores them.\n \n Rust has two kinds of comments that you should care about: *line comments*\n and *doc comments*.\n \n-```{rust}\n-// Line comments are anything after '//' and extend to the end of the line.\n+```rust\n+// Line comments are anything after \u2018//\u2019 and extend to the end of the line.\n \n let x = 5; // this is also a line comment.\n \n // If you have a long explanation for something, you can put line comments next\n-// to each other. Put a space between the // and your comment so that it's\n+// to each other. Put a space between the // and your comment so that it\u2019s\n // more readable.\n ```\n \n The other kind of comment is a doc comment. Doc comments use `///` instead of\n `//`, and support Markdown notation inside:\n \n-```{rust}\n-/// `hello` is a function that prints a greeting that is personalized based on\n-/// the name given.\n-///\n-/// # Arguments\n-///\n-/// * `name` - The name of the person you'd like to greet.\n+```rust\n+/// Adds one to the number given.\n ///\n /// # Examples\n ///\n-/// ```rust\n-/// let name = \"Steve\";\n-/// hello(name); // prints \"Hello, Steve!\"\n /// ```\n-fn hello(name: &str) {\n-    println!(\"Hello, {}!\", name);\n+/// let five = 5;\n+///\n+/// assert_eq!(6, add_one(5));\n+/// ```\n+fn add_one(x: i32) -> i32 {\n+    x + 1\n }\n ```\n \n-When writing doc comments, adding sections for any arguments, return values,\n-and providing some examples of usage is very, very helpful. Don't worry about\n-the `&str`, we'll get to it soon.\n+When writing doc comments, providing some examples of usage is very, very\n+helpful. You\u2019ll notice we\u2019ve used a new macro here: `assert_eq!`. This compares\n+two values, and `panic!`s if they\u2019re not equal to each other. It\u2019s very helpful\n+in documentation. There\u2019s another macro, `assert!`, which `panic!`s if the\n+value passed to it is `false`.\n \n You can use the [`rustdoc`](documentation.html) tool to generate HTML documentation\n-from these doc comments.\n+from these doc comments, and also to run the code examples as tests!"}]}