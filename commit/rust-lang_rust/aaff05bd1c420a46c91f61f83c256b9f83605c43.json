{"sha": "aaff05bd1c420a46c91f61f83c256b9f83605c43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZmYwNWJkMWM0MjBhNDZjOTFmNjFmODNjMjU2YjlmODM2MDVjNDM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-19T06:51:41Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-19T21:22:10Z"}, "message": "Reorder the state handling in `process_cycles()`.\n\nThis gives a slight speed-up.", "tree": {"sha": "1f1f1712d066c83ac5e1ebbdec24b4970147a2ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f1f1712d066c83ac5e1ebbdec24b4970147a2ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaff05bd1c420a46c91f61f83c256b9f83605c43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaff05bd1c420a46c91f61f83c256b9f83605c43", "html_url": "https://github.com/rust-lang/rust/commit/aaff05bd1c420a46c91f61f83c256b9f83605c43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaff05bd1c420a46c91f61f83c256b9f83605c43/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b9d2aff8de4d499b4ba7ca406e000f8d3754ea7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9d2aff8de4d499b4ba7ca406e000f8d3754ea7", "html_url": "https://github.com/rust-lang/rust/commit/9b9d2aff8de4d499b4ba7ca406e000f8d3754ea7"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "37f4537f4b770ffaa4041c9145e416e638ea9d35", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aaff05bd1c420a46c91f61f83c256b9f83605c43/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaff05bd1c420a46c91f61f83c256b9f83605c43/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=aaff05bd1c420a46c91f61f83c256b9f83605c43", "patch": "@@ -484,13 +484,16 @@ impl<O: ForestObligation> ObligationForest<O> {\n         debug!(\"process_cycles()\");\n \n         for (index, node) in self.nodes.iter().enumerate() {\n-            // For rustc-benchmarks/inflate-0.1.0 this state test is extremely\n-            // hot and the state is almost always `Pending` or `Waiting`. It's\n-            // a win to handle the no-op cases immediately to avoid the cost of\n-            // the function call.\n+            // For some benchmarks this state test is extremely\n+            // hot. It's a win to handle the no-op cases immediately to avoid\n+            // the cost of the function call.\n             match node.state.get() {\n-                NodeState::Waiting | NodeState::Pending | NodeState::Done | NodeState::Error => {},\n-                _ => self.find_cycles_from_node(&mut stack, processor, index),\n+                // Match arms are in order of frequency. Pending, Success and\n+                // Waiting dominate; the others are rare.\n+                NodeState::Pending => {},\n+                NodeState::Success => self.find_cycles_from_node(&mut stack, processor, index),\n+                NodeState::Waiting | NodeState::Done | NodeState::Error => {},\n+                NodeState::OnDfsStack => self.find_cycles_from_node(&mut stack, processor, index),\n             }\n         }\n "}]}