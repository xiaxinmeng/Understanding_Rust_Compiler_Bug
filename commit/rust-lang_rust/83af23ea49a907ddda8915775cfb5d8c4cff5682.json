{"sha": "83af23ea49a907ddda8915775cfb5d8c4cff5682", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYWYyM2VhNDlhOTA3ZGRkYTg5MTU3NzVjZmI1ZDhjNGNmZjU2ODI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:13:36Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:13:36Z"}, "message": "rollup merge of #19913: KOMON/rust-mode-emacs-indentation\n\nI added an option to auto-indent method chains to line up along their '.' operators. Like so:\n\n```\nlet input = io::stdin().readline()\n                       .ok()\n                       .expect(\"Failed to read line\");\n```\n\nThe old default would indent like so:\n```\nlet input = io::stdin().readme()\n    .ok()\n    .expect(\"Failed to read line\");\n```\n\nThe Rust guide explicitly condones the former, so I thought it would be nice for the emacs mode to support it. It's off by default, you have to set ```rust-indent-method-chain``` to ```t``` via your .emacs or the customize menu", "tree": {"sha": "6584e1895c571731b62af312bbc27091b51d0b95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6584e1895c571731b62af312bbc27091b51d0b95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83af23ea49a907ddda8915775cfb5d8c4cff5682", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83af23ea49a907ddda8915775cfb5d8c4cff5682", "html_url": "https://github.com/rust-lang/rust/commit/83af23ea49a907ddda8915775cfb5d8c4cff5682", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83af23ea49a907ddda8915775cfb5d8c4cff5682/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6869645e86c91544b8737b89809bdf10bef536d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6869645e86c91544b8737b89809bdf10bef536d9", "html_url": "https://github.com/rust-lang/rust/commit/6869645e86c91544b8737b89809bdf10bef536d9"}, {"sha": "8051bd06260e4587e183e6055a6794414e7c76f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8051bd06260e4587e183e6055a6794414e7c76f9", "html_url": "https://github.com/rust-lang/rust/commit/8051bd06260e4587e183e6055a6794414e7c76f9"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "dae685f3a540a63dc1185304c4710e7f42547673", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/83af23ea49a907ddda8915775cfb5d8c4cff5682/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/83af23ea49a907ddda8915775cfb5d8c4cff5682/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=83af23ea49a907ddda8915775cfb5d8c4cff5682", "patch": "@@ -54,6 +54,11 @@\n   :type 'integer\n   :group 'rust-mode)\n \n+(defcustom rust-indent-method-chain nil\n+  \"Indent Rust method chains, aligned by the '.' operators\"\n+  :type 'boolean\n+  :group 'rust-mode)\n+\n (defun rust-paren-level () (nth 0 (syntax-ppss)))\n (defun rust-in-str-or-cmnt () (nth 8 (syntax-ppss)))\n (defun rust-rewind-past-str-cmnt () (goto-char (nth 8 (syntax-ppss))))\n@@ -73,10 +78,19 @@\n     ;; open bracket ends the line\n     (when (not (looking-at \"[[:blank:]]*\\\\(?://.*\\\\)?$\"))\n       (when (looking-at \"[[:space:]]\")\n-\t(forward-word 1)\n-\t(backward-word 1))\n+    (forward-word 1)\n+    (backward-word 1))\n       (current-column))))\n \n+(defun rust-align-to-method-chain ()\n+  (save-excursion\n+    (previous-line)\n+    (end-of-line)\n+    (backward-word 1)\n+    (backward-char)\n+    (when (looking-at \"\\\\..+\\(.*\\)\\n\")\n+      (- (current-column) rust-indent-offset))))\n+\n (defun rust-rewind-to-beginning-of-current-level-expr ()\n   (let ((current-level (rust-paren-level)))\n     (back-to-indentation)\n@@ -99,10 +113,13 @@\n                    ;; the inside of it correctly relative to the outside.\n                    (if (= 0 level)\n                        0\n+                     (or\n+                      (when rust-indent-method-chain\n+                        (rust-align-to-method-chain))\n                      (save-excursion\n                        (backward-up-list)\n                        (rust-rewind-to-beginning-of-current-level-expr)\n-                       (+ (current-column) rust-indent-offset)))))\n+                       (+ (current-column) rust-indent-offset))))))\n              (cond\n               ;; A function return type is indented to the corresponding function arguments\n               ((looking-at \"->\")\n@@ -114,6 +131,16 @@\n               ;; A closing brace is 1 level unindended\n               ((looking-at \"}\") (- baseline rust-indent-offset))\n \n+              ;;Line up method chains by their .'s\n+              ((when (and rust-indent-method-chain\n+                          (looking-at \"\\..+\\(.*\\);?\\n\"))\n+                 (or\n+                  (let ((method-indent (rust-align-to-method-chain)))\n+                    (when method-indent\n+                      (+ method-indent rust-indent-offset)))\n+                  (+ baseline rust-indent-offset))))\n+\n+              \n               ;; Doc comments in /** style with leading * indent to line up the *s\n               ((and (nth 4 (syntax-ppss)) (looking-at \"*\"))\n                (+ 1 baseline))"}]}