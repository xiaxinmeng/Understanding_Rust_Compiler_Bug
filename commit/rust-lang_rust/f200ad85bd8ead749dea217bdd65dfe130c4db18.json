{"sha": "f200ad85bd8ead749dea217bdd65dfe130c4db18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMDBhZDg1YmQ4ZWFkNzQ5ZGVhMjE3YmRkNjVkZmUxMzBjNGRiMTg=", "commit": {"author": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-07-10T14:23:14Z"}, "committer": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-07-10T14:23:54Z"}, "message": "Show file name and access mode in Debug instance for File on OS X", "tree": {"sha": "ee3ac84c268c577253ebc8a75a79ba6f13185cac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee3ac84c268c577253ebc8a75a79ba6f13185cac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f200ad85bd8ead749dea217bdd65dfe130c4db18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f200ad85bd8ead749dea217bdd65dfe130c4db18", "html_url": "https://github.com/rust-lang/rust/commit/f200ad85bd8ead749dea217bdd65dfe130c4db18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f200ad85bd8ead749dea217bdd65dfe130c4db18/comments", "author": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdcce3ba4491436e6603833cee19533003993117", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdcce3ba4491436e6603833cee19533003993117", "html_url": "https://github.com/rust-lang/rust/commit/cdcce3ba4491436e6603833cee19533003993117"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "c41a161c82c7675574f70a6edc1df74079364f56", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f200ad85bd8ead749dea217bdd65dfe130c4db18/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f200ad85bd8ead749dea217bdd65dfe130c4db18/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=f200ad85bd8ead749dea217bdd65dfe130c4db18", "patch": "@@ -4978,6 +4978,8 @@ pub mod consts {\n             pub const F_GETFL : c_int = 3;\n             pub const F_SETFL : c_int = 4;\n \n+            pub const O_ACCMODE : c_int = 3;\n+\n             pub const SIGTRAP : c_int = 5;\n             pub const SIG_IGN: size_t = 1;\n \n@@ -5130,6 +5132,7 @@ pub mod consts {\n             pub const O_DSYNC : c_int = 4194304;\n             pub const O_SYNC : c_int = 128;\n             pub const O_NONBLOCK : c_int = 4;\n+            pub const F_GETPATH : c_int = 50;\n             pub const F_FULLFSYNC : c_int = 51;\n \n             pub const MAP_COPY : c_int = 0x0002;\n@@ -5151,6 +5154,8 @@ pub mod consts {\n             pub const SO_DONTTRUNC: c_int = 0x2000;\n             pub const SO_WANTMORE: c_int = 0x4000;\n             pub const SO_WANTOOBFLAG: c_int = 0x8000;\n+\n+            pub const PATH_MAX: c_int = 1024;\n         }\n         pub mod sysconf {\n             use types::os::arch::c95::c_int;"}, {"sha": "867cdcbab94cb88750c0453ac1141a718ec3be42", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f200ad85bd8ead749dea217bdd65dfe130c4db18/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f200ad85bd8ead749dea217bdd65dfe130c4db18/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=f200ad85bd8ead749dea217bdd65dfe130c4db18", "patch": "@@ -370,13 +370,25 @@ impl fmt::Debug for File {\n             readlink(&p).ok()\n         }\n \n-        #[cfg(not(target_os = \"linux\"))]\n+        #[cfg(target_os = \"macos\")]\n+        fn get_path(fd: c_int) -> Option<PathBuf> {\n+            let mut buf = vec![0;libc::PATH_MAX as usize];\n+            let n = unsafe { libc::fcntl(fd, libc::F_GETPATH, buf.as_ptr()) };\n+            if n == -1 {\n+                return None;\n+            }\n+            let l = buf.iter().position(|&c| c == 0).unwrap();\n+            buf.truncate(l as usize);\n+            Some(PathBuf::from(OsString::from_vec(buf)))\n+        }\n+\n+        #[cfg(not(any(target_os = \"linux\", target_os = \"macos\")))]\n         fn get_path(_fd: c_int) -> Option<PathBuf> {\n             // FIXME(#24570): implement this for other Unix platforms\n             None\n         }\n \n-        #[cfg(target_os = \"linux\")]\n+        #[cfg(any(target_os = \"linux\", target_os = \"macos\"))]\n         fn get_mode(fd: c_int) -> Option<(bool, bool)> {\n             let mode = unsafe { libc::fcntl(fd, libc::F_GETFL) };\n             if mode == -1 {\n@@ -390,7 +402,7 @@ impl fmt::Debug for File {\n             }\n         }\n \n-        #[cfg(not(target_os = \"linux\"))]\n+        #[cfg(not(any(target_os = \"linux\", target_os = \"macos\")))]\n         fn get_mode(_fd: c_int) -> Option<(bool, bool)> {\n             // FIXME(#24570): implement this for other Unix platforms\n             None"}]}