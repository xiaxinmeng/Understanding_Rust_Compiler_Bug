{"sha": "71dfe6487d8e7733c293db49124afc85108727d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZGZlNjQ4N2Q4ZTc3MzNjMjkzZGI0OTEyNGFmYzg1MTA4NzI3ZDQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-08-29T22:39:51Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-08-29T22:39:51Z"}, "message": "Normalize order of `lo` and `hi` in `Span::new`", "tree": {"sha": "a4ff7bf98731b62b3c315c3b63617e7a70811117", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4ff7bf98731b62b3c315c3b63617e7a70811117"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71dfe6487d8e7733c293db49124afc85108727d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71dfe6487d8e7733c293db49124afc85108727d4", "html_url": "https://github.com/rust-lang/rust/commit/71dfe6487d8e7733c293db49124afc85108727d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71dfe6487d8e7733c293db49124afc85108727d4/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3da868dcb67e85ccbd6d64cdcc29829b1399de15", "url": "https://api.github.com/repos/rust-lang/rust/commits/3da868dcb67e85ccbd6d64cdcc29829b1399de15", "html_url": "https://github.com/rust-lang/rust/commit/3da868dcb67e85ccbd6d64cdcc29829b1399de15"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9c63657029545a5f54002253adbf00fe73ec0216", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71dfe6487d8e7733c293db49124afc85108727d4/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71dfe6487d8e7733c293db49124afc85108727d4/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=71dfe6487d8e7733c293db49124afc85108727d4", "patch": "@@ -84,7 +84,7 @@ pub struct MultiSpan {\n impl Span {\n     #[inline]\n     pub fn new(lo: BytePos, hi: BytePos, ctxt: SyntaxContext) -> Self {\n-        Span { lo, hi, ctxt }\n+        if lo <= hi { Span { lo, hi, ctxt } } else { Span { lo: hi, hi: lo, ctxt } }\n     }\n \n     #[inline]"}]}