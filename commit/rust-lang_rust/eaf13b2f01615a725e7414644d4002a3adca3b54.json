{"sha": "eaf13b2f01615a725e7414644d4002a3adca3b54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZjEzYjJmMDE2MTVhNzI1ZTc0MTQ2NDRkNDAwMmEzYWRjYTNiNTQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-21T09:41:40Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-31T23:42:59Z"}, "message": "better debug dumping with inference variables", "tree": {"sha": "cb331d83a74194a3c5abc6711754061e3b6ee6c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb331d83a74194a3c5abc6711754061e3b6ee6c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaf13b2f01615a725e7414644d4002a3adca3b54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf13b2f01615a725e7414644d4002a3adca3b54", "html_url": "https://github.com/rust-lang/rust/commit/eaf13b2f01615a725e7414644d4002a3adca3b54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaf13b2f01615a725e7414644d4002a3adca3b54/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75543c08c778eb7315d2368072d0ff710fb228eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/75543c08c778eb7315d2368072d0ff710fb228eb", "html_url": "https://github.com/rust-lang/rust/commit/75543c08c778eb7315d2368072d0ff710fb228eb"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "5a4d2c2c445736c8dfa47e893e1d5427d34df7ed", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eaf13b2f01615a725e7414644d4002a3adca3b54/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaf13b2f01615a725e7414644d4002a3adca3b54/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=eaf13b2f01615a725e7414644d4002a3adca3b54", "patch": "@@ -643,6 +643,8 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                                             -> T::Lifted\n         where T: TypeFoldable<'tcx> + ty::Lift<'gcx>\n     {\n+        debug!(\"drain_fulfillment_cx_or_panic()\");\n+\n         let when = \"resolving bounds after type-checking\";\n         let v = match self.drain_fulfillment_cx(fulfill_cx, result) {\n             Ok(v) => v,\n@@ -817,6 +819,8 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn start_snapshot(&self) -> CombinedSnapshot {\n+        debug!(\"start_snapshot()\");\n+\n         let obligations_in_snapshot = self.obligations_in_snapshot.get();\n         self.obligations_in_snapshot.set(false);\n \n@@ -854,7 +858,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn commit_from(&self, snapshot: CombinedSnapshot) {\n-        debug!(\"commit_from!\");\n+        debug!(\"commit_from()\");\n         let CombinedSnapshot { type_snapshot,\n                                int_snapshot,\n                                float_snapshot,"}, {"sha": "badbeccee83cf6efdfecda136ca7c554b73ca943", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eaf13b2f01615a725e7414644d4002a3adca3b54/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaf13b2f01615a725e7414644d4002a3adca3b54/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=eaf13b2f01615a725e7414644d4002a3adca3b54", "patch": "@@ -178,7 +178,9 @@ impl<'tcx> TypeVariableTable<'tcx> {\n             value: Bounded { relations: vec![], default: default },\n             diverging: diverging\n         });\n-        ty::TyVid { index: index as u32 }\n+        let v = ty::TyVid { index: index as u32 };\n+        debug!(\"new_var() -> {:?}\", v);\n+        v\n     }\n \n     pub fn root_var(&mut self, vid: ty::TyVid) -> ty::TyVid {\n@@ -219,6 +221,17 @@ impl<'tcx> TypeVariableTable<'tcx> {\n     }\n \n     pub fn rollback_to(&mut self, s: Snapshot) {\n+        debug!(\"rollback_to{:?}\", {\n+            for action in self.values.actions_since_snapshot(&s.snapshot) {\n+                match *action {\n+                    sv::UndoLog::NewElem(index) => {\n+                        debug!(\"inference variable _#{}t popped\", index)\n+                    }\n+                    _ => { }\n+                }\n+            }\n+        });\n+\n         self.values.rollback_to(s.snapshot);\n         self.eq_relations.rollback_to(s.eq_snapshot);\n     }"}]}