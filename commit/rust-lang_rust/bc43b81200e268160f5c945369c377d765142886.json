{"sha": "bc43b81200e268160f5c945369c377d765142886", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNDNiODEyMDBlMjY4MTYwZjVjOTQ1MzY5YzM3N2Q3NjUxNDI4ODY=", "commit": {"author": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2015-08-02T10:42:00Z"}, "committer": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2015-08-02T10:42:00Z"}, "message": "Merge pull request #167 from marcusklaas/unsafe\n\nProperly format unsafe blocks", "tree": {"sha": "75b2514e44d064ab2c16193b5999eb55d66eedee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75b2514e44d064ab2c16193b5999eb55d66eedee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc43b81200e268160f5c945369c377d765142886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc43b81200e268160f5c945369c377d765142886", "html_url": "https://github.com/rust-lang/rust/commit/bc43b81200e268160f5c945369c377d765142886", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc43b81200e268160f5c945369c377d765142886/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7214008f6080a909f8d7af7713fbd207fab93ca5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7214008f6080a909f8d7af7713fbd207fab93ca5", "html_url": "https://github.com/rust-lang/rust/commit/7214008f6080a909f8d7af7713fbd207fab93ca5"}, {"sha": "0f640b06ddac1ff6033fba2836f3ad0e71390db7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f640b06ddac1ff6033fba2836f3ad0e71390db7", "html_url": "https://github.com/rust-lang/rust/commit/0f640b06ddac1ff6033fba2836f3ad0e71390db7"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "b8c37dcab4c3b8cffee4117b0845879bc280d5bf", "filename": "src/expr.rs", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/bc43b81200e268160f5c945369c377d765142886/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc43b81200e268160f5c945369c377d765142886/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=bc43b81200e268160f5c945369c377d765142886", "patch": "@@ -15,6 +15,7 @@ use StructLitStyle;\n use utils::{span_after, make_indent};\n use visitor::FmtVisitor;\n use config::BlockIndentStyle;\n+use comment::{FindUncommented, rewrite_comment};\n \n use syntax::{ast, ptr};\n use syntax::codemap::{Pos, Span, BytePos, mk_sp};\n@@ -104,11 +105,35 @@ impl Rewrite for ast::Expr {\n }\n \n impl Rewrite for ast::Block {\n-    fn rewrite(&self, context: &RewriteContext, _: usize, _: usize) -> Option<String> {\n+    fn rewrite(&self, context: &RewriteContext, width: usize, offset: usize) -> Option<String> {\n         let mut visitor = FmtVisitor::from_codemap(context.codemap, context.config);\n-        visitor.last_pos = self.span.lo;\n         visitor.block_indent = context.block_indent;\n \n+        let prefix = match self.rules {\n+            ast::BlockCheckMode::PushUnsafeBlock(..) |\n+            ast::BlockCheckMode::UnsafeBlock(..) => {\n+                let snippet = try_opt!(context.codemap.span_to_snippet(self.span).ok());\n+                let open_pos = try_opt!(snippet.find_uncommented(\"{\"));\n+                visitor.last_pos = self.span.lo + BytePos(open_pos as u32);\n+\n+                // Extract comment between unsafe and block start.\n+                let trimmed = &snippet[6..open_pos].trim();\n+\n+                if trimmed.len() > 0 {\n+                    // 9 = \"unsafe  {\".len(), 7 = \"unsafe \".len()\n+                    format!(\"unsafe {} \", rewrite_comment(trimmed, true, width - 9, offset + 7))\n+                } else {\n+                    \"unsafe \".to_owned()\n+                }\n+            }\n+            ast::BlockCheckMode::PopUnsafeBlock(..) |\n+            ast::BlockCheckMode::DefaultBlock => {\n+                visitor.last_pos = self.span.lo;\n+\n+                String::new()\n+            }\n+        };\n+\n         visitor.visit_block(self);\n \n         // Push text between last block item and end of block\n@@ -119,7 +144,7 @@ impl Rewrite for ast::Block {\n         let file_name = context.codemap.span_to_filename(self.span);\n         let string_buffer = visitor.changes.get(&file_name);\n \n-        Some(string_buffer.to_string())\n+        Some(format!(\"{}{}\", prefix, string_buffer))\n     }\n }\n "}, {"sha": "f4ccfdd5c250875a9b316e4066b42ed7487f17ff", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc43b81200e268160f5c945369c377d765142886/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc43b81200e268160f5c945369c377d765142886/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=bc43b81200e268160f5c945369c377d765142886", "patch": "@@ -73,7 +73,6 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n         debug!(\"visit_block: {:?} {:?}\",\n                self.codemap.lookup_char_pos(b.span.lo),\n                self.codemap.lookup_char_pos(b.span.hi));\n-        self.format_missing(b.span.lo);\n \n         self.changes.push_str_span(b.span, \"{\");\n         self.last_pos = self.last_pos + BytePos(1);\n@@ -82,6 +81,7 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n         for stmt in &b.stmts {\n             self.visit_stmt(&stmt)\n         }\n+\n         match b.expr {\n             Some(ref e) => {\n                 self.format_missing_with_indent(e.span.lo);"}, {"sha": "e7862b83e50b7307637baf8c2ed48962776d00cd", "filename": "tests/source/expr.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bc43b81200e268160f5c945369c377d765142886/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc43b81200e268160f5c945369c377d765142886/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=bc43b81200e268160f5c945369c377d765142886", "patch": "@@ -73,3 +73,21 @@ fn bar() {\n              aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n              a);\n }\n+\n+fn baz() {\n+    unsafe    /*    {}{}{}{{{{}}   */   {\n+        let foo = 1u32;\n+    }\n+\n+    unsafe /* very looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong comment */ {}\n+\n+    unsafe // So this is a very long comment.\n+           // Multi-line, too.\n+           // Will it still format correctly?\n+    {\n+    }\n+\n+    unsafe {\n+        // Regular unsafe block\n+    }\n+}"}, {"sha": "a1875a0ec264a545c58e4aec960678dcafe93776", "filename": "tests/target/expr.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bc43b81200e268160f5c945369c377d765142886/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc43b81200e268160f5c945369c377d765142886/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=bc43b81200e268160f5c945369c377d765142886", "patch": "@@ -102,3 +102,22 @@ fn bar() {\n     let x = (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n              a);\n }\n+\n+fn baz() {\n+    unsafe /* {}{}{}{{{{}} */ {\n+        let foo = 1u32;\n+    }\n+\n+    unsafe /* very looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong\n+            * comment */ {\n+    }\n+\n+    unsafe /* So this is a very long comment.\n+            * Multi-line, too.\n+            * Will it still format correctly? */ {\n+    }\n+\n+    unsafe {\n+        // Regular unsafe block\n+    }\n+}"}]}