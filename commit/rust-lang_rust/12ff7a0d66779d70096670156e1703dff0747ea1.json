{"sha": "12ff7a0d66779d70096670156e1703dff0747ea1", "node_id": "C_kwDOAAsO6NoAKDEyZmY3YTBkNjY3NzlkNzAwOTY2NzAxNTZlMTcwM2RmZjA3NDdlYTE", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-07-20T15:35:06Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-07-20T15:35:06Z"}, "message": "Use new tracking issue for proc_macro::tracked_*.", "tree": {"sha": "fe24d2a9a23958dfd879fe4b6b18f6f55a9144e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe24d2a9a23958dfd879fe4b6b18f6f55a9144e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12ff7a0d66779d70096670156e1703dff0747ea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12ff7a0d66779d70096670156e1703dff0747ea1", "html_url": "https://github.com/rust-lang/rust/commit/12ff7a0d66779d70096670156e1703dff0747ea1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12ff7a0d66779d70096670156e1703dff0747ea1/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acdcdfb61b7b472bfacbb8bb889bdf3204827f2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/acdcdfb61b7b472bfacbb8bb889bdf3204827f2e", "html_url": "https://github.com/rust-lang/rust/commit/acdcdfb61b7b472bfacbb8bb889bdf3204827f2e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2573cf79c79614ed984e21e89a43d77b04cf47de", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12ff7a0d66779d70096670156e1703dff0747ea1/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ff7a0d66779d70096670156e1703dff0747ea1/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=12ff7a0d66779d70096670156e1703dff0747ea1", "patch": "@@ -1385,7 +1385,7 @@ impl fmt::Debug for Literal {\n }\n \n /// Tracked access to environment variables.\n-#[unstable(feature = \"proc_macro_tracked_env\", issue = \"74690\")]\n+#[unstable(feature = \"proc_macro_tracked_env\", issue = \"99515\")]\n pub mod tracked_env {\n     use std::env::{self, VarError};\n     use std::ffi::OsStr;\n@@ -1395,7 +1395,7 @@ pub mod tracked_env {\n     /// compilation, and will be able to rerun the build when the value of that variable changes.\n     /// Besides the dependency tracking this function should be equivalent to `env::var` from the\n     /// standard library, except that the argument must be UTF-8.\n-    #[unstable(feature = \"proc_macro_tracked_env\", issue = \"74690\")]\n+    #[unstable(feature = \"proc_macro_tracked_env\", issue = \"99515\")]\n     pub fn var<K: AsRef<OsStr> + AsRef<str>>(key: K) -> Result<String, VarError> {\n         let key: &str = key.as_ref();\n         let value = env::var(key);\n@@ -1405,13 +1405,13 @@ pub mod tracked_env {\n }\n \n /// Tracked access to additional files.\n-#[unstable(feature = \"track_path\", issue = \"73921\")]\n+#[unstable(feature = \"track_path\", issue = \"99515\")]\n pub mod tracked_path {\n \n     /// Track a file explicitly.\n     ///\n     /// Commonly used for tracking asset preprocessing.\n-    #[unstable(feature = \"track_path\", issue = \"73921\")]\n+    #[unstable(feature = \"track_path\", issue = \"99515\")]\n     pub fn path<P: AsRef<str>>(path: P) {\n         let path: &str = path.as_ref();\n         crate::bridge::client::FreeFunctions::track_path(path);"}]}