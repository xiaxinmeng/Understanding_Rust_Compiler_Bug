{"sha": "c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYjFkNjgwNGJmY2UxYWVlM2E5NWIzY2JmZjNlYWViMTViYWQ5YTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-11T09:52:44Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-06T21:32:30Z"}, "message": "Don't show default docs", "tree": {"sha": "bf835dc20c619c0949b09bbb66a5c0ac6b5b40e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf835dc20c619c0949b09bbb66a5c0ac6b5b40e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4", "html_url": "https://github.com/rust-lang/rust/commit/c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1ad1b03388778893159c549db82b2716c71f102", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ad1b03388778893159c549db82b2716c71f102", "html_url": "https://github.com/rust-lang/rust/commit/c1ad1b03388778893159c549db82b2716c71f102"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "972c2f0e15c5eb33ad63776bf453cb35e1b0536f", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c1b1d6804bfce1aee3a95b3cbff3eaeb15bad9a4", "patch": "@@ -2689,7 +2689,7 @@ fn render_implementor(cx: &Context, implementor: &Impl, w: &mut fmt::Formatter,\n         _ => false,\n     };\n     render_impl(w, cx, implementor, AssocItemLink::Anchor(None), RenderMode::Normal,\n-                implementor.impl_item.stable_since(), true, Some(use_absolute))?;\n+                implementor.impl_item.stable_since(), false, Some(use_absolute))?;\n     Ok(())\n }\n \n@@ -2892,14 +2892,14 @@ fn item_trait(\n         <h2 id='implementors' class='small-section-header'>\\\n           Implementors<a href='#implementors' class='anchor'></a>\\\n         </h2>\\\n-        <ul class='item-list' id='implementors-list'>\\\n+        <div class='item-list' id='implementors-list'>\\\n     \";\n \n     let synthetic_impl_header = \"\\\n         <h2 id='synthetic-implementors' class='small-section-header'>\\\n           Auto implementors<a href='#synthetic-implementors' class='anchor'></a>\\\n         </h2>\\\n-        <ul class='item-list' id='synthetic-implementors-list'>\\\n+        <div class='item-list' id='synthetic-implementors-list'>\\\n     \";\n \n     let mut synthetic_types = Vec::new();\n@@ -3793,11 +3793,14 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n             write!(w, \"<h3 id='{}' class='impl'><span class='in-band'><table class='table-display'>\\\n                        <tbody><tr><td><code>\", id)?;\n             fmt_impl_for_trait_page(&i.inner_impl(), w, use_absolute)?;\n-            for it in &i.inner_impl().items {\n-                if let clean::TypedefItem(ref tydef, _) = it.inner {\n-                    write!(w, \"<span class=\\\"where fmt-newline\\\">  \")?;\n-                    assoc_type(w, it, &vec![], Some(&tydef.type_), AssocItemLink::Anchor(None))?;\n-                    write!(w, \";</span>\")?;\n+            if show_def_docs {\n+                for it in &i.inner_impl().items {\n+                    if let clean::TypedefItem(ref tydef, _) = it.inner {\n+                        write!(w, \"<span class=\\\"where fmt-newline\\\">  \")?;\n+                        assoc_type(w, it, &vec![], Some(&tydef.type_),\n+                                   AssocItemLink::Anchor(None))?;\n+                        write!(w, \";</span>\")?;\n+                    }\n                 }\n             }\n             write!(w, \"</code>\")?;\n@@ -3929,10 +3932,6 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n     let traits = &cache().traits;\n     let trait_ = i.trait_did().map(|did| &traits[&did]);\n \n-    if !show_def_docs {\n-        write!(w, \"<span class='docblock autohide'>\")?;\n-    }\n-\n     write!(w, \"<div class='impl-items'>\")?;\n     for trait_item in &i.inner_impl().items {\n         doc_impl_item(w, cx, trait_item, link, render_mode,\n@@ -3968,10 +3967,6 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n     }\n     write!(w, \"</div>\")?;\n \n-    if !show_def_docs {\n-        write!(w, \"</span>\")?;\n-    }\n-\n     Ok(())\n }\n "}]}