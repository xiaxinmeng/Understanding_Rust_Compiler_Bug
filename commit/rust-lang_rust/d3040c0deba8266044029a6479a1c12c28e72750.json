{"sha": "d3040c0deba8266044029a6479a1c12c28e72750", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMDQwYzBkZWJhODI2NjA0NDAyOWE2NDc5YTFjMTJjMjhlNzI3NTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-25T13:59:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-25T13:59:44Z"}, "message": "Merge #3305\n\n3305: Simplify r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "e10d5b5aeaf627e3f743d42a3ba6114c14b0604e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e10d5b5aeaf627e3f743d42a3ba6114c14b0604e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3040c0deba8266044029a6479a1c12c28e72750", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeVShQCRBK7hj4Ov3rIwAAdHIIAEbUbRmku2WTerwarH5UGPrd\ncYDH2Q+Xf+CfvW5pLDG+Klt6IEyYQnJHAQG+G3vfFHxU+EfxBRw0a6S0kZ7lmIEE\njydNC6NgY1KgTiEiwlq7i3TAvMX0WJJIVHmNzg1JoSejj92JplmrqEBsztC4PIz+\nIrRU8GmgAoqvCZS9qoQsIzJwZIbpUf/LFI6zoLfKa8C8IymeUBUwlZTUFgtpkHBh\nzRrxyuzzFk7ImPIvYqPFfJugJNShMrD/o0diYyNCSVVLBASTCKWakgdMskC/NhZR\nZ+Lb9VGF1QwOE8h0q7nOztTeZKYc3Lae1KGo+GMeSjTBYMkTwbU2mFi4LZE/1kE=\n=iqrr\n-----END PGP SIGNATURE-----\n", "payload": "tree e10d5b5aeaf627e3f743d42a3ba6114c14b0604e\nparent 7763f425d98d630321eb5ace739bab489504a76f\nparent d7da42bd402aedb167bfb33aec7ce61279716ff7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582639184 +0000\ncommitter GitHub <noreply@github.com> 1582639184 +0000\n\nMerge #3305\n\n3305: Simplify r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3040c0deba8266044029a6479a1c12c28e72750", "html_url": "https://github.com/rust-lang/rust/commit/d3040c0deba8266044029a6479a1c12c28e72750", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3040c0deba8266044029a6479a1c12c28e72750/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7763f425d98d630321eb5ace739bab489504a76f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7763f425d98d630321eb5ace739bab489504a76f", "html_url": "https://github.com/rust-lang/rust/commit/7763f425d98d630321eb5ace739bab489504a76f"}, {"sha": "d7da42bd402aedb167bfb33aec7ce61279716ff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7da42bd402aedb167bfb33aec7ce61279716ff7", "html_url": "https://github.com/rust-lang/rust/commit/d7da42bd402aedb167bfb33aec7ce61279716ff7"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "1e7d0621a6cb98bd2a850d5afa4d8c8f2723353d", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d3040c0deba8266044029a6479a1c12c28e72750/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3040c0deba8266044029a6479a1c12c28e72750/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=d3040c0deba8266044029a6479a1c12c28e72750", "patch": "@@ -145,25 +145,25 @@ fn extend_tokens_from_range(\n     let src = db.parse_or_expand(expanded.file_id)?;\n     let parent = shallowest_node(&find_covering_element(&src, expanded.value))?.parent()?;\n \n-    let validate = |token: SyntaxToken| {\n+    let validate = |token: &SyntaxToken| {\n         let node = descend_into_macros(db, file_id, token.clone());\n-        if node.file_id == expanded.file_id\n+        node.file_id == expanded.file_id\n             && node.value.text_range().is_subrange(&parent.text_range())\n-        {\n-            Some(token)\n-        } else {\n-            None\n-        }\n     };\n \n     // Find the first and last text range under expanded parent\n     let first = successors(Some(first_token), |token| {\n-        validate(skip_whitespace(token.prev_token()?, Direction::Prev)?)\n+        let token = token.prev_token()?;\n+        skip_whitespace(token, Direction::Prev)\n     })\n+    .take_while(validate)\n     .last()?;\n+\n     let last = successors(Some(last_token), |token| {\n-        validate(skip_whitespace(token.next_token()?, Direction::Next)?)\n+        let token = token.next_token()?;\n+        skip_whitespace(token, Direction::Next)\n     })\n+    .take_while(validate)\n     .last()?;\n \n     let range = union_range(first.text_range(), last.text_range());\n@@ -334,10 +334,12 @@ fn adj_comments(comment: &ast::Comment, dir: Direction) -> ast::Comment {\n \n #[cfg(test)]\n mod tests {\n-    use super::*;\n-    use crate::mock_analysis::single_file;\n     use test_utils::extract_offset;\n \n+    use crate::mock_analysis::single_file;\n+\n+    use super::*;\n+\n     fn do_check(before: &str, afters: &[&str]) {\n         let (cursor, before) = extract_offset(before);\n         let (analysis, file_id) = single_file(&before);"}]}