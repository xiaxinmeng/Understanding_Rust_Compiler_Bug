{"sha": "1635ef2a1958749e7b0cf4e812e1a87cd919027f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MzVlZjJhMTk1ODc0OWU3YjBjZjRlODEyZTFhODdjZDkxOTAyN2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-06-09T03:12:10Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-10T00:46:53Z"}, "message": "std: Move dynamic_lib from std::unstable to std\n\nThis leaves a deprecated reexport in place temporarily.\n\nCloses #1457.", "tree": {"sha": "15af3b75a8ac11af34f6df1bd46fdba6560a9377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15af3b75a8ac11af34f6df1bd46fdba6560a9377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1635ef2a1958749e7b0cf4e812e1a87cd919027f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1635ef2a1958749e7b0cf4e812e1a87cd919027f", "html_url": "https://github.com/rust-lang/rust/commit/1635ef2a1958749e7b0cf4e812e1a87cd919027f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1635ef2a1958749e7b0cf4e812e1a87cd919027f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eb4d19dc35dc59aaeaf3d53759c9b0341148ef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb4d19dc35dc59aaeaf3d53759c9b0341148ef8", "html_url": "https://github.com/rust-lang/rust/commit/5eb4d19dc35dc59aaeaf3d53759c9b0341148ef8"}], "stats": {"total": 47, "additions": 21, "deletions": 26}, "files": [{"sha": "8fa34dd6d27c91ff254c139ac6df1c006766842b", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -11,7 +11,7 @@\n use std::os;\n use std::str;\n use std::io::process::{ProcessExit, Command, Process, ProcessOutput};\n-use std::unstable::dynamic_lib::DynamicLibrary;\n+use std::dynamic_lib::DynamicLibrary;\n \n fn target_env(lib_path: &str, prog: &str) -> Vec<(String, String)> {\n     let prog = if cfg!(windows) {prog.slice_to(prog.len() - 4)} else {prog};"}, {"sha": "ec46e7f8592d3391ffbc4e69e101bf47df625e61", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -13,7 +13,7 @@\n use std::cell::RefCell;\n use std::os;\n use std::io::fs;\n-use std::unstable::dynamic_lib::DynamicLibrary;\n+use std::dynamic_lib::DynamicLibrary;\n use std::collections::HashSet;\n \n use myfs = util::fs;"}, {"sha": "97ffcf279ae737770234cc0f6aaf42f49e9a364e", "filename": "src/librustc/plugin/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustc%2Fplugin%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustc%2Fplugin%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fplugin%2Fload.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -16,7 +16,7 @@ use plugin::registry::Registry;\n \n use std::mem;\n use std::os;\n-use std::unstable::dynamic_lib::DynamicLibrary;\n+use std::dynamic_lib::DynamicLibrary;\n use syntax::ast;\n use syntax::attr;\n use syntax::visit;"}, {"sha": "fee1d63a274d51ab7530e157bb98d8c0de1e2db1", "filename": "src/librustdoc/plugins.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustdoc%2Fplugins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustdoc%2Fplugins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fplugins.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -10,7 +10,7 @@\n \n use clean;\n \n-use dl = std::unstable::dynamic_lib;\n+use dl = std::dynamic_lib;\n use serialize::json;\n use std::string::String;\n "}, {"sha": "0d77764127465bcee61ad89cb2aefe8c9579efb5", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -15,7 +15,7 @@ use std::io::{Command, TempDir};\n use std::os;\n use std::str;\n use std::string::String;\n-use std::unstable::dynamic_lib::DynamicLibrary;\n+use std::dynamic_lib::DynamicLibrary;\n \n use std::collections::{HashSet, HashMap};\n use testing;"}, {"sha": "fa6efc8a4b18ab34e0b75ce8913ee8c28844e057", "filename": "src/libstd/dynamic_lib.rs", "status": "renamed", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibstd%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibstd%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdynamic_lib.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -16,6 +16,9 @@ A simple wrapper over the platform's dynamic library facilities\n \n */\n \n+#![experimental]\n+#![allow(missing_doc)]\n+\n use clone::Clone;\n use c_str::ToCStr;\n use iter::Iterator;", "previous_filename": "src/libstd/unstable/dynamic_lib.rs"}, {"sha": "e147997334ccc4259296366d347a96c18824c427", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -241,15 +241,12 @@ pub mod sync;\n /* Runtime and platform support */\n \n pub mod c_vec;\n+pub mod dynamic_lib;\n pub mod os;\n pub mod io;\n pub mod path;\n pub mod fmt;\n \n-// Private APIs\n-#[unstable]\n-pub mod unstable;\n-\n // FIXME #7809: This shouldn't be pub, and it should be reexported under 'unstable'\n // but name resolution doesn't work without it being pub.\n #[unstable]\n@@ -279,3 +276,11 @@ mod std {\n     // The test runner requires std::slice::Vector, so re-export std::slice just for it.\n     #[cfg(test)] pub use slice;\n }\n+\n+#[deprecated]\n+#[allow(missing_doc)]\n+#[doc(hiden)]\n+pub mod unstable {\n+    #[deprecated = \"use std::dynamic_lib\"]\n+    pub use dynamic_lib;\n+}"}, {"sha": "423f372f018fdbe799be5fa83abc43d442097350", "filename": "src/libstd/rt/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibstd%2Frt%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Flibstd%2Frt%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fbacktrace.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -614,7 +614,7 @@ mod imp {\n     use rt::mutex::{StaticNativeMutex, NATIVE_MUTEX_INIT};\n     use slice::ImmutableVector;\n     use str::StrSlice;\n-    use unstable::dynamic_lib::DynamicLibrary;\n+    use dynamic_lib::DynamicLibrary;\n \n     #[allow(non_snake_case_functions)]\n     extern \"system\" {"}, {"sha": "985ef2e142cfd2f6b2bd1422e252deb738110a0e", "filename": "src/libstd/unstable/mod.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5eb4d19dc35dc59aaeaf3d53759c9b0341148ef8/src%2Flibstd%2Funstable%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb4d19dc35dc59aaeaf3d53759c9b0341148ef8/src%2Flibstd%2Funstable%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fmod.rs?ref=5eb4d19dc35dc59aaeaf3d53759c9b0341148ef8", "patch": "@@ -1,13 +0,0 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![doc(hidden)]\n-\n-pub mod dynamic_lib;"}, {"sha": "0b4bea49fa2499d0481dbdcbe5178c20c8401fe9", "filename": "src/test/auxiliary/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::unstable::dynamic_lib::DynamicLibrary;\n+use std::dynamic_lib::DynamicLibrary;\n \n #[no_mangle]\n pub fn foo() { bar(); }"}, {"sha": "0f759efb02539bc874d624f4511cd767b819f89e", "filename": "src/test/run-make/extern-fn-reachable/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::unstable::dynamic_lib::DynamicLibrary;\n+use std::dynamic_lib::DynamicLibrary;\n use std::os;\n \n pub fn main() {"}, {"sha": "58f66314e4430dd7fca25b6b6046b192787d9eb1", "filename": "src/test/run-pass/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635ef2a1958749e7b0cf4e812e1a87cd919027f/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs?ref=1635ef2a1958749e7b0cf4e812e1a87cd919027f", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:linkage-visibility.rs\n // ignore-android: FIXME(#10379)\n-// ignore-win32: std::unstable::dynamic_lib does not work on win32 well\n+// ignore-win32: std::dynamic_lib does not work on win32 well\n \n extern crate foo = \"linkage-visibility\";\n "}]}