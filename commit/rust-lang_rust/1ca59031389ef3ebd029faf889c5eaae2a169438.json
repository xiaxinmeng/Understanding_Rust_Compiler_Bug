{"sha": "1ca59031389ef3ebd029faf889c5eaae2a169438", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYTU5MDMxMzg5ZWYzZWJkMDI5ZmFmODg5YzVlYWFlMmExNjk0Mzg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-15T04:50:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-15T04:50:26Z"}, "message": "Make derive lint handle generics correctly", "tree": {"sha": "1eec3a5d82d2d64f95b5960bebe2d546a1707c3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eec3a5d82d2d64f95b5960bebe2d546a1707c3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca59031389ef3ebd029faf889c5eaae2a169438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca59031389ef3ebd029faf889c5eaae2a169438", "html_url": "https://github.com/rust-lang/rust/commit/1ca59031389ef3ebd029faf889c5eaae2a169438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca59031389ef3ebd029faf889c5eaae2a169438/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7843f3f8639f0488bee4a35738006dc794106ac1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7843f3f8639f0488bee4a35738006dc794106ac1", "html_url": "https://github.com/rust-lang/rust/commit/7843f3f8639f0488bee4a35738006dc794106ac1"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "7cb85b8c97b44a40570e7e3e14015c5fc0205265", "filename": "src/derive.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1ca59031389ef3ebd029faf889c5eaae2a169438/src%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca59031389ef3ebd029faf889c5eaae2a169438/src%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fderive.rs?ref=1ca59031389ef3ebd029faf889c5eaae2a169438", "patch": "@@ -1,4 +1,5 @@\n use rustc::lint::*;\n+use rustc::middle::subst::Subst;\n use rustc::middle::ty::TypeVariants;\n use rustc::middle::ty::fast_reject::simplify_type;\n use rustc::middle::ty;\n@@ -70,16 +71,17 @@ impl LintPass for Derive {\n \n impl LateLintPass for Derive {\n     fn check_item(&mut self, cx: &LateContext, item: &Item) {\n-        let ast_ty_to_ty_cache = cx.tcx.ast_ty_to_ty_cache.borrow();\n+        \n \n         if_let_chain! {[\n-            let ItemImpl(_, _, ref ast_generics, Some(ref trait_ref), ref ast_ty, _) = item.node,\n-            let Some(&ty) = ast_ty_to_ty_cache.get(&ast_ty.id)\n+            let ItemImpl(_, _, _, Some(ref trait_ref), _, _) = item.node\n         ], {\n+\n+            let ty = cx.tcx.lookup_item_type(cx.tcx.map.local_def_id(item.id)).ty;\n             if item.attrs.iter().any(is_automatically_derived) {\n                 check_hash_peq(cx, item.span, trait_ref, ty);\n             }\n-            else if !ast_generics.is_lt_parameterized() {\n+            else {\n                 check_copy_clone(cx, item, trait_ref, ty);\n             }\n         }}\n@@ -132,8 +134,9 @@ fn check_copy_clone<'a, 'tcx>(cx: &LateContext<'a, 'tcx>,\n                               trait_ref: &TraitRef, ty: ty::Ty<'tcx>) {\n     if match_path(&trait_ref.path, &CLONE_TRAIT_PATH) {\n         let parameter_environment = ty::ParameterEnvironment::for_item(cx.tcx, item.id);\n+        let subst_ty = ty.subst(cx.tcx, &parameter_environment.free_substs);\n \n-        if ty.moves_by_default(&parameter_environment, item.span) {\n+        if subst_ty.moves_by_default(&parameter_environment, item.span) {\n             return; // ty is not Copy\n         }\n "}]}