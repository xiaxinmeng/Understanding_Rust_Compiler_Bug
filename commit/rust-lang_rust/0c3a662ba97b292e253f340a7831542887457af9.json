{"sha": "0c3a662ba97b292e253f340a7831542887457af9", "node_id": "C_kwDOAAsO6NoAKDBjM2E2NjJiYTk3YjI5MmUyNTNmMzQwYTc4MzE1NDI4ODc0NTdhZjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-16T22:58:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-16T22:58:27Z"}, "message": "Rollup merge of #90958 - WaffleLapkin:const_align_offset, r=oli-obk\n\nMark `<*const _>::align_offset` and `<*mut _>::align_offset` as `const fn`\n\nThis PR marks the following APIs as `const`:\n```rust\nimpl<T> *const T {\n    pub const fn align_offset(self, align: usize) -> usize;\n}\n\nimpl<T> *mut T {\n    pub const fn align_offset(self, align: usize) -> usize;\n}\n```\n\n`const` implementation simply returns `usize::MAX`.\n\n---\n\nPrevious discussion: https://github.com/rust-lang/rust/pull/90607#discussion_r743638164\n\n---\n\nr? `@oli-obk`", "tree": {"sha": "e7496a9868e119357c401c3fc90b69c5db0f1412", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7496a9868e119357c401c3fc90b69c5db0f1412"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c3a662ba97b292e253f340a7831542887457af9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhlDeUCRBK7hj4Ov3rIwAAIfoIAK905h+S5sEVIsm2o/m4EtVf\nQHjDqTEJWLdM5JY9SF3LMlB4GlIy/1IOkoAgywoyHDYp35pU4rKI404fkecJpKMn\nl4LU2EyObpVHfol+EMgvGjf6VqupqmypNutBnq/jhkQSTjn7Bhk4kcqvIpOeITNV\nBTFUpOC+bIr7urlw76dKBe6o4XJ0MpRT4koWunyVTzY4nIYgC5yjqQJlDaNwHEYT\nGdqEkCLBlyJACG66xFd0AwTWncCPQPfWC7k0x8cci3UoXq6X6uR03RfTgxWyUsLr\nTLcifhPL4VpcFPqJ4qMqpqaqGO5bA6WHVtTRbLW1wOA1zAHExdnmAcyzik/27vU=\n=H0wk\n-----END PGP SIGNATURE-----\n", "payload": "tree e7496a9868e119357c401c3fc90b69c5db0f1412\nparent 862565c3af5a1181100484cc9de0a463a768d56d\nparent f926c0e0d986baaf5caaec3bf21fa996422bb0b7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1637103507 +0100\ncommitter GitHub <noreply@github.com> 1637103507 +0100\n\nRollup merge of #90958 - WaffleLapkin:const_align_offset, r=oli-obk\n\nMark `<*const _>::align_offset` and `<*mut _>::align_offset` as `const fn`\n\nThis PR marks the following APIs as `const`:\n```rust\nimpl<T> *const T {\n    pub const fn align_offset(self, align: usize) -> usize;\n}\n\nimpl<T> *mut T {\n    pub const fn align_offset(self, align: usize) -> usize;\n}\n```\n\n`const` implementation simply returns `usize::MAX`.\n\n---\n\nPrevious discussion: https://github.com/rust-lang/rust/pull/90607#discussion_r743638164\n\n---\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3a662ba97b292e253f340a7831542887457af9", "html_url": "https://github.com/rust-lang/rust/commit/0c3a662ba97b292e253f340a7831542887457af9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c3a662ba97b292e253f340a7831542887457af9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "862565c3af5a1181100484cc9de0a463a768d56d", "url": "https://api.github.com/repos/rust-lang/rust/commits/862565c3af5a1181100484cc9de0a463a768d56d", "html_url": "https://github.com/rust-lang/rust/commit/862565c3af5a1181100484cc9de0a463a768d56d"}, {"sha": "f926c0e0d986baaf5caaec3bf21fa996422bb0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f926c0e0d986baaf5caaec3bf21fa996422bb0b7", "html_url": "https://github.com/rust-lang/rust/commit/f926c0e0d986baaf5caaec3bf21fa996422bb0b7"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "344b483662abd72a8fca92b51dc22654194faf9b", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0c3a662ba97b292e253f340a7831542887457af9/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3a662ba97b292e253f340a7831542887457af9/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=0c3a662ba97b292e253f340a7831542887457af9", "patch": "@@ -879,15 +879,30 @@ impl<T: ?Sized> *const T {\n     /// # } }\n     /// ```\n     #[stable(feature = \"align_offset\", since = \"1.36.0\")]\n-    pub fn align_offset(self, align: usize) -> usize\n+    #[rustc_const_unstable(feature = \"const_align_offset\", issue = \"90962\")]\n+    pub const fn align_offset(self, align: usize) -> usize\n     where\n         T: Sized,\n     {\n         if !align.is_power_of_two() {\n             panic!(\"align_offset: align is not a power-of-two\");\n         }\n-        // SAFETY: `align` has been checked to be a power of 2 above\n-        unsafe { align_offset(self, align) }\n+\n+        fn rt_impl<T>(p: *const T, align: usize) -> usize {\n+            // SAFETY: `align` has been checked to be a power of 2 above\n+            unsafe { align_offset(p, align) }\n+        }\n+\n+        const fn ctfe_impl<T>(_: *const T, _: usize) -> usize {\n+            usize::MAX\n+        }\n+\n+        // SAFETY:\n+        // It is permisseble for `align_offset` to always return `usize::MAX`,\n+        // algorithm correctness can not depend on `align_offset` returning non-max values.\n+        //\n+        // As such the behaviour can't change after replacing `align_offset` with `usize::MAX`, only performance can.\n+        unsafe { intrinsics::const_eval_select((self, align), ctfe_impl, rt_impl) }\n     }\n }\n "}, {"sha": "f3b2bdfefe5dfdfd5747cccd0842eff82e891854", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0c3a662ba97b292e253f340a7831542887457af9/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3a662ba97b292e253f340a7831542887457af9/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=0c3a662ba97b292e253f340a7831542887457af9", "patch": "@@ -1142,15 +1142,30 @@ impl<T: ?Sized> *mut T {\n     /// # } }\n     /// ```\n     #[stable(feature = \"align_offset\", since = \"1.36.0\")]\n-    pub fn align_offset(self, align: usize) -> usize\n+    #[rustc_const_unstable(feature = \"const_align_offset\", issue = \"90962\")]\n+    pub const fn align_offset(self, align: usize) -> usize\n     where\n         T: Sized,\n     {\n         if !align.is_power_of_two() {\n             panic!(\"align_offset: align is not a power-of-two\");\n         }\n-        // SAFETY: `align` has been checked to be a power of 2 above\n-        unsafe { align_offset(self, align) }\n+\n+        fn rt_impl<T>(p: *mut T, align: usize) -> usize {\n+            // SAFETY: `align` has been checked to be a power of 2 above\n+            unsafe { align_offset(p, align) }\n+        }\n+\n+        const fn ctfe_impl<T>(_: *mut T, _: usize) -> usize {\n+            usize::MAX\n+        }\n+\n+        // SAFETY:\n+        // It is permisseble for `align_offset` to always return `usize::MAX`,\n+        // algorithm correctness can not depend on `align_offset` returning non-max values.\n+        //\n+        // As such the behaviour can't change after replacing `align_offset` with `usize::MAX`, only performance can.\n+        unsafe { intrinsics::const_eval_select((self, align), ctfe_impl, rt_impl) }\n     }\n }\n "}]}