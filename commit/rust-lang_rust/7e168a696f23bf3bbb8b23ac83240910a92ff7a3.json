{"sha": "7e168a696f23bf3bbb8b23ac83240910a92ff7a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMTY4YTY5NmYyM2JmM2JiYjhiMjNhYzgzMjQwOTEwYTkyZmY3YTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-31T08:32:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-31T09:56:08Z"}, "message": "reduce slice::panic_safe test size further in Miri", "tree": {"sha": "d684117781fe417bf8ed0241d871d34295563483", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d684117781fe417bf8ed0241d871d34295563483"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e168a696f23bf3bbb8b23ac83240910a92ff7a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e168a696f23bf3bbb8b23ac83240910a92ff7a3", "html_url": "https://github.com/rust-lang/rust/commit/7e168a696f23bf3bbb8b23ac83240910a92ff7a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e168a696f23bf3bbb8b23ac83240910a92ff7a3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a62b7dc92978b03150f58db0dd15f98069ad44e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a62b7dc92978b03150f58db0dd15f98069ad44e", "html_url": "https://github.com/rust-lang/rust/commit/0a62b7dc92978b03150f58db0dd15f98069ad44e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e5675915300dae97b1912946be2b04f3f54ca3d5", "filename": "library/alloc/tests/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e168a696f23bf3bbb8b23ac83240910a92ff7a3/library%2Falloc%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e168a696f23bf3bbb8b23ac83240910a92ff7a3/library%2Falloc%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fslice.rs?ref=7e168a696f23bf3bbb8b23ac83240910a92ff7a3", "patch": "@@ -1722,7 +1722,7 @@ fn panic_safe() {\n     let mut rng = thread_rng();\n \n     // Miri is too slow\n-    let lens = if cfg!(miri) { (1..10).chain(20..21) } else { (1..20).chain(70..MAX_LEN) };\n+    let lens = if cfg!(miri) { (1..10).chain(0..0) } else { (1..20).chain(70..MAX_LEN) };\n     let moduli: &[u32] = if cfg!(miri) { &[5] } else { &[5, 20, 50] };\n \n     for len in lens {"}]}