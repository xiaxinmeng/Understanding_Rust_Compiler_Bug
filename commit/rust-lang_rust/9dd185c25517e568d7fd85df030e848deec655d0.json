{"sha": "9dd185c25517e568d7fd85df030e848deec655d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZDE4NWMyNTUxN2U1NjhkN2ZkODVkZjAzMGU4NDhkZWVjNjU1ZDA=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:28:56Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:22Z"}, "message": "middle: trans: context: remove dead code", "tree": {"sha": "1a6e96db61bb4eb8a52547e61a1e545e134a2d9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a6e96db61bb4eb8a52547e61a1e545e134a2d9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dd185c25517e568d7fd85df030e848deec655d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd185c25517e568d7fd85df030e848deec655d0", "html_url": "https://github.com/rust-lang/rust/commit/9dd185c25517e568d7fd85df030e848deec655d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dd185c25517e568d7fd85df030e848deec655d0/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e53f48be34352c62c4dedba93cd9f774b4141849", "url": "https://api.github.com/repos/rust-lang/rust/commits/e53f48be34352c62c4dedba93cd9f774b4141849", "html_url": "https://github.com/rust-lang/rust/commit/e53f48be34352c62c4dedba93cd9f774b4141849"}], "stats": {"total": 32, "additions": 0, "deletions": 32}, "files": [{"sha": "f98a77eed65a004ce886ba8fcfd29c63f3bfd818", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9dd185c25517e568d7fd85df030e848deec655d0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd185c25517e568d7fd85df030e848deec655d0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=9dd185c25517e568d7fd85df030e848deec655d0", "patch": "@@ -20,7 +20,6 @@ use middle::resolve;\n use middle::trans::adt;\n use middle::trans::base;\n use middle::trans::builder::Builder;\n-use middle::trans::common::{C_i32, C_null};\n use middle::trans::common::{mono_id,ExternMap,tydesc_info,BuilderRef_res,Stats};\n use middle::trans::debuginfo;\n use middle::trans::type_::Type;\n@@ -30,7 +29,6 @@ use util::nodemap::{NodeMap, NodeSet, DefIdMap};\n \n use std::cell::{Cell, RefCell};\n use std::c_str::ToCStr;\n-use std::libc::c_uint;\n use std::ptr;\n use collections::{HashMap, HashSet};\n use syntax::ast;\n@@ -232,36 +230,6 @@ impl CrateContext {\n         Builder::new(self)\n     }\n \n-    pub fn const_inbounds_gepi(&self,\n-                               pointer: ValueRef,\n-                               indices: &[uint]) -> ValueRef {\n-        debug!(\"const_inbounds_gepi: pointer={} indices={:?}\",\n-               self.tn.val_to_str(pointer), indices);\n-        let v: Vec<ValueRef> =\n-            indices.iter().map(|i| C_i32(self, *i as i32)).collect();\n-        unsafe {\n-            llvm::LLVMConstInBoundsGEP(pointer,\n-                                       v.as_ptr(),\n-                                       indices.len() as c_uint)\n-        }\n-    }\n-\n-    pub fn offsetof_gep(&self,\n-                        llptr_ty: Type,\n-                        indices: &[uint]) -> ValueRef {\n-        /*!\n-         * Returns the offset of applying the given GEP indices\n-         * to an instance of `llptr_ty`. Similar to `offsetof` in C,\n-         * except that `llptr_ty` must be a pointer type.\n-         */\n-\n-        unsafe {\n-            let null = C_null(llptr_ty);\n-            llvm::LLVMConstPtrToInt(self.const_inbounds_gepi(null, indices),\n-                                    self.int_type.to_ref())\n-        }\n-    }\n-\n     pub fn tydesc_type(&self) -> Type {\n         self.tn.find_type(\"tydesc\").unwrap()\n     }"}]}