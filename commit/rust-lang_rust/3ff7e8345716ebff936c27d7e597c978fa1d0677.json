{"sha": "3ff7e8345716ebff936c27d7e597c978fa1d0677", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZjdlODM0NTcxNmViZmY5MzZjMjdkN2U1OTdjOTc4ZmExZDA2Nzc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-09-19T06:51:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-19T06:51:21Z"}, "message": "Merge pull request #1156 from sinkuu/break_if_let\n\nPrefer line break at `=`/`in`", "tree": {"sha": "4484f1f096dc54e6bd831f3431590db285b9de04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4484f1f096dc54e6bd831f3431590db285b9de04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ff7e8345716ebff936c27d7e597c978fa1d0677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff7e8345716ebff936c27d7e597c978fa1d0677", "html_url": "https://github.com/rust-lang/rust/commit/3ff7e8345716ebff936c27d7e597c978fa1d0677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ff7e8345716ebff936c27d7e597c978fa1d0677/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d606bbfc6f0aeb8e2c10779072b653ce945b202", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d606bbfc6f0aeb8e2c10779072b653ce945b202", "html_url": "https://github.com/rust-lang/rust/commit/8d606bbfc6f0aeb8e2c10779072b653ce945b202"}, {"sha": "b6bffa65961c6e01cf6a24288a93c6a475980fdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6bffa65961c6e01cf6a24288a93c6a475980fdf", "html_url": "https://github.com/rust-lang/rust/commit/b6bffa65961c6e01cf6a24288a93c6a475980fdf"}], "stats": {"total": 62, "additions": 48, "deletions": 14}, "files": [{"sha": "55f8fa8ba92b2da253cc3a060107f09b4e9518df", "filename": "src/expr.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3ff7e8345716ebff936c27d7e597c978fa1d0677/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff7e8345716ebff936c27d7e597c978fa1d0677/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=3ff7e8345716ebff936c27d7e597c978fa1d0677", "patch": "@@ -1322,20 +1322,28 @@ fn rewrite_pat_expr(context: &RewriteContext,\n                                         offset + extra_offset + spacer.len());\n \n         if let Some(expr_string) = expr_rewrite {\n-            result.push_str(spacer);\n-            result.push_str(&expr_string);\n-            return Some(result);\n+            let pat_simple =\n+                pat.and_then(|p| p.rewrite(context, context.config.max_width, Indent::empty()))\n+                    .map(|s| pat_is_simple(&s));\n+\n+            if pat.is_none() || pat_simple.unwrap_or(false) || !expr_string.contains('\\n') {\n+                result.push_str(spacer);\n+                result.push_str(&expr_string);\n+                return Some(result);\n+            }\n         }\n     }\n \n+    let nested = context.nested_context();\n+\n     // The expression won't fit on the current line, jump to next.\n     result.push('\\n');\n-    result.push_str(&pat_offset.to_string(context.config));\n+    result.push_str(&nested.block_indent.to_string(context.config));\n \n     let expr_rewrite =\n-        expr.rewrite(context,\n-                     try_opt!(context.config.max_width.checked_sub(pat_offset.width())),\n-                     pat_offset);\n+        expr.rewrite(&nested,\n+                     try_opt!(context.config.max_width.checked_sub(nested.block_indent.width())),\n+                     nested.block_indent);\n     result.push_str(&try_opt!(expr_rewrite));\n \n     Some(result)"}, {"sha": "7e18f0a2f4d769d76fd8ba9fb4d12152aedc150d", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff7e8345716ebff936c27d7e597c978fa1d0677/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff7e8345716ebff936c27d7e597c978fa1d0677/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=3ff7e8345716ebff936c27d7e597c978fa1d0677", "patch": "@@ -568,7 +568,7 @@ fn format_impl_ref_and_type(context: &RewriteContext,\n                             split_at_for: bool)\n                             -> Option<String> {\n     if let ast::ItemKind::Impl(unsafety, polarity, ref generics, ref trait_ref, ref self_ty, _) =\n-           item.node {\n+        item.node {\n         let mut result = String::new();\n \n         result.push_str(&*format_visibility(&item.vis));\n@@ -670,7 +670,7 @@ pub fn format_struct(context: &RewriteContext,\n \n pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent) -> Option<String> {\n     if let ast::ItemKind::Trait(unsafety, ref generics, ref type_param_bounds, ref trait_items) =\n-           item.node {\n+        item.node {\n         let mut result = String::new();\n         let header = format!(\"{}{}trait {}\",\n                              format_visibility(&item.vis),"}, {"sha": "f9a0251910c7f4884ee5b1135b3cafe6352a8590", "filename": "tests/source/expr.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3ff7e8345716ebff936c27d7e597c978fa1d0677/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff7e8345716ebff936c27d7e597c978fa1d0677/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=3ff7e8345716ebff936c27d7e597c978fa1d0677", "patch": "@@ -285,3 +285,16 @@ fn complex_if_else() {\n         yo();\n     }\n }\n+\n+fn issue1106() {\n+    {\n+    if let hir::ItemEnum(ref enum_def, ref generics) = self.ast_map.expect_item(enum_node_id).node {\n+    }\n+    }\n+\n+    for entry in\n+    WalkDir::new(path)\n+        .into_iter()\n+        .filter_entry(|entry| exclusions.filter_entry(entry)) {\n+    }\n+}"}, {"sha": "48fa14d8a546afa55dc15a50471fdd2a4320fa33", "filename": "tests/target/expr.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3ff7e8345716ebff936c27d7e597c978fa1d0677/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff7e8345716ebff936c27d7e597c978fa1d0677/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=3ff7e8345716ebff936c27d7e597c978fa1d0677", "patch": "@@ -55,8 +55,8 @@ fn foo() -> bool {\n     }\n \n     if let (some_very_large,\n-            tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple) = 1111 +\n-                                                                                         2222 {}\n+            tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple) =\n+        1111 + 2222 {}\n \n     if let (some_very_large,\n             tuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuple) = 1 + 2 + 3 {\n@@ -283,10 +283,23 @@ fn complex_if_else() {\n     } else if xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + xxxxxxxx {\n         yo();\n     } else if let Some(x) =\n-                  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n         ha();\n     } else if xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +\n               xxxxxxxxx {\n         yo();\n     }\n }\n+\n+fn issue1106() {\n+    {\n+        if let hir::ItemEnum(ref enum_def, ref generics) =\n+            self.ast_map.expect_item(enum_node_id).node {\n+        }\n+    }\n+\n+    for entry in WalkDir::new(path)\n+        .into_iter()\n+        .filter_entry(|entry| exclusions.filter_entry(entry)) {\n+    }\n+}"}, {"sha": "4cf18f0110adfec30b2684802402293884661d53", "filename": "tests/target/loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ff7e8345716ebff936c27d7e597c978fa1d0677/tests%2Ftarget%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff7e8345716ebff936c27d7e597c978fa1d0677/tests%2Ftarget%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Floop.rs?ref=3ff7e8345716ebff936c27d7e597c978fa1d0677", "patch": "@@ -21,8 +21,8 @@ fn main() {\n     while aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa {\n     }\n \n-    'b: for xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx in some_iter(arg1,\n-                                                                                        arg2) {\n+    'b: for xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx in\n+        some_iter(arg1, arg2) {\n         // do smth\n     }\n "}]}