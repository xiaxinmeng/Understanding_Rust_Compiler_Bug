{"sha": "f1695238cae0c7c6598fa736820837d35a2143cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNjk1MjM4Y2FlMGM3YzY1OThmYTczNjgyMDgzN2QzNWEyMTQzY2Y=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-10-12T10:40:48Z"}, "committer": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-10-24T18:07:14Z"}, "message": "disallow unsized enums", "tree": {"sha": "515bc595b40b12644cd07635a6d9a20b43d93e28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/515bc595b40b12644cd07635a6d9a20b43d93e28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1695238cae0c7c6598fa736820837d35a2143cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1695238cae0c7c6598fa736820837d35a2143cf", "html_url": "https://github.com/rust-lang/rust/commit/f1695238cae0c7c6598fa736820837d35a2143cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1695238cae0c7c6598fa736820837d35a2143cf/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac468b67bffc6c386dd04b7955eec013ef99dc39", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac468b67bffc6c386dd04b7955eec013ef99dc39", "html_url": "https://github.com/rust-lang/rust/commit/ac468b67bffc6c386dd04b7955eec013ef99dc39"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "4aff84d81996de6630f7b50e082f469e77cbca43", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1695238cae0c7c6598fa736820837d35a2143cf/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1695238cae0c7c6598fa736820837d35a2143cf/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=f1695238cae0c7c6598fa736820837d35a2143cf", "patch": "@@ -856,8 +856,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                              trait_name));\n             }\n             ObligationCauseCode::FieldSized => {\n-                err.note(\"only the last field of a struct or enum variant \\\n-                          may have a dynamically sized type\");\n+                err.note(\"only the last field of a struct may have a dynamically sized type\");\n             }\n             ObligationCauseCode::ConstSized => {\n                 err.note(\"constant expressions must have a statically known size\");"}, {"sha": "e3634cfe5f5e3212367992da1e7bc0991ddcdf1c", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1695238cae0c7c6598fa736820837d35a2143cf/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1695238cae0c7c6598fa736820837d35a2143cf/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=f1695238cae0c7c6598fa736820837d35a2143cf", "patch": "@@ -150,7 +150,7 @@ impl<'ccx, 'gcx> CheckTypeWellFormedVisitor<'ccx, 'gcx> {\n                 self.check_variances_for_type_defn(item, ast_generics);\n             }\n             hir::ItemEnum(ref enum_def, ref ast_generics) => {\n-                self.check_type_defn(item, false, |fcx| {\n+                self.check_type_defn(item, true, |fcx| {\n                     fcx.enum_variants(enum_def)\n                 });\n "}]}