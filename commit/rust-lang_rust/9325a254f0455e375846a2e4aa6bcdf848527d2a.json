{"sha": "9325a254f0455e375846a2e4aa6bcdf848527d2a", "node_id": "C_kwDOAAsO6NoAKDkzMjVhMjU0ZjA0NTVlMzc1ODQ2YTJlNGFhNmJjZGY4NDg1MjdkMmE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-25T20:09:54Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-29T16:14:33Z"}, "message": "Make PlaceMention a non-mutating use.", "tree": {"sha": "02fac01b5425cf3f868680e10bcdb33e9798d916", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02fac01b5425cf3f868680e10bcdb33e9798d916"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9325a254f0455e375846a2e4aa6bcdf848527d2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9325a254f0455e375846a2e4aa6bcdf848527d2a", "html_url": "https://github.com/rust-lang/rust/commit/9325a254f0455e375846a2e4aa6bcdf848527d2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9325a254f0455e375846a2e4aa6bcdf848527d2a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77dac91d4f6f7200032f9219a92aad240b000a63", "url": "https://api.github.com/repos/rust-lang/rust/commits/77dac91d4f6f7200032f9219a92aad240b000a63", "html_url": "https://github.com/rust-lang/rust/commit/77dac91d4f6f7200032f9219a92aad240b000a63"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "74e6ce37e971aa5ad4c767004060debe28a31604", "filename": "compiler/rustc_borrowck/src/def_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs?ref=9325a254f0455e375846a2e4aa6bcdf848527d2a", "patch": "@@ -54,7 +54,7 @@ pub fn categorize(context: PlaceContext) -> Option<DefUse> {\n \n         // `PlaceMention` and `AscribeUserType` both evaluate the place, which must not\n         // contain dangling references.\n-        PlaceContext::NonUse(NonUseContext::PlaceMention) |\n+        PlaceContext::NonMutatingUse(NonMutatingUseContext::PlaceMention) |\n         PlaceContext::NonUse(NonUseContext::AscribeUserTy) |\n \n         PlaceContext::MutatingUse(MutatingUseContext::AddressOf) |"}, {"sha": "729bde4d25cab0ffaecd2993797ab21c548da9ed", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=9325a254f0455e375846a2e4aa6bcdf848527d2a", "patch": "@@ -771,12 +771,10 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n \n         match context {\n             PlaceContext::MutatingUse(_) => ty::Invariant,\n-            PlaceContext::NonUse(StorageDead | StorageLive | PlaceMention | VarDebugInfo) => {\n-                ty::Invariant\n-            }\n+            PlaceContext::NonUse(StorageDead | StorageLive | VarDebugInfo) => ty::Invariant,\n             PlaceContext::NonMutatingUse(\n-                Inspect | Copy | Move | SharedBorrow | ShallowBorrow | UniqueBorrow | AddressOf\n-                | Projection,\n+                Inspect | Copy | Move | PlaceMention | SharedBorrow | ShallowBorrow | UniqueBorrow\n+                | AddressOf | Projection,\n             ) => ty::Covariant,\n             PlaceContext::NonUse(AscribeUserTy) => ty::Covariant,\n         }"}, {"sha": "569599faa362bb8bda84c59a365600473df78025", "filename": "compiler/rustc_codegen_ssa/src/mir/analyze.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs?ref=9325a254f0455e375846a2e4aa6bcdf848527d2a", "patch": "@@ -203,7 +203,9 @@ impl<'mir, 'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> Visitor<'tcx>\n                 self.assign(local, DefLocation::Body(location));\n             }\n \n-            PlaceContext::NonUse(_) | PlaceContext::MutatingUse(MutatingUseContext::Retag) => {}\n+            PlaceContext::NonUse(_)\n+            | PlaceContext::NonMutatingUse(NonMutatingUseContext::PlaceMention)\n+            | PlaceContext::MutatingUse(MutatingUseContext::Retag) => {}\n \n             PlaceContext::NonMutatingUse(\n                 NonMutatingUseContext::Copy | NonMutatingUseContext::Move,"}, {"sha": "eb5bcbb67ebbf75c5d10c6668ed7551924afd503", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=9325a254f0455e375846a2e4aa6bcdf848527d2a", "patch": "@@ -410,7 +410,7 @@ macro_rules! make_mir_visitor {\n                     StatementKind::PlaceMention(place) => {\n                         self.visit_place(\n                             place,\n-                            PlaceContext::NonUse(NonUseContext::PlaceMention),\n+                            PlaceContext::NonMutatingUse(NonMutatingUseContext::PlaceMention),\n                             location\n                         );\n                     }\n@@ -1251,6 +1251,8 @@ pub enum NonMutatingUseContext {\n     UniqueBorrow,\n     /// AddressOf for *const pointer.\n     AddressOf,\n+    /// PlaceMention statement.\n+    PlaceMention,\n     /// Used as base for another place, e.g., `x` in `x.y`. Will not mutate the place.\n     /// For example, the projection `x.y` is not marked as a mutation in these cases:\n     /// ```ignore (illustrative)\n@@ -1301,8 +1303,6 @@ pub enum NonUseContext {\n     AscribeUserTy,\n     /// The data of a user variable, for debug info.\n     VarDebugInfo,\n-    /// PlaceMention statement.\n-    PlaceMention,\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]"}, {"sha": "aeca0073304eab9ddd7533a07ac97be6a678f618", "filename": "compiler/rustc_mir_dataflow/src/impls/liveness.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fliveness.rs?ref=9325a254f0455e375846a2e4aa6bcdf848527d2a", "patch": "@@ -197,6 +197,7 @@ impl DefUse {\n                 | NonMutatingUseContext::Copy\n                 | NonMutatingUseContext::Inspect\n                 | NonMutatingUseContext::Move\n+                | NonMutatingUseContext::PlaceMention\n                 | NonMutatingUseContext::ShallowBorrow\n                 | NonMutatingUseContext::SharedBorrow\n                 | NonMutatingUseContext::UniqueBorrow,"}, {"sha": "5522591d1742d09202dad85dd40ae2675b5dbfcc", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9325a254f0455e375846a2e4aa6bcdf848527d2a/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=9325a254f0455e375846a2e4aa6bcdf848527d2a", "patch": "@@ -774,6 +774,7 @@ impl Visitor<'_> for CanConstProp {\n             | NonMutatingUse(NonMutatingUseContext::Move)\n             | NonMutatingUse(NonMutatingUseContext::Inspect)\n             | NonMutatingUse(NonMutatingUseContext::Projection)\n+            | NonMutatingUse(NonMutatingUseContext::PlaceMention)\n             | NonUse(_) => {}\n \n             // These could be propagated with a smarter analysis or just some careful thinking about"}, {"sha": "761c074ed94508e09b761fac4d3cf5d1f6a0d975", "filename": "tests/mir-opt/dead-store-elimination/place_mention.main.DeadStoreElimination.diff", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9325a254f0455e375846a2e4aa6bcdf848527d2a/tests%2Fmir-opt%2Fdead-store-elimination%2Fplace_mention.main.DeadStoreElimination.diff", "raw_url": "https://github.com/rust-lang/rust/raw/9325a254f0455e375846a2e4aa6bcdf848527d2a/tests%2Fmir-opt%2Fdead-store-elimination%2Fplace_mention.main.DeadStoreElimination.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fdead-store-elimination%2Fplace_mention.main.DeadStoreElimination.diff?ref=9325a254f0455e375846a2e4aa6bcdf848527d2a", "patch": "@@ -9,13 +9,13 @@\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/place_mention.rs:+3:18: +3:36\n--         _1 = (const \"Hello\", const \"World\"); // scope 0 at $DIR/place_mention.rs:+3:18: +3:36\n--                                          // mir::Constant\n--                                          // + span: $DIR/place_mention.rs:8:19: 8:26\n--                                          // + literal: Const { ty: &str, val: Value(Slice(..)) }\n--                                          // mir::Constant\n--                                          // + span: $DIR/place_mention.rs:8:28: 8:35\n--                                          // + literal: Const { ty: &str, val: Value(Slice(..)) }\n+          _1 = (const \"Hello\", const \"World\"); // scope 0 at $DIR/place_mention.rs:+3:18: +3:36\n+                                           // mir::Constant\n+                                           // + span: $DIR/place_mention.rs:8:19: 8:26\n+                                           // + literal: Const { ty: &str, val: Value(Slice(..)) }\n+                                           // mir::Constant\n+                                           // + span: $DIR/place_mention.rs:8:28: 8:35\n+                                           // + literal: Const { ty: &str, val: Value(Slice(..)) }\n           PlaceMention(_1);                // scope 0 at $DIR/place_mention.rs:+3:18: +3:36\n           StorageDead(_1);                 // scope 0 at $DIR/place_mention.rs:+3:36: +3:37\n           _0 = const ();                   // scope 0 at $DIR/place_mention.rs:+0:11: +4:2"}]}