{"sha": "9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f", "node_id": "C_kwDOAAsO6NoAKDlhYTFjY2RhZTg1YjlkNWIxNTc1ZjdhMmU0OGNmMzExOTY0NjJlMGY", "commit": {"author": {"name": "Sprite", "email": "SpriteOvO@gmail.com", "date": "2022-06-14T19:06:28Z"}, "committer": {"name": "Sprite", "email": "SpriteOvO@gmail.com", "date": "2022-06-15T17:11:26Z"}, "message": "Fix `cfg(not)` and `cfg(all)` causing Rustdoc stab to disappear", "tree": {"sha": "045cca8f8320df116844decfea0c505d9c34485b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/045cca8f8320df116844decfea0c505d9c34485b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f", "html_url": "https://github.com/rust-lang/rust/commit/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f/comments", "author": {"login": "SpriteOvO", "id": 33660554, "node_id": "MDQ6VXNlcjMzNjYwNTU0", "avatar_url": "https://avatars.githubusercontent.com/u/33660554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpriteOvO", "html_url": "https://github.com/SpriteOvO", "followers_url": "https://api.github.com/users/SpriteOvO/followers", "following_url": "https://api.github.com/users/SpriteOvO/following{/other_user}", "gists_url": "https://api.github.com/users/SpriteOvO/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpriteOvO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpriteOvO/subscriptions", "organizations_url": "https://api.github.com/users/SpriteOvO/orgs", "repos_url": "https://api.github.com/users/SpriteOvO/repos", "events_url": "https://api.github.com/users/SpriteOvO/events{/privacy}", "received_events_url": "https://api.github.com/users/SpriteOvO/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SpriteOvO", "id": 33660554, "node_id": "MDQ6VXNlcjMzNjYwNTU0", "avatar_url": "https://avatars.githubusercontent.com/u/33660554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpriteOvO", "html_url": "https://github.com/SpriteOvO", "followers_url": "https://api.github.com/users/SpriteOvO/followers", "following_url": "https://api.github.com/users/SpriteOvO/following{/other_user}", "gists_url": "https://api.github.com/users/SpriteOvO/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpriteOvO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpriteOvO/subscriptions", "organizations_url": "https://api.github.com/users/SpriteOvO/orgs", "repos_url": "https://api.github.com/users/SpriteOvO/repos", "events_url": "https://api.github.com/users/SpriteOvO/events{/privacy}", "received_events_url": "https://api.github.com/users/SpriteOvO/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "872503d918b2c3266d828f85e42951df74f5e303", "url": "https://api.github.com/repos/rust-lang/rust/commits/872503d918b2c3266d828f85e42951df74f5e303", "html_url": "https://github.com/rust-lang/rust/commit/872503d918b2c3266d828f85e42951df74f5e303"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "f33f5d27d1a9fa74c7bbbe4602adb3f3d2bfd9dc", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f", "patch": "@@ -87,15 +87,20 @@ impl Cfg {\n                 }),\n             },\n             MetaItemKind::List(ref items) => {\n+                let orig_len = items.len();\n                 let sub_cfgs =\n                     items.iter().filter_map(|i| Cfg::parse_nested(i, exclude).transpose());\n                 let ret = match name {\n                     sym::all => sub_cfgs.fold(Ok(Cfg::True), |x, y| Ok(x? & y?)),\n                     sym::any => sub_cfgs.fold(Ok(Cfg::False), |x, y| Ok(x? | y?)),\n                     sym::not => {\n-                        let mut sub_cfgs = sub_cfgs.collect::<Vec<_>>();\n-                        if sub_cfgs.len() == 1 {\n-                            Ok(!sub_cfgs.pop().unwrap()?)\n+                        if orig_len == 1 {\n+                            let mut sub_cfgs = sub_cfgs.collect::<Vec<_>>();\n+                            if sub_cfgs.len() == 1 {\n+                                Ok(!sub_cfgs.pop().unwrap()?)\n+                            } else {\n+                                return Ok(None);\n+                            }\n                         } else {\n                             Err(InvalidCfgError { msg: \"expected 1 cfg-pattern\", span: cfg.span })\n                         }\n@@ -304,8 +309,7 @@ impl ops::BitAnd for Cfg {\n impl ops::BitOrAssign for Cfg {\n     fn bitor_assign(&mut self, other: Cfg) {\n         match (self, other) {\n-            (&mut Cfg::True, _) | (_, Cfg::False) => {}\n-            (s, Cfg::True) => *s = Cfg::True,\n+            (Cfg::True, _) | (_, Cfg::False) | (_, Cfg::True) => {}\n             (s @ &mut Cfg::False, b) => *s = b,\n             (&mut Cfg::Any(ref mut a), Cfg::Any(ref mut b)) => {\n                 for c in b.drain(..) {"}, {"sha": "7f72d5d39a75283bc061e15796bca6f723a09a24", "filename": "src/librustdoc/clean/cfg/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs?ref=9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f", "patch": "@@ -161,7 +161,7 @@ fn test_cfg_or() {\n \n         x = word_cfg(\"test\");\n         x |= Cfg::True;\n-        assert_eq!(x, Cfg::True);\n+        assert_eq!(x, word_cfg(\"test\"));\n \n         x = word_cfg(\"test2\");\n         x |= Cfg::False;"}, {"sha": "d73718762a7ae5e7c79ecb33d2f7414a836ffd69", "filename": "src/test/rustdoc/doc-auto-cfg.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f/src%2Ftest%2Frustdoc%2Fdoc-auto-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f/src%2Ftest%2Frustdoc%2Fdoc-auto-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-auto-cfg.rs?ref=9aa1ccdae85b9d5b1575f7a2e48cf31196462e0f", "patch": "@@ -1,5 +1,4 @@\n #![feature(doc_auto_cfg)]\n-\n #![crate_name = \"foo\"]\n \n // @has foo/fn.foo.html\n@@ -12,3 +11,20 @@ pub fn foo() {}\n // @!has - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 'test'\n #[cfg(any(test, doc))]\n pub fn bar() {}\n+\n+// @has foo/fn.appear_1.html\n+// @has - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 'doc'\n+// @!has - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 'non-test'\n+#[cfg(any(doc, not(test)))]\n+pub fn appear_1() {} // issue #98065\n+\n+// @has foo/fn.appear_2.html\n+// @has - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 'doc'\n+// @!has - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 'test'\n+#[cfg(any(doc, all(test)))]\n+pub fn appear_2() {} // issue #98065\n+\n+// @has foo/fn.appear_3.html\n+// @has - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 'doc'\n+#[cfg(any(doc, all()))]\n+pub fn appear_3() {} // issue #98065"}]}