{"sha": "96a8bae3daadea1a4070ec50d8ae13bcb160188e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YThiYWUzZGFhZGVhMWE0MDcwZWM1MGQ4YWUxM2JjYjE2MDE4OGU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-12T16:27:04Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-12T16:27:04Z"}, "message": "add missing urls for BufWriter and BufReader", "tree": {"sha": "e6c62479c2171e4c4772ef15c017487e890cd9db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6c62479c2171e4c4772ef15c017487e890cd9db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96a8bae3daadea1a4070ec50d8ae13bcb160188e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96a8bae3daadea1a4070ec50d8ae13bcb160188e", "html_url": "https://github.com/rust-lang/rust/commit/96a8bae3daadea1a4070ec50d8ae13bcb160188e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96a8bae3daadea1a4070ec50d8ae13bcb160188e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acb50e3481a06089dbd13d860dadc7d8d7cd1649", "url": "https://api.github.com/repos/rust-lang/rust/commits/acb50e3481a06089dbd13d860dadc7d8d7cd1649", "html_url": "https://github.com/rust-lang/rust/commit/acb50e3481a06089dbd13d860dadc7d8d7cd1649"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "9a46cc803f81157c68a332d17f6a12174875a27d", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/96a8bae3daadea1a4070ec50d8ae13bcb160188e/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96a8bae3daadea1a4070ec50d8ae13bcb160188e/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=96a8bae3daadea1a4070ec50d8ae13bcb160188e", "patch": "@@ -21,11 +21,15 @@ use memchr;\n \n /// The `BufReader` struct adds buffering to any reader.\n ///\n-/// It can be excessively inefficient to work directly with a `Read` instance.\n-/// For example, every call to `read` on `TcpStream` results in a system call.\n-/// A `BufReader` performs large, infrequent reads on the underlying `Read`\n+/// It can be excessively inefficient to work directly with a [`Read`] instance.\n+/// For example, every call to [`read`] on [`TcpStream`] results in a system call.\n+/// A `BufReader` performs large, infrequent reads on the underlying [`Read`]\n /// and maintains an in-memory buffer of the results.\n ///\n+/// [`Read`]: ../../std/io/trait.Read.html\n+/// [`read`]: ../../std/net/struct.TcpStream.html#method.read\n+/// [`TcpStream`]: ../../std/net/struct.TcpStream.html\n+///\n /// # Examples\n ///\n /// ```\n@@ -255,15 +259,15 @@ impl<R: Seek> Seek for BufReader<R> {\n /// Wraps a writer and buffers its output.\n ///\n /// It can be excessively inefficient to work directly with something that\n-/// implements `Write`. For example, every call to `write` on `TcpStream`\n+/// implements [`Write`]. For example, every call to [`write`] on [`TcpStream`]\n /// results in a system call. A `BufWriter` keeps an in-memory buffer of data\n /// and writes it to an underlying writer in large, infrequent batches.\n ///\n /// The buffer will be written out when the writer is dropped.\n ///\n /// # Examples\n ///\n-/// Let's write the numbers one through ten to a `TcpStream`:\n+/// Let's write the numbers one through ten to a [`TcpStream`]:\n ///\n /// ```no_run\n /// use std::io::prelude::*;\n@@ -295,6 +299,10 @@ impl<R: Seek> Seek for BufReader<R> {\n /// By wrapping the stream with a `BufWriter`, these ten writes are all grouped\n /// together by the buffer, and will all be written out in one system call when\n /// the `stream` is dropped.\n+///\n+/// [`Write`]: ../../std/io/trait.Write.html\n+/// [`write`]: ../../std/net/struct.TcpStream.html#method.write\n+/// [`TcpStream`]: ../../std/net/struct.TcpStream.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct BufWriter<W: Write> {\n     inner: Option<W>,"}]}