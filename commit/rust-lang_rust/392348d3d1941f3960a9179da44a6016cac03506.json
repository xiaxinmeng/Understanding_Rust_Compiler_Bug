{"sha": "392348d3d1941f3960a9179da44a6016cac03506", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MjM0OGQzZDE5NDFmMzk2MGE5MTc5ZGE0NGE2MDE2Y2FjMDM1MDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-20T13:29:12Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-20T13:29:12Z"}, "message": "Ignore less of the libcore float tests", "tree": {"sha": "98d39629f980841a105083858c800ff2f2ce29aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98d39629f980841a105083858c800ff2f2ce29aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/392348d3d1941f3960a9179da44a6016cac03506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/392348d3d1941f3960a9179da44a6016cac03506", "html_url": "https://github.com/rust-lang/rust/commit/392348d3d1941f3960a9179da44a6016cac03506", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/392348d3d1941f3960a9179da44a6016cac03506/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f54cc7658ffb538fa9ad06727ca0bedd009beaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f54cc7658ffb538fa9ad06727ca0bedd009beaf", "html_url": "https://github.com/rust-lang/rust/commit/5f54cc7658ffb538fa9ad06727ca0bedd009beaf"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "e1d0cdcd42b46d50c888bf6e82f2f575a225e5b1", "filename": "patches/0023-core-Ignore-failing-tests.patch", "status": "modified", "additions": 33, "deletions": 13, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/392348d3d1941f3960a9179da44a6016cac03506/patches%2F0023-core-Ignore-failing-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/392348d3d1941f3960a9179da44a6016cac03506/patches%2F0023-core-Ignore-failing-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0023-core-Ignore-failing-tests.patch?ref=392348d3d1941f3960a9179da44a6016cac03506", "patch": "@@ -34,21 +34,41 @@ diff --git a/src/libcore/tests/num/mod.rs b/src/libcore/tests/num/mod.rs\n index a17c094..5bb11d2 100644\n --- a/src/libcore/tests/num/mod.rs\n +++ b/src/libcore/tests/num/mod.rs\n-@@ -640,6 +639,7 @@ macro_rules! test_float {\n-         mod $modname {\n-             // FIXME(nagisa): these tests should test for sign of -0.0\n-             #[test]\n-+            #[ignore]\n-             fn min() {\n-                 assert_eq!((0.0 as $fty).min(0.0), 0.0);\n-                 assert_eq!((-0.0 as $fty).min(-0.0), -0.0);\n-@@ -662,6 +662,7 @@ macro_rules! test_float {\n-                 assert!(($nan as $fty).min($nan).is_nan());\n+@@ -651,11 +651,12 @@ macro_rules! test_float {\n+                 assert_eq!((9.0 as $fty).min($neginf), $neginf);\n+                 assert_eq!(($neginf as $fty).min(-9.0), $neginf);\n+                 assert_eq!((-9.0 as $fty).min($neginf), $neginf);\n+-                assert_eq!(($nan as $fty).min(9.0), 9.0);\n+-                assert_eq!(($nan as $fty).min(-9.0), -9.0);\n+-                assert_eq!((9.0 as $fty).min($nan), 9.0);\n+-                assert_eq!((-9.0 as $fty).min($nan), -9.0);\n+-                assert!(($nan as $fty).min($nan).is_nan());\n++                // Cranelift fmin has NaN propagation\n++                //assert_eq!(($nan as $fty).min(9.0), 9.0);\n++                //assert_eq!(($nan as $fty).min(-9.0), -9.0);\n++                //assert_eq!((9.0 as $fty).min($nan), 9.0);\n++                //assert_eq!((-9.0 as $fty).min($nan), -9.0);\n++                //assert!(($nan as $fty).min($nan).is_nan());\n              }\n              #[test]\n-+            #[ignore]\n              fn max() {\n-                 assert_eq!((0.0 as $fty).max(0.0), 0.0);\n-                 assert_eq!((-0.0 as $fty).max(-0.0), -0.0);\n+@@ -673,11 +674,12 @@ macro_rules! test_float {\n+                 assert_eq!((9.0 as $fty).max($neginf), 9.0);\n+                 assert_eq!(($neginf as $fty).max(-9.0), -9.0);\n+                 assert_eq!((-9.0 as $fty).max($neginf), -9.0);\n+-                assert_eq!(($nan as $fty).max(9.0), 9.0);\n+-                assert_eq!(($nan as $fty).max(-9.0), -9.0);\n+-                assert_eq!((9.0 as $fty).max($nan), 9.0);\n+-                assert_eq!((-9.0 as $fty).max($nan), -9.0);\n+-                assert!(($nan as $fty).max($nan).is_nan());\n++                // Cranelift fmax has NaN propagation\n++                //assert_eq!(($nan as $fty).max(9.0), 9.0);\n++                //assert_eq!(($nan as $fty).max(-9.0), -9.0);\n++                //assert_eq!((9.0 as $fty).max($nan), 9.0);\n++                //assert_eq!((-9.0 as $fty).max($nan), -9.0);\n++                //assert!(($nan as $fty).max($nan).is_nan());\n+             }\n+             #[test]\n+             fn rem_euclid() {\n -- \n 2.21.0 (Apple Git-122)"}]}