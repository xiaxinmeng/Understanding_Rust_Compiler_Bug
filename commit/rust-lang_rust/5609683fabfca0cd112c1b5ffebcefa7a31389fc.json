{"sha": "5609683fabfca0cd112c1b5ffebcefa7a31389fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MDk2ODNmYWJmY2EwY2QxMTJjMWI1ZmZlYmNlZmE3YTMxMzg5ZmM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-16T16:33:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-16T16:33:10Z"}, "message": "Rollup merge of #67322 - lzutao:nonzero-use-self, r=joshtriplett\n\nuse Self alias in place of macros", "tree": {"sha": "dcc5490f12a0c3f171ae8c71fa6a6a8166f9c512", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcc5490f12a0c3f171ae8c71fa6a6a8166f9c512"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5609683fabfca0cd112c1b5ffebcefa7a31389fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd97HGCRBK7hj4Ov3rIwAAdHIIAICtZ0dDRD2W7x2EhmoikEZG\njwC9K/t4UffuZSfrnbIDbmE8fjJ1zLvB8N63q8bEp9rbU3tWdOIXVXcrZG4EBDOV\n8g5R8orBT8f1WI3L206E6LevrTVsS11D0xcxcN/IUIFRR0LXIQGJ1Mz6QfmxeWZr\nRgAjWRypdxhE54UXX1R29DUctMqjfMfjRxX11z0O0r8qoDQXJmZSJADqiZP1Zvph\nqYb625aqSmwmeY2LEP5G4dZV8O5BiP9FMQ4DmIyztLrruh9lRXdjWHTXZZ1tWfsI\nQMxnOj0JltGfR0igL2GAIFphEZZ+bFoYwdCX0RJXbI8wDyihFFuc3omFleZw2FM=\n=++jW\n-----END PGP SIGNATURE-----\n", "payload": "tree dcc5490f12a0c3f171ae8c71fa6a6a8166f9c512\nparent f05646ec191d6fe30feacf96a8ff3ceaa43f321c\nparent 7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576513990 +0100\ncommitter GitHub <noreply@github.com> 1576513990 +0100\n\nRollup merge of #67322 - lzutao:nonzero-use-self, r=joshtriplett\n\nuse Self alias in place of macros\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5609683fabfca0cd112c1b5ffebcefa7a31389fc", "html_url": "https://github.com/rust-lang/rust/commit/5609683fabfca0cd112c1b5ffebcefa7a31389fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5609683fabfca0cd112c1b5ffebcefa7a31389fc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f05646ec191d6fe30feacf96a8ff3ceaa43f321c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f05646ec191d6fe30feacf96a8ff3ceaa43f321c", "html_url": "https://github.com/rust-lang/rust/commit/f05646ec191d6fe30feacf96a8ff3ceaa43f321c"}, {"sha": "7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "html_url": "https://github.com/rust-lang/rust/commit/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d091a8d86ea49ce1bbdbcff41082187a6b694ad1", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5609683fabfca0cd112c1b5ffebcefa7a31389fc/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5609683fabfca0cd112c1b5ffebcefa7a31389fc/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=5609683fabfca0cd112c1b5ffebcefa7a31389fc", "patch": "@@ -67,7 +67,7 @@ assert_eq!(size_of::<Option<core::num::\", stringify!($Ty), \">>(), size_of::<\", s\n                 )]\n                 #[inline]\n                 pub const unsafe fn new_unchecked(n: $Int) -> Self {\n-                    $Ty(n)\n+                    Self(n)\n                 }\n \n                 /// Creates a non-zero if the given value is not zero.\n@@ -76,7 +76,7 @@ assert_eq!(size_of::<Option<core::num::\", stringify!($Ty), \">>(), size_of::<\", s\n                 pub fn new(n: $Int) -> Option<Self> {\n                     if n != 0 {\n                         // SAFETY: we just checked that there's no `0`\n-                        Some(unsafe { $Ty(n) })\n+                        Some(unsafe { Self(n) })\n                     } else {\n                         None\n                     }"}, {"sha": "d5b0bc420382f6c442a28820cf969e7d4ae0222c", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5609683fabfca0cd112c1b5ffebcefa7a31389fc/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5609683fabfca0cd112c1b5ffebcefa7a31389fc/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=5609683fabfca0cd112c1b5ffebcefa7a31389fc", "patch": "@@ -1263,7 +1263,7 @@ let atomic_forty_two = \", stringify!($atomic_type), \"::new(42);\n                 #[$stable]\n                 #[cfg_attr(not(bootstrap), $const_stable)]\n                 pub const fn new(v: $int_type) -> Self {\n-                    $atomic_type {v: UnsafeCell::new(v)}\n+                    Self {v: UnsafeCell::new(v)}\n                 }\n             }\n "}]}