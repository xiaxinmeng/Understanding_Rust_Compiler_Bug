{"sha": "97270dfb9162bfcefa78a7ed39551069ae267f48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MjcwZGZiOTE2MmJmY2VmYTc4YTdlZDM5NTUxMDY5YWUyNjdmNDg=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-04-23T10:08:07Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-04-23T10:08:07Z"}, "message": "Stop iterating reference after made an edit in \"Convert to named struct\" assist", "tree": {"sha": "5157590f7bc69cf2eb5eb9ddad54b493e80d01c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5157590f7bc69cf2eb5eb9ddad54b493e80d01c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97270dfb9162bfcefa78a7ed39551069ae267f48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97270dfb9162bfcefa78a7ed39551069ae267f48", "html_url": "https://github.com/rust-lang/rust/commit/97270dfb9162bfcefa78a7ed39551069ae267f48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97270dfb9162bfcefa78a7ed39551069ae267f48/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "affd8d351863a4f9f5729eb3487942fa7bfa5755", "url": "https://api.github.com/repos/rust-lang/rust/commits/affd8d351863a4f9f5729eb3487942fa7bfa5755", "html_url": "https://github.com/rust-lang/rust/commit/affd8d351863a4f9f5729eb3487942fa7bfa5755"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "cac4bec3d1444586255d35f8d87760bbe81d20bd", "filename": "crates/ide_assists/src/handlers/convert_tuple_struct_to_named_struct.rs", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/97270dfb9162bfcefa78a7ed39551069ae267f48/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97270dfb9162bfcefa78a7ed39551069ae267f48/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs?ref=97270dfb9162bfcefa78a7ed39551069ae267f48", "patch": "@@ -160,7 +160,7 @@ fn edit_struct_references(\n                         .to_string(),\n                     );\n                 },\n-                _ => ()\n+                _ => return None,\n             }\n         }\n         Some(())\n@@ -170,7 +170,9 @@ fn edit_struct_references(\n         edit.edit_file(file_id);\n         for r in refs {\n             for node in r.name.syntax().ancestors() {\n-                edit_node(edit, node);\n+                if edit_node(edit, node).is_some() {\n+                    break;\n+                }\n             }\n         }\n     }\n@@ -377,6 +379,49 @@ impl A {\n         );\n     }\n \n+    #[test]\n+    fn convert_struct_with_wrapped_references() {\n+        check_assist(\n+            convert_tuple_struct_to_named_struct,\n+            r#\"\n+struct Inner$0(u32);\n+struct Outer(Inner);\n+\n+impl Outer {\n+    fn new() -> Self {\n+        Self(Inner(42))\n+    }\n+\n+    fn into_inner(self) -> u32 {\n+        (self.0).0\n+    }\n+\n+    fn into_inner_destructed(self) -> u32 {\n+        let Outer(Inner(x)) = self;\n+        x\n+    }\n+}\"#,\n+            r#\"\n+struct Inner { field1: u32 }\n+struct Outer(Inner);\n+\n+impl Outer {\n+    fn new() -> Self {\n+        Self(Inner { field1: 42 })\n+    }\n+\n+    fn into_inner(self) -> u32 {\n+        (self.0).field1\n+    }\n+\n+    fn into_inner_destructed(self) -> u32 {\n+        let Outer(Inner { field1: x }) = self;\n+        x\n+    }\n+}\"#,\n+        );\n+    }\n+\n     #[test]\n     fn convert_struct_with_multi_file_references() {\n         check_assist("}]}