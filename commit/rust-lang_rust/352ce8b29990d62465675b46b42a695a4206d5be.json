{"sha": "352ce8b29990d62465675b46b42a695a4206d5be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MmNlOGIyOTk5MGQ2MjQ2NTY3NWI0NmI0MmE2OTVhNDIwNmQ1YmU=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-09-27T04:19:46Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-10-01T04:58:07Z"}, "message": "Test a type with drop glue but no Drop impl", "tree": {"sha": "4f37001508f630faed4f777a3c893c044efe9893", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f37001508f630faed4f777a3c893c044efe9893"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/352ce8b29990d62465675b46b42a695a4206d5be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl91Yd8ACgkQ+boUO5X/\nbYKHgg//d5ccCTH/k74AJWePKMMIGSh32YbS/HcURYIWsC4uZmIuAvtgdNvgo5pe\n7iWjnysHYQko0vqHI9poxUVvKawTNhEETVX+OpAfL0GoAja50pDrDE6lnC4fFabQ\n6L8awDoMX4oIuc4HON+wUiAlG1kUQa7S41gZ5oNNuoJ721Tp+FdGx1D0EU9pUOKY\nEOm4Omczmff7BUPamvFlkUaEDU51bmDXOkGVaLUBqUuo1VhZw2/52j+X/tXT35DP\nh3EoalyiPiD2YK2uiTB0DHzB1jSBigtrns8EX4PGclD3PItC1HxEMyQtbP52jumt\n6mUjfR0DDzcbjqL86yu9+6y6sniLbJqOMHgkhsE6l3cVZVHjQK8Fp+iPUAYCrL5z\nm8WUiEqldJq2W8OHCjQ1jOpA8O9zw84acnqTjibDqsJOfBwponj4g9QEX3uT/P1t\nreZNhbY3stb07dE7Rcyn1kUNoTUU8tsPmG97+RRmKzawj5es9nD4mI9kQyJ+Fj+n\nOAtvgwrF7G9N3yDDiCFhBXRX7ubPd4VCDv3sJcVGZ0cZa/KN0fTD/EibuiULWmHu\nk5xBmAvovoyPxl1TFwvbczxeV32Fo/7XEzcLxN04qKvDm/PsOnZAq0VauhuiV1su\nS4jyrNoPNj9PHZUl1NGKL0JYcTGWIUyPn5CH1LpALNeoGDtIJlI=\n=LXFP\n-----END PGP SIGNATURE-----", "payload": "tree 4f37001508f630faed4f777a3c893c044efe9893\nparent 0f6284c88d521904bb0ada34325a0372a1ea26f1\nauthor David Tolnay <dtolnay@gmail.com> 1601180386 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1601528287 -0700\n\nTest a type with drop glue but no Drop impl\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/352ce8b29990d62465675b46b42a695a4206d5be", "html_url": "https://github.com/rust-lang/rust/commit/352ce8b29990d62465675b46b42a695a4206d5be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/352ce8b29990d62465675b46b42a695a4206d5be/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f6284c88d521904bb0ada34325a0372a1ea26f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6284c88d521904bb0ada34325a0372a1ea26f1", "html_url": "https://github.com/rust-lang/rust/commit/0f6284c88d521904bb0ada34325a0372a1ea26f1"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "37e6420fc9832463d1a2fa7f6b0db1d09287fbb7", "filename": "src/test/ui/lint/lint-const-item-mutation.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/352ce8b29990d62465675b46b42a695a4206d5be/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/352ce8b29990d62465675b46b42a695a4206d5be/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs?ref=352ce8b29990d62465675b46b42a695a4206d5be", "patch": "@@ -18,10 +18,16 @@ impl Drop for Mutable {\n     }\n }\n \n+struct Mutable2 { // this one has drop glue but not a Drop impl\n+    msg: &'static str,\n+    other: String,\n+}\n+\n const ARRAY: [u8; 1] = [25];\n const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw_ptr: 2 as *mut u8 };\n const RAW_PTR: *mut u8 = 1 as *mut u8;\n const MUTABLE: Mutable = Mutable { msg: \"\" };\n+const MUTABLE2: Mutable2 = Mutable2 { msg: \"\", other: String::new() };\n \n fn main() {\n     ARRAY[0] = 5; //~ WARN attempting to modify\n@@ -41,4 +47,5 @@ fn main() {\n     }\n \n     MUTABLE.msg = \"wow\"; // no warning, because Drop observes the mutation\n+    MUTABLE2.msg = \"wow\"; //~ WARN attempting to modify\n }"}, {"sha": "20a8ed0d783865a1933e91daaf3719061b296b8d", "filename": "src/test/ui/lint/lint-const-item-mutation.stderr", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/352ce8b29990d62465675b46b42a695a4206d5be/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/352ce8b29990d62465675b46b42a695a4206d5be/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr?ref=352ce8b29990d62465675b46b42a695a4206d5be", "patch": "@@ -1,45 +1,45 @@\n warning: attempting to modify a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:27:5\n+  --> $DIR/lint-const-item-mutation.rs:33:5\n    |\n LL |     ARRAY[0] = 5;\n    |     ^^^^^^^^^^^^\n    |\n    = note: `#[warn(const_item_mutation)]` on by default\n    = note: each usage of a `const` item creates a new temporary - the original `const` item will not be modified\n note: `const` item defined here\n-  --> $DIR/lint-const-item-mutation.rs:21:1\n+  --> $DIR/lint-const-item-mutation.rs:26:1\n    |\n LL | const ARRAY: [u8; 1] = [25];\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attempting to modify a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:28:5\n+  --> $DIR/lint-const-item-mutation.rs:34:5\n    |\n LL |     MY_STRUCT.field = false;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: each usage of a `const` item creates a new temporary - the original `const` item will not be modified\n note: `const` item defined here\n-  --> $DIR/lint-const-item-mutation.rs:22:1\n+  --> $DIR/lint-const-item-mutation.rs:27:1\n    |\n LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw_ptr: 2 as *mut u8 };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attempting to modify a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:29:5\n+  --> $DIR/lint-const-item-mutation.rs:35:5\n    |\n LL |     MY_STRUCT.inner_array[0] = 'b';\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: each usage of a `const` item creates a new temporary - the original `const` item will not be modified\n note: `const` item defined here\n-  --> $DIR/lint-const-item-mutation.rs:22:1\n+  --> $DIR/lint-const-item-mutation.rs:27:1\n    |\n LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw_ptr: 2 as *mut u8 };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: taking a mutable reference to a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:30:5\n+  --> $DIR/lint-const-item-mutation.rs:36:5\n    |\n LL |     MY_STRUCT.use_mut();\n    |     ^^^^^^^^^^^^^^^^^^^\n@@ -52,38 +52,51 @@ note: mutable reference created due to call to this method\n LL |     fn use_mut(&mut self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^\n note: `const` item defined here\n-  --> $DIR/lint-const-item-mutation.rs:22:1\n+  --> $DIR/lint-const-item-mutation.rs:27:1\n    |\n LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw_ptr: 2 as *mut u8 };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: taking a mutable reference to a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:31:5\n+  --> $DIR/lint-const-item-mutation.rs:37:5\n    |\n LL |     &mut MY_STRUCT;\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: each usage of a `const` item creates a new temporary\n    = note: the mutable reference will refer to this temporary, not the original `const` item\n note: `const` item defined here\n-  --> $DIR/lint-const-item-mutation.rs:22:1\n+  --> $DIR/lint-const-item-mutation.rs:27:1\n    |\n LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw_ptr: 2 as *mut u8 };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: taking a mutable reference to a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:32:5\n+  --> $DIR/lint-const-item-mutation.rs:38:5\n    |\n LL |     (&mut MY_STRUCT).use_mut();\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: each usage of a `const` item creates a new temporary\n    = note: the mutable reference will refer to this temporary, not the original `const` item\n note: `const` item defined here\n-  --> $DIR/lint-const-item-mutation.rs:22:1\n+  --> $DIR/lint-const-item-mutation.rs:27:1\n    |\n LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw_ptr: 2 as *mut u8 };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: 6 warnings emitted\n+warning: attempting to modify a `const` item\n+  --> $DIR/lint-const-item-mutation.rs:50:5\n+   |\n+LL |     MUTABLE2.msg = \"wow\";\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: each usage of a `const` item creates a new temporary - the original `const` item will not be modified\n+note: `const` item defined here\n+  --> $DIR/lint-const-item-mutation.rs:30:1\n+   |\n+LL | const MUTABLE2: Mutable2 = Mutable2 { msg: \"\", other: String::new() };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: 7 warnings emitted\n "}]}