{"sha": "4e9527cf6f2d3749554d07a96fe14967f5470ef6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlOTUyN2NmNmYyZDM3NDk1NTRkMDdhOTZmZTE0OTY3ZjU0NzBlZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-16T18:52:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-16T18:52:16Z"}, "message": "Auto merge of #45243 - alexcrichton:tool-rls-rustfmt, r=Mark-Simulacrum\n\n rustbuild: Allow setting rls/rustfmt to \"broken\"\n\nThis commit enables configuring the RLS/rustfmt tools to the \"broken\" state and\nactually get it past CI. The main changes here were to update all dist-related\ncode to handle the situation where the RLS isn't available. This in turn\ninvolved a homegrown preprocessor-like-function to edit the configuration files\nwe pass to the various combined installer tools.", "tree": {"sha": "906dedd24d78a458e30101e7374d552388947e0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/906dedd24d78a458e30101e7374d552388947e0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e9527cf6f2d3749554d07a96fe14967f5470ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e9527cf6f2d3749554d07a96fe14967f5470ef6", "html_url": "https://github.com/rust-lang/rust/commit/4e9527cf6f2d3749554d07a96fe14967f5470ef6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e9527cf6f2d3749554d07a96fe14967f5470ef6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba4e8d7db311b8a43a446cc20c30e4680b94c5d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba4e8d7db311b8a43a446cc20c30e4680b94c5d3", "html_url": "https://github.com/rust-lang/rust/commit/ba4e8d7db311b8a43a446cc20c30e4680b94c5d3"}, {"sha": "5050dadfc616b090d396deed9a4652a85c5f6f04", "url": "https://api.github.com/repos/rust-lang/rust/commits/5050dadfc616b090d396deed9a4652a85c5f6f04", "html_url": "https://github.com/rust-lang/rust/commit/5050dadfc616b090d396deed9a4652a85c5f6f04"}], "stats": {"total": 218, "additions": 129, "deletions": 89}, "files": [{"sha": "02dfa04d9203a35c9106e6404b89752e09085710", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 108, "deletions": 88, "changes": 196, "blob_url": "https://github.com/rust-lang/rust/blob/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=4e9527cf6f2d3749554d07a96fe14967f5470ef6", "patch": "@@ -1035,7 +1035,7 @@ pub struct Rls {\n }\n \n impl Step for Rls {\n-    type Output = PathBuf;\n+    type Output = Option<PathBuf>;\n     const ONLY_BUILD_TARGETS: bool = true;\n     const ONLY_HOSTS: bool = true;\n \n@@ -1050,12 +1050,17 @@ impl Step for Rls {\n         });\n     }\n \n-    fn run(self, builder: &Builder) -> PathBuf {\n+    fn run(self, builder: &Builder) -> Option<PathBuf> {\n         let build = builder.build;\n         let stage = self.stage;\n         let target = self.target;\n         assert!(build.config.extended);\n \n+        if !builder.config.toolstate.rls.testing() {\n+            println!(\"skipping Dist RLS stage{} ({})\", stage, target);\n+            return None\n+        }\n+\n         println!(\"Dist RLS stage{} ({})\", stage, target);\n         let src = build.src.join(\"src/tools/rls\");\n         let release_num = build.release_num(\"rls\");\n@@ -1102,7 +1107,7 @@ impl Step for Rls {\n            .arg(\"--component-name=rls-preview\");\n \n         build.run(&mut cmd);\n-        distdir(build).join(format!(\"{}-{}.tar.gz\", name, target))\n+        Some(distdir(build).join(format!(\"{}-{}.tar.gz\", name, target)))\n     }\n }\n \n@@ -1202,8 +1207,12 @@ impl Step for Extended {\n         // upgrades rustc was upgraded before rust-std. To avoid rustc clobbering\n         // the std files during uninstall. To do this ensure that rustc comes\n         // before rust-std in the list below.\n-        let mut tarballs = vec![rustc_installer, cargo_installer, rls_installer,\n-                                analysis_installer, std_installer];\n+        let mut tarballs = Vec::new();\n+        tarballs.push(rustc_installer);\n+        tarballs.push(cargo_installer);\n+        tarballs.extend(rls_installer.clone());\n+        tarballs.push(analysis_installer);\n+        tarballs.push(std_installer);\n         if build.config.docs {\n             tarballs.push(docs_installer);\n         }\n@@ -1245,35 +1254,38 @@ impl Step for Extended {\n         }\n         rtf.push_str(\"}\");\n \n+        fn filter(contents: &str, marker: &str) -> String {\n+            let start = format!(\"tool-{}-start\", marker);\n+            let end = format!(\"tool-{}-end\", marker);\n+            let mut lines = Vec::new();\n+            let mut omitted = false;\n+            for line in contents.lines() {\n+                if line.contains(&start) {\n+                    omitted = true;\n+                } else if line.contains(&end) {\n+                    omitted = false;\n+                } else if !omitted {\n+                    lines.push(line);\n+                }\n+            }\n+\n+            lines.join(\"\\n\")\n+        }\n+\n+        let xform = |p: &Path| {\n+            let mut contents = String::new();\n+            t!(t!(File::open(p)).read_to_string(&mut contents));\n+            if rls_installer.is_none() {\n+                contents = filter(&contents, \"rls\");\n+            }\n+            let ret = tmp.join(p.file_name().unwrap());\n+            t!(t!(File::create(&ret)).write_all(contents.as_bytes()));\n+            return ret\n+        };\n+\n         if target.contains(\"apple-darwin\") {\n             let pkg = tmp.join(\"pkg\");\n             let _ = fs::remove_dir_all(&pkg);\n-            t!(fs::create_dir_all(pkg.join(\"rustc\")));\n-            t!(fs::create_dir_all(pkg.join(\"cargo\")));\n-            t!(fs::create_dir_all(pkg.join(\"rust-docs\")));\n-            t!(fs::create_dir_all(pkg.join(\"rust-std\")));\n-            t!(fs::create_dir_all(pkg.join(\"rls\")));\n-            t!(fs::create_dir_all(pkg.join(\"rust-analysis\")));\n-\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target)),\n-                    &pkg.join(\"rustc\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"cargo\"), target)),\n-                    &pkg.join(\"cargo\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target)),\n-                    &pkg.join(\"rust-docs\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-std\"), target)),\n-                    &pkg.join(\"rust-std\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rls\"), target)),\n-                    &pkg.join(\"rls\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-analysis\"), target)),\n-                    &pkg.join(\"rust-analysis\"));\n-\n-            install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rustc\"), 0o755);\n-            install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"cargo\"), 0o755);\n-            install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-docs\"), 0o755);\n-            install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-std\"), 0o755);\n-            install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rls\"), 0o755);\n-            install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-analysis\"), 0o755);\n \n             let pkgbuild = |component: &str| {\n                 let mut cmd = Command::new(\"pkgbuild\");\n@@ -1283,12 +1295,23 @@ impl Step for Extended {\n                     .arg(pkg.join(component).with_extension(\"pkg\"));\n                 build.run(&mut cmd);\n             };\n-            pkgbuild(\"rustc\");\n-            pkgbuild(\"cargo\");\n-            pkgbuild(\"rust-docs\");\n-            pkgbuild(\"rust-std\");\n-            pkgbuild(\"rls\");\n-            pkgbuild(\"rust-analysis\");\n+\n+            let prepare = |name: &str| {\n+                t!(fs::create_dir_all(pkg.join(name)));\n+                cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, name), target)),\n+                        &pkg.join(name));\n+                install(&etc.join(\"pkg/postinstall\"), &pkg.join(name), 0o755);\n+                pkgbuild(name);\n+            };\n+            prepare(\"rustc\");\n+            prepare(\"cargo\");\n+            prepare(\"rust-docs\");\n+            prepare(\"rust-std\");\n+            prepare(\"rust-analysis\");\n+\n+            if rls_installer.is_some() {\n+                prepare(\"rls\");\n+            }\n \n             // create an 'uninstall' package\n             install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"uninstall\"), 0o755);\n@@ -1298,7 +1321,7 @@ impl Step for Extended {\n             t!(t!(File::create(pkg.join(\"res/LICENSE.txt\"))).write_all(license.as_bytes()));\n             install(&etc.join(\"gfx/rust-logo.png\"), &pkg.join(\"res\"), 0o644);\n             let mut cmd = Command::new(\"productbuild\");\n-            cmd.arg(\"--distribution\").arg(etc.join(\"pkg/Distribution.xml\"))\n+            cmd.arg(\"--distribution\").arg(xform(&etc.join(\"pkg/Distribution.xml\")))\n                 .arg(\"--resources\").arg(pkg.join(\"res\"))\n                 .arg(distdir(build).join(format!(\"{}-{}.pkg\",\n                                                     pkgname(build, \"rust\"),\n@@ -1310,46 +1333,34 @@ impl Step for Extended {\n         if target.contains(\"windows\") {\n             let exe = tmp.join(\"exe\");\n             let _ = fs::remove_dir_all(&exe);\n-            t!(fs::create_dir_all(exe.join(\"rustc\")));\n-            t!(fs::create_dir_all(exe.join(\"cargo\")));\n-            t!(fs::create_dir_all(exe.join(\"rls\")));\n-            t!(fs::create_dir_all(exe.join(\"rust-analysis\")));\n-            t!(fs::create_dir_all(exe.join(\"rust-docs\")));\n-            t!(fs::create_dir_all(exe.join(\"rust-std\")));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target))\n-                        .join(\"rustc\"),\n-                    &exe.join(\"rustc\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"cargo\"), target))\n-                        .join(\"cargo\"),\n-                    &exe.join(\"cargo\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target))\n-                        .join(\"rust-docs\"),\n-                    &exe.join(\"rust-docs\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-std\"), target))\n-                        .join(format!(\"rust-std-{}\", target)),\n-                    &exe.join(\"rust-std\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rls\"), target)).join(\"rls-preview\"),\n-                 &exe.join(\"rls\"));\n-            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-analysis\"), target))\n-                        .join(format!(\"rust-analysis-{}\", target)),\n-                    &exe.join(\"rust-analysis\"));\n-\n-            t!(fs::remove_file(exe.join(\"rustc/manifest.in\")));\n-            t!(fs::remove_file(exe.join(\"cargo/manifest.in\")));\n-            t!(fs::remove_file(exe.join(\"rust-docs/manifest.in\")));\n-            t!(fs::remove_file(exe.join(\"rust-std/manifest.in\")));\n-            t!(fs::remove_file(exe.join(\"rls/manifest.in\")));\n-            t!(fs::remove_file(exe.join(\"rust-analysis/manifest.in\")));\n \n+            let prepare = |name: &str| {\n+                t!(fs::create_dir_all(exe.join(name)));\n+                let dir = if name == \"rust-std\" || name == \"rust-analysis\" {\n+                    format!(\"{}-{}\", name, target)\n+                } else if name == \"rls\" {\n+                    \"rls-preview\".to_string()\n+                } else {\n+                    name.to_string()\n+                };\n+                cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, name), target))\n+                            .join(dir),\n+                        &exe.join(name));\n+                t!(fs::remove_file(exe.join(name).join(\"manifest.in\")));\n+            };\n+            prepare(\"rustc\");\n+            prepare(\"cargo\");\n+            prepare(\"rust-analysis\");\n+            prepare(\"rust-docs\");\n+            prepare(\"rust-std\");\n+            if rls_installer.is_some() {\n+                prepare(\"rls\");\n+            }\n             if target.contains(\"windows-gnu\") {\n-                t!(fs::create_dir_all(exe.join(\"rust-mingw\")));\n-                cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-mingw\"), target))\n-                            .join(\"rust-mingw\"),\n-                        &exe.join(\"rust-mingw\"));\n-                t!(fs::remove_file(exe.join(\"rust-mingw/manifest.in\")));\n+                prepare(\"rust-mingw\");\n             }\n \n-            install(&etc.join(\"exe/rust.iss\"), &exe, 0o644);\n+            install(&xform(&etc.join(\"exe/rust.iss\")), &exe, 0o644);\n             install(&etc.join(\"exe/modpath.iss\"), &exe, 0o644);\n             install(&etc.join(\"exe/upgrade.iss\"), &exe, 0o644);\n             install(&etc.join(\"gfx/rust-logo.ico\"), &exe, 0o644);\n@@ -1413,16 +1424,18 @@ impl Step for Extended {\n                             .arg(\"-dr\").arg(\"Std\")\n                             .arg(\"-var\").arg(\"var.StdDir\")\n                             .arg(\"-out\").arg(exe.join(\"StdGroup.wxs\")));\n-            build.run(Command::new(&heat)\n-                            .current_dir(&exe)\n-                            .arg(\"dir\")\n-                            .arg(\"rls\")\n-                            .args(&heat_flags)\n-                            .arg(\"-cg\").arg(\"RlsGroup\")\n-                            .arg(\"-dr\").arg(\"Rls\")\n-                            .arg(\"-var\").arg(\"var.RlsDir\")\n-                            .arg(\"-out\").arg(exe.join(\"RlsGroup.wxs\"))\n-                            .arg(\"-t\").arg(etc.join(\"msi/remove-duplicates.xsl\")));\n+            if rls_installer.is_some() {\n+                build.run(Command::new(&heat)\n+                                .current_dir(&exe)\n+                                .arg(\"dir\")\n+                                .arg(\"rls\")\n+                                .args(&heat_flags)\n+                                .arg(\"-cg\").arg(\"RlsGroup\")\n+                                .arg(\"-dr\").arg(\"Rls\")\n+                                .arg(\"-var\").arg(\"var.RlsDir\")\n+                                .arg(\"-out\").arg(exe.join(\"RlsGroup.wxs\"))\n+                                .arg(\"-t\").arg(etc.join(\"msi/remove-duplicates.xsl\")));\n+            }\n             build.run(Command::new(&heat)\n                             .current_dir(&exe)\n                             .arg(\"dir\")\n@@ -1456,26 +1469,30 @@ impl Step for Extended {\n                     .arg(\"-dDocsDir=rust-docs\")\n                     .arg(\"-dCargoDir=cargo\")\n                     .arg(\"-dStdDir=rust-std\")\n-                    .arg(\"-dRlsDir=rls\")\n                     .arg(\"-dAnalysisDir=rust-analysis\")\n                     .arg(\"-arch\").arg(&arch)\n                     .arg(\"-out\").arg(&output)\n                     .arg(&input);\n                 add_env(build, &mut cmd, target);\n \n+                if rls_installer.is_some() {\n+                    cmd.arg(\"-dRlsDir=rls\");\n+                }\n                 if target.contains(\"windows-gnu\") {\n                     cmd.arg(\"-dGccDir=rust-mingw\");\n                 }\n                 build.run(&mut cmd);\n             };\n-            candle(&etc.join(\"msi/rust.wxs\"));\n+            candle(&xform(&etc.join(\"msi/rust.wxs\")));\n             candle(&etc.join(\"msi/ui.wxs\"));\n             candle(&etc.join(\"msi/rustwelcomedlg.wxs\"));\n             candle(\"RustcGroup.wxs\".as_ref());\n             candle(\"DocsGroup.wxs\".as_ref());\n             candle(\"CargoGroup.wxs\".as_ref());\n             candle(\"StdGroup.wxs\".as_ref());\n-            candle(\"RlsGroup.wxs\".as_ref());\n+            if rls_installer.is_some() {\n+                candle(\"RlsGroup.wxs\".as_ref());\n+            }\n             candle(\"AnalysisGroup.wxs\".as_ref());\n \n             if target.contains(\"windows-gnu\") {\n@@ -1499,10 +1516,13 @@ impl Step for Extended {\n                 .arg(\"DocsGroup.wixobj\")\n                 .arg(\"CargoGroup.wixobj\")\n                 .arg(\"StdGroup.wixobj\")\n-                .arg(\"RlsGroup.wixobj\")\n                 .arg(\"AnalysisGroup.wixobj\")\n                 .current_dir(&exe);\n \n+            if rls_installer.is_some() {\n+                cmd.arg(\"RlsGroup.wixobj\");\n+            }\n+\n             if target.contains(\"windows-gnu\") {\n                 cmd.arg(\"GccGroup.wixobj\");\n             }"}, {"sha": "328cbf0e5d7102e35fdd143131994719935bbe4f", "filename": "src/bootstrap/toolstate.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fbootstrap%2Ftoolstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fbootstrap%2Ftoolstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftoolstate.rs?ref=4e9527cf6f2d3749554d07a96fe14967f5470ef6", "patch": "@@ -31,6 +31,13 @@ impl ToolState {\n             BuildExpectation::Failing\n         }\n     }\n+\n+    pub fn testing(&self) -> bool {\n+        match *self {\n+            ToolState::Testing => true,\n+            _ => false,\n+        }\n+    }\n }\n \n impl Default for ToolState {"}, {"sha": "c22d60b6c5df1031313c4ed4e30c3c6e9e6d69de", "filename": "src/etc/installer/exe/rust.iss", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fetc%2Finstaller%2Fexe%2Frust.iss", "raw_url": "https://github.com/rust-lang/rust/raw/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fetc%2Finstaller%2Fexe%2Frust.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fexe%2Frust.iss?ref=4e9527cf6f2d3749554d07a96fe14967f5470ef6", "patch": "@@ -46,7 +46,9 @@ Name: gcc; Description: \"Linker and platform libraries\"; Types: full\n Name: docs; Description: \"HTML documentation\"; Types: full\n Name: cargo; Description: \"Cargo, the Rust package manager\"; Types: full\n Name: std; Description: \"The Rust Standard Library\"; Types: full\n+// tool-rls-start\n Name: rls; Description: \"RLS, the Rust Language Server\"\n+// tool-rls-end\n \n [Files]\n Source: \"rustc/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: rust\n@@ -56,8 +58,10 @@ Source: \"rust-mingw/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs;\n Source: \"rust-docs/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: docs\n Source: \"cargo/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: cargo\n Source: \"rust-std/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: std\n+// tool-rls-start\n Source: \"rls/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: rls\n Source: \"rust-analysis/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: rls\n+// tool-rls-end\n \n [Code]\n const"}, {"sha": "d95b096d732f41ede7743ff8d08341b2d54392fc", "filename": "src/etc/installer/msi/rust.wxs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs?ref=4e9527cf6f2d3749554d07a96fe14967f5470ef6", "patch": "@@ -170,8 +170,10 @@\n                     <Directory Id=\"Docs\" Name=\".\" />\n                     <Directory Id=\"Cargo\" Name=\".\" />\n                     <Directory Id=\"Std\" Name=\".\" />\n+                    <!-- tool-rls-start -->\n                     <Directory Id=\"Rls\" Name=\".\" />\n                     <Directory Id=\"Analysis\" Name=\".\" />\n+                    <!-- tool-rls-end -->\n                 </Directory>\n             </Directory>\n \n@@ -275,6 +277,7 @@\n                  <ComponentRef Id=\"PathEnvPerMachine\" />\n                  <ComponentRef Id=\"PathEnvPerUser\" />\n         </Feature>\n+        <!-- tool-rls-start -->\n         <Feature Id=\"RLS\"\n                  Title=\"RLS, the Rust Language Server\"\n                  Display=\"7\"\n@@ -283,6 +286,7 @@\n                  <ComponentGroupRef Id=\"RlsGroup\" />\n                  <ComponentGroupRef Id=\"AnalysisGroup\" />\n         </Feature>\n+        <!-- tool-rls-end -->\n \n         <UIRef Id=\"RustUI\" />\n     </Product>"}, {"sha": "077ee17511655b9018ee0fe5e2270d911edb805a", "filename": "src/etc/installer/pkg/Distribution.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "raw_url": "https://github.com/rust-lang/rust/raw/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml?ref=4e9527cf6f2d3749554d07a96fe14967f5470ef6", "patch": "@@ -16,7 +16,9 @@\n       <line choice=\"rust-std\"/>\n       <line choice=\"cargo\"/>\n       <line choice=\"rust-docs\"/>\n+      <!-- tool-rls-start -->\n       <line choice=\"rls\"/>\n+      <!-- tool-rls-end -->\n       </line>\n       <line choice=\"uninstall\" />\n     </choices-outline>\n@@ -62,6 +64,7 @@\n         >\n         <pkg-ref id=\"org.rust-lang.rust-docs\"/>\n     </choice>\n+    <!-- tool-rls-start -->\n     <choice id=\"rls\" visible=\"true\"\n         title=\"RLS\" description=\"RLS, the Rust Language Server\"\n         selected=\"(!choices.uninstall.selected &amp;&amp; choices['rls'].selected) || (choices.uninstall.selected &amp;&amp; choices.install.selected)\"\n@@ -70,11 +73,14 @@\n         <pkg-ref id=\"org.rust-lang.rls\"/>\n         <pkg-ref id=\"org.rust-lang.rust-analysis\"/>\n     </choice>\n+    <!-- tool-rls-end -->\n     <pkg-ref id=\"org.rust-lang.rustc\" version=\"0\" onConclusion=\"none\">rustc.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.cargo\" version=\"0\" onConclusion=\"none\">cargo.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.rust-docs\" version=\"0\" onConclusion=\"none\">rust-docs.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.rust-std\" version=\"0\" onConclusion=\"none\">rust-std.pkg</pkg-ref>\n+    <!-- tool-rls-start -->\n     <pkg-ref id=\"org.rust-lang.rls\" version=\"0\" onConclusion=\"none\">rls.pkg</pkg-ref>\n+    <!-- tool-rls-end -->\n     <pkg-ref id=\"org.rust-lang.rust-analysis\" version=\"0\" onConclusion=\"none\">rust-analysis.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.uninstall\" version=\"0\" onConclusion=\"none\">uninstall.pkg</pkg-ref>\n     <background file=\"rust-logo.png\" mime-type=\"image/png\""}, {"sha": "e62597c52169fb6a5c15d860a2fcd1534b3794d9", "filename": "src/tools/toolstate.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Ftools%2Ftoolstate.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4e9527cf6f2d3749554d07a96fe14967f5470ef6/src%2Ftools%2Ftoolstate.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftoolstate.toml?ref=4e9527cf6f2d3749554d07a96fe14967f5470ef6", "patch": "@@ -33,4 +33,3 @@ rls = \"Testing\"\n \n # ping @nrc\n rustfmt = \"Testing\"\n-"}]}