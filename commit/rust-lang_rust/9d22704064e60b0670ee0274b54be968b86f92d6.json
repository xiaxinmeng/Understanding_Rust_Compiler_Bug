{"sha": "9d22704064e60b0670ee0274b54be968b86f92d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMjI3MDQwNjRlNjBiMDY3MGVlMDI3NGI1NGJlOTY4Yjg2ZjkyZDY=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-14T16:14:02Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-14T16:14:02Z"}, "message": "Merge #829\n\n829: Be precise about the argument list r=matklad a=kjeremy\n\nFixes #812\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "a75f2a88894f276e6034e15d33cd27be47bbb130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a75f2a88894f276e6034e15d33cd27be47bbb130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d22704064e60b0670ee0274b54be968b86f92d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d22704064e60b0670ee0274b54be968b86f92d6", "html_url": "https://github.com/rust-lang/rust/commit/9d22704064e60b0670ee0274b54be968b86f92d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d22704064e60b0670ee0274b54be968b86f92d6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "b85c189500a47f3c5f7690250611b06e08616c9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b85c189500a47f3c5f7690250611b06e08616c9a", "html_url": "https://github.com/rust-lang/rust/commit/b85c189500a47f3c5f7690250611b06e08616c9a"}, {"sha": "1cd59664621def9d0a694505cf095714e49a6761", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd59664621def9d0a694505cf095714e49a6761", "html_url": "https://github.com/rust-lang/rust/commit/1cd59664621def9d0a694505cf095714e49a6761"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "c5e8d5843ca682ce1248b4253871a5083d7baa01", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9d22704064e60b0670ee0274b54be968b86f92d6/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d22704064e60b0670ee0274b54be968b86f92d6/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=9d22704064e60b0670ee0274b54be968b86f92d6", "patch": "@@ -1,7 +1,7 @@\n use test_utils::tested_by;\n use ra_db::SourceDatabase;\n use ra_syntax::{\n-    AstNode, SyntaxNode, TextUnit, TextRange,\n+    AstNode, SyntaxNode, TextUnit,\n     SyntaxKind::FN_DEF,\n     ast::{self, ArgListOwner},\n     algo::find_node_at_offset,\n@@ -38,28 +38,20 @@ pub(crate) fn call_info(db: &RootDatabase, position: FilePosition) -> Option<Cal\n         }\n     } else if num_params > 1 {\n         // Count how many parameters into the call we are.\n-        // TODO: This is best effort for now and should be fixed at some point.\n-        // It may be better to see where we are in the arg_list and then check\n-        // where offset is in that list (or beyond).\n-        // Revisit this after we get documentation comments in.\n         if let Some(ref arg_list) = calling_node.arg_list() {\n             let arg_list_range = arg_list.syntax().range();\n             if !arg_list_range.contains_inclusive(position.offset) {\n                 tested_by!(call_info_bad_offset);\n                 return None;\n             }\n-            let start = arg_list_range.start();\n \n-            let range_search = TextRange::from_to(start, position.offset);\n-            let mut commas: usize =\n-                arg_list.syntax().text().slice(range_search).to_string().matches(',').count();\n+            let param = arg_list\n+                .args()\n+                .position(|arg| arg.syntax().range().contains(position.offset))\n+                .or(Some(num_params - 1))\n+                .unwrap();\n \n-            // If we have a method call eat the first param since it's just self.\n-            if has_self {\n-                commas += 1;\n-            }\n-\n-            call_info.active_parameter = Some(commas);\n+            call_info.active_parameter = Some(param);\n         }\n     }\n "}]}