{"sha": "e6006c35fba74cbd8779beec09b30bf47b01e01e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MDA2YzM1ZmJhNzRjYmQ4Nzc5YmVlYzA5YjMwYmY0N2IwMWUwMWU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-09T12:00:30Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-09T12:00:30Z"}, "message": "don't unnecessarily convert Align -> u64 -> Align", "tree": {"sha": "9127b51c867132ab28f726fc308ffc60172bddc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9127b51c867132ab28f726fc308ffc60172bddc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6006c35fba74cbd8779beec09b30bf47b01e01e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6006c35fba74cbd8779beec09b30bf47b01e01e", "html_url": "https://github.com/rust-lang/rust/commit/e6006c35fba74cbd8779beec09b30bf47b01e01e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6006c35fba74cbd8779beec09b30bf47b01e01e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "html_url": "https://github.com/rust-lang/rust/commit/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "fbee1c02bff7c2bf12dc2afefd9c8c806235a7a0", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e6006c35fba74cbd8779beec09b30bf47b01e01e/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6006c35fba74cbd8779beec09b30bf47b01e01e/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=e6006c35fba74cbd8779beec09b30bf47b01e01e", "patch": "@@ -426,14 +426,14 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n                     let (sized_size, sized_align) = match *layout {\n                         ty::layout::Layout::Univariant { ref variant, .. } => {\n-                            (variant.offsets.last().map_or(0, |o| o.bytes()), variant.align.abi())\n+                            (variant.offsets.last().map_or(0, |o| o.bytes()), variant.align)\n                         }\n                         _ => {\n                             bug!(\"size_and_align_of_dst: expcted Univariant for `{}`, found {:#?}\",\n                                  ty, layout);\n                         }\n                     };\n-                    debug!(\"DST {} statically sized prefix size: {} align: {}\",\n+                    debug!(\"DST {} statically sized prefix size: {} align: {:?}\",\n                            ty, sized_size, sized_align);\n \n                     // Recurse to get the size of the dynamically sized field (must be\n@@ -454,7 +454,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n                     // Choose max of two known alignments (combined value must\n                     // be aligned according to more restrictive of the two).\n-                    let align = ::std::cmp::max(sized_align, unsized_align);\n+                    let align = sized_align.max(Align::from_bytes(unsized_align, unsized_align).unwrap());\n \n                     // Issue #27023: must add any necessary padding to `size`\n                     // (to make it a multiple of `align`) before returning it.\n@@ -467,8 +467,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     //\n                     //   `(size + (align-1)) & -align`\n \n-                    let size = Size::from_bytes(size).abi_align(Align::from_bytes(align, align).unwrap()).bytes();\n-                    Ok((size, align))\n+                    let size = Size::from_bytes(size).abi_align(align).bytes();\n+                    Ok((size, align.abi()))\n                 }\n                 ty::TyDynamic(..) => {\n                     let (_, vtable) = value.expect_ptr_vtable_pair(&self.memory)?;"}]}