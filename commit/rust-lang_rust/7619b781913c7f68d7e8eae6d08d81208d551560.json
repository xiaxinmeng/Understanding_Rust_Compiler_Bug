{"sha": "7619b781913c7f68d7e8eae6d08d81208d551560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MTliNzgxOTEzYzdmNjhkN2U4ZWFlNmQwOGQ4MTIwOGQ1NTE1NjA=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-04-08T09:56:48Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-04-08T09:56:48Z"}, "message": "Update an obsolete comment about conditions", "tree": {"sha": "3c68b2d0d0dc3e9805d09443e45bc16211d4b1b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c68b2d0d0dc3e9805d09443e45bc16211d4b1b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7619b781913c7f68d7e8eae6d08d81208d551560", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7619b781913c7f68d7e8eae6d08d81208d551560", "html_url": "https://github.com/rust-lang/rust/commit/7619b781913c7f68d7e8eae6d08d81208d551560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7619b781913c7f68d7e8eae6d08d81208d551560/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e415c25bcd81dc1f9a5a3d25d9b48ed2d545336b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e415c25bcd81dc1f9a5a3d25d9b48ed2d545336b", "html_url": "https://github.com/rust-lang/rust/commit/e415c25bcd81dc1f9a5a3d25d9b48ed2d545336b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b6d1b627b70843efe84880ae6d0ef5ca1b83bb06", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7619b781913c7f68d7e8eae6d08d81208d551560/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7619b781913c7f68d7e8eae6d08d81208d551560/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=7619b781913c7f68d7e8eae6d08d81208d551560", "patch": "@@ -237,7 +237,7 @@ impl<'a> BufWriter<'a> {\n \n impl<'a> Writer for BufWriter<'a> {\n     fn write(&mut self, buf: &[u8]) -> IoResult<()> {\n-        // raises a condition if the entire write does not fit in the buffer\n+        // return an error if the entire write does not fit in the buffer\n         let max_size = self.buf.len();\n         if self.pos >= max_size || (self.pos + buf.len()) > max_size {\n             return Err(IoError {"}]}