{"sha": "98fd120ac15948857084821bb3dead9a7f6b65e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZmQxMjBhYzE1OTQ4ODU3MDg0ODIxYmIzZGVhZDlhN2Y2YjY1ZTk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-21T23:25:14Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-21T23:25:14Z"}, "message": "tutorial: Make the comm examples pass", "tree": {"sha": "f0c85831d4e2781c53abf84fe25a60c3b02dee50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0c85831d4e2781c53abf84fe25a60c3b02dee50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98fd120ac15948857084821bb3dead9a7f6b65e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98fd120ac15948857084821bb3dead9a7f6b65e9", "html_url": "https://github.com/rust-lang/rust/commit/98fd120ac15948857084821bb3dead9a7f6b65e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98fd120ac15948857084821bb3dead9a7f6b65e9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de150e02aef60b0744be213f8f5f04e33c833bbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/de150e02aef60b0744be213f8f5f04e33c833bbd", "html_url": "https://github.com/rust-lang/rust/commit/de150e02aef60b0744be213f8f5f04e33c833bbd"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "90360b5cc7f5df26dfd30b5fb25b0287e200b28d", "filename": "doc/tutorial.md", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/98fd120ac15948857084821bb3dead9a7f6b65e9/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/98fd120ac15948857084821bb3dead9a7f6b65e9/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=98fd120ac15948857084821bb3dead9a7f6b65e9", "patch": "@@ -2411,7 +2411,6 @@ For example, imagine we wish to perform two expensive computations\n in parallel.  We might write something like:\n \n ~~~~\n-## xfail-test\n # fn some_expensive_computation() -> int { 42 }\n # fn some_other_expensive_computation() {}\n let port = comm::port::<int>();\n@@ -2459,9 +2458,10 @@ some other expensive computation and then waiting for the child's result\n to arrive on the port:\n \n ~~~~\n-## xfail-test\n # fn some_other_expensive_computation() {}\n # let port = comm::port::<int>();\n+# let chan = comm::chan::<int>(port);\n+# comm::send(chan, 0);\n some_other_expensive_computation();\n let result = comm::recv(port);\n ~~~~\n@@ -2498,9 +2498,12 @@ strified version of the received value, `uint::to_str(value)`.\n \n Here is the code for the parent task:\n ~~~~\n-## xfail-test\n # fn stringifier(from_par: comm::port<uint>,\n-#                to_par: comm::chan<str>) {}\n+#                to_par: comm::chan<str>) {\n+#     comm::send(to_par, \"22\");\n+#     comm::send(to_par, \"23\");\n+#     comm::send(to_par, \"0\");\n+# }\n fn main() {\n     let t = task::spawn_connected(stringifier);\n     comm::send(t.to_child, 22u);"}]}