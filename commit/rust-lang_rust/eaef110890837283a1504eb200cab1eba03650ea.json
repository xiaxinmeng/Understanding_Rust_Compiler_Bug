{"sha": "eaef110890837283a1504eb200cab1eba03650ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZWYxMTA4OTA4MzcyODNhMTUwNGViMjAwY2FiMWViYTAzNjUwZWE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-05-01T01:02:39Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-06-03T11:46:19Z"}, "message": "format payload if possible instead of returning \"Box<Any>\"", "tree": {"sha": "2c43b932ab509c9edfa5055db0ac6f4c6d779cf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c43b932ab509c9edfa5055db0ac6f4c6d779cf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaef110890837283a1504eb200cab1eba03650ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaef110890837283a1504eb200cab1eba03650ea", "html_url": "https://github.com/rust-lang/rust/commit/eaef110890837283a1504eb200cab1eba03650ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaef110890837283a1504eb200cab1eba03650ea/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63f18e108af98be931465fa0d2e7e998c5542aab", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f18e108af98be931465fa0d2e7e998c5542aab", "html_url": "https://github.com/rust-lang/rust/commit/63f18e108af98be931465fa0d2e7e998c5542aab"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "1f80fb6f738bd535d8fa730c5e9b11645bd2a350", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eaef110890837283a1504eb200cab1eba03650ea/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaef110890837283a1504eb200cab1eba03650ea/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=eaef110890837283a1504eb200cab1eba03650ea", "patch": "@@ -440,12 +440,11 @@ fn continue_panic_fmt(info: &PanicInfo) -> ! {\n             PanicPayload { payload, msg, string: None }\n         }\n \n-\n         fn fill(&mut self) -> Option<&mut String> {\n-            if let Some(msg) = self.msg.take() {\n+            if let Some(msg) = self.msg.cloned() {\n                 Some(self.string.get_or_insert_with(|| {\n                     let mut s = String::new();\n-                    drop(s.write_fmt(*msg));\n+                    drop(s.write_fmt(msg));\n                     s\n                 }))\n             } else {\n@@ -459,6 +458,10 @@ fn continue_panic_fmt(info: &PanicInfo) -> ! {\n             if let Some(string) = self.fill() {\n                 let contents = mem::replace(string, String::new());\n                 Box::into_raw(Box::new(contents))\n+            } else if let Some(s) = self.payload.downcast_ref::<&str>() {\n+                Box::into_raw(Box::new(s.to_owned()))\n+            } else if let Some(s) = self.payload.downcast_ref::<String>() {\n+                Box::into_raw(Box::new(s.clone()))\n             } else {\n                 // We can't go from &(Any+Send) to Box<Any+Send> so the payload is lost here\n                 struct NoPayload;\n@@ -467,7 +470,11 @@ fn continue_panic_fmt(info: &PanicInfo) -> ! {\n         }\n \n         fn get(&mut self) -> &(Any + Send) {\n-            self.payload\n+            if let Some(s) = self.fill() {\n+                s\n+            } else {\n+                self.payload\n+            }\n         }\n     }\n }"}]}