{"sha": "6f47cb1102d8d92ed07d65eac342992a50bdf197", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNDdjYjExMDJkOGQ5MmVkMDdkNjVlYWMzNDI5OTJhNTBiZGYxOTc=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-27T06:52:16Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-27T20:12:09Z"}, "message": "Add TOC to contribution instructions\n\nAlso changed some headings and re-ordered the paragraphs in the testing\nguide.\n\n(I used [vim-markdown-toc](https://github.com/mzlogin/vim-markdown-toc) to\ngenerate it automatically.)", "tree": {"sha": "97297ad402a50178cd3327f550fb57cdfd6f1054", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97297ad402a50178cd3327f550fb57cdfd6f1054"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f47cb1102d8d92ed07d65eac342992a50bdf197", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJa44QZAAoJELb6Bqbg4mZbH2EP/0WDd4ELJSwdS4o/DSnpPYxz\nCs5ZfQr+CTv8iuwNFESKusTN1UYzdjJoEunqqwsLEVH1+oMzoRdaPd/WCJQQibJP\nO3V9mid+vzD5YRWKppAcZ8ggGYjAT8Ej1O0IpdqUyOwig46CWmIIy/Kznot73rqm\nPL0+RcxyNPNr7BuyJXAUQtNVD7/rSjogI7gdSoYOEJ4FTYqvj5ZQVw6m/IwTDATw\nnnG14BI3ms5GzQJRi8S6k783qG68GJf1rUKu6Dk0JlM4UZzBrGBIm8FLSD7tWkvg\n3eFoa398mK0kDo8BRmhcJ2OwwypJvdoa85KRNjrNTcExonkpd3UB43J054OcImBs\nL0PYZdAvKDS4PjpoAoY/XNOV+Ycs7gvKXeM/xCDrsKnuO1ifq4bWXyj9SfjiFgab\nVpztvUyUpb7xMiiCmLjRxjJ3Ot4c0Kj+kULgeTyC729O3tuCgwfC1ncU1PmFD96E\nFLpUrNjBTMWaNxBqlBtLuqQZ9OzfU9gLEyiyrWV9HWNLAyFKbWFurnpu3Y8oQGz2\nIeFkOq2BjVYisxZTME+y214pEGvVKpK02hI9JIxteFpEfOxSjD1ahNTxr8erWTg2\njpKxWZiykmG9dVfkUe14akYIi1ITPELZ5t5pSWngsyq+zRyT29ZVU+0U87GtdzVT\nOIySYJPclVm+3oX5Tt6h\n=hdAM\n-----END PGP SIGNATURE-----", "payload": "tree 97297ad402a50178cd3327f550fb57cdfd6f1054\nparent 7de3a1d392b7e4394cee584bae9275328e40d37b\nauthor Philipp Hansch <dev@phansch.net> 1524811936 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1524859929 +0200\n\nAdd TOC to contribution instructions\n\nAlso changed some headings and re-ordered the paragraphs in the testing\nguide.\n\n(I used [vim-markdown-toc](https://github.com/mzlogin/vim-markdown-toc) to\ngenerate it automatically.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f47cb1102d8d92ed07d65eac342992a50bdf197", "html_url": "https://github.com/rust-lang/rust/commit/6f47cb1102d8d92ed07d65eac342992a50bdf197", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f47cb1102d8d92ed07d65eac342992a50bdf197/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7de3a1d392b7e4394cee584bae9275328e40d37b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7de3a1d392b7e4394cee584bae9275328e40d37b", "html_url": "https://github.com/rust-lang/rust/commit/7de3a1d392b7e4394cee584bae9275328e40d37b"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "d8089675eadde3c82ee14243c9ff73329291b1de", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6f47cb1102d8d92ed07d65eac342992a50bdf197/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/6f47cb1102d8d92ed07d65eac342992a50bdf197/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=6f47cb1102d8d92ed07d65eac342992a50bdf197", "patch": "@@ -9,6 +9,16 @@ visit the `#clippy` IRC channel on `irc.mozilla.org`.\n \n All contributors are expected to follow the [Rust Code of Conduct](http://www.rust-lang.org/conduct.html).\n \n+* [Getting started](#getting-started)\n+  * [Finding something to fix/improve](#finding-something-to-fiximprove)\n+* [Writing code](#writing-code)\n+  * [Author lint](#author-lint)\n+  * [Documentation](#documentation)\n+  * [Running test suite](#running-test-suite)\n+  * [Testing manually](#testing-manually)\n+  * [How Clippy works](#how-clippy-works)\n+* [Contributions](#contributions)\n+\n ## Getting started\n \n High level approach:\n@@ -48,7 +58,7 @@ be more involved and require verifying types. The\n lot of methods that are useful, though one of the most useful would be `expr_ty` (gives the type of\n an AST expression). `match_def_path()` in Clippy's `utils` module can also be useful.\n \n-### Writing code\n+## Writing code\n \n Compiling clippy from scratch can take almost a minute or more depending on your machine.\n However, since Rust 1.24.0 incremental compilation is enabled by default and compile times for small changes should be quick.\n@@ -59,7 +69,7 @@ to lint-writing, though it does get into advanced stuff. Most lints consist of a\n of this.\n \n \n-#### Author lint\n+### Author lint\n \n There is also the internal `author` lint to generate clippy code that detects the offending pattern. It does not work for all of the Rust syntax, but can give a good starting point.\n \n@@ -96,7 +106,7 @@ if_chain! {\n \n If the command was executed successfully, you can copy the code over to where you are implementing your lint.\n \n-#### Documentation\n+### Documentation\n \n Please document your lint with a doc comment akin to the following:\n \n@@ -122,18 +132,20 @@ Once your lint is merged it will show up in the [lint list](https://rust-lang-nu\n \n ### Running test suite\n \n-Clippy uses UI tests. UI tests check that the output of the compiler is exactly as expected.\n-Of course there's little sense in writing the output yourself or copying it around.\n-Therefore you can simply run `tests/ui/update-all-references.sh` (after running\n-`cargo test`) and check whether the output looks as you expect with `git diff`. Commit all\n-`*.stderr` files, too.\n+Use `cargo test` to run the whole testsuite.\n \n If you don't want to wait for all tests to finish, you can also execute a single test file by using `TESTNAME` to specify the test to run:\n \n ```bash\n TESTNAME=ui/empty_line_after_outer_attr cargo test --test compile-test\n ```\n \n+Clippy uses UI tests. UI tests check that the output of the compiler is exactly as expected.\n+Of course there's little sense in writing the output yourself or copying it around.\n+Therefore you should use `tests/ui/update-all-references.sh` (after running\n+`cargo test`) and check whether the output looks as you expect with `git diff`. Commit all\n+`*.stderr` files, too.\n+\n ### Testing manually\n \n Manually testing against an example file is useful if you have added some"}]}