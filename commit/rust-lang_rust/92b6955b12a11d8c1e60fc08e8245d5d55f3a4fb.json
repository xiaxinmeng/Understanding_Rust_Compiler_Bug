{"sha": "92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb", "node_id": "C_kwDOAAsO6NoAKDkyYjY5NTViMTJhMTFkOGMxZTYwZmMwOGU4MjQ1ZDVkNTVmM2E0ZmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-03T12:56:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-03T12:56:24Z"}, "message": "Auto merge of #94512 - RalfJung:sdiv-ub, r=oli-obk\n\nMiri/CTFE: properly treat overflow in (signed) division/rem as UB\n\nTo my surprise, it looks like LLVM treats overflow of signed div/rem as UB. From what I can tell, MIR `Div`/`Rem` directly lowers to the corresponding LLVM operation, so to make that correct we also have to consider these overflows UB in the CTFE/Miri interpreter engine.\n\nr? `@oli-obk`", "tree": {"sha": "d62aa4820f4133331b3c100e69d3022e5be1c6ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d62aa4820f4133331b3c100e69d3022e5be1c6ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb", "html_url": "https://github.com/rust-lang/rust/commit/92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f44a753ce21ad8be1f77bbfb1e21b14d1bb8194", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f44a753ce21ad8be1f77bbfb1e21b14d1bb8194", "html_url": "https://github.com/rust-lang/rust/commit/7f44a753ce21ad8be1f77bbfb1e21b14d1bb8194"}, {"sha": "c45a42a3327baeb6bfd05a0d95e795a9e65a88b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c45a42a3327baeb6bfd05a0d95e795a9e65a88b2", "html_url": "https://github.com/rust-lang/rust/commit/c45a42a3327baeb6bfd05a0d95e795a9e65a88b2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "03f460897fce2f5467b88f89b9efa5ffcda0bcd1", "filename": "tests/ui/modulo_one.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb/tests%2Fui%2Fmodulo_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb/tests%2Fui%2Fmodulo_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_one.stderr?ref=92b6955b12a11d8c1e60fc08e8245d5d55f3a4fb", "patch": "@@ -1,18 +1,18 @@\n-error: this arithmetic operation will overflow\n+error: this operation will panic at runtime\n   --> $DIR/modulo_one.rs:11:5\n    |\n LL |     i32::MIN % (-1); // also caught by rustc\n    |     ^^^^^^^^^^^^^^^ attempt to compute the remainder of `i32::MIN % -1_i32`, which would overflow\n    |\n-   = note: `#[deny(arithmetic_overflow)]` on by default\n+   = note: `#[deny(unconditional_panic)]` on by default\n \n-error: this arithmetic operation will overflow\n+error: this operation will panic at runtime\n   --> $DIR/modulo_one.rs:21:5\n    |\n LL |     INT_MIN % NEG_ONE; // also caught by rustc\n    |     ^^^^^^^^^^^^^^^^^ attempt to compute the remainder of `i64::MIN % -1_i64`, which would overflow\n \n-error: this arithmetic operation will overflow\n+error: this operation will panic at runtime\n   --> $DIR/modulo_one.rs:22:5\n    |\n LL |     INT_MIN % STATIC_NEG_ONE; // ONLY caught by rustc"}]}