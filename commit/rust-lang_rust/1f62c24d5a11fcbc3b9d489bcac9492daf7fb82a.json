{"sha": "1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a", "node_id": "C_kwDOAAsO6NoAKDFmNjJjMjRkNWExMWZjYmMzYjlkNDg5YmNhYzk0OTJkYWY3ZmI4MmE", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T20:40:51Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T20:41:26Z"}, "message": "Fix some copy/paste hysteresis in OsString try_reserve docs\n\nIt appears `find_max_slow` comes from the BinaryHeap docs, where the\ntry_reserve example is a slow implementation of find_max. It has no\nrelevance to this code in OsString though.", "tree": {"sha": "ab6e31441b7307dcc15b1418a980d72f5364b9d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab6e31441b7307dcc15b1418a980d72f5364b9d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHOGY8ACgkQ+boUO5X/\nbYK7jw/8ChuKNsYuCKd3slHUAjqeFHK1Qxvr+pmwQhjQ/MmApNgT9gWWmgqk1QCI\nZ5ouwmn+jNzZloShzcFq1tcjhjNTxj3MtTj8Y6/mDNit+Y/pi9WUBrRfywuN5Cp3\nnWm1Ub+g+BxHbiwG2L2+XuC6/YsYqnshTkgppcRgMPHAS6U086df0IZDqz5uNZkH\nLFF69GUr88rM3RmkHpxRKfGrO8pFvcsXkmW0bxNAM9nH9oJxt3ZezSwOWbON4s18\nUvoH+DzXDzLr62KKRw8PaVZVO1IUB1I8uaqoCKeqQ3Pp5lyohK5X19HWSNI8u9IR\nCfiEDNoOXjYoYkePYNpahN9L387YPb8Ks4uF2NtuCwXVAP7qckWPdK35OmJxrGGE\nawhr77W0pSW3BHacPize+3//OVx/KsUH67iGyWPif70lmiP/523GtqOQKRn9fL+l\nYm41jR8PxtSYBTfC7CUkVbhVJIszlup5K1WdnsQtA1BE15COgNJ4QswD0uToTh7y\n/EObJ9qZEii4FoZrVgvISodRU42YhNBsnwrMGBgsHkr8HjMpI+6/tw+lLGdxOIV5\nQIrRnp7y1+YQloBdU5OWvZDeeN3ravJk3gYEsenOZfCx2gMRrI7xjhrOZOPBk/Yx\n2Bi5RQSwzRtRnHvymzYK1OKaDpWJX/I9pMYDPwqHWrQgnRI3p+4=\n=E2GT\n-----END PGP SIGNATURE-----", "payload": "tree ab6e31441b7307dcc15b1418a980d72f5364b9d6\nparent b07ae1c4d5232abcb89151eb64d81631d11a5d14\nauthor David Tolnay <dtolnay@gmail.com> 1640896851 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1640896886 -0800\n\nFix some copy/paste hysteresis in OsString try_reserve docs\n\nIt appears `find_max_slow` comes from the BinaryHeap docs, where the\ntry_reserve example is a slow implementation of find_max. It has no\nrelevance to this code in OsString though.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a", "html_url": "https://github.com/rust-lang/rust/commit/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b07ae1c4d5232abcb89151eb64d81631d11a5d14", "url": "https://api.github.com/repos/rust-lang/rust/commits/b07ae1c4d5232abcb89151eb64d81631d11a5d14", "html_url": "https://github.com/rust-lang/rust/commit/b07ae1c4d5232abcb89151eb64d81631d11a5d14"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8424e56556952a82e398422f01269840a700f2e9", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=1f62c24d5a11fcbc3b9d489bcac9492daf7fb82a", "patch": "@@ -284,7 +284,7 @@ impl OsString {\n     /// use std::ffi::OsString;\n     /// use std::collections::TryReserveError;\n     ///\n-    /// fn find_max_slow(data: &str) -> Result<OsString, TryReserveError> {\n+    /// fn process_data(data: &str) -> Result<OsString, TryReserveError> {\n     ///     let mut s = OsString::new();\n     ///\n     ///     // Pre-reserve the memory, exiting if we can't\n@@ -295,7 +295,7 @@ impl OsString {\n     ///\n     ///     Ok(s)\n     /// }\n-    /// # find_max_slow(\"123\").expect(\"why is the test harness OOMing on 12 bytes?\");\n+    /// # process_data(\"123\").expect(\"why is the test harness OOMing on 3 bytes?\");\n     /// ```\n     #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n     #[inline]\n@@ -352,7 +352,7 @@ impl OsString {\n     /// use std::ffi::OsString;\n     /// use std::collections::TryReserveError;\n     ///\n-    /// fn find_max_slow(data: &str) -> Result<OsString, TryReserveError> {\n+    /// fn process_data(data: &str) -> Result<OsString, TryReserveError> {\n     ///     let mut s = OsString::new();\n     ///\n     ///     // Pre-reserve the memory, exiting if we can't\n@@ -363,7 +363,7 @@ impl OsString {\n     ///\n     ///     Ok(s)\n     /// }\n-    /// # find_max_slow(\"123\").expect(\"why is the test harness OOMing on 12 bytes?\");\n+    /// # process_data(\"123\").expect(\"why is the test harness OOMing on 3 bytes?\");\n     /// ```\n     #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n     #[inline]"}]}