{"sha": "b3d4fb448c79240785d8ccd78b73d40c59fc5071", "node_id": "C_kwDOAAsO6NoAKGIzZDRmYjQ0OGM3OTI0MDc4NWQ4Y2NkNzhiNzNkNDBjNTlmYzUwNzE", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-06-21T23:28:04Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-06-29T23:55:02Z"}, "message": "Allow `#[ignore]` tests to run in rustfmt's test suite\n\nThere are some tests in the rustfmt test suite that are ignored by\ndefault. I believe these tests are ignored because they have caused\nissues with the the `rust-lang/rust` test suite.\n\nHowever, we recently experienced an issue (5395) that would have been\navoided had these tests been running.\n\nWith the introduction of the new `#[rustfmt_only_ci_test]` attribute\nmacro we can run these tests when the `RUSTFMT_CI` environment variable\nis set, which will presumably only be set during rustfmts CI runs.\nWhen the environment variable is not set the `#[rustfmt_only_ci_test]`\nwill be replaced with an `#[ignore]`.", "tree": {"sha": "66082794b608243ce4cbe070eb0be313ce7eb4e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66082794b608243ce4cbe070eb0be313ce7eb4e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3d4fb448c79240785d8ccd78b73d40c59fc5071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3d4fb448c79240785d8ccd78b73d40c59fc5071", "html_url": "https://github.com/rust-lang/rust/commit/b3d4fb448c79240785d8ccd78b73d40c59fc5071", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3d4fb448c79240785d8ccd78b73d40c59fc5071/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4416f20dcaec5d93077f72470e83e150fb923b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4416f20dcaec5d93077f72470e83e150fb923b1", "html_url": "https://github.com/rust-lang/rust/commit/c4416f20dcaec5d93077f72470e83e150fb923b1"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "69dae1fff7b4d8f373e342fc10ee2584ec1f1809", "filename": "ci/build_and_test.bat", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3d4fb448c79240785d8ccd78b73d40c59fc5071/ci%2Fbuild_and_test.bat", "raw_url": "https://github.com/rust-lang/rust/raw/b3d4fb448c79240785d8ccd78b73d40c59fc5071/ci%2Fbuild_and_test.bat", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbuild_and_test.bat?ref=b3d4fb448c79240785d8ccd78b73d40c59fc5071", "patch": "@@ -1,4 +1,5 @@\n set \"RUSTFLAGS=-D warnings\"\n+set \"RUSTFMT_CI=1\"\n \n :: Print version information\n rustc -Vv || exit /b 1"}, {"sha": "94991853263ce4bbb7c47815234d785763db660d", "filename": "ci/build_and_test.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3d4fb448c79240785d8ccd78b73d40c59fc5071/ci%2Fbuild_and_test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b3d4fb448c79240785d8ccd78b73d40c59fc5071/ci%2Fbuild_and_test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbuild_and_test.sh?ref=b3d4fb448c79240785d8ccd78b73d40c59fc5071", "patch": "@@ -3,6 +3,7 @@\n set -euo pipefail\n \n export RUSTFLAGS=\"-D warnings\"\n+export RUSTFMT_CI=1\n \n # Print version information\n rustc -Vv"}, {"sha": "0c54c132c97d8f3abb79a0126bfdd5d80af8c35d", "filename": "config_proc_macro/src/lib.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b3d4fb448c79240785d8ccd78b73d40c59fc5071/config_proc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d4fb448c79240785d8ccd78b73d40c59fc5071/config_proc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config_proc_macro%2Fsrc%2Flib.rs?ref=b3d4fb448c79240785d8ccd78b73d40c59fc5071", "patch": "@@ -69,3 +69,16 @@ pub fn stable_only_test(_args: TokenStream, input: TokenStream) -> TokenStream {\n         TokenStream::from_str(\"\").unwrap()\n     }\n }\n+\n+/// Used to conditionally output the TokenStream for tests that should be run as part of rustfmts\n+/// test suite, but should be ignored when running in the rust-lang/rust test suite.\n+#[proc_macro_attribute]\n+pub fn rustfmt_only_ci_test(_args: TokenStream, input: TokenStream) -> TokenStream {\n+    if option_env!(\"RUSTFMT_CI\").is_some() {\n+        input\n+    } else {\n+        let mut token_stream = TokenStream::from_str(\"#[ignore]\").unwrap();\n+        token_stream.extend(input);\n+        token_stream\n+    }\n+}"}, {"sha": "5aa4388518b8adbf41cc5de9be2c9f120ba505ff", "filename": "tests/cargo-fmt/main.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b3d4fb448c79240785d8ccd78b73d40c59fc5071/tests%2Fcargo-fmt%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d4fb448c79240785d8ccd78b73d40c59fc5071/tests%2Fcargo-fmt%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcargo-fmt%2Fmain.rs?ref=b3d4fb448c79240785d8ccd78b73d40c59fc5071", "patch": "@@ -4,6 +4,8 @@ use std::env;\n use std::path::Path;\n use std::process::Command;\n \n+use rustfmt_config_proc_macro::rustfmt_only_ci_test;\n+\n /// Run the cargo-fmt executable and return its output.\n fn cargo_fmt(args: &[&str]) -> (String, String) {\n     let mut bin_dir = env::current_exe().unwrap();\n@@ -47,7 +49,7 @@ macro_rules! assert_that {\n     };\n }\n \n-#[ignore]\n+#[rustfmt_only_ci_test]\n #[test]\n fn version() {\n     assert_that!(&[\"--version\"], starts_with(\"rustfmt \"));\n@@ -56,7 +58,7 @@ fn version() {\n     assert_that!(&[\"--\", \"--version\"], starts_with(\"rustfmt \"));\n }\n \n-#[ignore]\n+#[rustfmt_only_ci_test]\n #[test]\n fn print_config() {\n     assert_that!(\n@@ -65,15 +67,15 @@ fn print_config() {\n     );\n }\n \n-#[ignore]\n+#[rustfmt_only_ci_test]\n #[test]\n fn rustfmt_help() {\n     assert_that!(&[\"--\", \"--help\"], contains(\"Format Rust code\"));\n     assert_that!(&[\"--\", \"-h\"], contains(\"Format Rust code\"));\n     assert_that!(&[\"--\", \"--help=config\"], contains(\"Configuration Options:\"));\n }\n \n-#[ignore]\n+#[rustfmt_only_ci_test]\n #[test]\n fn cargo_fmt_out_of_line_test_modules() {\n     // See also https://github.com/rust-lang/rustfmt/issues/5119"}, {"sha": "636e3053e0f8e22e34d3507fc55efb1190ef48fd", "filename": "tests/rustfmt/main.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b3d4fb448c79240785d8ccd78b73d40c59fc5071/tests%2Frustfmt%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d4fb448c79240785d8ccd78b73d40c59fc5071/tests%2Frustfmt%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustfmt%2Fmain.rs?ref=b3d4fb448c79240785d8ccd78b73d40c59fc5071", "patch": "@@ -5,6 +5,8 @@ use std::fs::remove_file;\n use std::path::Path;\n use std::process::Command;\n \n+use rustfmt_config_proc_macro::rustfmt_only_ci_test;\n+\n /// Run the rustfmt executable and return its output.\n fn rustfmt(args: &[&str]) -> (String, String) {\n     let mut bin_dir = env::current_exe().unwrap();\n@@ -47,7 +49,7 @@ macro_rules! assert_that {\n     };\n }\n \n-#[ignore]\n+#[rustfmt_only_ci_test]\n #[test]\n fn print_config() {\n     assert_that!(\n@@ -76,7 +78,7 @@ fn print_config() {\n     remove_file(\"minimal-config\").unwrap();\n }\n \n-#[ignore]\n+#[rustfmt_only_ci_test]\n #[test]\n fn inline_config() {\n     // single invocation"}]}