{"sha": "f146b9701df0e26dad61422089d3a7e9a49989c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNDZiOTcwMWRmMGUyNmRhZDYxNDIyMDg5ZDNhN2U5YTQ5OTg5YzU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-03-21T02:11:49Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-04-12T15:45:45Z"}, "message": "rustdoc: hide fields of structs/unions > 5", "tree": {"sha": "785b23a981550b7c2f87f000acefeedfe8221511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/785b23a981550b7c2f87f000acefeedfe8221511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f146b9701df0e26dad61422089d3a7e9a49989c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f146b9701df0e26dad61422089d3a7e9a49989c5", "html_url": "https://github.com/rust-lang/rust/commit/f146b9701df0e26dad61422089d3a7e9a49989c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f146b9701df0e26dad61422089d3a7e9a49989c5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71c52acf32efb48975edb86a1cef1df810f60c45", "url": "https://api.github.com/repos/rust-lang/rust/commits/71c52acf32efb48975edb86a1cef1df810f60c45", "html_url": "https://github.com/rust-lang/rust/commit/71c52acf32efb48975edb86a1cef1df810f60c45"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "b6e9a8e244a97b096f93a3cf91d35545dc1d010b", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f146b9701df0e26dad61422089d3a7e9a49989c5/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f146b9701df0e26dad61422089d3a7e9a49989c5/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=f146b9701df0e26dad61422089d3a7e9a49989c5", "patch": "@@ -137,17 +137,14 @@ fn should_hide_fields(n_fields: usize) -> bool {\n     n_fields > 5\n }\n \n-fn toggle_open(w: &mut Buffer, text: &str)\n-{\n+fn toggle_open(w: &mut Buffer, text: &str) {\n     write!(w, \"<div class=\\\"docblock type-contents-toggle\\\" data-toggle-text=\\\"{}\\\">\", text);\n }\n \n-fn toggle_close(w: &mut Buffer)\n-{\n+fn toggle_close(w: &mut Buffer) {\n     w.write_str(\"</div>\");\n }\n \n-\n fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[clean::Item]) {\n     document(w, cx, item, None);\n \n@@ -1285,6 +1282,17 @@ fn render_union(\n     }\n \n     write!(w, \" {{\\n{}\", tab);\n+    let count_fields = fields\n+        .iter()\n+        .filter(\n+            |f| if let clean::StructFieldItem(..) = *f.kind { true } else { false },\n+        )\n+        .count();\n+    let toggle = should_hide_fields(count_fields);\n+    if toggle {\n+        toggle_open(w, \"fields\");\n+    }\n+\n     for field in fields {\n         if let clean::StructFieldItem(ref ty) = *field.kind {\n             write!(\n@@ -1301,6 +1309,9 @@ fn render_union(\n     if it.has_stripped_fields().unwrap() {\n         write!(w, \"    // some fields omitted\\n{}\", tab);\n     }\n+    if toggle {\n+        toggle_close(w);\n+    }\n     w.write_str(\"}\");\n }\n \n@@ -1329,8 +1340,18 @@ fn render_struct(\n             if let Some(g) = g {\n                 write!(w, \"{}\", print_where_clause(g, cx.cache(), cx.tcx(), 0, true),)\n             }\n-            let mut has_visible_fields = false;\n             w.write_str(\" {\");\n+            let count_fields = fields\n+                .iter()\n+                .filter(\n+                    |f| if let clean::StructFieldItem(..) = *f.kind { true } else { false },\n+                )\n+                .count();\n+            let has_visible_fields = count_fields > 0;\n+            let toggle = should_hide_fields(count_fields);\n+            if toggle {\n+                toggle_open(w, \"fields\");\n+            }\n             for field in fields {\n                 if let clean::StructFieldItem(ref ty) = *field.kind {\n                     write!(\n@@ -1341,7 +1362,6 @@ fn render_struct(\n                         field.name.as_ref().unwrap(),\n                         ty.print(cx.cache(), cx.tcx()),\n                     );\n-                    has_visible_fields = true;\n                 }\n             }\n \n@@ -1355,6 +1375,9 @@ fn render_struct(\n                 // `{ /* fields omitted */ }` to save space.\n                 write!(w, \" /* fields omitted */ \");\n             }\n+            if toggle {\n+                toggle_close(w);\n+            }\n             w.write_str(\"}\");\n         }\n         CtorKind::Fn => {"}, {"sha": "2cdacbe0b06abc2984df72187d6f635df9ac8f2d", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f146b9701df0e26dad61422089d3a7e9a49989c5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/f146b9701df0e26dad61422089d3a7e9a49989c5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=f146b9701df0e26dad61422089d3a7e9a49989c5", "patch": "@@ -1059,7 +1059,7 @@ h3 > .collapse-toggle, h4 > .collapse-toggle {\n }\n \n /* for enum and struct fields */\n-.enum > .toggle-wrapper + .docblock, .struct > .toggle-wrapper + .docblock {\n+.enum > .toggle-wrapper + .docblock, .struct > .toggle-wrapper + .docblock, .union > .toggle-wrapper + .docblock {\n \tmargin-left: 0px;\n }\n "}]}