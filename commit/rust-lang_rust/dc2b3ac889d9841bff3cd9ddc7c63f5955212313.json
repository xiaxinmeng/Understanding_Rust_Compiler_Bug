{"sha": "dc2b3ac889d9841bff3cd9ddc7c63f5955212313", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMmIzYWM4ODlkOTg0MWJmZjNjZDlkZGM3YzYzZjU5NTUyMTIzMTM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-01-23T00:09:59Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-01-23T17:15:34Z"}, "message": "Remove lang items from the reference.\n\nFixes #19759", "tree": {"sha": "0e611dd35e6543b274e2edf0e3e88312c57c3e76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e611dd35e6543b274e2edf0e3e88312c57c3e76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc2b3ac889d9841bff3cd9ddc7c63f5955212313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2b3ac889d9841bff3cd9ddc7c63f5955212313", "html_url": "https://github.com/rust-lang/rust/commit/dc2b3ac889d9841bff3cd9ddc7c63f5955212313", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc2b3ac889d9841bff3cd9ddc7c63f5955212313/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7930d93d9b57beaeabfeb43cf78fc8161ecd46c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7930d93d9b57beaeabfeb43cf78fc8161ecd46c", "html_url": "https://github.com/rust-lang/rust/commit/b7930d93d9b57beaeabfeb43cf78fc8161ecd46c"}], "stats": {"total": 131, "additions": 1, "deletions": 130}, "files": [{"sha": "a0d467500978914ef57a4c2e99b880e20ee3f17d", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 130, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/dc2b3ac889d9841bff3cd9ddc7c63f5955212313/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/dc2b3ac889d9841bff3cd9ddc7c63f5955212313/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=dc2b3ac889d9841bff3cd9ddc7c63f5955212313", "patch": "@@ -2279,136 +2279,7 @@ The name `str_eq` has a special meaning to the Rust compiler, and the presence\n of this definition means that it will use this definition when generating calls\n to the string equality function.\n \n-A complete list of the built-in language items follows:\n-\n-#### Built-in Traits\n-\n-* `copy`\n-  : Types that do not move ownership when used by-value.\n-* `drop`\n-  : Have destructors.\n-* `send`\n-  : Able to be sent across thread boundaries.\n-* `sized`\n-  : Has a size known at compile time.\n-* `sync`\n-  : Able to be safely shared between threads when aliased.\n-\n-#### Operators\n-\n-These language items are traits:\n-\n-* `add`\n-  : Elements can be added (for example, integers and floats).\n-* `sub`\n-  : Elements can be subtracted.\n-* `mul`\n-  : Elements can be multiplied.\n-* `div`\n-  : Elements have a division operation.\n-* `rem`\n-  : Elements have a remainder operation.\n-* `neg`\n-  : Elements can be negated arithmetically.\n-* `not`\n-  : Elements can be negated logically.\n-* `bitxor`\n-  : Elements have an exclusive-or operation.\n-* `bitand`\n-  : Elements have a bitwise `and` operation.\n-* `bitor`\n-  : Elements have a bitwise `or` operation.\n-* `shl`\n-  : Elements have a left shift operation.\n-* `shr`\n-  : Elements have a right shift operation.\n-* `index`\n-  : Elements can be indexed.\n-* `index_mut`\n-  : ___Needs filling in___\n-* `eq`\n-  : Elements can be compared for equality.\n-* `ord`\n-  : Elements have a partial ordering.\n-* `deref`\n-  : `*` can be applied, yielding a reference to another type.\n-* `deref_mut`\n-  : `*` can be applied, yielding a mutable reference to another type.\n-\n-These are functions:\n-\n-* `fn`\n-  : ___Needs filling in___\n-* `fn_mut`\n-  : ___Needs filling in___\n-* `fn_once`\n-  : ___Needs filling in___\n-* `str_eq`\n-  : Compare two strings (`&str`) for equality.\n-* `strdup_uniq`\n-  : Return a new unique string\n-    containing a copy of the contents of a unique string.\n-\n-#### Types\n-\n-* `type_id`\n-  : The type returned by the `type_id` intrinsic.\n-* `unsafe`\n-  : A type whose contents can be mutated through an immutable reference.\n-\n-#### Marker types\n-\n-These types help drive the compiler's analysis\n-\n-* `begin_unwind`\n-  : ___Needs filling in___\n-* `no_copy_bound`\n-  : This type does not implement \"copy\", even if eligible.\n-* `eh_personality`\n-  : ___Needs filling in___\n-* `exchange_free`\n-  : Free memory that was allocated on the exchange heap.\n-* `exchange_malloc`\n-  : Allocate memory on the exchange heap.\n-* `closure_exchange_malloc`\n-  : ___Needs filling in___\n-* `panic`\n-  : Abort the program with an error.\n-* `fail_bounds_check`\n-  : Abort the program with a bounds check error.\n-* `free`\n-  : Free memory that was allocated on the managed heap.\n-* `gc`\n-  : ___Needs filling in___\n-* `exchange_heap`\n-  : ___Needs filling in___\n-* `iterator`\n-  : ___Needs filling in___\n-* `contravariant_lifetime`\n-  : The lifetime parameter should be considered contravariant.\n-* `covariant_lifetime`\n-  : The lifetime parameter should be considered covariant.\n-* `invariant_lifetime`\n-  : The lifetime parameter should be considered invariant.\n-* `malloc`\n-  : Allocate memory on the managed heap.\n-* `owned_box`\n-  : ___Needs filling in___\n-* `stack_exhausted`\n-  : ___Needs filling in___\n-* `start`\n-  : ___Needs filling in___\n-* `contravariant_type`\n-  : The type parameter should be considered contravariant.\n-* `covariant_type`\n-  : The type parameter should be considered covariant.\n-* `invariant_type`\n-  : The type parameter should be considered invariant.\n-* `ty_desc`\n-  : ___Needs filling in___\n-\n-> **Note:** This list is likely to become out of date. We should auto-generate\n-> it from `librustc/middle/lang_items.rs`.\n+A complete list of the built-in language items will be added in the future.\n \n ### Inline attributes\n "}]}