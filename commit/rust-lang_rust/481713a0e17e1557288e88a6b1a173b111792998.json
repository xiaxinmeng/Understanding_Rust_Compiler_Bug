{"sha": "481713a0e17e1557288e88a6b1a173b111792998", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MTcxM2EwZTE3ZTE1NTcyODhlODhhNmIxYTE3M2IxMTE3OTI5OTg=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-05T07:16:48Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-05T07:16:48Z"}, "message": "Merge #427\n\n427: Remove extra space when joining lines in use items r=matklad a=alanhdu\n\nFixes #423.\n\nCo-authored-by: Alan Du <alanhdu@gmail.com>", "tree": {"sha": "fc5aa5ccd6a4df6393dc7a14e78ac061148096c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc5aa5ccd6a4df6393dc7a14e78ac061148096c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/481713a0e17e1557288e88a6b1a173b111792998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/481713a0e17e1557288e88a6b1a173b111792998", "html_url": "https://github.com/rust-lang/rust/commit/481713a0e17e1557288e88a6b1a173b111792998", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/481713a0e17e1557288e88a6b1a173b111792998/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "4608a41ad41b00130a719e8ada65d8064fbc9d54", "url": "https://api.github.com/repos/rust-lang/rust/commits/4608a41ad41b00130a719e8ada65d8064fbc9d54", "html_url": "https://github.com/rust-lang/rust/commit/4608a41ad41b00130a719e8ada65d8064fbc9d54"}, {"sha": "19c641390d2d152cddf9616aef51fa291260d289", "url": "https://api.github.com/repos/rust-lang/rust/commits/19c641390d2d152cddf9616aef51fa291260d289", "html_url": "https://github.com/rust-lang/rust/commit/19c641390d2d152cddf9616aef51fa291260d289"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "1b568e96cdddee4971e1ab849ebaecc4e6f8f9ea", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 58, "deletions": 2, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/481713a0e17e1557288e88a6b1a173b111792998/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/481713a0e17e1557288e88a6b1a173b111792998/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=481713a0e17e1557288e88a6b1a173b111792998", "patch": "@@ -188,10 +188,14 @@ fn remove_newline(\n         edit.delete(TextRange::from_to(prev.range().start(), node.range().end()));\n     } else if prev.kind() == COMMA && next.kind() == R_CURLY {\n         // Removes: comma, newline (incl. surrounding whitespace)\n-        // Adds: a single whitespace\n+        let space = if let Some(left) = prev.prev_sibling() {\n+            compute_ws(left, next)\n+        } else {\n+            \" \"\n+        };\n         edit.replace(\n             TextRange::from_to(prev.range().start(), node.range().end()),\n-            \" \".to_string(),\n+            space.to_string(),\n         );\n     } else if let (Some(_), Some(next)) = (ast::Comment::cast(prev), ast::Comment::cast(next)) {\n         // Removes: newline (incl. surrounding whitespace), start of the next comment\n@@ -256,10 +260,20 @@ fn join_single_use_tree(edit: &mut TextEditBuilder, node: SyntaxNodeRef) -> Opti\n fn compute_ws(left: SyntaxNodeRef, right: SyntaxNodeRef) -> &'static str {\n     match left.kind() {\n         L_PAREN | L_BRACK => return \"\",\n+        L_CURLY => {\n+            if let USE_TREE = right.kind() {\n+                return \"\";\n+            }\n+        }\n         _ => (),\n     }\n     match right.kind() {\n         R_PAREN | R_BRACK => return \"\",\n+        R_CURLY => {\n+            if let USE_TREE = left.kind() {\n+                return \"\";\n+            }\n+        }\n         DOT => return \"\",\n         _ => (),\n     }\n@@ -330,6 +344,48 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_join_lines_use_items_left() {\n+        // No space after the '{'\n+        check_join_lines(\n+            r\"\n+<|>use ra_syntax::{\n+    TextUnit, TextRange,\n+};\",\n+            r\"\n+<|>use ra_syntax::{TextUnit, TextRange,\n+};\",\n+        );\n+    }\n+\n+    #[test]\n+    fn test_join_lines_use_items_right() {\n+        // No space after the '}'\n+        check_join_lines(\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange\n+};\",\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange};\",\n+        );\n+    }\n+\n+    #[test]\n+    fn test_join_lines_use_items_right_comma() {\n+        // No space after the '}'\n+        check_join_lines(\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange,\n+};\",\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange};\",\n+        );\n+    }\n+\n     #[test]\n     fn test_join_lines_use_tree() {\n         check_join_lines("}]}