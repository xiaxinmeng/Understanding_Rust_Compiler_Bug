{"sha": "2bee6132f9a3c2475808da90beba4b20fb12a6eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZWU2MTMyZjlhM2MyNDc1ODA4ZGE5MGJlYmE0YjIwZmIxMmE2ZWI=", "commit": {"author": {"name": "Grahame Bowland", "email": "grahame@angrygoats.net", "date": "2012-04-08T17:33:36Z"}, "committer": {"name": "Grahame Bowland", "email": "grahame@angrygoats.net", "date": "2012-04-08T17:33:36Z"}, "message": "write out \"inf\"/\"-inf\" in float::to_str_common", "tree": {"sha": "218398138947696b7a92fe67e8715dc894f8e05c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/218398138947696b7a92fe67e8715dc894f8e05c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bee6132f9a3c2475808da90beba4b20fb12a6eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bee6132f9a3c2475808da90beba4b20fb12a6eb", "html_url": "https://github.com/rust-lang/rust/commit/2bee6132f9a3c2475808da90beba4b20fb12a6eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bee6132f9a3c2475808da90beba4b20fb12a6eb/comments", "author": null, "committer": null, "parents": [{"sha": "851fde879d85f3b76b42322f46cdc00c5f97e357", "url": "https://api.github.com/repos/rust-lang/rust/commits/851fde879d85f3b76b42322f46cdc00c5f97e357", "html_url": "https://github.com/rust-lang/rust/commit/851fde879d85f3b76b42322f46cdc00c5f97e357"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "fa7a493d8a1c280bbdc478da71583946c75ef99f", "filename": "src/libcore/float.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bee6132f9a3c2475808da90beba4b20fb12a6eb/src%2Flibcore%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bee6132f9a3c2475808da90beba4b20fb12a6eb/src%2Flibcore%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffloat.rs?ref=2bee6132f9a3c2475808da90beba4b20fb12a6eb", "patch": "@@ -42,6 +42,8 @@ Converts a float to a string\n \"]\n fn to_str_common(num: float, digits: uint, exact: bool) -> str {\n     if is_NaN(num) { ret \"NaN\"; }\n+    if num == infinity { ret \"inf\"; }\n+    if num == neg_infinity { ret \"-inf\"; }\n     let mut (num, accum) = if num < 0.0 { (-num, \"-\") } else { (num, \"\") };\n     let trunc = num as uint;\n     let mut frac = num - (trunc as float);"}]}