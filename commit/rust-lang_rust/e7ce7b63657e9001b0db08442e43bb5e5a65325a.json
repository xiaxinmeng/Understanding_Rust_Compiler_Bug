{"sha": "e7ce7b63657e9001b0db08442e43bb5e5a65325a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3Y2U3YjYzNjU3ZTkwMDFiMGRiMDg0NDJlNDNiYjVlNWE2NTMyNWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-22T11:36:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-22T11:36:50Z"}, "message": "Auto merge of #31077 - nagisa:mir-temp-promotion, r=dotdash\n\nFixes #31002\n\nr? @nikomatsakis", "tree": {"sha": "47bd60fb406480801078fdde4f14ac2be49ec57e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47bd60fb406480801078fdde4f14ac2be49ec57e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7ce7b63657e9001b0db08442e43bb5e5a65325a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7ce7b63657e9001b0db08442e43bb5e5a65325a", "html_url": "https://github.com/rust-lang/rust/commit/e7ce7b63657e9001b0db08442e43bb5e5a65325a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7ce7b63657e9001b0db08442e43bb5e5a65325a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd1b845492e13ae9e0da382dc0ec09d676d2dd59", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd1b845492e13ae9e0da382dc0ec09d676d2dd59", "html_url": "https://github.com/rust-lang/rust/commit/cd1b845492e13ae9e0da382dc0ec09d676d2dd59"}, {"sha": "e74aa2bdff5420458f7dddce070e8a00a6dfdfe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e74aa2bdff5420458f7dddce070e8a00a6dfdfe8", "html_url": "https://github.com/rust-lang/rust/commit/e74aa2bdff5420458f7dddce070e8a00a6dfdfe8"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "70f50b4c042b13c17f75447d974b18e03af602cb", "filename": "src/librustc_data_structures/bitvec.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Flibrustc_data_structures%2Fbitvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Flibrustc_data_structures%2Fbitvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fbitvec.rs?ref=e7ce7b63657e9001b0db08442e43bb5e5a65325a", "patch": "@@ -24,12 +24,14 @@ impl BitVector {\n         (self.data[word] & mask) != 0\n     }\n \n+    /// Returns true if the bit has changed.\n     pub fn insert(&mut self, bit: usize) -> bool {\n         let (word, mask) = word_mask(bit);\n         let data = &mut self.data[word];\n         let value = *data;\n-        *data = value | mask;\n-        (value | mask) != value\n+        let new_value = value | mask;\n+        *data = new_value;\n+        new_value != value\n     }\n \n     pub fn insert_all(&mut self, all: &BitVector) -> bool {"}, {"sha": "23cca55e4d480e49e92a38aa19820343e6376783", "filename": "src/librustc_trans/trans/mir/analyze.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fanalyze.rs?ref=e7ce7b63657e9001b0db08442e43bb5e5a65325a", "patch": "@@ -11,16 +11,16 @@\n //! An analysis to determine which temporaries require allocas and\n //! which do not.\n \n-use rustc_data_structures::fnv::FnvHashSet;\n+use rustc_data_structures::bitvec::BitVector;\n use rustc::mir::repr as mir;\n use rustc::mir::visit::{Visitor, LvalueContext};\n use trans::common::{self, Block};\n use super::rvalue;\n \n pub fn lvalue_temps<'bcx,'tcx>(bcx: Block<'bcx,'tcx>,\n                                mir: &mir::Mir<'tcx>)\n-                               -> FnvHashSet<usize> {\n-    let mut analyzer = TempAnalyzer::new();\n+                               -> BitVector {\n+    let mut analyzer = TempAnalyzer::new(mir.temp_decls.len());\n \n     analyzer.visit_mir(mir);\n \n@@ -51,18 +51,28 @@ pub fn lvalue_temps<'bcx,'tcx>(bcx: Block<'bcx,'tcx>,\n }\n \n struct TempAnalyzer {\n-    lvalue_temps: FnvHashSet<usize>,\n+    lvalue_temps: BitVector,\n+    seen_assigned: BitVector\n }\n \n impl TempAnalyzer {\n-    fn new() -> TempAnalyzer {\n-        TempAnalyzer { lvalue_temps: FnvHashSet() }\n+    fn new(temp_count: usize) -> TempAnalyzer {\n+        TempAnalyzer {\n+            lvalue_temps: BitVector::new(temp_count),\n+            seen_assigned: BitVector::new(temp_count)\n+        }\n     }\n \n     fn mark_as_lvalue(&mut self, temp: usize) {\n         debug!(\"marking temp {} as lvalue\", temp);\n         self.lvalue_temps.insert(temp);\n     }\n+\n+    fn mark_assigned(&mut self, temp: usize) {\n+        if !self.seen_assigned.insert(temp) {\n+            self.mark_as_lvalue(temp);\n+        }\n+    }\n }\n \n impl<'tcx> Visitor<'tcx> for TempAnalyzer {\n@@ -74,6 +84,7 @@ impl<'tcx> Visitor<'tcx> for TempAnalyzer {\n \n         match *lvalue {\n             mir::Lvalue::Temp(index) => {\n+                self.mark_assigned(index as usize);\n                 if !rvalue::rvalue_creates_operand(rvalue) {\n                     self.mark_as_lvalue(index as usize);\n                 }"}, {"sha": "cdde4cbb286046afc8aa5cd090cdd11e73f14c12", "filename": "src/librustc_trans/trans/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs?ref=e7ce7b63657e9001b0db08442e43bb5e5a65325a", "patch": "@@ -97,7 +97,7 @@ pub fn trans_mir<'bcx, 'tcx>(bcx: Block<'bcx, 'tcx>) {\n     let temps = mir.temp_decls.iter()\n                               .map(|decl| bcx.monomorphize(&decl.ty))\n                               .enumerate()\n-                              .map(|(i, mty)| if lvalue_temps.contains(&i) {\n+                              .map(|(i, mty)| if lvalue_temps.contains(i) {\n                                   TempRef::Lvalue(LvalueRef::alloca(bcx,\n                                                                     mty,\n                                                                     &format!(\"temp{:?}\", i)))"}, {"sha": "de83c1f5ee0cd137140ce632fdede069d16cd1eb", "filename": "src/test/run-pass/mir_temp_promotions.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Ftest%2Frun-pass%2Fmir_temp_promotions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7ce7b63657e9001b0db08442e43bb5e5a65325a/src%2Ftest%2Frun-pass%2Fmir_temp_promotions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_temp_promotions.rs?ref=e7ce7b63657e9001b0db08442e43bb5e5a65325a", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+\n+#[rustc_mir]\n+fn test1(f: f32) -> bool {\n+    // test that we properly promote temporaries to allocas when a temporary is assigned to\n+    // multiple times (assignment is still happening once \u2200 possible dataflows).\n+    !(f.is_nan() || f.is_infinite())\n+}\n+\n+fn main() {\n+    assert_eq!(test1(0.0), true);\n+}"}]}