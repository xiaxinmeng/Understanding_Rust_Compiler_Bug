{"sha": "c3b4a1f9bf09b40dafb0cf096cd955a362e0d758", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYjRhMWY5YmYwOWI0MGRhZmIwY2YwOTZjZDk1NWEzNjJlMGQ3NTg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T09:23:18Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T09:23:18Z"}, "message": "Improve formatting of closure capture migration suggestion.", "tree": {"sha": "44aad8841ce0d04816365c0c12151a924b2fe829", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44aad8841ce0d04816365c0c12151a924b2fe829"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3b4a1f9bf09b40dafb0cf096cd955a362e0d758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3b4a1f9bf09b40dafb0cf096cd955a362e0d758", "html_url": "https://github.com/rust-lang/rust/commit/c3b4a1f9bf09b40dafb0cf096cd955a362e0d758", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3b4a1f9bf09b40dafb0cf096cd955a362e0d758/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb2226b1f174f3cc644275ef8663be6295a7f704", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2226b1f174f3cc644275ef8663be6295a7f704", "html_url": "https://github.com/rust-lang/rust/commit/eb2226b1f174f3cc644275ef8663be6295a7f704"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "9cf741bc63fef60c593a354f44e414c737edafa9", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c3b4a1f9bf09b40dafb0cf096cd955a362e0d758/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b4a1f9bf09b40dafb0cf096cd955a362e0d758/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=c3b4a1f9bf09b40dafb0cf096cd955a362e0d758", "patch": "@@ -649,11 +649,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         match self.tcx.sess.source_map().span_to_snippet(closure_body_span) {\n                             Ok(s) => {\n                                 let trimmed = s.trim_start();\n+                                let mut lines = trimmed.lines();\n+                                let line1 = lines.next().unwrap_or_default();\n \n                                 // If the closure contains a block then replace the opening brace\n                                 // with \"{ let _ = (..); \"\n-                                let sugg = if let Some('{') = trimmed.chars().next() {\n-                                    format!(\"{{ {}; {}\", migration_string, &trimmed[1..])\n+                                let sugg = if line1.trim_end() == \"{\" {\n+                                    // This is a multi-line closure with just a `{` on the first line,\n+                                    // so we put the `let` on its own line.\n+                                    // We take the indentation from the next non-empty line.\n+                                    let line2 = lines.filter(|line| !line.is_empty()).next().unwrap_or_default();\n+                                    let indent = line2.split_once(|c: char| !c.is_whitespace()).unwrap_or_default().0;\n+                                    format!(\"{{\\n{}{};{}\", indent, migration_string, &trimmed[line1.len()..])\n+                                } else if line1.starts_with('{') {\n+                                    format!(\"{{ {}; {}\", migration_string, &trimmed[1..].trim_start())\n                                 } else {\n                                     format!(\"{{ {}; {} }}\", migration_string, s)\n                                 };"}]}