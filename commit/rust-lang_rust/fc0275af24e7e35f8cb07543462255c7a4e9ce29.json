{"sha": "fc0275af24e7e35f8cb07543462255c7a4e9ce29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMDI3NWFmMjRlN2UzNWY4Y2IwNzU0MzQ2MjI1NWM3YTRlOWNlMjk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2017-07-06T20:15:44Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2017-07-06T22:09:48Z"}, "message": "add a built-in MSP430 target", "tree": {"sha": "89656f16b2bcf1f49b181ca5ee0a08e6369b05c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89656f16b2bcf1f49b181ca5ee0a08e6369b05c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc0275af24e7e35f8cb07543462255c7a4e9ce29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc0275af24e7e35f8cb07543462255c7a4e9ce29", "html_url": "https://github.com/rust-lang/rust/commit/fc0275af24e7e35f8cb07543462255c7a4e9ce29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc0275af24e7e35f8cb07543462255c7a4e9ce29/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccf401f8f7847413ac43f38e3c86016becf67b07", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf401f8f7847413ac43f38e3c86016becf67b07", "html_url": "https://github.com/rust-lang/rust/commit/ccf401f8f7847413ac43f38e3c86016becf67b07"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "7ceb9ec18b9736326359ee1d9d391d8fe5e5c5dc", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc0275af24e7e35f8cb07543462255c7a4e9ce29/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc0275af24e7e35f8cb07543462255c7a4e9ce29/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=fc0275af24e7e35f8cb07543462255c7a4e9ce29", "patch": "@@ -220,6 +220,8 @@ supported_targets! {\n     (\"thumbv7m-none-eabi\", thumbv7m_none_eabi),\n     (\"thumbv7em-none-eabi\", thumbv7em_none_eabi),\n     (\"thumbv7em-none-eabihf\", thumbv7em_none_eabihf),\n+\n+    (\"msp430-none-elf\", msp430_none_elf),\n }\n \n /// Everything `rustc` knows about how to compile for a specific target."}, {"sha": "588a8bde79b986b40b042efcc0305d29cc1651b9", "filename": "src/librustc_back/target/msp430_none_elf.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/fc0275af24e7e35f8cb07543462255c7a4e9ce29/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc0275af24e7e35f8cb07543462255c7a4e9ce29/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs?ref=fc0275af24e7e35f8cb07543462255c7a4e9ce29", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use {LinkerFlavor, PanicStrategy};\n+use target::{Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        llvm_target: \"msp430-none-elf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"16\".to_string(),\n+        data_layout: \"e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16\".to_string(),\n+        arch: \"msp430\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+\n+        options: TargetOptions {\n+            executables: true,\n+\n+            // The LLVM backend currently can't generate object files. To\n+            // workaround this LLVM generates assembly files which then we feed\n+            // to gcc to get object files. For this reason we have a hard\n+            // dependency on this specific gcc.\n+            asm_args: vec![\"-mcpu=msp430\".to_string()],\n+            linker: \"msp430-elf-gcc\".to_string(),\n+            no_integrated_as: true,\n+\n+            // There are no atomic instructions available in the MSP430\n+            // instruction set\n+            max_atomic_width: Some(0),\n+\n+            // Because these devices have very little resources having an\n+            // unwinder is too onerous so we default to \"abort\" because the\n+            // \"unwind\" strategy is very rare.\n+            panic_strategy: PanicStrategy::Abort,\n+\n+            // Similarly, one almost always never wants to use relocatable\n+            // code because of the extra costs it involves.\n+            relocation_model: \"static\".to_string(),\n+\n+            .. Default::default( )\n+        }\n+    })\n+}"}]}