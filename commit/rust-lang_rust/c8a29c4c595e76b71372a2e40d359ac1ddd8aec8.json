{"sha": "c8a29c4c595e76b71372a2e40d359ac1ddd8aec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4YTI5YzRjNTk1ZTc2YjcxMzcyYTJlNDBkMzU5YWMxZGRkOGFlYzg=", "commit": {"author": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-26T20:08:36Z"}, "committer": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-27T10:54:31Z"}, "message": "rustdoc: External module item links to the module contents. Fixes #12926.\n\nthe basic strategy is to distinguish `mod foo;` from `mod foo {...}`\nby checking if the span for the module item and module contents is\nin different files. if it's the case, we prefer module contents.\n\nit is technically possible to fix #12926 without changing the AST,\nprobably by checking the individual items' span. this is not without\na problem though, since it is possible that some items inside\n`mod foo {...}` may have originated from other file (e.g. `include!`).\ntherefore it is better to record both spans explicitly.", "tree": {"sha": "cf3ba42bf9a069a105819f9dd0aac91b876cfe0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf3ba42bf9a069a105819f9dd0aac91b876cfe0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8", "html_url": "https://github.com/rust-lang/rust/commit/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8/comments", "author": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee21a67b802ba9d8a0fac11369cbcd53552a216", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee21a67b802ba9d8a0fac11369cbcd53552a216", "html_url": "https://github.com/rust-lang/rust/commit/dee21a67b802ba9d8a0fac11369cbcd53552a216"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "7007c31c67b29365c22a96331fe5edae3c93a98e", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=c8a29c4c595e76b71372a2e40d359ac1ddd8aec8", "patch": "@@ -223,10 +223,27 @@ impl Clean<Item> for doctree::Module {\n             self.view_items.clean().move_iter().collect(),\n             self.macros.clean().move_iter().collect()\n         );\n+\n+        // determine if we should display the inner contents or\n+        // the outer `mod` item for the source code.\n+        let where = {\n+            let ctxt = local_data::get(super::ctxtkey, |x| *x.unwrap());\n+            let cm = ctxt.sess().codemap();\n+            let outer = cm.lookup_char_pos(self.where_outer.lo);\n+            let inner = cm.lookup_char_pos(self.where_inner.lo);\n+            if outer.file.start_pos == inner.file.start_pos {\n+                // mod foo { ... }\n+                self.where_outer\n+            } else {\n+                // mod foo; (and a separate FileMap for the contents)\n+                self.where_inner\n+            }\n+        };\n+\n         Item {\n             name: Some(name),\n             attrs: self.attrs.clean(),\n-            source: self.where.clean(),\n+            source: where.clean(),\n             visibility: self.vis.clean(),\n             id: self.id,\n             inner: ModuleItem(Module {"}, {"sha": "ac846482f9f262a50dde26a6b5dba347ce157f3b", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=c8a29c4c595e76b71372a2e40d359ac1ddd8aec8", "patch": "@@ -19,7 +19,8 @@ use syntax::ast::{Ident, NodeId};\n pub struct Module {\n     pub name: Option<Ident>,\n     pub attrs: Vec<ast::Attribute>,\n-    pub where: Span,\n+    pub where_outer: Span,\n+    pub where_inner: Span,\n     pub structs: Vec<Struct>,\n     pub enums: Vec<Enum>,\n     pub fns: Vec<Function>,\n@@ -42,7 +43,8 @@ impl Module {\n             name       : name,\n             id: 0,\n             vis: ast::Inherited,\n-            where: syntax::codemap::DUMMY_SP,\n+            where_outer: syntax::codemap::DUMMY_SP,\n+            where_inner: syntax::codemap::DUMMY_SP,\n             attrs      : Vec::new(),\n             structs    : Vec::new(),\n             enums      : Vec::new(),"}, {"sha": "f78fb4658c1205af9390107387c0c3ae2e0ba6ab", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8a29c4c595e76b71372a2e40d359ac1ddd8aec8/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=c8a29c4c595e76b71372a2e40d359ac1ddd8aec8", "patch": "@@ -118,7 +118,8 @@ impl<'a> RustdocVisitor<'a> {\n         for item in m.view_items.iter() {\n             self.visit_view_item(item, &mut om);\n         }\n-        om.where = span;\n+        om.where_outer = span;\n+        om.where_inner = m.inner;\n         om.attrs = attrs;\n         om.vis = vis;\n         om.id = id;"}]}