{"sha": "fe8ee9c43a52042e2150de8024524ee7a2296692", "node_id": "C_kwDOAAsO6NoAKGZlOGVlOWM0M2E1MjA0MmUyMTUwZGU4MDI0NTI0ZWU3YTIyOTY2OTI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-09T11:53:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-09T11:53:23Z"}, "message": "Auto merge of #13744 - vtta:numthreads, r=Veykril\n\nfeat: add the ability to limit the number of threads launched by `main_loop`\n\n## Motivation\n`main_loop` defaults to launch as many threads as cpus in one machine. When developing on multi-core remote servers on multiple projects, this will lead to thousands of idle threads being created. This is very annoying when one wants check whether his program under developing is running correctly via `htop`.\n\n<img width=\"756\" alt=\"image\" src=\"https://user-images.githubusercontent.com/41831480/206656419-fa3f0dd2-e554-4f36-be1b-29d54739930c.png\">\n\n## Contribution\nThis patch introduce the configuration option `rust-analyzer.numThreads` to set the desired thread number used by the main thread pool.\nThis should have no effects on the performance as not all threads are actually used.\n<img width=\"1325\" alt=\"image\" src=\"https://user-images.githubusercontent.com/41831480/206656834-fe625c4c-b993-4771-8a82-7427c297fd41.png\">\n\n## Demonstration\nThe following is a snippet of `lunarvim` configuration using my own build.\n```lua\nvim.list_extend(lvim.lsp.automatic_configuration.skipped_servers, { \"rust_analyzer\" })\nrequire(\"lvim.lsp.manager\").setup(\"rust_analyzer\", {\n  cmd = { \"env\", \"RA_LOG=debug\", \"RA_LOG_FILE=/tmp/ra-test.log\",\n    \"/home/jlhu/Projects/rust-analyzer/target/debug/rust-analyzer\",\n  },\n  init_options = {\n    numThreads = 4,\n  },\n  settings = {\n    cachePriming = {\n      numThreads = 8,\n    },\n  },\n})\n\n```\n\n## Limitations\nThe `numThreads` can only be modified via `initializationOptions` in early initialisation because everything has to wait until the thread pool starts including the dynamic settings modification support.\nThe `numThreads` also does not reflect the end results of how many threads is actually created, because I have not yet tracked down everything that spawns threads.", "tree": {"sha": "53c1e8dba916e844ca69042aa6cea187e7090912", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53c1e8dba916e844ca69042aa6cea187e7090912"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe8ee9c43a52042e2150de8024524ee7a2296692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe8ee9c43a52042e2150de8024524ee7a2296692", "html_url": "https://github.com/rust-lang/rust/commit/fe8ee9c43a52042e2150de8024524ee7a2296692", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe8ee9c43a52042e2150de8024524ee7a2296692/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e20bf38b2adb1130b705d6ce1956a635df10d3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e20bf38b2adb1130b705d6ce1956a635df10d3b", "html_url": "https://github.com/rust-lang/rust/commit/1e20bf38b2adb1130b705d6ce1956a635df10d3b"}, {"sha": "9f5a547b3f91bee46e3015eb11cce8772820398b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f5a547b3f91bee46e3015eb11cce8772820398b", "html_url": "https://github.com/rust-lang/rust/commit/9f5a547b3f91bee46e3015eb11cce8772820398b"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "0f515a6d5cbf388a89d19383c0ddef7c4776986e", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fe8ee9c43a52042e2150de8024524ee7a2296692/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe8ee9c43a52042e2150de8024524ee7a2296692/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=fe8ee9c43a52042e2150de8024524ee7a2296692", "patch": "@@ -409,6 +409,9 @@ config_data! {\n         /// Whether to show `can't find Cargo.toml` error message.\n         notifications_cargoTomlNotFound: bool      = \"true\",\n \n+        /// How many worker threads in the main loop. The default `null` means to pick automatically.\n+        numThreads: Option<usize> = \"null\",\n+\n         /// Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.\n         procMacro_attributes_enable: bool = \"true\",\n         /// Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.\n@@ -1482,6 +1485,10 @@ impl Config {\n         }\n     }\n \n+    pub fn main_loop_num_threads(&self) -> usize {\n+        self.data.numThreads.unwrap_or(num_cpus::get_physical().try_into().unwrap_or(1))\n+    }\n+\n     pub fn typing_autoclose_angle(&self) -> bool {\n         self.data.typing_autoClosingAngleBrackets_enable\n     }"}, {"sha": "c6f4e9ce07f07c20bfea4d8baa93db7666000da5", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe8ee9c43a52042e2150de8024524ee7a2296692/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe8ee9c43a52042e2150de8024524ee7a2296692/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=fe8ee9c43a52042e2150de8024524ee7a2296692", "patch": "@@ -134,7 +134,7 @@ impl GlobalState {\n \n         let task_pool = {\n             let (sender, receiver) = unbounded();\n-            let handle = TaskPool::new(sender);\n+            let handle = TaskPool::new_with_threads(sender, config.main_loop_num_threads());\n             Handle { handle, receiver }\n         };\n "}, {"sha": "616e449984ae6455c7b62901321f30c16feac20f", "filename": "crates/rust-analyzer/src/task_pool.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe8ee9c43a52042e2150de8024524ee7a2296692/crates%2Frust-analyzer%2Fsrc%2Ftask_pool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe8ee9c43a52042e2150de8024524ee7a2296692/crates%2Frust-analyzer%2Fsrc%2Ftask_pool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ftask_pool.rs?ref=fe8ee9c43a52042e2150de8024524ee7a2296692", "patch": "@@ -8,12 +8,13 @@ pub(crate) struct TaskPool<T> {\n }\n \n impl<T> TaskPool<T> {\n-    pub(crate) fn new(sender: Sender<T>) -> TaskPool<T> {\n+    pub(crate) fn new_with_threads(sender: Sender<T>, threads: usize) -> TaskPool<T> {\n         const STACK_SIZE: usize = 8 * 1024 * 1024;\n \n         let inner = threadpool::Builder::new()\n             .thread_name(\"Worker\".into())\n             .thread_stack_size(STACK_SIZE)\n+            .num_threads(threads)\n             .build();\n         TaskPool { sender, inner }\n     }"}, {"sha": "d9794e7052a7eaf78887d5f291279a951dd24dd4", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fe8ee9c43a52042e2150de8024524ee7a2296692/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/fe8ee9c43a52042e2150de8024524ee7a2296692/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=fe8ee9c43a52042e2150de8024524ee7a2296692", "patch": "@@ -619,6 +619,11 @@ Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.\n --\n Whether to show `can't find Cargo.toml` error message.\n --\n+[[rust-analyzer.numThreads]]rust-analyzer.numThreads (default: `null`)::\n++\n+--\n+How many worker threads in the main loop. The default `null` means to pick automatically.\n+--\n [[rust-analyzer.procMacro.attributes.enable]]rust-analyzer.procMacro.attributes.enable (default: `true`)::\n +\n --"}, {"sha": "f508dde4f6084a6a253b4dade4e826dd5fade245", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fe8ee9c43a52042e2150de8024524ee7a2296692/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/fe8ee9c43a52042e2150de8024524ee7a2296692/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=fe8ee9c43a52042e2150de8024524ee7a2296692", "patch": "@@ -1177,6 +1177,15 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.numThreads\": {\n+                    \"markdownDescription\": \"How many worker threads in the main loop. The default `null` means to pick automatically.\",\n+                    \"default\": null,\n+                    \"type\": [\n+                        \"null\",\n+                        \"integer\"\n+                    ],\n+                    \"minimum\": 0\n+                },\n                 \"rust-analyzer.procMacro.attributes.enable\": {\n                     \"markdownDescription\": \"Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.\",\n                     \"default\": true,"}]}