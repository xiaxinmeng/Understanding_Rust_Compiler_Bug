{"sha": "d8fc6300525a71372300807f9ed76a37ae99649d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZmM2MzAwNTI1YTcxMzcyMzAwODA3ZjllZDc2YTM3YWU5OTY0OWQ=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-01-14T03:39:24Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-02-01T14:43:56Z"}, "message": "Track extern_public command-line argument", "tree": {"sha": "75d73588911038364a88df4d0f27cd4f6859dc09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75d73588911038364a88df4d0f27cd4f6859dc09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8fc6300525a71372300807f9ed76a37ae99649d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlxUWywACgkQtAh+UQ6Y\nsWTdhA/9HAVR9POfy8NxZFfdqZeXpsxrUPkKcboVm3ttjezgLYvILKCo3yUl4sp5\nN7R3U6a7haEka3fKyVpl9QRzHJmH1nw6/M/DpqcfgK+DvyhLQeCC8/0keN7tElmV\n+f+Ct+uqk/8vx7YJgSi0zNhE5J0F0eKg8CwvDgkcH+XPnSFWv8mTJpIfzcUMY//Z\nTc45cHh9MrzaReCHwUWgkeR4O79l5pU+pkZOGJfgD/9a6HMiFdvAhdVo/NomzJVg\nR/ymB7mTLNVH9fqVkbNZahqGUOSbrjOF9T8HzHnzaGcRTjFDh65GPgfuEaiNDdtd\nSOzozHvS2iHYHt0YBcw/cmwll1n0e6poyjldmdVAEnVHTYuSqlhWHYfu9M1oZk8L\nlnGJLTASN2XiItvQx/fDinteJlVqhaAc8ra9ctG9dgnb7BEpOSZ4HokO2BfhEiP9\n/yLwl/k9i+7deXR63f1aaW4fhOky3IJK6IvwiB2FjoI3o4zXc3r8PFc+asYU7TTC\nhPxoJbqCaU/z2nB/7RHHhAjvIYheZ0af+8+4r6cgJgacuKuBco9XSl9zTjOxFqws\nC9REeezRR1wSOK01B/B2zNdOijIfveM4ozOAUrp9+LihdWs9GvIRjiJ8i3vlyH0p\nGNZ/GrAyKu6h8x+8wvnPoKrkXmVCkax1GKr9qu8y6nU/9FNi8aw=\n=dNUu\n-----END PGP SIGNATURE-----", "payload": "tree 75d73588911038364a88df4d0f27cd4f6859dc09\nparent bc2221f7b6778de779113f1b9021477cf313010b\nauthor Aaron Hill <aa1ronham@gmail.com> 1547437164 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1549032236 -0500\n\nTrack extern_public command-line argument\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8fc6300525a71372300807f9ed76a37ae99649d", "html_url": "https://github.com/rust-lang/rust/commit/d8fc6300525a71372300807f9ed76a37ae99649d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8fc6300525a71372300807f9ed76a37ae99649d/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc2221f7b6778de779113f1b9021477cf313010b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2221f7b6778de779113f1b9021477cf313010b", "html_url": "https://github.com/rust-lang/rust/commit/bc2221f7b6778de779113f1b9021477cf313010b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e63336437cdb02d33ddee6b5f7de313389a8b5a7", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d8fc6300525a71372300807f9ed76a37ae99649d/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8fc6300525a71372300807f9ed76a37ae99649d/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d8fc6300525a71372300807f9ed76a37ae99649d", "patch": "@@ -414,7 +414,7 @@ top_level_options!(\n \n         // The list of crates to consider public for\n         // checking leaked private dependency types in public interfaces\n-        extern_public: FxHashSet<String> [UNTRACKED],\n+        extern_public: Vec<String> [TRACKED],\n     }\n );\n \n@@ -610,7 +610,7 @@ impl Default for Options {\n             cli_forced_thinlto_off: false,\n             remap_path_prefix: Vec::new(),\n             edition: DEFAULT_EDITION,\n-            extern_public: FxHashSet::default()\n+            extern_public: vec![]\n         }\n     }\n }\n@@ -1925,12 +1925,12 @@ pub fn build_session_options_and_crate_config(\n         )\n     }\n \n-    let mut extern_public: FxHashSet<String> = matches.opt_strs(\"extern-public\").\n+    let mut extern_public: Vec<String> = matches.opt_strs(\"extern-public\").\n         iter().cloned().collect();\n \n     // FIXME - come up with a better way of handling this\n-    extern_public.insert(\"core\".to_string());\n-    extern_public.insert(\"std\".to_string());\n+    extern_public.push(\"core\".to_string());\n+    extern_public.push(\"std\".to_string());\n \n     let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n "}]}