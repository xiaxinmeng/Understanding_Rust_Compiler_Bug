{"sha": "2efede77493df5912800fc358f28277642f56bc9", "node_id": "C_kwDOAAsO6NoAKDJlZmVkZTc3NDkzZGY1OTEyODAwZmMzNThmMjgyNzc2NDJmNTZiYzk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-03-03T12:02:12Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-04-05T13:18:21Z"}, "message": "Mark scalar layout unions so that backends that do not support partially initialized scalars can special case them.", "tree": {"sha": "106b7cf009bbd3cac3bf2eb31d44cadece58a33e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/106b7cf009bbd3cac3bf2eb31d44cadece58a33e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2efede77493df5912800fc358f28277642f56bc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2efede77493df5912800fc358f28277642f56bc9", "html_url": "https://github.com/rust-lang/rust/commit/2efede77493df5912800fc358f28277642f56bc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2efede77493df5912800fc358f28277642f56bc9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69046fa8fdb2505367a4375be78eae5b47e15fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/69046fa8fdb2505367a4375be78eae5b47e15fe7", "html_url": "https://github.com/rust-lang/rust/commit/69046fa8fdb2505367a4375be78eae5b47e15fe7"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ffa629ca16c8b19d7bbc372fcc4055c8d94262a8", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2efede77493df5912800fc358f28277642f56bc9/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2efede77493df5912800fc358f28277642f56bc9/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=2efede77493df5912800fc358f28277642f56bc9", "patch": "@@ -21,7 +21,7 @@ pub(crate) fn pointer_ty(tcx: TyCtxt<'_>) -> types::Type {\n }\n \n pub(crate) fn scalar_to_clif_type(tcx: TyCtxt<'_>, scalar: Scalar) -> Type {\n-    match scalar.value {\n+    match scalar.primitive() {\n         Primitive::Int(int, _sign) => match int {\n             Integer::I8 => types::I8,\n             Integer::I16 => types::I16,"}, {"sha": "357cb4a6d246fa451a1b42ff3413df5455ef3f81", "filename": "src/discriminant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2efede77493df5912800fc358f28277642f56bc9/src%2Fdiscriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2efede77493df5912800fc358f28277642f56bc9/src%2Fdiscriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiscriminant.rs?ref=2efede77493df5912800fc358f28277642f56bc9", "patch": "@@ -105,7 +105,7 @@ pub(crate) fn codegen_get_discriminant<'tcx>(\n     // Decode the discriminant (specifically if it's niche-encoded).\n     match *tag_encoding {\n         TagEncoding::Direct => {\n-            let signed = match tag_scalar.value {\n+            let signed = match tag_scalar.primitive() {\n                 Int(_, signed) => signed,\n                 _ => false,\n             };"}, {"sha": "8f80b02ae0d4e7d98d588cd255f2ac210bdf209e", "filename": "src/value_and_place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2efede77493df5912800fc358f28277642f56bc9/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2efede77493df5912800fc358f28277642f56bc9/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=2efede77493df5912800fc358f28277642f56bc9", "patch": "@@ -50,7 +50,7 @@ fn codegen_field<'tcx>(\n }\n \n fn scalar_pair_calculate_b_offset(tcx: TyCtxt<'_>, a_scalar: Scalar, b_scalar: Scalar) -> Offset32 {\n-    let b_offset = a_scalar.value.size(&tcx).align_to(b_scalar.value.align(&tcx).abi);\n+    let b_offset = a_scalar.size(&tcx).align_to(b_scalar.align(&tcx).abi);\n     Offset32::new(b_offset.bytes().try_into().unwrap())\n }\n "}]}