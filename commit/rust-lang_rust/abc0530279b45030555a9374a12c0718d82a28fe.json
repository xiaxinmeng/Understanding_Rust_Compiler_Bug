{"sha": "abc0530279b45030555a9374a12c0718d82a28fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYzA1MzAyNzliNDUwMzA1NTVhOTM3NGExMmMwNzE4ZDgyYTI4ZmU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-09-01T03:34:44Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-09-01T03:34:44Z"}, "message": "Do a better job of eliding whitespace-only differences from warnings", "tree": {"sha": "df2691e4358c3aba3de1195cee51d9deaeedad0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df2691e4358c3aba3de1195cee51d9deaeedad0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abc0530279b45030555a9374a12c0718d82a28fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abc0530279b45030555a9374a12c0718d82a28fe", "html_url": "https://github.com/rust-lang/rust/commit/abc0530279b45030555a9374a12c0718d82a28fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abc0530279b45030555a9374a12c0718d82a28fe/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a8aac3f0260b2b91fcb1c59da887217c5e42674", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a8aac3f0260b2b91fcb1c59da887217c5e42674", "html_url": "https://github.com/rust-lang/rust/commit/1a8aac3f0260b2b91fcb1c59da887217c5e42674"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "b94ab9db29828fea448ca9b2a0862198ce58a4a4", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/abc0530279b45030555a9374a12c0718d82a28fe/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc0530279b45030555a9374a12c0718d82a28fe/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=abc0530279b45030555a9374a12c0718d82a28fe", "patch": "@@ -1763,7 +1763,7 @@ fn render_markdown(w: &mut fmt::Formatter,\n                     html_diff::Difference::NodeText { ref elem_text,\n                                                       ref opposite_elem_text,\n                                                       .. }\n-                        if elem_text.trim() == opposite_elem_text.trim() => false,\n+                        if match_non_whitespace(elem_text, opposite_elem_text) => false,\n                     _ => true,\n                 }\n             })\n@@ -1781,6 +1781,40 @@ fn render_markdown(w: &mut fmt::Formatter,\n     write!(w, \"<div class='docblock'>{}{}</div>\", prefix, output)\n }\n \n+// Returns true iff s1 and s2 match, ignoring whitespace.\n+fn match_non_whitespace(s1: &str, s2: &str) -> bool {\n+    let s1 = s1.trim();\n+    let s2 = s2.trim();\n+    let mut cs1 = s1.chars();\n+    let mut cs2 = s2.chars();\n+    while let Some(c1) = cs1.next() {\n+        if c1.is_whitespace() {\n+            continue;\n+        }\n+\n+        loop {\n+            if let Some(c2) = cs2.next() {\n+                if !c2.is_whitespace() {\n+                    if c1 != c2 {\n+                        return false;\n+                    }\n+                    break;\n+                }\n+            } else {\n+                return false;\n+            }\n+        }\n+    }\n+\n+    while let Some(c2) = cs2.next() {\n+        if !c2.is_whitespace() {\n+            return false;\n+        }\n+    }\n+\n+    true\n+}\n+\n fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLink,\n                   cx: &Context, prefix: &str) -> fmt::Result {\n     if let Some(s) = item.doc_value() {\n@@ -3695,3 +3729,35 @@ fn test_name_sorting() {\n     sorted.sort_by_key(|&s| name_key(s));\n     assert_eq!(names, sorted);\n }\n+\n+#[cfg(test)]\n+#[test]\n+fn test_match_non_whitespace() {\n+    assert!(match_non_whitespace(\"\", \"\"));\n+    assert!(match_non_whitespace(\"  \", \"\"));\n+    assert!(match_non_whitespace(\"\", \"  \"));\n+\n+    assert!(match_non_whitespace(\"a\", \"a\"));\n+    assert!(match_non_whitespace(\" a \", \"a\"));\n+    assert!(match_non_whitespace(\"a\", \"  a\"));\n+    assert!(match_non_whitespace(\"abc\", \"abc\"));\n+    assert!(match_non_whitespace(\"abc\", \" abc \"));\n+    assert!(match_non_whitespace(\"abc  \", \"abc\"));\n+    assert!(match_non_whitespace(\"abc xyz\", \"abc xyz\"));\n+    assert!(match_non_whitespace(\"abc xyz\", \"abc\\nxyz\"));\n+    assert!(match_non_whitespace(\"abc xyz\", \"abcxyz\"));\n+    assert!(match_non_whitespace(\"abcxyz\", \"abc xyz\"));\n+    assert!(match_non_whitespace(\"abc    xyz \", \" abc xyz\\n\"));\n+\n+    assert!(!match_non_whitespace(\"a\", \"b\"));\n+    assert!(!match_non_whitespace(\" a \", \"c\"));\n+    assert!(!match_non_whitespace(\"a\", \"  aa\"));\n+    assert!(!match_non_whitespace(\"abc\", \"ac\"));\n+    assert!(!match_non_whitespace(\"abc\", \" adc \"));\n+    assert!(!match_non_whitespace(\"abc  \", \"abca\"));\n+    assert!(!match_non_whitespace(\"abc xyz\", \"abc xy\"));\n+    assert!(!match_non_whitespace(\"abc xyz\", \"bc\\nxyz\"));\n+    assert!(!match_non_whitespace(\"abc xyz\", \"abc.xyz\"));\n+    assert!(!match_non_whitespace(\"abcxyz\", \"abc.xyz\"));\n+    assert!(!match_non_whitespace(\"abc    xyz \", \" abc xyz w\"));\n+}"}]}