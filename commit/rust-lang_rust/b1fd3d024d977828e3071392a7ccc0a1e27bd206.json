{"sha": "b1fd3d024d977828e3071392a7ccc0a1e27bd206", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZmQzZDAyNGQ5Nzc4MjhlMzA3MTM5MmE3Y2NjMGExZTI3YmQyMDY=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-11T23:03:21Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-08-12T22:03:44Z"}, "message": "Remove genericity in StepBy::size_hint", "tree": {"sha": "ce3434435ffa1556fc6c9534b8883cd666e26d09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce3434435ffa1556fc6c9534b8883cd666e26d09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1fd3d024d977828e3071392a7ccc0a1e27bd206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1fd3d024d977828e3071392a7ccc0a1e27bd206", "html_url": "https://github.com/rust-lang/rust/commit/b1fd3d024d977828e3071392a7ccc0a1e27bd206", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1fd3d024d977828e3071392a7ccc0a1e27bd206/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d940ddf8f5851ace3504058d6285f0b7b8c45c9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d940ddf8f5851ace3504058d6285f0b7b8c45c9f", "html_url": "https://github.com/rust-lang/rust/commit/d940ddf8f5851ace3504058d6285f0b7b8c45c9f"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "008907b6e3145ec80148594fe75665152b245ee5", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b1fd3d024d977828e3071392a7ccc0a1e27bd206/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1fd3d024d977828e3071392a7ccc0a1e27bd206/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=b1fd3d024d977828e3071392a7ccc0a1e27bd206", "patch": "@@ -448,14 +448,24 @@ impl<I> Iterator for StepBy<I> where I: Iterator {\n \n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        let inner_hint = self.iter.size_hint();\n+        #[inline]\n+        fn first_size(step: usize) -> impl Fn(usize) -> usize {\n+            move |n| if n == 0 { 0 } else { 1 + (n - 1) / (step + 1) }\n+        }\n+\n+        #[inline]\n+        fn other_size(step: usize) -> impl Fn(usize) -> usize {\n+            move |n| n / (step + 1)\n+        }\n+\n+        let (low, high) = self.iter.size_hint();\n \n         if self.first_take {\n-            let f = |n| if n == 0 { 0 } else { 1 + (n-1)/(self.step+1) };\n-            (f(inner_hint.0), inner_hint.1.map(f))\n+            let f = first_size(self.step);\n+            (f(low), high.map(f))\n         } else {\n-            let f = |n| n / (self.step+1);\n-            (f(inner_hint.0), inner_hint.1.map(f))\n+            let f = other_size(self.step);\n+            (f(low), high.map(f))\n         }\n     }\n "}]}