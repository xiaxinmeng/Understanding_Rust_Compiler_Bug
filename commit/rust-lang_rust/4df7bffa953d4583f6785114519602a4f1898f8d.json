{"sha": "4df7bffa953d4583f6785114519602a4f1898f8d", "node_id": "C_kwDOAAsO6NoAKDRkZjdiZmZhOTUzZDQ1ODNmNjc4NTExNDUxOTYwMmE0ZjE4OThmOGQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-25T09:02:22Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-26T00:29:40Z"}, "message": "Change `FnAbi::fixed_count` to a `u32`.", "tree": {"sha": "ef33650693da5af63e7a49e85668608a84e0c079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef33650693da5af63e7a49e85668608a84e0c079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4df7bffa953d4583f6785114519602a4f1898f8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4df7bffa953d4583f6785114519602a4f1898f8d", "html_url": "https://github.com/rust-lang/rust/commit/4df7bffa953d4583f6785114519602a4f1898f8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4df7bffa953d4583f6785114519602a4f1898f8d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4bf113027aca77fea447e15fc09a7c8ded701e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4bf113027aca77fea447e15fc09a7c8ded701e9", "html_url": "https://github.com/rust-lang/rust/commit/e4bf113027aca77fea447e15fc09a7c8ded701e9"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "b88db6f6f9804d5fb49564223755671f0964cf2b", "filename": "compiler/rustc_codegen_llvm/src/abi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs?ref=4df7bffa953d4583f6785114519602a4f1898f8d", "patch": "@@ -325,7 +325,8 @@ impl<'ll, 'tcx> FnAbiLlvmExt<'ll, 'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n     fn llvm_type(&self, cx: &CodegenCx<'ll, 'tcx>) -> &'ll Type {\n         // Ignore \"extra\" args from the call site for C variadic functions.\n         // Only the \"fixed\" args are part of the LLVM function signature.\n-        let args = if self.c_variadic { &self.args[..self.fixed_count] } else { &self.args };\n+        let args =\n+            if self.c_variadic { &self.args[..self.fixed_count as usize] } else { &self.args };\n \n         let args_capacity: usize = args.iter().map(|arg|\n             if arg.pad.is_some() { 1 } else { 0 } +"}, {"sha": "9dd7616a47959ee9a4dac2b015327846781d7b9a", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=4df7bffa953d4583f6785114519602a4f1898f8d", "patch": "@@ -3262,7 +3262,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                 .map(|(i, ty)| arg_of(ty, Some(i)))\n                 .collect::<Result<_, _>>()?,\n             c_variadic: sig.c_variadic,\n-            fixed_count: inputs.len(),\n+            fixed_count: inputs.len() as u32,\n             conv,\n             can_unwind: fn_can_unwind(self.tcx(), fn_def_id, sig.abi),\n         };"}, {"sha": "cb61f76af1d73669c5b05086aa9a19713255499b", "filename": "compiler/rustc_symbol_mangling/src/typeid/typeid_itanium_cxx_abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftypeid%2Ftypeid_itanium_cxx_abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftypeid%2Ftypeid_itanium_cxx_abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftypeid%2Ftypeid_itanium_cxx_abi.rs?ref=4df7bffa953d4583f6785114519602a4f1898f8d", "patch": "@@ -888,7 +888,7 @@ pub fn typeid_for_fnabi<'tcx>(\n             typeid.push('v');\n         }\n     } else {\n-        for n in 0..fn_abi.fixed_count {\n+        for n in 0..fn_abi.fixed_count as usize {\n             let ty = transform_ty(tcx, fn_abi.args[n].layout.ty, transform_ty_options);\n             typeid.push_str(&encode_ty(tcx, ty, &mut dict, encode_ty_options));\n         }"}, {"sha": "a975d9027ecb6fe63e8fc6b690a70b3c3db349a2", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=4df7bffa953d4583f6785114519602a4f1898f8d", "patch": "@@ -625,7 +625,7 @@ pub struct FnAbi<'a, Ty> {\n     ///\n     /// Should only be different from args.len() when c_variadic is true.\n     /// This can be used to know whether an argument is variadic or not.\n-    pub fixed_count: usize,\n+    pub fixed_count: u32,\n \n     pub conv: Conv,\n \n@@ -738,5 +738,5 @@ mod size_asserts {\n     use rustc_data_structures::static_assert_size;\n     // These are in alphabetical order, which is easy to maintain.\n     static_assert_size!(ArgAbi<'_, usize>, 72);\n-    static_assert_size!(FnAbi<'_, usize>, 112);\n+    static_assert_size!(FnAbi<'_, usize>, 104);\n }"}, {"sha": "1cb360f834e0e3b690983cbbf65aa44d0dc211bf", "filename": "compiler/rustc_target/src/abi/call/riscv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Friscv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4df7bffa953d4583f6785114519602a4f1898f8d/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Friscv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Friscv.rs?ref=4df7bffa953d4583f6785114519602a4f1898f8d", "patch": "@@ -340,7 +340,7 @@ where\n             arg,\n             xlen,\n             flen,\n-            i >= fn_abi.fixed_count,\n+            i >= fn_abi.fixed_count as usize,\n             &mut avail_gprs,\n             &mut avail_fprs,\n         );"}]}