{"sha": "b400bde52a2508f966133c8cf9445ce570f08248", "node_id": "C_kwDOAAsO6NoAKGI0MDBiZGU1MmEyNTA4Zjk2NjEzM2M4Y2Y5NDQ1Y2U1NzBmMDgyNDg", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-27T22:11:41Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-27T23:36:10Z"}, "message": "Shorten type in note", "tree": {"sha": "bb0e3722746ffc0c079eda00b03bc73cd8c58a12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb0e3722746ffc0c079eda00b03bc73cd8c58a12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b400bde52a2508f966133c8cf9445ce570f08248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b400bde52a2508f966133c8cf9445ce570f08248", "html_url": "https://github.com/rust-lang/rust/commit/b400bde52a2508f966133c8cf9445ce570f08248", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b400bde52a2508f966133c8cf9445ce570f08248/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df2a35ea3df2eb055ef68ba77eac6cc99e855da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/df2a35ea3df2eb055ef68ba77eac6cc99e855da1", "html_url": "https://github.com/rust-lang/rust/commit/df2a35ea3df2eb055ef68ba77eac6cc99e855da1"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "4bd55a5483147e6c3709f91239dbf31a132c7790", "filename": "compiler/rustc_hir_analysis/src/collect/type_of.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b400bde52a2508f966133c8cf9445ce570f08248/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b400bde52a2508f966133c8cf9445ce570f08248/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs?ref=b400bde52a2508f966133c8cf9445ce570f08248", "patch": "@@ -5,6 +5,7 @@ use rustc_hir::intravisit;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::{HirId, Node};\n use rustc_middle::hir::nested_filter;\n+use rustc_middle::ty::print::with_forced_trimmed_paths;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::util::IntTypeExt;\n use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt, TypeFolder, TypeSuperFoldable, TypeVisitable};\n@@ -907,10 +908,10 @@ fn infer_placeholder_type<'a>(\n                         Applicability::MachineApplicable,\n                     );\n                 } else {\n-                    err.span_note(\n+                    with_forced_trimmed_paths!(err.span_note(\n                         tcx.hir().body(body_id).value.span,\n-                        &format!(\"however, the inferred type `{}` cannot be named\", ty),\n-                    );\n+                        &format!(\"however, the inferred type `{ty}` cannot be named\"),\n+                    ));\n                 }\n             }\n \n@@ -931,10 +932,10 @@ fn infer_placeholder_type<'a>(\n                         Applicability::MaybeIncorrect,\n                     );\n                 } else {\n-                    diag.span_note(\n+                    with_forced_trimmed_paths!(diag.span_note(\n                         tcx.hir().body(body_id).value.span,\n-                        &format!(\"however, the inferred type `{}` cannot be named\", ty),\n-                    );\n+                        &format!(\"however, the inferred type `{ty}` cannot be named\"),\n+                    ));\n                 }\n             }\n "}, {"sha": "24bedb5297b1fe9241d4992471c5e2773d859a02", "filename": "src/test/ui/suggestions/unnamable-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b400bde52a2508f966133c8cf9445ce570f08248/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b400bde52a2508f966133c8cf9445ce570f08248/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr?ref=b400bde52a2508f966133c8cf9445ce570f08248", "patch": "@@ -19,7 +19,7 @@ error[E0121]: the placeholder `_` is not allowed within types on item signatures\n LL | const C: _ = || 42;\n    |          ^ not allowed in type signatures\n    |\n-note: however, the inferred type `[closure@$DIR/unnamable-types.rs:17:14: 17:16]` cannot be named\n+note: however, the inferred type `[closure@unnamable-types.rs:17:14]` cannot be named\n   --> $DIR/unnamable-types.rs:17:14\n    |\n LL | const C: _ = || 42;\n@@ -31,7 +31,7 @@ error: missing type for `const` item\n LL | const D = S { t: { let i = 0; move || -> i32 { i } } };\n    |        ^\n    |\n-note: however, the inferred type `S<[closure@$DIR/unnamable-types.rs:23:31: 23:45]>` cannot be named\n+note: however, the inferred type `S<[closure@unnamable-types.rs:23:31]>` cannot be named\n   --> $DIR/unnamable-types.rs:23:11\n    |\n LL | const D = S { t: { let i = 0; move || -> i32 { i } } };"}, {"sha": "bc02547c65eb8d89f4954ea75a31166f7d5de7b1", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b400bde52a2508f966133c8cf9445ce570f08248/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b400bde52a2508f966133c8cf9445ce570f08248/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr?ref=b400bde52a2508f966133c8cf9445ce570f08248", "patch": "@@ -443,7 +443,7 @@ error[E0121]: the placeholder `_` is not allowed within types on item signatures\n LL | const _: _ = (1..10).filter(|x| x % 2 == 0).map(|x| x * x);\n    |          ^ not allowed in type signatures\n    |\n-note: however, the inferred type `Map<Filter<std::ops::Range<i32>, [closure@$DIR/typeck_type_placeholder_item.rs:229:29: 229:32]>, [closure@$DIR/typeck_type_placeholder_item.rs:229:49: 229:52]>` cannot be named\n+note: however, the inferred type `Map<Filter<Range<i32>, [closure@typeck_type_placeholder_item.rs:229:29]>, [closure@typeck_type_placeholder_item.rs:229:49]>` cannot be named\n   --> $DIR/typeck_type_placeholder_item.rs:229:14\n    |\n LL | const _: _ = (1..10).filter(|x| x % 2 == 0).map(|x| x * x);"}]}