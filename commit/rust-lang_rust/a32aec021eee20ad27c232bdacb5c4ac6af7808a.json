{"sha": "a32aec021eee20ad27c232bdacb5c4ac6af7808a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMmFlYzAyMWVlZTIwYWQyN2MyMzJiZGFjYjVjNGFjNmFmNzgwOGE=", "commit": {"author": {"name": "Dan Aloni", "email": "dan@kernelim.com", "date": "2019-10-11T12:14:23Z"}, "committer": {"name": "Dan Aloni", "email": "dan@kernelim.com", "date": "2019-10-11T13:38:47Z"}, "message": "deriving: avoid dummy Span on an artificial `type_ident` path\n\nThe dummy Span pointed to the beginning of the source file instead to\nwhere the `#[derive]` is located. Later, it tripped the\n`in_derive_expansion(span)` check at `src/librustc/middle/stability.rs`,\ncausing a span-less deprecation warning to be emitted.\n\nFixes #56195, #55417.", "tree": {"sha": "b8149b7fecfe3af72f3d1ff1b99f49c0f9d807e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8149b7fecfe3af72f3d1ff1b99f49c0f9d807e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a32aec021eee20ad27c232bdacb5c4ac6af7808a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a32aec021eee20ad27c232bdacb5c4ac6af7808a", "html_url": "https://github.com/rust-lang/rust/commit/a32aec021eee20ad27c232bdacb5c4ac6af7808a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a32aec021eee20ad27c232bdacb5c4ac6af7808a/comments", "author": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "000d90b11f7be70ffb7812680f7abc6deb52ec88", "url": "https://api.github.com/repos/rust-lang/rust/commits/000d90b11f7be70ffb7812680f7abc6deb52ec88", "html_url": "https://github.com/rust-lang/rust/commit/000d90b11f7be70ffb7812680f7abc6deb52ec88"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "abdcb6c8e3d37a3b2fa5cea5fb3d4fced9104abc", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a32aec021eee20ad27c232bdacb5c4ac6af7808a/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32aec021eee20ad27c232bdacb5c4ac6af7808a/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=a32aec021eee20ad27c232bdacb5c4ac6af7808a", "patch": "@@ -192,7 +192,7 @@ use syntax::util::map_in_place::MapInPlace;\n use syntax::ptr::P;\n use syntax::symbol::{Symbol, kw, sym};\n use syntax::parse::ParseSess;\n-use syntax_pos::{DUMMY_SP, Span};\n+use syntax_pos::{Span};\n \n use ty::{LifetimeBounds, Path, Ptr, PtrTy, Self_, Ty};\n \n@@ -1022,7 +1022,7 @@ impl<'a> MethodDef<'a> {\n                                  // [fields of next Self arg], [etc]>\n         let mut patterns = Vec::new();\n         for i in 0..self_args.len() {\n-            let struct_path = cx.path(DUMMY_SP, vec![type_ident]);\n+            let struct_path = cx.path(trait_.span, vec![type_ident]);\n             let (pat, ident_expr) = trait_.create_struct_pattern(cx,\n                                                                  struct_path,\n                                                                  struct_def,"}]}