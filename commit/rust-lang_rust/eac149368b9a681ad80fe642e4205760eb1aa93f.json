{"sha": "eac149368b9a681ad80fe642e4205760eb1aa93f", "node_id": "C_kwDOAAsO6NoAKGVhYzE0OTM2OGI5YTY4MWFkODBmZTY0MmU0MjA1NzYwZWIxYWE5M2Y", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-20T18:13:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-20T18:13:09Z"}, "message": "Rollup merge of #98235 - liuw:mir-gen-drop-magic-value, r=davidtwco\n\nDrop magic value 3 from code\n\nMagic value 3 is used to create state for a yield point. It is in fact\nthe number of reserved variants.\n\nLift RESERVED_VARIANTS out to module scope and use it instead.", "tree": {"sha": "eef3e619115ccaefb9a9c400af3d6aa167039afa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef3e619115ccaefb9a9c400af3d6aa167039afa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eac149368b9a681ad80fe642e4205760eb1aa93f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJisLi1CRBK7hj4Ov3rIwAAiqEIAGSCMK4JMz6LXXZHDBjO4xjF\nDNCvDYvAfkQZjwnEvsFyUyISZLT+mqPNqyIJf1+bqj/jGxjurY7kPlIfR02uGAE+\nqGgknw3KnMRD0ojCXfhP3xFNaKAkpruAqmDp5vrL4g8N8vI94GOJR/cproICJTsG\nnOppIsDCejnQLiXDxPyEZw7LNtv2/ELzVzNlCmzsRQ4EDn+lxjdm03FpdiXpOiuX\nmzjTIAuxqOZi+qrWLDY6clUy6QQdCytfKi79oWiPCFzAcO4PZTDg6TbJtigBRjs0\n/BpTJ4DkpG2qz7b0fEkUOTlhc8Uy2OPDyleuONnap9Z6XQxp23LK2zZTkizl6a8=\n=ZLTx\n-----END PGP SIGNATURE-----\n", "payload": "tree eef3e619115ccaefb9a9c400af3d6aa167039afa\nparent b12708f7f40463b2131f0c47d1e8a4ffb543a422\nparent c5f4880e9153d07cd95fa53221a0d976934cb938\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1655748789 +0200\ncommitter GitHub <noreply@github.com> 1655748789 +0200\n\nRollup merge of #98235 - liuw:mir-gen-drop-magic-value, r=davidtwco\n\nDrop magic value 3 from code\n\nMagic value 3 is used to create state for a yield point. It is in fact\nthe number of reserved variants.\n\nLift RESERVED_VARIANTS out to module scope and use it instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eac149368b9a681ad80fe642e4205760eb1aa93f", "html_url": "https://github.com/rust-lang/rust/commit/eac149368b9a681ad80fe642e4205760eb1aa93f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eac149368b9a681ad80fe642e4205760eb1aa93f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b12708f7f40463b2131f0c47d1e8a4ffb543a422", "url": "https://api.github.com/repos/rust-lang/rust/commits/b12708f7f40463b2131f0c47d1e8a4ffb543a422", "html_url": "https://github.com/rust-lang/rust/commit/b12708f7f40463b2131f0c47d1e8a4ffb543a422"}, {"sha": "c5f4880e9153d07cd95fa53221a0d976934cb938", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f4880e9153d07cd95fa53221a0d976934cb938", "html_url": "https://github.com/rust-lang/rust/commit/c5f4880e9153d07cd95fa53221a0d976934cb938"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "d777d13d7a51425d0b4ac0cfea3a504134ff94d5", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eac149368b9a681ad80fe642e4205760eb1aa93f/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eac149368b9a681ad80fe642e4205760eb1aa93f/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=eac149368b9a681ad80fe642e4205760eb1aa93f", "patch": "@@ -195,6 +195,11 @@ const RETURNED: usize = GeneratorSubsts::RETURNED;\n /// Generator has panicked and is poisoned.\n const POISONED: usize = GeneratorSubsts::POISONED;\n \n+/// Number of variants to reserve in generator state. Corresponds to\n+/// `UNRESUMED` (beginning of a generator) and `RETURNED`/`POISONED`\n+/// (end of a generator) states.\n+const RESERVED_VARIANTS: usize = 3;\n+\n /// A `yield` point in the generator.\n struct SuspensionPoint<'tcx> {\n     /// State discriminant used when suspending or resuming at this point.\n@@ -345,7 +350,7 @@ impl<'tcx> MutVisitor<'tcx> for TransformVisitor<'tcx> {\n             data.statements.extend(self.make_state(state_idx, v, source_info));\n             let state = if let Some((resume, mut resume_arg)) = resume {\n                 // Yield\n-                let state = 3 + self.suspension_points.len();\n+                let state = RESERVED_VARIANTS + self.suspension_points.len();\n \n                 // The resume arg target location might itself be remapped if its base local is\n                 // live across a yield.\n@@ -792,7 +797,6 @@ fn compute_layout<'tcx>(\n     // Leave empty variants for the UNRESUMED, RETURNED, and POISONED states.\n     // In debuginfo, these will correspond to the beginning (UNRESUMED) or end\n     // (RETURNED, POISONED) of the function.\n-    const RESERVED_VARIANTS: usize = 3;\n     let body_span = body.source_scopes[OUTERMOST_SOURCE_SCOPE].span;\n     let mut variant_source_info: IndexVec<VariantIdx, SourceInfo> = [\n         SourceInfo::outermost(body_span.shrink_to_lo()),"}]}