{"sha": "5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZWExZDI3OWJkYzc4NjNmMzhhN2JmMmI1OGVjZjY2YzE4ZWY2ZDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-02T18:35:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-02T18:35:01Z"}, "message": "document `shallow_resolve`", "tree": {"sha": "a2baca47c5eb4fc61711675cab60a90833450509", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2baca47c5eb4fc61711675cab60a90833450509"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7", "html_url": "https://github.com/rust-lang/rust/commit/5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d64b3d329cdd0452dc2fde1435998bd3e036538", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d64b3d329cdd0452dc2fde1435998bd3e036538", "html_url": "https://github.com/rust-lang/rust/commit/5d64b3d329cdd0452dc2fde1435998bd3e036538"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "a7ad62d5f70628682cb8613bb1c5c6d0e5680d04", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=5fea1d279bdc7863f38a7bf2b58ecf66c18ef6d7", "patch": "@@ -1307,6 +1307,14 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         }\n     }\n \n+    /// Resolve any type variables found in `value` -- but only one\n+    /// level.  So, if the variable `?X` is bound to some type\n+    /// `Foo<?Y>`, then this would return `Foo<?Y>` (but `?Y` may\n+    /// itself be bound to a type).\n+    ///\n+    /// Useful when you only need to inspect the outermost level of\n+    /// the type and don't care about nested types (or perhaps you\n+    /// will be resolving them as well, e.g. in a loop).\n     pub fn shallow_resolve<T>(&self, value: T) -> T\n     where\n         T: TypeFoldable<'tcx>,\n@@ -1567,6 +1575,9 @@ impl<'a, 'tcx> ShallowResolver<'a, 'tcx> {\n         ShallowResolver { infcx }\n     }\n \n+    /// If `typ` is a type variable of some kind, resolve it one level\n+    /// (but do not resolve types found in the result). If `typ` is\n+    /// not a type variable, just return it unmodified.\n     pub fn shallow_resolve(&mut self, typ: Ty<'tcx>) -> Ty<'tcx> {\n         match typ.kind {\n             ty::Infer(ty::TyVar(v)) => {"}]}