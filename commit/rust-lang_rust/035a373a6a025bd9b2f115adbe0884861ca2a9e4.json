{"sha": "035a373a6a025bd9b2f115adbe0884861ca2a9e4", "node_id": "C_kwDOAAsO6NoAKDAzNWEzNzNhNmEwMjViZDliMmYxMTVhZGJlMDg4NDg2MWNhMmE5ZTQ", "commit": {"author": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-05T21:16:24Z"}, "committer": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-05T21:16:24Z"}, "message": "removed double matching", "tree": {"sha": "8606c024df20307d9ed212a447bdab5b70c071a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8606c024df20307d9ed212a447bdab5b70c071a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/035a373a6a025bd9b2f115adbe0884861ca2a9e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEEzoFOOQgvfPzrDpfeO9fUvOMSb0FAmHWCqgACgkQeO9fUvOM\nSb0ELQwA0tTjWCPOUjHdFwEdwwX52No0tkCn28WRuOOPyeHptTVKD68FfMa4UF1J\nQSIpd+1P68h5jvB4FhLEZGRGWFj2Bw7FWi3tkJ3FltjsuKAB8u3KTx9Tq+lmUYjJ\nhNeqRQfDNVNvrYseJqOqEImJ27XWdAgMlSrXYs2iQHGzpMVq8jjbwOYjB10NTjs9\ncmTq9ys8IdnnE7Zce9ecrXYwjfbd0S7Vt9frUdGvaynjTmGNbpWGC5XTfZStNzk5\nVRABRB5jT5iPNnSsWXeeukeCH6UiBkAMD2OTNAfDDff+Rc9cufIHSKnCawR95QtO\n+/t+/3ZbA7YVxC0Td2OOrGPWqfPUTKqi9TedQjVAaY/6K+tPrjrhYgW432C193pZ\nf8NOX3U+NDxk6AL75Uzoko+F14kmTMah14+ORUDKz2stvx28wCDNhaQOnh1+zDap\nJJbra4mm+mxMbwMTUrMNJ8f2fuVYt8cosSqThnRmSU+802Wfm2odKbZbUkwNnrqy\n8TROi8RB\n=/amg\n-----END PGP SIGNATURE-----", "payload": "tree 8606c024df20307d9ed212a447bdab5b70c071a3\nparent 771c87f890998e92dd037c8711a90b71aae485d4\nauthor Jeroen Vannevel <jer_vannevel@outlook.com> 1641417384 +0000\ncommitter Jeroen Vannevel <jer_vannevel@outlook.com> 1641417384 +0000\n\nremoved double matching\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/035a373a6a025bd9b2f115adbe0884861ca2a9e4", "html_url": "https://github.com/rust-lang/rust/commit/035a373a6a025bd9b2f115adbe0884861ca2a9e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/035a373a6a025bd9b2f115adbe0884861ca2a9e4/comments", "author": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "771c87f890998e92dd037c8711a90b71aae485d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/771c87f890998e92dd037c8711a90b71aae485d4", "html_url": "https://github.com/rust-lang/rust/commit/771c87f890998e92dd037c8711a90b71aae485d4"}], "stats": {"total": 21, "additions": 4, "deletions": 17}, "files": [{"sha": "aaed2b67fe8f56b087a5b5762e8d41129107411a", "filename": "crates/ide_assists/src/handlers/extract_variable.rs", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/035a373a6a025bd9b2f115adbe0884861ca2a9e4/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035a373a6a025bd9b2f115adbe0884861ca2a9e4/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs?ref=035a373a6a025bd9b2f115adbe0884861ca2a9e4", "patch": "@@ -52,10 +52,10 @@ pub(crate) fn extract_variable(acc: &mut Assists, ctx: &AssistContext) -> Option\n         }\n     }\n \n-    let ref_kind = match get_receiver_type(&ctx, &to_extract) {\n-        Some(receiver_type) if receiver_type.is_mutable_reference() => RefKind::MutRef,\n-        Some(receiver_type) if receiver_type.is_reference() => RefKind::Ref,\n-        _ => RefKind::None,\n+    let reference_modifier = match get_receiver_type(&ctx, &to_extract) {\n+        Some(receiver_type) if receiver_type.is_mutable_reference() => \"&mut \",\n+        Some(receiver_type) if receiver_type.is_reference() => \"&\",\n+        _ => \"\",\n     };\n \n     let anchor = Anchor::from(&to_extract)?;\n@@ -83,12 +83,6 @@ pub(crate) fn extract_variable(acc: &mut Assists, ctx: &AssistContext) -> Option\n                 None => to_extract.syntax().text_range(),\n             };\n \n-            let reference_modifier = match ref_kind {\n-                RefKind::MutRef => \"&mut \",\n-                RefKind::Ref => \"&\",\n-                RefKind::None => \"\",\n-            };\n-\n             match anchor {\n                 Anchor::Before(_) | Anchor::Replace(_) => {\n                     format_to!(buf, \"let {} = {}\", var_name, reference_modifier)\n@@ -176,13 +170,6 @@ fn get_receiver(expression: ast::Expr) -> Option<ast::Expr> {\n     }\n }\n \n-#[derive(Debug)]\n-enum RefKind {\n-    Ref,\n-    MutRef,\n-    None,\n-}\n-\n #[derive(Debug)]\n enum Anchor {\n     Before(SyntaxNode),"}]}