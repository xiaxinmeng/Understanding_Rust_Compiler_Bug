{"sha": "65b7aa98c7b3575230eb41e95c7444f0056811dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YjdhYTk4YzdiMzU3NTIzMGViNDFlOTVjNzQ0NGYwMDU2ODExZGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-19T09:37:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-19T09:37:44Z"}, "message": "Rollup merge of #87227 - bstrie:asm2arch, r=Amanieu\n\nMove asm! and global_asm! to core::arch\n\nFollow-up to https://github.com/rust-lang/stdarch/pull/1183 .\n\nImplements the libs-api team decision from rust-lang/rust#84019 (comment) .\n\nIn order to not break nightly users, this PR also adds the newly-moved items to the prelude. However, a decision will need to be made before stabilization as to whether these items should remain in the prelude. I will file an issue for this separately.\n\nFixes #84019 .\n\nr? `@Amanieu`", "tree": {"sha": "1a5ca949896f00d46902426de4abe73416225f5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a5ca949896f00d46902426de4abe73416225f5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65b7aa98c7b3575230eb41e95c7444f0056811dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg9UfoCRBK7hj4Ov3rIwAAFN8IAANyiXzOqhvL8ctTvOz2MLXq\nBkiDfzdZ2DbpW2Twz6rlc80hP0s8+suKu58OmlffMB4JjVCZ1Kbhlp06QQg5fQPE\n5nbCETYMJc3ai9cuVPBTFLWPMwySL4nTb9XZk+uSe83lNYSKNYIp7KKTC781rN9I\nYwRSiv2FpMq7/9RzNQVfiOiXvyy247+BykhpwTKnbiE8+lQELh+9alsQrjffWYQU\n9cnASZRv2RsA2wa8bVnhNOXfP2vOn5UV9ng+YTXkaDVD2898jr7eOEYKe/MTXfsl\nfjvFLfgZWzy4X5jgWVpMw0aOoj7r89dPkHo89IMkVUXREYCTKjod3+Q9lvryDYs=\n=bEsc\n-----END PGP SIGNATURE-----\n", "payload": "tree 1a5ca949896f00d46902426de4abe73416225f5a\nparent 456ebd30d5b5f72d1ff75b6bd7a86612fc28017b\nparent f26fbe2453806adc241ae07942621fa638369c30\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626687464 +0200\ncommitter GitHub <noreply@github.com> 1626687464 +0200\n\nRollup merge of #87227 - bstrie:asm2arch, r=Amanieu\n\nMove asm! and global_asm! to core::arch\n\nFollow-up to https://github.com/rust-lang/stdarch/pull/1183 .\n\nImplements the libs-api team decision from rust-lang/rust#84019 (comment) .\n\nIn order to not break nightly users, this PR also adds the newly-moved items to the prelude. However, a decision will need to be made before stabilization as to whether these items should remain in the prelude. I will file an issue for this separately.\n\nFixes #84019 .\n\nr? `@Amanieu`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65b7aa98c7b3575230eb41e95c7444f0056811dd", "html_url": "https://github.com/rust-lang/rust/commit/65b7aa98c7b3575230eb41e95c7444f0056811dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65b7aa98c7b3575230eb41e95c7444f0056811dd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "url": "https://api.github.com/repos/rust-lang/rust/commits/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "html_url": "https://github.com/rust-lang/rust/commit/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b"}, {"sha": "f26fbe2453806adc241ae07942621fa638369c30", "url": "https://api.github.com/repos/rust-lang/rust/commits/f26fbe2453806adc241ae07942621fa638369c30", "html_url": "https://github.com/rust-lang/rust/commit/f26fbe2453806adc241ae07942621fa638369c30"}], "stats": {"total": 122, "additions": 73, "deletions": 49}, "files": [{"sha": "540cdf124ee9cf5f1a0c12394b61e9e120c6eddf", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=65b7aa98c7b3575230eb41e95c7444f0056811dd", "patch": "@@ -316,5 +316,35 @@ pub mod primitive;\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n mod core_arch;\n \n+#[doc = include_str!(\"../../stdarch/crates/core_arch/src/core_arch_docs.md\")]\n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-pub use core_arch::arch;\n+pub mod arch {\n+    #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n+    pub use crate::core_arch::arch::*;\n+\n+    /// Inline assembly.\n+    ///\n+    /// Read the [unstable book] for the usage.\n+    ///\n+    /// [unstable book]: ../../unstable-book/library-features/asm.html\n+    #[unstable(\n+        feature = \"asm\",\n+        issue = \"72016\",\n+        reason = \"inline assembly is not stable enough for use and is subject to change\"\n+    )]\n+    #[rustc_builtin_macro]\n+    pub macro asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n+        /* compiler built-in */\n+    }\n+\n+    /// Module-level inline assembly.\n+    #[unstable(\n+        feature = \"global_asm\",\n+        issue = \"35119\",\n+        reason = \"`global_asm!` is not stable enough for use and is subject to change\"\n+    )]\n+    #[rustc_builtin_macro]\n+    pub macro global_asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n+        /* compiler built-in */\n+    }\n+}"}, {"sha": "3ca8f27c79ab7f60b11610cdb50595a1b64e2efa", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=65b7aa98c7b3575230eb41e95c7444f0056811dd", "patch": "@@ -1312,27 +1312,6 @@ pub(crate) mod builtin {\n         ($cond:expr, $($arg:tt)+) => {{ /* compiler built-in */ }};\n     }\n \n-    /// Inline assembly.\n-    ///\n-    /// Read the [unstable book] for the usage.\n-    ///\n-    /// [unstable book]: ../unstable-book/library-features/asm.html\n-    #[unstable(\n-        feature = \"asm\",\n-        issue = \"72016\",\n-        reason = \"inline assembly is not stable enough for use and is subject to change\"\n-    )]\n-    #[rustc_builtin_macro]\n-    #[macro_export]\n-    macro_rules! asm {\n-        (\"assembly template\",\n-            $(operands,)*\n-            $(options($(option),*))?\n-        ) => {\n-            /* compiler built-in */\n-        };\n-    }\n-\n     /// LLVM-style inline assembly.\n     ///\n     /// Read the [unstable book] for the usage.\n@@ -1355,23 +1334,6 @@ pub(crate) mod builtin {\n         };\n     }\n \n-    /// Module-level inline assembly.\n-    #[unstable(\n-        feature = \"global_asm\",\n-        issue = \"35119\",\n-        reason = \"`global_asm!` is not stable enough for use and is subject to change\"\n-    )]\n-    #[rustc_builtin_macro]\n-    #[macro_export]\n-    macro_rules! global_asm {\n-        (\"assembly template\",\n-            $(operands,)*\n-            $(options($(option),*))?\n-        ) => {\n-            /* compiler built-in */\n-        };\n-    }\n-\n     /// Prints passed tokens into the standard output.\n     #[unstable(\n         feature = \"log_syntax\","}, {"sha": "6b51ef5b0122d5ccbd89dcce30732a4e23b8a0b2", "filename": "library/core/src/prelude/v1.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fcore%2Fsrc%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fcore%2Fsrc%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprelude%2Fv1.rs?ref=65b7aa98c7b3575230eb41e95c7444f0056811dd", "patch": "@@ -55,11 +55,27 @@ pub use crate::hash::macros::Hash;\n #[allow(deprecated)]\n #[doc(no_inline)]\n pub use crate::{\n-    asm, assert, cfg, column, compile_error, concat, concat_idents, env, file, format_args,\n-    format_args_nl, global_asm, include, include_bytes, include_str, line, llvm_asm, log_syntax,\n-    module_path, option_env, stringify, trace_macros,\n+    assert, cfg, column, compile_error, concat, concat_idents, env, file, format_args,\n+    format_args_nl, include, include_bytes, include_str, line, llvm_asm, log_syntax, module_path,\n+    option_env, stringify, trace_macros,\n };\n \n+#[unstable(\n+    feature = \"asm\",\n+    issue = \"72016\",\n+    reason = \"inline assembly is not stable enough for use and is subject to change\"\n+)]\n+#[doc(no_inline)]\n+pub use crate::arch::asm;\n+\n+#[unstable(\n+    feature = \"global_asm\",\n+    issue = \"35119\",\n+    reason = \"`global_asm!` is not stable enough for use and is subject to change\"\n+)]\n+#[doc(no_inline)]\n+pub use crate::arch::global_asm;\n+\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n #[allow(deprecated, deprecated_in_future)]\n #[doc(no_inline)]"}, {"sha": "cfbfe7cc191605497cfb9bf0302d9b6ac7a7c159", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=65b7aa98c7b3575230eb41e95c7444f0056811dd", "patch": "@@ -556,9 +556,9 @@ pub use core::{\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n #[allow(deprecated)]\n pub use core::{\n-    asm, assert, assert_matches, cfg, column, compile_error, concat, concat_idents, env, file,\n-    format_args, format_args_nl, global_asm, include, include_bytes, include_str, line, llvm_asm,\n-    log_syntax, module_path, option_env, stringify, trace_macros,\n+    assert, assert_matches, cfg, column, compile_error, concat, concat_idents, env, file,\n+    format_args, format_args_nl, include, include_bytes, include_str, line, llvm_asm, log_syntax,\n+    module_path, option_env, stringify, trace_macros,\n };\n \n #[stable(feature = \"core_primitive\", since = \"1.43.0\")]"}, {"sha": "772044f0149200684a69855dce455d52a8c8c187", "filename": "library/std/src/prelude/v1.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fstd%2Fsrc%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b7aa98c7b3575230eb41e95c7444f0056811dd/library%2Fstd%2Fsrc%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprelude%2Fv1.rs?ref=65b7aa98c7b3575230eb41e95c7444f0056811dd", "patch": "@@ -39,12 +39,28 @@ pub use crate::result::Result::{self, Err, Ok};\n #[allow(deprecated)]\n #[doc(no_inline)]\n pub use core::prelude::v1::{\n-    asm, assert, cfg, column, compile_error, concat, concat_idents, env, file, format_args,\n-    format_args_nl, global_asm, include, include_bytes, include_str, line, llvm_asm, log_syntax,\n-    module_path, option_env, stringify, trace_macros, Clone, Copy, Debug, Default, Eq, Hash, Ord,\n-    PartialEq, PartialOrd,\n+    assert, cfg, column, compile_error, concat, concat_idents, env, file, format_args,\n+    format_args_nl, include, include_bytes, include_str, line, llvm_asm, log_syntax, module_path,\n+    option_env, stringify, trace_macros, Clone, Copy, Debug, Default, Eq, Hash, Ord, PartialEq,\n+    PartialOrd,\n };\n \n+#[unstable(\n+    feature = \"asm\",\n+    issue = \"72016\",\n+    reason = \"inline assembly is not stable enough for use and is subject to change\"\n+)]\n+#[doc(no_inline)]\n+pub use core::prelude::v1::asm;\n+\n+#[unstable(\n+    feature = \"global_asm\",\n+    issue = \"35119\",\n+    reason = \"`global_asm!` is not stable enough for use and is subject to change\"\n+)]\n+#[doc(no_inline)]\n+pub use core::prelude::v1::global_asm;\n+\n // FIXME: Attribute and internal derive macros are not documented because for them rustdoc generates\n // dead links which fail link checker testing.\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]"}]}