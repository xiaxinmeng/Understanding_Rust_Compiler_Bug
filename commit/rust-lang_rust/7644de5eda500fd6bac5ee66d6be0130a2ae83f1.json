{"sha": "7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "node_id": "C_kwDOAAsO6NoAKDc2NDRkZTVlZGE1MDBmZDZiYWM1ZWU2NmQ2YmUwMTMwYTJhZTgzZjE", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-12T17:58:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-12T17:58:15Z"}, "message": "Rollup merge of #95783 - notriddle:notriddle/doctest-signal, r=GuillaumeGomez\n\nrustdoc doctest: include signal number in exit status\n\nRelated to #95601", "tree": {"sha": "b00549cbfe0bff3c8aca06a0d1dc6cc497dc66d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b00549cbfe0bff3c8aca06a0d1dc6cc497dc66d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiVb23CRBK7hj4Ov3rIwAA3qoIAGlassyU5gX3S4vecxZApm4z\nEA/BEUzDvmLEkUXQtDVCABC4ZX688WhTx+WG1ghJOVa0qAPAvfnK1assjzWyPBD1\nOi0xzPLozAAoYgUmo3zlkq1dTGqYtrOhu58f62MhXl2Nx7TF/Ga0RJUDxiKrwEE/\nve+jK4ttvPqjw1tpoH1RipFhm2RqpaLIJ9zG7dRPOneN3CdawKWDRIS7DxRY1v3C\n9BkYJ746xmFDxQAe1kxrrY6fYgV3K1CvwqlRvNuCNyMzd3d7P8LzBowLhJ7UfUOi\n/Yy7aI8/n4F9lPVHWsm0bxTO4vO8bo8LGnt7KqwhK8B5GmktJ6kvIJYQS8/LyxI=\n=pkJ3\n-----END PGP SIGNATURE-----\n", "payload": "tree b00549cbfe0bff3c8aca06a0d1dc6cc497dc66d5\nparent 327caac4d01aef74d6577b87c295270608be09fa\nparent 2af843c57da651bd2ce3a8e1e8208deadf08444e\nauthor Mara Bos <m-ou.se@m-ou.se> 1649786295 +0200\ncommitter GitHub <noreply@github.com> 1649786295 +0200\n\nRollup merge of #95783 - notriddle:notriddle/doctest-signal, r=GuillaumeGomez\n\nrustdoc doctest: include signal number in exit status\n\nRelated to #95601\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "html_url": "https://github.com/rust-lang/rust/commit/7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "327caac4d01aef74d6577b87c295270608be09fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/327caac4d01aef74d6577b87c295270608be09fa", "html_url": "https://github.com/rust-lang/rust/commit/327caac4d01aef74d6577b87c295270608be09fa"}, {"sha": "2af843c57da651bd2ce3a8e1e8208deadf08444e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2af843c57da651bd2ce3a8e1e8208deadf08444e", "html_url": "https://github.com/rust-lang/rust/commit/2af843c57da651bd2ce3a8e1e8208deadf08444e"}], "stats": {"total": 94, "additions": 79, "deletions": 15}, "files": [{"sha": "eabe0803b4993ca1f19931273e203bf60e1111b4", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "patch": "@@ -1069,13 +1069,7 @@ impl Tester for Collector {\n                             }\n                         }\n                         TestFailure::ExecutionFailure(out) => {\n-                            let reason = if let Some(code) = out.status.code() {\n-                                format!(\"exit code {code}\")\n-                            } else {\n-                                String::from(\"terminated by signal\")\n-                            };\n-\n-                            eprintln!(\"Test executable failed ({reason}).\");\n+                            eprintln!(\"Test executable failed ({reason}).\", reason = out.status);\n \n                             // FIXME(#12309): An unfortunate side-effect of capturing the test\n                             // executable's output is that the relative ordering between the test's"}, {"sha": "4cd9993d8d5b372a698a8ec99e553566f911c258", "filename": "src/test/rustdoc-ui/failed-doctest-output-windows.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output-windows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output-windows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output-windows.rs?ref=7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "patch": "@@ -0,0 +1,28 @@\n+// only-windows\n+// There's a parallel generic version of this test for non-windows platforms.\n+\n+// Issue #51162: A failed doctest was not printing its stdout/stderr\n+// FIXME: if/when the output of the test harness can be tested on its own, this test should be\n+// adapted to use that, and that normalize line can go away\n+\n+// compile-flags:--test --test-args --test-threads=1\n+// rustc-env:RUST_BACKTRACE=0\n+// normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n+// failure-status: 101\n+\n+// doctest fails at runtime\n+/// ```\n+/// println!(\"stdout 1\");\n+/// eprintln!(\"stderr 1\");\n+/// println!(\"stdout 2\");\n+/// eprintln!(\"stderr 2\");\n+/// panic!(\"oh no\");\n+/// ```\n+pub struct SomeStruct;\n+\n+// doctest fails at compile time\n+/// ```\n+/// no\n+/// ```\n+pub struct OtherStruct;"}, {"sha": "6c147054da3225cfa13f521f78fe3922d1024ef7", "filename": "src/test/rustdoc-ui/failed-doctest-output-windows.stdout", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output-windows.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output-windows.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output-windows.stdout?ref=7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "patch": "@@ -0,0 +1,39 @@\n+\n+running 2 tests\n+test $DIR/failed-doctest-output-windows.rs - OtherStruct (line 25) ... FAILED\n+test $DIR/failed-doctest-output-windows.rs - SomeStruct (line 15) ... FAILED\n+\n+failures:\n+\n+---- $DIR/failed-doctest-output-windows.rs - OtherStruct (line 25) stdout ----\n+error[E0425]: cannot find value `no` in this scope\n+  --> $DIR/failed-doctest-output-windows.rs:26:1\n+   |\n+LL | no\n+   | ^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`.\n+Couldn't compile the test.\n+---- $DIR/failed-doctest-output-windows.rs - SomeStruct (line 15) stdout ----\n+Test executable failed (exit code: 101).\n+\n+stdout:\n+stdout 1\n+stdout 2\n+\n+stderr:\n+stderr 1\n+stderr 2\n+thread 'main' panicked at 'oh no', $DIR/failed-doctest-output-windows.rs:7:1\n+note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n+\n+\n+\n+failures:\n+    $DIR/failed-doctest-output-windows.rs - OtherStruct (line 25)\n+    $DIR/failed-doctest-output-windows.rs - SomeStruct (line 15)\n+\n+test result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n+"}, {"sha": "42de954d052b3fbb2a21ea3b4256aa5f4ecceaab", "filename": "src/test/rustdoc-ui/failed-doctest-output.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.rs?ref=7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "patch": "@@ -1,3 +1,6 @@\n+// ignore-windows\n+// There's a parallel version of this test for Windows.\n+\n // Issue #51162: A failed doctest was not printing its stdout/stderr\n // FIXME: if/when the output of the test harness can be tested on its own, this test should be\n // adapted to use that, and that normalize line can go away"}, {"sha": "630198a561af00db927e045cd397d35a6673f173", "filename": "src/test/rustdoc-ui/failed-doctest-output.stdout", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7644de5eda500fd6bac5ee66d6be0130a2ae83f1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout?ref=7644de5eda500fd6bac5ee66d6be0130a2ae83f1", "patch": "@@ -1,13 +1,13 @@\n \n running 2 tests\n-test $DIR/failed-doctest-output.rs - OtherStruct (line 22) ... FAILED\n-test $DIR/failed-doctest-output.rs - SomeStruct (line 12) ... FAILED\n+test $DIR/failed-doctest-output.rs - OtherStruct (line 25) ... FAILED\n+test $DIR/failed-doctest-output.rs - SomeStruct (line 15) ... FAILED\n \n failures:\n \n----- $DIR/failed-doctest-output.rs - OtherStruct (line 22) stdout ----\n+---- $DIR/failed-doctest-output.rs - OtherStruct (line 25) stdout ----\n error[E0425]: cannot find value `no` in this scope\n-  --> $DIR/failed-doctest-output.rs:23:1\n+  --> $DIR/failed-doctest-output.rs:26:1\n    |\n LL | no\n    | ^^ not found in this scope\n@@ -16,8 +16,8 @@ error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0425`.\n Couldn't compile the test.\n----- $DIR/failed-doctest-output.rs - SomeStruct (line 12) stdout ----\n-Test executable failed (exit code 101).\n+---- $DIR/failed-doctest-output.rs - SomeStruct (line 15) stdout ----\n+Test executable failed (exit status: 101).\n \n stdout:\n stdout 1\n@@ -32,8 +32,8 @@ note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n \n \n failures:\n-    $DIR/failed-doctest-output.rs - OtherStruct (line 22)\n-    $DIR/failed-doctest-output.rs - SomeStruct (line 12)\n+    $DIR/failed-doctest-output.rs - OtherStruct (line 25)\n+    $DIR/failed-doctest-output.rs - SomeStruct (line 15)\n \n test result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}]}