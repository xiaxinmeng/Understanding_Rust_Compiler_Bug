{"sha": "e28521ede79fb9179faf9cfabd7f6dd627b84238", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyODUyMWVkZTc5ZmI5MTc5ZmFmOWNmYWJkN2Y2ZGQ2MjdiODQyMzg=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-08T04:07:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-08T04:07:36Z"}, "message": "Remove unnecessary `main` functions in doc examples.", "tree": {"sha": "aabe67014f3d94407fc525e1c296c97a611e02dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aabe67014f3d94407fc525e1c296c97a611e02dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e28521ede79fb9179faf9cfabd7f6dd627b84238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e28521ede79fb9179faf9cfabd7f6dd627b84238", "html_url": "https://github.com/rust-lang/rust/commit/e28521ede79fb9179faf9cfabd7f6dd627b84238", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e28521ede79fb9179faf9cfabd7f6dd627b84238/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1744c46e47434d8c0b63a839678ce45f1988bb74", "url": "https://api.github.com/repos/rust-lang/rust/commits/1744c46e47434d8c0b63a839678ce45f1988bb74", "html_url": "https://github.com/rust-lang/rust/commit/1744c46e47434d8c0b63a839678ce45f1988bb74"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "77b90c0846bbe44f2349b7a674223d6f47ea59f9", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e28521ede79fb9179faf9cfabd7f6dd627b84238/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e28521ede79fb9179faf9cfabd7f6dd627b84238/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=e28521ede79fb9179faf9cfabd7f6dd627b84238", "patch": "@@ -99,11 +99,9 @@ pub struct CString {\n ///\n /// extern { fn my_string() -> *const c_char; }\n ///\n-/// fn main() {\n-///     unsafe {\n-///         let slice = CStr::from_ptr(my_string());\n-///         println!(\"string length: {}\", slice.to_bytes().len());\n-///     }\n+/// unsafe {\n+///     let slice = CStr::from_ptr(my_string());\n+///     println!(\"string length: {}\", slice.to_bytes().len());\n /// }\n /// ```\n ///\n@@ -119,10 +117,8 @@ pub struct CString {\n ///     unsafe { work_with(data.as_ptr()) }\n /// }\n ///\n-/// fn main() {\n-///     let s = CString::new(\"data data data data\").unwrap();\n-///     work(&s);\n-/// }\n+/// let s = CString::new(\"data data data data\").unwrap();\n+/// work(&s);\n /// ```\n ///\n /// Converting a foreign C string into a Rust `String`\n@@ -139,9 +135,7 @@ pub struct CString {\n ///     }\n /// }\n ///\n-/// fn main() {\n-///     println!(\"string: {}\", my_string_safe());\n-/// }\n+/// println!(\"string: {}\", my_string_safe());\n /// ```\n #[derive(Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -188,11 +182,9 @@ impl CString {\n     ///\n     /// extern { fn puts(s: *const c_char); }\n     ///\n-    /// fn main() {\n-    ///     let to_print = CString::new(\"Hello!\").unwrap();\n-    ///     unsafe {\n-    ///         puts(to_print.as_ptr());\n-    ///     }\n+    /// let to_print = CString::new(\"Hello!\").unwrap();\n+    /// unsafe {\n+    ///     puts(to_print.as_ptr());\n     /// }\n     /// ```\n     ///"}]}