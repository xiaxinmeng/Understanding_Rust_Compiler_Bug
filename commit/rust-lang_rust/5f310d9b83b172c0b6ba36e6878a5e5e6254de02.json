{"sha": "5f310d9b83b172c0b6ba36e6878a5e5e6254de02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMzEwZDliODNiMTcyYzBiNmJhMzZlNjg3OGE1ZTVlNjI1NGRlMDI=", "commit": {"author": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2020-11-07T14:28:55Z"}, "committer": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2020-11-11T12:10:52Z"}, "message": "Implement destructuring assignment for structs and slices\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "131773f2c05d77489382a45b256adad68d4e3888", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/131773f2c05d77489382a45b256adad68d4e3888"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f310d9b83b172c0b6ba36e6878a5e5e6254de02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f310d9b83b172c0b6ba36e6878a5e5e6254de02", "html_url": "https://github.com/rust-lang/rust/commit/5f310d9b83b172c0b6ba36e6878a5e5e6254de02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f310d9b83b172c0b6ba36e6878a5e5e6254de02/comments", "author": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6294300b8ec9b9eec0ec7fb0435aff93a299ed63", "url": "https://api.github.com/repos/rust-lang/rust/commits/6294300b8ec9b9eec0ec7fb0435aff93a299ed63", "html_url": "https://github.com/rust-lang/rust/commit/6294300b8ec9b9eec0ec7fb0435aff93a299ed63"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "7b65e664867ff6871c3844f63cfeb2570cd1a386", "filename": "clippy_lints/src/utils/ast_utils.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5f310d9b83b172c0b6ba36e6878a5e5e6254de02/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f310d9b83b172c0b6ba36e6878a5e5e6254de02/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs?ref=5f310d9b83b172c0b6ba36e6878a5e5e6254de02", "patch": "@@ -107,6 +107,15 @@ pub fn eq_expr_opt(l: &Option<P<Expr>>, r: &Option<P<Expr>>) -> bool {\n     both(l, r, |l, r| eq_expr(l, r))\n }\n \n+pub fn eq_struct_rest(l: &StructRest, r: &StructRest) -> bool {\n+    match (l, r) {\n+        (StructRest::Base(lb), StructRest::Base(rb)) => eq_expr(lb, rb),\n+        (StructRest::Rest(_), StructRest::Rest(_)) => true,\n+        (StructRest::None, StructRest::None) => true,\n+        _ => false,\n+    }\n+}\n+\n pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n     use ExprKind::*;\n     if !over(&l.attrs, &r.attrs, |l, r| eq_attr(l, r)) {\n@@ -150,7 +159,7 @@ pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n         (Path(lq, lp), Path(rq, rp)) => both(lq, rq, |l, r| eq_qself(l, r)) && eq_path(lp, rp),\n         (MacCall(l), MacCall(r)) => eq_mac_call(l, r),\n         (Struct(lp, lfs, lb), Struct(rp, rfs, rb)) => {\n-            eq_path(lp, rp) && eq_expr_opt(lb, rb) && unordered_over(lfs, rfs, |l, r| eq_field(l, r))\n+            eq_path(lp, rp) && eq_struct_rest(lb, rb) && unordered_over(lfs, rfs, |l, r| eq_field(l, r))\n         },\n         _ => false,\n     }"}, {"sha": "c38727316cd4e8dff0d860c058609953eb1e42da", "filename": "tests/ui/crashes/ice-6250.stderr", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5f310d9b83b172c0b6ba36e6878a5e5e6254de02/tests%2Fui%2Fcrashes%2Fice-6250.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f310d9b83b172c0b6ba36e6878a5e5e6254de02/tests%2Fui%2Fcrashes%2Fice-6250.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6250.stderr?ref=5f310d9b83b172c0b6ba36e6878a5e5e6254de02", "patch": "@@ -1,3 +1,14 @@\n+error[E0658]: destructuring assignments are unstable\n+  --> $DIR/ice-6250.rs:12:25\n+   |\n+LL |         Some(reference) = cache.data.get(key) {\n+   |         --------------- ^\n+   |         |\n+   |         cannot assign to this expression\n+   |\n+   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n+   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n+\n error[E0601]: `main` function not found in crate `ice_6250`\n   --> $DIR/ice-6250.rs:4:1\n    |\n@@ -10,18 +21,22 @@ LL | |     }\n LL | | }\n    | |_^ consider adding a `main` function to `$DIR/ice-6250.rs`\n \n+error[E0308]: mismatched types\n+  --> $DIR/ice-6250.rs:12:14\n+   |\n+LL |         Some(reference) = cache.data.get(key) {\n+   |              ^^^^^^^^^\n+   |              |\n+   |              expected integer, found `&i32`\n+   |              help: consider dereferencing the borrow: `*reference`\n+\n error[E0308]: mismatched types\n   --> $DIR/ice-6250.rs:12:9\n    |\n LL |         Some(reference) = cache.data.get(key) {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `()`\n-   |\n-help: you might have meant to use pattern matching\n-   |\n-LL |         let Some(reference) = cache.data.get(key) {\n-   |         ^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0308, E0601.\n+Some errors have detailed explanations: E0308, E0601, E0658.\n For more information about an error, try `rustc --explain E0308`."}]}