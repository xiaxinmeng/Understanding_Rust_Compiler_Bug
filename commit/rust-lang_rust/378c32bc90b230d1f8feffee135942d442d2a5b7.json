{"sha": "378c32bc90b230d1f8feffee135942d442d2a5b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3OGMzMmJjOTBiMjMwZDFmOGZlZmZlZTEzNTk0MmQ0NDJkMmE1Yjc=", "commit": {"author": {"name": "Sam Radhakrishan", "email": "sk09idm@gmail.com", "date": "2019-08-29T19:27:20Z"}, "committer": {"name": "Sam Radhakrishan", "email": "sk09idm@gmail.com", "date": "2019-08-29T19:27:20Z"}, "message": "Fix test.", "tree": {"sha": "954c2ec266ec490847b0f378045d49ea08fd7cce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/954c2ec266ec490847b0f378045d49ea08fd7cce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/378c32bc90b230d1f8feffee135942d442d2a5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/378c32bc90b230d1f8feffee135942d442d2a5b7", "html_url": "https://github.com/rust-lang/rust/commit/378c32bc90b230d1f8feffee135942d442d2a5b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/378c32bc90b230d1f8feffee135942d442d2a5b7/comments", "author": {"login": "sam09", "id": 6648290, "node_id": "MDQ6VXNlcjY2NDgyOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6648290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam09", "html_url": "https://github.com/sam09", "followers_url": "https://api.github.com/users/sam09/followers", "following_url": "https://api.github.com/users/sam09/following{/other_user}", "gists_url": "https://api.github.com/users/sam09/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam09/subscriptions", "organizations_url": "https://api.github.com/users/sam09/orgs", "repos_url": "https://api.github.com/users/sam09/repos", "events_url": "https://api.github.com/users/sam09/events{/privacy}", "received_events_url": "https://api.github.com/users/sam09/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sam09", "id": 6648290, "node_id": "MDQ6VXNlcjY2NDgyOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6648290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam09", "html_url": "https://github.com/sam09", "followers_url": "https://api.github.com/users/sam09/followers", "following_url": "https://api.github.com/users/sam09/following{/other_user}", "gists_url": "https://api.github.com/users/sam09/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam09/subscriptions", "organizations_url": "https://api.github.com/users/sam09/orgs", "repos_url": "https://api.github.com/users/sam09/repos", "events_url": "https://api.github.com/users/sam09/events{/privacy}", "received_events_url": "https://api.github.com/users/sam09/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdd8b967c180192fb74bf17f07e2fda040bb9865", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdd8b967c180192fb74bf17f07e2fda040bb9865", "html_url": "https://github.com/rust-lang/rust/commit/fdd8b967c180192fb74bf17f07e2fda040bb9865"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a53fb12367d0e7bfb591074d10ffdc94885b3bb6", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/378c32bc90b230d1f8feffee135942d442d2a5b7/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378c32bc90b230d1f8feffee135942d442d2a5b7/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=378c32bc90b230d1f8feffee135942d442d2a5b7", "patch": "@@ -1392,14 +1392,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         base_did: DefId,\n     ) {\n         let struct_path = self.tcx().def_path_str(base_did);\n+        let kind_name = match self.tcx().def_kind(base_did) {\n+            Some(def_kind) => def_kind.descr(base_did),\n+            _ => \" \",\n+        };\n         let mut err = struct_span_err!(\n             self.tcx().sess,\n             expr.span,\n             E0616,\n-            \"field `{}` of `{}` `{}` is private\",\n+            \"field `{}` of {} `{}` is private\",\n             field,\n-            if let Some(def_kind) = self.tcx().def_kind(base_did){ def_kind.descr(base_did) }\n-            else { \" \" },\n+            kind_name,\n             struct_path\n         );\n         // Also check if an accessible method exists, which is often what is meant."}, {"sha": "c2458f74bc8f91ed959cf0b04b31b43e71733456", "filename": "src/test/ui/privacy/union-field-privacy-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378c32bc90b230d1f8feffee135942d442d2a5b7/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378c32bc90b230d1f8feffee135942d442d2a5b7/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.rs?ref=378c32bc90b230d1f8feffee135942d442d2a5b7", "patch": "@@ -11,5 +11,5 @@ fn main() {\n \n     let a = u.a; // OK\n     let b = u.b; // OK\n-    let c = u.c; //~ ERROR field `c` of struct `m::U` is private\n+    let c = u.c; //~ ERROR field `c` of union `m::U` is private\n }"}, {"sha": "8789178caac26cc8bf7973669f0fb18b2b7236e6", "filename": "src/test/ui/privacy/union-field-privacy-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378c32bc90b230d1f8feffee135942d442d2a5b7/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/378c32bc90b230d1f8feffee135942d442d2a5b7/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-2.stderr?ref=378c32bc90b230d1f8feffee135942d442d2a5b7", "patch": "@@ -1,4 +1,4 @@\n-error[E0616]: field `c` of struct `m::U` is private\n+error[E0616]: field `c` of union `m::U` is private\n   --> $DIR/union-field-privacy-2.rs:14:13\n    |\n LL |     let c = u.c;"}]}