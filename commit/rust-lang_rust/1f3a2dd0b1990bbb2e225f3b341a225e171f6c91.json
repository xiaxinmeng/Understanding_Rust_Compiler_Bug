{"sha": "1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "node_id": "C_kwDOAAsO6NoAKDFmM2EyZGQwYjE5OTBiYmIyZTIyNWYzYjM0MWEyMjVlMTcxZjZjOTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-21T21:03:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-21T21:03:16Z"}, "message": "Rollup merge of #92963 - terrarier2111:tuple-diagnostic, r=davidtwco\n\nImplement tuple array diagnostic\n\nFixes https://github.com/rust-lang/rust/issues/92089", "tree": {"sha": "04e7cd3acc9aa96527bffa13b0bcc900ee2f04c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04e7cd3acc9aa96527bffa13b0bcc900ee2f04c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6x+UCRBK7hj4Ov3rIwAASRUIABEoPHDKOYUkV7EZu1RPLEFJ\nud3tdnc6w4Q6uvGfd96kzfdTZcmGu3BhGaIuypFImG3j8QfpcVE4TemaKRTA9WBW\nRSFnd5b2cwcK9iUaxByoCEd9AsJmrYIpjN9TwNtByKp6N2T8hkSrRahboyuS8DC2\nTjINEmRylOizzUgs7mE1eTIB2TGeJtTl0+3bSdVAGNSvwETq/lKKHq+Mu3sC2tOs\nNCRM/E/vP2MrhrjcM17SDSu+++OTEULPrUgJkyLY/CagtzYPejlfqJnmmFYueZTg\nF+W3p6GesdkVU4WwWvym1UprcDQyhtaROZ1PxDf1NR2HjcIVySevf+2CkCLM9vc=\n=0ir/\n-----END PGP SIGNATURE-----\n", "payload": "tree 04e7cd3acc9aa96527bffa13b0bcc900ee2f04c3\nparent 430673f26590f5f40bb6a6587d43136d0b5604dc\nparent ef46e38c2bc9c86dcc48b511885630ed9f842a55\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642798996 +0100\ncommitter GitHub <noreply@github.com> 1642798996 +0100\n\nRollup merge of #92963 - terrarier2111:tuple-diagnostic, r=davidtwco\n\nImplement tuple array diagnostic\n\nFixes https://github.com/rust-lang/rust/issues/92089\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "html_url": "https://github.com/rust-lang/rust/commit/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "430673f26590f5f40bb6a6587d43136d0b5604dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/430673f26590f5f40bb6a6587d43136d0b5604dc", "html_url": "https://github.com/rust-lang/rust/commit/430673f26590f5f40bb6a6587d43136d0b5604dc"}, {"sha": "ef46e38c2bc9c86dcc48b511885630ed9f842a55", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef46e38c2bc9c86dcc48b511885630ed9f842a55", "html_url": "https://github.com/rust-lang/rust/commit/ef46e38c2bc9c86dcc48b511885630ed9f842a55"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "0fea0afb572c9368f41cda8b8ccd6d1427c44b16", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "patch": "@@ -307,6 +307,36 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    /// Give appropriate suggestion when encountering `[(\"a\", 0) (\"b\", 1)]`, where the\n+    /// likely intention is to create an array containing tuples.\n+    fn maybe_suggest_bad_array_definition(\n+        &self,\n+        err: &mut DiagnosticBuilder<'a>,\n+        call_expr: &'tcx hir::Expr<'tcx>,\n+        callee_expr: &'tcx hir::Expr<'tcx>,\n+    ) -> bool {\n+        let hir_id = self.tcx.hir().get_parent_node(call_expr.hir_id);\n+        let parent_node = self.tcx.hir().get(hir_id);\n+        if let (\n+            hir::Node::Expr(hir::Expr { kind: hir::ExprKind::Array(_), .. }),\n+            hir::ExprKind::Tup(exp),\n+            hir::ExprKind::Call(_, args),\n+        ) = (parent_node, &callee_expr.kind, &call_expr.kind)\n+        {\n+            if args.len() == exp.len() {\n+                let start = callee_expr.span.shrink_to_hi();\n+                err.span_suggestion(\n+                    start,\n+                    \"consider separating array elements with a comma\",\n+                    \",\".to_string(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+                return true;\n+            }\n+        }\n+        false\n+    }\n+\n     fn confirm_builtin_call(\n         &self,\n         call_expr: &'tcx hir::Expr<'tcx>,\n@@ -422,7 +452,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     _ => Res::Err,\n                 };\n \n-                err.span_label(call_expr.span, \"call expression requires function\");\n+                if !self.maybe_suggest_bad_array_definition(&mut err, call_expr, callee_expr) {\n+                    err.span_label(call_expr.span, \"call expression requires function\");\n+                }\n \n                 if let Some(span) = self.tcx.hir().res_span(def) {\n                     let callee_ty = callee_ty.to_string();"}, {"sha": "c87a3e348a2e97f83cf094fd29b7e4bfd5ffae02", "filename": "src/test/ui/issues/issue-5100.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr?ref=1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "patch": "@@ -59,10 +59,8 @@ LL |         &(true, false) => ()\n error[E0618]: expected function, found `(char, char)`\n   --> $DIR/issue-5100.rs:48:14\n    |\n-LL |       let v = [('a', 'b')\n-   |  ______________-^^^^^^^^^\n-LL | |              ('c', 'd'),\n-   | |_______________________- call expression requires function\n+LL |     let v = [('a', 'b')\n+   |              ^^^^^^^^^^- help: consider separating array elements with a comma: `,`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-5100.rs:55:19"}, {"sha": "1929dab073169fcb6216b280d397af156d8d5c44", "filename": "src/test/ui/tuple/array-diagnostics.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.rs?ref=1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let _tmp = [\n+        (\"C200B40A82\", 3),\n+        (\"C200B40A83\", 4) //~ ERROR: expected function, found `(&'static str, {integer})` [E0618]\n+        (\"C200B40A8537\", 5),\n+    ];\n+}"}, {"sha": "a10d7af470c7ce6eb10a2989ea3e4766d69c5c17", "filename": "src/test/ui/tuple/array-diagnostics.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f3a2dd0b1990bbb2e225f3b341a225e171f6c91/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Farray-diagnostics.stderr?ref=1f3a2dd0b1990bbb2e225f3b341a225e171f6c91", "patch": "@@ -0,0 +1,9 @@\n+error[E0618]: expected function, found `(&'static str, {integer})`\n+  --> $DIR/array-diagnostics.rs:4:9\n+   |\n+LL |         (\"C200B40A83\", 4)\n+   |         ^^^^^^^^^^^^^^^^^- help: consider separating array elements with a comma: `,`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0618`."}]}