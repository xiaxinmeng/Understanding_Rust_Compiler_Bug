{"sha": "54133cfcf49c68886a7cd8046007ea14e3d3944d", "node_id": "C_kwDOAAsO6NoAKDU0MTMzY2ZjZjQ5YzY4ODg2YTdjZDgwNDYwMDdlYTE0ZTNkMzk0NGQ", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2022-02-06T21:51:11Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2022-05-11T08:29:56Z"}, "message": "Only compile #[used] as llvm.compiler.used for ELF targets", "tree": {"sha": "09f22cb6e789c937d4edccc8f8450b0328d31efe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09f22cb6e789c937d4edccc8f8450b0328d31efe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54133cfcf49c68886a7cd8046007ea14e3d3944d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEh0+qV0hta6XFe2D54u/UMJ4RyKgFAmJ7dAQACgkQ4u/UMJ4R\nyKitzRAAjdnYSjDPpEGsSkmwHb2iAM+1GtlWD4T9YF2PDziOyNfnhruHirJbZMOR\ncj3a7XKVl3ruUZRXgmUQkCPsG+EzWAioyL3xEL/RLfp9hBd1bcWvhQkLQywSShcZ\nlZOEvk3RHYqHqOs6HPEoMJoFT6XN50Mq+IIR97aHeyx3Ybc70ZHN1wddpEI6hEEq\nHimEbK/TPiDwL1C1XojyNdym+uTIQCRObEkMH+BrgHIJulEeo9dZ1LsR+Zc+rSfY\n15pjAzuUb7sxd4dnTrpSd40fI/PIBjmH3acrTW20TUlevoWfwkn86EAz22QmsABp\nd9XKHAKIOiksPIwI/6zLklzR+tS5HXuUZbdJdqDpKR84ix4HnylE0Tvrgc45tWhS\nuUg/Dd7dMnrzYe5/sXbBY0SBaMWIcRYEy5Bqq3en5EAGlp3De6AMCPgy9lFqI82Y\nOfRvbGHmvuy6uBd8KQtwok9p6PC5IUnTsJF89Zdj76/SgHIOerviwR8vKOVWC8xb\nuBN/VukI8TgqLxQ4ItianwKAImh8lWhh/Nm3Vb0Oxm7u72b/lEAG6wMxFVtwMv0v\nRGg/TAgT6VV+Bh2jlWAtaKntDpC1KWWqob/Ahk6NLvUxd1Fd1+1/9UDyPnDKGVhy\nWWwPD9ZyGzw7EWmTqqXOjoLXKlN+sW5pxxN7FRBMIBmZncyis7c=\n=sEsL\n-----END PGP SIGNATURE-----", "payload": "tree 09f22cb6e789c937d4edccc8f8450b0328d31efe\nparent ecd44958e0a21110d09862ee080d95a4ca6c52f8\nauthor Thom Chiovoloni <chiovolonit@gmail.com> 1644184271 -0800\ncommitter Thom Chiovoloni <chiovolonit@gmail.com> 1652257796 -0700\n\nOnly compile #[used] as llvm.compiler.used for ELF targets\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54133cfcf49c68886a7cd8046007ea14e3d3944d", "html_url": "https://github.com/rust-lang/rust/commit/54133cfcf49c68886a7cd8046007ea14e3d3944d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54133cfcf49c68886a7cd8046007ea14e3d3944d/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd44958e0a21110d09862ee080d95a4ca6c52f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd44958e0a21110d09862ee080d95a4ca6c52f8", "html_url": "https://github.com/rust-lang/rust/commit/ecd44958e0a21110d09862ee080d95a4ca6c52f8"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "98b412f9397e97fb6da31322c2ab6bfda4ff951b", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/54133cfcf49c68886a7cd8046007ea14e3d3944d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54133cfcf49c68886a7cd8046007ea14e3d3944d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=54133cfcf49c68886a7cd8046007ea14e3d3944d", "patch": "@@ -535,11 +535,41 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n \n                 // The semantics of #[used] in Rust only require the symbol to make it into the\n                 // object file. It is explicitly allowed for the linker to strip the symbol if it\n-                // is dead. As such, use llvm.compiler.used instead of llvm.used.\n+                // is dead, which means we are allowed use `llvm.compiler.used` instead of\n+                // `llvm.used` here.\n+                //\n                 // Additionally, https://reviews.llvm.org/D97448 in LLVM 13 started emitting unique\n                 // sections with SHF_GNU_RETAIN flag for llvm.used symbols, which may trigger bugs\n-                // in some versions of the gold linker.\n-                self.add_compiler_used_global(g);\n+                // in the handling of `.init_array` (the static constructor list) in versions of\n+                // the gold linker (prior to the one released with binutils 2.36).\n+                //\n+                // However, unconditional use of `llvm.compiler.used` caused a nontrivial amount of\n+                // ecosystem breakage, especially on Mach-O targets. To resolve this, we compile it\n+                // as llvm.used on ELF targets and llvm.compiler.used elsewhere, which and should be\n+                // equivalent to how we compiled `#[used]` before LLVM 13, as `llvm.used` and\n+                // `llvm.compiler.used` were treated the same on ELF targets prior in earlier LLVM\n+                // versions (additionally, it seems to be how Clang handles `__attribute__((used))`,\n+                // perhaps for similar compatibility-motivated reasons).\n+                //\n+                // See https://github.com/rust-lang/rust/issues/47384#issuecomment-1019080146 and\n+                // following comments for some discussion of this.\n+                //\n+                // The final wrinkle is it's not really clear how to tell if we're going to output\n+                // ELF, so it's been approximated as \"not like wasm, osx, or windows\", which is\n+                // not exactly correct, but is pretty close and hopefully handles all the platforms\n+                // platforms where old versions of `ld.gold` are likely to show up.\n+                //\n+                // All this is subject to change in the future. Which is a good thing, because this\n+                // probably should be firmed up somehow!\n+                let seems_like_elf = !(self.tcx.sess.target.is_like_osx\n+                    || self.tcx.sess.target.is_like_windows\n+                    || self.tcx.sess.target.is_like_wasm);\n+\n+                if seems_like_elf {\n+                    self.add_compiler_used_global(g);\n+                } else {\n+                    self.add_used_global(g);\n+                }\n             }\n             if attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER) {\n                 // `USED` and `USED_LINKER` can't be used together."}, {"sha": "413d31bb94293db88ca40e7f84af41f3d7f56829", "filename": "compiler/rustc_codegen_ssa/src/traits/statics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54133cfcf49c68886a7cd8046007ea14e3d3944d/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54133cfcf49c68886a7cd8046007ea14e3d3944d/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fstatics.rs?ref=54133cfcf49c68886a7cd8046007ea14e3d3944d", "patch": "@@ -13,7 +13,9 @@ pub trait StaticMethods: BackendTypes {\n     /// Same as add_used_global(), but only prevent the compiler from potentially removing an\n     /// otherwise unused symbol. The linker is still permitted to drop it.\n     ///\n-    /// This corresponds to the semantics of the `#[used]` attribute.\n+    /// This corresponds to the documented semantics of the `#[used]` attribute, although\n+    /// on some targets (non-ELF), we may use `add_used_global` for `#[used]` statics\n+    /// instead.\n     fn add_compiler_used_global(&self, global: Self::Value);\n }\n "}]}