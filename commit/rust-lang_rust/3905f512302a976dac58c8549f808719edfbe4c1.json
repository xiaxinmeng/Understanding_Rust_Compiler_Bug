{"sha": "3905f512302a976dac58c8549f808719edfbe4c1", "node_id": "C_kwDOAAsO6NoAKDM5MDVmNTEyMzAyYTk3NmRhYzU4Yzg1NDlmODA4NzE5ZWRmYmU0YzE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-15T16:12:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-15T16:12:12Z"}, "message": "Auto merge of #10073 - xFrednet:changelog-1-66, r=Alexendoo\n\nChangelog 1.66\n\nIt's really nice to see a changelog with so many suggestion fixes and improvements. Not much else to say. This should be merged with the coming release on 2022-12-15. For the reviewer, please review it and approve it if it looks good. The merge should wait until the release :)\n\n---\n\nchangelog: none\n\n<!-- changelog_checked -->", "tree": {"sha": "f06ef3167bc5c8a9bca95221c6f33d65cac5da96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f06ef3167bc5c8a9bca95221c6f33d65cac5da96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3905f512302a976dac58c8549f808719edfbe4c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3905f512302a976dac58c8549f808719edfbe4c1", "html_url": "https://github.com/rust-lang/rust/commit/3905f512302a976dac58c8549f808719edfbe4c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3905f512302a976dac58c8549f808719edfbe4c1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f43e4f30d884a07917e78fa0b241ff91efc931cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/f43e4f30d884a07917e78fa0b241ff91efc931cf", "html_url": "https://github.com/rust-lang/rust/commit/f43e4f30d884a07917e78fa0b241ff91efc931cf"}, {"sha": "71019aa07613724f1421edc4ead49b04728a7959", "url": "https://api.github.com/repos/rust-lang/rust/commits/71019aa07613724f1421edc4ead49b04728a7959", "html_url": "https://github.com/rust-lang/rust/commit/71019aa07613724f1421edc4ead49b04728a7959"}], "stats": {"total": 186, "additions": 178, "deletions": 8}, "files": [{"sha": "903ee938d9d2d2f73e535c3b05eff4be2b628b49", "filename": "CHANGELOG.md", "status": "modified", "additions": 172, "deletions": 2, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/3905f512302a976dac58c8549f808719edfbe4c1/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/3905f512302a976dac58c8549f808719edfbe4c1/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=3905f512302a976dac58c8549f808719edfbe4c1", "patch": "@@ -6,11 +6,181 @@ document.\n \n ## Unreleased / Beta / In Rust Nightly\n \n-[b52fb523...master](https://github.com/rust-lang/rust-clippy/compare/b52fb523...master)\n+[4f142aa1...master](https://github.com/rust-lang/rust-clippy/compare/4f142aa1...master)\n+\n+## Rust 1.66\n+\n+Current stable, released 2022-12-15\n+\n+[b52fb523...4f142aa1](https://github.com/rust-lang/rust-clippy/compare/b52fb523...4f142aa1)\n+\n+### New Lints\n+\n+* [`manual_clamp`]\n+  [#9484](https://github.com/rust-lang/rust-clippy/pull/9484)\n+* [`missing_trait_methods`]\n+  [#9670](https://github.com/rust-lang/rust-clippy/pull/9670)\n+* [`unused_format_specs`]\n+  [#9637](https://github.com/rust-lang/rust-clippy/pull/9637)\n+* [`iter_kv_map`]\n+  [#9409](https://github.com/rust-lang/rust-clippy/pull/9409)\n+* [`manual_filter`]\n+  [#9451](https://github.com/rust-lang/rust-clippy/pull/9451)\n+* [`box_default`]\n+  [#9511](https://github.com/rust-lang/rust-clippy/pull/9511)\n+* [`implicit_saturating_add`]\n+  [#9549](https://github.com/rust-lang/rust-clippy/pull/9549)\n+* [`as_ptr_cast_mut`]\n+  [#9572](https://github.com/rust-lang/rust-clippy/pull/9572)\n+* [`disallowed_macros`]\n+  [#9495](https://github.com/rust-lang/rust-clippy/pull/9495)\n+* [`partial_pub_fields`]\n+  [#9658](https://github.com/rust-lang/rust-clippy/pull/9658)\n+* [`uninlined_format_args`]\n+  [#9233](https://github.com/rust-lang/rust-clippy/pull/9233)\n+* [`cast_nan_to_int`]\n+  [#9617](https://github.com/rust-lang/rust-clippy/pull/9617)\n+\n+### Moves and Deprecations\n+\n+* `positional_named_format_parameters` was uplifted to rustc under the new name\n+  `named_arguments_used_positionally`\n+  [#8518](https://github.com/rust-lang/rust-clippy/pull/8518)\n+* Moved [`implicit_saturating_sub`] to `style` (Now warn-by-default)\n+  [#9584](https://github.com/rust-lang/rust-clippy/pull/9584)\n+* Moved `derive_partial_eq_without_eq` to `nursery` (now allow-by-default)\n+  [#9536](https://github.com/rust-lang/rust-clippy/pull/9536)\n+\n+### Enhancements\n+\n+* [`nonstandard_macro_braces`]: Now includes `matches!()` in the default lint config\n+  [#9471](https://github.com/rust-lang/rust-clippy/pull/9471)\n+* [`suboptimal_flops`]: Now supports multiplication and subtraction operations\n+  [#9581](https://github.com/rust-lang/rust-clippy/pull/9581)\n+* [`arithmetic_side_effects`]: Now detects cases with literals behind references\n+  [#9587](https://github.com/rust-lang/rust-clippy/pull/9587)\n+* [`upper_case_acronyms`]: Now also checks enum names\n+  [#9580](https://github.com/rust-lang/rust-clippy/pull/9580)\n+* [`needless_borrowed_reference`]: Now lints nested patterns\n+  [#9573](https://github.com/rust-lang/rust-clippy/pull/9573)\n+* [`unnecessary_cast`]: Now works for non-trivial non-literal expressions\n+  [#9576](https://github.com/rust-lang/rust-clippy/pull/9576)\n+* [`arithmetic_side_effects`]: Now detects operations with custom types\n+  [#9559](https://github.com/rust-lang/rust-clippy/pull/9559)\n+* [`disallowed_methods`], [`disallowed_types`]: Not correctly lints types, functions and macros\n+  with the same path\n+  [#9495](https://github.com/rust-lang/rust-clippy/pull/9495)\n+* [`self_named_module_files`], [`mod_module_files`]: Now take remapped path prefixes into account\n+  [#9475](https://github.com/rust-lang/rust-clippy/pull/9475)\n+* [`bool_to_int_with_if`]: Now detects the inverse if case\n+  [#9476](https://github.com/rust-lang/rust-clippy/pull/9476)\n+\n+### False Positive Fixes\n+\n+* [`arithmetic_side_effects`]: Now allows operations that can't overflow\n+  [#9474](https://github.com/rust-lang/rust-clippy/pull/9474)\n+* [`unnecessary_lazy_evaluations`]: No longer lints in external macros\n+  [#9486](https://github.com/rust-lang/rust-clippy/pull/9486)\n+* [`needless_borrow`], [`explicit_auto_deref`]: No longer lint on unions that require the reference\n+  [#9490](https://github.com/rust-lang/rust-clippy/pull/9490)\n+* [`almost_complete_letter_range`]: No longer lints in external macros\n+  [#9467](https://github.com/rust-lang/rust-clippy/pull/9467)\n+* [`drop_copy`]: No longer lints on idiomatic cases in match arms \n+  [#9491](https://github.com/rust-lang/rust-clippy/pull/9491)\n+* [`question_mark`]: No longer lints in const context\n+  [#9487](https://github.com/rust-lang/rust-clippy/pull/9487)\n+* [`collapsible_if`]: Suggestion now work in macros\n+  [#9410](https://github.com/rust-lang/rust-clippy/pull/9410)\n+* [`std_instead_of_core`]: No longer triggers on unstable modules\n+  [#9545](https://github.com/rust-lang/rust-clippy/pull/9545)\n+* [`unused_peekable`]: No longer lints, if the peak is done in a closure or function\n+  [#9465](https://github.com/rust-lang/rust-clippy/pull/9465)\n+* [`useless_attribute`]: No longer lints on `#[allow]` attributes for [`unsafe_removed_from_name`]\n+  [#9593](https://github.com/rust-lang/rust-clippy/pull/9593)\n+* [`unnecessary_lazy_evaluations`]: No longer suggest switching to early evaluation when type has\n+  custom `Drop` implementation\n+  [#9551](https://github.com/rust-lang/rust-clippy/pull/9551)\n+* [`unnecessary_cast`]: No longer lints on negative hexadecimal literals when cast as floats\n+  [#9609](https://github.com/rust-lang/rust-clippy/pull/9609)\n+* [`use_self`]: No longer lints in proc macros\n+  [#9454](https://github.com/rust-lang/rust-clippy/pull/9454)\n+* [`never_loop`]: Now takes `let ... else` statements into consideration.\n+  [#9496](https://github.com/rust-lang/rust-clippy/pull/9496)\n+* [`default_numeric_fallback`]: Now ignores constants\n+  [#9636](https://github.com/rust-lang/rust-clippy/pull/9636)\n+* [`uninit_vec`]: No longer lints `Vec::set_len(0)`\n+  [#9519](https://github.com/rust-lang/rust-clippy/pull/9519)\n+* [`arithmetic_side_effects`]: Now ignores references to integer types\n+  [#9507](https://github.com/rust-lang/rust-clippy/pull/9507)\n+* [`large_stack_arrays`]: No longer lints inside static items\n+  [#9466](https://github.com/rust-lang/rust-clippy/pull/9466)\n+* [`ref_option_ref`]: No longer lints if the inner reference is mutable\n+  [#9684](https://github.com/rust-lang/rust-clippy/pull/9684)\n+* [`ptr_arg`]: No longer lints if the argument is used as an incomplete trait object\n+  [#9645](https://github.com/rust-lang/rust-clippy/pull/9645)\n+* [`should_implement_trait`]: Now also works for `default` methods\n+  [#9546](https://github.com/rust-lang/rust-clippy/pull/9546)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`derivable_impls`]: The suggestion is now machine applicable\n+  [#9429](https://github.com/rust-lang/rust-clippy/pull/9429)\n+* [`match_single_binding`]: The suggestion now handles scrutinies with side effects better\n+  [#9601](https://github.com/rust-lang/rust-clippy/pull/9601)\n+* [`zero_prefixed_literal`]: Only suggests using octal numbers, if this is possible\n+  [#9652](https://github.com/rust-lang/rust-clippy/pull/9652)\n+* [`rc_buffer`]: The suggestion is no longer machine applicable to avoid semantic changes\n+  [#9633](https://github.com/rust-lang/rust-clippy/pull/9633)\n+* [`print_literal`], [`write_literal`], [`uninlined_format_args`]: The suggestion now ignores\n+  comments after the macro call.\n+  [#9586](https://github.com/rust-lang/rust-clippy/pull/9586)\n+* [`expect_fun_call`]:Improved the suggestion for `format!` calls with captured variables\n+  [#9586](https://github.com/rust-lang/rust-clippy/pull/9586)\n+* [`nonstandard_macro_braces`]: The suggestion is now machine applicable and will no longer\n+  replace brackets inside the macro argument.\n+  [#9499](https://github.com/rust-lang/rust-clippy/pull/9499)\n+* [`from_over_into`]: The suggestion is now a machine applicable and contains explanations\n+  [#9649](https://github.com/rust-lang/rust-clippy/pull/9649)\n+* [`needless_return`]: The automatic suggestion now removes all required semicolons\n+  [#9497](https://github.com/rust-lang/rust-clippy/pull/9497)\n+* [`to_string_in_format_args`]: The suggestion now keeps parenthesis around values\n+  [#9590](https://github.com/rust-lang/rust-clippy/pull/9590)\n+* [`manual_assert`]: The suggestion now preserves comments\n+  [#9479](https://github.com/rust-lang/rust-clippy/pull/9479)\n+* [`redundant_allocation`]: The suggestion applicability is now marked `MaybeIncorrect` to\n+  avoid semantic changes\n+  [#9634](https://github.com/rust-lang/rust-clippy/pull/9634)\n+* [`assertions_on_result_states`]: The suggestion has been corrected, for cases where the\n+  `assert!` is not in a statement.\n+  [#9453](https://github.com/rust-lang/rust-clippy/pull/9453)\n+* [`nonminimal_bool`]: The suggestion no longer expands macros\n+  [#9457](https://github.com/rust-lang/rust-clippy/pull/9457)\n+* [`collapsible_match`]: Now specifies field names, when a struct is destructed\n+  [#9685](https://github.com/rust-lang/rust-clippy/pull/9685)\n+* [`unnecessary_cast`]: The suggestion now adds parenthesis for negative numbers\n+  [#9577](https://github.com/rust-lang/rust-clippy/pull/9577)\n+* [`redundant_closure`]: The suggestion now works for `impl FnMut` arguments\n+  [#9556](https://github.com/rust-lang/rust-clippy/pull/9556)\n+\n+### ICE Fixes\n+\n+* [`unnecessary_to_owned`]: Avoid ICEs in favor of false negatives if information is missing\n+  [#9505](https://github.com/rust-lang/rust-clippy/pull/9505)\n+* [`manual_range_contains`]: No longer ICEs on values behind references\n+  [#9627](https://github.com/rust-lang/rust-clippy/pull/9627)\n+* [`needless_pass_by_value`]: No longer ICEs on unsized `dyn Fn` arguments\n+  [#9531](https://github.com/rust-lang/rust-clippy/pull/9531)\n+* `*_interior_mutable_const` lints: no longer ICE on const unions containing `!Freeze` types\n+  [#9539](https://github.com/rust-lang/rust-clippy/pull/9539)\n+\n+### Others\n+\n+* Released `rustc_tools_util` for version information on `Crates.io`. (Further adjustments will\n+  not be published as part of this changelog)\n \n ## Rust 1.65\n \n-Current stable, released 2022-11-03\n+Released 2022-11-03\n \n [3c7e7dbc...b52fb523](https://github.com/rust-lang/rust-clippy/compare/3c7e7dbc...b52fb523)\n "}, {"sha": "91900542af8330e52d72655efb34be044bbfbbf5", "filename": "clippy_lints/src/box_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fbox_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fbox_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbox_default.rs?ref=3905f512302a976dac58c8549f808719edfbe4c1", "patch": "@@ -30,7 +30,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x: Box<String> = Box::default();\n     /// ```\n-    #[clippy::version = \"1.65.0\"]\n+    #[clippy::version = \"1.66.0\"]\n     pub BOX_DEFAULT,\n     perf,\n     \"Using Box::new(T::default()) instead of Box::default()\""}, {"sha": "161e3a698e9ea6133ba0d6a86e2ad70983d7dbf8", "filename": "clippy_lints/src/casts/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs?ref=3905f512302a976dac58c8549f808719edfbe4c1", "patch": "@@ -641,7 +641,7 @@ declare_clippy_lint! {\n     /// ```rust,ignore\n     /// let _: = 0_u64;\n     /// ```\n-    #[clippy::version = \"1.64.0\"]\n+    #[clippy::version = \"1.66.0\"]\n     pub CAST_NAN_TO_INT,\n     suspicious,\n     \"casting a known floating-point NaN into an integer\""}, {"sha": "1971cab64ef38a8f01890c1cd8394f7bd238af96", "filename": "clippy_lints/src/disallowed_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fdisallowed_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fdisallowed_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_macros.rs?ref=3905f512302a976dac58c8549f808719edfbe4c1", "patch": "@@ -47,7 +47,7 @@ declare_clippy_lint! {\n     ///     value: usize,\n     /// }\n     /// ```\n-    #[clippy::version = \"1.65.0\"]\n+    #[clippy::version = \"1.66.0\"]\n     pub DISALLOWED_MACROS,\n     style,\n     \"use of a disallowed macro\""}, {"sha": "62284235dbfec2de08bc11c87c2161a6ec23e95e", "filename": "clippy_lints/src/format_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat_args.rs?ref=3905f512302a976dac58c8549f808719edfbe4c1", "patch": "@@ -123,7 +123,7 @@ declare_clippy_lint! {\n     ///\n     /// If a format string contains a numbered argument that cannot be inlined\n     /// nothing will be suggested, e.g. `println!(\"{0}={1}\", var, 1+2)`.\n-    #[clippy::version = \"1.65.0\"]\n+    #[clippy::version = \"1.66.0\"]\n     pub UNINLINED_FORMAT_ARGS,\n     style,\n     \"using non-inlined variables in `format!` calls\""}, {"sha": "6e19343931ecb846bc9d9ece97efd37c9f27683b", "filename": "clippy_lints/src/implicit_saturating_add.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fimplicit_saturating_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fimplicit_saturating_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_saturating_add.rs?ref=3905f512302a976dac58c8549f808719edfbe4c1", "patch": "@@ -31,7 +31,7 @@ declare_clippy_lint! {\n     ///\n     /// u = u.saturating_add(1);\n     /// ```\n-    #[clippy::version = \"1.65.0\"]\n+    #[clippy::version = \"1.66.0\"]\n     pub IMPLICIT_SATURATING_ADD,\n     style,\n     \"Perform saturating addition instead of implicitly checking max bound of data type\""}, {"sha": "561e4336593b047ed5f071e89c18f5ec6c82c69e", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3905f512302a976dac58c8549f808719edfbe4c1/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3905f512302a976dac58c8549f808719edfbe4c1", "patch": "@@ -3059,7 +3059,7 @@ declare_clippy_lint! {\n     /// let map: HashMap<u32, u32> = HashMap::new();\n     /// let values = map.values().collect::<Vec<_>>();\n     /// ```\n-    #[clippy::version = \"1.65.0\"]\n+    #[clippy::version = \"1.66.0\"]\n     pub ITER_KV_MAP,\n     complexity,\n     \"iterating on map using `iter` when `keys` or `values` would do\""}]}