{"sha": "11024eaebbd5d958df3944178e5746c0d9fda383", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMDI0ZWFlYmJkNWQ5NThkZjM5NDQxNzhlNTc0NmMwZDlmZGEzODM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-07T20:19:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-14T22:11:20Z"}, "message": "rustc: Only strip out the main function when generating test executable, not lib", "tree": {"sha": "73fc9d94c1d8073781be437a40870e53dfc00a8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73fc9d94c1d8073781be437a40870e53dfc00a8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11024eaebbd5d958df3944178e5746c0d9fda383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11024eaebbd5d958df3944178e5746c0d9fda383", "html_url": "https://github.com/rust-lang/rust/commit/11024eaebbd5d958df3944178e5746c0d9fda383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11024eaebbd5d958df3944178e5746c0d9fda383/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b808eaba37c589544cc90c473f5f9d84a507afea", "url": "https://api.github.com/repos/rust-lang/rust/commits/b808eaba37c589544cc90c473f5f9d84a507afea", "html_url": "https://github.com/rust-lang/rust/commit/b808eaba37c589544cc90c473f5f9d84a507afea"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "21fb1d49b3a6a0e27546b154c88e00069a124da1", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11024eaebbd5d958df3944178e5746c0d9fda383/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11024eaebbd5d958df3944178e5746c0d9fda383/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=11024eaebbd5d958df3944178e5746c0d9fda383", "patch": "@@ -71,14 +71,15 @@ fn strip_test_functions(crate: @ast::crate) -> @ast::crate {\n fn fold_mod(cx: test_ctxt, m: ast::_mod, fld: fold::ast_fold) -> ast::_mod {\n \n     // Remove any defined main function from the AST so it doesn't clash with\n-    // the one we're going to add.\n+    // the one we're going to add. Only if compiling an executable.\n \n     // FIXME (#2403): This is sloppy. Instead we should have some mechanism to\n     // indicate to the translation pass which function we want to be main.\n     fn nomain(cx: test_ctxt, item: @ast::item) -> Option<@ast::item> {\n         match item.node {\n           ast::item_fn(*) => {\n-            if item.ident == cx.sess.ident_of(~\"main\") {\n+            if item.ident == cx.sess.ident_of(~\"main\")\n+                && !cx.sess.building_library {\n                 option::None\n             } else { option::Some(item) }\n           }"}]}