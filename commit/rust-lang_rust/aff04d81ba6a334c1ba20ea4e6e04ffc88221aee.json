{"sha": "aff04d81ba6a334c1ba20ea4e6e04ffc88221aee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZjA0ZDgxYmE2YTMzNGMxYmEyMGVhNGU2ZTA0ZmZjODgyMjFhZWU=", "commit": {"author": {"name": "Francesco Zardi", "email": "frazar@users.noreply.github.com", "date": "2020-10-21T19:53:37Z"}, "committer": {"name": "Francesco Zardi", "email": "frazar@users.noreply.github.com", "date": "2020-10-21T19:53:37Z"}, "message": "Refactor is_intrinsic_fn_unsafe() and make it private", "tree": {"sha": "a93b48d7f267c0233c602aa96a4b8e77c37af89e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a93b48d7f267c0233c602aa96a4b8e77c37af89e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aff04d81ba6a334c1ba20ea4e6e04ffc88221aee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aff04d81ba6a334c1ba20ea4e6e04ffc88221aee", "html_url": "https://github.com/rust-lang/rust/commit/aff04d81ba6a334c1ba20ea4e6e04ffc88221aee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aff04d81ba6a334c1ba20ea4e6e04ffc88221aee/comments", "author": {"login": "frazar", "id": 914950, "node_id": "MDQ6VXNlcjkxNDk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/914950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frazar", "html_url": "https://github.com/frazar", "followers_url": "https://api.github.com/users/frazar/followers", "following_url": "https://api.github.com/users/frazar/following{/other_user}", "gists_url": "https://api.github.com/users/frazar/gists{/gist_id}", "starred_url": "https://api.github.com/users/frazar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frazar/subscriptions", "organizations_url": "https://api.github.com/users/frazar/orgs", "repos_url": "https://api.github.com/users/frazar/repos", "events_url": "https://api.github.com/users/frazar/events{/privacy}", "received_events_url": "https://api.github.com/users/frazar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frazar", "id": 914950, "node_id": "MDQ6VXNlcjkxNDk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/914950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frazar", "html_url": "https://github.com/frazar", "followers_url": "https://api.github.com/users/frazar/followers", "following_url": "https://api.github.com/users/frazar/following{/other_user}", "gists_url": "https://api.github.com/users/frazar/gists{/gist_id}", "starred_url": "https://api.github.com/users/frazar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frazar/subscriptions", "organizations_url": "https://api.github.com/users/frazar/orgs", "repos_url": "https://api.github.com/users/frazar/repos", "events_url": "https://api.github.com/users/frazar/events{/privacy}", "received_events_url": "https://api.github.com/users/frazar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0be21b05d6811936a22d491f2cea4c7fe244ce2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0be21b05d6811936a22d491f2cea4c7fe244ce2f", "html_url": "https://github.com/rust-lang/rust/commit/0be21b05d6811936a22d491f2cea4c7fe244ce2f"}], "stats": {"total": 81, "additions": 42, "deletions": 39}, "files": [{"sha": "ca7fb4a43dbe242cb684a768c7881272a7181966", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 42, "deletions": 39, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/aff04d81ba6a334c1ba20ea4e6e04ffc88221aee/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aff04d81ba6a334c1ba20ea4e6e04ffc88221aee/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=aff04d81ba6a334c1ba20ea4e6e04ffc88221aee", "patch": "@@ -42,45 +42,6 @@ pub(super) struct Ctx {\n     forced_visibility: Option<RawVisibilityId>,\n }\n \n-/// Returns `true` if the given intrinsic is unsafe to call or not.\n-pub fn is_intrinsic_fn_unsafe(name: &Name) -> bool {\n-    // Should be kept in sync with https://github.com/rust-lang/rust/blob/c6e4db620a7d2f569f11dcab627430921ea8aacf/compiler/rustc_typeck/src/check/intrinsic.rs#L68\n-    *name != known::abort\n-        && *name != known::min_align_of\n-        && *name != known::needs_drop\n-        && *name != known::caller_location\n-        && *name != known::size_of_val\n-        && *name != known::min_align_of_val\n-        && *name != known::add_with_overflow\n-        && *name != known::sub_with_overflow\n-        && *name != known::mul_with_overflow\n-        && *name != known::wrapping_add\n-        && *name != known::wrapping_sub\n-        && *name != known::wrapping_mul\n-        && *name != known::saturating_add\n-        && *name != known::saturating_sub\n-        && *name != known::rotate_left\n-        && *name != known::rotate_right\n-        && *name != known::ctpop\n-        && *name != known::ctlz\n-        && *name != known::cttz\n-        && *name != known::bswap\n-        && *name != known::bitreverse\n-        && *name != known::discriminant_value\n-        && *name != known::type_id\n-        && *name != known::likely\n-        && *name != known::unlikely\n-        && *name != known::ptr_guaranteed_eq\n-        && *name != known::ptr_guaranteed_ne\n-        && *name != known::minnumf32\n-        && *name != known::minnumf64\n-        && *name != known::maxnumf32\n-        && *name != known::rustc_peek\n-        && *name != known::maxnumf64\n-        && *name != known::type_name\n-        && *name != known::variant_count\n-}\n-\n impl Ctx {\n     pub(super) fn new(db: &dyn DefDatabase, hygiene: Hygiene, file: HirFileId) -> Self {\n         Self {\n@@ -753,3 +714,45 @@ enum GenericsOwner<'a> {\n     TypeAlias,\n     Impl,\n }\n+\n+/// Returns `true` if the given intrinsic is unsafe to call, or false otherwise.\n+fn is_intrinsic_fn_unsafe(name: &Name) -> bool {\n+    // Should be kept in sync with https://github.com/rust-lang/rust/blob/c6e4db620a7d2f569f11dcab627430921ea8aacf/compiler/rustc_typeck/src/check/intrinsic.rs#L68\n+    ![\n+        known::abort,\n+        known::min_align_of,\n+        known::needs_drop,\n+        known::caller_location,\n+        known::size_of_val,\n+        known::min_align_of_val,\n+        known::add_with_overflow,\n+        known::sub_with_overflow,\n+        known::mul_with_overflow,\n+        known::wrapping_add,\n+        known::wrapping_sub,\n+        known::wrapping_mul,\n+        known::saturating_add,\n+        known::saturating_sub,\n+        known::rotate_left,\n+        known::rotate_right,\n+        known::ctpop,\n+        known::ctlz,\n+        known::cttz,\n+        known::bswap,\n+        known::bitreverse,\n+        known::discriminant_value,\n+        known::type_id,\n+        known::likely,\n+        known::unlikely,\n+        known::ptr_guaranteed_eq,\n+        known::ptr_guaranteed_ne,\n+        known::minnumf32,\n+        known::minnumf64,\n+        known::maxnumf32,\n+        known::rustc_peek,\n+        known::maxnumf64,\n+        known::type_name,\n+        known::variant_count,\n+    ]\n+    .contains(&name)\n+}"}]}