{"sha": "5d7cd652942e5ce4ca7c673a6e44618bae655598", "node_id": "C_kwDOAAsO6NoAKDVkN2NkNjUyOTQyZTVjZTRjYTdjNjczYTZlNDQ2MThiYWU2NTU1OTg", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-07-20T02:13:33Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-07-20T07:23:38Z"}, "message": "compiletest: dedup revision line logic.", "tree": {"sha": "030a07cf56e331a81adc802f1f73dbb18f577914", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/030a07cf56e331a81adc802f1f73dbb18f577914"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d7cd652942e5ce4ca7c673a6e44618bae655598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7cd652942e5ce4ca7c673a6e44618bae655598", "html_url": "https://github.com/rust-lang/rust/commit/5d7cd652942e5ce4ca7c673a6e44618bae655598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d7cd652942e5ce4ca7c673a6e44618bae655598/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8de7f0477a08d0edb199140d3fbc9444c99e69ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/8de7f0477a08d0edb199140d3fbc9444c99e69ac", "html_url": "https://github.com/rust-lang/rust/commit/8de7f0477a08d0edb199140d3fbc9444c99e69ac"}], "stats": {"total": 58, "additions": 27, "deletions": 31}, "files": [{"sha": "02f4d29a2f05f9c43cbee47df46460dc05c46204", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5d7cd652942e5ce4ca7c673a6e44618bae655598/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7cd652942e5ce4ca7c673a6e44618bae655598/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=5d7cd652942e5ce4ca7c673a6e44618bae655598", "patch": "@@ -535,6 +535,29 @@ impl TestProps {\n     }\n }\n \n+pub fn line_directive<'line>(\n+    comment: &str,\n+    ln: &'line str,\n+) -> Option<(Option<&'line str>, &'line str)> {\n+    if ln.starts_with(comment) {\n+        let ln = ln[comment.len()..].trim_start();\n+        if ln.starts_with('[') {\n+            // A comment like `//[foo]` is specific to revision `foo`\n+            if let Some(close_brace) = ln.find(']') {\n+                let lncfg = &ln[1..close_brace];\n+\n+                Some((Some(lncfg), ln[(close_brace + 1)..].trim_start()))\n+            } else {\n+                panic!(\"malformed condition directive: expected `{}[foo]`, found `{}`\", comment, ln)\n+            }\n+        } else {\n+            Some((None, ln))\n+        }\n+    } else {\n+        None\n+    }\n+}\n+\n fn iter_header<R: Read>(testfile: &Path, rdr: R, it: &mut dyn FnMut(Option<&str>, &str)) {\n     if testfile.is_dir() {\n         return;\n@@ -557,17 +580,8 @@ fn iter_header<R: Read>(testfile: &Path, rdr: R, it: &mut dyn FnMut(Option<&str>\n         let ln = ln.trim();\n         if ln.starts_with(\"fn\") || ln.starts_with(\"mod\") {\n             return;\n-        } else if ln.starts_with(comment) && ln[comment.len()..].trim_start().starts_with('[') {\n-            // A comment like `//[foo]` is specific to revision `foo`\n-            if let Some(close_brace) = ln.find(']') {\n-                let open_brace = ln.find('[').unwrap();\n-                let lncfg = &ln[open_brace + 1..close_brace];\n-                it(Some(lncfg), ln[(close_brace + 1)..].trim_start());\n-            } else {\n-                panic!(\"malformed condition directive: expected `{}[foo]`, found `{}`\", comment, ln)\n-            }\n-        } else if ln.starts_with(comment) {\n-            it(None, ln[comment.len()..].trim_start());\n+        } else if let Some((lncfg, ln)) = line_directive(comment, ln) {\n+            it(lncfg, ln);\n         }\n     }\n }"}, {"sha": "379ff0bab408a3120bda8803b9c016a3e216377b", "filename": "src/tools/compiletest/src/runtest/debugger.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5d7cd652942e5ce4ca7c673a6e44618bae655598/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest%2Fdebugger.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7cd652942e5ce4ca7c673a6e44618bae655598/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest%2Fdebugger.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest%2Fdebugger.rs?ref=5d7cd652942e5ce4ca7c673a6e44618bae655598", "patch": "@@ -1,4 +1,5 @@\n use crate::common::Config;\n+use crate::header::line_directive;\n use crate::runtest::ProcRes;\n \n use std::fs::File;\n@@ -32,26 +33,7 @@ impl DebuggerCommands {\n             counter += 1;\n             match line {\n                 Ok(line) => {\n-                    let (line, lnrev) = if line.starts_with(\"//\") {\n-                        let line = line[2..].trim_start();\n-                        if line.starts_with('[') {\n-                            if let Some(close_brace) = line.find(']') {\n-                                let open_brace = line.find('[').unwrap();\n-                                let lnrev = &line[open_brace + 1..close_brace];\n-                                let line = line[(close_brace + 1)..].trim_start();\n-                                (line, Some(lnrev))\n-                            } else {\n-                                panic!(\n-                                    \"malformed condition direction: expected `//[foo]`, found `{}`\",\n-                                    line\n-                                )\n-                            }\n-                        } else {\n-                            (line, None)\n-                        }\n-                    } else {\n-                        (line.as_str(), None)\n-                    };\n+                    let (lnrev, line) = line_directive(\"//\", &line).unwrap_or((None, &line));\n \n                     // Skip any revision specific directive that doesn't match the current\n                     // revision being tested"}]}