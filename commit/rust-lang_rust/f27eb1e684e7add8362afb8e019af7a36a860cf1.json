{"sha": "f27eb1e684e7add8362afb8e019af7a36a860cf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyN2ViMWU2ODRlN2FkZDgzNjJhZmI4ZTAxOWFmN2EzNmE4NjBjZjE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-30T13:01:12Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-31T16:41:40Z"}, "message": "change region display to `'_#Nr`, update the `newtype_index!` macro\n\nThe macro now takes a format string. It no longer defaults to using the\ntype name. Didn't seem worth going through contortions to maintain.  I\nalso changed most of the debug formats to be `foo[N]` instead of `fooN`.", "tree": {"sha": "4f584e3756ed0ebfd1297455ab36f086e4764a0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f584e3756ed0ebfd1297455ab36f086e4764a0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f27eb1e684e7add8362afb8e019af7a36a860cf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f27eb1e684e7add8362afb8e019af7a36a860cf1", "html_url": "https://github.com/rust-lang/rust/commit/f27eb1e684e7add8362afb8e019af7a36a860cf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f27eb1e684e7add8362afb8e019af7a36a860cf1/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a94b01a0e244a1df75f90cd8f0bfee546b4b2690", "url": "https://api.github.com/repos/rust-lang/rust/commits/a94b01a0e244a1df75f90cd8f0bfee546b4b2690", "html_url": "https://github.com/rust-lang/rust/commit/a94b01a0e244a1df75f90cd8f0bfee546b4b2690"}], "stats": {"total": 78, "additions": 40, "deletions": 38}, "files": [{"sha": "e725592ff99e6877ee3ac2662c6aaf10e77bfb2c", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -158,7 +158,7 @@ pub struct BlockRemainder {\n \n newtype_index!(FirstStatementIndex\n     {\n-        DEBUG_NAME = \"\",\n+        DEBUG_FORMAT = \"{}\",\n         MAX = SCOPE_DATA_REMAINDER_MAX,\n     });\n "}, {"sha": "c4a33bb07cdf21d4fd067dfbb17872d04d1f642a", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -417,7 +417,7 @@ pub enum BorrowKind {\n \n newtype_index!(Local\n     {\n-        DEBUG_NAME = \"_\",\n+        DEBUG_FORMAT = \"_{}\",\n         const RETURN_POINTER = 0,\n     });\n \n@@ -553,7 +553,7 @@ pub struct UpvarDecl {\n ///////////////////////////////////////////////////////////////////////////\n // BasicBlock\n \n-newtype_index!(BasicBlock { DEBUG_NAME = \"bb\" });\n+newtype_index!(BasicBlock { DEBUG_FORMAT = \"bb{}\" });\n \n ///////////////////////////////////////////////////////////////////////////\n // BasicBlockData and Terminator\n@@ -1135,7 +1135,7 @@ pub type LvalueProjection<'tcx> = Projection<'tcx, Lvalue<'tcx>, Local, Ty<'tcx>\n /// and the index is a local.\n pub type LvalueElem<'tcx> = ProjectionElem<'tcx, Local, Ty<'tcx>>;\n \n-newtype_index!(Field { DEBUG_NAME = \"field\" });\n+newtype_index!(Field { DEBUG_FORMAT = \"field[{}]\" });\n \n impl<'tcx> Lvalue<'tcx> {\n     pub fn field(self, f: Field, ty: Ty<'tcx>) -> Lvalue<'tcx> {\n@@ -1202,7 +1202,7 @@ impl<'tcx> Debug for Lvalue<'tcx> {\n \n newtype_index!(VisibilityScope\n     {\n-        DEBUG_NAME = \"scope\",\n+        DEBUG_FORMAT = \"scope[{}]\",\n         const ARGUMENT_VISIBILITY_SCOPE = 0,\n     });\n \n@@ -1529,7 +1529,7 @@ pub struct Constant<'tcx> {\n     pub literal: Literal<'tcx>,\n }\n \n-newtype_index!(Promoted { DEBUG_NAME = \"promoted\" });\n+newtype_index!(Promoted { DEBUG_FORMAT = \"promoted[{}]\" });\n \n #[derive(Clone, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable)]\n pub enum Literal<'tcx> {"}, {"sha": "0660cd96a4a34ee6be812e7e11637d23ca67f103", "filename": "src/librustc_data_structures/indexed_vec.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc_data_structures%2Findexed_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc_data_structures%2Findexed_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_vec.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -47,22 +47,22 @@ macro_rules! newtype_index {\n         newtype_index!(\n             @type[$name]\n             @max[::std::u32::MAX]\n-            @debug_name[unsafe {::std::intrinsics::type_name::<$name>() }]);\n+            @debug_format[\"{}\"]);\n     );\n \n     // Define any constants\n     ($name:ident { $($tokens:tt)+ }) => (\n         newtype_index!(\n             @type[$name]\n             @max[::std::u32::MAX]\n-            @debug_name[unsafe {::std::intrinsics::type_name::<$name>() }]\n+            @debug_format[\"{}\"]\n             $($tokens)+);\n     );\n \n     // ---- private rules ----\n \n     // Base case, user-defined constants (if any) have already been defined\n-    (@type[$type:ident] @max[$max:expr] @debug_name[$debug_name:expr]) => (\n+    (@type[$type:ident] @max[$max:expr] @debug_format[$debug_format:expr]) => (\n         #[derive(Copy, Clone, PartialEq, Eq, Hash, PartialOrd, Ord,\n             RustcEncodable, RustcDecodable)]\n         pub struct $type(pub u32);\n@@ -79,40 +79,43 @@ macro_rules! newtype_index {\n \n         impl ::std::fmt::Debug for $type {\n             fn fmt(&self, fmt: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {\n-                write!(fmt, \"{}{}\", $debug_name, self.0)\n+                write!(fmt, $debug_format, self.0)\n             }\n         }\n     );\n \n     // Rewrite final without comma to one that includes comma\n-    (@type[$type:ident] @max[$max:expr] @debug_name[$debug_name:expr]\n+    (@type[$type:ident] @max[$max:expr] @debug_format[$debug_format:expr]\n             $name:ident = $constant:expr) => (\n-        newtype_index!(@type[$type] @max[$max] @debug_name[$debug_name] $name = $constant,);\n+        newtype_index!(@type[$type] @max[$max] @debug_format[$debug_format] $name = $constant,);\n     );\n \n     // Rewrite final const without comma to one that includes comma\n-    (@type[$type:ident] @max[$_max:expr] @debug_name[$debug_name:expr]\n+    (@type[$type:ident] @max[$_max:expr] @debug_format[$debug_format:expr]\n             const $name:ident = $constant:expr) => (\n-        newtype_index!(@type[$type] @max[$max] @debug_name[$debug_name] const $name = $constant,);\n+        newtype_index!(@type[$type]\n+                       @max[$max]\n+                       @debug_format[$debug_format]\n+                       const $name = $constant,);\n     );\n \n     // Replace existing default for max\n-    (@type[$type:ident] @max[$_max:expr] @debug_name[$debug_name:expr]\n+    (@type[$type:ident] @max[$_max:expr] @debug_format[$debug_format:expr]\n             MAX = $max:expr, $($tokens:tt)*) => (\n-        newtype_index!(@type[$type] @max[$max] @debug_name[$debug_name] $($tokens)*);\n+        newtype_index!(@type[$type] @max[$max] @debug_format[$debug_format] $($tokens)*);\n     );\n \n-    // Replace existing default for debug_name\n-    (@type[$type:ident] @max[$max:expr] @debug_name[$_debug_name:expr]\n-            DEBUG_NAME = $debug_name:expr, $($tokens:tt)*) => (\n-        newtype_index!(@type[$type] @max[$max] @debug_name[$debug_name] $($tokens)*);\n+    // Replace existing default for debug_format\n+    (@type[$type:ident] @max[$max:expr] @debug_format[$_debug_format:expr]\n+            DEBUG_FORMAT = $debug_format:expr, $($tokens:tt)*) => (\n+        newtype_index!(@type[$type] @max[$max] @debug_format[$debug_format] $($tokens)*);\n     );\n \n     // Assign a user-defined constant (as final param)\n-    (@type[$type:ident] @max[$max:expr] @debug_name[$debug_name:expr]\n+    (@type[$type:ident] @max[$max:expr] @debug_format[$debug_format:expr]\n             const $name:ident = $constant:expr, $($tokens:tt)*) => (\n         pub const $name: $type = $type($constant);\n-        newtype_index!(@type[$type] @max[$max] @debug_name[$debug_name] $($tokens)*);\n+        newtype_index!(@type[$type] @max[$max] @debug_format[$debug_format] $($tokens)*);\n     );\n }\n "}, {"sha": "66de35bd7f53a6904fce2f2bc653bce178cb9e5a", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -20,7 +20,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(box_syntax)]\n #![feature(conservative_impl_trait)]\n #![feature(const_fn)]\n-#![feature(core_intrinsics)]\n #![feature(i128_type)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(placement_in_syntax)]"}, {"sha": "66a9da2c72aa614887e76b41ea07ad1c80689078", "filename": "src/librustc_mir/transform/nll/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -192,7 +192,7 @@ impl Region {\n }\n \n newtype_index!(RegionIndex {\n-    DEBUG_NAME = \"R\",\n+    DEBUG_FORMAT = \"'_#{}r\",\n });\n \n /// Right now, we piggy back on the `ReVar` to store our NLL inference"}, {"sha": "61dc1d206596178964190166a64b53fb4445401a", "filename": "src/test/mir-opt/end_region_destruction_extents_1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fend_region_destruction_extents_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fend_region_destruction_extents_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_destruction_extents_1.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -133,11 +133,11 @@ unsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\n //         StorageLive(_3);\n //         StorageLive(_4);\n //         StorageLive(_5);\n-//         _5 = promoted1;\n+//         _5 = promoted[1];\n //         _4 = &'12ds (*_5);\n //         StorageLive(_7);\n //         StorageLive(_8);\n-//         _8 = promoted0;\n+//         _8 = promoted[0];\n //         _7 = &'10s (*_8);\n //         _3 = D1<'12ds, '10s>::{{constructor}}(_4, _7);\n //         EndRegion('10s);"}, {"sha": "60a4da430b96e5fce16d96359ea8ea40ce8c4077", "filename": "src/test/mir-opt/nll/reborrow-basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -28,9 +28,9 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.node13.nll.0.mir\n-// | R5: {bb0[6], bb0[7], bb0[8], bb0[9], bb0[10], bb0[11], bb0[12], bb0[13], bb0[14]}\n+// | '_#5r: {bb0[6], bb0[7], bb0[8], bb0[9], bb0[10], bb0[11], bb0[12], bb0[13], bb0[14]}\n // ...\n-// | R7: {bb0[11], bb0[12], bb0[13], bb0[14]}\n+// | '_#7r: {bb0[11], bb0[12], bb0[13], bb0[14]}\n // END rustc.node13.nll.0.mir\n // START rustc.node13.nll.0.mir\n // let _2: &'_#5r mut i32;"}, {"sha": "7792f0a36f318df3c1b29091a9b2c4201c2edcfa", "filename": "src/test/mir-opt/nll/region-liveness-basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-basic.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -31,8 +31,8 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.node12.nll.0.mir\n-// | R0: {bb1[1], bb2[0], bb2[1]}\n-// | R1: {bb1[1], bb2[0], bb2[1]}\n+// | '_#0r: {bb1[1], bb2[0], bb2[1]}\n+// | '_#1r: {bb1[1], bb2[0], bb2[1]}\n // ...\n //             let _2: &'_#1r usize;\n // END rustc.node12.nll.0.mir"}, {"sha": "4f4bb596e5f8fa3ded771b7598a5ff5ed82a0989", "filename": "src/test/mir-opt/nll/region-liveness-drop-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-may-dangle.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -44,5 +44,5 @@ unsafe impl<#[may_dangle] T> Drop for Wrap<T> {\n \n // END RUST SOURCE\n // START rustc.node12.nll.0.mir\n-// | R4: {bb1[3], bb1[4], bb1[5], bb2[0], bb2[1]}\n+// | '_#4r: {bb1[3], bb1[4], bb1[5], bb2[0], bb2[1]}\n // END rustc.node12.nll.0.mir"}, {"sha": "20865fdfe9b6cf48ab16067ac0e30af68cec49aa", "filename": "src/test/mir-opt/nll/region-liveness-drop-no-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -46,5 +46,5 @@ impl<T> Drop for Wrap<T> {\n \n // END RUST SOURCE\n // START rustc.node12.nll.0.mir\n-// | R4: {bb1[3], bb1[4], bb1[5], bb2[0], bb2[1], bb2[2], bb3[0], bb4[0], bb4[1], bb4[2], bb6[0], bb7[0], bb7[1], bb8[0]}\n+// | '_#4r: {bb1[3], bb1[4], bb1[5], bb2[0], bb2[1], bb2[2], bb3[0], bb4[0], bb4[1], bb4[2], bb6[0], bb7[0], bb7[1], bb8[0]}\n // END rustc.node12.nll.0.mir"}, {"sha": "1387fe52563da224706d414f07113365a5fe5016", "filename": "src/test/mir-opt/nll/region-liveness-two-disjoint-uses.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-two-disjoint-uses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-two-disjoint-uses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-two-disjoint-uses.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -36,10 +36,10 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.node12.nll.0.mir\n-// | R0: {bb1[1], bb2[0], bb2[1]}\n+// | '_#0r: {bb1[1], bb2[0], bb2[1]}\n // ...\n-// | R2: {bb7[2], bb7[3], bb7[4]}\n-// | R3: {bb1[1], bb2[0], bb2[1], bb7[2], bb7[3], bb7[4]}\n+// | '_#2r: {bb7[2], bb7[3], bb7[4]}\n+// | '_#3r: {bb1[1], bb2[0], bb2[1], bb7[2], bb7[3], bb7[4]}\n // ...\n // let mut _2: &'_#3r usize;\n // ..."}, {"sha": "4ae891f5b70eb91004e4d3ce78249a1c74219535", "filename": "src/test/mir-opt/nll/region-subtyping-basic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27eb1e684e7add8362afb8e019af7a36a860cf1/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs?ref=f27eb1e684e7add8362afb8e019af7a36a860cf1", "patch": "@@ -32,9 +32,9 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.node12.nll.0.mir\n-// | R0: {bb1[1], bb1[2], bb1[3], bb1[4], bb1[5], bb1[6], bb2[0], bb2[1]}\n-// | R1: {bb1[1], bb1[2], bb1[3], bb1[4], bb1[5], bb1[6], bb2[0], bb2[1]}\n-// | R2: {bb1[5], bb1[6], bb2[0], bb2[1]}\n+// | '_#0r: {bb1[1], bb1[2], bb1[3], bb1[4], bb1[5], bb1[6], bb2[0], bb2[1]}\n+// | '_#1r: {bb1[1], bb1[2], bb1[3], bb1[4], bb1[5], bb1[6], bb2[0], bb2[1]}\n+// | '_#2r: {bb1[5], bb1[6], bb2[0], bb2[1]}\n // END rustc.node12.nll.0.mir\n // START rustc.node12.nll.0.mir\n // let _2: &'_#1r usize;"}]}