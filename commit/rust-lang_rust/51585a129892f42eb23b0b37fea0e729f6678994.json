{"sha": "51585a129892f42eb23b0b37fea0e729f6678994", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNTg1YTEyOTg5MmY0MmViMjNiMGIzN2ZlYTBlNzI5ZjY2Nzg5OTQ=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T08:37:21Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T08:37:21Z"}, "message": "Removed unused lifetimes and a needless bool", "tree": {"sha": "158d0ff2c00d3a6206cb00f676e6ee0067b56030", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/158d0ff2c00d3a6206cb00f676e6ee0067b56030"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51585a129892f42eb23b0b37fea0e729f6678994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51585a129892f42eb23b0b37fea0e729f6678994", "html_url": "https://github.com/rust-lang/rust/commit/51585a129892f42eb23b0b37fea0e729f6678994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51585a129892f42eb23b0b37fea0e729f6678994/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be9f7c2b6d99dfb259eec8e9e2f7d9b9685de226", "url": "https://api.github.com/repos/rust-lang/rust/commits/be9f7c2b6d99dfb259eec8e9e2f7d9b9685de226", "html_url": "https://github.com/rust-lang/rust/commit/be9f7c2b6d99dfb259eec8e9e2f7d9b9685de226"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "5f7f0897943630775f7b9fc9c7a41b2d08f8a6cd", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/51585a129892f42eb23b0b37fea0e729f6678994/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51585a129892f42eb23b0b37fea0e729f6678994/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=51585a129892f42eb23b0b37fea0e729f6678994", "patch": "@@ -775,10 +775,9 @@ fn same_var<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &Expr<'_>, var: HirId) -\n         if let QPath::Resolved(None, path) = qpath;\n         if path.segments.len() == 1;\n         if let Res::Local(local_id) = qpath_res(cx, qpath, expr.hir_id);\n-        // our variable!\n-        if local_id == var;\n         then {\n-            true\n+            // our variable!\n+            local_id == var\n         } else {\n             false\n         }\n@@ -870,10 +869,8 @@ fn get_offset<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, idx: &Expr<'_>, var: HirId)\n     }\n }\n \n-fn get_assignments<'a, 'tcx>(\n-    body: &'tcx Expr<'tcx>,\n-) -> impl Iterator<Item = Option<(&'tcx Expr<'tcx>, &'tcx Expr<'tcx>)>> {\n-    fn get_assignment<'a, 'tcx>(e: &'tcx Expr<'tcx>) -> Option<(&'tcx Expr<'tcx>, &'tcx Expr<'tcx>)> {\n+fn get_assignments<'tcx>(body: &'tcx Expr<'tcx>) -> impl Iterator<Item = Option<(&'tcx Expr<'tcx>, &'tcx Expr<'tcx>)>> {\n+    fn get_assignment<'tcx>(e: &'tcx Expr<'tcx>) -> Option<(&'tcx Expr<'tcx>, &'tcx Expr<'tcx>)> {\n         if let ExprKind::Assign(lhs, rhs, _) = e.kind {\n             Some((lhs, rhs))\n         } else {"}]}