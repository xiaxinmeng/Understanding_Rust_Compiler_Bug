{"sha": "23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYzVlNTg0ZTBlYTQwYTZmNjMwYmUwZDRjNTE1MWI2N2JhOTZkZDE=", "commit": {"author": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2019-11-24T15:28:01Z"}, "committer": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2019-11-24T15:49:50Z"}, "message": "Use as_mut_ptr instead of casts", "tree": {"sha": "83cffabffd33ec4a699fe48192a8293656a37ebe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83cffabffd33ec4a699fe48192a8293656a37ebe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "html_url": "https://github.com/rust-lang/rust/commit/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/comments", "author": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1c742e23648260e60f87d67aa47e1f43d0cc0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1c742e23648260e60f87d67aa47e1f43d0cc0d", "html_url": "https://github.com/rust-lang/rust/commit/3b1c742e23648260e60f87d67aa47e1f43d0cc0d"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "9846476388229780c829d2c4b84416716f927e3e", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "patch": "@@ -234,6 +234,7 @@\n #![feature(allocator_internals)]\n #![feature(allow_internal_unsafe)]\n #![feature(allow_internal_unstable)]\n+#![feature(atomic_mut_ptr)]\n #![feature(arbitrary_self_types)]\n #![feature(array_error_internals)]\n #![feature(asm)]"}, {"sha": "05e55334ac008a3164d532bd1d4e52e2efc75625", "filename": "src/libstd/sys/wasm/alloc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Fsys%2Fwasm%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Fsys%2Fwasm%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Falloc.rs?ref=23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "patch": "@@ -67,7 +67,7 @@ mod lock {\n             //\n             //     unsafe {\n             //         let r = core::arch::wasm32::i32_atomic_wait(\n-            //             &LOCKED as *const AtomicI32 as *mut i32,\n+            //             LOCKED.as_mut_ptr(),\n             //             1,  //     expected value\n             //             -1, //     timeout\n             //         );\n@@ -143,7 +143,7 @@ mod lock {\n             //\n             //     unsafe {\n             //         core::arch::wasm32::atomic_notify(\n-            //             &LOCKED as *const AtomicI32 as *mut i32,\n+            //             LOCKED.as_mut_ptr(),\n             //             1, //     only one thread\n             //         );\n             //     }"}, {"sha": "f452bbd3487872206ca34d57cfc84fb4c4aef3bf", "filename": "src/libstd/sys/wasm/condvar_atomics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Fsys%2Fwasm%2Fcondvar_atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Fsys%2Fwasm%2Fcondvar_atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fcondvar_atomics.rs?ref=23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "patch": "@@ -89,6 +89,6 @@ impl Condvar {\n     #[inline]\n     fn ptr(&self) -> *mut i32 {\n         assert_eq!(mem::size_of::<usize>(), mem::size_of::<i32>());\n-        &self.cnt as *const AtomicUsize as *mut i32\n+        self.cnt.as_mut_ptr() as *mut i32\n     }\n }"}, {"sha": "cddd584dd2207354373d10f9b11a08326f573492", "filename": "src/libstd/sys/wasm/mutex_atomics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Fsys%2Fwasm%2Fmutex_atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c5e584e0ea40a6f630be0d4c5151b67ba96dd1/src%2Flibstd%2Fsys%2Fwasm%2Fmutex_atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fmutex_atomics.rs?ref=23c5e584e0ea40a6f630be0d4c5151b67ba96dd1", "patch": "@@ -56,7 +56,7 @@ impl Mutex {\n     #[inline]\n     fn ptr(&self) -> *mut i32 {\n         assert_eq!(mem::size_of::<usize>(), mem::size_of::<i32>());\n-        &self.locked as *const AtomicUsize as *mut isize as *mut i32\n+        self.locked.as_mut_ptr() as *mut i32\n     }\n }\n \n@@ -145,6 +145,6 @@ impl ReentrantMutex {\n \n     #[inline]\n     fn ptr(&self) -> *mut i32 {\n-        &self.owner as *const AtomicU32 as *mut i32\n+        self.owner.as_mut_ptr() as *mut i32\n     }\n }"}]}