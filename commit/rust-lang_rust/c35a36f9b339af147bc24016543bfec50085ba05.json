{"sha": "c35a36f9b339af147bc24016543bfec50085ba05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNWEzNmY5YjMzOWFmMTQ3YmMyNDAxNjU0M2JmZWM1MDA4NWJhMDU=", "commit": {"author": {"name": "Anthony Huang", "email": "anthuang@umich.edu", "date": "2020-10-15T04:29:47Z"}, "committer": {"name": "Simon Jakobi", "email": "simon.jakobi@gmail.com", "date": "2021-04-03T06:59:48Z"}, "message": "tidy: Add ignore-rules for the line length check\n\nThis is step 1 towards fixing #77548.\n\nThis commit includes the tidy change from #77675.\nThe \"ignoring file length unnecessarily\" check is temporarily\ndisabled to simplify landing the ignore-rules.\nThat check will be re-enabled in a follow-up PR.", "tree": {"sha": "6bcbe5b382328728dbf98d4107b85e88376fa406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bcbe5b382328728dbf98d4107b85e88376fa406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c35a36f9b339af147bc24016543bfec50085ba05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c35a36f9b339af147bc24016543bfec50085ba05", "html_url": "https://github.com/rust-lang/rust/commit/c35a36f9b339af147bc24016543bfec50085ba05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c35a36f9b339af147bc24016543bfec50085ba05/comments", "author": {"login": "Anthuang", "id": 14958041, "node_id": "MDQ6VXNlcjE0OTU4MDQx", "avatar_url": "https://avatars.githubusercontent.com/u/14958041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anthuang", "html_url": "https://github.com/Anthuang", "followers_url": "https://api.github.com/users/Anthuang/followers", "following_url": "https://api.github.com/users/Anthuang/following{/other_user}", "gists_url": "https://api.github.com/users/Anthuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anthuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anthuang/subscriptions", "organizations_url": "https://api.github.com/users/Anthuang/orgs", "repos_url": "https://api.github.com/users/Anthuang/repos", "events_url": "https://api.github.com/users/Anthuang/events{/privacy}", "received_events_url": "https://api.github.com/users/Anthuang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sjakobi", "id": 3664523, "node_id": "MDQ6VXNlcjM2NjQ1MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/3664523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjakobi", "html_url": "https://github.com/sjakobi", "followers_url": "https://api.github.com/users/sjakobi/followers", "following_url": "https://api.github.com/users/sjakobi/following{/other_user}", "gists_url": "https://api.github.com/users/sjakobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjakobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjakobi/subscriptions", "organizations_url": "https://api.github.com/users/sjakobi/orgs", "repos_url": "https://api.github.com/users/sjakobi/repos", "events_url": "https://api.github.com/users/sjakobi/events{/privacy}", "received_events_url": "https://api.github.com/users/sjakobi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb1713640532ca829479554459406e152213e95c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb1713640532ca829479554459406e152213e95c", "html_url": "https://github.com/rust-lang/rust/commit/cb1713640532ca829479554459406e152213e95c"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "a2a53c16b78760ad82ec8109317e96b11c8ab3d3", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c35a36f9b339af147bc24016543bfec50085ba05/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c35a36f9b339af147bc24016543bfec50085ba05/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c35a36f9b339af147bc24016543bfec50085ba05", "patch": "@@ -3650,6 +3650,8 @@ impl<'test> TestCx<'test> {\n \n         // Remove test annotations like `//~ ERROR text` from the output,\n         // since they duplicate actual errors and make the output hard to read.\n+        // This mirrors the regex in src/tools/tidy/src/style.rs, please update\n+        // both if either are changed.\n         normalized =\n             Regex::new(\"\\\\s*//(\\\\[.*\\\\])?~.*\").unwrap().replace_all(&normalized, \"\").into_owned();\n "}, {"sha": "e99dd45328040890d3ad42b2545c966c80aac267", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c35a36f9b339af147bc24016543bfec50085ba05/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c35a36f9b339af147bc24016543bfec50085ba05/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=c35a36f9b339af147bc24016543bfec50085ba05", "patch": "@@ -16,6 +16,7 @@\n //! A number of these checks can be opted-out of with various directives of the form:\n //! `// ignore-tidy-CHECK-NAME`.\n \n+use regex::Regex;\n use std::path::Path;\n \n /// Error code markdown is restricted to 80 columns because they can be\n@@ -41,6 +42,19 @@ C++ code used llvm_unreachable, which triggers undefined behavior\n when executed when assertions are disabled.\n Use llvm::report_fatal_error for increased robustness.\";\n \n+const ANNOTATIONS_TO_IGNORE: &[&str] = &[\n+    \"// @!has\",\n+    \"// @has\",\n+    \"// @matches\",\n+    \"// CHECK\",\n+    \"// EMIT_MIR\",\n+    \"// compile-flags\",\n+    \"// error-pattern\",\n+    \"// gdb\",\n+    \"// lldb\",\n+    \"// normalize-stderr-test\",\n+];\n+\n /// Parser states for `line_is_url`.\n #[derive(Clone, Copy, PartialEq)]\n #[allow(non_camel_case_types)]\n@@ -92,12 +106,20 @@ fn line_is_url(is_error_code: bool, columns: usize, line: &str) -> bool {\n     state == EXP_END\n }\n \n+/// Returns `true` if `line` can be ignored. This is the case when it contains\n+/// an annotation that is explicitly ignored.\n+fn should_ignore(line: &str) -> bool {\n+    // Matches test annotations like `//~ ERROR text`.\n+    // This mirrors the regex in src/tools/compiletest/src/runtest.rs, please\n+    // update both if either are changed.\n+    let re = Regex::new(\"\\\\s*//(\\\\[.*\\\\])?~.*\").unwrap();\n+    re.is_match(line) || ANNOTATIONS_TO_IGNORE.iter().any(|a| line.contains(a))\n+}\n+\n /// Returns `true` if `line` is allowed to be longer than the normal limit.\n-/// Currently there is only one exception, for long URLs, but more\n-/// may be added in the future.\n fn long_line_is_ok(extension: &str, is_error_code: bool, max_columns: usize, line: &str) -> bool {\n     if extension != \"md\" || is_error_code {\n-        if line_is_url(is_error_code, max_columns, line) {\n+        if line_is_url(is_error_code, max_columns, line) || should_ignore(line) {\n             return true;\n         }\n     } else if extension == \"md\" {\n@@ -357,9 +379,11 @@ pub fn check(path: &Path, bad: &mut bool) {\n         if let Directive::Ignore(false) = skip_tab {\n             tidy_error!(bad, \"{}: ignoring tab characters unnecessarily\", file.display());\n         }\n-        if let Directive::Ignore(false) = skip_line_length {\n-            tidy_error!(bad, \"{}: ignoring line length unnecessarily\", file.display());\n-        }\n+        // FIXME: Temporarily disabled to simplify landing the ignore-rules for the line\n+        // length check (https://github.com/rust-lang/rust/issues/77548):\n+        //if let Directive::Ignore(false) = skip_line_length {\n+        //    tidy_error!(bad, \"{}: ignoring line length unnecessarily\", file.display());\n+        //}\n         if let Directive::Ignore(false) = skip_file_length {\n             tidy_error!(bad, \"{}: ignoring file length unnecessarily\", file.display());\n         }"}]}