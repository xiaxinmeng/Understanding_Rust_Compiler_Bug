{"sha": "f0e0a40a6106e979843f97001bb3db59ceb29557", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTBhNDBhNjEwNmU5Nzk4NDNmOTcwMDFiYjNkYjU5Y2ViMjk1NTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-24T10:34:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-24T10:34:27Z"}, "message": "Reduce visbility", "tree": {"sha": "0873d73c54620163b6695365753128b67faf0e02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0873d73c54620163b6695365753128b67faf0e02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e0a40a6106e979843f97001bb3db59ceb29557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e0a40a6106e979843f97001bb3db59ceb29557", "html_url": "https://github.com/rust-lang/rust/commit/f0e0a40a6106e979843f97001bb3db59ceb29557", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e0a40a6106e979843f97001bb3db59ceb29557/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea3124c12a52f28163a6375b6a5e3c79fc14312d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea3124c12a52f28163a6375b6a5e3c79fc14312d", "html_url": "https://github.com/rust-lang/rust/commit/ea3124c12a52f28163a6375b6a5e3c79fc14312d"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "68a0451a29a3cf52ce04eb38c431e0f28b581b2b", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f0e0a40a6106e979843f97001bb3db59ceb29557/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e0a40a6106e979843f97001bb3db59ceb29557/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=f0e0a40a6106e979843f97001bb3db59ceb29557", "patch": "@@ -267,16 +267,6 @@ impl CrateDefMap {\n         self.diagnostics.iter().for_each(|it| it.add_to(db, module, sink))\n     }\n \n-    pub fn resolve_path(\n-        &self,\n-        db: &impl DefDatabase,\n-        original_module: LocalModuleId,\n-        path: &Path,\n-    ) -> (PerNs, Option<usize>) {\n-        let res = self.resolve_path_fp_with_macro(db, ResolveMode::Other, original_module, path);\n-        (res.resolved_def, res.segment_index)\n-    }\n-\n     pub fn modules(&self) -> impl Iterator<Item = LocalModuleId> + '_ {\n         self.modules.iter().map(|(id, _data)| id)\n     }\n@@ -287,6 +277,16 @@ impl CrateDefMap {\n             .filter(move |(_id, data)| data.definition == Some(file_id))\n             .map(|(id, _data)| id)\n     }\n+\n+    pub(crate) fn resolve_path(\n+        &self,\n+        db: &impl DefDatabase,\n+        original_module: LocalModuleId,\n+        path: &Path,\n+    ) -> (PerNs, Option<usize>) {\n+        let res = self.resolve_path_fp_with_macro(db, ResolveMode::Other, original_module, path);\n+        (res.resolved_def, res.segment_index)\n+    }\n }\n \n impl ModuleData {"}]}