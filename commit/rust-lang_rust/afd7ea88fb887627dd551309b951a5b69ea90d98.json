{"sha": "afd7ea88fb887627dd551309b951a5b69ea90d98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZDdlYTg4ZmI4ODc2MjdkZDU1MTMwOWI5NTFhNWI2OWVhOTBkOTg=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-05T20:47:54Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-17T09:05:05Z"}, "message": "update tests and add relevant feature gate test", "tree": {"sha": "950bbfc2abc29f5596027a3e0fe8e91883c28008", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/950bbfc2abc29f5596027a3e0fe8e91883c28008"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afd7ea88fb887627dd551309b951a5b69ea90d98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afd7ea88fb887627dd551309b951a5b69ea90d98", "html_url": "https://github.com/rust-lang/rust/commit/afd7ea88fb887627dd551309b951a5b69ea90d98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afd7ea88fb887627dd551309b951a5b69ea90d98/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1a8d322d0cb1ecce799a3ae5bfc991892ab09e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a8d322d0cb1ecce799a3ae5bfc991892ab09e2", "html_url": "https://github.com/rust-lang/rust/commit/e1a8d322d0cb1ecce799a3ae5bfc991892ab09e2"}], "stats": {"total": 157, "additions": 124, "deletions": 33}, "files": [{"sha": "d16990cb44c4929a628b18fdd793af01ba51c9c5", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -1164,7 +1164,7 @@ fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::Generics {\n             let parent_id = tcx.hir().get_parent_item(hir_id);\n             Some(tcx.hir().local_def_id(parent_id).to_def_id())\n         }\n-        // FIXME(#43408) always enable this once we use `lazy_normalization` is\n+        // FIXME(#43408) always enable this once `lazy_normalization` is\n         // stable enough and does not need a feature gate anymore.\n         Node::AnonConst(_) => {\n             let parent_id = tcx.hir().get_parent_item(hir_id);\n@@ -1193,7 +1193,6 @@ fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::Generics {\n                 }\n             }\n         }\n-\n         Node::Expr(&hir::Expr { kind: hir::ExprKind::Closure(..), .. }) => {\n             Some(tcx.closure_base_def_id(def_id))\n         }"}, {"sha": "2ebd063af18aca4a44b40530a4e76ca4c8191381", "filename": "src/test/ui/const-generics/array-size-in-generic-struct-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -29,5 +29,5 @@ LL |     arr: [u8; CFG.arr_size],\n    |\n    = note: this may fail depending on what value the parameter takes\n \n-error: aborting due to 2 previous errors; 1 warning emitted\n+error: aborting due to 2 previous errors; 2 warnings emitted\n "}, {"sha": "c779ac10671a6bd6a59a87e6c8e77cfe08fe6783", "filename": "src/test/ui/const-generics/issues/issue-61336-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -14,7 +14,7 @@ LL | #![feature(lazy_normalization_consts)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n-  --> $DIR/issue-61336-2.rs:9:5\n+  --> $DIR/issue-61336-2.rs:11:5\n    |\n LL |     [x; { N }]\n    |     ^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `T`\n@@ -25,6 +25,6 @@ help: consider restricting type parameter `T`\n LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n    |       ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "7d7cec2c179117b995cf1ae7730127a6d9845590", "filename": "src/test/ui/const-generics/issues/issue-61336.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -14,7 +14,7 @@ LL | #![feature(lazy_normalization_consts)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n-  --> $DIR/issue-61336.rs:9:5\n+  --> $DIR/issue-61336.rs:11:5\n    |\n LL |     [x; N]\n    |     ^^^^^^ the trait `std::marker::Copy` is not implemented for `T`\n@@ -25,6 +25,6 @@ help: consider restricting type parameter `T`\n LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n    |       ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "5eb468cc27263d038255652b786b126f9e2bbd78", "filename": "src/test/ui/const-generics/issues/issue-61747.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -7,13 +7,11 @@ LL | #![feature(const_generics)]\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n-<<<<<<< HEAD\n-warning: 1 warning emitted\n-=======\n warning: the feature `lazy_normalization_consts` is incomplete and may cause the compiler to crash\n   --> $DIR/issue-61747.rs:5:12\n    |\n LL | #![feature(lazy_normalization_consts)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n->>>>>>> Added `lazy_normalization_consts` feature, and removed the -Z flag.\n+\n+warning: 2 warnings emitted\n "}, {"sha": "ec0db0401b41c048e7e7e77c9a610bb2e036a274", "filename": "src/test/ui/const-generics/issues/issue-61935.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -12,3 +12,5 @@ warning: the feature `lazy_normalization_consts` is incomplete and may cause the\n LL | #![feature(lazy_normalization_consts)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+warning: 2 warnings emitted\n+"}, {"sha": "416b675b56d28cdec77fa8c77d7b79827fa5deed", "filename": "src/test/ui/const-generics/issues/issue-66205.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66205.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66205.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66205.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -1,5 +1,5 @@\n error: constant expression depends on a generic parameter\n-  --> $DIR/issue-66205.rs:5:12\n+  --> $DIR/issue-66205.rs:6:12\n    |\n LL |     fact::<{ N - 1 }>();\n    |            ^^^^^^^^^"}, {"sha": "2472693afcbaf1ead199790276e755ae6e31967c", "filename": "src/test/ui/const-generics/issues/issue-67185-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-1.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -12,3 +12,5 @@ warning: the feature `lazy_normalization_consts` is incomplete and may cause the\n LL | #![feature(lazy_normalization_consts)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+warning: 2 warnings emitted\n+"}, {"sha": "76d2622e9af0ff833e7dfba456cb4eac05aea33f", "filename": "src/test/ui/const-generics/issues/issue-67185-2.stderr", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -51,6 +51,12 @@ LL | | }\n error[E0277]: the trait bound `[u16; 3]: Bar` is not satisfied\n   --> $DIR/issue-67185-2.rs:27:6\n    |\n+LL | trait Foo\n+   |       --- required by a bound in this\n+...\n+LL |         <u8 as Baz>::Quaks: Bar,\n+   |                             --- required by this bound in `Foo`\n+...\n LL | impl Foo for FooImpl {}\n    |      ^^^ the trait `Bar` is not implemented for `[u16; 3]`\n    |\n@@ -61,6 +67,12 @@ LL | impl Foo for FooImpl {}\n error[E0277]: the trait bound `[[u16; 3]; 2]: Bar` is not satisfied\n   --> $DIR/issue-67185-2.rs:27:6\n    |\n+LL | trait Foo\n+   |       --- required by a bound in this\n+...\n+LL |         [<u8 as Baz>::Quaks; 2]: Bar,\n+   |                                  --- required by this bound in `Foo`\n+...\n LL | impl Foo for FooImpl {}\n    |      ^^^ the trait `Bar` is not implemented for `[[u16; 3]; 2]`\n    |\n@@ -71,17 +83,14 @@ LL | impl Foo for FooImpl {}\n error[E0277]: the trait bound `[[u16; 3]; 2]: Bar` is not satisfied\n   --> $DIR/issue-67185-2.rs:31:14\n    |\n-LL | / trait Foo\n-LL | |\n-LL | |     where\n-LL | |         [<u8 as Baz>::Quaks; 2]: Bar,\n-LL | |         <u8 as Baz>::Quaks: Bar,\n-LL | | {\n-LL | | }\n-   | |_- required by `Foo`\n+LL | trait Foo\n+   |       --- required by a bound in this\n+...\n+LL |         [<u8 as Baz>::Quaks; 2]: Bar,\n+   |                                  --- required by this bound in `Foo`\n ...\n-LL |   fn f(_: impl Foo) {}\n-   |                ^^^ the trait `Bar` is not implemented for `[[u16; 3]; 2]`\n+LL | fn f(_: impl Foo) {}\n+   |              ^^^ the trait `Bar` is not implemented for `[[u16; 3]; 2]`\n    |\n    = help: the following implementations were found:\n              <[[u16; 3]; 3] as Bar>\n@@ -90,22 +99,19 @@ LL |   fn f(_: impl Foo) {}\n error[E0277]: the trait bound `[u16; 3]: Bar` is not satisfied\n   --> $DIR/issue-67185-2.rs:31:14\n    |\n-LL | / trait Foo\n-LL | |\n-LL | |     where\n-LL | |         [<u8 as Baz>::Quaks; 2]: Bar,\n-LL | |         <u8 as Baz>::Quaks: Bar,\n-LL | | {\n-LL | | }\n-   | |_- required by `Foo`\n+LL | trait Foo\n+   |       --- required by a bound in this\n+...\n+LL |         <u8 as Baz>::Quaks: Bar,\n+   |                             --- required by this bound in `Foo`\n ...\n-LL |   fn f(_: impl Foo) {}\n-   |                ^^^ the trait `Bar` is not implemented for `[u16; 3]`\n+LL | fn f(_: impl Foo) {}\n+   |              ^^^ the trait `Bar` is not implemented for `[u16; 3]`\n    |\n    = help: the following implementations were found:\n              <[[u16; 3]; 3] as Bar>\n              <[u16; 4] as Bar>\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 6 previous errors; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "60597b8be620dd16210716158eb2c6155cc27d6c", "filename": "src/test/ui/const-generics/lazy-normalization/issue-71922.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Fissue-71922.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Fissue-71922.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Fissue-71922.rs?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -0,0 +1,20 @@\n+// run-pass\n+#![feature(const_generics)]\n+#![feature(lazy_normalization_consts)]\n+#![allow(incomplete_features)]\n+trait Foo {}\n+\n+impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+\n+trait FooImpl<const IS_ZERO: bool> {}\n+\n+impl FooImpl<{ 0u8 == 0u8 }> for [(); 0] {}\n+\n+impl<const N: usize> FooImpl<{ 0u8 != 0u8 }> for [(); N] {}\n+\n+fn foo<T: Foo>(_: T) {}\n+\n+fn main() {\n+    foo([]);\n+    foo([()]);\n+}"}, {"sha": "2c6fbfe65d6e1c6c1600f1f0e6adc5b83debaa2b", "filename": "src/test/ui/const-generics/lazy-normalization/lazy-normalization-feature-gate.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Flazy-normalization-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Flazy-normalization-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Flazy-normalization-feature-gate.rs?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -0,0 +1,20 @@\n+// gate-test-lazy_normalization_consts\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+trait Foo {}\n+\n+impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+//~^ ERROR cycle detected\n+\n+trait FooImpl<const IS_ZERO: bool> {}\n+\n+impl FooImpl<{ 0u8 == 0u8 }> for [(); 0] {}\n+\n+impl<const N: usize> FooImpl<{ 0u8 != 0u8 }> for [(); N] {}\n+\n+fn foo<T: Foo>(_: T) {}\n+\n+fn main() {\n+    foo([]);\n+    foo([()]);\n+}"}, {"sha": "8a97ec0c5fc88d98d818fbad871e25537a5dff09", "filename": "src/test/ui/const-generics/lazy-normalization/lazy-normalization-feature-gate.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Flazy-normalization-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afd7ea88fb887627dd551309b951a5b69ea90d98/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Flazy-normalization-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Flazy-normalization%2Flazy-normalization-feature-gate.stderr?ref=afd7ea88fb887627dd551309b951a5b69ea90d98", "patch": "@@ -0,0 +1,44 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/lazy-normalization-feature-gate-hack.rs:2:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0391]: cycle detected when const-evaluating + checking `<impl at $DIR/lazy-normalization-feature-gate-hack.rs:6:1: 6:72>::{{constant}}#0`\n+  --> $DIR/lazy-normalization-feature-gate-hack.rs:6:58\n+   |\n+LL | impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+   |                                                          ^^^^^^^^^^\n+   |\n+note: ...which requires const-evaluating + checking `<impl at $DIR/lazy-normalization-feature-gate-hack.rs:6:1: 6:72>::{{constant}}#0`...\n+  --> $DIR/lazy-normalization-feature-gate-hack.rs:6:58\n+   |\n+LL | impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+   |                                                          ^^^^^^^^^^\n+note: ...which requires const-evaluating `<impl at $DIR/lazy-normalization-feature-gate-hack.rs:6:1: 6:72>::{{constant}}#0`...\n+  --> $DIR/lazy-normalization-feature-gate-hack.rs:6:58\n+   |\n+LL | impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+   |                                                          ^^^^^^^^^^\n+note: ...which requires type-checking `<impl at $DIR/lazy-normalization-feature-gate-hack.rs:6:1: 6:72>::{{constant}}#0`...\n+  --> $DIR/lazy-normalization-feature-gate-hack.rs:6:58\n+   |\n+LL | impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+   |                                                          ^^^^^^^^^^\n+note: ...which requires processing `<impl at $DIR/lazy-normalization-feature-gate-hack.rs:6:1: 6:72>::{{constant}}#0`...\n+  --> $DIR/lazy-normalization-feature-gate-hack.rs:6:58\n+   |\n+LL | impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+   |                                                          ^^^^^^^^^^\n+   = note: ...which again requires const-evaluating + checking `<impl at $DIR/lazy-normalization-feature-gate-hack.rs:6:1: 6:72>::{{constant}}#0`, completing the cycle\n+note: cycle used when processing `<impl at $DIR/lazy-normalization-feature-gate-hack.rs:6:1: 6:72>`\n+  --> $DIR/lazy-normalization-feature-gate-hack.rs:6:1\n+   |\n+LL | impl<const N: usize> Foo for [(); N] where Self: FooImpl<{ N == 0 }> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0391`."}]}