{"sha": "186ec64947a0207fef811bfefb19453068e3d87d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NmVjNjQ5NDdhMDIwN2ZlZjgxMWJmZWZiMTk0NTMwNjhlM2Q4N2Q=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-22T22:00:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-22T22:00:56Z"}, "message": "Rollup merge of #78305 - ChrisDenton:const-layout, r=oli-obk\n\nStabilize alloc::Layout const functions\n\nStabilizes #67521. In particular the following stable methods are stabilized as `const fn`:\n\n* `size`\n* `align`\n* `from_size_align`\n\nStabilizing `size` and `align` should not be controversial as they are simple (usize and NonZeroUsize) fields and I don't think there's any reason to make them not const compatible in the future. That being true, the other methods are trivially `const`. The only other issue being returning a `Result` from a `const fn` but this has been made more usable by recent stabilizations.", "tree": {"sha": "1303c42a48d9e4b786c28d153c096dfb428c64a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1303c42a48d9e4b786c28d153c096dfb428c64a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/186ec64947a0207fef811bfefb19453068e3d87d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfut+YCRBK7hj4Ov3rIwAAdHIIAJ7YpnXbEv6xJtO0JQtOa3YX\n6WXvkzTGzcR0jc7bjicF3RYGuhdPmgaB7ZE7WvITBh4bsakvx7csXeGDvqIEmWuL\nhaVI5a7bFPE7ogFGPQ/pcbMPNwJksXZlFqyZDJu+a3te52tGfzRYpWx/TDpkgFOY\nH1wyeMhcZigrbgqGQYqjY5d9DaZOXYKkmHc9A0EFboQLDHrjDxwjT9KeyNeiulSV\n3jHbC1YI+6xccXF/iTUnJ5TpcbIioL+cGmZSh/yOgynSEL1ycejHeP+sS+kkylrv\n1pwwa7ucqYp1/05xO7FOIpqh+VPvBfC1O1pdJuaxEwVe1zVKcaeiVws7iaRUdvw=\n=Ncrc\n-----END PGP SIGNATURE-----\n", "payload": "tree 1303c42a48d9e4b786c28d153c096dfb428c64a5\nparent 4407049fcbdc8fce56573a4271b90384a269abbc\nparent 9050d12714e65ed135833b9dfd1b9619c6188ca4\nauthor Mara Bos <m-ou.se@m-ou.se> 1606082456 +0100\ncommitter GitHub <noreply@github.com> 1606082456 +0100\n\nRollup merge of #78305 - ChrisDenton:const-layout, r=oli-obk\n\nStabilize alloc::Layout const functions\n\nStabilizes #67521. In particular the following stable methods are stabilized as `const fn`:\n\n* `size`\n* `align`\n* `from_size_align`\n\nStabilizing `size` and `align` should not be controversial as they are simple (usize and NonZeroUsize) fields and I don't think there's any reason to make them not const compatible in the future. That being true, the other methods are trivially `const`. The only other issue being returning a `Result` from a `const fn` but this has been made more usable by recent stabilizations.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/186ec64947a0207fef811bfefb19453068e3d87d", "html_url": "https://github.com/rust-lang/rust/commit/186ec64947a0207fef811bfefb19453068e3d87d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/186ec64947a0207fef811bfefb19453068e3d87d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4407049fcbdc8fce56573a4271b90384a269abbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4407049fcbdc8fce56573a4271b90384a269abbc", "html_url": "https://github.com/rust-lang/rust/commit/4407049fcbdc8fce56573a4271b90384a269abbc"}, {"sha": "9050d12714e65ed135833b9dfd1b9619c6188ca4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9050d12714e65ed135833b9dfd1b9619c6188ca4", "html_url": "https://github.com/rust-lang/rust/commit/9050d12714e65ed135833b9dfd1b9619c6188ca4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "339d85902b83f06e8da0ef0a2f2a2a7d6852fb3a", "filename": "library/core/src/alloc/layout.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/186ec64947a0207fef811bfefb19453068e3d87d/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/186ec64947a0207fef811bfefb19453068e3d87d/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs?ref=186ec64947a0207fef811bfefb19453068e3d87d", "patch": "@@ -50,7 +50,7 @@ impl Layout {\n     ///    must not overflow (i.e., the rounded value must be less than\n     ///    or equal to `usize::MAX`).\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n-    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n+    #[rustc_const_stable(feature = \"const_alloc_layout\", since = \"1.50.0\")]\n     #[inline]\n     pub const fn from_size_align(size: usize, align: usize) -> Result<Self, LayoutError> {\n         if !align.is_power_of_two() {\n@@ -96,15 +96,15 @@ impl Layout {\n \n     /// The minimum size in bytes for a memory block of this layout.\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n-    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n+    #[rustc_const_stable(feature = \"const_alloc_layout\", since = \"1.50.0\")]\n     #[inline]\n     pub const fn size(&self) -> usize {\n         self.size_\n     }\n \n     /// The minimum byte alignment for a memory block of this layout.\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n-    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n+    #[rustc_const_stable(feature = \"const_alloc_layout\", since = \"1.50.0\")]\n     #[inline]\n     pub const fn align(&self) -> usize {\n         self.align_.get()"}]}