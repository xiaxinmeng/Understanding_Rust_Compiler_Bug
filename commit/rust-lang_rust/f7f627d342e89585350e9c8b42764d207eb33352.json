{"sha": "f7f627d342e89585350e9c8b42764d207eb33352", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZjYyN2QzNDJlODk1ODUzNTBlOWM4YjQyNzY0ZDIwN2ViMzMzNTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-18T13:23:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-18T13:23:14Z"}, "message": "Merge #4903\n\n4903: Add highlighting support for doc comments r=matklad a=Nashenas88\n\nThe language server protocol includes a semantic modifier for documentation. This change exports that modifier for doc comments so users can choose to highlight them differently compared to regular comments.\r\n\r\nExample:\r\n<img width=\"375\" alt=\"Screen Shot 2020-06-16 at 10 34 14 AM\" src=\"https://user-images.githubusercontent.com/1673130/84788271-f6599580-afbc-11ea-96e5-7a0215da620b.png\">\r\n\r\nCC @woody77 \n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>", "tree": {"sha": "800d91a03a1ea7d1678c95a48f2888327f952122", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/800d91a03a1ea7d1678c95a48f2888327f952122"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7f627d342e89585350e9c8b42764d207eb33352", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe62rCCRBK7hj4Ov3rIwAAdHIIAGXGOZSFxEXQlEG0BRzWb5HD\nVHasFFCWiCVI29QwWh/heCGD+1EKPB8vTUkjmcwOOeDdrpBSNq0Ad+dxw5gA3oWg\naDoVV29HsBOFNy2gbStUbMFzzCpR9UxmCKS2IuaW08u8NlntG1/1YbiP4+fItm6g\nEuBRfeDwH5o61d1vghzWJR+UID7HokYQpI/lUNDnetRAJeMZ1P8uMNB2RQfDqYUu\nVKEfuTFNtXb1ezimVYF0xpiB74rj9wNp7oBgDYaNhs1hSxo5bhG/AG/ML/DYrBMm\nEt3pvkfg5dJsKziqgiI3QzXFfTNKZOndsYWqd/s/dVEFU9dvTifLZV64F+InhlI=\n=yM+1\n-----END PGP SIGNATURE-----\n", "payload": "tree 800d91a03a1ea7d1678c95a48f2888327f952122\nparent 0262dba97ef114bd7664a4e32be21caef2d63f0a\nparent 66fc084a86e8f5d207d63e33173d1e203cb5ce5e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1592486594 +0000\ncommitter GitHub <noreply@github.com> 1592486594 +0000\n\nMerge #4903\n\n4903: Add highlighting support for doc comments r=matklad a=Nashenas88\n\nThe language server protocol includes a semantic modifier for documentation. This change exports that modifier for doc comments so users can choose to highlight them differently compared to regular comments.\r\n\r\nExample:\r\n<img width=\"375\" alt=\"Screen Shot 2020-06-16 at 10 34 14 AM\" src=\"https://user-images.githubusercontent.com/1673130/84788271-f6599580-afbc-11ea-96e5-7a0215da620b.png\">\r\n\r\nCC @woody77 \n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f627d342e89585350e9c8b42764d207eb33352", "html_url": "https://github.com/rust-lang/rust/commit/f7f627d342e89585350e9c8b42764d207eb33352", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7f627d342e89585350e9c8b42764d207eb33352/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0262dba97ef114bd7664a4e32be21caef2d63f0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0262dba97ef114bd7664a4e32be21caef2d63f0a", "html_url": "https://github.com/rust-lang/rust/commit/0262dba97ef114bd7664a4e32be21caef2d63f0a"}, {"sha": "66fc084a86e8f5d207d63e33173d1e203cb5ce5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fc084a86e8f5d207d63e33173d1e203cb5ce5e", "html_url": "https://github.com/rust-lang/rust/commit/66fc084a86e8f5d207d63e33173d1e203cb5ce5e"}], "stats": {"total": 97, "additions": 56, "deletions": 41}, "files": [{"sha": "f61c0daa5072cc8fb9d6f2b6ebcd7f23fb9b1428", "filename": "crates/ra_ide/src/snapshots/highlight_doctest.html", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html?ref=f7f627d342e89585350e9c8b42764d207eb33352", "patch": "@@ -39,48 +39,48 @@\n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> {\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"constant declaration\">bar</span>: <span class=\"builtin_type\">bool</span> = <span class=\"bool_literal\">true</span>;\n \n-    <span class=\"comment\">/// Constructs a new `Foo`.</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// # Examples</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">/// #</span> <span class=\"attribute\">#![</span><span class=\"function attribute\">allow</span><span class=\"attribute\">(unused_mut)]</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span>: <span class=\"struct\">Foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n-    <span class=\"comment\">/// ```</span>\n+    <span class=\"comment documentation\">/// Constructs a new `Foo`.</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// # Examples</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">/// #</span> <span class=\"attribute\">#![</span><span class=\"function attribute\">allow</span><span class=\"attribute\">(unused_mut)]</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span>: <span class=\"struct\">Foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n+    <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">new</span>() -&gt; <span class=\"struct\">Foo</span> {\n         <span class=\"struct\">Foo</span> { <span class=\"field\">bar</span>: <span class=\"bool_literal\">true</span> }\n     }\n \n-    <span class=\"comment\">/// `bar` method on `Foo`.</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// # Examples</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">use</span> <span class=\"module\">x</span>::<span class=\"module\">y</span>;\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"comment\">// calls bar on foo</span>\n-    <span class=\"comment\">/// </span><span class=\"macro\">assert!</span>(foo.bar());\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> = <span class=\"variable\">foo</span>.<span class=\"field\">bar</span> || <span class=\"struct\">Foo</span>::<span class=\"constant\">bar</span>;\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"comment\">/* multi-line\n-    </span><span class=\"comment\">/// </span><span class=\"comment\">       comment */</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">multi_line_string</span> = <span class=\"string_literal\">\"Foo\n-    </span><span class=\"comment\">/// </span><span class=\"string_literal\">  bar\n-    </span><span class=\"comment\">/// </span><span class=\"string_literal\">         \"</span>;\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```rust,no_run</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foobar</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>().<span class=\"function\">bar</span>();\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```sh</span>\n-    <span class=\"comment\">/// echo 1</span>\n-    <span class=\"comment\">/// ```</span>\n+    <span class=\"comment documentation\">/// `bar` method on `Foo`.</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// # Examples</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">use</span> <span class=\"module\">x</span>::<span class=\"module\">y</span>;\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"comment\">// calls bar on foo</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"macro\">assert!</span>(foo.bar());\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> = <span class=\"variable\">foo</span>.<span class=\"field\">bar</span> || <span class=\"struct\">Foo</span>::<span class=\"constant\">bar</span>;\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"comment\">/* multi-line\n+    </span><span class=\"comment documentation\">/// </span><span class=\"comment\">       comment */</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">multi_line_string</span> = <span class=\"string_literal\">\"Foo\n+    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal\">  bar\n+    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal\">         \"</span>;\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```rust,no_run</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foobar</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>().<span class=\"function\">bar</span>();\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```sh</span>\n+    <span class=\"comment documentation\">/// echo 1</span>\n+    <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span>(&<span class=\"self_keyword\">self</span>) -&gt; <span class=\"builtin_type\">bool</span> {\n         <span class=\"bool_literal\">true</span>\n     }"}, {"sha": "f8f790e5906f45d93b76a10b0e05b3749a0bcbe5", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=f7f627d342e89585350e9c8b42764d207eb33352", "patch": "@@ -489,7 +489,14 @@ fn highlight_element(\n         }\n \n         // Simple token-based highlighting\n-        COMMENT => HighlightTag::Comment.into(),\n+        COMMENT => {\n+            let comment = element.into_token().and_then(ast::Comment::cast)?;\n+            let h = HighlightTag::Comment;\n+            match comment.kind().doc {\n+                Some(_) => h | HighlightModifier::Documentation,\n+                None => h.into(),\n+            }\n+        }\n         STRING | RAW_STRING | RAW_BYTE_STRING | BYTE_STRING => HighlightTag::StringLiteral.into(),\n         ATTR => HighlightTag::Attribute.into(),\n         INT_NUMBER | FLOAT_NUMBER => HighlightTag::NumericLiteral.into(),"}, {"sha": "415f24a6d3a0164db8ac668dda1ecf119cee4c3c", "filename": "crates/ra_ide/src/syntax_highlighting/injection.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs?ref=f7f627d342e89585350e9c8b42764d207eb33352", "patch": "@@ -7,7 +7,10 @@ use hir::Semantics;\n use ra_syntax::{ast, AstToken, SyntaxNode, SyntaxToken, TextRange, TextSize};\n use stdx::SepBy;\n \n-use crate::{call_info::ActiveParameter, Analysis, HighlightTag, HighlightedRange, RootDatabase};\n+use crate::{\n+    call_info::ActiveParameter, Analysis, HighlightModifier, HighlightTag, HighlightedRange,\n+    RootDatabase,\n+};\n \n use super::HighlightedRangeStack;\n \n@@ -118,7 +121,7 @@ pub(super) fn extract_doc_comments(\n                     range.start(),\n                     range.start() + TextSize::try_from(pos).unwrap(),\n                 ),\n-                highlight: HighlightTag::Comment.into(),\n+                highlight: HighlightTag::Comment | HighlightModifier::Documentation,\n                 binding_hash: None,\n             });\n             line_start += range.len() - TextSize::try_from(pos).unwrap();\n@@ -164,6 +167,7 @@ pub(super) fn highlight_doc_comment(\n                 h.range.start() + start_offset,\n                 h.range.end() + end_offset.unwrap_or(start_offset),\n             );\n+\n             stack.add(h);\n         }\n     }"}, {"sha": "93bbb4b4dc4465c6ae7254ddbf375f4f28ef6778", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=f7f627d342e89585350e9c8b42764d207eb33352", "patch": "@@ -56,6 +56,7 @@ pub enum HighlightModifier {\n     /// `foo` in `fn foo(x: i32)` is a definition, `foo` in `foo(90 + 2)` is\n     /// not.\n     Definition,\n+    Documentation,\n     Mutable,\n     Unsafe,\n }\n@@ -108,6 +109,7 @@ impl HighlightModifier {\n         HighlightModifier::Attribute,\n         HighlightModifier::ControlFlow,\n         HighlightModifier::Definition,\n+        HighlightModifier::Documentation,\n         HighlightModifier::Mutable,\n         HighlightModifier::Unsafe,\n     ];\n@@ -117,6 +119,7 @@ impl HighlightModifier {\n             HighlightModifier::Attribute => \"attribute\",\n             HighlightModifier::ControlFlow => \"control\",\n             HighlightModifier::Definition => \"declaration\",\n+            HighlightModifier::Documentation => \"documentation\",\n             HighlightModifier::Mutable => \"mutable\",\n             HighlightModifier::Unsafe => \"unsafe\",\n         }"}, {"sha": "ec153097efef17abdde1652c507a30cc6d0960b5", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f627d342e89585350e9c8b42764d207eb33352/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=f7f627d342e89585350e9c8b42764d207eb33352", "patch": "@@ -331,6 +331,7 @@ fn semantic_token_type_and_modifiers(\n         let modifier = match modifier {\n             HighlightModifier::Attribute => semantic_tokens::ATTRIBUTE_MODIFIER,\n             HighlightModifier::Definition => lsp_types::SemanticTokenModifier::DECLARATION,\n+            HighlightModifier::Documentation => lsp_types::SemanticTokenModifier::DOCUMENTATION,\n             HighlightModifier::ControlFlow => semantic_tokens::CONTROL_FLOW,\n             HighlightModifier::Mutable => semantic_tokens::MUTABLE,\n             HighlightModifier::Unsafe => semantic_tokens::UNSAFE,"}]}