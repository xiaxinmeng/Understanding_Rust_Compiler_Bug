{"sha": "f360d222c897d36ea751051ca87c0e588fa653b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNjBkMjIyYzg5N2QzNmVhNzUxMDUxY2E4N2MwZTU4OGZhNjUzYjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-05T21:42:12Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-05T21:42:12Z"}, "message": "Uint-ify various bits of _str and _vec, enrich _vec a bit.", "tree": {"sha": "baf79fe74df23434d17f2f32732153511a4dd13b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baf79fe74df23434d17f2f32732153511a4dd13b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f360d222c897d36ea751051ca87c0e588fa653b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f360d222c897d36ea751051ca87c0e588fa653b2", "html_url": "https://github.com/rust-lang/rust/commit/f360d222c897d36ea751051ca87c0e588fa653b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f360d222c897d36ea751051ca87c0e588fa653b2/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdf2eaac9179c6115235e53dbc84ecebeb246603", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf2eaac9179c6115235e53dbc84ecebeb246603", "html_url": "https://github.com/rust-lang/rust/commit/fdf2eaac9179c6115235e53dbc84ecebeb246603"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "f1de80f1d283c95c5bbdc8c3221c82b1f094d0f9", "filename": "src/lib/_str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f360d222c897d36ea751051ca87c0e588fa653b2/src%2Flib%2F_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f360d222c897d36ea751051ca87c0e588fa653b2/src%2Flib%2F_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_str.rs?ref=f360d222c897d36ea751051ca87c0e588fa653b2", "patch": "@@ -4,13 +4,13 @@ native \"rust\" mod rustrt {\n   type sbuf;\n   fn str_buf(str s) -> sbuf;\n   fn str_len(str s) -> uint;\n-  fn str_alloc(int n_bytes) -> str;\n+  fn str_alloc(uint n_bytes) -> str;\n }\n \n fn is_utf8(vec[u8] v) -> bool {\n }\n \n-fn alloc(int n_bytes) -> str {\n+fn alloc(uint n_bytes) -> str {\n   ret rustrt.str_alloc(n_bytes);\n }\n "}, {"sha": "3074df2cd25b24dc3843fdc4de8c0d10c3a964a7", "filename": "src/lib/_vec.rs", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f360d222c897d36ea751051ca87c0e588fa653b2/src%2Flib%2F_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f360d222c897d36ea751051ca87c0e588fa653b2/src%2Flib%2F_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_vec.rs?ref=f360d222c897d36ea751051ca87c0e588fa653b2", "patch": "@@ -1,21 +1,39 @@\n import vbuf = rustrt.vbuf;\n+import op = util.operator;\n \n native \"rust\" mod rustrt {\n   type vbuf;\n   fn vec_buf[T](vec[T] v) -> vbuf;\n   fn vec_len[T](vec[T] v) -> uint;\n-  fn vec_alloc[T](int n_elts) -> vec[T];\n+  fn vec_alloc[T](uint n_elts) -> vec[T];\n }\n \n-fn alloc[T](int n_elts) -> vec[T] {\n+fn alloc[T](uint n_elts) -> vec[T] {\n   ret rustrt.vec_alloc[T](n_elts);\n }\n \n-fn init[T](&T t, int n_elts) -> vec[T] {\n+type init_op[T] = fn(uint i) -> T;\n+\n+fn init_fn[T](&init_op[T] op, uint n_elts) -> vec[T] {\n   let vec[T] v = alloc[T](n_elts);\n-  let int i = n_elts;\n-  while (i > 0) {\n-    i -= 1;\n+  let uint i = n_elts;\n+  while (i > uint(0)) {\n+    i -= uint(1);\n+    v += vec(op(i));\n+  }\n+  ret v;\n+}\n+\n+fn init_elt[T](&T t, uint n_elts) -> vec[T] {\n+  // FIXME: should be:\n+  // fn elt_op[X](X x, uint i) -> X { ret x; }\n+  // auto inner = bind elt_op[T](t, _);\n+  // ret init_fn[T](inner, n_elts);\n+  // but this does not work presently.\n+  let vec[T] v = alloc[T](n_elts);\n+  let uint i = n_elts;\n+  while (i > uint(0)) {\n+    i -= uint(1);\n     v += vec(t);\n   }\n   ret v;\n@@ -39,3 +57,15 @@ fn grow[T](mutable vec[T] v, int n, T initval) -> vec[T] {\n   }\n   ret v;\n }\n+\n+fn map[T,U](&op[T,U] f, &vec[T] v) -> vec[U] {\n+  // FIXME: should be\n+  // let vec[U] u = alloc[U](len[T](v));\n+  // but this does not work presently.\n+  let vec[U] u = vec();\n+  for (T ve in v) {\n+    u += vec(f[T,U](ve));\n+  }\n+  ret u;\n+}\n+"}, {"sha": "d432fbebcf919752df5347a0f363b9be92a81fca", "filename": "src/test/run-pass/user.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f360d222c897d36ea751051ca87c0e588fa653b2/src%2Ftest%2Frun-pass%2Fuser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f360d222c897d36ea751051ca87c0e588fa653b2/src%2Ftest%2Frun-pass%2Fuser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuser.rs?ref=f360d222c897d36ea751051ca87c0e588fa653b2", "patch": "@@ -5,10 +5,10 @@ use std (name = \"std\",\n          uuid = _, ver = _);\n \n fn main() {\n-  auto s = std._str.alloc(10);\n+  auto s = std._str.alloc(uint(10));\n   s += \"hello \";\n   log s;\n   s += \"there\";\n   log s;\n-  auto z = std._vec.alloc[int](10);\n+  auto z = std._vec.alloc[int](uint(10));\n }"}]}