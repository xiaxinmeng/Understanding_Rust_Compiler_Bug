{"sha": "42ea584b8e22361ff6c5a0b23bad812c6e1aae47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZWE1ODRiOGUyMjM2MWZmNmM1YTBiMjNiYWQ4MTJjNmUxYWFlNDc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-29T16:57:59Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-15T18:11:49Z"}, "message": "Better handling of ref types equality in write_cvalue", "tree": {"sha": "c7ed9a656441d0a62b876875e6460055cc4e4b41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7ed9a656441d0a62b876875e6460055cc4e4b41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42ea584b8e22361ff6c5a0b23bad812c6e1aae47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42ea584b8e22361ff6c5a0b23bad812c6e1aae47", "html_url": "https://github.com/rust-lang/rust/commit/42ea584b8e22361ff6c5a0b23bad812c6e1aae47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42ea584b8e22361ff6c5a0b23bad812c6e1aae47/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4694fa4f3dc0044451764b6afa170a68f0125a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/4694fa4f3dc0044451764b6afa170a68f0125a57", "html_url": "https://github.com/rust-lang/rust/commit/4694fa4f3dc0044451764b6afa170a68f0125a57"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "83f992380c0c51036ab3e2f175266734d1aba8c0", "filename": "src/common.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/42ea584b8e22361ff6c5a0b23bad812c6e1aae47/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ea584b8e22361ff6c5a0b23bad812c6e1aae47/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=42ea584b8e22361ff6c5a0b23bad812c6e1aae47", "patch": "@@ -192,12 +192,28 @@ impl<'a, 'tcx: 'a> CPlace<'tcx> {\n     }\n \n     pub fn write_cvalue(self, fx: &mut FunctionCx<'a, 'tcx>, from: CValue<'tcx>) {\n-        assert_eq!(\n-            self.layout().ty, from.layout().ty,\n-            \"Can't write value of incompatible type to place {:?} {:?}\\n\\n{:#?}\",\n-            self.layout().ty.sty, from.layout().ty.sty,\n-            fx,\n-        );\n+        match (&self.layout().ty.sty, &from.layout().ty.sty) {\n+            (TypeVariants::TyRef(_, t, dest_mut), TypeVariants::TyRef(_, u, src_mut)) if (\n+                if *dest_mut != ::rustc::hir::Mutability::MutImmutable && src_mut != dest_mut {\n+                    false\n+                } else if t != u {\n+                    false\n+                } else {\n+                    true\n+                }\n+            ) => {\n+                // &mut T -> &T is allowed\n+                // &'a T -> &'b T is allowed\n+            }\n+            _ => {\n+                assert_eq!(\n+                    self.layout().ty, from.layout().ty,\n+                    \"Can't write value of incompatible type to place {:?} {:?}\\n\\n{:#?}\",\n+                    self.layout().ty.sty, from.layout().ty.sty,\n+                    fx,\n+                );\n+            }\n+        }\n \n         match self {\n             CPlace::Var(var, _) => {"}]}