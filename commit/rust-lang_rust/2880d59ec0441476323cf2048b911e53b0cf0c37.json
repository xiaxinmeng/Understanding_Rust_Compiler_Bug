{"sha": "2880d59ec0441476323cf2048b911e53b0cf0c37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ODBkNTllYzA0NDE0NzYzMjNjZjIwNDhiOTExZTUzYjBjZjBjMzc=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-31T09:11:52Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-31T09:20:25Z"}, "message": "Add trim_tries", "tree": {"sha": "429fc3a802acfbe5e4de936b3a257251522dfa94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/429fc3a802acfbe5e4de936b3a257251522dfa94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2880d59ec0441476323cf2048b911e53b0cf0c37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2880d59ec0441476323cf2048b911e53b0cf0c37", "html_url": "https://github.com/rust-lang/rust/commit/2880d59ec0441476323cf2048b911e53b0cf0c37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2880d59ec0441476323cf2048b911e53b0cf0c37/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b8f0ff1b634b5d1f00aad646b5e4a5ee6eee3ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8f0ff1b634b5d1f00aad646b5e4a5ee6eee3ff", "html_url": "https://github.com/rust-lang/rust/commit/1b8f0ff1b634b5d1f00aad646b5e4a5ee6eee3ff"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "650acbd693791039fba1588e2d2f4aba6a218fa5", "filename": "src/chains.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2880d59ec0441476323cf2048b911e53b0cf0c37/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2880d59ec0441476323cf2048b911e53b0cf0c37/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=2880d59ec0441476323cf2048b911e53b0cf0c37", "patch": "@@ -65,7 +65,7 @@\n //!            .qux\n //! ```\n \n-use comment::rewrite_comment;\n+use comment::{rewrite_comment, CharClasses, FullCodeCharKind, RichChar};\n use config::IndentStyle;\n use expr::rewrite_call;\n use lists::{extract_post_comment, extract_pre_comment, get_comment_end};\n@@ -870,3 +870,28 @@ fn is_block_expr(context: &RewriteContext, expr: &ast::Expr, repr: &str) -> bool\n         _ => false,\n     }\n }\n+\n+/// Remove try operators (`?`s) that appear in the given string. If removing\n+/// them leaves an empty line, remove that line as well unless it is the first\n+/// line (we need the first newline for detecting pre/post comment).\n+fn trim_tries(s: &str) -> String {\n+    let mut result = String::with_capacity(s.len());\n+    let mut line_buffer = String::with_capacity(s.len());\n+    for (kind, rich_char) in CharClasses::new(s.chars()) {\n+        match rich_char.get_char() {\n+            '\\n' => {\n+                if result.is_empty() || !line_buffer.trim().is_empty() {\n+                    result.push_str(&line_buffer);\n+                    result.push('\\n')\n+                }\n+                line_buffer.clear();\n+            }\n+            '?' if kind == FullCodeCharKind::Normal => continue,\n+            c => line_buffer.push(c),\n+        }\n+    }\n+    if !line_buffer.trim().is_empty() {\n+        result.push_str(&line_buffer);\n+    }\n+    result\n+}"}]}