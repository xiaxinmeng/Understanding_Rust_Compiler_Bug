{"sha": "595dd843d7e2e38c08b4e03b79a0531d32d778fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NWRkODQzZDdlMmUzOGMwOGI0ZTAzYjc5YTA1MzFkMzJkNzc4ZmI=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-18T11:57:35Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-19T09:20:00Z"}, "message": "std::str: Use CharOffsetIterator in .find() and .rfind()", "tree": {"sha": "9002dce2430d057d4a1c151465e8e903499269c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9002dce2430d057d4a1c151465e8e903499269c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/595dd843d7e2e38c08b4e03b79a0531d32d778fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/595dd843d7e2e38c08b4e03b79a0531d32d778fb", "html_url": "https://github.com/rust-lang/rust/commit/595dd843d7e2e38c08b4e03b79a0531d32d778fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/595dd843d7e2e38c08b4e03b79a0531d32d778fb/comments", "author": null, "committer": null, "parents": [{"sha": "db3eb7291a3af1b88052f8ad87da79d62bd60b81", "url": "https://api.github.com/repos/rust-lang/rust/commits/db3eb7291a3af1b88052f8ad87da79d62bd60b81", "html_url": "https://github.com/rust-lang/rust/commit/db3eb7291a3af1b88052f8ad87da79d62bd60b81"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "0becd8e722ef9abbf5dca673dc672e6020595167", "filename": "src/libstd/str.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/595dd843d7e2e38c08b4e03b79a0531d32d778fb/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595dd843d7e2e38c08b4e03b79a0531d32d778fb/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=595dd843d7e2e38c08b4e03b79a0531d32d778fb", "patch": "@@ -1790,10 +1790,8 @@ impl<'self> StrSlice<'self> for &'self str {\n                 if search.matches(b as char) { return Some(i) }\n             }\n         } else {\n-            let mut index = 0;\n-            for c in self.iter() {\n+            for (index, c) in self.char_offset_iter() {\n                 if search.matches(c) { return Some(index); }\n-                index += c.len_utf8_bytes();\n             }\n         }\n \n@@ -1807,15 +1805,14 @@ impl<'self> StrSlice<'self> for &'self str {\n     /// `Some` containing the byte index of the last matching character\n     /// or `None` if there is no match\n     fn rfind<C: CharEq>(&self, search: C) -> Option<uint> {\n-        let mut index = self.len();\n         if search.only_ascii() {\n+            let mut index = self.len();\n             for b in self.byte_rev_iter() {\n                 index -= 1;\n                 if search.matches(b as char) { return Some(index); }\n             }\n         } else {\n-            for c in self.rev_iter() {\n-                index -= c.len_utf8_bytes();\n+            for (index, c) in self.char_offset_rev_iter() {\n                 if search.matches(c) { return Some(index); }\n             }\n         }"}]}