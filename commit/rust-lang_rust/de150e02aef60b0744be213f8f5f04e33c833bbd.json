{"sha": "de150e02aef60b0744be213f8f5f04e33c833bbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMTUwZTAyYWVmNjBiMDc0NGJlMjEzZjhmNWYwNGUzM2M4MzNiYmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-21T22:43:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-21T23:06:06Z"}, "message": "tutorial: Un-xfail some working examples", "tree": {"sha": "edbd98cc6c32f04e6fe568605d307282a60f102b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edbd98cc6c32f04e6fe568605d307282a60f102b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de150e02aef60b0744be213f8f5f04e33c833bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de150e02aef60b0744be213f8f5f04e33c833bbd", "html_url": "https://github.com/rust-lang/rust/commit/de150e02aef60b0744be213f8f5f04e33c833bbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de150e02aef60b0744be213f8f5f04e33c833bbd/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52b16230891be1548ffe9aa2a57388aac6dba204", "url": "https://api.github.com/repos/rust-lang/rust/commits/52b16230891be1548ffe9aa2a57388aac6dba204", "html_url": "https://github.com/rust-lang/rust/commit/52b16230891be1548ffe9aa2a57388aac6dba204"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "ecafc77ba31a56fe5f3ba59eb62a0f1502e0e430", "filename": "doc/tutorial.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de150e02aef60b0744be213f8f5f04e33c833bbd/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/de150e02aef60b0744be213f8f5f04e33c833bbd/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=de150e02aef60b0744be213f8f5f04e33c833bbd", "patch": "@@ -642,7 +642,6 @@ you use the matching to get at the contents of data types. Remember\n that `(float, float)` is a tuple of two floats:\n \n ~~~~\n-## xfail-test\n fn angle(vec: (float, float)) -> float {\n     alt vec {\n       (0f, y) if y < 0f { 1.5 * float::consts::pi }\n@@ -896,7 +895,6 @@ should almost always specify the type of that argument as `fn()`, so\n that callers have the flexibility to pass whatever they want.\n \n ~~~~\n-## xfail-test\n fn call_twice(f: fn()) { f(); f(); }\n call_twice({|| \"I am a stack closure\"; });\n call_twice(fn@() { \"I am a boxed closure\"; });\n@@ -1156,7 +1154,6 @@ get at their contents. All variant constructors can be used as\n patterns, as in this definition of `area`:\n \n ~~~~\n-## xfail-test\n # type point = {x: float, y: float};\n # enum shape { circle(point, float), rectangle(point, point) }\n fn area(sh: shape) -> float {"}]}