{"sha": "aa7fd563a4b8817223ac50fa22cd946ce354f47d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhN2ZkNTYzYTRiODgxNzIyM2FjNTBmYTIyY2Q5NDZjZTM1NGY0N2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T15:45:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T15:45:16Z"}, "message": "use ctry", "tree": {"sha": "17537d030ec76cac6c107de165edc522d902b5e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17537d030ec76cac6c107de165edc522d902b5e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa7fd563a4b8817223ac50fa22cd946ce354f47d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7fd563a4b8817223ac50fa22cd946ce354f47d", "html_url": "https://github.com/rust-lang/rust/commit/aa7fd563a4b8817223ac50fa22cd946ce354f47d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa7fd563a4b8817223ac50fa22cd946ce354f47d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4860870dae309f5287a287de0aa3a1a1b1de36b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4860870dae309f5287a287de0aa3a1a1b1de36b", "html_url": "https://github.com/rust-lang/rust/commit/f4860870dae309f5287a287de0aa3a1a1b1de36b"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "5ef278127e1da318df8dfbeef01e3b6cd3a55db5", "filename": "crates/ra_analysis/src/completion/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fmod.rs?ref=aa7fd563a4b8817223ac50fa22cd946ce354f47d", "patch": "@@ -38,10 +38,7 @@ pub(crate) fn completions(\n         original_file.reparse(&edit)\n     };\n \n-    let module = match ModuleDescriptor::guess_from_position(db, position)? {\n-        None => return Ok(None),\n-        Some(it) => it,\n-    };\n+    let module = ctry!(ModuleDescriptor::guess_from_position(db, position)?);\n \n     let mut res = Vec::new();\n     let mut has_completions = false;"}, {"sha": "764e19ce0b3da7d0ec7b93bab8dee24c0e2f2f79", "filename": "crates/ra_analysis/src/descriptors/module/mod.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs?ref=aa7fd563a4b8817223ac50fa22cd946ce354f47d", "patch": "@@ -17,7 +17,7 @@ use crate::{\n     descriptors::{Path, PathKind, DescriptorDatabase},\n     input::SourceRootId,\n     arena::{Arena, Id},\n-    loc2id::DefLoc,\n+    loc2id::{DefLoc, DefId},\n };\n \n pub(crate) use self::nameres::ModuleScope;\n@@ -153,15 +153,6 @@ impl ModuleDescriptor {\n         db: &impl DescriptorDatabase,\n         path: Path,\n     ) -> Cancelable<Option<ModuleDescriptor>> {\n-        macro_rules! ctry {\n-            ($expr:expr) => {\n-                match $expr {\n-                    None => return Ok(None),\n-                    Some(it) => it,\n-                }\n-            };\n-        };\n-\n         let mut curr = match path.kind {\n             PathKind::Crate => self.crate_root(),\n             PathKind::Self_ | PathKind::Plain => self.clone(),"}, {"sha": "8a41b31526551f631f505a33992af6e19a107a83", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=aa7fd563a4b8817223ac50fa22cd946ce354f47d", "patch": "@@ -450,14 +450,8 @@ impl AnalysisImpl {\n         let syntax = file.syntax();\n \n         // Find the calling expression and it's NameRef\n-        let calling_node = match FnCallNode::with_node(syntax, position.offset) {\n-            Some(node) => node,\n-            None => return Ok(None),\n-        };\n-        let name_ref = match calling_node.name_ref() {\n-            Some(name) => name,\n-            None => return Ok(None),\n-        };\n+        let calling_node = ctry!(FnCallNode::with_node(syntax, position.offset));\n+        let name_ref = ctry!(calling_node.name_ref());\n \n         // Resolve the function's NameRef (NOTE: this isn't entirely accurate).\n         let file_symbols = self.index_resolve(name_ref)?;"}, {"sha": "0fbfd8a408c16aa54e9276ba567ef52ec04babc3", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7fd563a4b8817223ac50fa22cd946ce354f47d/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=aa7fd563a4b8817223ac50fa22cd946ce354f47d", "patch": "@@ -9,6 +9,15 @@ extern crate relative_path;\n extern crate rustc_hash;\n extern crate salsa;\n \n+macro_rules! ctry {\n+    ($expr:expr) => {\n+        match $expr {\n+            None => return Ok(None),\n+            Some(it) => it,\n+        }\n+    };\n+}\n+\n mod arena;\n mod db;\n mod loc2id;"}]}