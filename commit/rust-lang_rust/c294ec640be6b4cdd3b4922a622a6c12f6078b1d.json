{"sha": "c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyOTRlYzY0MGJlNmI0Y2RkM2I0OTIyYTYyMmE2YzEyZjYwNzhiMWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-19T20:43:46Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-19T20:44:01Z"}, "message": "add more to the ERROR messages", "tree": {"sha": "e424c1375ee1cc9f409e5fcd75ab7931b3158b3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e424c1375ee1cc9f409e5fcd75ab7931b3158b3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "html_url": "https://github.com/rust-lang/rust/commit/c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df8adb53c911b61544e49b0a5ac5fd189907cc44", "url": "https://api.github.com/repos/rust-lang/rust/commits/df8adb53c911b61544e49b0a5ac5fd189907cc44", "html_url": "https://github.com/rust-lang/rust/commit/df8adb53c911b61544e49b0a5ac5fd189907cc44"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "c94947d1eab1ccc5c08613518867a1077899aefd", "filename": "src/test/ui/underscore-lifetime/in-binder.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-binder.rs?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -10,36 +10,36 @@ struct IceCube<'a> {\n }\n \n impl<'_> IceCube<'_> {}\n-//[Rust2015]~^ ERROR\n-//[Rust2015]~| ERROR\n-//[Rust2018]~^^^ ERROR\n+//[Rust2015]~^ ERROR `'_` cannot be used here\n+//[Rust2015]~| ERROR missing lifetime specifier\n+//[Rust2018]~^^^ ERROR `'_` cannot be used here\n \n struct Struct<'_> {\n-//[Rust2015]~^ ERROR\n-//[Rust2018]~^^ ERROR\n+//[Rust2015]~^ ERROR `'_` cannot be used here\n+//[Rust2018]~^^ ERROR `'_` cannot be used here\n     v: Vec<&'static char>\n }\n \n enum Enum<'_> {\n-//[Rust2015]~^ ERROR\n-//[Rust2018]~^^ ERROR\n+//[Rust2015]~^ ERROR `'_` cannot be used here\n+//[Rust2018]~^^ ERROR `'_` cannot be used here\n     Variant\n }\n \n union Union<'_> {\n-//[Rust2015]~^ ERROR\n-//[Rust2018]~^^ ERROR\n+//[Rust2015]~^ ERROR `'_` cannot be used here\n+//[Rust2018]~^^ ERROR `'_` cannot be used here\n     a: u32\n }\n \n trait Trait<'_> {\n-//[Rust2015]~^ ERROR\n-//[Rust2018]~^^ ERROR\n+//[Rust2015]~^ ERROR `'_` cannot be used here\n+//[Rust2018]~^^ ERROR `'_` cannot be used here\n }\n \n fn foo<'_>() {\n-    //[Rust2015]~^ ERROR\n-    //[Rust2018]~^^ ERROR\n+    //[Rust2015]~^ ERROR `'_` cannot be used here\n+    //[Rust2018]~^^ ERROR `'_` cannot be used here\n }\n \n fn main() {}"}, {"sha": "09f3abd9135cb9c2da375562f93831663c719884", "filename": "src/test/ui/underscore-lifetime/in-fn-return-illegal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.rs?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -12,6 +12,6 @@\n \n use std::fmt::Debug;\n \n-fn foo(x: &u32, y: &u32) -> &'_ u32 { loop { } } //~ ERROR\n+fn foo(x: &u32, y: &u32) -> &'_ u32 { loop { } } //~ ERROR missing lifetime specifier\n \n fn main() { }"}, {"sha": "f3ba3e529242616f6167315f0e9cfb6aa725cd5d", "filename": "src/test/ui/underscore-lifetime/in-fn-return-illegal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.stderr?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -1,7 +1,7 @@\n error[E0106]: missing lifetime specifier\n   --> $DIR/in-fn-return-illegal.rs:15:30\n    |\n-LL | fn foo(x: &u32, y: &u32) -> &'_ u32 { loop { } } //~ ERROR\n+LL | fn foo(x: &u32, y: &u32) -> &'_ u32 { loop { } } //~ ERROR missing lifetime specifier\n    |                              ^^ expected lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`"}, {"sha": "1c1a9ef62d5947dee6368c350be0e0f1a4941d3e", "filename": "src/test/ui/underscore-lifetime/in-struct.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.rs?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -13,11 +13,11 @@\n use std::fmt::Debug;\n \n struct Foo {\n-    x: &'_ u32, //~ ERROR\n+    x: &'_ u32, //~ ERROR missing lifetime specifier\n }\n \n enum Bar {\n-    Variant(&'_ u32), //~ ERROR\n+    Variant(&'_ u32), //~ ERROR missing lifetime specifier\n }\n \n fn main() { }"}, {"sha": "d288995d4bb820745fe1846f35d5711b2b131d87", "filename": "src/test/ui/underscore-lifetime/in-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.stderr?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -1,13 +1,13 @@\n error[E0106]: missing lifetime specifier\n   --> $DIR/in-struct.rs:16:9\n    |\n-LL |     x: &'_ u32, //~ ERROR\n+LL |     x: &'_ u32, //~ ERROR missing lifetime specifier\n    |         ^^ expected lifetime parameter\n \n error[E0106]: missing lifetime specifier\n   --> $DIR/in-struct.rs:20:14\n    |\n-LL |     Variant(&'_ u32), //~ ERROR\n+LL |     Variant(&'_ u32), //~ ERROR missing lifetime specifier\n    |              ^^ expected lifetime parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "43de30944cacb5d3403c678a36ec8e30d83be4be", "filename": "src/test/ui/underscore-lifetime/where-clause-inherent-impl-ampersand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rs?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -11,8 +11,8 @@ struct Foo<T> {\n impl<T> Foo<T>\n where\n     T: WithType<&u32>\n-//[rust2015]~^ ERROR\n-//[rust2018]~^^ ERROR\n+//[rust2015]~^ ERROR `&` without an explicit lifetime name cannot be used here\n+//[rust2018]~^^ ERROR `&` without an explicit lifetime name cannot be used here\n { }\n \n fn main() {}"}, {"sha": "b50cce335bd8c9808104eb9b4c5fd98540bdba86", "filename": "src/test/ui/underscore-lifetime/where-clause-inherent-impl-underscore.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-underscore.rs?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -11,8 +11,8 @@ struct Foo<T> {\n impl<T> Foo<T>\n where\n     T: WithRegion<'_>\n-//[rust2015]~^ ERROR\n-//[rust2018]~^^ ERROR\n+//[rust2015]~^ ERROR `'_` cannot be used here\n+//[rust2018]~^^ ERROR `'_` cannot be used here\n { }\n \n fn main() {}"}, {"sha": "f2d483e66e0138fef67cca860b28ed3bfcbb9979", "filename": "src/test/ui/underscore-lifetime/where-clause-trait-impl-region.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rs?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -9,8 +9,8 @@ trait Foo { }\n impl<T> Foo for Vec<T>\n where\n     T: WithType<&u32>\n-//[rust2015]~^ ERROR\n-//[rust2018]~^^ ERROR\n+//[rust2015]~^ ERROR `&` without an explicit lifetime name cannot be used here\n+//[rust2018]~^^ ERROR `&` without an explicit lifetime name cannot be used here\n { }\n \n fn main() {}"}, {"sha": "94e4426e822d92a9b54e6f8af94c7a51a328adf2", "filename": "src/test/ui/underscore-lifetime/where-clause-trait-impl-underscore.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c294ec640be6b4cdd3b4922a622a6c12f6078b1d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-underscore.rs?ref=c294ec640be6b4cdd3b4922a622a6c12f6078b1d", "patch": "@@ -9,8 +9,8 @@ trait Foo { }\n impl<T> Foo for Vec<T>\n where\n     T: WithRegion<'_>\n-//[rust2015]~^ ERROR\n-//[rust2018]~^^ ERROR\n+//[rust2015]~^ ERROR `'_` cannot be used here\n+//[rust2018]~^^ ERROR `'_` cannot be used here\n { }\n \n fn main() {}"}]}