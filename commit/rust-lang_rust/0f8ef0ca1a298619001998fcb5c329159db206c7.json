{"sha": "0f8ef0ca1a298619001998fcb5c329159db206c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmOGVmMGNhMWEyOTg2MTkwMDE5OThmY2I1YzMyOTE1OWRiMjA2Yzc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-06T22:11:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-15T15:27:54Z"}, "message": "more concise debug output when dumping the value of a region", "tree": {"sha": "5808e5a8cc6ea4c2d6ae4d15de754ea9a346a396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5808e5a8cc6ea4c2d6ae4d15de754ea9a346a396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f8ef0ca1a298619001998fcb5c329159db206c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f8ef0ca1a298619001998fcb5c329159db206c7", "html_url": "https://github.com/rust-lang/rust/commit/0f8ef0ca1a298619001998fcb5c329159db206c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f8ef0ca1a298619001998fcb5c329159db206c7/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d6bd42abb0b6082d23e7fe84b0121dfa0476b78", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d6bd42abb0b6082d23e7fe84b0121dfa0476b78", "html_url": "https://github.com/rust-lang/rust/commit/0d6bd42abb0b6082d23e7fe84b0121dfa0476b78"}], "stats": {"total": 105, "additions": 77, "deletions": 28}, "files": [{"sha": "5f23a0e5790af8d5e8141319fea15cf434b7e4b3", "filename": "src/librustc_mir/borrow_check/nll/region_infer/values.rs", "status": "modified", "additions": 56, "deletions": 7, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -215,8 +215,11 @@ impl RegionValues {\n         // FIXME. We could optimize this by improving\n         // `BitMatrix::merge` so it does not always merge an entire\n         // row.\n-        debug!(\"add_universal_regions_outlived_by(from_region={:?}, to_region={:?})\",\n-               from_region, to_region);\n+        debug!(\n+            \"add_universal_regions_outlived_by(from_region={:?}, to_region={:?})\",\n+            from_region,\n+            to_region\n+        );\n         let mut changed = false;\n         for elem in self.elements.all_universal_region_indices() {\n             if self.contains(from_region, elem) {\n@@ -269,24 +272,70 @@ impl RegionValues {\n         let mut result = String::new();\n         result.push_str(\"{\");\n \n-        for (index, element) in self.elements_contained_in(r).enumerate() {\n-            if index > 0 {\n-                result.push_str(\", \");\n-            }\n+        // Set to Some(l1, l2) when we have observed all the locations\n+        // from l1..=l2 (inclusive) but not yet printed them. This\n+        // gets extended if we then see l3 where l3 is the successor\n+        // to l2.\n+        let mut open_location: Option<(Location, Location)> = None;\n+\n+        let mut sep = \"\";\n+        let mut push_sep = |s: &mut String| {\n+            s.push_str(sep);\n+            sep = \", \";\n+        };\n \n+        for element in self.elements_contained_in(r) {\n             match element {\n                 RegionElement::Location(l) => {\n-                    result.push_str(&format!(\"{:?}\", l));\n+                    if let Some((location1, location2)) = open_location {\n+                        if location2.block == l.block\n+                            && location2.statement_index == l.statement_index - 1\n+                        {\n+                            open_location = Some((location1, l));\n+                            continue;\n+                        }\n+\n+                        push_sep(&mut result);\n+                        Self::push_location_range(&mut result, location1, location2);\n+                    }\n+\n+                    open_location = Some((l, l));\n                 }\n \n                 RegionElement::UniversalRegion(fr) => {\n+                    if let Some((location1, location2)) = open_location {\n+                        push_sep(&mut result);\n+                        Self::push_location_range(&mut result, location1, location2);\n+                        open_location = None;\n+                    }\n+\n+                    push_sep(&mut result);\n                     result.push_str(&format!(\"{:?}\", fr));\n                 }\n             }\n         }\n \n+        if let Some((location1, location2)) = open_location {\n+            push_sep(&mut result);\n+            Self::push_location_range(&mut result, location1, location2);\n+        }\n+\n         result.push_str(\"}\");\n \n         result\n     }\n+\n+    fn push_location_range(str: &mut String, location1: Location, location2: Location) {\n+        if location1 == location2 {\n+            str.push_str(&format!(\"{:?}\", location1));\n+        } else {\n+            assert_eq!(location1.block, location2.block);\n+            str.push_str(&format!(\n+                \"{:?}[{}..={}]\",\n+                location1.block,\n+                location1.statement_index,\n+                location2.statement_index\n+            ));\n+        }\n+    }\n }"}, {"sha": "8feac15d69a82a484b442589d047b18fb95c003b", "filename": "src/test/mir-opt/nll/named-lifetimes-basic.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fnamed-lifetimes-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fnamed-lifetimes-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fnamed-lifetimes-basic.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -34,15 +34,15 @@ fn main() {\n // | '_#4r    | Local    | ['_#4r]\n // |\n // | Inferred Region Values\n-// | '_#0r    | {'_#0r, bb0[0], bb0[1]}\n-// | '_#1r    | {'_#1r, bb0[0], bb0[1]}\n-// | '_#2r    | {'_#2r, bb0[0], bb0[1]}\n-// | '_#3r    | {'_#3r, bb0[0], bb0[1]}\n-// | '_#4r    | {'_#4r, bb0[0], bb0[1]}\n-// | '_#5r    | {'_#1r, bb0[0], bb0[1]}\n-// | '_#6r    | {'_#2r, bb0[0], bb0[1]}\n-// | '_#7r    | {'_#1r, bb0[0], bb0[1]}\n-// | '_#8r    | {'_#3r, bb0[0], bb0[1]}\n+// | '_#0r    | {'_#0r, bb0[0..=1]}\n+// | '_#1r    | {'_#1r, bb0[0..=1]}\n+// | '_#2r    | {'_#2r, bb0[0..=1]}\n+// | '_#3r    | {'_#3r, bb0[0..=1]}\n+// | '_#4r    | {'_#4r, bb0[0..=1]}\n+// | '_#5r    | {'_#1r, bb0[0..=1]}\n+// | '_#6r    | {'_#2r, bb0[0..=1]}\n+// | '_#7r    | {'_#1r, bb0[0..=1]}\n+// | '_#8r    | {'_#3r, bb0[0..=1]}\n // |\n // ...\n // fn use_x(_1: &'_#5r mut i32, _2: &'_#6r u32, _3: &'_#7r u32, _4: &'_#8r u32) -> bool {"}, {"sha": "f69c51c3562dce3e2d3579169b9466c4afadbbc8", "filename": "src/test/mir-opt/nll/reborrow-basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -28,9 +28,9 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.main.nll.0.mir\n-// | '_#7r    | {bb0[6], bb0[7], bb0[8], bb0[9], bb0[10], bb0[11], bb0[12], bb0[13], bb0[14]}\n+// | '_#7r    | {bb0[6..=14]}\n // ...\n-// | '_#9r    | {bb0[11], bb0[12], bb0[13], bb0[14]}\n+// | '_#9r    | {bb0[11..=14]}\n // ...\n // let _2: &'_#7r mut i32;\n // ..."}, {"sha": "e9834305550c39088b170e16695c9ab56b17188d", "filename": "src/test/mir-opt/nll/region-liveness-basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-basic.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -31,8 +31,8 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.main.nll.0.mir\n-// | '_#2r    | {bb2[0], bb2[1], bb3[0], bb3[1]}\n-// | '_#3r    | {bb2[1], bb3[0], bb3[1]}\n+// | '_#2r    | {bb2[0..=1], bb3[0..=1]}\n+// | '_#3r    | {bb2[1], bb3[0..=1]}\n // ...\n //             let _2: &'_#3r usize;\n // END rustc.main.nll.0.mir"}, {"sha": "c14ce6bb581deb9dfa72c0aa9d2d3f95d5969833", "filename": "src/test/mir-opt/nll/region-liveness-drop-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-may-dangle.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -44,7 +44,7 @@ unsafe impl<#[may_dangle] T> Drop for Wrap<T> {\n \n // END RUST SOURCE\n // START rustc.main.nll.0.mir\n-// | '_#6r    | {bb2[3], bb2[4], bb2[5], bb3[0], bb3[1]}\n+// | '_#6r    | {bb2[3..=5], bb3[0..=1]}\n // ...\n // let _2: Wrap<&'_#6r usize>;\n // END rustc.main.nll.0.mir"}, {"sha": "058a57fe612cff17c815c36bc1aa832339787130", "filename": "src/test/mir-opt/nll/region-liveness-drop-no-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-drop-no-may-dangle.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -46,7 +46,7 @@ impl<T> Drop for Wrap<T> {\n \n // END RUST SOURCE\n // START rustc.main.nll.0.mir\n-// | '_#6r    | {bb2[3], bb2[4], bb2[5], bb3[0], bb3[1], bb3[2], bb4[0], bb5[0], bb5[1], bb5[2], bb6[0], bb7[0], bb7[1], bb8[0]}\n+// | '_#6r    | {bb2[3..=5], bb3[0..=2], bb4[0], bb5[0..=2], bb6[0], bb7[0..=1], bb8[0]}\n // ...\n // let _2: Wrap<&'_#6r usize>;\n // END rustc.main.nll.0.mir"}, {"sha": "821cd73667193afb145773501869b5755a5ab314", "filename": "src/test/mir-opt/nll/region-liveness-two-disjoint-uses.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-two-disjoint-uses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-two-disjoint-uses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-liveness-two-disjoint-uses.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -36,10 +36,10 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.main.nll.0.mir\n-// | '_#2r    | {bb2[0], bb2[1], bb3[0], bb3[1]}\n+// | '_#2r    | {bb2[0..=1], bb3[0..=1]}\n // ...\n-// | '_#4r    | {bb8[1], bb8[2], bb8[3], bb8[4]}\n-// | '_#5r    | {bb2[1], bb3[0], bb3[1], bb8[2], bb8[3], bb8[4]}\n+// | '_#4r    | {bb8[1..=4]}\n+// | '_#5r    | {bb2[1], bb3[0..=1], bb8[2..=4]}\n // ...\n // let mut _2: &'_#5r usize;\n // ..."}, {"sha": "a3f68ed5ebf5eecd7f7f17d8bafb2bced9318296", "filename": "src/test/mir-opt/nll/region-subtyping-basic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8ef0ca1a298619001998fcb5c329159db206c7/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs?ref=0f8ef0ca1a298619001998fcb5c329159db206c7", "patch": "@@ -32,9 +32,9 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.main.nll.0.mir\n-// | '_#2r    | {bb2[0], bb2[1], bb2[2], bb2[3], bb2[4], bb2[5], bb2[6], bb3[0], bb3[1]}\n-// | '_#3r    | {bb2[1], bb2[2], bb2[3], bb2[4], bb2[5], bb2[6], bb3[0], bb3[1]}\n-// | '_#4r    | {bb2[5], bb2[6], bb3[0], bb3[1]}\n+// | '_#2r    | {bb2[0..=6], bb3[0..=1]}\n+// | '_#3r    | {bb2[1..=6], bb3[0..=1]}\n+// | '_#4r    | {bb2[5..=6], bb3[0..=1]}\n // END rustc.main.nll.0.mir\n // START rustc.main.nll.0.mir\n // let _2: &'_#3r usize;"}]}