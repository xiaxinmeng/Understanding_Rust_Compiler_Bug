{"sha": "cf19c5132a074195b61c3a09b9b61f99840744df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMTljNTEzMmEwNzQxOTViNjFjM2EwOWI5YjYxZjk5ODQwNzQ0ZGY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-03T05:44:21Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-03T05:44:21Z"}, "message": "Hey, what's a coding sprint without an uncovered register allocation bug? No fun, I say.", "tree": {"sha": "08c6d249528cc019f2dfabea2f67fda4875c2069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08c6d249528cc019f2dfabea2f67fda4875c2069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf19c5132a074195b61c3a09b9b61f99840744df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf19c5132a074195b61c3a09b9b61f99840744df", "html_url": "https://github.com/rust-lang/rust/commit/cf19c5132a074195b61c3a09b9b61f99840744df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf19c5132a074195b61c3a09b9b61f99840744df/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5a3c9736a93476e48750d2bc346a5a64bbd7c26", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a3c9736a93476e48750d2bc346a5a64bbd7c26", "html_url": "https://github.com/rust-lang/rust/commit/c5a3c9736a93476e48750d2bc346a5a64bbd7c26"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "eb78ae2e6f56fb657be7e239d86f81e9123fcfb4", "filename": "src/boot/be/ra.ml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cf19c5132a074195b61c3a09b9b61f99840744df/src%2Fboot%2Fbe%2Fra.ml", "raw_url": "https://github.com/rust-lang/rust/raw/cf19c5132a074195b61c3a09b9b61f99840744df/src%2Fboot%2Fbe%2Fra.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fra.ml?ref=cf19c5132a074195b61c3a09b9b61f99840744df", "patch": "@@ -434,7 +434,8 @@ let reg_alloc\n           then\n             begin\n               Hashtbl.remove dirty_vregs vreg;\n-              if (Bits.get (live_out_vregs.(i)) vreg)\n+              if (Bits.get (live_out_vregs.(i)) vreg) ||\n+                (Bits.get (live_in_vregs.(i)) vreg)\n               then\n                 let spill_idx =\n                   if Hashtbl.mem vreg_to_spill vreg"}]}