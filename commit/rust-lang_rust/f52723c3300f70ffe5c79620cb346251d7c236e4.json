{"sha": "f52723c3300f70ffe5c79620cb346251d7c236e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MjcyM2MzMzAwZjcwZmZlNWM3OTYyMGNiMzQ2MjUxZDdjMjM2ZTQ=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-10-10T15:57:49Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-10-10T15:57:49Z"}, "message": "ICH: Enable some cases in trait definition hashing.", "tree": {"sha": "01edb1767c0e94af45a0cfe94d78d0c461191032", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01edb1767c0e94af45a0cfe94d78d0c461191032"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f52723c3300f70ffe5c79620cb346251d7c236e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f52723c3300f70ffe5c79620cb346251d7c236e4", "html_url": "https://github.com/rust-lang/rust/commit/f52723c3300f70ffe5c79620cb346251d7c236e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f52723c3300f70ffe5c79620cb346251d7c236e4/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7bfb1aba9d089a0464c03b3841e889c6ee7c4f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7bfb1aba9d089a0464c03b3841e889c6ee7c4f1", "html_url": "https://github.com/rust-lang/rust/commit/a7bfb1aba9d089a0464c03b3841e889c6ee7c4f1"}], "stats": {"total": 176, "additions": 85, "deletions": 91}, "files": [{"sha": "937f053e320f6a7c56d1965b2e68b98a44aac7a3", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 85, "deletions": 91, "changes": 176, "blob_url": "https://github.com/rust-lang/rust/blob/f52723c3300f70ffe5c79620cb346251d7c236e4/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52723c3300f70ffe5c79620cb346251d7c236e4/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=f52723c3300f70ffe5c79620cb346251d7c236e4", "patch": "@@ -46,16 +46,15 @@ pub trait TraitVisibility { }\n \n \n // Change trait unsafety ----------------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitUnsafety { }\n+#[cfg(cfail1)]\n+trait TraitUnsafety { }\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// unsafe trait TraitUnsafety { }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+unsafe trait TraitUnsafety { }\n \n \n \n@@ -178,20 +177,19 @@ trait TraitChangeMethodParameterType {\n \n \n // Change type of method parameter (&i32 => &mut i32) -----------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeMethodParameterTypeRef {\n-//     fn method(a: &i32);\n-// }\n+#[cfg(cfail1)]\n+trait TraitChangeMethodParameterTypeRef {\n+    fn method(a: &i32);\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeMethodParameterTypeRef {\n-//     fn method(a: &mut i32);\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeMethodParameterTypeRef {\n+    fn method(a: &mut i32);\n+}\n \n \n \n@@ -249,35 +247,35 @@ trait TraitChangeOrderOfMethods {\n \n \n // Change mode of self parameter --------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeModeSelfRefToMut {\n-//     fn method(&self);\n-// }\n-\n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeModeSelfRefToMut {\n-//     fn method(&mut self);\n-// }\n-\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeModeSelfOwnToMut {\n-//     fn method(self);\n-// }\n-\n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeModeSelfOwnToMut {\n-//     fn method(mut self);\n-// }\n+#[cfg(cfail1)]\n+trait TraitChangeModeSelfRefToMut {\n+    fn method(&self);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeModeSelfRefToMut {\n+    fn method(&mut self);\n+}\n+\n+\n+\n+#[cfg(cfail1)]\n+trait TraitChangeModeSelfOwnToMut {\n+    fn method(self);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeModeSelfOwnToMut {\n+    fn method(mut self);\n+}\n \n \n \n@@ -298,56 +296,53 @@ trait TraitChangeModeSelfOwnToRef {\n \n \n // Add unsafe modifier to method --------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitAddUnsafeModifier {\n-//     fn method();\n-// }\n+#[cfg(cfail1)]\n+trait TraitAddUnsafeModifier {\n+    fn method();\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitAddUnsafeModifier {\n-//     unsafe fn method();\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitAddUnsafeModifier {\n+    unsafe fn method();\n+}\n \n \n \n // Add extern modifier to method --------------------------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitAddExternModifier {\n-//     fn method();\n-// }\n+#[cfg(cfail1)]\n+trait TraitAddExternModifier {\n+    fn method();\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitAddExternModifier {\n-//     extern fn method();\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitAddExternModifier {\n+    extern fn method();\n+}\n \n \n \n // Change extern \"C\" to extern \"rust-intrinsic\" -----------------------------------\n-// FIXME: this should work but doesn't yet.\n-// #[cfg(cfail1)]\n-// trait TraitChangeExternCToRustIntrinsic {\n-//     extern \"C\" fn method();\n-// }\n+#[cfg(cfail1)]\n+trait TraitChangeExternCToRustIntrinsic {\n+    extern \"C\" fn method();\n+}\n \n-// #[cfg(not(cfail1))]\n-// #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-// #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-// #[rustc_metadata_clean(cfg=\"cfail3\")]\n-// trait TraitChangeExternCToRustIntrinsic {\n-//     extern \"rust-intrinsic\" fn method();\n-// }\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+trait TraitChangeExternCToRustIntrinsic {\n+    extern \"rust-intrinsic\" fn method();\n+}\n \n \n \n@@ -1118,4 +1113,3 @@ mod change_method_type_parameter_bound_indirectly_where {\n         fn method(a: T);\n     }\n }\n-"}]}