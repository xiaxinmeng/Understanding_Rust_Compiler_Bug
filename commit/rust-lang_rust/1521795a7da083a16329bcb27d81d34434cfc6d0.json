{"sha": "1521795a7da083a16329bcb27d81d34434cfc6d0", "node_id": "C_kwDOAAsO6NoAKDE1MjE3OTVhN2RhMDgzYTE2MzI5YmNiMjdkODFkMzQ0MzRjZmM2ZDA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-17T21:33:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-17T21:33:17Z"}, "message": "Rollup merge of #103852 - compiler-errors:rpitit-early-from-impl, r=lcnr\n\nDon't remap early-bound regions for return-position `impl Trait` in trait originating from `impl`\n\nlong title :sweat:\n\nWe don't want to remap early-bound regions that originate from the `impl`s themselves, since they have no corresponding region in the trait. Not sure if there's a better condition than checking if the EBR's def-id's parent is the impl -- maybe we should be checking if the region comes from the method or RPITIT... :shrug:\n\nr? types\n\nFixes #103850", "tree": {"sha": "f344f6af8e0dc9ea0489d055fed887e533eb3881", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f344f6af8e0dc9ea0489d055fed887e533eb3881"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1521795a7da083a16329bcb27d81d34434cfc6d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjdqidCRBK7hj4Ov3rIwAAy84IAB9J6OCASk+/b1kOOOzeYNt8\n2T0lQm8QXyD7N/pzHPTms1XWFWFj3Ev59wh8QCfwRR+j1rMmrJ7Gx1+VYnOEBCHF\nPgrzACu0Fy6tpUoaYqrMocc/b7NawlMr+nJJTgZsrOEQKvBs/zBAgInSjdWdZPB0\nJadFdQlaPn+oZ9j1Ikf4sc0LQfENFUAwZOH9mfd2i/+YRPAT+GMAaFT8bSe61Eaw\nFTjq4iBQ7KFnWPmPjbGP6Ez7oQ6YuhNq0DW8ZgUJyUptdv68ZEvTo9P/rC5nRJ1C\n5AcD4vsblI/09M41Idu7Lerw2dJM/4ti1xV7r+YAT7uf1HEmJzizF6rdu5YfUac=\n=hAsX\n-----END PGP SIGNATURE-----\n", "payload": "tree f344f6af8e0dc9ea0489d055fed887e533eb3881\nparent 83356b78c4ff3e7d84e977aa6143793545967301\nparent 72fbb54c5d8cb7e333d14e28d0e683a4363a5ab2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668720797 +0100\ncommitter GitHub <noreply@github.com> 1668720797 +0100\n\nRollup merge of #103852 - compiler-errors:rpitit-early-from-impl, r=lcnr\n\nDon't remap early-bound regions for return-position `impl Trait` in trait originating from `impl`\n\nlong title :sweat:\n\nWe don't want to remap early-bound regions that originate from the `impl`s themselves, since they have no corresponding region in the trait. Not sure if there's a better condition than checking if the EBR's def-id's parent is the impl -- maybe we should be checking if the region comes from the method or RPITIT... :shrug:\n\nr? types\n\nFixes #103850\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1521795a7da083a16329bcb27d81d34434cfc6d0", "html_url": "https://github.com/rust-lang/rust/commit/1521795a7da083a16329bcb27d81d34434cfc6d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1521795a7da083a16329bcb27d81d34434cfc6d0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83356b78c4ff3e7d84e977aa6143793545967301", "url": "https://api.github.com/repos/rust-lang/rust/commits/83356b78c4ff3e7d84e977aa6143793545967301", "html_url": "https://github.com/rust-lang/rust/commit/83356b78c4ff3e7d84e977aa6143793545967301"}, {"sha": "72fbb54c5d8cb7e333d14e28d0e683a4363a5ab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/72fbb54c5d8cb7e333d14e28d0e683a4363a5ab2", "html_url": "https://github.com/rust-lang/rust/commit/72fbb54c5d8cb7e333d14e28d0e683a4363a5ab2"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "d25307be1b6d663f5dfff433e8699c98bc442d02", "filename": "compiler/rustc_hir_analysis/src/check/compare_method.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1521795a7da083a16329bcb27d81d34434cfc6d0/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1521795a7da083a16329bcb27d81d34434cfc6d0/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=1521795a7da083a16329bcb27d81d34434cfc6d0", "patch": "@@ -521,7 +521,13 @@ pub fn collect_trait_impl_trait_tys<'tcx>(\n                 let num_trait_substs = trait_to_impl_substs.len();\n                 let num_impl_substs = tcx.generics_of(impl_m.container_id(tcx)).params.len();\n                 let ty = tcx.fold_regions(ty, |region, _| {\n-                    let (ty::ReFree(_) | ty::ReEarlyBound(_)) = region.kind() else { return region; };\n+                    match region.kind() {\n+                        // Remap all free regions, which correspond to late-bound regions in the function.\n+                        ty::ReFree(_) => {}\n+                        // Remap early-bound regions as long as they don't come from the `impl` itself.\n+                        ty::ReEarlyBound(ebr) if tcx.parent(ebr.def_id) != impl_m.container_id(tcx) => {}\n+                        _ => return region,\n+                    }\n                     let Some(ty::ReEarlyBound(e)) = map.get(&region.into()).map(|r| r.expect_region().kind())\n                     else {\n                         tcx"}, {"sha": "6b3b142014bd37933668e357733538584d9a4940", "filename": "src/test/ui/async-await/in-trait/early-bound-1.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1521795a7da083a16329bcb27d81d34434cfc6d0/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fearly-bound-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1521795a7da083a16329bcb27d81d34434cfc6d0/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fearly-bound-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fearly-bound-1.rs?ref=1521795a7da083a16329bcb27d81d34434cfc6d0", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+// edition:2021\n+\n+#![feature(async_fn_in_trait)]\n+#![allow(incomplete_features)]\n+\n+pub trait Foo {\n+    async fn foo(&mut self);\n+}\n+\n+struct MyFoo<'a>(&'a mut ());\n+\n+impl<'a> Foo for MyFoo<'a> {\n+    async fn foo(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "270443229b05416db70cb8c38f37cd7cd0d2f8f2", "filename": "src/test/ui/async-await/in-trait/early-bound-2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1521795a7da083a16329bcb27d81d34434cfc6d0/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fearly-bound-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1521795a7da083a16329bcb27d81d34434cfc6d0/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fearly-bound-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fearly-bound-2.rs?ref=1521795a7da083a16329bcb27d81d34434cfc6d0", "patch": "@@ -0,0 +1,15 @@\n+// check-pass\n+// edition:2021\n+\n+#![feature(async_fn_in_trait)]\n+#![allow(incomplete_features)]\n+\n+pub trait Foo {\n+    async fn foo(&mut self);\n+}\n+\n+impl<T: Foo> Foo for &mut T {\n+    async fn foo(&mut self) {}\n+}\n+\n+fn main() {}"}]}