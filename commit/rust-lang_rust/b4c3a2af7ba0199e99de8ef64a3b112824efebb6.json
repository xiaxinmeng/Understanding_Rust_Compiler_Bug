{"sha": "b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "node_id": "C_kwDOAAsO6NoAKGI0YzNhMmFmN2JhMDE5OWU5OWRlOGVmNjRhM2IxMTI4MjRlZmViYjY", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-07-12T13:02:17Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-07-12T13:02:17Z"}, "message": "ignore wasm=32 & bless", "tree": {"sha": "9bcd20f5251634ab7ce7354fa34952ddc251341f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bcd20f5251634ab7ce7354fa34952ddc251341f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "html_url": "https://github.com/rust-lang/rust/commit/b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb0017f2f8b95b23b298cc8cc3d4925a262627ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0017f2f8b95b23b298cc8cc3d4925a262627ae", "html_url": "https://github.com/rust-lang/rust/commit/cb0017f2f8b95b23b298cc8cc3d4925a262627ae"}], "stats": {"total": 263, "additions": 133, "deletions": 130}, "files": [{"sha": "9affe5a50061dd0a8d1c8526e67dbfc5289dafd1", "filename": "src/test/mir-opt/derefer_complex_case.main.Derefer.diff", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff?ref=b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "patch": "@@ -2,110 +2,110 @@\n + // MIR for `main` after Derefer\n   \n   fn main() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/derefer_complex_case.rs:3:11: 3:11\n-      let mut _1: std::slice::Iter<i32>;   // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-      let mut _2: &[i32; 2];               // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-      let _3: [i32; 2];                    // in scope 0 at $DIR/derefer_complex_case.rs:4:18: 4:26\n-      let mut _4: std::slice::Iter<i32>;   // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-      let mut _5: ();                      // in scope 0 at $DIR/derefer_complex_case.rs:3:1: 5:2\n-      let _6: ();                          // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-      let mut _7: std::option::Option<&i32>; // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-      let mut _8: &mut std::slice::Iter<i32>; // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-      let mut _9: &mut std::slice::Iter<i32>; // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-      let mut _10: isize;                  // in scope 0 at $DIR/derefer_complex_case.rs:4:5: 4:40\n-      let mut _11: !;                      // in scope 0 at $DIR/derefer_complex_case.rs:4:5: 4:40\n-      let mut _13: i32;                    // in scope 0 at $DIR/derefer_complex_case.rs:4:34: 4:37\n-      let mut _14: &[i32; 2];              // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-+     let mut _15: &i32;                   // in scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+      let mut _0: ();                      // return place in scope 0 at $DIR/derefer_complex_case.rs:4:11: 4:11\n+      let mut _1: std::slice::Iter<i32>;   // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+      let mut _2: &[i32; 2];               // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+      let _3: [i32; 2];                    // in scope 0 at $DIR/derefer_complex_case.rs:5:18: 5:26\n+      let mut _4: std::slice::Iter<i32>;   // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+      let mut _5: ();                      // in scope 0 at $DIR/derefer_complex_case.rs:4:1: 6:2\n+      let _6: ();                          // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+      let mut _7: std::option::Option<&i32>; // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+      let mut _8: &mut std::slice::Iter<i32>; // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+      let mut _9: &mut std::slice::Iter<i32>; // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+      let mut _10: isize;                  // in scope 0 at $DIR/derefer_complex_case.rs:5:5: 5:40\n+      let mut _11: !;                      // in scope 0 at $DIR/derefer_complex_case.rs:5:5: 5:40\n+      let mut _13: i32;                    // in scope 0 at $DIR/derefer_complex_case.rs:5:34: 5:37\n+      let mut _14: &[i32; 2];              // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n++     let mut _15: &i32;                   // in scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n       scope 1 {\n-          debug iter => _4;                // in scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          let _12: i32;                    // in scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n+          debug iter => _4;                // in scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          let _12: i32;                    // in scope 1 at $DIR/derefer_complex_case.rs:5:10: 5:13\n           scope 2 {\n-              debug foo => _12;            // in scope 2 at $DIR/derefer_complex_case.rs:4:10: 4:13\n+              debug foo => _12;            // in scope 2 at $DIR/derefer_complex_case.rs:5:10: 5:13\n           }\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          StorageLive(_2);                 // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          _14 = const main::promoted[0];   // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          StorageLive(_1);                 // scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          StorageLive(_2);                 // scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          _14 = const main::promoted[0];   // scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n                                            // mir::Constant\n-                                           // + span: $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // + span: $DIR/derefer_complex_case.rs:5:17: 5:26\n                                            // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[0])) }\n-          _2 = &(*_14);                    // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          _1 = <&[i32; 2] as IntoIterator>::into_iter(move _2) -> bb1; // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          _2 = &(*_14);                    // scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          _1 = <&[i32; 2] as IntoIterator>::into_iter(move _2) -> bb1; // scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n                                            // mir::Constant\n-                                           // + span: $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // + span: $DIR/derefer_complex_case.rs:5:17: 5:26\n                                            // + literal: Const { ty: fn(&[i32; 2]) -> <&[i32; 2] as IntoIterator>::IntoIter {<&[i32; 2] as IntoIterator>::into_iter}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageDead(_2);                 // scope 0 at $DIR/derefer_complex_case.rs:4:25: 4:26\n-          StorageLive(_4);                 // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          _4 = move _1;                    // scope 0 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          goto -> bb2;                     // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n+          StorageDead(_2);                 // scope 0 at $DIR/derefer_complex_case.rs:5:25: 5:26\n+          StorageLive(_4);                 // scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          _4 = move _1;                    // scope 0 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          goto -> bb2;                     // scope 1 at $DIR/derefer_complex_case.rs:5:5: 5:40\n       }\n   \n       bb2: {\n-          StorageLive(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          StorageLive(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          StorageLive(_8);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          StorageLive(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          _9 = &mut _4;                    // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          _8 = &mut (*_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          _7 = <std::slice::Iter<i32> as Iterator>::next(move _8) -> bb3; // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          StorageLive(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          StorageLive(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          StorageLive(_8);                 // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          StorageLive(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          _9 = &mut _4;                    // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          _8 = &mut (*_9);                 // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          _7 = <std::slice::Iter<i32> as Iterator>::next(move _8) -> bb3; // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n                                            // mir::Constant\n-                                           // + span: $DIR/derefer_complex_case.rs:4:17: 4:26\n+                                           // + span: $DIR/derefer_complex_case.rs:5:17: 5:26\n                                            // + literal: Const { ty: for<'r> fn(&'r mut std::slice::Iter<i32>) -> Option<<std::slice::Iter<i32> as Iterator>::Item> {<std::slice::Iter<i32> as Iterator>::next}, val: Value(<ZST>) }\n       }\n   \n       bb3: {\n-          StorageDead(_8);                 // scope 1 at $DIR/derefer_complex_case.rs:4:25: 4:26\n-          _10 = discriminant(_7);          // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n-          switchInt(move _10) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          StorageDead(_8);                 // scope 1 at $DIR/derefer_complex_case.rs:5:25: 5:26\n+          _10 = discriminant(_7);          // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n+          switchInt(move _10) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n       }\n   \n       bb4: {\n-          StorageLive(_12);                // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n--         _12 = (*((_7 as Some).0: &i32)); // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n-+         StorageLive(_15);                // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n-+         _15 = deref_copy ((_7 as Some).0: &i32); // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n-+         _12 = (*_15);                    // scope 1 at $DIR/derefer_complex_case.rs:4:10: 4:13\n-+         StorageDead(_15);                // scope 2 at $DIR/derefer_complex_case.rs:4:34: 4:37\n-          StorageLive(_13);                // scope 2 at $DIR/derefer_complex_case.rs:4:34: 4:37\n-          _13 = _12;                       // scope 2 at $DIR/derefer_complex_case.rs:4:34: 4:37\n-          _6 = std::mem::drop::<i32>(move _13) -> bb7; // scope 2 at $DIR/derefer_complex_case.rs:4:29: 4:38\n+          StorageLive(_12);                // scope 1 at $DIR/derefer_complex_case.rs:5:10: 5:13\n+-         _12 = (*((_7 as Some).0: &i32)); // scope 1 at $DIR/derefer_complex_case.rs:5:10: 5:13\n++         StorageLive(_15);                // scope 1 at $DIR/derefer_complex_case.rs:5:10: 5:13\n++         _15 = deref_copy ((_7 as Some).0: &i32); // scope 1 at $DIR/derefer_complex_case.rs:5:10: 5:13\n++         _12 = (*_15);                    // scope 1 at $DIR/derefer_complex_case.rs:5:10: 5:13\n++         StorageDead(_15);                // scope 2 at $DIR/derefer_complex_case.rs:5:34: 5:37\n+          StorageLive(_13);                // scope 2 at $DIR/derefer_complex_case.rs:5:34: 5:37\n+          _13 = _12;                       // scope 2 at $DIR/derefer_complex_case.rs:5:34: 5:37\n+          _6 = std::mem::drop::<i32>(move _13) -> bb7; // scope 2 at $DIR/derefer_complex_case.rs:5:29: 5:38\n                                            // mir::Constant\n-                                           // + span: $DIR/derefer_complex_case.rs:4:29: 4:33\n+                                           // + span: $DIR/derefer_complex_case.rs:5:29: 5:33\n                                            // + literal: Const { ty: fn(i32) {std::mem::drop::<i32>}, val: Value(<ZST>) }\n       }\n   \n       bb5: {\n-          unreachable;                     // scope 1 at $DIR/derefer_complex_case.rs:4:17: 4:26\n+          unreachable;                     // scope 1 at $DIR/derefer_complex_case.rs:5:17: 5:26\n       }\n   \n       bb6: {\n-          _0 = const ();                   // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n-          StorageDead(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          StorageDead(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          StorageDead(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          StorageDead(_4);                 // scope 0 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          StorageDead(_1);                 // scope 0 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          return;                          // scope 0 at $DIR/derefer_complex_case.rs:5:2: 5:2\n+          _0 = const ();                   // scope 1 at $DIR/derefer_complex_case.rs:5:5: 5:40\n+          StorageDead(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          StorageDead(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          StorageDead(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          StorageDead(_4);                 // scope 0 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          StorageDead(_1);                 // scope 0 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          return;                          // scope 0 at $DIR/derefer_complex_case.rs:6:2: 6:2\n       }\n   \n       bb7: {\n-          StorageDead(_13);                // scope 2 at $DIR/derefer_complex_case.rs:4:37: 4:38\n-          StorageDead(_12);                // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          StorageDead(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          StorageDead(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          StorageDead(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:4:39: 4:40\n-          _5 = const ();                   // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n-          goto -> bb2;                     // scope 1 at $DIR/derefer_complex_case.rs:4:5: 4:40\n+          StorageDead(_13);                // scope 2 at $DIR/derefer_complex_case.rs:5:37: 5:38\n+          StorageDead(_12);                // scope 1 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          StorageDead(_9);                 // scope 1 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          StorageDead(_7);                 // scope 1 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          StorageDead(_6);                 // scope 1 at $DIR/derefer_complex_case.rs:5:39: 5:40\n+          _5 = const ();                   // scope 1 at $DIR/derefer_complex_case.rs:5:5: 5:40\n+          goto -> bb2;                     // scope 1 at $DIR/derefer_complex_case.rs:5:5: 5:40\n +     }\n + \n +     bb8 (cleanup): {\n-+         resume;                          // scope 0 at $DIR/derefer_complex_case.rs:3:1: 5:2\n++         resume;                          // scope 0 at $DIR/derefer_complex_case.rs:4:1: 6:2\n       }\n   }\n   "}, {"sha": "48bec39074c899f0367bb221c9edc33aba52c86d", "filename": "src/test/mir-opt/derefer_complex_case.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.rs?ref=b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "patch": "@@ -1,4 +1,5 @@\n // EMIT_MIR derefer_complex_case.main.Derefer.diff\n+// ignore-wasm32\n \n fn main() {\n     for &foo in &[42, 43] { drop(foo) }"}, {"sha": "003803fbd5ca94304d98fd9a740bfbd2cf311684", "filename": "src/test/mir-opt/derefer_terminator_test.main.Derefer.diff", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff?ref=b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "patch": "@@ -2,102 +2,102 @@\n + // MIR for `main` after Derefer\n   \n   fn main() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/derefer_terminator_test.rs:2:11: 2:11\n-      let _1: bool;                        // in scope 0 at $DIR/derefer_terminator_test.rs:3:9: 3:10\n-      let _3: ();                          // in scope 0 at $DIR/derefer_terminator_test.rs:5:5: 8:6\n-      let mut _4: &&&&bool;                // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n-      let _5: &&&bool;                     // in scope 0 at $DIR/derefer_terminator_test.rs:5:17: 5:21\n-      let _6: &&bool;                      // in scope 0 at $DIR/derefer_terminator_test.rs:5:18: 5:21\n-      let _7: &bool;                       // in scope 0 at $DIR/derefer_terminator_test.rs:5:19: 5:21\n-+     let mut _10: &&&bool;                // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n-+     let mut _11: &&bool;                 // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n-+     let mut _12: &bool;                  // in scope 0 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n+      let mut _0: ();                      // return place in scope 0 at $DIR/derefer_terminator_test.rs:4:11: 4:11\n+      let _1: bool;                        // in scope 0 at $DIR/derefer_terminator_test.rs:5:9: 5:10\n+      let _3: ();                          // in scope 0 at $DIR/derefer_terminator_test.rs:7:5: 10:6\n+      let mut _4: &&&&bool;                // in scope 0 at $DIR/derefer_terminator_test.rs:7:15: 7:22\n+      let _5: &&&bool;                     // in scope 0 at $DIR/derefer_terminator_test.rs:7:17: 7:21\n+      let _6: &&bool;                      // in scope 0 at $DIR/derefer_terminator_test.rs:7:18: 7:21\n+      let _7: &bool;                       // in scope 0 at $DIR/derefer_terminator_test.rs:7:19: 7:21\n++     let mut _10: &&&bool;                // in scope 0 at $DIR/derefer_terminator_test.rs:7:15: 7:22\n++     let mut _11: &&bool;                 // in scope 0 at $DIR/derefer_terminator_test.rs:7:15: 7:22\n++     let mut _12: &bool;                  // in scope 0 at $DIR/derefer_terminator_test.rs:7:15: 7:22\n       scope 1 {\n-          debug b => _1;                   // in scope 1 at $DIR/derefer_terminator_test.rs:3:9: 3:10\n-          let _2: bool;                    // in scope 1 at $DIR/derefer_terminator_test.rs:4:9: 4:10\n+          debug b => _1;                   // in scope 1 at $DIR/derefer_terminator_test.rs:5:9: 5:10\n+          let _2: bool;                    // in scope 1 at $DIR/derefer_terminator_test.rs:6:9: 6:10\n           scope 2 {\n-              debug d => _2;               // in scope 2 at $DIR/derefer_terminator_test.rs:4:9: 4:10\n-              let _8: i32;                 // in scope 2 at $DIR/derefer_terminator_test.rs:6:22: 6:23\n-              let _9: i32;                 // in scope 2 at $DIR/derefer_terminator_test.rs:9:9: 9:10\n+              debug d => _2;               // in scope 2 at $DIR/derefer_terminator_test.rs:6:9: 6:10\n+              let _8: i32;                 // in scope 2 at $DIR/derefer_terminator_test.rs:8:22: 8:23\n+              let _9: i32;                 // in scope 2 at $DIR/derefer_terminator_test.rs:11:9: 11:10\n               scope 3 {\n-                  debug x => _8;           // in scope 3 at $DIR/derefer_terminator_test.rs:6:22: 6:23\n+                  debug x => _8;           // in scope 3 at $DIR/derefer_terminator_test.rs:8:22: 8:23\n               }\n               scope 4 {\n-                  debug y => _9;           // in scope 4 at $DIR/derefer_terminator_test.rs:9:9: 9:10\n+                  debug y => _9;           // in scope 4 at $DIR/derefer_terminator_test.rs:11:9: 11:10\n               }\n           }\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/derefer_terminator_test.rs:3:9: 3:10\n-          _1 = foo() -> bb1;               // scope 0 at $DIR/derefer_terminator_test.rs:3:13: 3:18\n+          StorageLive(_1);                 // scope 0 at $DIR/derefer_terminator_test.rs:5:9: 5:10\n+          _1 = foo() -> bb1;               // scope 0 at $DIR/derefer_terminator_test.rs:5:13: 5:18\n                                            // mir::Constant\n-                                           // + span: $DIR/derefer_terminator_test.rs:3:13: 3:16\n+                                           // + span: $DIR/derefer_terminator_test.rs:5:13: 5:16\n                                            // + literal: Const { ty: fn() -> bool {foo}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          StorageLive(_2);                 // scope 1 at $DIR/derefer_terminator_test.rs:4:9: 4:10\n-          _2 = foo() -> bb2;               // scope 1 at $DIR/derefer_terminator_test.rs:4:13: 4:18\n+          StorageLive(_2);                 // scope 1 at $DIR/derefer_terminator_test.rs:6:9: 6:10\n+          _2 = foo() -> bb2;               // scope 1 at $DIR/derefer_terminator_test.rs:6:13: 6:18\n                                            // mir::Constant\n-                                           // + span: $DIR/derefer_terminator_test.rs:4:13: 4:16\n+                                           // + span: $DIR/derefer_terminator_test.rs:6:13: 6:16\n                                            // + literal: Const { ty: fn() -> bool {foo}, val: Value(<ZST>) }\n       }\n   \n       bb2: {\n-          StorageLive(_3);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 8:6\n-          StorageLive(_4);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n-          StorageLive(_5);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:17: 5:21\n-          StorageLive(_6);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:18: 5:21\n-          StorageLive(_7);                 // scope 2 at $DIR/derefer_terminator_test.rs:5:19: 5:21\n-          _7 = &_1;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:19: 5:21\n-          _6 = &_7;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:18: 5:21\n-          _5 = &_6;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:17: 5:21\n-          _4 = &_5;                        // scope 2 at $DIR/derefer_terminator_test.rs:5:15: 5:22\n--         switchInt((*(*(*(*_4))))) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         StorageLive(_10);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         _10 = deref_copy (*_4);          // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         StorageLive(_11);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         _11 = deref_copy (*_10);         // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         StorageDead(_10);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         StorageLive(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         _12 = deref_copy (*_11);         // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         StorageDead(_11);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-+         switchInt((*_12)) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n+          StorageLive(_3);                 // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 10:6\n+          StorageLive(_4);                 // scope 2 at $DIR/derefer_terminator_test.rs:7:15: 7:22\n+          StorageLive(_5);                 // scope 2 at $DIR/derefer_terminator_test.rs:7:17: 7:21\n+          StorageLive(_6);                 // scope 2 at $DIR/derefer_terminator_test.rs:7:18: 7:21\n+          StorageLive(_7);                 // scope 2 at $DIR/derefer_terminator_test.rs:7:19: 7:21\n+          _7 = &_1;                        // scope 2 at $DIR/derefer_terminator_test.rs:7:19: 7:21\n+          _6 = &_7;                        // scope 2 at $DIR/derefer_terminator_test.rs:7:18: 7:21\n+          _5 = &_6;                        // scope 2 at $DIR/derefer_terminator_test.rs:7:17: 7:21\n+          _4 = &_5;                        // scope 2 at $DIR/derefer_terminator_test.rs:7:15: 7:22\n+-         switchInt((*(*(*(*_4))))) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         StorageLive(_10);                // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         _10 = deref_copy (*_4);          // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         StorageLive(_11);                // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         _11 = deref_copy (*_10);         // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         StorageDead(_10);                // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         StorageLive(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         _12 = deref_copy (*_11);         // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         StorageDead(_11);                // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n++         switchInt((*_12)) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n       }\n   \n       bb3: {\n-+         StorageDead(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-          _3 = const ();                   // scope 2 at $DIR/derefer_terminator_test.rs:7:18: 7:20\n-          goto -> bb5;                     // scope 2 at $DIR/derefer_terminator_test.rs:7:18: 7:20\n++         StorageDead(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n+          _3 = const ();                   // scope 2 at $DIR/derefer_terminator_test.rs:9:18: 9:20\n+          goto -> bb5;                     // scope 2 at $DIR/derefer_terminator_test.rs:9:18: 9:20\n       }\n   \n       bb4: {\n-+         StorageDead(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:5:5: 5:22\n-          StorageLive(_8);                 // scope 2 at $DIR/derefer_terminator_test.rs:6:22: 6:23\n-          _8 = const 5_i32;                // scope 2 at $DIR/derefer_terminator_test.rs:6:26: 6:27\n-          _3 = const ();                   // scope 2 at $DIR/derefer_terminator_test.rs:6:17: 6:29\n-          StorageDead(_8);                 // scope 2 at $DIR/derefer_terminator_test.rs:6:28: 6:29\n-          goto -> bb5;                     // scope 2 at $DIR/derefer_terminator_test.rs:6:28: 6:29\n++         StorageDead(_12);                // scope 2 at $DIR/derefer_terminator_test.rs:7:5: 7:22\n+          StorageLive(_8);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:22: 8:23\n+          _8 = const 5_i32;                // scope 2 at $DIR/derefer_terminator_test.rs:8:26: 8:27\n+          _3 = const ();                   // scope 2 at $DIR/derefer_terminator_test.rs:8:17: 8:29\n+          StorageDead(_8);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:28: 8:29\n+          goto -> bb5;                     // scope 2 at $DIR/derefer_terminator_test.rs:8:28: 8:29\n       }\n   \n       bb5: {\n-          StorageDead(_7);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n-          StorageDead(_6);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n-          StorageDead(_5);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n-          StorageDead(_4);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n-          StorageDead(_3);                 // scope 2 at $DIR/derefer_terminator_test.rs:8:5: 8:6\n-          StorageLive(_9);                 // scope 2 at $DIR/derefer_terminator_test.rs:9:9: 9:10\n-          _9 = const 42_i32;               // scope 2 at $DIR/derefer_terminator_test.rs:9:13: 9:15\n-          _0 = const ();                   // scope 0 at $DIR/derefer_terminator_test.rs:2:11: 10:2\n-          StorageDead(_9);                 // scope 2 at $DIR/derefer_terminator_test.rs:10:1: 10:2\n-          StorageDead(_2);                 // scope 1 at $DIR/derefer_terminator_test.rs:10:1: 10:2\n-          StorageDead(_1);                 // scope 0 at $DIR/derefer_terminator_test.rs:10:1: 10:2\n-          return;                          // scope 0 at $DIR/derefer_terminator_test.rs:10:2: 10:2\n+          StorageDead(_7);                 // scope 2 at $DIR/derefer_terminator_test.rs:10:5: 10:6\n+          StorageDead(_6);                 // scope 2 at $DIR/derefer_terminator_test.rs:10:5: 10:6\n+          StorageDead(_5);                 // scope 2 at $DIR/derefer_terminator_test.rs:10:5: 10:6\n+          StorageDead(_4);                 // scope 2 at $DIR/derefer_terminator_test.rs:10:5: 10:6\n+          StorageDead(_3);                 // scope 2 at $DIR/derefer_terminator_test.rs:10:5: 10:6\n+          StorageLive(_9);                 // scope 2 at $DIR/derefer_terminator_test.rs:11:9: 11:10\n+          _9 = const 42_i32;               // scope 2 at $DIR/derefer_terminator_test.rs:11:13: 11:15\n+          _0 = const ();                   // scope 0 at $DIR/derefer_terminator_test.rs:4:11: 12:2\n+          StorageDead(_9);                 // scope 2 at $DIR/derefer_terminator_test.rs:12:1: 12:2\n+          StorageDead(_2);                 // scope 1 at $DIR/derefer_terminator_test.rs:12:1: 12:2\n+          StorageDead(_1);                 // scope 0 at $DIR/derefer_terminator_test.rs:12:1: 12:2\n+          return;                          // scope 0 at $DIR/derefer_terminator_test.rs:12:2: 12:2\n +     }\n + \n +     bb6 (cleanup): {\n-+         resume;                          // scope 0 at $DIR/derefer_terminator_test.rs:2:1: 10:2\n++         resume;                          // scope 0 at $DIR/derefer_terminator_test.rs:4:1: 12:2\n       }\n   }\n   "}, {"sha": "787b14ae735d5c5fa89dff6fed1f22d982204046", "filename": "src/test/mir-opt/derefer_terminator_test.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c3a2af7ba0199e99de8ef64a3b112824efebb6/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.rs?ref=b4c3a2af7ba0199e99de8ef64a3b112824efebb6", "patch": "@@ -1,4 +1,6 @@\n // EMIT_MIR derefer_terminator_test.main.Derefer.diff\n+// ignore-wasm32\n+\n fn main() {\n     let b = foo();\n     let d = foo();"}]}