{"sha": "b4217b383bbbebafbdc621f31716d5bee3cd0c72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MjE3YjM4M2JiYmViYWZiZGM2MjFmMzE3MTZkNWJlZTNjZDBjNzI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-21T09:56:00Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-21T10:01:15Z"}, "message": "Add a pass that checks that blocks are only used in safe ways\n\nCloses #1188", "tree": {"sha": "14713c2dbf711758939b4ee4db22de5db25e6e57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14713c2dbf711758939b4ee4db22de5db25e6e57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4217b383bbbebafbdc621f31716d5bee3cd0c72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4217b383bbbebafbdc621f31716d5bee3cd0c72", "html_url": "https://github.com/rust-lang/rust/commit/b4217b383bbbebafbdc621f31716d5bee3cd0c72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4217b383bbbebafbdc621f31716d5bee3cd0c72/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86c1f16a1066317fdde988c0357e21ecdb336fca", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c1f16a1066317fdde988c0357e21ecdb336fca", "html_url": "https://github.com/rust-lang/rust/commit/86c1f16a1066317fdde988c0357e21ecdb336fca"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "c976410554a6e1704217a208d28ef02a7063d1b6", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=b4217b383bbbebafbdc621f31716d5bee3cd0c72", "patch": "@@ -139,6 +139,8 @@ fn compile_input(sess: session::session, cfg: ast::crate_cfg, input: str,\n              bind freevars::annotate_freevars(def_map, crate));\n     let ty_cx = ty::mk_ctxt(sess, def_map, ext_map, ast_map, freevars);\n     time(time_passes, \"typechecking\", bind typeck::check_crate(ty_cx, crate));\n+    time(time_passes, \"block-use checking\",\n+         bind middle::block_use::check_crate(ty_cx, crate));\n     time(time_passes, \"function usage\",\n          bind fn_usage::check_crate_fn_usage(ty_cx, crate));\n     time(time_passes, \"alt checking\","}, {"sha": "78a49692e01496d20906227a0b404880e9ecd1d6", "filename": "src/comp/middle/block_use.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Fcomp%2Fmiddle%2Fblock_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Fcomp%2Fmiddle%2Fblock_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fblock_use.rs?ref=b4217b383bbbebafbdc621f31716d5bee3cd0c72", "patch": "@@ -0,0 +1,41 @@\n+import syntax::visit;\n+import syntax::ast::*;\n+\n+type ctx = {tcx: ty::ctxt, mutable allow_block: bool};\n+\n+fn check_crate(tcx: ty::ctxt, crate: @crate) {\n+    let cx = {tcx: tcx, mutable allow_block: false};\n+    let v = visit::mk_vt(@{visit_expr: visit_expr\n+                           with *visit::default_visitor()});\n+    visit::visit_crate(*crate, cx, v);\n+}\n+\n+fn visit_expr(ex: @expr, cx: ctx, v: visit::vt<ctx>) {\n+    if !cx.allow_block {\n+        alt ty::struct(cx.tcx, ty::expr_ty(cx.tcx, ex)) {\n+          ty::ty_fn(proto_block., _, _, _, _) {\n+            cx.tcx.sess.span_err(ex.span, \"expressions with block type \\\n+                can only appear in callee or (by-ref) argument position\");\n+          }\n+          _ {}\n+        }\n+    }\n+    let outer = cx.allow_block;\n+    alt ex.node {\n+      expr_call(f, args, _) {\n+        cx.allow_block = true;\n+        v.visit_expr(f, cx, v);\n+        let i = 0u;\n+        for arg_t in ty::ty_fn_args(cx.tcx, ty::expr_ty(cx.tcx, f)) {\n+            cx.allow_block = arg_t.mode == by_ref;\n+            v.visit_expr(args[i], cx, v);\n+            i += 1u;\n+        }\n+      }\n+      _ {\n+        cx.allow_block = false;\n+        visit::visit_expr(ex, cx, v);\n+      }\n+    }\n+    cx.allow_block = outer;\n+}"}, {"sha": "8f8a1414513984a78829898968a26f792048c5a8", "filename": "src/comp/rustc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Fcomp%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Fcomp%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Frustc.rc?ref=b4217b383bbbebafbdc621f31716d5bee3cd0c72", "patch": "@@ -31,6 +31,7 @@ mod middle {\n     mod mut;\n     mod alias;\n     mod last_use;\n+    mod block_use;\n     mod kind;\n     mod freevars;\n     mod shape;"}, {"sha": "313e86511d1bf372e13df1aefd8c2614dea7da09", "filename": "src/test/compile-fail/block-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Ftest%2Fcompile-fail%2Fblock-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Ftest%2Fcompile-fail%2Fblock-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-copy.rs?ref=b4217b383bbbebafbdc621f31716d5bee3cd0c72", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: copying a noncopyable value\n+// error-pattern: block type can only appear\n \n fn lol(f: block()) -> block() { ret f; }\n fn main() { let i = 8; let f = lol(block () { log_err i; }); f(); }"}, {"sha": "65367a01a7b70251810172b734f60a89b1b51951", "filename": "src/test/compile-fail/block-deinitializes-upvar.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Ftest%2Fcompile-fail%2Fblock-deinitializes-upvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4217b383bbbebafbdc621f31716d5bee3cd0c72/src%2Ftest%2Fcompile-fail%2Fblock-deinitializes-upvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-deinitializes-upvar.rs?ref=b4217b383bbbebafbdc621f31716d5bee3cd0c72", "patch": "@@ -1,11 +1,8 @@\n // error-pattern:Tried to deinitialize a variable declared in a different\n-fn force(f: block() -> int) -> int { ret f(); }\n+fn force(f: block()) { f(); }\n fn main() {\n     let x = @{x: 17, y: 2};\n     let y = @{x: 5, y: 5};\n \n-    let f = {|i| log_err i; x <- y; ret 7; };\n-    assert (f(5) == 7);\n-    log_err x;\n-    log_err y;\n+    force({|| x <- y;});\n }"}]}