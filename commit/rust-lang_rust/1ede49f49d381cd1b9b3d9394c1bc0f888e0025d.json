{"sha": "1ede49f49d381cd1b9b3d9394c1bc0f888e0025d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZGU0OWY0OWQzODFjZDFiOWIzZDkzOTRjMWJjMGY4ODhlMDAyNWQ=", "commit": {"author": {"name": "Axel Viala", "email": "axel.viala@darnuria.eu", "date": "2014-02-18T14:39:32Z"}, "committer": {"name": "Axel Viala", "email": "axel.viala@darnuria.eu", "date": "2014-02-18T14:39:32Z"}, "message": "Removing '15.3 Do syntax' in tutorial.\n\nThe 'do' keyword was deprecated in 0.10 #11868 , and is keep as\nreserved keyword #12157 .\n\nSo the tutorial part about it doesn't make sense.\nThe spawning explanation was move into '15.2 Closure compatibility'.\n\nFixing misspelling.\n\nThanks for precisions.\n\nMoved from 15.2 to 15.1.\n\nFixed typo, and apply pnkfelix advices.", "tree": {"sha": "e2b261e0148ef993b2fe70d82eed3eaa041e246d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2b261e0148ef993b2fe70d82eed3eaa041e246d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d", "html_url": "https://github.com/rust-lang/rust/commit/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d/comments", "author": {"login": "darnuria", "id": 2827553, "node_id": "MDQ6VXNlcjI4Mjc1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2827553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darnuria", "html_url": "https://github.com/darnuria", "followers_url": "https://api.github.com/users/darnuria/followers", "following_url": "https://api.github.com/users/darnuria/following{/other_user}", "gists_url": "https://api.github.com/users/darnuria/gists{/gist_id}", "starred_url": "https://api.github.com/users/darnuria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darnuria/subscriptions", "organizations_url": "https://api.github.com/users/darnuria/orgs", "repos_url": "https://api.github.com/users/darnuria/repos", "events_url": "https://api.github.com/users/darnuria/events{/privacy}", "received_events_url": "https://api.github.com/users/darnuria/received_events", "type": "User", "site_admin": false}, "committer": {"login": "darnuria", "id": 2827553, "node_id": "MDQ6VXNlcjI4Mjc1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2827553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darnuria", "html_url": "https://github.com/darnuria", "followers_url": "https://api.github.com/users/darnuria/followers", "following_url": "https://api.github.com/users/darnuria/following{/other_user}", "gists_url": "https://api.github.com/users/darnuria/gists{/gist_id}", "starred_url": "https://api.github.com/users/darnuria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darnuria/subscriptions", "organizations_url": "https://api.github.com/users/darnuria/orgs", "repos_url": "https://api.github.com/users/darnuria/repos", "events_url": "https://api.github.com/users/darnuria/events{/privacy}", "received_events_url": "https://api.github.com/users/darnuria/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0ce960609d17823a24469249b1a8b4e6ad9f448", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ce960609d17823a24469249b1a8b4e6ad9f448", "html_url": "https://github.com/rust-lang/rust/commit/b0ce960609d17823a24469249b1a8b4e6ad9f448"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "094771897f4f60aa2640387928e095e581e55d02", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 18, "deletions": 39, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=1ede49f49d381cd1b9b3d9394c1bc0f888e0025d", "patch": "@@ -1750,6 +1750,24 @@ closures, but they also own them: that is, no other code can access\n them. Owned closures are used in concurrent code, particularly\n for spawning [tasks][tasks].\n \n+Closures can be used to spawn tasks.\n+A practical example of this pattern is found when using the `spawn` function,\n+which starts a new task.\n+\n+~~~~\n+use std::task::spawn;\n+\n+// proc is the closure which will be spawned.\n+spawn(proc() {\n+    debug!(\"I'm a new task\")\n+});\n+~~~~\n+\n+> ***Note:*** If you want to see the output of `debug!` statements, you will need to turn on\n+> `debug!` logging.  To enable `debug!` logging, set the RUST_LOG environment\n+> variable to the name of your crate, which, for a file named `foo.rs`, will be\n+> `foo` (e.g., with bash, `export RUST_LOG=foo`).\n+\n ## Closure compatibility\n \n Rust closures have a convenient subtyping property: you can pass any kind of\n@@ -1771,45 +1789,6 @@ call_twice(function);\n > in small ways. At the moment they can be unsound in some\n > scenarios, particularly with non-copyable types.\n \n-## Do syntax\n-\n-The `do` expression makes it easier to call functions that take procedures\n-as arguments.\n-\n-Consider this function that takes a procedure:\n-\n-~~~~\n-fn call_it(op: proc(v: int)) {\n-    op(10)\n-}\n-~~~~\n-\n-As a caller, if we use a closure to provide the final operator\n-argument, we can write it in a way that has a pleasant, block-like\n-structure.\n-\n-~~~~\n-# fn call_it(op: proc(v: int)) { }\n-call_it(proc(n) {\n-    println!(\"{}\", n);\n-});\n-~~~~\n-\n-A practical example of this pattern is found when using the `spawn` function,\n-which starts a new task.\n-\n-~~~~\n-use std::task::spawn;\n-spawn(proc() {\n-    debug!(\"I'm a new task\")\n-});\n-~~~~\n-\n-If you want to see the output of `debug!` statements, you will need to turn on\n-`debug!` logging.  To enable `debug!` logging, set the RUST_LOG environment\n-variable to the name of your crate, which, for a file named `foo.rs`, will be\n-`foo` (e.g., with bash, `export RUST_LOG=foo`).\n-\n # Methods\n \n Methods are like functions except that they always begin with a special argument,"}]}