{"sha": "6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "node_id": "C_kwDOAAsO6NoAKDZjMmE5NTJiNTYzN2Y0Nzk1YWQxZDNlZDA4ZGZhNGY0M2VhZWNlNTE", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-03-01T14:32:46Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-03-01T16:57:11Z"}, "message": "Highlight whole expression for E0599", "tree": {"sha": "5df7a2b1064fd754bf4b318c3631948166bc6e3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5df7a2b1064fd754bf4b318c3631948166bc6e3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "html_url": "https://github.com/rust-lang/rust/commit/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64165aac68af780182ff89a6eb3982e3c262266e", "url": "https://api.github.com/repos/rust-lang/rust/commits/64165aac68af780182ff89a6eb3982e3c262266e", "html_url": "https://github.com/rust-lang/rust/commit/64165aac68af780182ff89a6eb3982e3c262266e"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "60d56263d2e38bb69590618d2d926beb96311b58", "filename": "compiler/rustc_hir_typeck/src/method/suggest.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs?ref=6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "patch": "@@ -333,6 +333,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             rcvr_ty.prefix_string(self.tcx),\n             ty_str_reported,\n         );\n+        if tcx.sess.source_map().is_multiline(sugg_span) {\n+            err.span_label(sugg_span.with_hi(span.lo()), \"\");\n+        }\n         let ty_str = if short_ty_str.len() < ty_str.len() && ty_str.len() > 10 {\n             short_ty_str\n         } else {"}, {"sha": "41c23ff86b25efc5f5582e58fca4aa90dd4f4d9e", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "patch": "@@ -1432,12 +1432,13 @@ impl<'test> TestCx<'test> {\n         expect_help: bool,\n         expect_note: bool,\n     ) -> bool {\n-        match actual_error.kind {\n-            Some(ErrorKind::Help) => expect_help,\n-            Some(ErrorKind::Note) => expect_note,\n-            Some(ErrorKind::Error) | Some(ErrorKind::Warning) => true,\n-            Some(ErrorKind::Suggestion) | None => false,\n-        }\n+        !actual_error.msg.is_empty()\n+            && match actual_error.kind {\n+                Some(ErrorKind::Help) => expect_help,\n+                Some(ErrorKind::Note) => expect_note,\n+                Some(ErrorKind::Error) | Some(ErrorKind::Warning) => true,\n+                Some(ErrorKind::Suggestion) | None => false,\n+            }\n     }\n \n     fn should_emit_metadata(&self, pm: Option<PassMode>) -> Emit {"}, {"sha": "bd51378cf1a5079f8e24ad41cf70edb7ef9a7b1b", "filename": "tests/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "patch": "@@ -48,14 +48,17 @@ LL |      .two(0, /* isize */);\n error[E0599]: `Foo` is not an iterator\n   --> $DIR/method-call-err-msg.rs:19:7\n    |\n-LL | pub struct Foo;\n-   | --------------\n-   | |\n-   | method `take` not found for this struct\n-   | doesn't satisfy `Foo: Iterator`\n+LL |   pub struct Foo;\n+   |   --------------\n+   |   |\n+   |   method `take` not found for this struct\n+   |   doesn't satisfy `Foo: Iterator`\n ...\n-LL |      .take()\n-   |       ^^^^ `Foo` is not an iterator\n+LL | /     y.zero()\n+LL | |      .take()\n+   | |      -^^^^ `Foo` is not an iterator\n+   | |______|\n+   | \n    |\n    = note: the following trait bounds were not satisfied:\n            `Foo: Iterator`"}, {"sha": "b622122f33ea7cf6642ad2c8d18f86013edef0ed", "filename": "tests/ui/typeck/issue-31173.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/tests%2Fui%2Ftypeck%2Fissue-31173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c2a952b5637f4795ad1d3ed08dfa4f43eaece51/tests%2Fui%2Ftypeck%2Fissue-31173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-31173.stderr?ref=6c2a952b5637f4795ad1d3ed08dfa4f43eaece51", "patch": "@@ -24,8 +24,17 @@ note: required by a bound in `cloned`\n error[E0599]: the method `collect` exists for struct `Cloned<TakeWhile<&mut IntoIter<u8>, [closure@issue-31173.rs:7:21]>>`, but its trait bounds were not satisfied\n   --> $DIR/issue-31173.rs:12:10\n    |\n-LL |         .collect();\n-   |          ^^^^^^^ method cannot be called due to unsatisfied trait bounds\n+LL |       let temp: Vec<u8> = it\n+   |  _________________________-\n+LL | |         .take_while(|&x| {\n+LL | |             found_e = true;\n+LL | |             false\n+LL | |         })\n+LL | |         .cloned()\n+LL | |         .collect();\n+   | |         -^^^^^^^ method cannot be called due to unsatisfied trait bounds\n+   | |_________|\n+   | \n   --> $SRC_DIR/core/src/iter/adapters/take_while.rs:LL:COL\n    |\n    = note: doesn't satisfy `<_ as Iterator>::Item = &_`"}]}