{"sha": "ea281962149cd188edf384cb120852369b669c50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMjgxOTYyMTQ5Y2QxODhlZGYzODRjYjEyMDg1MjM2OWI2NjljNTA=", "commit": {"author": {"name": "GAJaloyan", "email": "georges-axel.jaloyan@ens.fr", "date": "2017-03-30T15:02:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-30T15:02:51Z"}, "message": "removing trailing whitespaces", "tree": {"sha": "d90c62b658148f4f8b7f1e9cb982025fffce90d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d90c62b658148f4f8b7f1e9cb982025fffce90d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea281962149cd188edf384cb120852369b669c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea281962149cd188edf384cb120852369b669c50", "html_url": "https://github.com/rust-lang/rust/commit/ea281962149cd188edf384cb120852369b669c50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea281962149cd188edf384cb120852369b669c50/comments", "author": {"login": "GAJaloyan", "id": 4281998, "node_id": "MDQ6VXNlcjQyODE5OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4281998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GAJaloyan", "html_url": "https://github.com/GAJaloyan", "followers_url": "https://api.github.com/users/GAJaloyan/followers", "following_url": "https://api.github.com/users/GAJaloyan/following{/other_user}", "gists_url": "https://api.github.com/users/GAJaloyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/GAJaloyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GAJaloyan/subscriptions", "organizations_url": "https://api.github.com/users/GAJaloyan/orgs", "repos_url": "https://api.github.com/users/GAJaloyan/repos", "events_url": "https://api.github.com/users/GAJaloyan/events{/privacy}", "received_events_url": "https://api.github.com/users/GAJaloyan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f82705403f133bbff8d8ab72f34a3a3e522c7c98", "url": "https://api.github.com/repos/rust-lang/rust/commits/f82705403f133bbff8d8ab72f34a3a3e522c7c98", "html_url": "https://github.com/rust-lang/rust/commit/f82705403f133bbff8d8ab72f34a3a3e522c7c98"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dc40d0bc649d723a01fde192712915b810b5868a", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea281962149cd188edf384cb120852369b669c50/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea281962149cd188edf384cb120852369b669c50/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=ea281962149cd188edf384cb120852369b669c50", "patch": "@@ -289,7 +289,7 @@ impl<'a, 'gcx, 'tcx> ExprUseVisitor<'a, 'gcx, 'tcx> {\n \n     pub fn consume_body(&mut self, body: &hir::Body) {\n         debug!(\"consume_body(body={:?})\", body);\n-        \n+\n         for arg in &body.arguments {\n             let arg_ty = return_if_err!(self.mc.infcx.node_ty(arg.pat.id));\n "}]}