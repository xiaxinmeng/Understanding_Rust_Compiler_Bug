{"sha": "7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNDdiMWU1ZjQ5MjBjNWExNWE5YmMxYzc0NGYwODg2NDZiMDMxYTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-26T10:58:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-26T10:58:24Z"}, "message": "Rollup merge of #77161 - est31:swich_len_already_trusted, r=petrochenkov\n\nRemove TrustedLen requirement from BuilderMethods::switch\n\nThe main use case of TrustedLen is allowing APIs to specialize on it,\nbut no use of it uses that specialization. Instead, only the .len()\nfunction provided by ExactSizeIterator is used, which is already\nrequired to be accurate.\n\nThus, the TrustedLen requirement on BuilderMethods::switch is redundant.", "tree": {"sha": "f6d9b9425b0aaf7e496473123cccfae8618af118", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6d9b9425b0aaf7e496473123cccfae8618af118"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbx7QCRBK7hj4Ov3rIwAAdHIIAEBVTXqNY2M0sg0LLYA2zcK9\n8XRSEJ5bKcw/k3glnbQSLpi/mvngG+lalXOcR5pnzY1UXpDBCyB9zt6RIIMucXzP\nvr/ZS9BA6WlgGjYqnNUJGIEs7fJ7cGmIOVIdIGDdlYL8IeOChNBouY6+pQZHXjDR\nrUXV5gvDiOaglzdqNjQJQ1cCh9n0haLT6KK2dV9/4LbJwbBLnu24TJizMkpM/Aqq\n4b4brd9oMUeH7QeVTaFmkjgkeMga18IjfOu+nwH/zUFQ5XirRmJVdnlVBMWPAiBK\nPLrUWXtp9w+L9uK0NSddzluaEm31QAeY1U6jOOy1Jlp5lN7eTw3YvU5Dcg/5ad4=\n=Rc9c\n-----END PGP SIGNATURE-----\n", "payload": "tree f6d9b9425b0aaf7e496473123cccfae8618af118\nparent 7ff5b44a58357e11d15dc0ce34972f93c1bc6e57\nparent 12ada5cf4bebabd7dc240a3a993eaebbdf2ed3d3\nauthor Ralf Jung <post@ralfj.de> 1601117904 +0200\ncommitter GitHub <noreply@github.com> 1601117904 +0200\n\nRollup merge of #77161 - est31:swich_len_already_trusted, r=petrochenkov\n\nRemove TrustedLen requirement from BuilderMethods::switch\n\nThe main use case of TrustedLen is allowing APIs to specialize on it,\nbut no use of it uses that specialization. Instead, only the .len()\nfunction provided by ExactSizeIterator is used, which is already\nrequired to be accurate.\n\nThus, the TrustedLen requirement on BuilderMethods::switch is redundant.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "html_url": "https://github.com/rust-lang/rust/commit/7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ff5b44a58357e11d15dc0ce34972f93c1bc6e57", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff5b44a58357e11d15dc0ce34972f93c1bc6e57", "html_url": "https://github.com/rust-lang/rust/commit/7ff5b44a58357e11d15dc0ce34972f93c1bc6e57"}, {"sha": "12ada5cf4bebabd7dc240a3a993eaebbdf2ed3d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/12ada5cf4bebabd7dc240a3a993eaebbdf2ed3d3", "html_url": "https://github.com/rust-lang/rust/commit/12ada5cf4bebabd7dc240a3a993eaebbdf2ed3d3"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "27061acd5afd4902c9b4e00e5afac1b317cf7da2", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "patch": "@@ -21,7 +21,6 @@ use rustc_target::abi::{self, Align, Size};\n use rustc_target::spec::{HasTargetSpec, Target};\n use std::borrow::Cow;\n use std::ffi::CStr;\n-use std::iter::TrustedLen;\n use std::ops::{Deref, Range};\n use std::ptr;\n use tracing::debug;\n@@ -179,7 +178,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         &mut self,\n         v: &'ll Value,\n         else_llbb: &'ll BasicBlock,\n-        cases: impl ExactSizeIterator<Item = (u128, &'ll BasicBlock)> + TrustedLen,\n+        cases: impl ExactSizeIterator<Item = (u128, &'ll BasicBlock)>,\n     ) {\n         let switch =\n             unsafe { llvm::LLVMBuildSwitch(self.llbuilder, v, else_llbb, cases.len() as c_uint) };"}, {"sha": "f14493e604368664f49e96ced4aae627f2184099", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "patch": "@@ -12,7 +12,6 @@\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![feature(or_patterns)]\n-#![feature(trusted_len)]\n #![recursion_limit = \"256\"]\n \n use back::write::{create_informational_target_machine, create_target_machine};"}, {"sha": "d4f3bf377978462e60628781b6dba534fa1369a5", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "patch": "@@ -6,7 +6,6 @@\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![feature(or_patterns)]\n-#![feature(trusted_len)]\n #![feature(associated_type_bounds)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "b35b0f24208b267b4957c362fbd0b8e44e122389", "filename": "compiler/rustc_codegen_ssa/src/traits/builder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c47b1e5f4920c5a15a9bc1c744f088646b031a3/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs?ref=7c47b1e5f4920c5a15a9bc1c744f088646b031a3", "patch": "@@ -18,7 +18,6 @@ use rustc_middle::ty::Ty;\n use rustc_target::abi::{Abi, Align, Scalar, Size};\n use rustc_target::spec::HasTargetSpec;\n \n-use std::iter::TrustedLen;\n use std::ops::Range;\n \n #[derive(Copy, Clone)]\n@@ -60,7 +59,7 @@ pub trait BuilderMethods<'a, 'tcx>:\n         &mut self,\n         v: Self::Value,\n         else_llbb: Self::BasicBlock,\n-        cases: impl ExactSizeIterator<Item = (u128, Self::BasicBlock)> + TrustedLen,\n+        cases: impl ExactSizeIterator<Item = (u128, Self::BasicBlock)>,\n     );\n     fn invoke(\n         &mut self,"}]}