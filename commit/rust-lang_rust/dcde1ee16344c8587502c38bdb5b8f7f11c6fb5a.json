{"sha": "dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZGUxZWUxNjM0NGM4NTg3NTAyYzM4YmRiNWI4ZjdmMTFjNmZiNWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-05T08:41:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-05T08:41:39Z"}, "message": "auto merge of #13936 : Armavica/rust/lint_check-range, r=kballard\n\nSome cases were not correctly handled by this lint, for instance `let a = 42u8; a < 0` and `let a = 42u8; a > 255`.\r\nIt led to the discovery of two useless comparisons, which I removed.", "tree": {"sha": "60249a7e65338e5866ac0a2cfae1533a84a164ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60249a7e65338e5866ac0a2cfae1533a84a164ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "html_url": "https://github.com/rust-lang/rust/commit/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abdacecdf86b4b5a4f432560445a24e1c5f4751b", "url": "https://api.github.com/repos/rust-lang/rust/commits/abdacecdf86b4b5a4f432560445a24e1c5f4751b", "html_url": "https://github.com/rust-lang/rust/commit/abdacecdf86b4b5a4f432560445a24e1c5f4751b"}, {"sha": "169a57ee8d301c44fb285cc95fc1309d96aa37ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/169a57ee8d301c44fb285cc95fc1309d96aa37ab", "html_url": "https://github.com/rust-lang/rust/commit/169a57ee8d301c44fb285cc95fc1309d96aa37ab"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "aca8dc61252011131a469292e0cfa4fd06d762ff", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "patch": "@@ -788,10 +788,10 @@ fn check_type_limits(cx: &Context, e: &ast::Expr) {\n     fn is_valid<T:cmp::Ord>(binop: ast::BinOp, v: T,\n                             min: T, max: T) -> bool {\n         match binop {\n-            ast::BiLt => v <= max,\n-            ast::BiLe => v < max,\n-            ast::BiGt => v >= min,\n-            ast::BiGe => v > min,\n+            ast::BiLt => v >  min && v <= max,\n+            ast::BiLe => v >= min && v <  max,\n+            ast::BiGt => v >= min && v <  max,\n+            ast::BiGe => v >  min && v <= max,\n             ast::BiEq | ast::BiNe => v >= min && v <= max,\n             _ => fail!()\n         }"}, {"sha": "0d856fb689d449e4fc6e3356c24d43205e189587", "filename": "src/libsyntax/ext/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Flibsyntax%2Fext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Flibsyntax%2Fext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fformat.rs?ref=dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "patch": "@@ -268,7 +268,7 @@ impl<'a, 'b> Context<'a, 'b> {\n     fn verify_arg_type(&mut self, arg: Position, ty: ArgumentType) {\n         match arg {\n             Exact(arg) => {\n-                if arg < 0 || self.args.len() <= arg {\n+                if self.args.len() <= arg {\n                     let msg = format!(\"invalid reference to argument `{}` (there \\\n                                     are {} arguments)\", arg, self.args.len());\n                     self.ecx.span_err(self.fmtsp, msg);"}, {"sha": "db5dd2d5c1907375cc56b339837c1cbae86308db", "filename": "src/libterm/terminfo/parser/compiled.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Flibterm%2Fterminfo%2Fparser%2Fcompiled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Flibterm%2Fterminfo%2Fparser%2Fcompiled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Fterminfo%2Fparser%2Fcompiled.rs?ref=dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "patch": "@@ -220,9 +220,7 @@ pub fn parse(file: &mut io::Reader,\n     if bools_bytes != 0 {\n         for i in range(0, bools_bytes) {\n             let b = try!(file.read_byte());\n-            if b < 0 {\n-                return Err(\"error: expected more bools but hit EOF\".to_owned());\n-            } else if b == 1 {\n+            if b == 1 {\n                 bools_map.insert(bnames[i as uint].to_owned(), true);\n             }\n         }"}, {"sha": "67ef9cd06803f311a8d6674839ad75205e0202a5", "filename": "src/test/compile-fail/lint-type-limits.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs?ref=dcde1ee16344c8587502c38bdb5b8f7f11c6fb5a", "patch": "@@ -29,6 +29,18 @@ fn baz() -> bool {\n                 //~^ WARNING literal out of range for its type\n }\n \n+fn bleh() {\n+    let u = 42u8;\n+    let _ = u > 255; //~ ERROR comparison is useless due to type limits\n+    let _ = 255 < u; //~ ERROR comparison is useless due to type limits\n+    let _ = u < 0; //~ ERROR comparison is useless due to type limits\n+    let _ = 0 > u; //~ ERROR comparison is useless due to type limits\n+    let _ = u <= 255; //~ ERROR comparison is useless due to type limits\n+    let _ = 255 >= u; //~ ERROR comparison is useless due to type limits\n+    let _ = u >= 0; //~ ERROR comparison is useless due to type limits\n+    let _ = 0 <= u; //~ ERROR comparison is useless due to type limits\n+}\n+\n fn qux() {\n     let mut i = 1i8;\n     while 200 != i { //~ ERROR comparison is useless due to type limits"}]}