{"sha": "a593b5419901774c134e18433452c4dd5f7ff648", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1OTNiNTQxOTkwMTc3NGMxMzRlMTg0MzM0NTJjNGRkNWY3ZmY2NDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-05T09:41:19Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-05T09:41:19Z"}, "message": "expand comment explaining integer exception", "tree": {"sha": "79ce0dcc8bbc242884b25df1073a7f3244596245", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79ce0dcc8bbc242884b25df1073a7f3244596245"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a593b5419901774c134e18433452c4dd5f7ff648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a593b5419901774c134e18433452c4dd5f7ff648", "html_url": "https://github.com/rust-lang/rust/commit/a593b5419901774c134e18433452c4dd5f7ff648", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a593b5419901774c134e18433452c4dd5f7ff648/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21d284b6f0d62dfd284249a9e059b72e4fcfca87", "url": "https://api.github.com/repos/rust-lang/rust/commits/21d284b6f0d62dfd284249a9e059b72e4fcfca87", "html_url": "https://github.com/rust-lang/rust/commit/21d284b6f0d62dfd284249a9e059b72e4fcfca87"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "04032847385e9aaaceba08fe18f0dbb169f6aa2e", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a593b5419901774c134e18433452c4dd5f7ff648/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a593b5419901774c134e18433452c4dd5f7ff648/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=a593b5419901774c134e18433452c4dd5f7ff648", "patch": "@@ -256,9 +256,11 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let b = self.read_immediate(args[1])?.to_scalar()?;\n \n                 // Special case: if both scalars are *equal integers*\n-                // and not NULL, their offset is 0.\n+                // and not NULL, we pretend there is an allocation of size 0 right there,\n+                // and their offset is 0. (There's never a valid object at NULL, making it an\n+                // exception from the exception.)\n                 // This is the dual to the special exception for offset-by-0\n-                // in the inbounds pointer offset operation.\n+                // in the inbounds pointer offset operation (see the Miri code, `src/operator.rs`).\n                 if a.is_bits() && b.is_bits() {\n                     let a = a.to_usize(self)?;\n                     let b = b.to_usize(self)?;"}]}