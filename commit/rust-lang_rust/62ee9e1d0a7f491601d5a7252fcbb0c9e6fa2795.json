{"sha": "62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795", "node_id": "C_kwDOAAsO6NoAKDYyZWU5ZTFkMGE3ZjQ5MTYwMWQ1YTcyNTJmY2JiMGM5ZTZmYTI3OTU", "commit": {"author": {"name": "Markus Everling", "email": "markuseverling@gmail.com", "date": "2023-05-26T01:33:50Z"}, "committer": {"name": "Markus Everling", "email": "markuseverling@gmail.com", "date": "2023-05-28T16:09:55Z"}, "message": "Update runtime guarantee for `select_nth_unstable`", "tree": {"sha": "dbf411651b1e359aacd94a496c7ce6fed77ca584", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbf411651b1e359aacd94a496c7ce6fed77ca584"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795", "html_url": "https://github.com/rust-lang/rust/commit/62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795/comments", "author": {"login": "Sp00ph", "id": 61327188, "node_id": "MDQ6VXNlcjYxMzI3MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/61327188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sp00ph", "html_url": "https://github.com/Sp00ph", "followers_url": "https://api.github.com/users/Sp00ph/followers", "following_url": "https://api.github.com/users/Sp00ph/following{/other_user}", "gists_url": "https://api.github.com/users/Sp00ph/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sp00ph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sp00ph/subscriptions", "organizations_url": "https://api.github.com/users/Sp00ph/orgs", "repos_url": "https://api.github.com/users/Sp00ph/repos", "events_url": "https://api.github.com/users/Sp00ph/events{/privacy}", "received_events_url": "https://api.github.com/users/Sp00ph/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sp00ph", "id": 61327188, "node_id": "MDQ6VXNlcjYxMzI3MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/61327188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sp00ph", "html_url": "https://github.com/Sp00ph", "followers_url": "https://api.github.com/users/Sp00ph/followers", "following_url": "https://api.github.com/users/Sp00ph/following{/other_user}", "gists_url": "https://api.github.com/users/Sp00ph/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sp00ph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sp00ph/subscriptions", "organizations_url": "https://api.github.com/users/Sp00ph/orgs", "repos_url": "https://api.github.com/users/Sp00ph/repos", "events_url": "https://api.github.com/users/Sp00ph/events{/privacy}", "received_events_url": "https://api.github.com/users/Sp00ph/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0004b3b984b19646c1f78b09ba497b7bd6e882c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0004b3b984b19646c1f78b09ba497b7bd6e882c1", "html_url": "https://github.com/rust-lang/rust/commit/0004b3b984b19646c1f78b09ba497b7bd6e882c1"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "5b86540fd99ed17c08c18f76de2f4c455cbcd364", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=62ee9e1d0a7f491601d5a7252fcbb0c9e6fa2795", "patch": "@@ -2995,7 +2995,7 @@ impl<T> [T] {\n     /// This reordering has the additional property that any value at position `i < index` will be\n     /// less than or equal to any value at a position `j > index`. Additionally, this reordering is\n     /// unstable (i.e. any number of equal elements may end up at position `index`), in-place\n-    /// (i.e. does not allocate), and *O*(*n*) on average. The worst-case performance is *O*(*n* log *n*).\n+    /// (i.e. does not allocate), and runs in *O*(*n*) time.\n     /// This function is also known as \"kth element\" in other libraries.\n     ///\n     /// It returns a triplet of the following from the reordered slice:\n@@ -3044,9 +3044,8 @@ impl<T> [T] {\n     /// This reordering has the additional property that any value at position `i < index` will be\n     /// less than or equal to any value at a position `j > index` using the comparator function.\n     /// Additionally, this reordering is unstable (i.e. any number of equal elements may end up at\n-    /// position `index`), in-place (i.e. does not allocate), and *O*(*n*) on average.\n-    /// The worst-case performance is *O*(*n* log *n*). This function is also known as\n-    /// \"kth element\" in other libraries.\n+    /// position `index`), in-place (i.e. does not allocate), and runs in *O*(*n*) time.\n+    /// This function is also known as \"kth element\" in other libraries.\n     ///\n     /// It returns a triplet of the following from\n     /// the slice reordered according to the provided comparator function: the subslice prior to\n@@ -3099,8 +3098,7 @@ impl<T> [T] {\n     /// This reordering has the additional property that any value at position `i < index` will be\n     /// less than or equal to any value at a position `j > index` using the key extraction function.\n     /// Additionally, this reordering is unstable (i.e. any number of equal elements may end up at\n-    /// position `index`), in-place (i.e. does not allocate), and *O*(*n*) on average.\n-    /// The worst-case performance is *O*(*n* log *n*).\n+    /// position `index`), in-place (i.e. does not allocate), and runs in *O*(*n*) time.\n     /// This function is also known as \"kth element\" in other libraries.\n     ///\n     /// It returns a triplet of the following from"}]}