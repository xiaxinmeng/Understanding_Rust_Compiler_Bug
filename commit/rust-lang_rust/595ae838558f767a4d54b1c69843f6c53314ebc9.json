{"sha": "595ae838558f767a4d54b1c69843f6c53314ebc9", "node_id": "C_kwDOAAsO6NoAKDU5NWFlODM4NTU4Zjc2N2E0ZDU0YjFjNjk4NDNmNmM1MzMxNGViYzk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T12:24:53Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T20:39:46Z"}, "message": "Stop passing the self-type as a separate argument.", "tree": {"sha": "d846f0f53d3750b1736f8cfd45425d9b6b9f5727", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d846f0f53d3750b1736f8cfd45425d9b6b9f5727"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/595ae838558f767a4d54b1c69843f6c53314ebc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/595ae838558f767a4d54b1c69843f6c53314ebc9", "html_url": "https://github.com/rust-lang/rust/commit/595ae838558f767a4d54b1c69843f6c53314ebc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/595ae838558f767a4d54b1c69843f6c53314ebc9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f60e43ee05620e413d5e7dc069b3334ff4d1d0ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/f60e43ee05620e413d5e7dc069b3334ff4d1d0ed", "html_url": "https://github.com/rust-lang/rust/commit/f60e43ee05620e413d5e7dc069b3334ff4d1d0ed"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "c4e7f8bfe1e20409ec0ca227bf50870563aba0f7", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/595ae838558f767a4d54b1c69843f6c53314ebc9/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595ae838558f767a4d54b1c69843f6c53314ebc9/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=595ae838558f767a4d54b1c69843f6c53314ebc9", "patch": "@@ -842,14 +842,10 @@ fn walk_parents<'tcx>(\n                         } else if let Some(trait_id) = cx.tcx.trait_of_item(id)\n                             && let arg_ty = cx.tcx.erase_regions(cx.typeck_results().expr_ty_adjusted(e))\n                             && let ty::Ref(_, sub_ty, _) = *arg_ty.kind()\n-                            && let subs = match cx\n+                            && let subs = cx\n                                 .typeck_results()\n-                                .node_substs_opt(parent.hir_id)\n-                                .and_then(|subs| subs.get(1..))\n-                            {\n-                                Some(subs) => cx.tcx.mk_substs(subs.iter().copied()),\n-                                None => cx.tcx.mk_substs(std::iter::empty::<ty::subst::GenericArg<'_>>()),\n-                            } && let impl_ty = if cx.tcx.fn_sig(id).skip_binder().inputs()[0].is_ref() {\n+                                .node_substs_opt(parent.hir_id).map(|subs| &subs[1..]).unwrap_or_default()\n+                            && let impl_ty = if cx.tcx.fn_sig(id).skip_binder().inputs()[0].is_ref() {\n                                 // Trait methods taking `&self`\n                                 sub_ty\n                             } else {\n@@ -858,7 +854,7 @@ fn walk_parents<'tcx>(\n                             } && impl_ty.is_ref()\n                             && let infcx = cx.tcx.infer_ctxt().build()\n                             && infcx\n-                                .type_implements_trait(trait_id, impl_ty, subs, cx.param_env)\n+                                .type_implements_trait(trait_id, [impl_ty.into()].into_iter().chain(subs.iter().copied()), cx.param_env)\n                                 .must_apply_modulo_regions()\n                         {\n                             return Some(Position::MethodReceiverRefImpl)"}, {"sha": "5420a0e782ea87877cd39b5c4d4f2681df8a6816", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/595ae838558f767a4d54b1c69843f6c53314ebc9/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595ae838558f767a4d54b1c69843f6c53314ebc9/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=595ae838558f767a4d54b1c69843f6c53314ebc9", "patch": "@@ -692,7 +692,7 @@ fn matches_preds<'tcx>(\n     let infcx = cx.tcx.infer_ctxt().build();\n     preds.iter().all(|&p| match cx.tcx.erase_late_bound_regions(p) {\n         ExistentialPredicate::Trait(p) => infcx\n-            .type_implements_trait(p.def_id, ty, p.substs, cx.param_env)\n+            .type_implements_trait(p.def_id, [ty.into()].into_iter().chain(p.substs.iter()), cx.param_env)\n             .must_apply_modulo_regions(),\n         ExistentialPredicate::Projection(p) => infcx.predicate_must_hold_modulo_regions(&Obligation::new(\n             cx.tcx,\n@@ -704,7 +704,7 @@ fn matches_preds<'tcx>(\n             )),\n         )),\n         ExistentialPredicate::AutoTrait(p) => infcx\n-            .type_implements_trait(p, ty, List::empty(), cx.param_env)\n+            .type_implements_trait(p, [ty], cx.param_env)\n             .must_apply_modulo_regions(),\n     })\n }"}, {"sha": "5ec6f29fe9163514df4ee91642384e7da446668d", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/595ae838558f767a4d54b1c69843f6c53314ebc9/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595ae838558f767a4d54b1c69843f6c53314ebc9/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=595ae838558f767a4d54b1c69843f6c53314ebc9", "patch": "@@ -178,7 +178,7 @@ pub fn implements_trait_with_env<'tcx>(\n     };\n     let ty_params = tcx.mk_substs(ty_params.into_iter().map(|arg| arg.unwrap_or_else(|| infcx.next_ty_var(orig).into())));\n     infcx\n-        .type_implements_trait(trait_id, ty, ty_params, param_env)\n+        .type_implements_trait(trait_id, [ty.into()].into_iter().chain(ty_params), param_env)\n         .must_apply_modulo_regions()\n }\n "}]}