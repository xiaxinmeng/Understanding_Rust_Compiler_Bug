{"sha": "665866d3981b4fe0b52a0ef6cab5952a34d5f412", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NTg2NmQzOTgxYjRmZTBiNTJhMGVmNmNhYjU5NTJhMzRkNWY0MTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-30T10:05:38Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-31T08:22:45Z"}, "message": "Don't store the discriminant with the enum's type size", "tree": {"sha": "1bd21df36fb85d1c2ba59acdf0e8e0ea1a6f1c4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bd21df36fb85d1c2ba59acdf0e8e0ea1a6f1c4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/665866d3981b4fe0b52a0ef6cab5952a34d5f412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/665866d3981b4fe0b52a0ef6cab5952a34d5f412", "html_url": "https://github.com/rust-lang/rust/commit/665866d3981b4fe0b52a0ef6cab5952a34d5f412", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/665866d3981b4fe0b52a0ef6cab5952a34d5f412/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9b6355607d827ae23f828e8d381b6b0ce859f56", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9b6355607d827ae23f828e8d381b6b0ce859f56", "html_url": "https://github.com/rust-lang/rust/commit/e9b6355607d827ae23f828e8d381b6b0ce859f56"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "632f7abfdb499bc7ac3d0918e4f9c7d70ed7cba6", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/665866d3981b4fe0b52a0ef6cab5952a34d5f412/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/665866d3981b4fe0b52a0ef6cab5952a34d5f412/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=665866d3981b4fe0b52a0ef6cab5952a34d5f412", "patch": "@@ -793,7 +793,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n                 let ty = self.place_ty(place);\n                 let place = self.eval_place(place)?;\n                 let discr_val = self.read_discriminant_value(place, ty)?;\n-                let defined = self.layout_of(ty).unwrap().size.bits() as u8;\n+                let defined = self.layout_of(dest_ty).unwrap().size.bits() as u8;\n                 self.write_scalar(dest, Scalar::Bits {\n                     bits: discr_val,\n                     defined,"}]}