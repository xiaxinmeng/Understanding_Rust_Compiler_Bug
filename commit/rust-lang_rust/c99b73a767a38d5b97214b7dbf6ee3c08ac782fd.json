{"sha": "c99b73a767a38d5b97214b7dbf6ee3c08ac782fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5OWI3M2E3NjdhMzhkNWI5NzIxNGI3ZGJmNmVlM2MwOGFjNzgyZmQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-04-07T06:16:12Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-04-19T22:13:35Z"}, "message": "Trivial refactoring", "tree": {"sha": "8c0a506a47de619060c3a5e3e2028d5cd67c3317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c0a506a47de619060c3a5e3e2028d5cd67c3317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd", "html_url": "https://github.com/rust-lang/rust/commit/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2aaad4e2288647c5235754a5e1439a5124978fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2aaad4e2288647c5235754a5e1439a5124978fe", "html_url": "https://github.com/rust-lang/rust/commit/c2aaad4e2288647c5235754a5e1439a5124978fe"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "9c444fca9a10ee033d4a81dbbdd06e43c0f72edd", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=c99b73a767a38d5b97214b7dbf6ee3c08ac782fd", "patch": "@@ -766,22 +766,22 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n          \"external crate/lib resolution\",\n          || LocalCrateReader::new(sess, cstore, &hir_map, name).read_crates());\n \n-    let lang_items = time(time_passes, \"language item collection\", || {\n-        sess.track_errors(|| {\n-            middle::lang_items::collect_language_items(&sess, &hir_map)\n-        })\n-    })?;\n-\n     let resolve::CrateMap {\n         def_map,\n         freevars,\n         export_map,\n         trait_map,\n         glob_map,\n     } = time(time_passes,\n-             \"resolution\",\n+             \"name resolution\",\n              || resolve::resolve_crate(sess, &hir_map, make_glob_map));\n \n+    let lang_items = time(time_passes, \"language item collection\", || {\n+        sess.track_errors(|| {\n+            middle::lang_items::collect_language_items(&sess, &hir_map)\n+        })\n+    })?;\n+\n     let mut analysis = ty::CrateAnalysis {\n         export_map: export_map,\n         access_levels: AccessLevels::default(),"}, {"sha": "8ec238f4b248f6e60de3cb5f5f1bc129d9bb9c64", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c99b73a767a38d5b97214b7dbf6ee3c08ac782fd/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=c99b73a767a38d5b97214b7dbf6ee3c08ac782fd", "patch": "@@ -813,9 +813,8 @@ impl<'a, 'b> LocalCrateReader<'a, 'b> {\n \n     fn process_crate(&self, c: &hir::Crate) {\n         for a in c.attrs.iter().filter(|m| m.name() == \"link_args\") {\n-            match a.value_str() {\n-                Some(ref linkarg) => self.cstore.add_used_link_args(&linkarg),\n-                None => { /* fallthrough */ }\n+            if let Some(ref linkarg) = a.value_str() {\n+                self.cstore.add_used_link_args(&linkarg);\n             }\n         }\n     }\n@@ -830,12 +829,12 @@ impl<'a, 'b> LocalCrateReader<'a, 'b> {\n                 match self.creader.extract_crate_info_hir(i) {\n                     Some(info) => {\n                         let (cnum, _, _) = self.creader.resolve_crate(&None,\n-                                                                          &info.ident,\n-                                                                          &info.name,\n-                                                                          None,\n-                                                                          i.span,\n-                                                                          PathKind::Crate,\n-                                                                          true);\n+                                                                      &info.ident,\n+                                                                      &info.name,\n+                                                                      None,\n+                                                                      i.span,\n+                                                                      PathKind::Crate,\n+                                                                      true);\n                         let def_id = self.ast_map.local_def_id(i.id);\n \n                         let len = self.ast_map.def_path(def_id).data.len();"}]}