{"sha": "e21270ba0e26a4807b74433719e5e3e9641bb8cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMTI3MGJhMGUyNmE0ODA3Yjc0NDMzNzE5ZTVlM2U5NjQxYmI4Y2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-19T08:01:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-19T08:01:56Z"}, "message": "Auto merge of #6608 - rail-rain:note_on_as_conversions, r=phansch\n\nAdd a note to `as_conversions`\n\nI have seen a couple of examples where there are some misunderstandings of `as_conversions` ([1](https://github.com/rust-lang/rust-clippy/issues/5890#issuecomment-671852546), [2](https://github.com/rust-lang/rust-clippy/issues/6116#issuecomment-704251710) and [3](https://github.com/rust-lang/rust-clippy/issues/6428)). This PR adds the note that explains its purpose and relationship with other `as` related casts. Open question: should I list every related lints for discoverbility, or just suggest how to find these? I chose the former because there's no way to list only and all `as` related lints (e.g. on All the Clippt Lints, 'cast' includes some noises, but `cast_` excludes some) even though I cannot guarantee the list will be updated to include future changes.\n\n---\n\nchangelog: Add a note to the document of `as_conversions`", "tree": {"sha": "1e01ac992bdace33ac3c42e86821d884d8dfad1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e01ac992bdace33ac3c42e86821d884d8dfad1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e21270ba0e26a4807b74433719e5e3e9641bb8cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e21270ba0e26a4807b74433719e5e3e9641bb8cf", "html_url": "https://github.com/rust-lang/rust/commit/e21270ba0e26a4807b74433719e5e3e9641bb8cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e21270ba0e26a4807b74433719e5e3e9641bb8cf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab1020b16204478617174d9e3b3bd78e7c4b3ff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab1020b16204478617174d9e3b3bd78e7c4b3ff7", "html_url": "https://github.com/rust-lang/rust/commit/ab1020b16204478617174d9e3b3bd78e7c4b3ff7"}, {"sha": "c53192c34762f8104542168dbc7c83cdd280151c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c53192c34762f8104542168dbc7c83cdd280151c", "html_url": "https://github.com/rust-lang/rust/commit/c53192c34762f8104542168dbc7c83cdd280151c"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "c30d65bbc57043a34881b284cb92631316b28a85", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e21270ba0e26a4807b74433719e5e3e9641bb8cf/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e21270ba0e26a4807b74433719e5e3e9641bb8cf/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=e21270ba0e26a4807b74433719e5e3e9641bb8cf", "patch": "@@ -8,6 +8,14 @@ use crate::utils::span_lint_and_help;\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `as` conversions.\n     ///\n+    /// Note that this lint is specialized in linting *every single* use of `as`\n+    /// regardless of whether good alternatives exist or not.\n+    /// If you want more precise lints for `as`, please consider using these separate lints:\n+    /// `unnecessary_cast`, `cast_lossless/possible_truncation/possible_wrap/precision_loss/sign_loss`,\n+    /// `fn_to_numeric_cast(_with_truncation)`, `char_lit_as_u8`, `ref_to_mut` and `ptr_as_ptr`.\n+    /// There is a good explanation the reason why this lint should work in this way and how it is useful\n+    /// [in this issue](https://github.com/rust-lang/rust-clippy/issues/5122).\n+    ///\n     /// **Why is this bad?** `as` conversions will perform many kinds of\n     /// conversions, including silently lossy conversions and dangerous coercions.\n     /// There are cases when it makes sense to use `as`, so the lint is"}]}