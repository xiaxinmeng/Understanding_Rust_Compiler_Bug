{"sha": "77821b2eb95733c399dea13db99d19053237de98", "node_id": "C_kwDOAAsO6NoAKDc3ODIxYjJlYjk1NzMzYzM5OWRlYTEzZGI5OWQxOTA1MzIzN2RlOTg", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-04-16T06:35:39Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-04-16T06:35:39Z"}, "message": "Remove unused unused_macros\n\nThe macro is always used", "tree": {"sha": "d791dd8b86b36615c37a57b74ba64d35da31af57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d791dd8b86b36615c37a57b74ba64d35da31af57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77821b2eb95733c399dea13db99d19053237de98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77821b2eb95733c399dea13db99d19053237de98", "html_url": "https://github.com/rust-lang/rust/commit/77821b2eb95733c399dea13db99d19053237de98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77821b2eb95733c399dea13db99d19053237de98/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a711152615ad9294dc0e5ee6885c8e9bb8418a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a711152615ad9294dc0e5ee6885c8e9bb8418a9", "html_url": "https://github.com/rust-lang/rust/commit/2a711152615ad9294dc0e5ee6885c8e9bb8418a9"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "48ab75b6f17a54e799a80a50e884da12936fedb3", "filename": "library/core/tests/num/ieee754.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77821b2eb95733c399dea13db99d19053237de98/library%2Fcore%2Ftests%2Fnum%2Fieee754.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77821b2eb95733c399dea13db99d19053237de98/library%2Fcore%2Ftests%2Fnum%2Fieee754.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fieee754.rs?ref=77821b2eb95733c399dea13db99d19053237de98", "patch": "@@ -39,7 +39,6 @@ macro_rules! assert_biteq {\n \n // ToString uses the default fmt::Display impl without special concerns, and bypasses other parts\n // of the formatting infrastructure, which makes it ideal for testing here.\n-#[allow(unused_macros)]\n macro_rules! roundtrip {\n     ($f:expr => $t:ty) => {\n         ($f).to_string().parse::<$t>().unwrap()"}]}