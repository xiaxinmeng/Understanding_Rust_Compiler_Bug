{"sha": "45b273af4a48e9625749286049326abe4fce064c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1YjI3M2FmNGE0OGU5NjI1NzQ5Mjg2MDQ5MzI2YWJlNGZjZTA2NGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-16T20:23:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-16T20:23:09Z"}, "message": "Auto merge of #39094 - nagisa:i128-fix-endianness, r=eddyb\n\n(Shot at) Fix endian bugs in i128 intrinsic impls\n\nAttempt to fix the endianness issues on big-endian machines such as power pc. Could not test if it actually makes stuff work on the powerpc, because setting up cross-compiler for ppc seems to be nigh-impossible on arch.", "tree": {"sha": "d54cc9fa83e94efce59003079f2d92da5977b953", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d54cc9fa83e94efce59003079f2d92da5977b953"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45b273af4a48e9625749286049326abe4fce064c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45b273af4a48e9625749286049326abe4fce064c", "html_url": "https://github.com/rust-lang/rust/commit/45b273af4a48e9625749286049326abe4fce064c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45b273af4a48e9625749286049326abe4fce064c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0baa71b94e15ac43532987777959edbaee098d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0baa71b94e15ac43532987777959edbaee098d", "html_url": "https://github.com/rust-lang/rust/commit/2d0baa71b94e15ac43532987777959edbaee098d"}, {"sha": "c032bbf95ef733e2316008639ca39492df735ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c032bbf95ef733e2316008639ca39492df735ce6", "html_url": "https://github.com/rust-lang/rust/commit/c032bbf95ef733e2316008639ca39492df735ce6"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "662d7422f5f001651c9f6684a263ef32f629d747", "filename": "src/libcompiler_builtins/lib.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/45b273af4a48e9625749286049326abe4fce064c/src%2Flibcompiler_builtins%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45b273af4a48e9625749286049326abe4fce064c/src%2Flibcompiler_builtins%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Flib.rs?ref=45b273af4a48e9625749286049326abe4fce064c", "patch": "@@ -392,7 +392,7 @@ pub mod reimpls {\n             self.wrapping_shr(32) as i32\n         }\n         fn from_parts(low: u32, high: i32) -> i64 {\n-            low as i64 | (high as i64).wrapping_shl(32)\n+            u64::from_parts(low, high as u32) as i64\n         }\n     }\n     #[cfg(not(stage0))]\n@@ -404,11 +404,10 @@ pub mod reimpls {\n             self as u64\n         }\n         fn high(self) -> u64 {\n-            unsafe { *(&self as *const u128 as *const u64).offset(1) }\n+            self.wrapping_shr(64) as u64\n         }\n         fn from_parts(low: u64, high: u64) -> u128 {\n-            #[repr(C, packed)] struct Parts(u64, u64);\n-            unsafe { ::core::mem::transmute(Parts(low, high)) }\n+            (high as u128).wrapping_shl(64) | low as u128\n         }\n     }\n     #[cfg(not(stage0))]\n@@ -420,7 +419,7 @@ pub mod reimpls {\n             self as u64\n         }\n         fn high(self) -> i64 {\n-            unsafe { *(&self as *const i128 as *const i64).offset(1) }\n+            self.wrapping_shr(64) as i64\n         }\n         fn from_parts(low: u64, high: i64) -> i128 {\n             u128::from_parts(low, high as u64) as i128"}]}