{"sha": "05d36965dff534d5976d4b3d7c443813992bdec7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZDM2OTY1ZGZmNTM0ZDU5NzZkNGIzZDdjNDQzODEzOTkyYmRlYzc=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-26T17:41:27Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-26T17:41:27Z"}, "message": "Avoid an extra alloca/memcpy when auto-ref'ing fat pointers\n\nauto_ref() handles fat pointers just fine and unlike ref_fat_ptr() does so\nwithout creating an unnecessary copy of the pointer.", "tree": {"sha": "ff74d163b540021ef51d0c5ca9c137fec2630fa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff74d163b540021ef51d0c5ca9c137fec2630fa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05d36965dff534d5976d4b3d7c443813992bdec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05d36965dff534d5976d4b3d7c443813992bdec7", "html_url": "https://github.com/rust-lang/rust/commit/05d36965dff534d5976d4b3d7c443813992bdec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05d36965dff534d5976d4b3d7c443813992bdec7/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef3255b063a28ef1ed8346192325cfac66398739", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef3255b063a28ef1ed8346192325cfac66398739", "html_url": "https://github.com/rust-lang/rust/commit/ef3255b063a28ef1ed8346192325cfac66398739"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "7307cd136d7a9e95b183cc9178f0a9b88e0e8e38", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/05d36965dff534d5976d4b3d7c443813992bdec7/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d36965dff534d5976d4b3d7c443813992bdec7/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=05d36965dff534d5976d4b3d7c443813992bdec7", "patch": "@@ -390,14 +390,7 @@ fn apply_adjustments<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n             // (You might think there is a more elegant way to do this than a\n             // skip_reborrows bool, but then you remember that the borrow checker exists).\n             if skip_reborrows == 0 && adj.autoref.is_some() {\n-                if !type_is_sized(bcx.tcx(), datum.ty) {\n-                    // Arrange cleanup\n-                    let lval = unpack_datum!(bcx,\n-                        datum.to_lvalue_datum(bcx, \"ref_fat_ptr\", expr.id));\n-                    datum = unpack_datum!(bcx, ref_fat_ptr(bcx, lval));\n-                } else {\n-                    datum = unpack_datum!(bcx, auto_ref(bcx, datum, expr));\n-                }\n+                datum = unpack_datum!(bcx, auto_ref(bcx, datum, expr));\n             }\n \n             if let Some(target) = adj.unsize {"}]}