{"sha": "d94d32e937c672317527cb440788138f688bf3c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NGQzMmU5MzdjNjcyMzE3NTI3Y2I0NDA3ODgxMzhmNjg4YmYzYzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-11T07:02:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-11T07:02:28Z"}, "message": "enforce_validity became a function", "tree": {"sha": "c8266f3e5c888c424ae7bab82a637afd15b4de9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8266f3e5c888c424ae7bab82a637afd15b4de9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d94d32e937c672317527cb440788138f688bf3c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d94d32e937c672317527cb440788138f688bf3c4", "html_url": "https://github.com/rust-lang/rust/commit/d94d32e937c672317527cb440788138f688bf3c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d94d32e937c672317527cb440788138f688bf3c4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a090edbc03b95eb21f75675c026e674d646cae74", "url": "https://api.github.com/repos/rust-lang/rust/commits/a090edbc03b95eb21f75675c026e674d646cae74", "html_url": "https://github.com/rust-lang/rust/commit/a090edbc03b95eb21f75675c026e674d646cae74"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "965810d0e40f8de5897a500d5d92dcd9c02a05a1", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d94d32e937c672317527cb440788138f688bf3c4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d94d32e937c672317527cb440788138f688bf3c4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=d94d32e937c672317527cb440788138f688bf3c4", "patch": "@@ -239,7 +239,11 @@ impl<'a, 'mir, 'tcx> Machine<'a, 'mir, 'tcx> for Evaluator<'tcx> {\n     type MemoryMap = MonoHashMap<AllocId, (MemoryKind<MiriMemoryKind>, Allocation<()>)>;\n \n     const STATIC_KIND: Option<MiriMemoryKind> = Some(MiriMemoryKind::MutStatic);\n-    const ENFORCE_VALIDITY: bool = false; // this is still WIP\n+\n+    #[inline(always)]\n+    fn enforce_validity(_ecx: &EvalContext<'a, 'mir, 'tcx, Self>) -> bool {\n+        false // this is still WIP\n+    }\n \n     /// Returns Ok() when the function was handled, fail otherwise\n     fn find_fn("}]}