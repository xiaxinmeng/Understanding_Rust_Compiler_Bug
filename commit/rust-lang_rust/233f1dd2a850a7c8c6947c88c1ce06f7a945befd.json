{"sha": "233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzM2YxZGQyYTg1MGE3YzhjNjk0N2M4OGMxY2UwNmY3YTk0NWJlZmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T22:12:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T22:17:56Z"}, "message": "Privatize highlighting", "tree": {"sha": "0e6c920b9bb1955de444dc360072b2256060d89b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e6c920b9bb1955de444dc360072b2256060d89b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "html_url": "https://github.com/rust-lang/rust/commit/233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdd7118cbf23e21c376092b3b2734407004b8dbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd7118cbf23e21c376092b3b2734407004b8dbf", "html_url": "https://github.com/rust-lang/rust/commit/cdd7118cbf23e21c376092b3b2734407004b8dbf"}], "stats": {"total": 102, "additions": 54, "deletions": 48}, "files": [{"sha": "2bd276958f03af4625fe7d454101bdbe214c86ef", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "patch": "@@ -1,7 +1,6 @@\n import * as vscode from 'vscode';\n import * as scopes from './scopes';\n import * as scopesMapper from './scopes_mapper';\n-import { Server } from './server';\n \n const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n \n@@ -56,8 +55,6 @@ export class Config {\n     public userConfigChanged() {\n         const config = vscode.workspace.getConfiguration('rust-analyzer');\n \n-        Server.highlighter.removeHighlights();\n-\n         let requireReloadMessage = null;\n \n         if (config.has('highlightingOn')) {"}, {"sha": "39eddfcbdf5ae611fbea7e1d4cf082b5b24dd9f2", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "patch": "@@ -62,23 +62,30 @@ export class Ctx {\n         this.extCtx.subscriptions.push(d);\n     }\n \n-    async sendRequestWithRetry<R>(method: string, param: any, token: vscode.CancellationToken): Promise<R> {\n+    async sendRequestWithRetry<R>(\n+        method: string,\n+        param: any,\n+        token: vscode.CancellationToken,\n+    ): Promise<R> {\n         await this.client.onReady();\n         for (const delay of [2, 4, 6, 8, 10, null]) {\n             try {\n                 return await this.client.sendRequest(method, param, token);\n             } catch (e) {\n-                if (e.code === lc.ErrorCodes.ContentModified && delay !== null) {\n-                    await sleep(10 * (1 << delay))\n+                if (\n+                    e.code === lc.ErrorCodes.ContentModified &&\n+                    delay !== null\n+                ) {\n+                    await sleep(10 * (1 << delay));\n                     continue;\n                 }\n                 throw e;\n             }\n         }\n-        throw 'unreachable'\n+        throw 'unreachable';\n     }\n }\n \n export type Cmd = (...args: any[]) => any;\n \n-const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n+const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));"}, {"sha": "c7ee8c0a16de62d9b19e0582f5a41b9f383b3f18", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "patch": "@@ -10,6 +10,36 @@ import { Server } from './server';\n import { Ctx } from './ctx';\n \n export function activateHighlighting(ctx: Ctx) {\n+    const highlighter = new Highlighter();\n+\n+    ctx.client.onReady().then(() => {\n+        ctx.client.onNotification(\n+            'rust-analyzer/publishDecorations',\n+            (params: PublishDecorationsParams) => {\n+                if (!ctx.config.highlightingOn) return;\n+\n+                const targetEditor = vscode.window.visibleTextEditors.find(\n+                    editor => {\n+                        const unescapedUri = unescape(\n+                            editor.document.uri.toString(),\n+                        );\n+                        // Unescaped URI looks like:\n+                        // file:///c:/Workspace/ra-test/src/main.rs\n+                        return unescapedUri === params.uri;\n+                    },\n+                );\n+                if (!targetEditor) return;\n+\n+                highlighter.setHighlights(targetEditor, params.decorations);\n+            },\n+        );\n+    });\n+\n+    vscode.workspace.onDidChangeConfiguration(\n+        _ => highlighter.removeHighlights(),\n+        ctx.subscriptions,\n+    );\n+\n     vscode.window.onDidChangeActiveTextEditor(\n         async (editor: vscode.TextEditor | undefined) => {\n             if (!editor || editor.document.languageId !== 'rust') return;\n@@ -22,11 +52,17 @@ export function activateHighlighting(ctx: Ctx) {\n                 'rust-analyzer/decorationsRequest',\n                 params,\n             );\n-            Server.highlighter.setHighlights(editor, decorations);\n+            highlighter.setHighlights(editor, decorations);\n         },\n+        ctx.subscriptions,\n     );\n }\n \n+interface PublishDecorationsParams {\n+    uri: string;\n+    decorations: Decoration[];\n+}\n+\n export interface Decoration {\n     range: lc.Range;\n     tag: string;\n@@ -81,7 +117,7 @@ function createDecorationFromTextmate(\n     return vscode.window.createTextEditorDecorationType(decorationOptions);\n }\n \n-export class Highlighter {\n+class Highlighter {\n     private static initDecorations(): Map<\n         string,\n         vscode.TextEditorDecorationType"}, {"sha": "a7be97db87681aabdde102ad31455148831a9a28", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "patch": "@@ -102,7 +102,7 @@ class HintsUpdater {\n         };\n         let tokenSource = new vscode.CancellationTokenSource();\n         let prev = this.pending.get(documentUri);\n-        if (prev) prev.cancel()\n+        if (prev) prev.cancel();\n         this.pending.set(documentUri, tokenSource);\n         try {\n             return await this.ctx.sendRequestWithRetry<InlayHint[] | null>(\n@@ -112,7 +112,7 @@ class HintsUpdater {\n             );\n         } finally {\n             if (!tokenSource.token.isCancellationRequested) {\n-                this.pending.delete(documentUri)\n+                this.pending.delete(documentUri);\n             }\n         }\n     }"}, {"sha": "20a3ea11979858d06f01bd2231466c3f2e9768df", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "patch": "@@ -4,7 +4,6 @@ import * as lc from 'vscode-languageclient';\n import * as commands from './commands';\n import { activateInlayHints } from './inlay_hints';\n import { StatusDisplay } from './status_display';\n-import * as notifications from './notifications';\n import { Server } from './server';\n import { Ctx } from './ctx';\n import { activateHighlighting } from './highlighting';\n@@ -35,14 +34,8 @@ export async function activate(context: vscode.ExtensionContext) {\n     const watchStatus = new StatusDisplay(ctx.config.cargoWatchOptions.command);\n     ctx.pushCleanup(watchStatus);\n \n-    activateHighlighting(ctx);\n-\n     // Notifications are events triggered by the language server\n     const allNotifications: [string, lc.GenericNotificationHandler][] = [\n-        [\n-            'rust-analyzer/publishDecorations',\n-            notifications.publishDecorations.handle,\n-        ],\n         [\n             '$/progress',\n             params => watchStatus.handleProgressNotification(params),\n@@ -61,6 +54,8 @@ export async function activate(context: vscode.ExtensionContext) {\n         vscode.window.showErrorMessage(e.message);\n     }\n \n+    activateHighlighting(ctx);\n+\n     if (ctx.config.displayInlayHints) {\n         activateInlayHints(ctx);\n     }"}, {"sha": "74c4c35637b5c290aade80a370e82317d16857d6", "filename": "editors/code/src/notifications/index.ts", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cdd7118cbf23e21c376092b3b2734407004b8dbf/editors%2Fcode%2Fsrc%2Fnotifications%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/cdd7118cbf23e21c376092b3b2734407004b8dbf/editors%2Fcode%2Fsrc%2Fnotifications%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnotifications%2Findex.ts?ref=cdd7118cbf23e21c376092b3b2734407004b8dbf", "patch": "@@ -1,3 +0,0 @@\n-import * as publishDecorations from './publish_decorations';\n-\n-export { publishDecorations };"}, {"sha": "f23e286ad5d9fe4d5082176f5a9d2b31f0cd2ab5", "filename": "editors/code/src/notifications/publish_decorations.ts", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cdd7118cbf23e21c376092b3b2734407004b8dbf/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts", "raw_url": "https://github.com/rust-lang/rust/raw/cdd7118cbf23e21c376092b3b2734407004b8dbf/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts?ref=cdd7118cbf23e21c376092b3b2734407004b8dbf", "patch": "@@ -1,24 +0,0 @@\n-import * as vscode from 'vscode';\n-\n-import { Decoration } from '../highlighting';\n-import { Server } from '../server';\n-\n-export interface PublishDecorationsParams {\n-    uri: string;\n-    decorations: Decoration[];\n-}\n-\n-export function handle(params: PublishDecorationsParams) {\n-    const targetEditor = vscode.window.visibleTextEditors.find(editor => {\n-        const unescapedUri = unescape(editor.document.uri.toString());\n-        // Unescaped URI looks like:\n-        // file:///c:/Workspace/ra-test/src/main.rs\n-        return unescapedUri === params.uri;\n-    });\n-\n-    if (!Server.config.highlightingOn || !targetEditor) {\n-        return;\n-    }\n-\n-    Server.highlighter.setHighlights(targetEditor, params.decorations);\n-}"}, {"sha": "2bb21da6bef4c6414e4b08fb3db92ae7c17a4557", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/233f1dd2a850a7c8c6947c88c1ce06f7a945befd/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=233f1dd2a850a7c8c6947c88c1ce06f7a945befd", "patch": "@@ -3,7 +3,6 @@ import * as lc from 'vscode-languageclient';\n \n import { window, workspace } from 'vscode';\n import { Config } from './config';\n-import { Highlighter } from './highlighting';\n \n function expandPathResolving(path: string) {\n     if (path.startsWith('~/')) {\n@@ -13,7 +12,6 @@ function expandPathResolving(path: string) {\n }\n \n export class Server {\n-    public static highlighter = new Highlighter();\n     public static config = new Config();\n     public static client: lc.LanguageClient;\n "}]}