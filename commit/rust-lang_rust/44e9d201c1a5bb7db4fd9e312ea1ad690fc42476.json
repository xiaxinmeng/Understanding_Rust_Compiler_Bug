{"sha": "44e9d201c1a5bb7db4fd9e312ea1ad690fc42476", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZTlkMjAxYzFhNWJiN2RiNGZkOWUzMTJlYTFhZDY5MGZjNDI0NzY=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-03-25T18:11:03Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-03-25T18:11:03Z"}, "message": "Bless nll test", "tree": {"sha": "747b43305064327e0baa2a7bcd1c3c072af6df7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/747b43305064327e0baa2a7bcd1c3c072af6df7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44e9d201c1a5bb7db4fd9e312ea1ad690fc42476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44e9d201c1a5bb7db4fd9e312ea1ad690fc42476", "html_url": "https://github.com/rust-lang/rust/commit/44e9d201c1a5bb7db4fd9e312ea1ad690fc42476", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44e9d201c1a5bb7db4fd9e312ea1ad690fc42476/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cb8f513c6fbea904703bfd0f28f70f439d6f671", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb8f513c6fbea904703bfd0f28f70f439d6f671", "html_url": "https://github.com/rust-lang/rust/commit/7cb8f513c6fbea904703bfd0f28f70f439d6f671"}], "stats": {"total": 87, "additions": 3, "deletions": 84}, "files": [{"sha": "916a6c2bf12af6277f3affdfbb205a216295f3dc", "filename": "src/test/ui/suggestions/lifetimes/missing-lifetimes-in-signature.nll.stderr", "status": "modified", "additions": 3, "deletions": 84, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/44e9d201c1a5bb7db4fd9e312ea1ad690fc42476/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44e9d201c1a5bb7db4fd9e312ea1ad690fc42476/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature.nll.stderr?ref=44e9d201c1a5bb7db4fd9e312ea1ad690fc42476", "patch": "@@ -1,92 +1,11 @@\n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/missing-lifetimes-in-signature.rs:37:11\n+  --> $DIR/missing-lifetimes-in-signature.rs:36:11\n    |\n LL | fn baz<G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n    |        -  ^^ undeclared lifetime\n    |        |\n    |        help: consider introducing lifetime `'a` here: `'a,`\n \n-error: lifetime may not live long enough\n-  --> $DIR/missing-lifetimes-in-signature.rs:15:37\n-   |\n-LL | fn foo<G, T>(g: G, dest: &mut T) -> impl FnOnce()\n-   |                          -          ^^^^^^^^^^^^^ opaque type requires that `'1` must outlive `'static`\n-   |                          |\n-   |                          let's call the lifetime of this reference `'1`\n-   |\n-help: to allow this `impl Trait` to capture borrowed data with lifetime `'1`, add `'_` as a bound\n-   |\n-LL | fn foo<G, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n-   |                                     ^^^^^^^^^^^^^^^^^^\n-\n-error[E0311]: the parameter type `G` may not live long enough\n-  --> $DIR/missing-lifetimes-in-signature.rs:25:37\n-   |\n-LL | fn bar<G, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n-   |                                     ^^^^^^^^^^^^^^^^^^\n-   |\n-note: the parameter type `G` must be valid for the anonymous lifetime defined on the function body at 25:26...\n-  --> $DIR/missing-lifetimes-in-signature.rs:25:26\n-   |\n-LL | fn bar<G, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n-   |                          ^^^^^^\n-\n-error[E0311]: the parameter type `G` may not live long enough\n-  --> $DIR/missing-lifetimes-in-signature.rs:47:45\n-   |\n-LL | fn qux<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n-   |                                             ^^^^^^^^^^^^^^^^^^\n-   |\n-note: the parameter type `G` must be valid for the anonymous lifetime defined on the function body at 47:34...\n-  --> $DIR/missing-lifetimes-in-signature.rs:47:34\n-   |\n-LL | fn qux<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n-   |                                  ^^^^^^\n-\n-error[E0311]: the parameter type `G` may not live long enough\n-  --> $DIR/missing-lifetimes-in-signature.rs:59:58\n-   |\n-LL |     fn qux<'b, G: Get<T> + 'b, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ {\n-   |                                                          ^^^^^^^^^^^^^^^^^^\n-   |\n-note: the parameter type `G` must be valid for the anonymous lifetime defined on the method body at 59:47...\n-  --> $DIR/missing-lifetimes-in-signature.rs:59:47\n-   |\n-LL |     fn qux<'b, G: Get<T> + 'b, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ {\n-   |                                               ^^^^^^\n-\n-error[E0311]: the parameter type `G` may not live long enough\n-  --> $DIR/missing-lifetimes-in-signature.rs:68:45\n-   |\n-LL | fn bat<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ + 'a\n-   |                                             ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: the parameter type `G` must be valid for the anonymous lifetime defined on the function body at 68:34...\n-  --> $DIR/missing-lifetimes-in-signature.rs:68:34\n-   |\n-LL | fn bat<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ + 'a\n-   |                                  ^^^^^^\n-\n-error[E0621]: explicit lifetime required in the type of `dest`\n-  --> $DIR/missing-lifetimes-in-signature.rs:73:5\n-   |\n-LL |   fn bat<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ + 'a\n-   |                                    ------ help: add explicit lifetime `'a` to the type of `dest`: `&'a mut T`\n-...\n-LL | /     move || {\n-LL | |         *dest = g.get();\n-LL | |     }\n-   | |_____^ lifetime `'a` required\n-\n-error[E0309]: the parameter type `G` may not live long enough\n-  --> $DIR/missing-lifetimes-in-signature.rs:79:44\n-   |\n-LL | fn bak<'a, G, T>(g: G, dest: &'a mut T) -> impl FnOnce() + 'a\n-   |                                            ^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider adding an explicit lifetime bound `G: 'a`...\n-\n-error: aborting due to 8 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0261, E0309, E0621.\n-For more information about an error, try `rustc --explain E0261`.\n+For more information about this error, try `rustc --explain E0261`."}]}