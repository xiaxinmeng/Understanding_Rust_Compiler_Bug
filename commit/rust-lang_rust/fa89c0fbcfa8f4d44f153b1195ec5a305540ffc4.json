{"sha": "fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhODljMGZiY2ZhOGY0ZDQ0ZjE1M2IxMTk1ZWM1YTMwNTU0MGZmYzQ=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-03-29T02:22:34Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-03-29T02:39:23Z"}, "message": "add testcase for double-drop during Vec in-place collection", "tree": {"sha": "5ee709cce5bebac2402bdd5f90fba11bf0a6167a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ee709cce5bebac2402bdd5f90fba11bf0a6167a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4", "html_url": "https://github.com/rust-lang/rust/commit/fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb0e0db641bb3a929b0608ece1dd93a181725ff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0e0db641bb3a929b0608ece1dd93a181725ff4", "html_url": "https://github.com/rust-lang/rust/commit/cb0e0db641bb3a929b0608ece1dd93a181725ff4"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "b926c697d58abe739526f809d274ae6fa4be0fc2", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=fa89c0fbcfa8f4d44f153b1195ec5a305540ffc4", "patch": "@@ -1027,7 +1027,7 @@ fn test_from_iter_specialization_head_tail_drop() {\n }\n \n #[test]\n-fn test_from_iter_specialization_panic_drop() {\n+fn test_from_iter_specialization_panic_during_iteration_drops() {\n     let drop_count: Vec<_> = (0..=2).map(|_| Rc::new(())).collect();\n     let src: Vec<_> = drop_count.iter().cloned().collect();\n     let iter = src.into_iter();\n@@ -1050,6 +1050,42 @@ fn test_from_iter_specialization_panic_drop() {\n     );\n }\n \n+#[test]\n+fn test_from_iter_specialization_panic_during_drop_leaks() {\n+    static mut DROP_COUNTER: usize = 0;\n+\n+    #[derive(Debug)]\n+    enum Droppable {\n+        DroppedTwice(Box<i32>),\n+        PanicOnDrop,\n+    }\n+\n+    impl Drop for Droppable {\n+        fn drop(&mut self) {\n+            match self {\n+                Droppable::DroppedTwice(_) => {\n+                    unsafe {\n+                        DROP_COUNTER += 1;\n+                    }\n+                    println!(\"Dropping!\")\n+                }\n+                Droppable::PanicOnDrop => {\n+                    if !std::thread::panicking() {\n+                        panic!();\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    let _ = std::panic::catch_unwind(AssertUnwindSafe(|| {\n+        let v = vec![Droppable::DroppedTwice(Box::new(123)), Droppable::PanicOnDrop];\n+        let _ = v.into_iter().take(0).collect::<Vec<_>>();\n+    }));\n+\n+    assert_eq!(unsafe { DROP_COUNTER }, 1);\n+}\n+\n #[test]\n fn test_cow_from() {\n     let borrowed: &[_] = &[\"borrowed\", \"(slice)\"];"}]}