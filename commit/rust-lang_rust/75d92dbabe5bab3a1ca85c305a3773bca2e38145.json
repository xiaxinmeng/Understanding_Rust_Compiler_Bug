{"sha": "75d92dbabe5bab3a1ca85c305a3773bca2e38145", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZDkyZGJhYmU1YmFiM2ExY2E4NWMzMDVhMzc3M2JjYTJlMzgxNDU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-13T08:29:13Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-15T23:13:56Z"}, "message": "std: add tests for the _noguard lock/signal/wait methods on Mutex.", "tree": {"sha": "9eeb088c51a76bc3ffaa033cf600e245dbf7b0a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9eeb088c51a76bc3ffaa033cf600e245dbf7b0a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75d92dbabe5bab3a1ca85c305a3773bca2e38145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75d92dbabe5bab3a1ca85c305a3773bca2e38145", "html_url": "https://github.com/rust-lang/rust/commit/75d92dbabe5bab3a1ca85c305a3773bca2e38145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75d92dbabe5bab3a1ca85c305a3773bca2e38145/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76a59fd6e2d5c8c42193c047fd5eaba982d499f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/76a59fd6e2d5c8c42193c047fd5eaba982d499f7", "html_url": "https://github.com/rust-lang/rust/commit/76a59fd6e2d5c8c42193c047fd5eaba982d499f7"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "f0e76de789d9cd25f95a4bee69fc98446d4856c4", "filename": "src/libstd/unstable/mutex.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/75d92dbabe5bab3a1ca85c305a3773bca2e38145/src%2Flibstd%2Funstable%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d92dbabe5bab3a1ca85c305a3773bca2e38145/src%2Flibstd%2Funstable%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fmutex.rs?ref=75d92dbabe5bab3a1ca85c305a3773bca2e38145", "patch": "@@ -459,15 +459,15 @@ mod test {\n     use rt::thread::Thread;\n \n     #[test]\n-    fn somke_lock() {\n+    fn smoke_lock() {\n         static mut lock: Mutex = MUTEX_INIT;\n         unsafe {\n             let _guard = lock.lock();\n         }\n     }\n \n     #[test]\n-    fn somke_cond() {\n+    fn smoke_cond() {\n         static mut lock: Mutex = MUTEX_INIT;\n         unsafe {\n             let mut guard = lock.lock();\n@@ -482,6 +482,32 @@ mod test {\n         }\n     }\n \n+    #[test]\n+    fn smoke_lock_noguard() {\n+        static mut lock: Mutex = MUTEX_INIT;\n+        unsafe {\n+            lock.lock_noguard();\n+            lock.unlock_noguard();\n+        }\n+    }\n+\n+    #[test]\n+    fn smoke_cond_noguard() {\n+        static mut lock: Mutex = MUTEX_INIT;\n+        unsafe {\n+            lock.lock_noguard();\n+            let t = Thread::start(proc() {\n+                lock.lock_noguard();\n+                lock.signal_noguard();\n+                lock.unlock_noguard();\n+            });\n+            lock.wait_noguard();\n+            lock.unlock_noguard();\n+\n+            t.join();\n+        }\n+    }\n+\n     #[test]\n     fn destroy_immediately() {\n         unsafe {"}]}