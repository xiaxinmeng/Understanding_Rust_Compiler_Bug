{"sha": "059ed25a3eea97f370c190803318d5cb7885e1a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1OWVkMjVhM2VlYTk3ZjM3MGMxOTA4MDMzMThkNWNiNzg4NWUxYTk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-16T09:47:52Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-16T09:47:52Z"}, "message": "Fix crate display name dashes", "tree": {"sha": "7c4b36fc3623683380caf5bd6487e3f8aa57774a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c4b36fc3623683380caf5bd6487e3f8aa57774a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/059ed25a3eea97f370c190803318d5cb7885e1a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/059ed25a3eea97f370c190803318d5cb7885e1a9", "html_url": "https://github.com/rust-lang/rust/commit/059ed25a3eea97f370c190803318d5cb7885e1a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/059ed25a3eea97f370c190803318d5cb7885e1a9/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc226fa1918b8025b19cdf9d1f972f029e6a899", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc226fa1918b8025b19cdf9d1f972f029e6a899", "html_url": "https://github.com/rust-lang/rust/commit/6bc226fa1918b8025b19cdf9d1f972f029e6a899"}], "stats": {"total": 60, "additions": 40, "deletions": 20}, "files": [{"sha": "3464f43dfb916602e259ce53b82410550184f8ea", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=059ed25a3eea97f370c190803318d5cb7885e1a9", "patch": "@@ -64,7 +64,9 @@ fn with_single_file(db: &mut dyn SourceDatabaseExt, ra_fixture: &str) -> FileId\n         crate_graph.add_crate_root(\n             file_id,\n             meta.edition,\n-            meta.krate,\n+            meta.krate.map(|name| {\n+                CrateName::new(&name).expect(\"Fixture crate name should not contain dashes\")\n+            }),\n             meta.cfg,\n             meta.env,\n             Default::default(),\n@@ -124,7 +126,7 @@ fn with_files(db: &mut dyn SourceDatabaseExt, fixture: &str) -> Option<FilePosit\n             let crate_id = crate_graph.add_crate_root(\n                 file_id,\n                 meta.edition,\n-                Some(krate.clone()),\n+                Some(CrateName::new(&krate).unwrap()),\n                 meta.cfg,\n                 meta.env,\n                 Default::default(),"}, {"sha": "a6a831afae59e1c8a2d2e41f19b62226567af1b0", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=059ed25a3eea97f370c190803318d5cb7885e1a9", "patch": "@@ -83,6 +83,7 @@ pub struct CrateGraph {\n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct CrateId(pub u32);\n \n+#[derive(Debug, Clone, PartialEq, Eq)]\n pub struct CrateName(SmolStr);\n \n impl CrateName {\n@@ -101,6 +102,10 @@ impl CrateName {\n     pub fn normalize_dashes(name: &str) -> CrateName {\n         Self(SmolStr::new(name.replace('-', \"_\")))\n     }\n+\n+    pub fn get_name(&self) -> String {\n+        self.0.to_string()\n+    }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n@@ -110,7 +115,7 @@ pub struct CrateData {\n     /// The name to display to the end user.\n     /// This actual crate name can be different in a particular dependent crate\n     /// or may even be missing for some cases, such as a dummy crate for the code snippet.\n-    pub display_name: Option<String>,\n+    pub display_name: Option<CrateName>,\n     pub cfg_options: CfgOptions,\n     pub env: Env,\n     pub extern_source: ExternSource,\n@@ -150,7 +155,7 @@ impl CrateGraph {\n         &mut self,\n         file_id: FileId,\n         edition: Edition,\n-        display_name: Option<String>,\n+        display_name: Option<CrateName>,\n         cfg_options: CfgOptions,\n         env: Env,\n         extern_source: ExternSource,"}, {"sha": "87992854ae6e05ad94590bf1ee6521c3d4957092", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=059ed25a3eea97f370c190803318d5cb7885e1a9", "patch": "@@ -177,8 +177,13 @@ pub struct ModuleData {\n \n impl CrateDefMap {\n     pub(crate) fn crate_def_map_query(db: &impl DefDatabase, krate: CrateId) -> Arc<CrateDefMap> {\n-        let _p = profile(\"crate_def_map_query\")\n-            .detail(|| db.crate_graph()[krate].display_name.clone().unwrap_or_default());\n+        let _p = profile(\"crate_def_map_query\").detail(|| {\n+            db.crate_graph()[krate]\n+                .display_name\n+                .as_ref()\n+                .map(|name| name.get_name())\n+                .unwrap_or_default()\n+        });\n         let def_map = {\n             let edition = db.crate_graph()[krate].edition;\n             let mut modules: Arena<LocalModuleId, ModuleData> = Arena::default();"}, {"sha": "d1deca96b2dd2749b5e68392014d3a77c4ae3ebb", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=059ed25a3eea97f370c190803318d5cb7885e1a9", "patch": "@@ -94,17 +94,22 @@ fn definition_owner_name(db: &RootDatabase, def: &Definition) -> Option<String>\n \n fn determine_mod_path(db: &RootDatabase, def: &Definition) -> Option<String> {\n     let mod_path = def.module(db).map(|module| {\n-        once(db.crate_graph()[module.krate().into()].display_name.clone())\n-            .chain(\n-                module\n-                    .path_to_root(db)\n-                    .into_iter()\n-                    .rev()\n-                    .map(|it| it.name(db).map(|name| name.to_string())),\n-            )\n-            .chain(once(definition_owner_name(db, def)))\n-            .flatten()\n-            .join(\"::\")\n+        once(\n+            db.crate_graph()[module.krate().into()]\n+                .display_name\n+                .as_ref()\n+                .map(|name| name.get_name()),\n+        )\n+        .chain(\n+            module\n+                .path_to_root(db)\n+                .into_iter()\n+                .rev()\n+                .map(|it| it.name(db).map(|name| name.to_string())),\n+        )\n+        .chain(once(definition_owner_name(db, def)))\n+        .flatten()\n+        .join(\"::\")\n     });\n     mod_path // FIXME: replace dashes with underscores in crate display name\n }"}, {"sha": "2cf77a31f50da7474e3522c3126b401d03df3338", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=059ed25a3eea97f370c190803318d5cb7885e1a9", "patch": "@@ -109,7 +109,7 @@ impl MockAnalysis {\n                 let other_crate = crate_graph.add_crate_root(\n                     file_id,\n                     Edition2018,\n-                    Some(crate_name.to_owned()),\n+                    Some(CrateName::new(crate_name).unwrap()),\n                     cfg_options,\n                     Env::default(),\n                     Default::default(),"}, {"sha": "89787481342bb0bb8229df3556bd36489f0d66ab", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ed25a3eea97f370c190803318d5cb7885e1a9/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=059ed25a3eea97f370c190803318d5cb7885e1a9", "patch": "@@ -245,7 +245,10 @@ impl ProjectWorkspace {\n                         let crate_id = crate_graph.add_crate_root(\n                             file_id,\n                             Edition::Edition2018,\n-                            Some(krate.name(&sysroot).to_string()),\n+                            Some(\n+                                CrateName::new(krate.name(&sysroot))\n+                                    .expect(\"Sysroot crate names should not contain dashes\"),\n+                            ),\n                             cfg_options,\n                             env,\n                             extern_source,\n@@ -296,7 +299,7 @@ impl ProjectWorkspace {\n                             let crate_id = crate_graph.add_crate_root(\n                                 file_id,\n                                 edition,\n-                                Some(pkg.name(&cargo).to_string()),\n+                                Some(CrateName::normalize_dashes(pkg.name(&cargo))),\n                                 cfg_options,\n                                 env,\n                                 extern_source,"}]}