{"sha": "fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYzM2ZGU5NGUwMmU5YzdjNmZlYzA1YTJhZWEzMmJmYmRjMmYwZjg=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-25T10:25:57Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-25T10:25:57Z"}, "message": "Making str::from_cstr UTF-8 safe", "tree": {"sha": "6e6a16fed052b55b12aa8b986ab68c478ba4850c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e6a16fed052b55b12aa8b986ab68c478ba4850c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8", "html_url": "https://github.com/rust-lang/rust/commit/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a185b106471b4bc894393aecb31a23b71c8a4886", "url": "https://api.github.com/repos/rust-lang/rust/commits/a185b106471b4bc894393aecb31a23b71c8a4886", "html_url": "https://github.com/rust-lang/rust/commit/a185b106471b4bc894393aecb31a23b71c8a4886"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b8d9a1dea11a5a6c57cb97a5856edd32c5c701d7", "filename": "src/libcore/str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8", "patch": "@@ -217,16 +217,16 @@ Function: from_cstr\n Create a Rust string from a null-terminated C string\n */\n unsafe fn from_cstr(cstr: sbuf) -> str {\n-    let res = \"\";\n+    let res = [];\n     let start = cstr;\n     let curr = start;\n     let i = 0u;\n     while *curr != 0u8 {\n-        push_byte(res, *curr);\n+        vec::push(res, *curr);\n         i += 1u;\n         curr = ptr::offset(start, i);\n     }\n-    ret res;\n+    ret from_bytes(res);\n }\n \n /*"}]}