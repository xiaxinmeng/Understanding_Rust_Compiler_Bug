{"sha": "f97629160fe944cd9185ba180221d19f66126e2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NzYyOTE2MGZlOTQ0Y2Q5MTg1YmExODAyMjFkMTlmNjYxMjZlMmY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-30T09:17:25Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-01T02:35:37Z"}, "message": "Correctly subst the fn_sig so that we get the correct types\n\nOtherwise we get random TySelfs there, which means operations on\nRETURN_PLACE end up breaking down badly.", "tree": {"sha": "24f53db3dc478d971a1065f54f895b09d10fd970", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24f53db3dc478d971a1065f54f895b09d10fd970"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f97629160fe944cd9185ba180221d19f66126e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f97629160fe944cd9185ba180221d19f66126e2f", "html_url": "https://github.com/rust-lang/rust/commit/f97629160fe944cd9185ba180221d19f66126e2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f97629160fe944cd9185ba180221d19f66126e2f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef4f4864f166e4f148d5b903bc928a1bcb63ead5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4f4864f166e4f148d5b903bc928a1bcb63ead5", "html_url": "https://github.com/rust-lang/rust/commit/ef4f4864f166e4f148d5b903bc928a1bcb63ead5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "54aed69a315d2e2e38b10e9a9a7a610beef67156", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f97629160fe944cd9185ba180221d19f66126e2f/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f97629160fe944cd9185ba180221d19f66126e2f/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=f97629160fe944cd9185ba180221d19f66126e2f", "patch": "@@ -294,7 +294,7 @@ fn build_clone_shim<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n {\n     debug!(\"build_clone_shim(def_id={:?})\", def_id);\n \n-    let mut builder = CloneShimBuilder::new(tcx, def_id);\n+    let mut builder = CloneShimBuilder::new(tcx, def_id, self_ty);\n     let is_copy = !self_ty.moves_by_default(tcx, tcx.param_env(def_id), builder.span);\n \n     match self_ty.sty {\n@@ -327,8 +327,14 @@ struct CloneShimBuilder<'a, 'tcx: 'a> {\n }\n \n impl<'a, 'tcx> CloneShimBuilder<'a, 'tcx> {\n-    fn new(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Self {\n-        let sig = tcx.fn_sig(def_id);\n+    fn new(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+           def_id: DefId,\n+           self_ty: Ty<'tcx>) -> Self {\n+        // we must subst the self_ty because it's\n+        // otherwise going to be TySelf and we can't index\n+        // or access fields of a Place of type TySelf.\n+        let substs = tcx.mk_substs_trait(self_ty, &[]);\n+        let sig = tcx.fn_sig(def_id).subst(tcx, substs);\n         let sig = tcx.erase_late_bound_regions(&sig);\n         let span = tcx.def_span(def_id);\n "}]}