{"sha": "7280f6aa41edf77d2488511bd880ad1c509ec865", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyODBmNmFhNDFlZGY3N2QyNDg4NTExYmQ4ODBhZDFjNTA5ZWM4NjU=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-10-10T04:40:27Z"}, "committer": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-10-12T16:58:48Z"}, "message": "rustc_parse: correct span on cast expr with attrs", "tree": {"sha": "c707edf925d334fd1e0609c06c1dde46fe5cf3e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c707edf925d334fd1e0609c06c1dde46fe5cf3e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7280f6aa41edf77d2488511bd880ad1c509ec865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7280f6aa41edf77d2488511bd880ad1c509ec865", "html_url": "https://github.com/rust-lang/rust/commit/7280f6aa41edf77d2488511bd880ad1c509ec865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7280f6aa41edf77d2488511bd880ad1c509ec865/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38d911dfc55a7a1eea1c80139113ed2ff0151087", "url": "https://api.github.com/repos/rust-lang/rust/commits/38d911dfc55a7a1eea1c80139113ed2ff0151087", "html_url": "https://github.com/rust-lang/rust/commit/38d911dfc55a7a1eea1c80139113ed2ff0151087"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "649a86f219db4624d26336c2eeff3af0b9c9b0b5", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7280f6aa41edf77d2488511bd880ad1c509ec865/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7280f6aa41edf77d2488511bd880ad1c509ec865/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=7280f6aa41edf77d2488511bd880ad1c509ec865", "patch": "@@ -245,11 +245,7 @@ impl<'a> Parser<'a> {\n                 this.parse_assoc_expr_with(prec + prec_adjustment, LhsExpr::NotYetParsed)\n             })?;\n \n-            // Make sure that the span of the parent node is larger than the span of lhs and rhs,\n-            // including the attributes.\n-            let lhs_span =\n-                lhs.attrs.iter().find(|a| a.style == AttrStyle::Outer).map_or(lhs_span, |a| a.span);\n-            let span = lhs_span.to(rhs.span);\n+            let span = self.mk_expr_sp(&lhs, lhs_span, rhs.span);\n             lhs = match op {\n                 AssocOp::Add\n                 | AssocOp::Subtract\n@@ -570,7 +566,11 @@ impl<'a> Parser<'a> {\n         expr_kind: fn(P<Expr>, P<Ty>) -> ExprKind,\n     ) -> PResult<'a, P<Expr>> {\n         let mk_expr = |this: &mut Self, rhs: P<Ty>| {\n-            this.mk_expr(lhs_span.to(rhs.span), expr_kind(lhs, rhs), AttrVec::new())\n+            this.mk_expr(\n+                this.mk_expr_sp(&lhs, lhs_span, rhs.span),\n+                expr_kind(lhs, rhs),\n+                AttrVec::new(),\n+            )\n         };\n \n         // Save the state of the parser before parsing type normally, in case there is a\n@@ -2298,4 +2298,14 @@ impl<'a> Parser<'a> {\n     pub(super) fn mk_expr_err(&self, span: Span) -> P<Expr> {\n         self.mk_expr(span, ExprKind::Err, AttrVec::new())\n     }\n+\n+    /// Create expression span ensuring the span of the parent node\n+    /// is larger than the span of lhs and rhs, including the attributes.\n+    fn mk_expr_sp(&self, lhs: &P<Expr>, lhs_span: Span, rhs_span: Span) -> Span {\n+        lhs.attrs\n+            .iter()\n+            .find(|a| a.style == AttrStyle::Outer)\n+            .map_or(lhs_span, |a| a.span)\n+            .to(rhs_span)\n+    }\n }"}]}