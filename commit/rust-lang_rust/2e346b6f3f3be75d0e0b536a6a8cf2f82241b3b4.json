{"sha": "2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "node_id": "C_kwDOAAsO6NoAKDJlMzQ2YjZmM2YzYmU3NWQwZTBiNTM2YTZhOGNmMmY4MjI0MWIzYjQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-21T18:04:39Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-04T18:06:07Z"}, "message": "Even more tests", "tree": {"sha": "efefda887cbbeb7e15c70739f050d0af516176e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efefda887cbbeb7e15c70739f050d0af516176e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "html_url": "https://github.com/rust-lang/rust/commit/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d44f9b4e27bbb83108cde6e3dfffbeca7d4e71e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d44f9b4e27bbb83108cde6e3dfffbeca7d4e71e", "html_url": "https://github.com/rust-lang/rust/commit/9d44f9b4e27bbb83108cde6e3dfffbeca7d4e71e"}], "stats": {"total": 280, "additions": 280, "deletions": 0}, "files": [{"sha": "3b506c7e7ec13865f64131e738dc19204d6bbf47", "filename": "tests/ui/dropck/explicit-drop-bounds.bad1.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.bad1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.bad1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.bad1.stderr?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,35 @@\n+error[E0277]: the trait bound `T: Copy` is not satisfied\n+  --> $DIR/explicit-drop-bounds.rs:27:18\n+   |\n+LL | impl<T> Drop for DropMe<T>\n+   |                  ^^^^^^^^^ the trait `Copy` is not implemented for `T`\n+   |\n+note: required by a bound in `DropMe`\n+  --> $DIR/explicit-drop-bounds.rs:7:18\n+   |\n+LL | struct DropMe<T: Copy>(T);\n+   |                  ^^^^ required by this bound in `DropMe`\n+help: consider further restricting type parameter `T`\n+   |\n+LL |     [T; 1]: Copy, T: std::marker::Copy // But `[T; 1]: Copy` does not imply `T: Copy`\n+   |                 ~~~~~~~~~~~~~~~~~~~~~~\n+\n+error[E0277]: the trait bound `T: Copy` is not satisfied\n+  --> $DIR/explicit-drop-bounds.rs:32:13\n+   |\n+LL |     fn drop(&mut self) {}\n+   |             ^^^^^^^^^ the trait `Copy` is not implemented for `T`\n+   |\n+note: required by a bound in `DropMe`\n+  --> $DIR/explicit-drop-bounds.rs:7:18\n+   |\n+LL | struct DropMe<T: Copy>(T);\n+   |                  ^^^^ required by this bound in `DropMe`\n+help: consider further restricting type parameter `T`\n+   |\n+LL |     [T; 1]: Copy, T: std::marker::Copy // But `[T; 1]: Copy` does not imply `T: Copy`\n+   |                 ~~~~~~~~~~~~~~~~~~~~~~\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "832af3e521a9dbfbd1cd6e94466f5ef9d6b45bfc", "filename": "tests/ui/dropck/explicit-drop-bounds.bad2.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.bad2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.bad2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.bad2.stderr?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,35 @@\n+error[E0277]: the trait bound `T: Copy` is not satisfied\n+  --> $DIR/explicit-drop-bounds.rs:37:18\n+   |\n+LL | impl<T> Drop for DropMe<T>\n+   |                  ^^^^^^^^^ the trait `Copy` is not implemented for `T`\n+   |\n+note: required by a bound in `DropMe`\n+  --> $DIR/explicit-drop-bounds.rs:7:18\n+   |\n+LL | struct DropMe<T: Copy>(T);\n+   |                  ^^^^ required by this bound in `DropMe`\n+help: consider restricting type parameter `T`\n+   |\n+LL | impl<T: std::marker::Copy> Drop for DropMe<T>\n+   |       +++++++++++++++++++\n+\n+error[E0277]: the trait bound `T: Copy` is not satisfied\n+  --> $DIR/explicit-drop-bounds.rs:40:13\n+   |\n+LL |     fn drop(&mut self) {}\n+   |             ^^^^^^^^^ the trait `Copy` is not implemented for `T`\n+   |\n+note: required by a bound in `DropMe`\n+  --> $DIR/explicit-drop-bounds.rs:7:18\n+   |\n+LL | struct DropMe<T: Copy>(T);\n+   |                  ^^^^ required by this bound in `DropMe`\n+help: consider restricting type parameter `T`\n+   |\n+LL | impl<T: std::marker::Copy> Drop for DropMe<T>\n+   |       +++++++++++++++++++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "ab6f33c09994e443c515b4b3e90df8683bd523ec", "filename": "tests/ui/dropck/explicit-drop-bounds.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fexplicit-drop-bounds.rs?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,44 @@\n+// revisions: good1 good2 bad1 bad2\n+//[good1] check-pass\n+//[good2] check-pass\n+\n+use std::ops::Drop;\n+\n+struct DropMe<T: Copy>(T);\n+\n+#[cfg(good1)]\n+impl<T> Drop for DropMe<T>\n+where\n+    T: Copy + Clone,\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(good2)]\n+impl<T> Drop for DropMe<T>\n+where\n+    T: Copy,\n+    [T; 1]: Copy, // Trivial bound implied by `T: Copy`\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(bad1)]\n+impl<T> Drop for DropMe<T>\n+//[bad1]~^ ERROR the trait bound `T: Copy` is not satisfied\n+where\n+    [T; 1]: Copy, // But `[T; 1]: Copy` does not imply `T: Copy`\n+{\n+    fn drop(&mut self) {}\n+    //[bad1]~^ ERROR the trait bound `T: Copy` is not satisfied\n+}\n+\n+#[cfg(bad2)]\n+impl<T> Drop for DropMe<T>\n+//[bad2]~^ ERROR the trait bound `T: Copy` is not satisfied\n+{\n+    fn drop(&mut self) {}\n+    //[bad2]~^ ERROR the trait bound `T: Copy` is not satisfied\n+}\n+\n+fn main() {}"}, {"sha": "bf6d70e7d3758d3808465894cee248400aa74887", "filename": "tests/ui/dropck/explicit-implied-outlives.bad1.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.bad1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.bad1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.bad1.stderr?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,15 @@\n+error[E0367]: `Drop` impl requires `T: 'static` but the struct it is implemented for does not\n+  --> $DIR/explicit-implied-outlives.rs:28:8\n+   |\n+LL |     T: 'static,\n+   |        ^^^^^^^\n+   |\n+note: the implementor must specify the same requirement\n+  --> $DIR/explicit-implied-outlives.rs:7:1\n+   |\n+LL | struct DropMe<'a, T>(&'a T);\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0367`."}, {"sha": "27a15170bddb53490a8fcb45a6d7bcbab2623527", "filename": "tests/ui/dropck/explicit-implied-outlives.bad2.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.bad2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.bad2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.bad2.stderr?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,15 @@\n+error[E0367]: `Drop` impl requires `'a: 'static` but the struct it is implemented for does not\n+  --> $DIR/explicit-implied-outlives.rs:37:9\n+   |\n+LL |     'a: 'static,\n+   |         ^^^^^^^\n+   |\n+note: the implementor must specify the same requirement\n+  --> $DIR/explicit-implied-outlives.rs:7:1\n+   |\n+LL | struct DropMe<'a, T>(&'a T);\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0367`."}, {"sha": "fa446591f3dc4e167db68ed96036d0a3f7b816a7", "filename": "tests/ui/dropck/explicit-implied-outlives.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Fexplicit-implied-outlives.rs?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,43 @@\n+// revisions: good1 good2 bad1 bad2\n+//[good1] check-pass\n+//[good2] check-pass\n+\n+use std::ops::Drop;\n+\n+struct DropMe<'a, T>(&'a T);\n+\n+#[cfg(good1)]\n+impl<'a, T> Drop for DropMe<'a, T>\n+where\n+    T: 'a, // Implied by struct, explicit on impl\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(good2)]\n+impl<'a, T> Drop for DropMe<'a, T>\n+where\n+    'static: 'a, // Trivial bound\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(bad1)]\n+impl<'a, T> Drop for DropMe<'a, T>\n+where\n+    T: 'static,\n+    //[bad1]~^ ERROR `Drop` impl requires `T: 'static`\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(bad2)]\n+impl<'a, T> Drop for DropMe<'a, T>\n+where\n+    'a: 'static,\n+    //[bad2]~^ ERROR `Drop` impl requires `'a: 'static`\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "87154e25d4091fbf2f539dc3682ba8d96c33ef53", "filename": "tests/ui/dropck/transitive-outlives-2.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftransitive-outlives-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftransitive-outlives-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Ftransitive-outlives-2.rs?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,18 @@\n+// check-pass\n+\n+use std::marker::PhantomData;\n+use std::ops::Drop;\n+\n+// a >= b >= c >= a implies a = b = c\n+struct DropMe<'a: 'b, 'b: 'c, 'c: 'a>(\n+    PhantomData<&'a ()>,\n+    PhantomData<&'b ()>,\n+    PhantomData<&'c ()>,\n+);\n+\n+// a >= b, a >= c, b >= a, c >= a implies a = b = c\n+impl<'a: 'b + 'c, 'b: 'a, 'c: 'a> Drop for DropMe<'a, 'b, 'c> {\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "da5088b27b414346ff43f3fe46a5558cd29b1639", "filename": "tests/ui/dropck/transitive-outlives.bad.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftransitive-outlives.bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftransitive-outlives.bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Ftransitive-outlives.bad.stderr?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,15 @@\n+error[E0367]: `Drop` impl requires `'a: 'c` but the struct it is implemented for does not\n+  --> $DIR/transitive-outlives.rs:20:9\n+   |\n+LL |     'a: 'c,\n+   |         ^^\n+   |\n+note: the implementor must specify the same requirement\n+  --> $DIR/transitive-outlives.rs:7:1\n+   |\n+LL | struct DropMe<'a, 'b: 'a, 'c: 'b>(PhantomData<&'a ()>, PhantomData<&'b ()>, PhantomData<&'c ()>);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0367`."}, {"sha": "d071664abdeb6b07d15750585ed7aa7283494d0f", "filename": "tests/ui/dropck/transitive-outlives.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftransitive-outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftransitive-outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Ftransitive-outlives.rs?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,26 @@\n+// revisions: good bad\n+//[good] check-pass\n+\n+use std::marker::PhantomData;\n+use std::ops::Drop;\n+\n+struct DropMe<'a, 'b: 'a, 'c: 'b>(PhantomData<&'a ()>, PhantomData<&'b ()>, PhantomData<&'c ()>);\n+\n+#[cfg(good)]\n+impl<'a, 'b, 'c> Drop for DropMe<'a, 'b, 'c>\n+where\n+    'c: 'a,\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(bad)]\n+impl<'a, 'b, 'c> Drop for DropMe<'a, 'b, 'c>\n+where\n+    'a: 'c,\n+    //[bad]~^ ERROR `Drop` impl requires `'a: 'c`\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "a8f5d2c354bc979799634c2eb6e078fbe5acb944", "filename": "tests/ui/dropck/trivial-impl-bounds.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftrivial-impl-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4/tests%2Fui%2Fdropck%2Ftrivial-impl-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdropck%2Ftrivial-impl-bounds.rs?ref=2e346b6f3f3be75d0e0b536a6a8cf2f82241b3b4", "patch": "@@ -0,0 +1,34 @@\n+// revisions: good1 good2 good3\n+// check-pass\n+\n+use std::ops::Drop;\n+\n+struct Foo;\n+\n+const X: usize = 1;\n+\n+#[cfg(good1)]\n+impl Drop for Foo\n+where\n+    [(); X]:, // Trivial WF bound\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(good2)]\n+impl Drop for Foo\n+where\n+    for<'a> &'a (): Copy, // Trivial trait bound\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+#[cfg(good3)]\n+impl Drop for Foo\n+where\n+    for<'a> &'a (): 'a, // Trivial outlives bound\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}]}