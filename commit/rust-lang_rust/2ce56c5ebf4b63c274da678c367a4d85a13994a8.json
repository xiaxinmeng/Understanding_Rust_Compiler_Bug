{"sha": "2ce56c5ebf4b63c274da678c367a4d85a13994a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZTU2YzVlYmY0YjYzYzI3NGRhNjc4YzM2N2E0ZDg1YTEzOTk0YTg=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-31T13:59:42Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-31T14:13:42Z"}, "message": "Added warning/error for if-let-chain ambiguity.\n\nWith eRFC 2497, previously accepted ambigious syntax regarding use of\n`&&` and `||` in if-let and while-let statements should now warn\nor error depending on the edition.\n\nThis commit takes a naive approach to detecting ambigious use of `&&`\nor `||` and will probably need fine tuned to handle all cases.", "tree": {"sha": "e9cb2588f31e1d4a79f5008ebabc35f3d5566f4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9cb2588f31e1d4a79f5008ebabc35f3d5566f4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ce56c5ebf4b63c274da678c367a4d85a13994a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAluJTRYACgkQAXYLT59T\n8VTF2Q//duyG3MuWzJj+AfLyR3E3IOgqZtRq7Omt+zlErryCsynVnx9UzDvpUt0K\n2QyEr1ZB2s4JMLECf2iWlcEphriBHT+4IZLfpjAygd/SPcfiEDclyw6x2s7dNLAM\nDiWFRFDatIBG+U/8kDLOPpbt+59cPJvTLKTHkr4vW5Vt57wYP6oJ2ERxjO4dNwcU\nDJSXXiFzRQT4P5J85G3bLQ17AVQI2v6lMt4ZMdYihGK/OzXGrjK1c/BJ9eVflK8y\nuzw1leDFD96WE4g5KyNzioQypA8OvjKIyfQNHlNyFhSz+PzPp+cNbe8jgLCr1pUW\nAYkrBUdOmFf32c4K+6jx7kLaoaI6IVlZNDzrkP5T3JJP9lTxXOAN4e8BBvohpx+p\nPT+qwx0LiLweJr+z+DfI6gmh3Lr9r8jt/bNufLXbEoew6mZ3m67DNSKYsBEEXUCl\nI6bqXYJ+NdfIXRuGjbnIDHoxOgk4b+yWf3tbZGkF9Ul/pGTn+NDomvVyVVHRJS8m\nIXctHWQo8XAUs0YWD7Uuf0a5M77Gi/NbVxCb/3CXZDoNBKXd2MnBK4EvaKjid/Qj\nq8MaCZiu/gxczZiNAwzhA+K1wT2UIZbxdnoJag8yxg1fAzpwgQBwsi/mCf6+V3AT\nxVS7OvZnAkDZ8UNwkzm4aCPawJm5jACMnJWCc97bCV01q6oNWLc=\n=He24\n-----END PGP SIGNATURE-----", "payload": "tree e9cb2588f31e1d4a79f5008ebabc35f3d5566f4b\nparent 685fb543174f8f2cadc38ec0b2c6df635eb1c087\nauthor David Wood <david@davidtw.co> 1535723982 +0200\ncommitter David Wood <david@davidtw.co> 1535724822 +0200\n\nAdded warning/error for if-let-chain ambiguity.\n\nWith eRFC 2497, previously accepted ambigious syntax regarding use of\n`&&` and `||` in if-let and while-let statements should now warn\nor error depending on the edition.\n\nThis commit takes a naive approach to detecting ambigious use of `&&`\nor `||` and will probably need fine tuned to handle all cases.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce56c5ebf4b63c274da678c367a4d85a13994a8", "html_url": "https://github.com/rust-lang/rust/commit/2ce56c5ebf4b63c274da678c367a4d85a13994a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ce56c5ebf4b63c274da678c367a4d85a13994a8/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "685fb543174f8f2cadc38ec0b2c6df635eb1c087", "url": "https://api.github.com/repos/rust-lang/rust/commits/685fb543174f8f2cadc38ec0b2c6df635eb1c087", "html_url": "https://github.com/rust-lang/rust/commit/685fb543174f8f2cadc38ec0b2c6df635eb1c087"}], "stats": {"total": 250, "additions": 250, "deletions": 0}, "files": [{"sha": "f0e6dfb8775f2a5a6f06192b8df30221bbdb6fbf", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2ce56c5ebf4b63c274da678c367a4d85a13994a8", "patch": "@@ -3327,6 +3327,8 @@ impl<'a> Parser<'a> {\n         let pats = self.parse_pats()?;\n         self.expect(&token::Eq)?;\n         let expr = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n+        self.while_if_let_ambiguity(&expr);\n+\n         let thn = self.parse_block()?;\n         let (hi, els) = if self.eat_keyword(keywords::Else) {\n             let expr = self.parse_else_expr()?;\n@@ -3337,6 +3339,56 @@ impl<'a> Parser<'a> {\n         Ok(self.mk_expr(lo.to(hi), ExprKind::IfLet(pats, expr, thn, els), attrs))\n     }\n \n+    /// With eRFC 2497, we need to check whether an expression is ambigious and warn or error\n+    /// depending on the edition, this function handles that.\n+    fn while_if_let_ambiguity(&self, expr: &P<Expr>) {\n+        if let Some((span, op_kind)) = self.while_if_let_expr_ambiguity(&expr) {\n+            let message = format!(\"ambigious use of `{}`\", op_kind.to_string());\n+            let mut err = if self.span.edition() >= Edition::Edition2018 {\n+                self.diagnostic().struct_span_err(span, &message)\n+            } else {\n+                self.diagnostic().struct_span_warn(span, &message)\n+            };\n+\n+            let note = if self.span.edition() >= Edition::Edition2018 {\n+                \"This will be a error until the `let_chains` feature is stabilized.\"\n+            } else {\n+                \"This will be a error in Rust 2018 until the `let_chains` feature is stabilized.\"\n+            };\n+            err.note(note);\n+\n+            if let Ok(snippet) = self.sess.source_map().span_to_snippet(span) {\n+                err.span_suggestion(\n+                    span, \"consider adding parenthesis\", format!(\"({})\", snippet),\n+                );\n+            }\n+\n+            err.emit();\n+        }\n+    }\n+\n+    /// With eRFC 2497 adding if-let chains, there is a requirement that the parsing of\n+    /// `&&` and `||` in a if-let statement be unambigious. This function returns a span and\n+    /// a `BinOpKind` (either `&&` or `||` depending on what was ambigious) if it is determined\n+    /// that the current expression parsed is ambigious and will break in future.\n+    fn while_if_let_expr_ambiguity(&self, expr: &P<Expr>) -> Option<(Span, BinOpKind)> {\n+        debug!(\"while_if_let_expr_ambiguity: expr.node: {:?}\", expr.node);\n+        match &expr.node {\n+            ExprKind::Binary(op, _, _) if op.node == BinOpKind::And || op.node == BinOpKind::Or => {\n+                Some((expr.span, op.node))\n+            },\n+            ExprKind::Range(ref lhs, ref rhs, _) => {\n+                let lhs_ambigious = lhs.as_ref()\n+                    .and_then(|lhs| self.while_if_let_expr_ambiguity(lhs));\n+                let rhs_ambigious = rhs.as_ref()\n+                    .and_then(|rhs| self.while_if_let_expr_ambiguity(rhs));\n+\n+                lhs_ambigious.or(rhs_ambigious)\n+            }\n+            _ => None,\n+        }\n+    }\n+\n     // `move |args| expr`\n     fn parse_lambda_expr(&mut self,\n                              attrs: ThinVec<Attribute>)\n@@ -3437,6 +3489,7 @@ impl<'a> Parser<'a> {\n         let pats = self.parse_pats()?;\n         self.expect(&token::Eq)?;\n         let expr = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n+        self.while_if_let_ambiguity(&expr);\n         let (iattrs, body) = self.parse_inner_attrs_and_block()?;\n         attrs.extend(iattrs);\n         let span = span_lo.to(body.span);"}, {"sha": "06ce23eda7d98e23a8433b318628fd81cfd7c923", "filename": "src/test/ui/rfc-2497-if-let-chains/syntax-ambiguity-2015.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2015.rs?ref=2ce56c5ebf4b63c274da678c367a4d85a13994a8", "patch": "@@ -0,0 +1,50 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// edition:2015\n+// compile-pass\n+\n+// Enabling `ireffutable_let_patterns` isn't necessary for what this tests, but it makes coming up\n+// with examples easier.\n+#![feature(irrefutable_let_patterns)]\n+\n+#[allow(irrefutable_let_patterns)]\n+fn main() {\n+    use std::ops::Range;\n+\n+    if let Range { start: _, end: _ } = true..true && false { }\n+    //~^ WARN error in 2018\n+\n+    if let Range { start: _, end: _ } = true..true || false { }\n+    //~^ WARN error in 2018\n+\n+    while let Range { start: _, end: _ } = true..true && false { }\n+    //~^ WARN error in 2018\n+\n+    while let Range { start: _, end: _ } = true..true || false { }\n+    //~^ WARN error in 2018\n+\n+    if let true = false && false { }\n+    //~^ WARN error in 2018\n+\n+    while let true = (1 == 2) && false { }\n+    //~^ WARN error in 2018\n+\n+    // The following cases are not an error as parenthesis are used to\n+    // clarify intent:\n+\n+    if let Range { start: _, end: _ } = true..(true || false) { }\n+\n+    if let Range { start: _, end: _ } = true..(true && false) { }\n+\n+    while let Range { start: _, end: _ } = true..(true || false) { }\n+\n+    while let Range { start: _, end: _ } = true..(true && false) { }\n+}"}, {"sha": "a4c3be62ec4c7342263c1a8bb31fa8f00bd709fd", "filename": "src/test/ui/rfc-2497-if-let-chains/syntax-ambiguity-2015.stderr", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2015.stderr?ref=2ce56c5ebf4b63c274da678c367a4d85a13994a8", "patch": "@@ -0,0 +1,48 @@\n+warning: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2015.rs:22:47\n+   |\n+LL |     if let Range { start: _, end: _ } = true..true && false { }\n+   |                                               ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true && false)`\n+   |\n+   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.\n+\n+warning: ambigious use of `||`\n+  --> $DIR/syntax-ambiguity-2015.rs:25:47\n+   |\n+LL |     if let Range { start: _, end: _ } = true..true || false { }\n+   |                                               ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true || false)`\n+   |\n+   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.\n+\n+warning: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2015.rs:28:50\n+   |\n+LL |     while let Range { start: _, end: _ } = true..true && false { }\n+   |                                                  ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true && false)`\n+   |\n+   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.\n+\n+warning: ambigious use of `||`\n+  --> $DIR/syntax-ambiguity-2015.rs:31:50\n+   |\n+LL |     while let Range { start: _, end: _ } = true..true || false { }\n+   |                                                  ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true || false)`\n+   |\n+   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.\n+\n+warning: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2015.rs:34:19\n+   |\n+LL |     if let true = false && false { }\n+   |                   ^^^^^^^^^^^^^^ help: consider adding parenthesis: `(false && false)`\n+   |\n+   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.\n+\n+warning: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2015.rs:37:22\n+   |\n+LL |     while let true = (1 == 2) && false { }\n+   |                      ^^^^^^^^^^^^^^^^^ help: consider adding parenthesis: `((1 == 2) && false)`\n+   |\n+   = note: This will be a error in Rust 2018 until the `let_chains` feature is stabilized.\n+"}, {"sha": "baa90bcf8e97102faca8042f9f09b30a485b580a", "filename": "src/test/ui/rfc-2497-if-let-chains/syntax-ambiguity-2018.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2018.rs?ref=2ce56c5ebf4b63c274da678c367a4d85a13994a8", "patch": "@@ -0,0 +1,49 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// edition:2018\n+\n+// Enabling `ireffutable_let_patterns` isn't necessary for what this tests, but it makes coming up\n+// with examples easier.\n+#![feature(irrefutable_let_patterns)]\n+\n+#[allow(irrefutable_let_patterns)]\n+fn main() {\n+    use std::ops::Range;\n+\n+    if let Range { start: _, end: _ } = true..true && false { }\n+    //~^ ERROR ambigious use of `&&`\n+\n+    if let Range { start: _, end: _ } = true..true || false { }\n+    //~^ ERROR ambigious use of `||`\n+\n+    while let Range { start: _, end: _ } = true..true && false { }\n+    //~^ ERROR ambigious use of `&&`\n+\n+    while let Range { start: _, end: _ } = true..true || false { }\n+    //~^ ERROR ambigious use of `||`\n+\n+    if let true = false && false { }\n+    //~^ ERROR ambigious use of `&&`\n+\n+    while let true = (1 == 2) && false { }\n+    //~^ ERROR ambigious use of `&&`\n+\n+    // The following cases are not an error as parenthesis are used to\n+    // clarify intent:\n+\n+    if let Range { start: _, end: _ } = true..(true || false) { }\n+\n+    if let Range { start: _, end: _ } = true..(true && false) { }\n+\n+    while let Range { start: _, end: _ } = true..(true || false) { }\n+\n+    while let Range { start: _, end: _ } = true..(true && false) { }\n+}"}, {"sha": "c472a8904bf65e65e2da3b0533d239c52ec893ef", "filename": "src/test/ui/rfc-2497-if-let-chains/syntax-ambiguity-2018.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ce56c5ebf4b63c274da678c367a4d85a13994a8/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fsyntax-ambiguity-2018.stderr?ref=2ce56c5ebf4b63c274da678c367a4d85a13994a8", "patch": "@@ -0,0 +1,50 @@\n+error: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2018.rs:21:47\n+   |\n+LL |     if let Range { start: _, end: _ } = true..true && false { }\n+   |                                               ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true && false)`\n+   |\n+   = note: This will be a error until the `let_chains` feature is stabilized.\n+\n+error: ambigious use of `||`\n+  --> $DIR/syntax-ambiguity-2018.rs:24:47\n+   |\n+LL |     if let Range { start: _, end: _ } = true..true || false { }\n+   |                                               ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true || false)`\n+   |\n+   = note: This will be a error until the `let_chains` feature is stabilized.\n+\n+error: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2018.rs:27:50\n+   |\n+LL |     while let Range { start: _, end: _ } = true..true && false { }\n+   |                                                  ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true && false)`\n+   |\n+   = note: This will be a error until the `let_chains` feature is stabilized.\n+\n+error: ambigious use of `||`\n+  --> $DIR/syntax-ambiguity-2018.rs:30:50\n+   |\n+LL |     while let Range { start: _, end: _ } = true..true || false { }\n+   |                                                  ^^^^^^^^^^^^^ help: consider adding parenthesis: `(true || false)`\n+   |\n+   = note: This will be a error until the `let_chains` feature is stabilized.\n+\n+error: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2018.rs:33:19\n+   |\n+LL |     if let true = false && false { }\n+   |                   ^^^^^^^^^^^^^^ help: consider adding parenthesis: `(false && false)`\n+   |\n+   = note: This will be a error until the `let_chains` feature is stabilized.\n+\n+error: ambigious use of `&&`\n+  --> $DIR/syntax-ambiguity-2018.rs:36:22\n+   |\n+LL |     while let true = (1 == 2) && false { }\n+   |                      ^^^^^^^^^^^^^^^^^ help: consider adding parenthesis: `((1 == 2) && false)`\n+   |\n+   = note: This will be a error until the `let_chains` feature is stabilized.\n+\n+error: aborting due to 6 previous errors\n+"}]}