{"sha": "e629381653bb3579f0cea0b256e391edef5e8dbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MjkzODE2NTNiYjM1NzlmMGNlYTBiMjU2ZTM5MWVkZWY1ZThkYmI=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-06-22T23:41:34Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-06-22T23:41:34Z"}, "message": "chore(rustdoc): Remove unused impl block", "tree": {"sha": "e866e696e844882675611ac7a6a38d45b39803fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e866e696e844882675611ac7a6a38d45b39803fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e629381653bb3579f0cea0b256e391edef5e8dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e629381653bb3579f0cea0b256e391edef5e8dbb", "html_url": "https://github.com/rust-lang/rust/commit/e629381653bb3579f0cea0b256e391edef5e8dbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e629381653bb3579f0cea0b256e391edef5e8dbb/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f67585d494fd92347e4954a240ddde14dcbd711b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f67585d494fd92347e4954a240ddde14dcbd711b", "html_url": "https://github.com/rust-lang/rust/commit/f67585d494fd92347e4954a240ddde14dcbd711b"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "8e1db449e772d2e637e765ba96e4d550d76385d3", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e629381653bb3579f0cea0b256e391edef5e8dbb/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e629381653bb3579f0cea0b256e391edef5e8dbb/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=e629381653bb3579f0cea0b256e391edef5e8dbb", "patch": "@@ -101,28 +101,6 @@ crate struct RenderType {\n     generics: Option<Vec<Generic>>,\n }\n \n-impl Serialize for RenderType {\n-    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n-    where\n-        S: Serializer,\n-    {\n-        if let Some(name) = &self.name {\n-            let mut seq = serializer.serialize_seq(None)?;\n-            if let Some(id) = self.idx {\n-                seq.serialize_element(&id)?;\n-            } else {\n-                seq.serialize_element(&name)?;\n-            }\n-            if let Some(generics) = &self.generics {\n-                seq.serialize_element(&generics)?;\n-            }\n-            seq.end()\n-        } else {\n-            serializer.serialize_none()\n-        }\n-    }\n-}\n-\n /// A type used for the search index.\n #[derive(Debug)]\n crate struct Generic {"}]}