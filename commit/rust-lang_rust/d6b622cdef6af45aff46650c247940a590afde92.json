{"sha": "d6b622cdef6af45aff46650c247940a590afde92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YjYyMmNkZWY2YWY0NWFmZjQ2NjUwYzI0Nzk0MGE1OTBhZmRlOTI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-16T17:04:07Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-16T17:38:19Z"}, "message": "Some cleanup", "tree": {"sha": "65cc423528e35dd578e841ed0d88640c45c58b9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65cc423528e35dd578e841ed0d88640c45c58b9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6b622cdef6af45aff46650c247940a590afde92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b622cdef6af45aff46650c247940a590afde92", "html_url": "https://github.com/rust-lang/rust/commit/d6b622cdef6af45aff46650c247940a590afde92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6b622cdef6af45aff46650c247940a590afde92/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d655749aaeb31461f9af923bbf0b36d219cff343", "url": "https://api.github.com/repos/rust-lang/rust/commits/d655749aaeb31461f9af923bbf0b36d219cff343", "html_url": "https://github.com/rust-lang/rust/commit/d655749aaeb31461f9af923bbf0b36d219cff343"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "3c00e3b64d4d1ad80d963e909fc4d37ed4d7c31f", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d6b622cdef6af45aff46650c247940a590afde92/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b622cdef6af45aff46650c247940a590afde92/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=d6b622cdef6af45aff46650c247940a590afde92", "patch": "@@ -20,18 +20,20 @@ fn expand_rules(rules: &[crate::Rule], input: &tt::Subtree) -> ExpandResult<tt::\n     for rule in rules {\n         let ExpandResult(new_match, bindings_err) = matcher::match_(&rule.lhs, input);\n         if bindings_err.is_none() {\n-            // if we find a rule that applies without errors, we're done\n+            // If we find a rule that applies without errors, we're done.\n+            // Unconditionally returning the transcription here makes the\n+            // `test_repeat_bad_var` test fail.\n             let ExpandResult(res, transcribe_err) =\n                 transcriber::transcribe(&rule.rhs, &new_match.bindings);\n             if transcribe_err.is_none() {\n                 return ExpandResult::ok(res);\n             }\n         }\n-        // use the rule if we matched more tokens, or had fewer patterns left\n+        // Use the rule if we matched more tokens, or had fewer patterns left,\n+        // or had no error\n         if let Some((prev_match, _)) = &match_ {\n-            if new_match.unmatched_tokens < prev_match.unmatched_tokens\n-                || new_match.unmatched_tokens == prev_match.unmatched_tokens\n-                    && new_match.unmatched_patterns < prev_match.unmatched_patterns\n+            if (new_match.unmatched_tokens, new_match.unmatched_patterns)\n+                < (prev_match.unmatched_tokens, prev_match.unmatched_patterns)\n                 || err.is_some() && bindings_err.is_none()\n             {\n                 match_ = Some((new_match, rule));"}]}