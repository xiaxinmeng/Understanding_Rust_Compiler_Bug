{"sha": "521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMWY4MmViMTJmOTM5ZmE5NWFhMDZhZDE2NDlmNGFhMTQyMGRkZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-08T22:26:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-08T22:26:16Z"}, "message": "Auto merge of #26079 - eefriedman:emit-closure, r=nrc\n\nThis isn't a very clean fix, but I'm not sure what a better fix would look\r\nlike.\r\n\r\nFixes #24779.", "tree": {"sha": "90dda17309953ee0dc59cf1798807459007772a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90dda17309953ee0dc59cf1798807459007772a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "html_url": "https://github.com/rust-lang/rust/commit/521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/521f82eb12f939fa95aa06ad1649f4aa1420ddfd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02c33b690b9270ef7d26412fdf4a8498acfea1a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/02c33b690b9270ef7d26412fdf4a8498acfea1a7", "html_url": "https://github.com/rust-lang/rust/commit/02c33b690b9270ef7d26412fdf4a8498acfea1a7"}, {"sha": "2442f830cbe6317a9376a04ea4486923e32e4dd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2442f830cbe6317a9376a04ea4486923e32e4dd4", "html_url": "https://github.com/rust-lang/rust/commit/2442f830cbe6317a9376a04ea4486923e32e4dd4"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "e9804a11f2c8cd7efc61718d8e5814fbeed44c75", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/521f82eb12f939fa95aa06ad1649f4aa1420ddfd/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521f82eb12f939fa95aa06ad1649f4aa1420ddfd/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "patch": "@@ -139,9 +139,12 @@ pub fn trans_into<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                 // have different types.\n                 let lldest = PointerCast(bcx, lldest, val_ty(global));\n                 memcpy_ty(bcx, lldest, global, expr_ty_adjusted(bcx, expr));\n+                return bcx;\n             }\n-            // Don't do anything in the Ignore case, consts don't need drop.\n-            return bcx;\n+            // Even if we don't have a value to emit, and the expression\n+            // doesn't have any side-effects, we still have to translate the\n+            // body of any closures.\n+            // FIXME: Find a better way of handling this case.\n         } else {\n             // The only way we're going to see a `const` at this point is if\n             // it prefers in-place instantiation, likely because it contains"}, {"sha": "4f13b91cdb133052cd93d2bfbdc9660ed62ab296", "filename": "src/test/run-pass/issue-24779.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/521f82eb12f939fa95aa06ad1649f4aa1420ddfd/src%2Ftest%2Frun-pass%2Fissue-24779.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521f82eb12f939fa95aa06ad1649f4aa1420ddfd/src%2Ftest%2Frun-pass%2Fissue-24779.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24779.rs?ref=521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    assert_eq!((||||42)()(), 42);\n+}"}]}