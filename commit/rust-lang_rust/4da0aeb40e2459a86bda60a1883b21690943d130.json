{"sha": "4da0aeb40e2459a86bda60a1883b21690943d130", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYTBhZWI0MGUyNDU5YTg2YmRhNjBhMTg4M2IyMTY5MDk0M2QxMzA=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2017-09-27T18:17:08Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2017-09-28T17:59:51Z"}, "message": "Set RUSTC_WRAPPER instead of RUSTC when invoking Cargo\n\nSome build scripts rely on the RUSTC binary being the actual compiler\n(e.g. parsing the output of 'RUSTC --version'). To prevent clippy from\nbreaking these build scripts, this commit sets RUSTC_WRAPPER instead.\nThis will cause Cargo to leave RUSTC unchanged, making the use of clippy\ntransparent to build scripts.", "tree": {"sha": "4c810f24d3cadf83ff9d3bfef6dfaed925ce246a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c810f24d3cadf83ff9d3bfef6dfaed925ce246a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4da0aeb40e2459a86bda60a1883b21690943d130", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlnNOJcACgkQtAh+UQ6Y\nsWQRLg//d0jZamtlfxH+NFMqm+xg0hOt2lPFiX28KYML4T+OT5WsKoj9dLyhEpma\nA/9iXi4sm4Yv5yytV/2rbJNxeizqK7UORKLizPCFddoX8oUY4rrQcKzdoSD5zobi\nhvCyYaHqfYd0UE5a/6uofMDD9bWv1dVCPICiO0pp8Z6FTZt6tdJX2rYT3Fl54bee\nJScleMYT8bmBCcDBUfSJ33xcQF4aAXeTvfJ55zSvD7tGQwumtc4tKPPhrCWil+zU\nBvO/7rS0MAzyxIXY6TYFXg+1xaDa+UeETtgNuiSzmQS5ZhwbSotNwn2uL2sP5Jty\ndoW3QvaRXeOuBvg2F9gMct/vcMxHquOpE1YrbazOk9/aZE3p/XbJss52qMzy442Y\nj5WlSvNviNckF/9Y4qo6cZwnKwr/towxuqPll+QoG6ZpAe8H9fmpahFTqSJapDqu\nTgoPyaokIX5fwIvxOUIlUbBCSuxTc+74r8L1n1iMTGrU5NrcobjBTiwbMonxiQu0\nzgzpFt+UGe/tvjvwG0t+NmrHKGi8jO2kw8RG4I6L55ExEMFFS01ERQusdVhDDqeX\nzgyp1nu737Mnto29fKikvy6+X+XQ8jyxcxRlEx5+E7zqn2poNCgBd6j0c7HxKssi\n5hdIEIbDIN/sRMPd1xOVHSbuFhzpuQA2QORScETiPEYYGxPJEJ4=\n=t2eW\n-----END PGP SIGNATURE-----", "payload": "tree 4c810f24d3cadf83ff9d3bfef6dfaed925ce246a\nparent ecaf11ab42b0a989a31a8cd8ec6714750499c795\nauthor Aaron Hill <aa1ronham@gmail.com> 1506536228 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1506621591 -0400\n\nSet RUSTC_WRAPPER instead of RUSTC when invoking Cargo\n\nSome build scripts rely on the RUSTC binary being the actual compiler\n(e.g. parsing the output of 'RUSTC --version'). To prevent clippy from\nbreaking these build scripts, this commit sets RUSTC_WRAPPER instead.\nThis will cause Cargo to leave RUSTC unchanged, making the use of clippy\ntransparent to build scripts.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4da0aeb40e2459a86bda60a1883b21690943d130", "html_url": "https://github.com/rust-lang/rust/commit/4da0aeb40e2459a86bda60a1883b21690943d130", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4da0aeb40e2459a86bda60a1883b21690943d130/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecaf11ab42b0a989a31a8cd8ec6714750499c795", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecaf11ab42b0a989a31a8cd8ec6714750499c795", "html_url": "https://github.com/rust-lang/rust/commit/ecaf11ab42b0a989a31a8cd8ec6714750499c795"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "f21cd7bd28ca423ef057847773f17dfaee75c5e6", "filename": "src/main.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4da0aeb40e2459a86bda60a1883b21690943d130/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da0aeb40e2459a86bda60a1883b21690943d130/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=4da0aeb40e2459a86bda60a1883b21690943d130", "patch": "@@ -181,7 +181,7 @@ pub fn main() {\n         return;\n     }\n \n-    if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n+    if \"clippy\" == std::env::args().nth(1).as_ref().expect(\"cargo-clippy should be called with at least one argument!\") {\n         // this arm is executed on the initial call to `cargo clippy`\n \n         let manifest_path_arg = std::env::args()\n@@ -285,7 +285,7 @@ pub fn main() {\n             }\n         }\n     } else {\n-        // this arm is executed when cargo-clippy runs `cargo rustc` with the `RUSTC`\n+        // this arm is executed when cargo-clippy runs `cargo rustc` with the `RUSTC_WRAPPER`\n         // env var set to itself\n \n         let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n@@ -310,13 +310,17 @@ pub fn main() {\n         };\n \n         rustc_driver::in_rustc_thread(|| {\n+            // Setting RUSTC_WRAPPER causes Cargo to pass 'rustc' as the first argument.\n+            // We're invoking the compiler programatically, so we ignore this/\n+            let orig_args: Vec<String> = env::args().skip(1).collect();\n+\n             // this conditional check for the --sysroot flag is there so users can call\n             // `cargo-clippy` directly\n             // without having to pass --sysroot or anything\n-            let mut args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n-                env::args().collect()\n+            let mut args: Vec<String> = if orig_args.iter().any(|s| s == \"--sysroot\") {\n+                orig_args.clone()\n             } else {\n-                env::args()\n+                orig_args.clone().into_iter()\n                     .chain(Some(\"--sysroot\".to_owned()))\n                     .chain(Some(sys_root))\n                     .collect()\n@@ -325,7 +329,7 @@ pub fn main() {\n             // this check ensures that dependencies are built but not linted and the final\n             // crate is\n             // linted but not built\n-            let clippy_enabled = env::args().any(|s| s == \"--emit=metadata\");\n+            let clippy_enabled = orig_args.iter().any(|s| s == \"--emit=metadata\");\n \n             if clippy_enabled {\n                 args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-clippy\"\"#.to_owned()]);\n@@ -361,7 +365,7 @@ where\n     let path = std::env::current_exe().expect(\"current executable path invalid\");\n     let exit_status = std::process::Command::new(\"cargo\")\n         .args(&args)\n-        .env(\"RUSTC\", path)\n+        .env(\"RUSTC_WRAPPER\", path)\n         .spawn()\n         .expect(\"could not run cargo\")\n         .wait()"}]}