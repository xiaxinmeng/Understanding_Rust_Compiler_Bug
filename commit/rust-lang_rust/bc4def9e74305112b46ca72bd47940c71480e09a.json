{"sha": "bc4def9e74305112b46ca72bd47940c71480e09a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNGRlZjllNzQzMDUxMTJiNDZjYTcyYmQ0Nzk0MGM3MTQ4MGUwOWE=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-06-08T18:24:03Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-06-08T18:24:03Z"}, "message": "docs: Improve char::to_{lower,upper}case examples\n\nCollect the results to a String to make it clear that it will not always\nreturn only one char and add examples showing that.", "tree": {"sha": "7d7d0103fd740dce50fb51c70bafc835550f1ba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d7d0103fd740dce50fb51c70bafc835550f1ba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc4def9e74305112b46ca72bd47940c71480e09a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4def9e74305112b46ca72bd47940c71480e09a", "html_url": "https://github.com/rust-lang/rust/commit/bc4def9e74305112b46ca72bd47940c71480e09a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc4def9e74305112b46ca72bd47940c71480e09a/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "763f9234b052c7911dc4cf952a81a85c51c57784", "url": "https://api.github.com/repos/rust-lang/rust/commits/763f9234b052c7911dc4cf952a81a85c51c57784", "html_url": "https://github.com/rust-lang/rust/commit/763f9234b052c7911dc4cf952a81a85c51c57784"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "f570375de5ea156ed8828fc75d78880b7031dfb0", "filename": "src/librustc_unicode/char.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bc4def9e74305112b46ca72bd47940c71480e09a/src%2Flibrustc_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc4def9e74305112b46ca72bd47940c71480e09a/src%2Flibrustc_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Fchar.rs?ref=bc4def9e74305112b46ca72bd47940c71480e09a", "patch": "@@ -668,10 +668,13 @@ impl char {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// assert_eq!('C'.to_lowercase().next(), Some('c'));\n+    /// assert_eq!('C'.to_lowercase().collect::<String>(), \"c\");\n+    ///\n+    /// // Sometimes the result is more than one character:\n+    /// assert_eq!('\u0130'.to_lowercase().collect::<String>(), \"i\\u{307}\");\n     ///\n     /// // Japanese scripts do not have case, and so:\n-    /// assert_eq!('\u5c71'.to_lowercase().next(), Some('\u5c71'));\n+    /// assert_eq!('\u5c71'.to_lowercase().collect::<String>(), \"\u5c71\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n@@ -702,10 +705,13 @@ impl char {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// assert_eq!('c'.to_uppercase().next(), Some('C'));\n+    /// assert_eq!('c'.to_uppercase().collect::<String>(), \"C\");\n+    ///\n+    /// // Sometimes the result is more than one character:\n+    /// assert_eq!('\u00df'.to_uppercase().collect::<String>(), \"SS\");\n     ///\n     /// // Japanese does not have case, and so:\n-    /// assert_eq!('\u5c71'.to_uppercase().next(), Some('\u5c71'));\n+    /// assert_eq!('\u5c71'.to_uppercase().collect::<String>(), \"\u5c71\");\n     /// ```\n     ///\n     /// In Turkish, the equivalent of 'i' in Latin has five forms instead of two:\n@@ -716,17 +722,17 @@ impl char {\n     /// Note that the lowercase dotted 'i' is the same as the Latin. Therefore:\n     ///\n     /// ```\n-    /// let upper_i = 'i'.to_uppercase().next();\n+    /// let upper_i: String = 'i'.to_uppercase().collect();\n     /// ```\n     ///\n     /// The value of `upper_i` here relies on the language of the text: if we're\n-    /// in `en-US`, it should be `Some('I')`, but if we're in `tr_TR`, it should\n-    /// be `Some('\u0130')`. `to_uppercase()` does not take this into account, and so:\n+    /// in `en-US`, it should be `\"I\"`, but if we're in `tr_TR`, it should\n+    /// be `\"\u0130\"`. `to_uppercase()` does not take this into account, and so:\n     ///\n     /// ```\n-    /// let upper_i = 'i'.to_uppercase().next();\n+    /// let upper_i: String = 'i'.to_uppercase().collect();\n     ///\n-    /// assert_eq!(Some('I'), upper_i);\n+    /// assert_eq!(upper_i, \"I\");\n     /// ```\n     ///\n     /// holds across languages."}]}