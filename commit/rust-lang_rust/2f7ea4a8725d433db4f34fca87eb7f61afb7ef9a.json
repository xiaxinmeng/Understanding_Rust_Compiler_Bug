{"sha": "2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmN2VhNGE4NzI1ZDQzM2RiNGYzNGZjYTg3ZWI3ZjYxYWZiN2VmOWE=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-10-27T08:17:24Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-10-27T08:17:24Z"}, "message": "Add more tests on unsized locals autoderef and borrowck.", "tree": {"sha": "203fe924b6f9b49da3b64b05637dd72088a2f26f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/203fe924b6f9b49da3b64b05637dd72088a2f26f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "html_url": "https://github.com/rust-lang/rust/commit/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c4864708f5b16cb80ce656326f9f8637204b3df", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c4864708f5b16cb80ce656326f9f8637204b3df", "html_url": "https://github.com/rust-lang/rust/commit/1c4864708f5b16cb80ce656326f9f8637204b3df"}], "stats": {"total": 368, "additions": 368, "deletions": 0}, "files": [{"sha": "885cd2b83608019cd66cb4863b8f2827ffda7fe4", "filename": "src/test/run-pass/unsized-locals/autoderef.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Frun-pass%2Funsized-locals%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Frun-pass%2Funsized-locals%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized-locals%2Fautoderef.rs?ref=2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "patch": "@@ -0,0 +1,47 @@\n+#![feature(unsized_locals)]\n+\n+pub trait Foo {\n+    fn foo(self) -> String;\n+}\n+\n+impl Foo for [char] {\n+    fn foo(self) -> String {\n+        self.iter().collect()\n+    }\n+}\n+\n+impl Foo for str {\n+    fn foo(self) -> String {\n+        self.to_owned()\n+    }\n+}\n+\n+impl Foo for dyn FnMut() -> String {\n+    fn foo(mut self) -> String {\n+        self()\n+    }\n+}\n+\n+\n+fn main() {\n+    let x = *(Box::new(['h', 'e', 'l', 'l', 'o']) as Box<[char]>);\n+    assert_eq!(&x.foo() as &str, \"hello\");\n+\n+    let x = Box::new(['h', 'e', 'l', 'l', 'o']) as Box<[char]>;\n+    assert_eq!(&x.foo() as &str, \"hello\");\n+\n+    let x = \"hello\".to_owned().into_boxed_str();\n+    assert_eq!(&x.foo() as &str, \"hello\");\n+\n+    let x = *(\"hello\".to_owned().into_boxed_str());\n+    assert_eq!(&x.foo() as &str, \"hello\");\n+\n+    let x = \"hello\".to_owned().into_boxed_str();\n+    assert_eq!(&x.foo() as &str, \"hello\");\n+\n+    let x = *(Box::new(|| \"hello\".to_owned()) as Box<dyn FnMut() -> String>);\n+    assert_eq!(&x.foo() as &str, \"hello\");\n+\n+    let x = Box::new(|| \"hello\".to_owned()) as Box<dyn FnMut() -> String>;\n+    assert_eq!(&x.foo() as &str, \"hello\");\n+}"}, {"sha": "a3cfcc89217661a710d980bd8fadd120b873b183", "filename": "src/test/ui/unsized-locals/borrow-after-move.nll.stderr", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.nll.stderr?ref=2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "patch": "@@ -0,0 +1,51 @@\n+error[E0382]: borrow of moved value: `x`\n+  --> $DIR/borrow-after-move.rs:20:24\n+   |\n+LL |         let y = *x;\n+   |                 -- value moved here\n+LL |         drop_unsized(y);\n+LL |         println!(\"{}\", &x);\n+   |                        ^^ value borrowed here after move\n+\n+error[E0382]: borrow of moved value: `y`\n+  --> $DIR/borrow-after-move.rs:22:24\n+   |\n+LL |         drop_unsized(y);\n+   |                      - value moved here\n+...\n+LL |         println!(\"{}\", &y);\n+   |                        ^^ value borrowed here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: borrow of moved value: `x`\n+  --> $DIR/borrow-after-move.rs:30:24\n+   |\n+LL |         let y = *x;\n+   |                 -- value moved here\n+LL |         y.foo();\n+LL |         println!(\"{}\", &x);\n+   |                        ^^ value borrowed here after move\n+\n+error[E0382]: borrow of moved value: `y`\n+  --> $DIR/borrow-after-move.rs:32:24\n+   |\n+LL |         y.foo();\n+   |         - value moved here\n+...\n+LL |         println!(\"{}\", &y);\n+   |                        ^^ value borrowed here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: borrow of moved value: `x`\n+  --> $DIR/borrow-after-move.rs:39:24\n+   |\n+LL |         x.foo();\n+   |         - value moved here\n+LL |         println!(\"{}\", &x);\n+   |                        ^^ value borrowed here after move\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "587a2180c1558d175bdf93c0e069e7d7b855fe20", "filename": "src/test/ui/unsized-locals/borrow-after-move.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.rs?ref=2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "patch": "@@ -0,0 +1,42 @@\n+#![feature(unsized_locals)]\n+\n+pub trait Foo {\n+    fn foo(self) -> String;\n+}\n+\n+impl Foo for str {\n+    fn foo(self) -> String {\n+        self.to_owned()\n+    }\n+}\n+\n+fn drop_unsized<T: ?Sized>(_: T) {}\n+\n+fn main() {\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        let y = *x;\n+        drop_unsized(y);\n+        println!(\"{}\", &x);\n+        //~^ERROR use of moved value\n+        println!(\"{}\", &y);\n+        //~^ERROR use of moved value\n+    }\n+\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        let y = *x;\n+        y.foo();\n+        println!(\"{}\", &x);\n+        //~^ERROR use of moved value\n+        println!(\"{}\", &y);\n+        //~^ERROR use of moved value\n+    }\n+\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        x.foo();\n+        println!(\"{}\", &x);\n+        //~^ERROR use of moved value\n+    }\n+}"}, {"sha": "8eea01f25c86585f8a62826a6748927c6f470ecf", "filename": "src/test/ui/unsized-locals/borrow-after-move.stderr", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr?ref=2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "patch": "@@ -0,0 +1,57 @@\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/borrow-after-move.rs:20:25\n+   |\n+LL |         let y = *x;\n+   |             - value moved here\n+LL |         drop_unsized(y);\n+LL |         println!(\"{}\", &x);\n+   |                         ^ value used here after move\n+   |\n+   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `y`\n+  --> $DIR/borrow-after-move.rs:22:25\n+   |\n+LL |         drop_unsized(y);\n+   |                      - value moved here\n+...\n+LL |         println!(\"{}\", &y);\n+   |                         ^ value used here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/borrow-after-move.rs:30:25\n+   |\n+LL |         let y = *x;\n+   |             - value moved here\n+LL |         y.foo();\n+LL |         println!(\"{}\", &x);\n+   |                         ^ value used here after move\n+   |\n+   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `y`\n+  --> $DIR/borrow-after-move.rs:32:25\n+   |\n+LL |         y.foo();\n+   |         - value moved here\n+...\n+LL |         println!(\"{}\", &y);\n+   |                         ^ value used here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/borrow-after-move.rs:39:25\n+   |\n+LL |         x.foo();\n+   |         - value moved here\n+LL |         println!(\"{}\", &x);\n+   |                         ^ value used here after move\n+   |\n+   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "0555a8944bf94499cb464e2f01b4fdc4d02da0f3", "filename": "src/test/ui/unsized-locals/double-move.nll.stderr", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.nll.stderr?ref=2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "patch": "@@ -0,0 +1,55 @@\n+error[E0382]: use of moved value: `y`\n+  --> $DIR/double-move.rs:20:22\n+   |\n+LL |         drop_unsized(y);\n+   |                      - value moved here\n+LL |         drop_unsized(y); //~ERROR use of moved value\n+   |                      ^ value used here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/double-move.rs:26:22\n+   |\n+LL |         let _y = *x;\n+   |                  -- value moved here\n+LL |         drop_unsized(x); //~ERROR use of moved value\n+   |                      ^ value used here after move\n+\n+error[E0382]: use of moved value: `*x`\n+  --> $DIR/double-move.rs:32:18\n+   |\n+LL |         drop_unsized(x);\n+   |                      - value moved here\n+LL |         let _y = *x; //~ERROR use of moved value\n+   |                  ^^ value used here after move\n+\n+error[E0382]: use of moved value: `y`\n+  --> $DIR/double-move.rs:39:9\n+   |\n+LL |         y.foo();\n+   |         - value moved here\n+LL |         y.foo(); //~ERROR use of moved value\n+   |         ^ value used here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `*x`\n+  --> $DIR/double-move.rs:45:9\n+   |\n+LL |         let _y = *x;\n+   |                  -- value moved here\n+LL |         x.foo(); //~ERROR use of moved value\n+   |         ^ value used here after move\n+\n+error[E0382]: use of moved value: `*x`\n+  --> $DIR/double-move.rs:51:18\n+   |\n+LL |         x.foo();\n+   |         - value moved here\n+LL |         let _y = *x; //~ERROR use of moved value\n+   |                  ^^ value used here after move\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "c3a50341bc96213ad4c390f17cd6cc1f2b615c83", "filename": "src/test/ui/unsized-locals/double-move.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.rs?ref=2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "patch": "@@ -0,0 +1,53 @@\n+#![feature(unsized_locals)]\n+\n+pub trait Foo {\n+    fn foo(self) -> String;\n+}\n+\n+impl Foo for str {\n+    fn foo(self) -> String {\n+        self.to_owned()\n+    }\n+}\n+\n+fn drop_unsized<T: ?Sized>(_: T) {}\n+\n+fn main() {\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        let y = *x;\n+        drop_unsized(y);\n+        drop_unsized(y); //~ERROR use of moved value\n+    }\n+\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        let _y = *x;\n+        drop_unsized(x); //~ERROR use of moved value\n+    }\n+\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        drop_unsized(x);\n+        let _y = *x; //~ERROR use of moved value\n+    }\n+\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        let y = *x;\n+        y.foo();\n+        y.foo(); //~ERROR use of moved value\n+    }\n+\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        let _y = *x;\n+        x.foo(); //~ERROR use of moved value\n+    }\n+\n+    {\n+        let x = \"hello\".to_owned().into_boxed_str();\n+        x.foo();\n+        let _y = *x; //~ERROR use of moved value\n+    }\n+}"}, {"sha": "1009e913b7b67bbdb7d93a783741da668650fb71", "filename": "src/test/ui/unsized-locals/double-move.stderr", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr?ref=2f7ea4a8725d433db4f34fca87eb7f61afb7ef9a", "patch": "@@ -0,0 +1,63 @@\n+error[E0382]: use of moved value: `y`\n+  --> $DIR/double-move.rs:20:22\n+   |\n+LL |         drop_unsized(y);\n+   |                      - value moved here\n+LL |         drop_unsized(y); //~ERROR use of moved value\n+   |                      ^ value used here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/double-move.rs:26:22\n+   |\n+LL |         let _y = *x;\n+   |             -- value moved here\n+LL |         drop_unsized(x); //~ERROR use of moved value\n+   |                      ^ value used here after move\n+   |\n+   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `*x`\n+  --> $DIR/double-move.rs:32:13\n+   |\n+LL |         drop_unsized(x);\n+   |                      - value moved here\n+LL |         let _y = *x; //~ERROR use of moved value\n+   |             ^^ value used here after move\n+   |\n+   = note: move occurs because `x` has type `std::boxed::Box<str>`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `y`\n+  --> $DIR/double-move.rs:39:9\n+   |\n+LL |         y.foo();\n+   |         - value moved here\n+LL |         y.foo(); //~ERROR use of moved value\n+   |         ^ value used here after move\n+   |\n+   = note: move occurs because `y` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `*x`\n+  --> $DIR/double-move.rs:45:9\n+   |\n+LL |         let _y = *x;\n+   |             -- value moved here\n+LL |         x.foo(); //~ERROR use of moved value\n+   |         ^ value used here after move\n+   |\n+   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `*x`\n+  --> $DIR/double-move.rs:51:13\n+   |\n+LL |         x.foo();\n+   |         - value moved here\n+LL |         let _y = *x; //~ERROR use of moved value\n+   |             ^^ value used here after move\n+   |\n+   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0382`."}]}