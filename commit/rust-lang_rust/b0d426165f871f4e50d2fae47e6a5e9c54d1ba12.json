{"sha": "b0d426165f871f4e50d2fae47e6a5e9c54d1ba12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZDQyNjE2NWY4NzFmNGU1MGQyZmFlNDdlNmE1ZTljNTRkMWJhMTI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-30T20:04:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-30T20:04:42Z"}, "message": "Rollup merge of #74934 - nbdd0121:issue-73976, r=ecstatic-morse\n\nImprove diagnostics when constant pattern is too generic\n\nThis PR is a follow-up to PR #74538 and issue #73976\n\nWhen constants queries Layout, TypeId or type_name of a generic parameter, instead of emitting `could not evaluate constant pattern`, we will instead emit a more detailed message `constant pattern depends on a generic parameter`.", "tree": {"sha": "2f8a1f06c031b50b87bac239c716527a4f4c9477", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f8a1f06c031b50b87bac239c716527a4f4c9477"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIyfaCRBK7hj4Ov3rIwAAdHIIAHK8aZeZSgSzsxLiiBULYTI/\nIPHS8ZjXo3s17zvmSuKkrukVb6QOYKvZ/2cagmjawA/LrKjWNOaF7Q+72JzkS8Mw\nJv4gewIsqTH/QbbxGZ+Fi4zTtTbCxsYyG7UD03LFHWmuAjL6WZUJp0sThqAKntE9\n2ZfUQRO776CZfPKjmtgizrJCbVyXEEcK1RwLw6lU8lQBLWFogC65Po2O23Ghqk+f\nBbEjiS1z7jATiC7VrRSHUBDtRN/kzht7pY5stQVG2gEsbxwwZldONp3BsJ9iOpdL\n4G9Dqr7Po0OqyQaqLG81JMH8bqcxRjU2k9eWmw4rFy7Rzs0zyrsTckO/fb+WTJw=\n=2wgl\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f8a1f06c031b50b87bac239c716527a4f4c9477\nparent 0a45b1303cafc39458ffd3944dcf74c8b4200df6\nparent 4e963d58c7d94270697c2765f23993e40757292f\nauthor Manish Goregaokar <manishsmail@gmail.com> 1596139482 -0700\ncommitter GitHub <noreply@github.com> 1596139482 -0700\n\nRollup merge of #74934 - nbdd0121:issue-73976, r=ecstatic-morse\n\nImprove diagnostics when constant pattern is too generic\n\nThis PR is a follow-up to PR #74538 and issue #73976\n\nWhen constants queries Layout, TypeId or type_name of a generic parameter, instead of emitting `could not evaluate constant pattern`, we will instead emit a more detailed message `constant pattern depends on a generic parameter`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12", "html_url": "https://github.com/rust-lang/rust/commit/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a45b1303cafc39458ffd3944dcf74c8b4200df6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a45b1303cafc39458ffd3944dcf74c8b4200df6", "html_url": "https://github.com/rust-lang/rust/commit/0a45b1303cafc39458ffd3944dcf74c8b4200df6"}, {"sha": "4e963d58c7d94270697c2765f23993e40757292f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e963d58c7d94270697c2765f23993e40757292f", "html_url": "https://github.com/rust-lang/rust/commit/4e963d58c7d94270697c2765f23993e40757292f"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "f813ba0c077cadb662d6aeed5e8bfdb2f0b0e562", "filename": "src/librustc_mir_build/hair/pattern/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs?ref=b0d426165f871f4e50d2fae47e6a5e9c54d1ba12", "patch": "@@ -16,7 +16,7 @@ use rustc_hir::pat_util::EnumerateAndAdjustIterator;\n use rustc_hir::RangeEnd;\n use rustc_index::vec::Idx;\n use rustc_middle::mir::interpret::{get_slice_bytes, sign_extend, ConstValue};\n-use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n+use rustc_middle::mir::interpret::{ErrorHandled, LitToConstError, LitToConstInput};\n use rustc_middle::mir::UserTypeProjection;\n use rustc_middle::mir::{BorrowKind, Field, Mutability};\n use rustc_middle::ty::subst::{GenericArg, SubstsRef};\n@@ -834,6 +834,12 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n                     pattern\n                 }\n             }\n+            Err(ErrorHandled::TooGeneric) => {\n+                // While `Reported | Linted` cases will have diagnostics emitted already\n+                // it is not true for TooGeneric case, so we need to give user more information.\n+                self.tcx.sess.span_err(span, \"constant pattern depends on a generic parameter\");\n+                pat_from_kind(PatKind::Wild)\n+            }\n             Err(_) => {\n                 self.tcx.sess.span_err(span, \"could not evaluate constant pattern\");\n                 pat_from_kind(PatKind::Wild)"}, {"sha": "518036c9dbeecd8d899b7d59a88702e5809c5069", "filename": "src/test/ui/consts/issue-73976-polymorphic.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.rs?ref=b0d426165f871f4e50d2fae47e6a5e9c54d1ba12", "patch": "@@ -17,8 +17,8 @@ impl<T: 'static> GetTypeId<T> {\n \n const fn check_type_id<T: 'static>() -> bool {\n     matches!(GetTypeId::<T>::VALUE, GetTypeId::<T>::VALUE)\n-    //~^ ERROR could not evaluate constant pattern\n-    //~| ERROR could not evaluate constant pattern\n+    //~^ ERROR constant pattern depends on a generic parameter\n+    //~| ERROR constant pattern depends on a generic parameter\n }\n \n pub struct GetTypeNameLen<T>(T);\n@@ -29,8 +29,8 @@ impl<T: 'static> GetTypeNameLen<T> {\n \n const fn check_type_name_len<T: 'static>() -> bool {\n     matches!(GetTypeNameLen::<T>::VALUE, GetTypeNameLen::<T>::VALUE)\n-    //~^ ERROR could not evaluate constant pattern\n-    //~| ERROR could not evaluate constant pattern\n+    //~^ ERROR constant pattern depends on a generic parameter\n+    //~| ERROR constant pattern depends on a generic parameter\n }\n \n fn main() {"}, {"sha": "250f1536d85fcf62a9479640264a935b43f28ce7", "filename": "src/test/ui/consts/issue-73976-polymorphic.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0d426165f871f4e50d2fae47e6a5e9c54d1ba12/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.stderr?ref=b0d426165f871f4e50d2fae47e6a5e9c54d1ba12", "patch": "@@ -1,22 +1,22 @@\n-error: could not evaluate constant pattern\n+error: constant pattern depends on a generic parameter\n   --> $DIR/issue-73976-polymorphic.rs:19:37\n    |\n LL |     matches!(GetTypeId::<T>::VALUE, GetTypeId::<T>::VALUE)\n    |                                     ^^^^^^^^^^^^^^^^^^^^^\n \n-error: could not evaluate constant pattern\n+error: constant pattern depends on a generic parameter\n   --> $DIR/issue-73976-polymorphic.rs:31:42\n    |\n LL |     matches!(GetTypeNameLen::<T>::VALUE, GetTypeNameLen::<T>::VALUE)\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: could not evaluate constant pattern\n+error: constant pattern depends on a generic parameter\n   --> $DIR/issue-73976-polymorphic.rs:19:37\n    |\n LL |     matches!(GetTypeId::<T>::VALUE, GetTypeId::<T>::VALUE)\n    |                                     ^^^^^^^^^^^^^^^^^^^^^\n \n-error: could not evaluate constant pattern\n+error: constant pattern depends on a generic parameter\n   --> $DIR/issue-73976-polymorphic.rs:31:42\n    |\n LL |     matches!(GetTypeNameLen::<T>::VALUE, GetTypeNameLen::<T>::VALUE)"}]}