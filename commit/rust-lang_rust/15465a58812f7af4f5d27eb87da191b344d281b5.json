{"sha": "15465a58812f7af4f5d27eb87da191b344d281b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NDY1YTU4ODEyZjdhZjRmNWQyN2ViODdkYTE5MWIzNDRkMjgxYjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-14T16:10:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-14T16:10:45Z"}, "message": "don't ICE when we unwind despite panic=abort", "tree": {"sha": "02442cb694e9526841d8f4a4bc9fc77e9e4f52f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02442cb694e9526841d8f4a4bc9fc77e9e4f52f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15465a58812f7af4f5d27eb87da191b344d281b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15465a58812f7af4f5d27eb87da191b344d281b5", "html_url": "https://github.com/rust-lang/rust/commit/15465a58812f7af4f5d27eb87da191b344d281b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15465a58812f7af4f5d27eb87da191b344d281b5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2", "html_url": "https://github.com/rust-lang/rust/commit/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "8f06e5276f52792b07f14706d3d9661fbe5571c9", "filename": "src/shims/panic.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15465a58812f7af4f5d27eb87da191b344d281b5/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15465a58812f7af4f5d27eb87da191b344d281b5/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=15465a58812f7af4f5d27eb87da191b344d281b5", "patch": "@@ -45,7 +45,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         trace!(\"miri_start_panic: {:?}\", this.frame().instance);\n         // Make sure we only start unwinding when this matches our panic strategy.\n-        assert_eq!(this.tcx.sess.panic_strategy(), PanicStrategy::Unwind);\n+        if this.tcx.sess.panic_strategy() != PanicStrategy::Unwind {\n+            throw_ub_format!(\"unwinding despite panic=abort\");\n+        }\n \n         // Get the raw pointer stored in arg[0] (the panic payload).\n         let &[ref payload] = check_arg_count(args)?;"}, {"sha": "05284eb770b2295adad5842838668afbea8c7332", "filename": "tests/compile-fail/panic/unwind_panic_abort.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/15465a58812f7af4f5d27eb87da191b344d281b5/tests%2Fcompile-fail%2Fpanic%2Funwind_panic_abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15465a58812f7af4f5d27eb87da191b344d281b5/tests%2Fcompile-fail%2Fpanic%2Funwind_panic_abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Funwind_panic_abort.rs?ref=15465a58812f7af4f5d27eb87da191b344d281b5", "patch": "@@ -0,0 +1,11 @@\n+// compile-flags: -Cpanic=abort\n+\n+//! Unwinding despite `-C panic=abort` is an error.\n+\n+extern \"Rust\" {\n+    fn miri_start_panic(payload: *mut u8) -> !;\n+}\n+\n+fn main() {\n+    unsafe { miri_start_panic(&mut 0); } //~ ERROR unwinding despite panic=abort\n+}"}]}