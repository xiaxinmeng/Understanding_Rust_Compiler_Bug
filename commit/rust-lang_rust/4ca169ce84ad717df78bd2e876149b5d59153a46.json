{"sha": "4ca169ce84ad717df78bd2e876149b5d59153a46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYTE2OWNlODRhZDcxN2RmNzhiZDJlODc2MTQ5YjVkNTkxNTNhNDY=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-22T13:19:55Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T18:49:37Z"}, "message": "Use the target types bitsize instead of the source type's", "tree": {"sha": "d46e8782362e791a0ecfbdeff5b8b68d339ac07e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d46e8782362e791a0ecfbdeff5b8b68d339ac07e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ca169ce84ad717df78bd2e876149b5d59153a46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca169ce84ad717df78bd2e876149b5d59153a46", "html_url": "https://github.com/rust-lang/rust/commit/4ca169ce84ad717df78bd2e876149b5d59153a46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ca169ce84ad717df78bd2e876149b5d59153a46/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf39c7f87c1208249d400bdc09003c69e2621b96", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf39c7f87c1208249d400bdc09003c69e2621b96", "html_url": "https://github.com/rust-lang/rust/commit/bf39c7f87c1208249d400bdc09003c69e2621b96"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a2eede82acd489d30574c874fa9df028836ee3e8", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4ca169ce84ad717df78bd2e876149b5d59153a46/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ca169ce84ad717df78bd2e876149b5d59153a46/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=4ca169ce84ad717df78bd2e876149b5d59153a46", "patch": "@@ -92,29 +92,29 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n         match dest_ty.sty {\n             // float -> uint\n             TyUint(t) => {\n-                let width = t.bit_width().unwrap_or(self.memory.pointer_size().bytes() as usize * 8);\n+                let width = t.bit_width().unwrap_or(self.memory.pointer_size().bits() as usize);\n                 match fty {\n                     FloatTy::F32 => Ok(Scalar::Bits {\n                         bits: Single::from_bits(bits).to_u128(width).value,\n-                        defined: 32,\n+                        defined: width as u8,\n                     }),\n                     FloatTy::F64 => Ok(Scalar::Bits {\n                         bits: Double::from_bits(bits).to_u128(width).value,\n-                        defined: 64,\n+                        defined: width as u8,\n                     }),\n                 }\n             },\n             // float -> int\n             TyInt(t) => {\n-                let width = t.bit_width().unwrap_or(self.memory.pointer_size().bytes() as usize * 8);\n+                let width = t.bit_width().unwrap_or(self.memory.pointer_size().bits() as usize);\n                 match fty {\n                     FloatTy::F32 => Ok(Scalar::Bits {\n                         bits: Single::from_bits(bits).to_i128(width).value as u128,\n-                        defined: 32,\n+                        defined: width as u8,\n                     }),\n                     FloatTy::F64 => Ok(Scalar::Bits {\n                         bits: Double::from_bits(bits).to_i128(width).value as u128,\n-                        defined: 64,\n+                        defined: width as u8,\n                     }),\n                 }\n             },"}]}