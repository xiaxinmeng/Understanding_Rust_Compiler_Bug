{"sha": "c011fb70563d9eddb1e62436f78c206f3be0d00e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMTFmYjcwNTYzZDllZGRiMWU2MjQzNmY3OGMyMDZmM2JlMGQwMGU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-08T20:28:35Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-08T20:28:35Z"}, "message": "Merge #266\n\n266: handle expanding of words in comments at the beginning or end of line r=matklad a=vemoo\n\nAfter fixing #140 i realized that the logic to determine word boundaries was not correct. It would only consider a word something surrounded by whitespaces in the line, but not newlines before and after the line. This means that one of the tests has changed, but i think that's what was intended.\n\nCo-authored-by: Bernardo <berublan@gmail.com>", "tree": {"sha": "3fb667422899d19edd914fa9e65d586ace62b0aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fb667422899d19edd914fa9e65d586ace62b0aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c011fb70563d9eddb1e62436f78c206f3be0d00e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c011fb70563d9eddb1e62436f78c206f3be0d00e", "html_url": "https://github.com/rust-lang/rust/commit/c011fb70563d9eddb1e62436f78c206f3be0d00e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c011fb70563d9eddb1e62436f78c206f3be0d00e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "97b07ac393caebaa76099f97672ad4399c0ceda6", "url": "https://api.github.com/repos/rust-lang/rust/commits/97b07ac393caebaa76099f97672ad4399c0ceda6", "html_url": "https://github.com/rust-lang/rust/commit/97b07ac393caebaa76099f97672ad4399c0ceda6"}, {"sha": "6fb267f5da9acb78f89a6ab0cedf7d1f904b16c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fb267f5da9acb78f89a6ab0cedf7d1f904b16c3", "html_url": "https://github.com/rust-lang/rust/commit/6fb267f5da9acb78f89a6ab0cedf7d1f904b16c3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a2aa021498e3a1ad72099e65d34ae39b1e5967a9", "filename": "crates/ra_editor/src/extend_selection.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c011fb70563d9eddb1e62436f78c206f3be0d00e/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c011fb70563d9eddb1e62436f78c206f3be0d00e/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs?ref=c011fb70563d9eddb1e62436f78c206f3be0d00e", "patch": "@@ -48,8 +48,8 @@ fn extend_single_word_in_comment(leaf: SyntaxNodeRef, offset: TextUnit) -> Optio\n     let cursor_position: u32 = (offset - leaf.range().start()).into();\n \n     let (before, after) = text.split_at(cursor_position as usize);\n-    let start_idx = before.rfind(char::is_whitespace)? as u32;\n-    let end_idx = after.find(char::is_whitespace)? as u32;\n+    let start_idx = before.rfind(char::is_whitespace).unwrap_or(0) as u32;\n+    let end_idx = after.find(char::is_whitespace).unwrap_or(after.len()) as u32;\n \n     let from: TextUnit = (start_idx + 1).into();\n     let to: TextUnit = (cursor_position + end_idx).into();\n@@ -184,7 +184,7 @@ fn bar(){}\n \n // fn foo(){}\n     \"#,\n-            &[\"// 1 + 1\", \"// fn foo() {\\n// 1 + 1\\n// }\"],\n+            &[\"1\", \"// 1 + 1\", \"// fn foo() {\\n// 1 + 1\\n// }\"],\n         );\n \n         do_check("}]}