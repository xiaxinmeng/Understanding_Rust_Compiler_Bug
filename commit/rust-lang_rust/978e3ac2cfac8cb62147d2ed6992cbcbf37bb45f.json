{"sha": "978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3OGUzYWMyY2ZhYzhjYjYyMTQ3ZDJlZDY5OTJjYmNiZjM3YmI0NWY=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-30T12:40:27Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-30T12:40:27Z"}, "message": "Use node_id_to_type_opt instead of node_it_to_type in random_state", "tree": {"sha": "f5fc499e1d590d572d92c39ed9a4b92c1ddecd2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5fc499e1d590d572d92c39ed9a4b92c1ddecd2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f", "html_url": "https://github.com/rust-lang/rust/commit/978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1130bbc26f849c81131c4ac336ec80c319d20769", "url": "https://api.github.com/repos/rust-lang/rust/commits/1130bbc26f849c81131c4ac336ec80c319d20769", "html_url": "https://github.com/rust-lang/rust/commit/1130bbc26f849c81131c4ac336ec80c319d20769"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "f95116c04b6d9078c902d15c0c042efe45d7bd71", "filename": "clippy_lints/src/random_state.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f/clippy_lints%2Fsrc%2Frandom_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f/clippy_lints%2Fsrc%2Frandom_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frandom_state.rs?ref=978e3ac2cfac8cb62147d2ed6992cbcbf37bb45f", "patch": "@@ -35,11 +35,13 @@ impl LintPass for Pass {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_ty(&mut self, cx: &LateContext<'a, 'tcx>, ty: &Ty) {\n-        if let TyKind::Adt(_, substs) = cx.tables.node_id_to_type(ty.hir_id).sty {\n-            for subst in substs {\n-                if let UnpackedKind::Type(build_hasher) = subst.unpack() {\n-                    if match_type(cx, build_hasher, &paths::RANDOM_STATE) {\n-                        span_lint(cx, RANDOM_STATE, ty.span, \"usage of RandomState\");\n+        if let Some(tys) = cx.tables.node_id_to_type_opt(ty.hir_id) {\n+            if let TyKind::Adt(_, substs) = tys.sty {\n+                for subst in substs {\n+                    if let UnpackedKind::Type(build_hasher) = subst.unpack() {\n+                        if match_type(cx, build_hasher, &paths::RANDOM_STATE) {\n+                            span_lint(cx, RANDOM_STATE, ty.span, \"usage of RandomState\");\n+                        }\n                     }\n                 }\n             }"}]}