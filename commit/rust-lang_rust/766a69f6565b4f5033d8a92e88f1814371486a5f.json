{"sha": "766a69f6565b4f5033d8a92e88f1814371486a5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NmE2OWY2NTY1YjRmNTAzM2Q4YTkyZTg4ZjE4MTQzNzE0ODZhNWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-02T06:01:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-04T01:13:22Z"}, "message": "make test suite MIR validation aware. run-pass passes with and without fullmir, if optimizations are disabled!", "tree": {"sha": "503ccbe0e623b561243fbbe219a9e7c03b1557d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/503ccbe0e623b561243fbbe219a9e7c03b1557d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/766a69f6565b4f5033d8a92e88f1814371486a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/766a69f6565b4f5033d8a92e88f1814371486a5f", "html_url": "https://github.com/rust-lang/rust/commit/766a69f6565b4f5033d8a92e88f1814371486a5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/766a69f6565b4f5033d8a92e88f1814371486a5f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3754572b0a6859c4ab2730c2ccaafa89217bfb04", "url": "https://api.github.com/repos/rust-lang/rust/commits/3754572b0a6859c4ab2730c2ccaafa89217bfb04", "html_url": "https://github.com/rust-lang/rust/commit/3754572b0a6859c4ab2730c2ccaafa89217bfb04"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "01a4a8656b40fd2c57d69e74d933a02796c6e498", "filename": "miri/bin/miri.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/miri%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/miri%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fbin%2Fmiri.rs?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -202,7 +202,6 @@ fn main() {\n \n     // for auxilary builds in unit tests\n     args.push(\"-Zalways-encode-mir\".to_owned());\n-    args.push(\"-Zmir-emit-validate=1\".to_owned());\n \n     rustc_driver::run_compiler(&args, &mut MiriCompilerCalls(RustcDefaultCalls), None, None);\n }"}, {"sha": "5fc1a5010f0532857e6527159be41c8d8d49ed78", "filename": "tests/compiletest.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -20,6 +20,7 @@ fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: b\n     let mut config = compiletest::default_config();\n     config.mode = \"compile-fail\".parse().expect(\"Invalid mode\");\n     config.rustc_path = MIRI_PATH.into();\n+    let mut flags = Vec::new();\n     if fullmir {\n         if host != target {\n             // skip fullmir on nonhost\n@@ -32,6 +33,8 @@ fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: b\n         config.target_rustcflags = Some(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n         config.src_base = PathBuf::from(path.to_string());\n     }\n+    flags.push(\"-Zmir-emit-validate=1\".to_owned());\n+    config.target_rustcflags = Some(flags.join(\" \"));\n     config.target = target.to_owned();\n     compiletest::run_tests(&config);\n }\n@@ -73,6 +76,7 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n     } else {\n         flags.push(\"-Zmir-opt-level=0\".to_owned());\n     }\n+    flags.push(\"-Zmir-emit-validate=1\".to_owned());\n     config.target_rustcflags = Some(flags.join(\" \"));\n     // don't actually execute the final binary, it might be for other targets and we only care\n     // about running miri, not the binary."}, {"sha": "6eeb7cd5117e928c84564d99302dbf84a6967d4a", "filename": "tests/run-pass-fullmir/regions-mock-trans.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass-fullmir%2Fregions-mock-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass-fullmir%2Fregions-mock-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fregions-mock-trans.rs?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n+// FIXME: We handle uninitialzied storage here, which currently makes validation fail.\n+// compile-flags: -Zmir-emit-validate=0\n \n #![feature(libc)]\n "}, {"sha": "ba1ef6d704314596dc385f29ce1cb884b272531d", "filename": "tests/run-pass/rc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frc.rs?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -1,3 +1,6 @@\n+// FIXME: Due to https://github.com/rust-lang/rust/issues/43457 we have to disable validation\n+// compile-flags: -Zmir-emit-validate=0\n+\n use std::cell::RefCell;\n use std::rc::Rc;\n "}, {"sha": "d259ca6361c978ed3bfa54e847b7226c50943d4d", "filename": "tests/run-pass/recursive_static.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Frecursive_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Frecursive_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frecursive_static.rs?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -1,3 +1,6 @@\n+// FIXME: Disable validation until we figure out how to handle recursive statics.\n+// compile-flags: -Zmir-emit-validate=0\n+\n struct S(&'static S);\n static S1: S = S(&S2);\n static S2: S = S(&S1);"}, {"sha": "19ff4b30db1d7c96fb9c94c8d8b2d9da0eed78fb", "filename": "tests/run-pass/send-is-not-static-par-for.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Fsend-is-not-static-par-for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Fsend-is-not-static-par-for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsend-is-not-static-par-for.rs?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -10,6 +10,9 @@\n \n //ignore-windows\n \n+// FIXME: Due to https://github.com/rust-lang/rust/issues/43457 we have to disable validation\n+// compile-flags: -Zmir-emit-validate=0\n+\n use std::sync::Mutex;\n \n fn par_for<I, F>(iter: I, f: F)"}, {"sha": "b15307bb48d834b218036c06b6685182964eb301", "filename": "tests/run-pass/std.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Fstd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/tests%2Frun-pass%2Fstd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstd.rs?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -1,3 +1,6 @@\n+// FIXME: Due to https://github.com/rust-lang/rust/issues/43457 we have to disable validation\n+// compile-flags: -Zmir-emit-validate=0\n+\n use std::cell::{Cell, RefCell};\n use std::rc::Rc;\n use std::sync::Arc;"}, {"sha": "d4b0d06024afd86afb26384c54d3559436acc579", "filename": "xargo/build.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766a69f6565b4f5033d8a92e88f1814371486a5f/xargo%2Fbuild.sh", "raw_url": "https://github.com/rust-lang/rust/raw/766a69f6565b4f5033d8a92e88f1814371486a5f/xargo%2Fbuild.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xargo%2Fbuild.sh?ref=766a69f6565b4f5033d8a92e88f1814371486a5f", "patch": "@@ -1,3 +1,3 @@\n #!/bin/bash\n cd \"$(readlink -e \"$(dirname \"$0\")\")\"\n-RUSTFLAGS='-Zalways-encode-mir' xargo build\n+RUSTFLAGS='-Zalways-encode-mir -Zmir-emit-validate=1' xargo build"}]}