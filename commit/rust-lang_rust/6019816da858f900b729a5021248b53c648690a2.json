{"sha": "6019816da858f900b729a5021248b53c648690a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMTk4MTZkYTg1OGY5MDBiNzI5YTUwMjEyNDhiNTNjNjQ4NjkwYTI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-23T08:54:37Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-28T08:43:35Z"}, "message": "Refactor away `set_expn_info`", "tree": {"sha": "c97a43c47a7b1c846421598767d0305e2a41ca09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c97a43c47a7b1c846421598767d0305e2a41ca09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6019816da858f900b729a5021248b53c648690a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6019816da858f900b729a5021248b53c648690a2", "html_url": "https://github.com/rust-lang/rust/commit/6019816da858f900b729a5021248b53c648690a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6019816da858f900b729a5021248b53c648690a2/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "074f4c2c91035dab745d197de8b2639fa05bdf40", "url": "https://api.github.com/repos/rust-lang/rust/commits/074f4c2c91035dab745d197de8b2639fa05bdf40", "html_url": "https://github.com/rust-lang/rust/commit/074f4c2c91035dab745d197de8b2639fa05bdf40"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "d6adec84e8440787716ffbc04e1f14923b3a1847", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6019816da858f900b729a5021248b53c648690a2/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6019816da858f900b729a5021248b53c648690a2/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=6019816da858f900b729a5021248b53c648690a2", "patch": "@@ -1420,20 +1420,13 @@ impl<'a> MethodDef<'a> {\n \n // general helper methods.\n impl<'a> TraitDef<'a> {\n-    fn set_expn_info(&self,\n-                     _cx: &mut ExtCtxt,\n-                     mut to_set: Span) -> Span {\n-        to_set.expn_id = self.span.expn_id;\n-        to_set\n-    }\n-\n     fn summarise_struct(&self,\n                         cx: &mut ExtCtxt,\n                         struct_def: &VariantData) -> StaticFields {\n         let mut named_idents = Vec::new();\n         let mut just_spans = Vec::new();\n         for field in struct_def.fields(){\n-            let sp = self.set_expn_info(cx, field.span);\n+            let sp = Span { expn_id: self.span.expn_id, ..field.span };\n             match field.ident {\n                 Some(ident) => named_idents.push((ident, sp)),\n                 _ => just_spans.push(sp),\n@@ -1475,7 +1468,7 @@ impl<'a> TraitDef<'a> {\n         let mut paths = Vec::new();\n         let mut ident_exprs = Vec::new();\n         for (i, struct_field) in struct_def.fields().iter().enumerate() {\n-            let sp = self.set_expn_info(cx, struct_field.span);\n+            let sp = Span { expn_id: self.span.expn_id, ..struct_field.span };\n             let ident = cx.ident_of(&format!(\"{}_{}\", prefix, i));\n             paths.push(codemap::Spanned{span: sp, node: ident});\n             let val = cx.expr_deref(sp, cx.expr_path(cx.path_ident(sp,ident)));"}]}