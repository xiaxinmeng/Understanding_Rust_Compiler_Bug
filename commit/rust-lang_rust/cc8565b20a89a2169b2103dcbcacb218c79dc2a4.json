{"sha": "cc8565b20a89a2169b2103dcbcacb218c79dc2a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjODU2NWIyMGE4OWEyMTY5YjIxMDNkY2JjYWNiMjE4Yzc5ZGMyYTQ=", "commit": {"author": {"name": "Ed Schouten", "email": "ed@nuxi.nl", "date": "2018-01-11T10:21:12Z"}, "committer": {"name": "Ed Schouten", "email": "ed@nuxi.nl", "date": "2018-01-11T10:29:52Z"}, "message": "Make the documentation build work on CloudABI.\n\nJust like with wasm, we can't just import unix::ext and windows::ext.\nOur shims are not complete enough for that.", "tree": {"sha": "415171e323cbfadac899be27e68928b61876ad2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/415171e323cbfadac899be27e68928b61876ad2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc8565b20a89a2169b2103dcbcacb218c79dc2a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc8565b20a89a2169b2103dcbcacb218c79dc2a4", "html_url": "https://github.com/rust-lang/rust/commit/cc8565b20a89a2169b2103dcbcacb218c79dc2a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc8565b20a89a2169b2103dcbcacb218c79dc2a4/comments", "author": {"login": "EdSchouten", "id": 736085, "node_id": "MDQ6VXNlcjczNjA4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/736085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdSchouten", "html_url": "https://github.com/EdSchouten", "followers_url": "https://api.github.com/users/EdSchouten/followers", "following_url": "https://api.github.com/users/EdSchouten/following{/other_user}", "gists_url": "https://api.github.com/users/EdSchouten/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdSchouten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdSchouten/subscriptions", "organizations_url": "https://api.github.com/users/EdSchouten/orgs", "repos_url": "https://api.github.com/users/EdSchouten/repos", "events_url": "https://api.github.com/users/EdSchouten/events{/privacy}", "received_events_url": "https://api.github.com/users/EdSchouten/received_events", "type": "User", "site_admin": false}, "committer": {"login": "EdSchouten", "id": 736085, "node_id": "MDQ6VXNlcjczNjA4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/736085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdSchouten", "html_url": "https://github.com/EdSchouten", "followers_url": "https://api.github.com/users/EdSchouten/followers", "following_url": "https://api.github.com/users/EdSchouten/following{/other_user}", "gists_url": "https://api.github.com/users/EdSchouten/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdSchouten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdSchouten/subscriptions", "organizations_url": "https://api.github.com/users/EdSchouten/orgs", "repos_url": "https://api.github.com/users/EdSchouten/repos", "events_url": "https://api.github.com/users/EdSchouten/events{/privacy}", "received_events_url": "https://api.github.com/users/EdSchouten/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9d97c9f090bfaa6a90b752455769ec12cb227f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9d97c9f090bfaa6a90b752455769ec12cb227f7", "html_url": "https://github.com/rust-lang/rust/commit/d9d97c9f090bfaa6a90b752455769ec12cb227f7"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "1231898ed7eba0051edc90b95fd0babf9ee7aece", "filename": "src/libstd/sys/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cc8565b20a89a2169b2103dcbcacb218c79dc2a4/src%2Flibstd%2Fsys%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc8565b20a89a2169b2103dcbcacb218c79dc2a4/src%2Flibstd%2Fsys%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fmod.rs?ref=cc8565b20a89a2169b2103dcbcacb218c79dc2a4", "patch": "@@ -62,9 +62,10 @@ cfg_if! {\n     if #[cfg(any(unix, target_os = \"redox\"))] {\n         // On unix we'll document what's already available\n         pub use self::ext as unix_ext;\n-    } else if #[cfg(target_arch = \"wasm32\")] {\n-        // On wasm right now the module below doesn't compile (missing things\n-        // in `libc` which is empty) so just omit everything with an empty module\n+    } else if #[cfg(any(target_os = \"cloudabi\", target_arch = \"wasm32\"))] {\n+        // On CloudABI and wasm right now the module below doesn't compile\n+        // (missing things in `libc` which is empty) so just omit everything\n+        // with an empty module\n         #[unstable(issue = \"0\", feature = \"std_internals\")]\n         pub mod unix_ext {}\n     } else {\n@@ -80,8 +81,9 @@ cfg_if! {\n     if #[cfg(windows)] {\n         // On windows we'll just be documenting what's already available\n         pub use self::ext as windows_ext;\n-    } else if #[cfg(target_arch = \"wasm32\")] {\n-        // On wasm right now the shim below doesn't compile, so just omit it\n+    } else if #[cfg(any(target_os = \"cloudabi\", target_arch = \"wasm32\"))] {\n+        // On CloudABI and wasm right now the shim below doesn't compile, so\n+        // just omit it\n         #[unstable(issue = \"0\", feature = \"std_internals\")]\n         pub mod windows_ext {}\n     } else {"}]}