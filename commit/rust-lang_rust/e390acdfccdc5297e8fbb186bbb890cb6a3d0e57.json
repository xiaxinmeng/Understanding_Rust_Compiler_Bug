{"sha": "e390acdfccdc5297e8fbb186bbb890cb6a3d0e57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOTBhY2RmY2NkYzUyOTdlOGZiYjE4NmJiYjg5MGNiNmEzZDBlNTc=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-06-15T14:59:51Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-06-15T14:59:51Z"}, "message": "Use expr_ty_adjusted in convert_place_op_to_mutable", "tree": {"sha": "815636c1e637a1996127811dc294a5b88646c668", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/815636c1e637a1996127811dc294a5b88646c668"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e390acdfccdc5297e8fbb186bbb890cb6a3d0e57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e390acdfccdc5297e8fbb186bbb890cb6a3d0e57", "html_url": "https://github.com/rust-lang/rust/commit/e390acdfccdc5297e8fbb186bbb890cb6a3d0e57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e390acdfccdc5297e8fbb186bbb890cb6a3d0e57/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4710f85882c08594a900b09c13fbe51ca207daec", "url": "https://api.github.com/repos/rust-lang/rust/commits/4710f85882c08594a900b09c13fbe51ca207daec", "html_url": "https://github.com/rust-lang/rust/commit/4710f85882c08594a900b09c13fbe51ca207daec"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "0a4293140a82af250f28be3ffce27d70eed116c9", "filename": "src/librustc_typeck/check/reconciliation.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e390acdfccdc5297e8fbb186bbb890cb6a3d0e57/src%2Flibrustc_typeck%2Fcheck%2Freconciliation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e390acdfccdc5297e8fbb186bbb890cb6a3d0e57/src%2Flibrustc_typeck%2Fcheck%2Freconciliation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Freconciliation.rs?ref=e390acdfccdc5297e8fbb186bbb890cb6a3d0e57", "patch": "@@ -89,17 +89,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return;\n         }\n \n+        // Need to deref because overloaded place ops take self by-reference.\n         let base_ty = self\n             .tables\n             .borrow()\n-            .expr_adjustments(base_expr)\n-            .last()\n-            .map_or_else(|| self.node_ty(expr.hir_id), |adj| adj.target);\n-        let base_ty = self.resolve_vars_if_possible(&base_ty);\n-\n-        // Need to deref because overloaded place ops take self by-reference.\n-        let base_ty =\n-            base_ty.builtin_deref(false).expect(\"place op takes something that is not a ref\").ty;\n+            .expr_ty_adjusted(base_expr)\n+            .builtin_deref(false)\n+            .expect(\"place op takes something that is not a ref\")\n+            .ty;\n \n         let method = self.try_overloaded_place_op(expr.span, base_ty, arg_tys, Needs::MutPlace, op);\n         let method = match method {"}]}