{"sha": "e8e43c9e16d78e6fe26f67ba1c4218427acc583a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZTQzYzllMTZkNzhlNmZlMjZmNjdiYTFjNDIxODQyN2FjYzU4M2E=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-30T20:52:05Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-05T09:45:10Z"}, "message": "Fix argument alias handling for -g and -C debuginfo", "tree": {"sha": "2077663aedbfb4d9027600be0d1b61824c7bd36d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2077663aedbfb4d9027600be0d1b61824c7bd36d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8e43c9e16d78e6fe26f67ba1c4218427acc583a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e43c9e16d78e6fe26f67ba1c4218427acc583a", "html_url": "https://github.com/rust-lang/rust/commit/e8e43c9e16d78e6fe26f67ba1c4218427acc583a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8e43c9e16d78e6fe26f67ba1c4218427acc583a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6da57f3e713b8b3adef209940335a8f6bfa642f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6da57f3e713b8b3adef209940335a8f6bfa642f", "html_url": "https://github.com/rust-lang/rust/commit/e6da57f3e713b8b3adef209940335a8f6bfa642f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "8e223170894dd9ea14489d357a0375ced3ed7cce", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e8e43c9e16d78e6fe26f67ba1c4218427acc583a/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8e43c9e16d78e6fe26f67ba1c4218427acc583a/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=e8e43c9e16d78e6fe26f67ba1c4218427acc583a", "patch": "@@ -2214,10 +2214,15 @@ pub fn build_session_options_and_crate_config(\n         }\n     };\n     let debug_assertions = cg.debug_assertions.unwrap_or(opt_level == OptLevel::No);\n-    let debuginfo = if matches.opt_present(\"g\") {\n-        if cg.debuginfo.is_some() {\n-            early_error(error_format, \"-g and -C debuginfo both provided\");\n+    let max_g = matches.opt_positions(\"g\").into_iter().max();\n+    let max_c = matches.opt_strs_pos(\"C\").into_iter().flat_map(|(i, s)| {\n+        if let Some(\"debuginfo\") = s.splitn(2, '=').next() {\n+            Some(i)\n+        } else {\n+            None\n         }\n+    }).max();\n+    let debuginfo = if max_g > max_c {\n         DebugInfo::Full\n     } else {\n         match cg.debuginfo {"}]}