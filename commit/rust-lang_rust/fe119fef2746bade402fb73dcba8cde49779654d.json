{"sha": "fe119fef2746bade402fb73dcba8cde49779654d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMTE5ZmVmMjc0NmJhZGU0MDJmYjczZGNiYThjZGU0OTc3OTY1NGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-22T15:51:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-22T15:51:53Z"}, "message": "Hide data from public API", "tree": {"sha": "895e5bb04a4a632b4069bf66f8c7770cfa80a90d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/895e5bb04a4a632b4069bf66f8c7770cfa80a90d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe119fef2746bade402fb73dcba8cde49779654d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe119fef2746bade402fb73dcba8cde49779654d", "html_url": "https://github.com/rust-lang/rust/commit/fe119fef2746bade402fb73dcba8cde49779654d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe119fef2746bade402fb73dcba8cde49779654d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4f4ae0dd88f0baf0065d612f41fea3d54af79fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4f4ae0dd88f0baf0065d612f41fea3d54af79fd", "html_url": "https://github.com/rust-lang/rust/commit/d4f4ae0dd88f0baf0065d612f41fea3d54af79fd"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "af07b2c4ddc4e1658f0873da5e0c48767d478ae8", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fe119fef2746bade402fb73dcba8cde49779654d/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe119fef2746bade402fb73dcba8cde49779654d/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=fe119fef2746bade402fb73dcba8cde49779654d", "patch": "@@ -10,7 +10,7 @@ use hir_def::{\n     adt::VariantData,\n     body::scope::ExprScopes,\n     builtin_type::BuiltinType,\n-    data::{ConstData, TraitData},\n+    data::TraitData,\n     nameres::per_ns::PerNs,\n     resolver::{HasResolver, TypeNs},\n     type_ref::TypeRef,\n@@ -644,12 +644,8 @@ impl Const {\n         Some(self.module(db).krate())\n     }\n \n-    pub fn data(self, db: &impl HirDatabase) -> Arc<ConstData> {\n-        db.const_data(self.id)\n-    }\n-\n     pub fn name(self, db: &impl HirDatabase) -> Option<Name> {\n-        self.data(db).name.clone()\n+        db.const_data(self.id).name.clone()\n     }\n \n     pub fn infer(self, db: &impl HirDatabase) -> Arc<InferenceResult> {\n@@ -695,10 +691,6 @@ impl Static {\n         Some(self.module(db).krate())\n     }\n \n-    pub fn data(self, db: &impl HirDatabase) -> Arc<ConstData> {\n-        db.static_data(self.id)\n-    }\n-\n     pub fn infer(self, db: &impl HirDatabase) -> Arc<InferenceResult> {\n         db.infer(self.into())\n     }"}, {"sha": "471bdc3878c4360f7fba2b7b99abf0df4ebbbe7f", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fe119fef2746bade402fb73dcba8cde49779654d/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe119fef2746bade402fb73dcba8cde49779654d/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=fe119fef2746bade402fb73dcba8cde49779654d", "patch": "@@ -69,10 +69,10 @@ pub fn infer_query(db: &impl HirDatabase, def: DefWithBody) -> Arc<InferenceResu\n     let resolver = DefWithBodyId::from(def).resolver(db);\n     let mut ctx = InferenceContext::new(db, def, resolver);\n \n-    match def {\n-        DefWithBody::Const(ref c) => ctx.collect_const(&c.data(db)),\n-        DefWithBody::Function(ref f) => ctx.collect_fn(&db.function_data(f.id)),\n-        DefWithBody::Static(ref s) => ctx.collect_const(&s.data(db)),\n+    match &def {\n+        DefWithBody::Const(c) => ctx.collect_const(&db.const_data(c.id)),\n+        DefWithBody::Function(f) => ctx.collect_fn(&db.function_data(f.id)),\n+        DefWithBody::Static(s) => ctx.collect_const(&db.static_data(s.id)),\n     }\n \n     ctx.infer_body();"}, {"sha": "2272510e8d391048b88fa603147ae9e8fd8b4009", "filename": "crates/ra_hir/src/ty/lower.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe119fef2746bade402fb73dcba8cde49779654d/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe119fef2746bade402fb73dcba8cde49779654d/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs?ref=fe119fef2746bade402fb73dcba8cde49779654d", "patch": "@@ -639,15 +639,15 @@ fn type_for_fn(db: &impl HirDatabase, def: Function) -> Ty {\n \n /// Build the declared type of a const.\n fn type_for_const(db: &impl HirDatabase, def: Const) -> Ty {\n-    let data = def.data(db);\n+    let data = db.const_data(def.id);\n     let resolver = def.id.resolver(db);\n \n     Ty::from_hir(db, &resolver, &data.type_ref)\n }\n \n /// Build the declared type of a static.\n fn type_for_static(db: &impl HirDatabase, def: Static) -> Ty {\n-    let data = def.data(db);\n+    let data = db.static_data(def.id);\n     let resolver = def.id.resolver(db);\n \n     Ty::from_hir(db, &resolver, &data.type_ref)"}]}