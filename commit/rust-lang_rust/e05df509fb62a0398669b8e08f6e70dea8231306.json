{"sha": "e05df509fb62a0398669b8e08f6e70dea8231306", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNWRmNTA5ZmI2MmEwMzk4NjY5YjhlMDhmNmU3MGRlYTgyMzEzMDY=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-21T02:52:33Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-21T02:52:33Z"}, "message": "Refactor push_stack_frame.", "tree": {"sha": "76ebc7d0f8e9d01daa4fc4701eb37a68ab4a36d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76ebc7d0f8e9d01daa4fc4701eb37a68ab4a36d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e05df509fb62a0398669b8e08f6e70dea8231306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e05df509fb62a0398669b8e08f6e70dea8231306", "html_url": "https://github.com/rust-lang/rust/commit/e05df509fb62a0398669b8e08f6e70dea8231306", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e05df509fb62a0398669b8e08f6e70dea8231306/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2f43e55350b5ddcee7953987df16c2dfa03c7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2f43e55350b5ddcee7953987df16c2dfa03c7f", "html_url": "https://github.com/rust-lang/rust/commit/0a2f43e55350b5ddcee7953987df16c2dfa03c7f"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "f880e1cd35fa8d475e7e422e6f999c51a33ad098", "filename": "src/interpreter.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e05df509fb62a0398669b8e08f6e70dea8231306/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e05df509fb62a0398669b8e08f6e70dea8231306/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=e05df509fb62a0398669b8e08f6e70dea8231306", "patch": "@@ -90,20 +90,22 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n     }\n \n     fn push_stack_frame(&mut self, mir: &Mir, args: &[Value], return_ptr: Pointer) {\n-        self.call_stack.push(Frame {\n+        let frame = Frame {\n             return_ptr: return_ptr,\n             offset: self.value_stack.len(),\n             num_args: mir.arg_decls.len(),\n             num_vars: mir.var_decls.len(),\n             num_temps: mir.temp_decls.len(),\n-        });\n+        };\n \n-        let frame = self.call_stack.last().unwrap();\n         self.value_stack.extend(iter::repeat(Value::Uninit).take(frame.size()));\n \n         for (i, arg) in args.iter().enumerate() {\n             self.value_stack[frame.arg_offset(i)] = arg.clone();\n         }\n+\n+        self.call_stack.push(frame);\n+\n     }\n \n     fn pop_stack_frame(&mut self) {"}]}