{"sha": "171c4c148540846c8aab4e1f0f491e8bfb892fcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MWM0YzE0ODU0MDg0NmM4YWFiNGUxZjBmNDkxZThiZmI4OTJmY2Y=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-06T09:45:25Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-11T10:40:24Z"}, "message": "move iter_skip_next to its own module", "tree": {"sha": "483ef7c06e9eadbc1232675059f50d1b7643d9f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/483ef7c06e9eadbc1232675059f50d1b7643d9f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/171c4c148540846c8aab4e1f0f491e8bfb892fcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/171c4c148540846c8aab4e1f0f491e8bfb892fcf", "html_url": "https://github.com/rust-lang/rust/commit/171c4c148540846c8aab4e1f0f491e8bfb892fcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/171c4c148540846c8aab4e1f0f491e8bfb892fcf/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24909fabd27091a7b363dcbc549636e98ba4a898", "url": "https://api.github.com/repos/rust-lang/rust/commits/24909fabd27091a7b363dcbc549636e98ba4a898", "html_url": "https://github.com/rust-lang/rust/commit/24909fabd27091a7b363dcbc549636e98ba4a898"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "5f5969134e49062483a4a5ab31f5934a28a02ff5", "filename": "clippy_lints/src/methods/iter_skip_next.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/171c4c148540846c8aab4e1f0f491e8bfb892fcf/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171c4c148540846c8aab4e1f0f491e8bfb892fcf/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs?ref=171c4c148540846c8aab4e1f0f491e8bfb892fcf", "patch": "@@ -0,0 +1,24 @@\n+use crate::utils::{match_trait_method, paths, snippet, span_lint_and_sugg};\n+use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+\n+use super::ITER_SKIP_NEXT;\n+\n+pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, skip_args: &[hir::Expr<'_>]) {\n+    // lint if caller of skip is an Iterator\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+        if let [caller, n] = skip_args {\n+            let hint = format!(\".nth({})\", snippet(cx, n.span, \"..\"));\n+            span_lint_and_sugg(\n+                cx,\n+                ITER_SKIP_NEXT,\n+                expr.span.trim_start(caller.span).unwrap(),\n+                \"called `skip(..).next()` on an iterator\",\n+                \"use `nth` instead\",\n+                hint,\n+                Applicability::MachineApplicable,\n+            );\n+        }\n+    }\n+}"}, {"sha": "927375f9e0b1738a0a59ecac85787fcadb94a20b", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/171c4c148540846c8aab4e1f0f491e8bfb892fcf/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171c4c148540846c8aab4e1f0f491e8bfb892fcf/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=171c4c148540846c8aab4e1f0f491e8bfb892fcf", "patch": "@@ -22,6 +22,7 @@ mod iter_count;\n mod iter_next_slice;\n mod iter_nth;\n mod iter_nth_zero;\n+mod iter_skip_next;\n mod iterator_step_by_zero;\n mod manual_saturating_arithmetic;\n mod map_collect_result_unit;\n@@ -1730,7 +1731,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             [\"nth\", \"bytes\"] => bytes_nth::check(cx, expr, &arg_lists[1]),\n             [\"nth\", ..] => iter_nth_zero::check(cx, expr, arg_lists[0]),\n             [\"step_by\", ..] => iterator_step_by_zero::check(cx, expr, arg_lists[0]),\n-            [\"next\", \"skip\"] => lint_iter_skip_next(cx, expr, arg_lists[1]),\n+            [\"next\", \"skip\"] => iter_skip_next::check(cx, expr, arg_lists[1]),\n             [\"collect\", \"cloned\"] => iter_cloned_collect::check(cx, expr, arg_lists[1]),\n             [\"as_ref\"] => lint_asref(cx, expr, \"as_ref\", arg_lists[0]),\n             [\"as_mut\"] => lint_asref(cx, expr, \"as_mut\", arg_lists[0]),\n@@ -2510,24 +2511,6 @@ fn lint_unnecessary_fold(cx: &LateContext<'_>, expr: &hir::Expr<'_>, fold_args:\n     }\n }\n \n-fn lint_iter_skip_next(cx: &LateContext<'_>, expr: &hir::Expr<'_>, skip_args: &[hir::Expr<'_>]) {\n-    // lint if caller of skip is an Iterator\n-    if match_trait_method(cx, expr, &paths::ITERATOR) {\n-        if let [caller, n] = skip_args {\n-            let hint = format!(\".nth({})\", snippet(cx, n.span, \"..\"));\n-            span_lint_and_sugg(\n-                cx,\n-                ITER_SKIP_NEXT,\n-                expr.span.trim_start(caller.span).unwrap(),\n-                \"called `skip(..).next()` on an iterator\",\n-                \"use `nth` instead\",\n-                hint,\n-                Applicability::MachineApplicable,\n-            );\n-        }\n-    }\n-}\n-\n fn derefs_to_slice<'tcx>(\n     cx: &LateContext<'tcx>,\n     expr: &'tcx hir::Expr<'tcx>,"}]}