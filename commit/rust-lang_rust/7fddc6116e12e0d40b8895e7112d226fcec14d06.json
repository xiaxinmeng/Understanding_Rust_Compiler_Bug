{"sha": "7fddc6116e12e0d40b8895e7112d226fcec14d06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZGRjNjExNmUxMmUwZDQwYjg4OTVlNzExMmQyMjZmY2VjMTRkMDY=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-02-05T07:19:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-05T07:19:11Z"}, "message": "Merge pull request #2415 from HMPerson1/fix-2356\n\nFix `ImplItem`s being ignored", "tree": {"sha": "b4180c09fed4b254840219b88d8e505edf45b064", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4180c09fed4b254840219b88d8e505edf45b064"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fddc6116e12e0d40b8895e7112d226fcec14d06", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaeAVvCRBK7hj4Ov3rIwAAdHIIAH+JVx6MTTyerbg8uUpb3dQq\nCdLJDQ5nrP7Zm5i3WpcGN46KCXufnJRMj6geKryuBisyiPI6+BQzdAg+FbMzI2K3\nfI+NM8CtUnmLLXudB9mcpDEKZLePqgjIrKBB1VLn6vYwBc5nh7FsPg8UY2vlmpH4\naUR0XBtXTqmRlrqkfgLuTAIZELNO4W4fYLLI38TlnTk8p8kBMlTxvCTx3iGj3yDg\nL1m2TiCBg0eq8av7NiPDUh/6/mYdyTAUElevrNgfbsaAXDtISqUlRE5voncQbVU/\n0VWV7t+ANd11V7yCjUH2zfCoLiGC9IaAeA0wAWJtHBIjVKIA89eko3NtxMkhO50=\n=QaMU\n-----END PGP SIGNATURE-----\n", "payload": "tree b4180c09fed4b254840219b88d8e505edf45b064\nparent 02ee62533d59e2b2bfba490385d0791e87128c58\nparent 10d2feddba907015cca79a23d451f00254ae4a36\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1517815151 +0100\ncommitter GitHub <noreply@github.com> 1517815151 +0100\n\nMerge pull request #2415 from HMPerson1/fix-2356\n\nFix `ImplItem`s being ignored"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fddc6116e12e0d40b8895e7112d226fcec14d06", "html_url": "https://github.com/rust-lang/rust/commit/7fddc6116e12e0d40b8895e7112d226fcec14d06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fddc6116e12e0d40b8895e7112d226fcec14d06/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02ee62533d59e2b2bfba490385d0791e87128c58", "url": "https://api.github.com/repos/rust-lang/rust/commits/02ee62533d59e2b2bfba490385d0791e87128c58", "html_url": "https://github.com/rust-lang/rust/commit/02ee62533d59e2b2bfba490385d0791e87128c58"}, {"sha": "10d2feddba907015cca79a23d451f00254ae4a36", "url": "https://api.github.com/repos/rust-lang/rust/commits/10d2feddba907015cca79a23d451f00254ae4a36", "html_url": "https://github.com/rust-lang/rust/commit/10d2feddba907015cca79a23d451f00254ae4a36"}], "stats": {"total": 163, "additions": 146, "deletions": 17}, "files": [{"sha": "2872cb127294f955c6921d5018fb6de80affb4bc", "filename": "clippy_lints/src/const_static_lifetime.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -1,4 +1,4 @@\n-use syntax::ast::{Item, ItemKind, Ty, TyKind};\n+use syntax::ast::*;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use utils::{in_macro, snippet, span_lint_and_then};\n \n@@ -86,4 +86,22 @@ impl EarlyLintPass for StaticConst {\n             }\n         }\n     }\n+\n+    fn check_trait_item(&mut self, cx: &EarlyContext, item: &TraitItem) {\n+        if !in_macro(item.span) {\n+            // Match only constants...\n+            if let TraitItemKind::Const(ref var_type, _) = item.node {\n+                self.visit_type(var_type, cx);\n+            }\n+        }\n+    }\n+\n+    fn check_impl_item(&mut self, cx: &EarlyContext, item: &ImplItem) {\n+        if !in_macro(item.span) {\n+            // Match only constants...\n+            if let ImplItemKind::Const(ref var_type, _) = item.node {\n+                self.visit_type(var_type, cx);\n+            }\n+        }\n+    }\n }"}, {"sha": "9ef55907ecd3e6ba9db705e61359b4a3e0563404", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -313,21 +313,32 @@ impl<'a, 'tcx> Visitor<'tcx> for SimilarNamesLocalVisitor<'a, 'tcx> {\n impl EarlyLintPass for NonExpressiveNames {\n     fn check_item(&mut self, cx: &EarlyContext, item: &Item) {\n         if let ItemKind::Fn(ref decl, _, _, _, _, ref blk) = item.node {\n-            if !attr::contains_name(&item.attrs, \"test\") {\n-                let mut visitor = SimilarNamesLocalVisitor {\n-                    names: Vec::new(),\n-                    cx: cx,\n-                    lint: self,\n-                    single_char_names: Vec::new(),\n-                };\n-                // initialize with function arguments\n-                for arg in &decl.inputs {\n-                    SimilarNamesNameVisitor(&mut visitor).visit_pat(&arg.pat);\n-                }\n-                // walk all other bindings\n-                walk_block(&mut visitor, blk);\n-            }\n+            do_check(self, cx, &item.attrs, decl, blk);\n+        }\n+    }\n+\n+    fn check_impl_item(&mut self, cx: &EarlyContext, item: &ImplItem) {\n+        if let ImplItemKind::Method(ref sig, ref blk) = item.node {\n+            do_check(self, cx, &item.attrs, &sig.decl, blk);\n+        }\n+    }\n+\n+}\n+\n+fn do_check(lint: &mut NonExpressiveNames, cx: &EarlyContext, attrs: &[Attribute], decl: &FnDecl, blk: &Block) {\n+    if !attr::contains_name(attrs, \"test\") {\n+        let mut visitor = SimilarNamesLocalVisitor {\n+            names: Vec::new(),\n+            cx: cx,\n+            lint: lint,\n+            single_char_names: Vec::new(),\n+        };\n+        // initialize with function arguments\n+        for arg in &decl.inputs {\n+            SimilarNamesNameVisitor(&mut visitor).visit_pat(&arg.pat);\n         }\n+        // walk all other bindings\n+        walk_block(&mut visitor, blk);\n     }\n }\n "}, {"sha": "161ce866fd7b2dbcfc74218bc88a2ca3a0b7d81c", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -518,6 +518,9 @@ pub fn get_enclosing_block<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, node: NodeI\n             Node::NodeItem(&Item {\n                 node: ItemFn(_, _, _, _, _, eid),\n                 ..\n+            }) | Node::NodeImplItem(&ImplItem {\n+                node: ImplItemKind::Method(_, eid),\n+                ..\n             }) => match cx.tcx.hir.body(eid).value.node {\n                 ExprBlock(ref block) => Some(block),\n                 _ => None,"}, {"sha": "745821a1503c9e92484912a652175cdd7d5abea6", "filename": "tests/ui/const_static_lifetime.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fconst_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fconst_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.rs?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -35,3 +35,15 @@ fn main() {\n     println!(\"{:?}\", VAR_HEIGHT);\n     println!(\"{}\", false_positive);\n }\n+\n+trait Bar {\n+    const TRAIT_VAR: &'static str;\n+}\n+\n+impl Foo {\n+    const IMPL_VAR: &'static str = \"var\";\n+}\n+\n+impl Bar for Foo {\n+    const TRAIT_VAR: &'static str = \"foo\";\n+}"}, {"sha": "b1059d2ef012d8b269ee84c22289d428b812ef44", "filename": "tests/ui/const_static_lifetime.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fconst_static_lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fconst_static_lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.stderr?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -78,5 +78,23 @@ error: Constants have by default a `'static` lifetime\n 24 | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n \n-error: aborting due to 13 previous errors\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/const_static_lifetime.rs:40:23\n+   |\n+40 |     const TRAIT_VAR: &'static str;\n+   |                      -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/const_static_lifetime.rs:44:22\n+   |\n+44 |     const IMPL_VAR: &'static str = \"var\";\n+   |                     -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/const_static_lifetime.rs:48:23\n+   |\n+48 |     const TRAIT_VAR: &'static str = \"foo\";\n+   |                      -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: aborting due to 16 previous errors\n "}, {"sha": "d4cefb0f1e3ec3640d9675e114fe2e9b9426d400", "filename": "tests/ui/issue_2356.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fissue_2356.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fissue_2356.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.rs?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -0,0 +1,24 @@\n+#![deny(while_let_on_iterator)]\n+\n+use std::iter::Iterator;\n+\n+struct Foo;\n+\n+impl Foo {\n+    fn foo1<I: Iterator<Item = usize>>(mut it: I) {\n+        while let Some(_) = it.next() {\n+            println!(\"{:?}\", it.size_hint());\n+        }\n+    }\n+\n+    fn foo2<I: Iterator<Item = usize>>(mut it: I) {\n+        while let Some(e) = it.next() {\n+            println!(\"{:?}\", e);\n+        }\n+    }\n+}\n+\n+fn main() {\n+    Foo::foo1(vec![].into_iter());\n+    Foo::foo2(vec![].into_iter());\n+}"}, {"sha": "4b82a0a7565b44a333bd0113e03482e7dafea6cd", "filename": "tests/ui/issue_2356.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fissue_2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fissue_2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.stderr?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -0,0 +1,14 @@\n+error: this loop could be written as a `for` loop\n+  --> $DIR/issue_2356.rs:15:29\n+   |\n+15 |         while let Some(e) = it.next() {\n+   |                             ^^^^^^^^^ help: try: `for e in it { .. }`\n+   |\n+note: lint level defined here\n+  --> $DIR/issue_2356.rs:1:9\n+   |\n+1  | #![deny(while_let_on_iterator)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "19f0889a92c61a2745c4d5e59a8456db122460db", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -141,3 +141,14 @@ fn underscores_and_numbers() {\n     let __1___2 = 12; //~ERROR Consider a more descriptive name\n     let _1_ok= 1;\n }\n+\n+struct Bar;\n+\n+impl Bar {\n+    fn bar() {\n+        let _1 = 1;\n+        let ____1 = 1;\n+        let __1___2 = 12;\n+        let _1_ok= 1;\n+    }\n+}"}, {"sha": "4b95a1a9e7007d9d1d23f252edb27ebc9320a984", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7fddc6116e12e0d40b8895e7112d226fcec14d06/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=7fddc6116e12e0d40b8895e7112d226fcec14d06", "patch": "@@ -149,5 +149,23 @@ error: consider choosing a more descriptive name\n 141 |     let __1___2 = 12; //~ERROR Consider a more descriptive name\n     |         ^^^^^^^\n \n-error: aborting due to 14 previous errors\n+error: consider choosing a more descriptive name\n+   --> $DIR/non_expressive_names.rs:149:13\n+    |\n+149 |         let _1 = 1;\n+    |             ^^\n+\n+error: consider choosing a more descriptive name\n+   --> $DIR/non_expressive_names.rs:150:13\n+    |\n+150 |         let ____1 = 1;\n+    |             ^^^^^\n+\n+error: consider choosing a more descriptive name\n+   --> $DIR/non_expressive_names.rs:151:13\n+    |\n+151 |         let __1___2 = 12;\n+    |             ^^^^^^^\n+\n+error: aborting due to 17 previous errors\n "}]}