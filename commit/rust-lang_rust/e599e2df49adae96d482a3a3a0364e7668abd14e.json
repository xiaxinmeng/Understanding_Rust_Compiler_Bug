{"sha": "e599e2df49adae96d482a3a3a0364e7668abd14e", "node_id": "C_kwDOAAsO6NoAKGU1OTllMmRmNDlhZGFlOTZkNDgyYTNhM2EwMzY0ZTc2NjhhYmQxNGU", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2021-09-11T23:18:39Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-10-03T12:20:08Z"}, "message": "Move from grid layout to table based layout because of browser limits that overlay row entries after a UA specific amount of rows", "tree": {"sha": "cc89433ae29f24716fbfd5d69ada521c437f3cca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc89433ae29f24716fbfd5d69ada521c437f3cca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e599e2df49adae96d482a3a3a0364e7668abd14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e599e2df49adae96d482a3a3a0364e7668abd14e", "html_url": "https://github.com/rust-lang/rust/commit/e599e2df49adae96d482a3a3a0364e7668abd14e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e599e2df49adae96d482a3a3a0364e7668abd14e/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "677fb6b1dba6666ded51c42638acbdfe877244b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/677fb6b1dba6666ded51c42638acbdfe877244b2", "html_url": "https://github.com/rust-lang/rust/commit/677fb6b1dba6666ded51c42638acbdfe877244b2"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "28b2eded7cc3e1c09444abf7eb29b28a1da0269f", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e599e2df49adae96d482a3a3a0364e7668abd14e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e599e2df49adae96d482a3a3a0364e7668abd14e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=e599e2df49adae96d482a3a3a0364e7668abd14e", "patch": "@@ -34,6 +34,8 @@ use crate::html::markdown::MarkdownSummaryLine;\n \n const ITEM_TABLE_OPEN: &'static str = \"<div class=\\\"item-table\\\">\";\n const ITEM_TABLE_CLOSE: &'static str = \"</div>\";\n+const ITEM_TABLE_ROW_OPEN: &'static str = \"<div class=\\\"item-row\\\">\";\n+const ITEM_TABLE_ROW_CLOSE: &'static str = \"</div>\";\n \n pub(super) fn print_item(cx: &Context<'_>, item: &clean::Item, buf: &mut Buffer, page: &Page<'_>) {\n     debug_assert!(!item.is_stripped());\n@@ -256,9 +258,6 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n \n     debug!(\"{:?}\", indices);\n     let mut curty = None;\n-    // See: https://github.com/rust-lang/rust/issues/88545\n-    let item_table_block_size = 900usize;\n-    let mut item_table_nth_element = 0usize;\n \n     for &idx in &indices {\n         let myitem = &items[idx];\n@@ -285,13 +284,13 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 id = cx.derive_id(short.to_owned()),\n                 name = name\n             );\n-            item_table_nth_element = 0;\n         }\n \n         match *myitem.kind {\n             clean::ExternCrateItem { ref src } => {\n                 use crate::html::format::anchor;\n \n+                w.write_str(ITEM_TABLE_ROW_OPEN);\n                 match *src {\n                     Some(ref src) => write!(\n                         w,\n@@ -312,6 +311,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                     ),\n                 }\n                 w.write_str(\"</code></div>\");\n+                w.write_str(ITEM_TABLE_ROW_CLOSE);\n             }\n \n             clean::ImportItem(ref import) => {\n@@ -336,6 +336,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n \n                 let add = if stab.is_some() { \" \" } else { \"\" };\n \n+                w.write_str(ITEM_TABLE_ROW_OPEN);\n                 write!(\n                     w,\n                     \"<div class=\\\"item-left {stab}{add}import-item\\\">\\\n@@ -348,6 +349,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                     imp = import.print(cx),\n                     stab_tags = stab_tags.unwrap_or_default(),\n                 );\n+                w.write_str(ITEM_TABLE_ROW_CLOSE);\n             }\n \n             _ => {\n@@ -368,6 +370,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 let add = if stab.is_some() { \" \" } else { \"\" };\n \n                 let doc_value = myitem.doc_value().unwrap_or_default();\n+                w.write_str(ITEM_TABLE_ROW_OPEN);\n                 write!(\n                     w,\n                     \"<div class=\\\"item-left {stab}{add}module-item\\\">\\\n@@ -390,15 +393,9 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                         .collect::<Vec<_>>()\n                         .join(\" \"),\n                 );\n+                w.write_str(ITEM_TABLE_ROW_CLOSE);\n             }\n         }\n-\n-        item_table_nth_element += 1;\n-        if item_table_nth_element > item_table_block_size {\n-            w.write_str(ITEM_TABLE_CLOSE);\n-            w.write_str(ITEM_TABLE_OPEN);\n-            item_table_nth_element = 0;\n-        }\n     }\n \n     if curty.is_some() {"}, {"sha": "341d9b80fd82d8091ba5d81ef30439c5843cfe66", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e599e2df49adae96d482a3a3a0364e7668abd14e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/e599e2df49adae96d482a3a3a0364e7668abd14e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=e599e2df49adae96d482a3a3a0364e7668abd14e", "patch": "@@ -773,22 +773,18 @@ h2.small-section-header > .anchor {\n .block a.current.crate { font-weight: 500; }\n \n .item-table {\n-\tdisplay: grid;\n-\tcolumn-gap: 1.2rem;\n-\trow-gap: 0.0rem;\n-\tgrid-template-columns: auto 1fr;\n+\tdisplay: table-row;\n \t/* align content left */\n \tjustify-items: start;\n }\n-\n+.item-row {\n+\tdisplay: table-row;\n+}\n .item-left, .item-right {\n-\tdisplay: block;\n+\tdisplay: table-cell;\n }\n .item-left {\n-\tgrid-column: 1;\n-}\n-.item-right {\n-\tgrid-column: 2;\n+\tpadding-right: 1.2rem;\n }\n \n .search-container {\n@@ -1891,6 +1887,9 @@ details.undocumented[open] > summary::before {\n \n \t/* Display an alternating layout on tablets and phones */\n \t.item-table {\n+\t\tdisplay: block;\n+\t}\n+\t.item-row {\n \t\tdisplay: flex;\n \t\tflex-flow: column wrap;\n \t}"}]}