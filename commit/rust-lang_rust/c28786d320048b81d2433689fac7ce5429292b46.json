{"sha": "c28786d320048b81d2433689fac7ce5429292b46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyODc4NmQzMjAwNDhiODFkMjQzMzY4OWZhYzdjZTU0MjkyOTJiNDY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-16T10:16:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-16T10:16:43Z"}, "message": "remove an unnecessary intermediate cast", "tree": {"sha": "f400f3a993b380659758a692b599cfd38f5ed7b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f400f3a993b380659758a692b599cfd38f5ed7b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c28786d320048b81d2433689fac7ce5429292b46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c28786d320048b81d2433689fac7ce5429292b46", "html_url": "https://github.com/rust-lang/rust/commit/c28786d320048b81d2433689fac7ce5429292b46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c28786d320048b81d2433689fac7ce5429292b46/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f2b1b3ef4835c84069b84c443f19c788632faa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f2b1b3ef4835c84069b84c443f19c788632faa", "html_url": "https://github.com/rust-lang/rust/commit/e5f2b1b3ef4835c84069b84c443f19c788632faa"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "7754c02744e6fe4b9c946b2954edcf6f854592a9", "filename": "src/shims/posix/fs.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c28786d320048b81d2433689fac7ce5429292b46/src%2Fshims%2Fposix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c28786d320048b81d2433689fac7ce5429292b46/src%2Fshims%2Fposix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Ffs.rs?ref=c28786d320048b81d2433689fac7ce5429292b46", "patch": "@@ -461,9 +461,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         if let Some(FileHandle { file, writable: _ }) = this.machine.file_handler.handles.get_mut(&fd) {\n             trace!(\"read: FD mapped to {:?}\", file);\n-            // This can never fail because `count` was capped to be smaller than\n-            // `isize::MAX`.\n-            let count = isize::try_from(count).unwrap();\n             // We want to read at most `count` bytes. We are sure that `count` is not negative\n             // because it was a target's `usize`. Also we are sure that its smaller than\n             // `usize::MAX` because it is a host's `isize`."}]}