{"sha": "f649c76e985b86edd6d59b3f55902f7f108181ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDljNzZlOTg1Yjg2ZWRkNmQ1OWIzZjU1OTAyZjdmMTA4MTgxZWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-17T17:25:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-17T17:25:10Z"}, "message": "Auto merge of #59047 - petrochenkov:modnodefid, r=Centril\n\nresolve: Account for new importable entities\n\nFixes the ICE encountered in https://github.com/rust-lang/rust/pull/58837\nr? @Centril", "tree": {"sha": "04383674d46aa8574db5ab462418c62aecfdf655", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04383674d46aa8574db5ab462418c62aecfdf655"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f649c76e985b86edd6d59b3f55902f7f108181ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f649c76e985b86edd6d59b3f55902f7f108181ef", "html_url": "https://github.com/rust-lang/rust/commit/f649c76e985b86edd6d59b3f55902f7f108181ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f649c76e985b86edd6d59b3f55902f7f108181ef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "070cebd0aa76702eaaf7c7f340615805f661e937", "url": "https://api.github.com/repos/rust-lang/rust/commits/070cebd0aa76702eaaf7c7f340615805f661e937", "html_url": "https://github.com/rust-lang/rust/commit/070cebd0aa76702eaaf7c7f340615805f661e937"}, {"sha": "47ee538a285944e4e2fe824a733b0e40bbe5aa67", "url": "https://api.github.com/repos/rust-lang/rust/commits/47ee538a285944e4e2fe824a733b0e40bbe5aa67", "html_url": "https://github.com/rust-lang/rust/commit/47ee538a285944e4e2fe824a733b0e40bbe5aa67"}], "stats": {"total": 60, "additions": 49, "deletions": 11}, "files": [{"sha": "6fad4b2db9713c7a72382cb443b8872099836b70", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=f649c76e985b86edd6d59b3f55902f7f108181ef", "patch": "@@ -635,24 +635,24 @@ impl<'a> Resolver<'a> {\n         // but metadata cannot encode gensyms currently, so we create it here.\n         // This is only a guess, two equivalent idents may incorrectly get different gensyms here.\n         let ident = ident.gensym_if_underscore();\n-        let def_id = def.def_id();\n         let expansion = Mark::root(); // FIXME(jseyfried) intercrate hygiene\n         match def {\n-            Def::Mod(..) | Def::Enum(..) => {\n+            Def::Mod(def_id) | Def::Enum(def_id) => {\n                 let module = self.new_module(parent,\n                                              ModuleKind::Def(def, ident.name),\n                                              def_id,\n                                              expansion,\n                                              span);\n                 self.define(parent, ident, TypeNS, (module, vis, DUMMY_SP, expansion));\n             }\n-            Def::Variant(..) | Def::TyAlias(..) | Def::ForeignTy(..) => {\n+            Def::Variant(..) | Def::TyAlias(..) | Def::ForeignTy(..) | Def::Existential(..) |\n+            Def::TraitAlias(..) | Def::PrimTy(..) | Def::ToolMod => {\n                 self.define(parent, ident, TypeNS, (def, vis, DUMMY_SP, expansion));\n             }\n             Def::Fn(..) | Def::Static(..) | Def::Const(..) | Def::VariantCtor(..) => {\n                 self.define(parent, ident, ValueNS, (def, vis, DUMMY_SP, expansion));\n             }\n-            Def::StructCtor(..) => {\n+            Def::StructCtor(def_id, ..) => {\n                 self.define(parent, ident, ValueNS, (def, vis, DUMMY_SP, expansion));\n \n                 if let Some(struct_def_id) =\n@@ -661,7 +661,7 @@ impl<'a> Resolver<'a> {\n                     self.struct_constructors.insert(struct_def_id, (def, vis));\n                 }\n             }\n-            Def::Trait(..) => {\n+            Def::Trait(def_id) => {\n                 let module_kind = ModuleKind::Def(def, ident.name);\n                 let module = self.new_module(parent,\n                                              module_kind,\n@@ -682,18 +682,14 @@ impl<'a> Resolver<'a> {\n                 }\n                 module.populated.set(true);\n             }\n-            Def::Existential(..) |\n-            Def::TraitAlias(..) => {\n-                self.define(parent, ident, TypeNS, (def, vis, DUMMY_SP, expansion));\n-            }\n-            Def::Struct(..) | Def::Union(..) => {\n+            Def::Struct(def_id) | Def::Union(def_id) => {\n                 self.define(parent, ident, TypeNS, (def, vis, DUMMY_SP, expansion));\n \n                 // Record field names for error reporting.\n                 let field_names = self.cstore.struct_field_names_untracked(def_id);\n                 self.insert_field_names(def_id, field_names);\n             }\n-            Def::Macro(..) => {\n+            Def::Macro(..) | Def::NonMacroAttr(..) => {\n                 self.define(parent, ident, MacroNS, (def, vis, DUMMY_SP, expansion));\n             }\n             _ => bug!(\"unexpected definition: {:?}\", def)"}, {"sha": "4aa5d1870000d0d98493d97aa099136abfe3ba68", "filename": "src/test/ui/rust-2018/uniform-paths/auxiliary/cross-crate.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fauxiliary%2Fcross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fauxiliary%2Fcross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fauxiliary%2Fcross-crate.rs?ref=f649c76e985b86edd6d59b3f55902f7f108181ef", "patch": "@@ -0,0 +1,5 @@\n+// edition:2018\n+\n+pub use ignore as built_in_attr;\n+pub use u8 as built_in_type;\n+pub use rustfmt as tool_mod;"}, {"sha": "27d6dbf4683e31530fd6799be160f00735238bc8", "filename": "src/test/ui/rust-2018/uniform-paths/cross-crate.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fcross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fcross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fcross-crate.rs?ref=f649c76e985b86edd6d59b3f55902f7f108181ef", "patch": "@@ -0,0 +1,11 @@\n+// edition:2018\n+// aux-build:cross-crate.rs\n+\n+extern crate cross_crate;\n+use cross_crate::*;\n+\n+#[built_in_attr] //~ ERROR cannot use a built-in attribute through an import\n+#[tool_mod::skip] //~ ERROR cannot use a tool module through an import\n+fn main() {\n+    let _: built_in_type; // OK\n+}"}, {"sha": "fdde75faf5f0421fda0dc874f80174547b849093", "filename": "src/test/ui/rust-2018/uniform-paths/cross-crate.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fcross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f649c76e985b86edd6d59b3f55902f7f108181ef/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fcross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fcross-crate.stderr?ref=f649c76e985b86edd6d59b3f55902f7f108181ef", "patch": "@@ -0,0 +1,26 @@\n+error: cannot use a built-in attribute through an import\n+  --> $DIR/cross-crate.rs:7:3\n+   |\n+LL | #[built_in_attr]\n+   |   ^^^^^^^^^^^^^\n+   |\n+note: the built-in attribute imported here\n+  --> $DIR/cross-crate.rs:5:5\n+   |\n+LL | use cross_crate::*;\n+   |     ^^^^^^^^^^^^^^\n+\n+error: cannot use a tool module through an import\n+  --> $DIR/cross-crate.rs:8:3\n+   |\n+LL | #[tool_mod::skip]\n+   |   ^^^^^^^^\n+   |\n+note: the tool module imported here\n+  --> $DIR/cross-crate.rs:5:5\n+   |\n+LL | use cross_crate::*;\n+   |     ^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}