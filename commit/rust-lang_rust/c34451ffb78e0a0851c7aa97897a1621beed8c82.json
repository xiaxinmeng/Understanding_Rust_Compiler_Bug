{"sha": "c34451ffb78e0a0851c7aa97897a1621beed8c82", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNDQ1MWZmYjc4ZTBhMDg1MWM3YWE5Nzg5N2ExNjIxYmVlZDhjODI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T12:39:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T13:53:20Z"}, "message": "fix aliasing violation in align_to_mut", "tree": {"sha": "d452f73ec7ee91a4a72abe8df6790f7f326a676b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d452f73ec7ee91a4a72abe8df6790f7f326a676b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c34451ffb78e0a0851c7aa97897a1621beed8c82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c34451ffb78e0a0851c7aa97897a1621beed8c82", "html_url": "https://github.com/rust-lang/rust/commit/c34451ffb78e0a0851c7aa97897a1621beed8c82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c34451ffb78e0a0851c7aa97897a1621beed8c82/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04e7f96dd89b1f0ad615dff1c85d11d4c4c64cb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/04e7f96dd89b1f0ad615dff1c85d11d4c4c64cb4", "html_url": "https://github.com/rust-lang/rust/commit/04e7f96dd89b1f0ad615dff1c85d11d4c4c64cb4"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "bb732b5fc3f19bde04d73045a81882e6cf65cc72", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c34451ffb78e0a0851c7aa97897a1621beed8c82/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c34451ffb78e0a0851c7aa97897a1621beed8c82/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=c34451ffb78e0a0851c7aa97897a1621beed8c82", "patch": "@@ -2571,11 +2571,13 @@ impl<T> [T] {\n             let (left, rest) = self.split_at_mut(offset);\n             // now `rest` is definitely aligned, so `from_raw_parts_mut` below is okay\n             let (us_len, ts_len) = rest.align_to_offsets::<U>();\n+            let rest_len = rest.len();\n             let mut_ptr = rest.as_mut_ptr();\n+            // We can't use `rest` again after this, that would invalidate its alias `mut_ptr`!\n             (\n                 left,\n                 from_raw_parts_mut(mut_ptr as *mut U, us_len),\n-                from_raw_parts_mut(mut_ptr.add(rest.len() - ts_len), ts_len),\n+                from_raw_parts_mut(mut_ptr.add(rest_len - ts_len), ts_len),\n             )\n         }\n     }"}, {"sha": "dbab433e33f4823d5f08667272f37819bd3dd10b", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c34451ffb78e0a0851c7aa97897a1621beed8c82/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c34451ffb78e0a0851c7aa97897a1621beed8c82/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=c34451ffb78e0a0851c7aa97897a1621beed8c82", "patch": "@@ -1570,6 +1570,18 @@ fn test_align_to_empty_mid() {\n     }\n }\n \n+#[test]\n+fn test_align_to_mut_aliasing() {\n+    let mut val = [1u8, 2, 3, 4, 5];\n+    // `align_to_mut` used to create `mid` in a way that there was some intermediate\n+    // incorrect aliasing, invalidating the resulting `mid` slice.\n+    let (begin, mid, end) = unsafe { val.align_to_mut::<[u8; 2]>() };\n+    assert!(begin.len() == 0);\n+    assert!(end.len() == 1);\n+    mid[0] = mid[1];\n+    assert_eq!(val, [3, 4, 3, 4, 5])\n+}\n+\n #[test]\n fn test_slice_partition_dedup_by() {\n     let mut slice: [i32; 9] = [1, -1, 2, 3, 1, -5, 5, -2, 2];"}]}