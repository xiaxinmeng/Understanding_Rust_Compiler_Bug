{"sha": "efd2d55e001de2a069d9ad45687abb5834f227da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZDJkNTVlMDAxZGUyYTA2OWQ5YWQ0NTY4N2FiYjU4MzRmMjI3ZGE=", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-01-25T10:52:55Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-01-26T08:13:54Z"}, "message": "review nits", "tree": {"sha": "aed7a62aa44ce4ca0a2519afb071365e7aea0f63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aed7a62aa44ce4ca0a2519afb071365e7aea0f63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efd2d55e001de2a069d9ad45687abb5834f227da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efd2d55e001de2a069d9ad45687abb5834f227da", "html_url": "https://github.com/rust-lang/rust/commit/efd2d55e001de2a069d9ad45687abb5834f227da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efd2d55e001de2a069d9ad45687abb5834f227da/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24", "html_url": "https://github.com/rust-lang/rust/commit/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "66d25ca01ea97d6aeced3dc0e6a1f76db276e221", "filename": "tests/run-pass/atomic.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/efd2d55e001de2a069d9ad45687abb5834f227da/tests%2Frun-pass%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd2d55e001de2a069d9ad45687abb5834f227da/tests%2Frun-pass%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fatomic.rs?ref=efd2d55e001de2a069d9ad45687abb5834f227da", "patch": "@@ -88,13 +88,13 @@ fn atomic_fences() {\n }\n \n fn weak_sometimes_fails() {\n-    static ATOMIC: AtomicBool = AtomicBool::new(false);\n+    let atomic = AtomicBool::new(false);\n     let tries = 20;\n     for _ in 0..tries {\n-        let cur = ATOMIC.load(Relaxed);\n+        let cur = atomic.load(Relaxed);\n         // Try (weakly) to flip the flag.\n-        if ATOMIC.compare_exchange_weak(cur, !cur, Relaxed, Relaxed).is_err() {\n-            // We succeeded, so return and skip the panic.\n+        if atomic.compare_exchange_weak(cur, !cur, Relaxed, Relaxed).is_err() {\n+            // We failed, so return and skip the panic.\n             return;\n         }\n     }"}]}