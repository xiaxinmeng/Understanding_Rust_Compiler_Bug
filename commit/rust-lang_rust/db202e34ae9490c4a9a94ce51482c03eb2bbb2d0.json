{"sha": "db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMjAyZTM0YWU5NDkwYzRhOWE5NGNlNTE0ODJjMDNlYjJiYmIyZDA=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-08T05:39:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-08T05:39:03Z"}, "message": "Rollup merge of #45081 - tamird:fmt-cleanup, r=alexcrichton\n\nfmt: misc cleanup", "tree": {"sha": "c3187564b8252bf0e695b4ad163edb359cbb1c85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3187564b8252bf0e695b4ad163edb359cbb1c85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "html_url": "https://github.com/rust-lang/rust/commit/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48cb6af50b1c6d391cd6aa6c69df31ce4ab092f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/48cb6af50b1c6d391cd6aa6c69df31ce4ab092f6", "html_url": "https://github.com/rust-lang/rust/commit/48cb6af50b1c6d391cd6aa6c69df31ce4ab092f6"}, {"sha": "41b105b6eac2f3b73cc3225d20fab8cecaabb73f", "url": "https://api.github.com/repos/rust-lang/rust/commits/41b105b6eac2f3b73cc3225d20fab8cecaabb73f", "html_url": "https://github.com/rust-lang/rust/commit/41b105b6eac2f3b73cc3225d20fab8cecaabb73f"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "60b9eeb1283cdd3223cf9c568a93289541b8f731", "filename": "src/libcore/fmt/builders.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0/src%2Flibcore%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0/src%2Flibcore%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fbuilders.rs?ref=db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use fmt::{self, FlagV1};\n+use fmt;\n \n struct PadAdapter<'a, 'b: 'a> {\n     fmt: &'a mut fmt::Formatter<'b>,\n@@ -140,7 +140,7 @@ impl<'a, 'b: 'a> DebugStruct<'a, 'b> {\n     }\n \n     fn is_pretty(&self) -> bool {\n-        self.fmt.flags() & (1 << (FlagV1::Alternate as usize)) != 0\n+        self.fmt.alternate()\n     }\n }\n \n@@ -233,7 +233,7 @@ impl<'a, 'b: 'a> DebugTuple<'a, 'b> {\n     }\n \n     fn is_pretty(&self) -> bool {\n-        self.fmt.flags() & (1 << (FlagV1::Alternate as usize)) != 0\n+        self.fmt.alternate()\n     }\n }\n \n@@ -277,7 +277,7 @@ impl<'a, 'b: 'a> DebugInner<'a, 'b> {\n     }\n \n     fn is_pretty(&self) -> bool {\n-        self.fmt.flags() & (1 << (FlagV1::Alternate as usize)) != 0\n+        self.fmt.alternate()\n     }\n }\n \n@@ -519,6 +519,6 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n     }\n \n     fn is_pretty(&self) -> bool {\n-        self.fmt.flags() & (1 << (FlagV1::Alternate as usize)) != 0\n+        self.fmt.alternate()\n     }\n }"}, {"sha": "1e45af5b105c9ca2c50f448bcbee27c394ba1f5a", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db202e34ae9490c4a9a94ce51482c03eb2bbb2d0/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=db202e34ae9490c4a9a94ce51482c03eb2bbb2d0", "patch": "@@ -322,7 +322,6 @@ impl<'a> ArgumentV1<'a> {\n \n // flags available in the v1 format of format_args\n #[derive(Copy, Clone)]\n-#[allow(dead_code)] // SignMinus isn't currently used\n enum FlagV1 { SignPlus, SignMinus, Alternate, SignAwareZeroPad, }\n \n impl<'a> Arguments<'a> {\n@@ -1276,7 +1275,7 @@ impl<'a> Formatter<'a> {\n         write(self.buf, fmt)\n     }\n \n-    /// Flags for formatting (packed version of rt::Flag)\n+    /// Flags for formatting\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn flags(&self) -> u32 { self.flags }\n "}]}