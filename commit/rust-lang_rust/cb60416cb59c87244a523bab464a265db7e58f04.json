{"sha": "cb60416cb59c87244a523bab464a265db7e58f04", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNjA0MTZjYjU5Yzg3MjQ0YTUyM2JhYjQ2NGEyNjVkYjdlNThmMDQ=", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2019-03-05T21:19:36Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2019-03-05T21:19:36Z"}, "message": "Check installed extension", "tree": {"sha": "1a69e838817fcbdcd31b79d879e7a3c9f54226d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a69e838817fcbdcd31b79d879e7a3c9f54226d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb60416cb59c87244a523bab464a265db7e58f04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb60416cb59c87244a523bab464a265db7e58f04", "html_url": "https://github.com/rust-lang/rust/commit/cb60416cb59c87244a523bab464a265db7e58f04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb60416cb59c87244a523bab464a265db7e58f04/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbaf750b10810c21d42710a5d12181ca73099525", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbaf750b10810c21d42710a5d12181ca73099525", "html_url": "https://github.com/rust-lang/rust/commit/bbaf750b10810c21d42710a5d12181ca73099525"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "1e29c63d464ff7a489f6a81347bc5fa284e1a8a1", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/cb60416cb59c87244a523bab464a265db7e58f04/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb60416cb59c87244a523bab464a265db7e58f04/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=cb60416cb59c87244a523bab464a265db7e58f04", "patch": "@@ -2,7 +2,7 @@ use std::{\n     fs,\n     collections::HashMap,\n     path::{Path, PathBuf},\n-    process::{Command, Stdio},\n+    process::{Command, Output, Stdio},\n     io::{Error, ErrorKind}\n };\n \n@@ -80,15 +80,14 @@ pub fn project_root() -> PathBuf {\n }\n \n pub fn run(cmdline: &str, dir: &str) -> Result<()> {\n-    eprintln!(\"\\nwill run: {}\", cmdline);\n-    let project_dir = project_root().join(dir);\n-    let mut args = cmdline.split_whitespace();\n-    let exec = args.next().unwrap();\n-    let status = Command::new(exec).args(args).current_dir(project_dir).status()?;\n-    if !status.success() {\n-        bail!(\"`{}` exited with {}\", cmdline, status);\n-    }\n-    Ok(())\n+    do_run(cmdline, dir, |c| {\n+        c.stdout(Stdio::inherit());\n+    })\n+    .map(|_| ())\n+}\n+\n+pub fn run_with_output(cmdline: &str, dir: &str) -> Result<Output> {\n+    do_run(cmdline, dir, |_| {})\n }\n \n pub fn run_rustfmt(mode: Mode) -> Result<()> {\n@@ -175,6 +174,23 @@ pub fn gen_tests(mode: Mode) -> Result<()> {\n     install_tests(&tests.err, ERR_INLINE_TESTS_DIR, mode)\n }\n \n+fn do_run<F>(cmdline: &str, dir: &str, mut f: F) -> Result<Output>\n+where\n+    F: FnMut(&mut Command),\n+{\n+    eprintln!(\"\\nwill run: {}\", cmdline);\n+    let proj_dir = project_root().join(dir);\n+    let mut args = cmdline.split_whitespace();\n+    let exec = args.next().unwrap();\n+    let mut cmd = Command::new(exec);\n+    f(cmd.args(args).current_dir(proj_dir).stderr(Stdio::inherit()));\n+    let output = cmd.output()?;\n+    if !output.status.success() {\n+        bail!(\"`{}` exited with {}\", cmdline, output.status);\n+    }\n+    Ok(output)\n+}\n+\n #[derive(Default, Debug)]\n struct Tests {\n     pub ok: HashMap<String, Test>,"}, {"sha": "4a1b2ff9a4440c8e0963c53f7aa0b2973792aae5", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cb60416cb59c87244a523bab464a265db7e58f04/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb60416cb59c87244a523bab464a265db7e58f04/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=cb60416cb59c87244a523bab464a265db7e58f04", "patch": "@@ -1,7 +1,8 @@\n use clap::{App, SubCommand};\n-\n+use core::str;\n+use failure::bail;\n use tools::{\n-    generate, gen_tests, install_format_hook, run, run_rustfmt,\n+    generate, gen_tests, install_format_hook, run, run_with_output, run_rustfmt,\n     Overwrite, Result, run_fuzzer,\n };\n \n@@ -44,5 +45,21 @@ fn install_code_extension() -> Result<()> {\n     } else {\n         run(r\"code --install-extension ./ra-lsp-0.0.1.vsix --force\", \"./editors/code\")?;\n     }\n+    verify_installed_extensions()?;\n+    Ok(())\n+}\n+\n+fn verify_installed_extensions() -> Result<()> {\n+    let exts = if cfg!(windows) {\n+        run_with_output(r\"cmd.exe /c code.cmd --list-extensions\", \".\")?\n+    } else {\n+        run_with_output(r\"code --list-extensions\", \".\")?\n+    };\n+    if !str::from_utf8(&exts.stdout)?.contains(\"ra-lsp\") {\n+        bail!(\n+            \"Could not install the Visual Studio Code extension. Please make sure you \\\n+             have at least NodeJS 10.x installed and try again.\"\n+        );\n+    }\n     Ok(())\n }"}]}