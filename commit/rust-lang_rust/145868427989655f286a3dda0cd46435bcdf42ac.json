{"sha": "145868427989655f286a3dda0cd46435bcdf42ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NTg2ODQyNzk4OTY1NWYyODZhM2RkYTBjZDQ2NDM1YmNkZjQyYWM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-03-25T15:51:32Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-04-06T08:52:16Z"}, "message": "Fix feature gating for crate/extern in paths", "tree": {"sha": "3358cca353af66fe1cc840275485453b7a8e1f2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3358cca353af66fe1cc840275485453b7a8e1f2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/145868427989655f286a3dda0cd46435bcdf42ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/145868427989655f286a3dda0cd46435bcdf42ac", "html_url": "https://github.com/rust-lang/rust/commit/145868427989655f286a3dda0cd46435bcdf42ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/145868427989655f286a3dda0cd46435bcdf42ac/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a30bad6de92fd00f24b8ba9547798cb1afa1ba3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a30bad6de92fd00f24b8ba9547798cb1afa1ba3", "html_url": "https://github.com/rust-lang/rust/commit/3a30bad6de92fd00f24b8ba9547798cb1afa1ba3"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "e1f1d95b8ab51e930bb078e320784f345db1b6fd", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/145868427989655f286a3dda0cd46435bcdf42ac/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145868427989655f286a3dda0cd46435bcdf42ac/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=145868427989655f286a3dda0cd46435bcdf42ac", "patch": "@@ -1766,11 +1766,19 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n     fn visit_path(&mut self, path: &'a ast::Path, _id: NodeId) {\n         for segment in &path.segments {\n+            // Identifiers we are going to check could come from a legacy macro (e.g. `#[test]`).\n+            // For such macros identifiers must have empty context, because this context is\n+            // used during name resolution and produced names must be unhygienic for compatibility.\n+            // On the other hand, we need the actual non-empty context for feature gate checking\n+            // because it's hygienic even for legacy macros. As previously stated, such context\n+            // cannot be kept in identifiers, so it's kept in paths instead and we take it from\n+            // there while keeping location info from the ident span.\n+            let span = segment.ident.span.with_ctxt(path.span.ctxt());\n             if segment.ident.name == keywords::Crate.name() {\n-                gate_feature_post!(&self, crate_in_paths, segment.ident.span,\n+                gate_feature_post!(&self, crate_in_paths, span,\n                                    \"`crate` in paths is experimental\");\n             } else if segment.ident.name == keywords::Extern.name() {\n-                gate_feature_post!(&self, extern_in_paths, segment.ident.span,\n+                gate_feature_post!(&self, extern_in_paths, span,\n                                    \"`extern` in paths is experimental\");\n             }\n         }"}]}