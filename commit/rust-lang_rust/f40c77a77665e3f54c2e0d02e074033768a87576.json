{"sha": "f40c77a77665e3f54c2e0d02e074033768a87576", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MGM3N2E3NzY2NWUzZjU0YzJlMGQwMmUwNzQwMzM3NjhhODc1NzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T02:17:30Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T06:40:42Z"}, "message": "Fix shadow.rs", "tree": {"sha": "ed43500e2002281c96afb61895098cf750cdba0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed43500e2002281c96afb61895098cf750cdba0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f40c77a77665e3f54c2e0d02e074033768a87576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f40c77a77665e3f54c2e0d02e074033768a87576", "html_url": "https://github.com/rust-lang/rust/commit/f40c77a77665e3f54c2e0d02e074033768a87576", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f40c77a77665e3f54c2e0d02e074033768a87576/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62897747fdf6913bb36406b72325357e0964da00", "url": "https://api.github.com/repos/rust-lang/rust/commits/62897747fdf6913bb36406b72325357e0964da00", "html_url": "https://github.com/rust-lang/rust/commit/62897747fdf6913bb36406b72325357e0964da00"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "2d85189d111da2dd397696fe4dd0b7676fd5398b", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f40c77a77665e3f54c2e0d02e074033768a87576/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f40c77a77665e3f54c2e0d02e074033768a87576/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=f40c77a77665e3f54c2e0d02e074033768a87576", "patch": "@@ -319,13 +319,6 @@ fn check_expr<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, bindings:\n                 check_expr(cx, e, bindings)\n             }\n         },\n-        ExprKind::If(ref cond, ref then, ref otherwise) => {\n-            check_expr(cx, cond, bindings);\n-            check_expr(cx, &**then, bindings);\n-            if let Some(ref o) = *otherwise {\n-                check_expr(cx, o, bindings);\n-            }\n-        },\n         ExprKind::While(ref cond, ref block, _) => {\n             check_expr(cx, cond, bindings);\n             check_block(cx, block, bindings);"}]}