{"sha": "9a375668b4e71afc8ebeed103e3f5b0899782503", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMzc1NjY4YjRlNzFhZmM4ZWJlZWQxMDNlM2Y1YjA4OTk3ODI1MDM=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-04-25T07:32:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-25T07:32:06Z"}, "message": "Merge pull request #2687 from phansch/explain_how_lints_work\n\nExplain how Clippy and lints work", "tree": {"sha": "437dc2a856374459242ba8b663c0184164b67a76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/437dc2a856374459242ba8b663c0184164b67a76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a375668b4e71afc8ebeed103e3f5b0899782503", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa4C72CRBK7hj4Ov3rIwAAdHIIAD7PMvMg5h5xNAPiVcyH25+6\nX1BaV58SniHRPIyowNFcTz6tSUtUtpPzD2hKtBjoA/2DfiI+Ih3/gDEFQnbM+QGC\ntMcjDf8i/wHdyfrRBt/3s3YKSyEmAPDolrF0VV9nYncl6QNXk4b0iAT64INvUc5b\n045FQVW8bxW9FNephNv0IwIZEhYig10Nak1d2TsWpHHkm1xuhTtoZ/RaY+5GgWMB\nu9201GzFCg+wL3P8t3sv+V56Be192lgxKo/tDwdBKeZSc7j+VeyGToc9HGJPs4DW\nJKJKpEL0xsWOvYxzC8qndqbmWJso454EDWfRsH0jp7qsyAlVDIpb5tfPb4bH3+M=\n=oZSU\n-----END PGP SIGNATURE-----\n", "payload": "tree 437dc2a856374459242ba8b663c0184164b67a76\nparent faefb4f2256f2646d16ac91703d8451d26698db4\nparent 36233789d473cf10e235b12b9421f8ed94f0ca26\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1524641526 +0200\ncommitter GitHub <noreply@github.com> 1524641526 +0200\n\nMerge pull request #2687 from phansch/explain_how_lints_work\n\nExplain how Clippy and lints work"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a375668b4e71afc8ebeed103e3f5b0899782503", "html_url": "https://github.com/rust-lang/rust/commit/9a375668b4e71afc8ebeed103e3f5b0899782503", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a375668b4e71afc8ebeed103e3f5b0899782503/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faefb4f2256f2646d16ac91703d8451d26698db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/faefb4f2256f2646d16ac91703d8451d26698db4", "html_url": "https://github.com/rust-lang/rust/commit/faefb4f2256f2646d16ac91703d8451d26698db4"}, {"sha": "36233789d473cf10e235b12b9421f8ed94f0ca26", "url": "https://api.github.com/repos/rust-lang/rust/commits/36233789d473cf10e235b12b9421f8ed94f0ca26", "html_url": "https://github.com/rust-lang/rust/commit/36233789d473cf10e235b12b9421f8ed94f0ca26"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "afb57610914b72f5716378ee3a863a0391dd37e1", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/9a375668b4e71afc8ebeed103e3f5b0899782503/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/9a375668b4e71afc8ebeed103e3f5b0899782503/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=9a375668b4e71afc8ebeed103e3f5b0899782503", "patch": "@@ -147,6 +147,56 @@ enabled as a plugin:\n #![plugin(clippy)]\n ```\n \n+### How Clippy works\n+\n+Clippy is a [rustc compiler plugin][compiler_plugin]. The main entry point is at [`src/lib.rs`][main_entry]. In there, the lint registration is delegated to the [`clippy_lints`][lint_crate] crate.\n+\n+[`clippy_lints/src/lib.rs`][lint_crate_entry] imports all the different lint modules and registers them with the rustc plugin registry. For example, the [`else_if_without_else`][else_if_without_else] lint is registered like this:\n+\n+```rust\n+// ./clippy_lints/src/lib.rs\n+\n+// ...\n+pub mod else_if_without_else;\n+// ...\n+\n+pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n+    // ...\n+    reg.register_early_lint_pass(box else_if_without_else::ElseIfWithoutElse);\n+    // ...\n+\n+    reg.register_lint_group(\"clippy_restriction\", vec![\n+        // ...\n+        else_if_without_else::ELSE_IF_WITHOUT_ELSE,\n+        // ...\n+    ]);\n+}\n+```\n+\n+The [`rustc_plugin::PluginRegistry`][plugin_registry] provides two methods to register lints: [register_early_lint_pass][reg_early_lint_pass] and [register_late_lint_pass][reg_late_lint_pass].\n+Both take an object that implements an [`EarlyLintPass`][early_lint_pass] or [`LateLintPass`][late_lint_pass] respectively. This is done in every single lint. \n+It's worth noting that the majority of `clippy_lints/src/lib.rs` is autogenerated by `util/update_lints.py` and you don't have to add anything by hand. When you are writing your own lint, you can use that script to save you some time.\n+\n+```rust\n+// ./clippy_lints/src/else_if_without_else.rs\n+\n+use rustc::lint::*;\n+\n+// ...\n+\n+pub struct ElseIfWithoutElse;\n+\n+// ...\n+\n+impl EarlyLintPass for ElseIfWithoutElse {\n+    // ... the functions needed, to make the lint work\n+}\n+```\n+\n+The difference between `EarlyLintPass` and `LateLintPass` is that the methods of the `EarlyLintPass` trait only provide AST information. The methods of the `LateLintPass` trait are executed after type checking and contain type information via the `LateContext` parameter.\n+\n+That's why the `else_if_without_else` example uses the `register_early_lint_pass` function. Because the [actual lint logic][else_if_without_else] does not depend on any type information.\n+\n ## Contributions\n \n Contributions to Clippy should be made in the form of GitHub pull requests. Each pull request will\n@@ -156,3 +206,14 @@ main tree or given feedback for changes that would be required.\n All code in this repository is under the [Mozilla Public License, 2.0](https://www.mozilla.org/MPL/2.0/)\n \n <!-- adapted from https://github.com/servo/servo/blob/master/CONTRIBUTING.md -->\n+\n+[main_entry]: https://github.com/rust-lang-nursery/rust-clippy/blob/c5b39a5917ffc0f1349b6e414fa3b874fdcf8429/src/lib.rs#L14\n+[lint_crate]: https://github.com/rust-lang-nursery/rust-clippy/tree/c5b39a5917ffc0f1349b6e414fa3b874fdcf8429/clippy_lints/src\n+[lint_crate_entry]: https://github.com/rust-lang-nursery/rust-clippy/blob/c5b39a5917ffc0f1349b6e414fa3b874fdcf8429/clippy_lints/src/lib.rs\n+[else_if_without_else]: https://github.com/rust-lang-nursery/rust-clippy/blob/c5b39a5917ffc0f1349b6e414fa3b874fdcf8429/clippy_lints/src/else_if_without_else.rs\n+[compiler_plugin]: https://doc.rust-lang.org/unstable-book/language-features/plugin.html#lint-plugins\n+[plugin_registry]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin/registry/struct.Registry.html\n+[reg_early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin/registry/struct.Registry.html#method.register_early_lint_pass\n+[reg_late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin/registry/struct.Registry.html#method.register_late_lint_pass\n+[early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/trait.EarlyLintPass.html\n+[late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/trait.LateLintPass.html"}]}