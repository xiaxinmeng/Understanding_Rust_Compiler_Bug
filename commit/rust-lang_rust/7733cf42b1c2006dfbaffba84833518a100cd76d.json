{"sha": "7733cf42b1c2006dfbaffba84833518a100cd76d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MzNjZjQyYjFjMjAwNmRmYmFmZmJhODQ4MzM1MThhMTAwY2Q3NmQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-19T15:18:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-19T15:18:01Z"}, "message": "Merge #9635\n\n9635: internal: explain why we avoid serializing everything r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "e01d64228275f953528f99add44f510dd3a81a31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e01d64228275f953528f99add44f510dd3a81a31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7733cf42b1c2006dfbaffba84833518a100cd76d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg9ZepCRBK7hj4Ov3rIwAAaEMIAKKD7LFKWnEvAv+/CJjnt3S+\nbM2ME756DuoyHfxzt4AD3eI0Ljdxrd35IxwDRJLW2FWz7oZW/igMjUQWB2QCzUIg\nZFi2FhPw9WLpig84VyItUVz3Lq6DlqvYCNLnRsD58bhFPAUk9x31AxyveB2IUGTz\nENLY4Bd9aMQmNetDwwoP83YW21tcd4zdn2rL2xbYfcYpBfAAFFI/tmtYcmZ8SHzW\nBRJiEugzyfdgxR63NCiVvhDO3ftRQpMtP+ZsHYY8uIAzCjtKvb3N3WkvQk2ikUY3\nt4/RjtXFW1gWVjjv6pBz75fAkoy0H+7GwN2rP8YASSvRedYMXN0jxCrXbX3K3Hs=\n=zSCL\n-----END PGP SIGNATURE-----\n", "payload": "tree e01d64228275f953528f99add44f510dd3a81a31\nparent 4b6651a1d1a7ff72e0ce7877229d02b5aa6c0358\nparent 6a0f7f0852cf049ddf52628bd1e402ee182ae7cb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626707881 +0000\ncommitter GitHub <noreply@github.com> 1626707881 +0000\n\nMerge #9635\n\n9635: internal: explain why we avoid serializing everything r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7733cf42b1c2006dfbaffba84833518a100cd76d", "html_url": "https://github.com/rust-lang/rust/commit/7733cf42b1c2006dfbaffba84833518a100cd76d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7733cf42b1c2006dfbaffba84833518a100cd76d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b6651a1d1a7ff72e0ce7877229d02b5aa6c0358", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b6651a1d1a7ff72e0ce7877229d02b5aa6c0358", "html_url": "https://github.com/rust-lang/rust/commit/4b6651a1d1a7ff72e0ce7877229d02b5aa6c0358"}, {"sha": "6a0f7f0852cf049ddf52628bd1e402ee182ae7cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a0f7f0852cf049ddf52628bd1e402ee182ae7cb", "html_url": "https://github.com/rust-lang/rust/commit/6a0f7f0852cf049ddf52628bd1e402ee182ae7cb"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "c20eefd7b938a1131aa48f986fffdb41fc0575ce", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7733cf42b1c2006dfbaffba84833518a100cd76d/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7733cf42b1c2006dfbaffba84833518a100cd76d/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=7733cf42b1c2006dfbaffba84833518a100cd76d", "patch": "@@ -67,7 +67,10 @@ impl SourceRoot {\n /// Note that `CrateGraph` is build-system agnostic: it's a concept of the Rust\n /// language proper, not a concept of the build system. In practice, we get\n /// `CrateGraph` by lowering `cargo metadata` output.\n-#[derive(Debug, Clone, Default)]\n+///\n+/// `CrateGraph` is `!Serialize` by design, see\n+/// <https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/dev/architecture.md#serialization>\n+#[derive(Debug, Clone, Default /* Serialize, Deserialize */)]\n pub struct CrateGraph {\n     arena: FxHashMap<CrateId, CrateData>,\n }"}, {"sha": "d817a74eca795bcca905bc8c4b8e60f4b58b13dd", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7733cf42b1c2006dfbaffba84833518a100cd76d/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/7733cf42b1c2006dfbaffba84833518a100cd76d/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=7733cf42b1c2006dfbaffba84833518a100cd76d", "patch": "@@ -457,3 +457,17 @@ It is not cheap enough to enable in prod, and this is a bug which should be fixe\n rust-analyzer strives to be as configurable as possible while offering reasonable defaults where no configuration exists yet.\n There will always be features that some people find more annoying than helpful, so giving the users the ability to tweak or disable these is a big part of offering a good user experience.\n Mind the code--architecture gap: at the moment, we are using fewer feature flags than we really should.\n+\n+### Serialization\n+\n+In Rust, it is easy (often too easy) to add serialization to any type by adding `#[derive(Serialize)]`.\n+This easiness is misleading -- serializable types impose significant backwards compatability constraints.\n+If a type is serializable, then it is a part of some IPC boundary.\n+You often don't have control over the over side of this boundary, so changing serializable types are hard.\n+\n+For this reason, the types in `ide`, `base_db` and bellow are not serializable by design.\n+If such types need to cross an IPC boundary, then the client of rust-analyzer needs to provide custom, client-specific serialization format.\n+This isolates backwards compatibility and migration concerns to a specific client.\n+\n+For example, `rust-project.json` is it's own format -- it doesn't include `CrateGraph` as is.\n+Instead, it creates a `CrateGraph` by calling appropriate constructing functions."}, {"sha": "01daf948ceabfde6116bc975f478631a1ff1d358", "filename": "docs/dev/style.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7733cf42b1c2006dfbaffba84833518a100cd76d/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/7733cf42b1c2006dfbaffba84833518a100cd76d/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=7733cf42b1c2006dfbaffba84833518a100cd76d", "patch": "@@ -292,7 +292,7 @@ impl Person {\n \n **Rationale:** we don't provide public API, it's cheaper to refactor than to pay getters rent.\n Non-local code properties degrade under change, privacy makes invariant local.\n-Borrowed own data discloses irrelevant details about origin of data.\n+Borrowed owned types (`&String`) disclose irrelevant details about internal representation.\n Irrelevant (neither right nor wrong) things obscure correctness.\n \n ## Useless Types"}]}