{"sha": "5efa232160ff07de55cc0f62bfafdedb683789db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZmEyMzIxNjBmZjA3ZGU1NWNjMGY2MmJmYWZkZWRiNjgzNzg5ZGI=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-08-08T21:52:15Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-09-14T19:35:48Z"}, "message": "Check that the `min_align_of` the both types in a `PartialVec` matches\n\nThis is important because the underlying allocator of the `Vec` passes that\ninformation to the deallocator which needs the guarantee that it is the same\nparameters that were also passed to the allocation function.", "tree": {"sha": "3a2d7e8b9fb2cca80d2a48952d6dace24b792123", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a2d7e8b9fb2cca80d2a48952d6dace24b792123"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5efa232160ff07de55cc0f62bfafdedb683789db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5efa232160ff07de55cc0f62bfafdedb683789db", "html_url": "https://github.com/rust-lang/rust/commit/5efa232160ff07de55cc0f62bfafdedb683789db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5efa232160ff07de55cc0f62bfafdedb683789db/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23f2c78d21440a8699cfa917b422795b5ec4adc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/23f2c78d21440a8699cfa917b422795b5ec4adc7", "html_url": "https://github.com/rust-lang/rust/commit/23f2c78d21440a8699cfa917b422795b5ec4adc7"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1e08b3e1d19c3a6671c77c2aa0ef5b8bab8a457a", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efa232160ff07de55cc0f62bfafdedb683789db/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efa232160ff07de55cc0f62bfafdedb683789db/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=5efa232160ff07de55cc0f62bfafdedb683789db", "patch": "@@ -1756,6 +1756,8 @@ pub mod raw {\n //     of type `T`.\n //\n // (g) The size of `T` and `U` is equal and non-zero.\n+//\n+// (h) The `min_align_of` of `T` and `U` is equal.\n \n pub struct PartialVec<T,U> {\n     vec: Vec<T>,\n@@ -1773,12 +1775,14 @@ impl<T,U> PartialVec<T,U> {\n     ///\n     /// Fails if `T` and `U` have differing sizes or are zero-sized.\n     pub fn from_vec(mut vec: Vec<T>) -> PartialVec<T,U> {\n-        // FIXME: Assert that the types `T` and `U` have the same size.\n+        // FIXME: Assert statically that the types `T` and `U` have the same\n+        // size.\n         //\n-        // These asserts make sure (g) is satisfied.\n+        // These asserts make sure (g) and (h) are satisfied.\n         assert!(mem::size_of::<T>() != 0);\n         assert!(mem::size_of::<U>() != 0);\n         assert!(mem::size_of::<T>() == mem::size_of::<U>());\n+        assert!(mem::min_align_of::<T>() == mem::min_align_of::<U>());\n \n         let start = vec.as_mut_ptr();\n "}]}