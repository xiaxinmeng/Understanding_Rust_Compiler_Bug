{"sha": "436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNmQ0MjlkMjdiYTNjZTFhOWE1Y2EzYWU0MDc0YWM3NWFiMTFjMmM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-21T05:43:42Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-21T05:43:42Z"}, "message": "Add two more tests, allow 2 other lints.", "tree": {"sha": "1736b575561e1ae33e8f39841dcd8ce2ddcd7b44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1736b575561e1ae33e8f39841dcd8ce2ddcd7b44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl1c2igQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5p61D/9OAzL0p6JGgY3+wuWA8RXbWTSdfuYnSXqX\na0Q6ZaguQc95MO0pSn15LscuAN2+t209bIR+2RiYDL1Khw368++JpOkGaBVs37S3\nA4bhdSuTX3qoJ2FhUqI1D8rq+YTDClEg3WHWy49FVB/9/BWKJwXdaWFv/MW1FCsF\n0aWYZxqsxDT6qW9eX3nH/1nArYDu83jJCebCs/ozZQJzLLQTUkhu7lIBizBuetpr\nd1xxCP3quA0H6HXsDMfK1mk6bRSUmqZvoJZO1G8E+MYxyRS96GdXe9yqnHbptqCw\n8gEoH/1Ww4A+T7LBGJnMv3E453Fnu/p05leEZwfuabem//Qp1KS83kWQsl3DaYbv\n6VqDHNpQBJfoScMlzwVWRFd5d7Yp9S96z/xFJUzspM07suxIhb8ovqedM2qPEClT\nZ8oO004pE5H7hTL6JzZx73T2/Gl2KuxEoZnnB/cH3V+u2CEer7zB4UaL0xC0u2yq\nWVQRXnHeMvqkPlwBGMa40GeHofpTBpZZtZynTMckHVRvu0qYRRXADP6Gmsy1Pfjo\nfg7zdXmzKjfIZpUE68smyed2EnVJeoQqH9CHjZb5nHaIm+FYhE6c8a3OYJ3p3nDr\nEi8UmcP95lKzAcT8tzcrVGwSxQns8n9axOKLHK4OwyoH/6QF2bfX/Uo9xli8GTfk\nHY5B3XkPZA==\n=a3ZE\n-----END PGP SIGNATURE-----", "payload": "tree 1736b575561e1ae33e8f39841dcd8ce2ddcd7b44\nparent 84716e49f0a93c0ddbab8701a44835a0041e6ffc\nauthor Philipp Hansch <dev@phansch.net> 1566366222 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1566366222 +0200\n\nAdd two more tests, allow 2 other lints.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "html_url": "https://github.com/rust-lang/rust/commit/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84716e49f0a93c0ddbab8701a44835a0041e6ffc", "url": "https://api.github.com/repos/rust-lang/rust/commits/84716e49f0a93c0ddbab8701a44835a0041e6ffc", "html_url": "https://github.com/rust-lang/rust/commit/84716e49f0a93c0ddbab8701a44835a0041e6ffc"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "2bea7d8d96185ed556dd1406d8f7fc5b12f5962d", "filename": "tests/ui/redundant_pattern_matching.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c/tests%2Fui%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c/tests%2Fui%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.rs?ref=436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n+#![allow(clippy::unit_arg, clippy::let_unit_value)]\n \n fn main() {\n     if let Ok(_) = Ok::<i32, i32>(42) {}\n@@ -61,8 +62,17 @@ fn main() {\n \n     let _ = does_something();\n     let _ = returns_unit();\n+\n+    let opt = Some(false);\n+    let x = if let Some(_) = opt { true } else { false };\n+    takes_bool(x);\n+    let y = if let Some(_) = opt {};\n+    takes_unit(y);\n }\n \n+fn takes_bool(x: bool) {}\n+fn takes_unit(x: ()) {}\n+\n fn does_something() -> bool {\n     if let Ok(_) = Ok::<i32, i32>(4) {\n         true"}, {"sha": "df12b7e169a1d95f6df9c0521798737a2a73b4cf", "filename": "tests/ui/redundant_pattern_matching.stderr", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c/tests%2Fui%2Fredundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c/tests%2Fui%2Fredundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.stderr?ref=436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "patch": "@@ -79,10 +79,10 @@ LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:56:15\n+  --> $DIR/redundant_pattern_matching.rs:56:13\n    |\n-LL |       let foo = match None::<()> {\n-   |  _______________^\n+LL |       let _ = match None::<()> {\n+   |  _____________^\n LL | |         Some(_) => false,\n LL | |         None => true,\n LL | |     };\n@@ -94,16 +94,20 @@ error: redundant pattern matching, consider using `is_ok()`\n LL |     let _ = if let Ok(_) = Ok::<usize, ()>(4) { true } else { false };\n    |             -------^^^^^--------------------------------------------- help: try this: `Ok::<usize, ()>(4).is_ok()`\n \n-error: this let-binding has unit value\n-  --> $DIR/redundant_pattern_matching.rs:64:5\n+error: redundant pattern matching, consider using `is_some()`\n+  --> $DIR/redundant_pattern_matching.rs:67:20\n    |\n-LL |     let _ = returns_unit();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `returns_unit();`\n+LL |     let x = if let Some(_) = opt { true } else { false };\n+   |             -------^^^^^^^------------------------------ help: try this: `opt.is_some()`\n+\n+error: redundant pattern matching, consider using `is_some()`\n+  --> $DIR/redundant_pattern_matching.rs:69:20\n    |\n-   = note: `-D clippy::let-unit-value` implied by `-D warnings`\n+LL |     let y = if let Some(_) = opt {};\n+   |             -------^^^^^^^--------- help: try this: `opt.is_some()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:68:12\n+  --> $DIR/redundant_pattern_matching.rs:77:12\n    |\n LL |       if let Ok(_) = Ok::<i32, i32>(4) {\n    |  _____-      ^^^^^\n@@ -114,7 +118,7 @@ LL | |     }\n    | |_____- help: try this: `Ok::<i32, i32>(4).is_ok()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:76:12\n+  --> $DIR/redundant_pattern_matching.rs:85:12\n    |\n LL |       if let Ok(_) = Ok::<i32, i32>(4) {\n    |  _____-      ^^^^^\n@@ -124,5 +128,5 @@ LL | |         false\n LL | |     };\n    | |_____- help: try this: `Ok::<i32, i32>(4).is_ok()`\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 16 previous errors\n "}]}