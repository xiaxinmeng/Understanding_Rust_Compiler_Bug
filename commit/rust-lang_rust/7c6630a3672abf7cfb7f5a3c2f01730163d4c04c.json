{"sha": "7c6630a3672abf7cfb7f5a3c2f01730163d4c04c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNjYzMGEzNjcyYWJmN2NmYjdmNWEzYzJmMDE3MzAxNjNkNGMwNGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-20T00:48:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-20T00:59:53Z"}, "message": "Build tuples in two phases to avoid cleaning up partial tuples", "tree": {"sha": "de17eb29fe254f4d11b6916b0b2385564f6b0242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de17eb29fe254f4d11b6916b0b2385564f6b0242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c", "html_url": "https://github.com/rust-lang/rust/commit/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9626e2f71f86dd710c810b3c92cb8c84ecde6364", "url": "https://api.github.com/repos/rust-lang/rust/commits/9626e2f71f86dd710c810b3c92cb8c84ecde6364", "html_url": "https://github.com/rust-lang/rust/commit/9626e2f71f86dd710c810b3c92cb8c84ecde6364"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "d4df2cb5fbe69c0bb7c2b35609c2ea2d058061df", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=7c6630a3672abf7cfb7f5a3c2f01730163d4c04c", "patch": "@@ -3939,6 +3939,11 @@ fn trans_tup(cx: @block_ctxt, elts: [@ast::expr], id: ast::node_id) ->\n     let tup_res = alloc_ty(bcx, t);\n     let tup_val = tup_res.val;\n     bcx = tup_res.bcx;\n+\n+    // Like trans_rec, we'll collect the fields of the tuple then build it, so\n+    // that if we fail in between we don't have to deal with cleaning up a\n+    // partial tuple\n+    let tupfields: [(ValueRef, lval_result, ty::t)] = [];\n     let i: int = 0;\n     for e in elts {\n         let e_ty = ty::expr_ty(cx.fcx.lcx.ccx.tcx, e);\n@@ -3947,10 +3952,16 @@ fn trans_tup(cx: @block_ctxt, elts: [@ast::expr], id: ast::node_id) ->\n         // FIXME: constraint on argument?\n         check type_is_tup_like(bcx, t);\n         let dst_res = GEP_tup_like(bcx, t, tup_val, [0, i]);\n-        bcx = move_val_if_temp(dst_res.bcx, INIT, dst_res.val, src, e_ty);\n+        tupfields += [(dst_res.val, src, e_ty)];\n+        bcx = dst_res.bcx;\n         i += 1;\n     }\n \n+    // Fill in the tuple fields\n+    for (dst, src, t) in tupfields {\n+        bcx = move_val_if_temp(bcx, INIT, dst, src, t);\n+    }\n+\n     // Only register the cleanups after the tuple is built\n     add_clean_temp(cx, tup_val, t);\n     ret rslt(bcx, tup_val);"}, {"sha": "0c1d0890b9d977efd3d7b7ca6370378bb36c5aba", "filename": "src/test/run-fail/unwind-tup2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c/src%2Ftest%2Frun-fail%2Funwind-tup2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c6630a3672abf7cfb7f5a3c2f01730163d4c04c/src%2Ftest%2Frun-fail%2Funwind-tup2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-tup2.rs?ref=7c6630a3672abf7cfb7f5a3c2f01730163d4c04c", "patch": "@@ -0,0 +1,13 @@\n+// error-pattern:fail\n+\n+fn fold_local() -> @[int]{\n+    @[0,0,0,0,0,0]\n+}\n+\n+fn fold_remote() -> @[int]{\n+    fail;\n+}\n+\n+fn main() {\n+    let lss = (fold_local(), fold_remote());\n+}"}]}