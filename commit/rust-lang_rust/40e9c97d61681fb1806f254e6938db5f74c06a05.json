{"sha": "40e9c97d61681fb1806f254e6938db5f74c06a05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZTljOTdkNjE2ODFmYjE4MDZmMjU0ZTY5MzhkYjVmNzRjMDZhMDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-06T14:00:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-06T14:00:29Z"}, "message": "Merge #9800\n\n9800: feat: Include suggested replacement in diagnostics r=jonas-schievink a=jonas-schievink\n\nrustc renders the diagnostic text for suggestions by including the suggested replacement at the end (`` help: a function with a similar name exists: `boo` ``), but the emitted JSON diagnostic does not include this in the message. This causes our diagnostics to lack some useful info, so this PR fixes that by appending any suggested replacements to the message.\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9797\r\n\r\nBefore:\r\n![screenshot-2021-08-06-15:54:19](https://user-images.githubusercontent.com/1786438/128521003-105a43a3-e386-4afc-9d5c-7806631f53d7.png)\r\n\r\nAfter:\r\n![screenshot-2021-08-06-15:53:16](https://user-images.githubusercontent.com/1786438/128521022-c16e0967-6cc6-410d-917d-5db5cfbb96be.png)\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "9087c96c0eb8fa8b75ff6a9a9e2d95c87e069f72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9087c96c0eb8fa8b75ff6a9a9e2d95c87e069f72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40e9c97d61681fb1806f254e6938db5f74c06a05", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhDUB9CRBK7hj4Ov3rIwAA5B4IADnrx/hmJJD6trVCXvSAZC4j\n0+QqxPkgscFhR9f0pnohPuVHvOUxfQWHY8JHeHEeaAacaYA2L0CaP2MEvIAwV8DH\njP7z3VzuZwUc+jf/UnaznpeqrJpePmWobuNmUTJNtKUrysu73nRj26phC8vJ7cU9\nM7p90EvTB0N13iJ6bLzPulAO8CFhUW7id33cfSJRC3PLhrKdkQvcXXLHnyx/3ufY\nObLzqg10jdQUnl90zzPF/1aYgvUtZtjboyRD3sHvz1muTOw1QhaMUH+pTFky7EdO\nUAXSSxNLsEnqN/G79l4/jHz9oBMypMsMHoEIY+YFMaPo1De4kIP6ISLc1e+XhFQ=\n=UIf0\n-----END PGP SIGNATURE-----\n", "payload": "tree 9087c96c0eb8fa8b75ff6a9a9e2d95c87e069f72\nparent 85d80df889bc17b736f283b73eca098b40f9c6cd\nparent 5386dc648edb96b42da52974beac5b395f411210\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628258429 +0000\ncommitter GitHub <noreply@github.com> 1628258429 +0000\n\nMerge #9800\n\n9800: feat: Include suggested replacement in diagnostics r=jonas-schievink a=jonas-schievink\n\nrustc renders the diagnostic text for suggestions by including the suggested replacement at the end (`` help: a function with a similar name exists: `boo` ``), but the emitted JSON diagnostic does not include this in the message. This causes our diagnostics to lack some useful info, so this PR fixes that by appending any suggested replacements to the message.\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9797\r\n\r\nBefore:\r\n![screenshot-2021-08-06-15:54:19](https://user-images.githubusercontent.com/1786438/128521003-105a43a3-e386-4afc-9d5c-7806631f53d7.png)\r\n\r\nAfter:\r\n![screenshot-2021-08-06-15:53:16](https://user-images.githubusercontent.com/1786438/128521022-c16e0967-6cc6-410d-917d-5db5cfbb96be.png)\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40e9c97d61681fb1806f254e6938db5f74c06a05", "html_url": "https://github.com/rust-lang/rust/commit/40e9c97d61681fb1806f254e6938db5f74c06a05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40e9c97d61681fb1806f254e6938db5f74c06a05/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85d80df889bc17b736f283b73eca098b40f9c6cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/85d80df889bc17b736f283b73eca098b40f9c6cd", "html_url": "https://github.com/rust-lang/rust/commit/85d80df889bc17b736f283b73eca098b40f9c6cd"}, {"sha": "5386dc648edb96b42da52974beac5b395f411210", "url": "https://api.github.com/repos/rust-lang/rust/commits/5386dc648edb96b42da52974beac5b395f411210", "html_url": "https://github.com/rust-lang/rust/commit/5386dc648edb96b42da52974beac5b395f411210"}], "stats": {"total": 51, "additions": 33, "deletions": 18}, "files": [{"sha": "fd04163de9803cf5ce9aa306a7e3a5396eb66a38", "filename": "crates/rust-analyzer/src/diagnostics/test_data/clippy_pass_by_ref.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "raw_url": "https://github.com/rust-lang/rust/raw/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt?ref=40e9c97d61681fb1806f254e6938db5f74c06a05", "patch": "@@ -107,7 +107,7 @@\n                                 },\n                             },\n                         },\n-                        message: \"consider passing by value instead\",\n+                        message: \"consider passing by value instead: `self`\",\n                     },\n                 ],\n             ),\n@@ -262,7 +262,7 @@\n             source: Some(\n                 \"clippy\",\n             ),\n-            message: \"consider passing by value instead\",\n+            message: \"consider passing by value instead: `self`\",\n             related_information: Some(\n                 [\n                     DiagnosticRelatedInformation {\n@@ -298,7 +298,7 @@\n         },\n         fixes: [\n             CodeAction {\n-                title: \"consider passing by value instead\",\n+                title: \"consider passing by value instead: `self`\",\n                 group: None,\n                 kind: Some(\n                     CodeActionKind("}, {"sha": "3ded70411d353c7c6c4aaf081e17d25bf42f8c06", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "raw_url": "https://github.com/rust-lang/rust/raw/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt?ref=40e9c97d61681fb1806f254e6938db5f74c06a05", "patch": "@@ -61,7 +61,7 @@\n                                 },\n                             },\n                         },\n-                        message: \"consider prefixing with an underscore\",\n+                        message: \"consider prefixing with an underscore: `_foo`\",\n                     },\n                 ],\n             ),\n@@ -109,7 +109,7 @@\n             source: Some(\n                 \"rustc\",\n             ),\n-            message: \"consider prefixing with an underscore\",\n+            message: \"consider prefixing with an underscore: `_foo`\",\n             related_information: Some(\n                 [\n                     DiagnosticRelatedInformation {\n@@ -145,7 +145,7 @@\n         },\n         fixes: [\n             CodeAction {\n-                title: \"consider prefixing with an underscore\",\n+                title: \"consider prefixing with an underscore: `_foo`\",\n                 group: None,\n                 kind: Some(\n                     CodeActionKind("}, {"sha": "0993aa1af14bce2e6372b5fbe53cbd3fe4738f46", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_hint.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "raw_url": "https://github.com/rust-lang/rust/raw/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt?ref=40e9c97d61681fb1806f254e6938db5f74c06a05", "patch": "@@ -61,7 +61,7 @@\n                                 },\n                             },\n                         },\n-                        message: \"consider prefixing with an underscore\",\n+                        message: \"consider prefixing with an underscore: `_foo`\",\n                     },\n                 ],\n             ),\n@@ -109,7 +109,7 @@\n             source: Some(\n                 \"rustc\",\n             ),\n-            message: \"consider prefixing with an underscore\",\n+            message: \"consider prefixing with an underscore: `_foo`\",\n             related_information: Some(\n                 [\n                     DiagnosticRelatedInformation {\n@@ -145,7 +145,7 @@\n         },\n         fixes: [\n             CodeAction {\n-                title: \"consider prefixing with an underscore\",\n+                title: \"consider prefixing with an underscore: `_foo`\",\n                 group: None,\n                 kind: Some(\n                     CodeActionKind("}, {"sha": "d7a974ae57974230cd1d3bdc2b331334e481aa75", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_info.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "raw_url": "https://github.com/rust-lang/rust/raw/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt?ref=40e9c97d61681fb1806f254e6938db5f74c06a05", "patch": "@@ -61,7 +61,7 @@\n                                 },\n                             },\n                         },\n-                        message: \"consider prefixing with an underscore\",\n+                        message: \"consider prefixing with an underscore: `_foo`\",\n                     },\n                 ],\n             ),\n@@ -109,7 +109,7 @@\n             source: Some(\n                 \"rustc\",\n             ),\n-            message: \"consider prefixing with an underscore\",\n+            message: \"consider prefixing with an underscore: `_foo`\",\n             related_information: Some(\n                 [\n                     DiagnosticRelatedInformation {\n@@ -145,7 +145,7 @@\n         },\n         fixes: [\n             CodeAction {\n-                title: \"consider prefixing with an underscore\",\n+                title: \"consider prefixing with an underscore: `_foo`\",\n                 group: None,\n                 kind: Some(\n                     CodeActionKind("}, {"sha": "f77abde5155c5797441fd8c6457fcf829732f87c", "filename": "crates/rust-analyzer/src/diagnostics/test_data/snap_multi_line_fix.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "raw_url": "https://github.com/rust-lang/rust/raw/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt?ref=40e9c97d61681fb1806f254e6938db5f74c06a05", "patch": "@@ -107,7 +107,7 @@\n                                 },\n                             },\n                         },\n-                        message: \"return the expression directly\",\n+                        message: \"return the expression directly: `(0..10).collect()`\",\n                     },\n                 ],\n             ),\n@@ -262,7 +262,7 @@\n             source: Some(\n                 \"clippy\",\n             ),\n-            message: \"return the expression directly\",\n+            message: \"return the expression directly: `(0..10).collect()`\",\n             related_information: Some(\n                 [\n                     DiagnosticRelatedInformation {\n@@ -298,7 +298,7 @@\n         },\n         fixes: [\n             CodeAction {\n-                title: \"return the expression directly\",\n+                title: \"return the expression directly: `(0..10).collect()`\",\n                 group: None,\n                 kind: Some(\n                     CodeActionKind("}, {"sha": "4739cabae55fd8181127cd2a664309898762c62b", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40e9c97d61681fb1806f254e6938db5f74c06a05/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=40e9c97d61681fb1806f254e6938db5f74c06a05", "patch": "@@ -3,6 +3,7 @@\n use std::collections::HashMap;\n \n use flycheck::{DiagnosticLevel, DiagnosticSpan};\n+use itertools::Itertools;\n use stdx::format_to;\n use vfs::{AbsPath, AbsPathBuf};\n \n@@ -134,30 +135,44 @@ fn map_rust_child_diagnostic(\n     }\n \n     let mut edit_map: HashMap<lsp_types::Url, Vec<lsp_types::TextEdit>> = HashMap::new();\n+    let mut suggested_replacements = Vec::new();\n     for &span in &spans {\n         if let Some(suggested_replacement) = &span.suggested_replacement {\n+            if !suggested_replacement.is_empty() {\n+                suggested_replacements.push(suggested_replacement);\n+            }\n             let location = location(config, workspace_root, span);\n             let edit = lsp_types::TextEdit::new(location.range, suggested_replacement.clone());\n             edit_map.entry(location.uri).or_default().push(edit);\n         }\n     }\n \n+    // rustc renders suggestion diagnostics by appending the suggested replacement, so do the same\n+    // here, otherwise the diagnostic text is missing useful information.\n+    let mut message = rd.message.clone();\n+    if !suggested_replacements.is_empty() {\n+        message.push_str(\": \");\n+        let suggestions =\n+            suggested_replacements.iter().map(|suggestion| format!(\"`{}`\", suggestion)).join(\", \");\n+        message.push_str(&suggestions);\n+    }\n+\n     if edit_map.is_empty() {\n         MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n                 location: location(config, workspace_root, spans[0]),\n-                message: rd.message.clone(),\n+                message,\n             },\n             suggested_fix: None,\n         })\n     } else {\n         MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n                 location: location(config, workspace_root, spans[0]),\n-                message: rd.message.clone(),\n+                message: message.clone(),\n             },\n             suggested_fix: Some(lsp_ext::CodeAction {\n-                title: rd.message.clone(),\n+                title: message,\n                 group: None,\n                 kind: Some(lsp_types::CodeActionKind::QUICKFIX),\n                 edit: Some(lsp_ext::SnippetWorkspaceEdit {"}]}