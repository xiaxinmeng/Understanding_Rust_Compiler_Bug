{"sha": "649a5247f58a2cdba58b63e48403b55cf7bf8bdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0OWE1MjQ3ZjU4YTJjZGJhNThiNjNlNDg0MDNiNTVjZjdiZjhiZGI=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2019-11-03T09:54:23Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2019-11-03T09:54:23Z"}, "message": "librustc_lexer: Simplify \"single_quoted_string\" method", "tree": {"sha": "ed39408a5b2607e83b58942040eb29b40d2b2199", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed39408a5b2607e83b58942040eb29b40d2b2199"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/649a5247f58a2cdba58b63e48403b55cf7bf8bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/649a5247f58a2cdba58b63e48403b55cf7bf8bdb", "html_url": "https://github.com/rust-lang/rust/commit/649a5247f58a2cdba58b63e48403b55cf7bf8bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/649a5247f58a2cdba58b63e48403b55cf7bf8bdb/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0c45f7ee7b1c3882d08e9b71e753e3251c2dff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c45f7ee7b1c3882d08e9b71e753e3251c2dff1", "html_url": "https://github.com/rust-lang/rust/commit/e0c45f7ee7b1c3882d08e9b71e753e3251c2dff1"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "2edf3bd78efb96e576188e66e02ad4721de72d69", "filename": "src/librustc_lexer/src/lib.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/649a5247f58a2cdba58b63e48403b55cf7bf8bdb/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649a5247f58a2cdba58b63e48403b55cf7bf8bdb/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Flib.rs?ref=649a5247f58a2cdba58b63e48403b55cf7bf8bdb", "patch": "@@ -537,26 +537,30 @@ impl Cursor<'_> {\n \n     fn single_quoted_string(&mut self) -> bool {\n         debug_assert!(self.prev() == '\\'');\n-        // Parse `'''` as a single char literal.\n-        if self.nth_char(0) == '\\'' && self.nth_char(1) == '\\'' {\n+        // Check if it's a one-symbol literal.\n+        if self.second() == '\\'' && self.first() != '\\\\' {\n             self.bump();\n+            self.bump();\n+            return true;\n         }\n+\n+        // Literal has more than one symbol.\n+\n         // Parse until either quotes are terminated or error is detected.\n-        let mut first = true;\n         loop {\n             match self.first() {\n-                // Probably beginning of the comment, which we don't want to include\n-                // to the error report.\n-                '/' if !first => break,\n-                // Newline without following '\\'' means unclosed quote, stop parsing.\n-                '\\n' if self.nth_char(1) != '\\'' => break,\n-                // End of file, stop parsing.\n-                EOF_CHAR if self.is_eof() => break,\n                 // Quotes are terminated, finish parsing.\n                 '\\'' => {\n                     self.bump();\n                     return true;\n                 }\n+                // Probably beginning of the comment, which we don't want to include\n+                // to the error report.\n+                '/' => break,\n+                // Newline without following '\\'' means unclosed quote, stop parsing.\n+                '\\n' if self.second() != '\\'' => break,\n+                // End of file, stop parsing.\n+                EOF_CHAR if self.is_eof() => break,\n                 // Escaped slash is considered one character, so bump twice.\n                 '\\\\' => {\n                     self.bump();\n@@ -567,8 +571,8 @@ impl Cursor<'_> {\n                     self.bump();\n                 }\n             }\n-            first = false;\n         }\n+        // String was not terminated.\n         false\n     }\n "}]}