{"sha": "413eb5b946955cd33ffd6fb58d7c59de978f92d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxM2ViNWI5NDY5NTVjZDMzZmZkNmZiNThkN2M1OWRlOTc4ZjkyZDY=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-23T08:01:41Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-09-03T16:07:27Z"}, "message": "Add raw string regression test for useless_format lint", "tree": {"sha": "6cea6040589d72f25dccb2967ce716d6c1d79395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cea6040589d72f25dccb2967ce716d6c1d79395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/413eb5b946955cd33ffd6fb58d7c59de978f92d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl1uj78ACgkQaTCGhp1Q\nZjdLPQ/+NYAH7nR2vFrOihcCHAmzF/xyzUEh6zeTvwYCUUvh6c+VWSAfPo7DrR3V\nOFmHCTCwXueogsIN2AusOPwDRZKhOEzHd1IqJUlq6k+yu8PtehXPGCG9uAajcqHW\nUTIeVrUYk1VJSPpaSM4CMb0k7IAZMdGfk8uSuvs1q0/AO8NkULzriL9JMYe2D77T\nbtEEoK9UQI6vtcsiTnB1vrAIb4YiXRB2lQ2i2lSZjBvFZY0GnU9mbpTwC8U0S8+o\ne4pQTW1fLYh1/3zfN1XbXbEEZc2d/dt/2/BBFr8FmRMGZCr74zLURRdvJmQQf/l5\nt4bnWLiPWyjn3ZgrZKDv6x5Gpisk8dCNiyrWjGsOtLFv/9ZsmFzMN0YSkFbFX0XD\nSSVfBe3VTIsdI2ErfvO2gZnN/q+RIJKblU/GP+NEL8b/JxhEad0ecyapLAxpz/aM\nR6+qsc2YM8aDb63wepK3EozI9Lu+kIZE0Fuat7KyCPtAAwC+MgUFHDMwWGgI/PIy\n/WJ1n2YmzEmLOq3T+aOQ1z+PNTk46pdG0dT7kPiSEUycz2E63Qe2FIk2TLy3Leas\nC0wOm0po33c5hGknmM660i8s5oxCLn8dmJfXY+IkQkJJ0tz3WvFnzFz6wClOCOX9\nF0h2LKhzXrSui+eNJTIz5/gXCKoA8n8gCdnRiG7X3om4TXjVXSU=\n=veYx\n-----END PGP SIGNATURE-----", "payload": "tree 6cea6040589d72f25dccb2967ce716d6c1d79395\nparent 1564306943c670a6f9df6b58d1d6b56ac567eb01\nauthor Lzu Tao <taolzu@gmail.com> 1566547301 +0000\ncommitter flip1995 <hello@philkrones.com> 1567526847 +0200\n\nAdd raw string regression test for useless_format lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/413eb5b946955cd33ffd6fb58d7c59de978f92d6", "html_url": "https://github.com/rust-lang/rust/commit/413eb5b946955cd33ffd6fb58d7c59de978f92d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/413eb5b946955cd33ffd6fb58d7c59de978f92d6/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1564306943c670a6f9df6b58d1d6b56ac567eb01", "url": "https://api.github.com/repos/rust-lang/rust/commits/1564306943c670a6f9df6b58d1d6b56ac567eb01", "html_url": "https://github.com/rust-lang/rust/commit/1564306943c670a6f9df6b58d1d6b56ac567eb01"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "f28f98b1caba80ddb9aea1b367cffdc4ca913fe2", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/413eb5b946955cd33ffd6fb58d7c59de978f92d6/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413eb5b946955cd33ffd6fb58d7c59de978f92d6/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=413eb5b946955cd33ffd6fb58d7c59de978f92d6", "patch": "@@ -92,11 +92,8 @@ fn on_argumentv1_new<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, arm\n         then {\n             if let ExprKind::Lit(ref lit) = format_args.node {\n                 if let LitKind::Str(ref s, _) = lit.node {\n-                    let snip = s.as_str().replace(\"{{}}\", \"{}\");\n-                    let sugg = format!(\"\\\"{}\\\".to_string()\", snip);\n-                    return Some(sugg);\n+                    return Some(format!(\"{:?}.to_string()\", s.as_str()));\n                 }\n-                return None;\n             } else {\n                 let snip = snippet(cx, format_args.span, \"<arg>\");\n                 if let ExprKind::MethodCall(ref path, _, _) = format_args.node {\n@@ -132,15 +129,9 @@ fn on_new_v1<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) -> Option<S\n         then {\n             // `format!(\"foo\")` expansion contains `match () { () => [], }`\n             if tup.is_empty() {\n-                let snip = s.as_str().replace(\"{{}}\", \"{}\");\n-                let sugg = format!(\"\\\"{}\\\".to_string()\", snip);\n-                return Some(sugg);\n-            } else {\n-                if s.as_str().is_empty() {\n-                    return on_argumentv1_new(cx, &tup[0], arms);\n-                } else {\n-                    return None;\n-                }\n+                return Some(format!(\"{:?}.to_string()\", s.as_str()));\n+            } else if s.as_str().is_empty() {\n+                return on_argumentv1_new(cx, &tup[0], arms);\n             }\n         }\n     }"}, {"sha": "401a1c533fefc5064a923852b4d2d642335dd013", "filename": "tests/ui/format.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/413eb5b946955cd33ffd6fb58d7c59de978f92d6/tests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/413eb5b946955cd33ffd6fb58d7c59de978f92d6/tests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.fixed?ref=413eb5b946955cd33ffd6fb58d7c59de978f92d6", "patch": "@@ -13,6 +13,7 @@ fn main() {\n     \"foo\".to_string();\n     \"{}\".to_string();\n     \"{} abc {}\".to_string();\n+    \"foo {}\\n\\\" bar\".to_string();\n \n     \"foo\".to_string();\n     format!(\"{:?}\", \"foo\"); // Don't warn about `Debug`."}, {"sha": "1cbc15cfcecbf91a6675e0b073456d10d91d6aa7", "filename": "tests/ui/format.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/413eb5b946955cd33ffd6fb58d7c59de978f92d6/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413eb5b946955cd33ffd6fb58d7c59de978f92d6/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=413eb5b946955cd33ffd6fb58d7c59de978f92d6", "patch": "@@ -13,6 +13,10 @@ fn main() {\n     format!(\"foo\");\n     format!(\"{{}}\");\n     format!(\"{{}} abc {{}}\");\n+    format!(\n+        r##\"foo {{}}\n+\" bar\"##\n+    );\n \n     format!(\"{}\", \"foo\");\n     format!(\"{:?}\", \"foo\"); // Don't warn about `Debug`."}, {"sha": "433a0e705aca11913f89b16648720246a47829a1", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/413eb5b946955cd33ffd6fb58d7c59de978f92d6/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/413eb5b946955cd33ffd6fb58d7c59de978f92d6/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=413eb5b946955cd33ffd6fb58d7c59de978f92d6", "patch": "@@ -19,52 +19,61 @@ LL |     format!(\"{{}} abc {{}}\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"{} abc {}\".to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:17:5\n+  --> $DIR/format.rs:16:5\n+   |\n+LL | /     format!(\n+LL | |         r##\"foo {{}}\n+LL | | \" bar\"##\n+LL | |     );\n+   | |______^ help: consider using .to_string(): `\"foo {}/n/\" bar\".to_string();`\n+\n+error: useless use of `format!`\n+  --> $DIR/format.rs:21:5\n    |\n LL |     format!(\"{}\", \"foo\");\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:21:5\n+  --> $DIR/format.rs:25:5\n    |\n LL |     format!(\"{:+}\", \"foo\"); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:22:5\n+  --> $DIR/format.rs:26:5\n    |\n LL |     format!(\"{:<}\", \"foo\"); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:27:5\n+  --> $DIR/format.rs:31:5\n    |\n LL |     format!(\"{}\", arg);\n    |     ^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `arg.to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:31:5\n+  --> $DIR/format.rs:35:5\n    |\n LL |     format!(\"{:+}\", arg); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `arg.to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:32:5\n+  --> $DIR/format.rs:36:5\n    |\n LL |     format!(\"{:<}\", arg); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `arg.to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:59:5\n+  --> $DIR/format.rs:63:5\n    |\n LL |     format!(\"{}\", 42.to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `42.to_string();`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:61:5\n+  --> $DIR/format.rs:65:5\n    |\n LL |     format!(\"{}\", x.display().to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `x.display().to_string();`\n \n-error: aborting due to 11 previous errors\n+error: aborting due to 12 previous errors\n "}]}