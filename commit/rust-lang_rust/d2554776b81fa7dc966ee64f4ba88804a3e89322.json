{"sha": "d2554776b81fa7dc966ee64f4ba88804a3e89322", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNTU0Nzc2YjgxZmE3ZGM5NjZlZTY0ZjRiYTg4ODA0YTNlODkzMjI=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-05-15T16:12:56Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-05-15T16:12:56Z"}, "message": "Add comment", "tree": {"sha": "bf0b661c86db22383e172b55f02075bff992edcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf0b661c86db22383e172b55f02075bff992edcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2554776b81fa7dc966ee64f4ba88804a3e89322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2554776b81fa7dc966ee64f4ba88804a3e89322", "html_url": "https://github.com/rust-lang/rust/commit/d2554776b81fa7dc966ee64f4ba88804a3e89322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2554776b81fa7dc966ee64f4ba88804a3e89322/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb6cec440a920c06eebea65c117dbc604899975e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6cec440a920c06eebea65c117dbc604899975e", "html_url": "https://github.com/rust-lang/rust/commit/fb6cec440a920c06eebea65c117dbc604899975e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "0b05dd5c0ba6f139c4eef5c0557628c8fa253228", "filename": "compiler/rustc_middle/src/infer/unify_key.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d2554776b81fa7dc966ee64f4ba88804a3e89322/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2554776b81fa7dc966ee64f4ba88804a3e89322/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs?ref=d2554776b81fa7dc966ee64f4ba88804a3e89322", "patch": "@@ -48,6 +48,9 @@ impl<'tcx> UnifyValue for UnifiedRegion<'tcx> {\n \n     fn unify_values(value1: &Self, value2: &Self) -> Result<Self, NoError> {\n         Ok(match (value1.0, value2.0) {\n+            // Here we can just pick one value, because the full constraints graph\n+            // will be handled later. Ideally, we might want a `MultipleValues`\n+            // variant or something. For now though, this is fine.\n             (Some(_), Some(_)) => *value1,\n \n             (Some(_), _) => *value1,"}]}