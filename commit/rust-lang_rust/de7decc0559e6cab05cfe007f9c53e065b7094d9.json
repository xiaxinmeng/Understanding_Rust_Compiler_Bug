{"sha": "de7decc0559e6cab05cfe007f9c53e065b7094d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlN2RlY2MwNTU5ZTZjYWIwNWNmZTAwN2Y5YzUzZTA2NWI3MDk0ZDk=", "commit": {"author": {"name": "Lynn", "email": "lynn@foldr.moe", "date": "2017-07-18T09:31:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-18T09:31:07Z"}, "message": "Fix erroneous reference to Arc instead of Rc", "tree": {"sha": "b3a37ef0a6a7556cf54e36250e93be31b283e4a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3a37ef0a6a7556cf54e36250e93be31b283e4a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de7decc0559e6cab05cfe007f9c53e065b7094d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de7decc0559e6cab05cfe007f9c53e065b7094d9", "html_url": "https://github.com/rust-lang/rust/commit/de7decc0559e6cab05cfe007f9c53e065b7094d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de7decc0559e6cab05cfe007f9c53e065b7094d9/comments", "author": {"login": "lynn", "id": 16232127, "node_id": "MDQ6VXNlcjE2MjMyMTI3", "avatar_url": "https://avatars.githubusercontent.com/u/16232127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lynn", "html_url": "https://github.com/lynn", "followers_url": "https://api.github.com/users/lynn/followers", "following_url": "https://api.github.com/users/lynn/following{/other_user}", "gists_url": "https://api.github.com/users/lynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lynn/subscriptions", "organizations_url": "https://api.github.com/users/lynn/orgs", "repos_url": "https://api.github.com/users/lynn/repos", "events_url": "https://api.github.com/users/lynn/events{/privacy}", "received_events_url": "https://api.github.com/users/lynn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e6334062e2be142125e99d63867711da505cc9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e6334062e2be142125e99d63867711da505cc9e", "html_url": "https://github.com/rust-lang/rust/commit/2e6334062e2be142125e99d63867711da505cc9e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9e72238fbd463f0f1dfdcae2e42ea5ef5d4c9ce1", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de7decc0559e6cab05cfe007f9c53e065b7094d9/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de7decc0559e6cab05cfe007f9c53e065b7094d9/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=de7decc0559e6cab05cfe007f9c53e065b7094d9", "patch": "@@ -973,7 +973,7 @@ impl<T> From<T> for Rc<T> {\n /// A `Weak` pointer is useful for keeping a temporary reference to the value\n /// within [`Rc`] without extending its lifetime. It is also used to prevent\n /// circular references between [`Rc`] pointers, since mutual owning references\n-/// would never allow either [`Arc`] to be dropped. For example, a tree could\n+/// would never allow either [`Rc`] to be dropped. For example, a tree could\n /// have strong [`Rc`] pointers from parent nodes to children, and `Weak`\n /// pointers from children back to their parents.\n ///"}]}