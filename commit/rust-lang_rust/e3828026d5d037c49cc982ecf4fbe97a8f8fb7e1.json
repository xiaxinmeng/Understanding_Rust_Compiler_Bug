{"sha": "e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzODI4MDI2ZDVkMDM3YzQ5Y2M5ODJlY2Y0ZmJlOTdhOGY4ZmI3ZTE=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-09-14T01:16:11Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-10-01T20:21:52Z"}, "message": "Use relative doc URLs in top-level guides", "tree": {"sha": "81c6e4bfff4fc7fe1533168199059fe16858b52f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81c6e4bfff4fc7fe1533168199059fe16858b52f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1", "html_url": "https://github.com/rust-lang/rust/commit/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ced7a9637c10196883733fa81ac67d02269a76e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ced7a9637c10196883733fa81ac67d02269a76e", "html_url": "https://github.com/rust-lang/rust/commit/4ced7a9637c10196883733fa81ac67d02269a76e"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ca63dd0c2599d6b1090bcd666a5ba10ee21be4e3", "filename": "src/doc/complement-design-faq.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1/src%2Fdoc%2Fcomplement-design-faq.md", "raw_url": "https://github.com/rust-lang/rust/raw/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1/src%2Fdoc%2Fcomplement-design-faq.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fcomplement-design-faq.md?ref=e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1", "patch": "@@ -39,7 +39,7 @@ representation as a primitive. This allows using Rust `enum`s in FFI where C\n `enum`s are also used, for most use cases. The attribute can also be applied\n to `struct`s to get the same layout as a C struct would.\n \n-[repr]: http://doc.rust-lang.org/rust.html#miscellaneous-attributes\n+[repr]: rust.html#miscellaneous-attributes\n \n ## There is no GC\n \n@@ -56,7 +56,7 @@ Types which are [`Sync`][sync] are thread-safe when multiple shared\n references to them are used concurrently. Types which are not `Sync` are not\n thread-safe, and thus when used in a global require unsafe code to use.\n \n-[sync]: http://doc.rust-lang.org/core/kinds/trait.Sync.html\n+[sync]: core/kinds/trait.Sync.html\n \n ### If mutable static items that implement `Sync` are safe, why is taking &mut SHARABLE unsafe?\n \n@@ -139,8 +139,8 @@ and explicitly calling the `clone` method. Making user-defined copy operators\n explicit surfaces the underlying complexity, forcing the developer to opt-in\n to potentially expensive operations.\n \n-[copy]: http://doc.rust-lang.org/core/kinds/trait.Copy.html\n-[clone]: http://doc.rust-lang.org/core/clone/trait.Clone.html\n+[copy]: core/kinds/trait.Copy.html\n+[clone]: core/clone/trait.Clone.html\n \n ## No move constructors\n "}, {"sha": "fd0fe2cd51ec1d099ed0aa775b6b346d1b593cf6", "filename": "src/doc/guide.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=e3828026d5d037c49cc982ecf4fbe97a8f8fb7e1", "patch": "@@ -1843,9 +1843,9 @@ that page, but the best part is the search bar. Right up at the top, there's\n a box that you can enter in a search term. The search is pretty primitive\n right now, but is getting better all the time. If you type 'random' in that\n box, the page will update to [this\n-one](http://doc.rust-lang.org/std/index.html?search=random). The very first\n+one](std/index.html?search=random). The very first\n result is a link to\n-[std::rand::random](http://doc.rust-lang.org/std/rand/fn.random.html). If we\n+[std::rand::random](std/rand/fn.random.html). If we\n click on that result, we'll be taken to its documentation page.\n \n This page shows us a few things: the type signature of the function, some\n@@ -3723,7 +3723,7 @@ If you use `Rc<T>` or `Arc<T>`, you have to be careful about introducing\n cycles. If you have two `Rc<T>`s that point to each other, the reference counts\n will never drop to zero, and you'll have a memory leak. To learn more, check\n out [the section on `Rc<T>` and `Arc<T>` in the pointers\n-guide](http://doc.rust-lang.org/guide-pointers.html#rc-and-arc).\n+guide](guide-pointers.html#rc-and-arc).\n \n # Patterns\n \n@@ -5336,6 +5336,6 @@ you will have a firm grasp of basic Rust development. There's a whole lot more\n out there, we've just covered the surface. There's tons of topics that you can\n dig deeper into, and we've built specialized guides for many of them. To learn\n more, dig into the [full documentation\n-index](http://doc.rust-lang.org/index.html).\n+index](index.html).\n \n Happy hacking!"}]}