{"sha": "d0db29003975d8c4b3a552ff8c3a68435173cdc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZGIyOTAwMzk3NWQ4YzRiM2E1NTJmZjhjM2E2ODQzNTE3M2NkYzc=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-22T00:21:37Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-11-01T22:01:02Z"}, "message": "Remove the `AsRef` impl for `SymbolStr`.\n\nBecause it's highly magical, which goes against the goal of keeping\n`SymbolStr` simple. Plus it's only used in a handful of places that\nonly require minor changes.", "tree": {"sha": "5aac5544ad55780f5afbbe1538e49cd1efb91854", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aac5544ad55780f5afbbe1538e49cd1efb91854"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0db29003975d8c4b3a552ff8c3a68435173cdc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0db29003975d8c4b3a552ff8c3a68435173cdc7", "html_url": "https://github.com/rust-lang/rust/commit/d0db29003975d8c4b3a552ff8c3a68435173cdc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0db29003975d8c4b3a552ff8c3a68435173cdc7/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9cef6984b606705f42adf9587f4f1c3babf4d4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9cef6984b606705f42adf9587f4f1c3babf4d4d", "html_url": "https://github.com/rust-lang/rust/commit/b9cef6984b606705f42adf9587f4f1c3babf4d4d"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "b8501f0e12a70ed4abf854297612c29a37903716", "filename": "src/librustc_codegen_ssa/back/command.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0db29003975d8c4b3a552ff8c3a68435173cdc7/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0db29003975d8c4b3a552ff8c3a68435173cdc7/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs?ref=d0db29003975d8c4b3a552ff8c3a68435173cdc7", "patch": "@@ -53,7 +53,7 @@ impl Command {\n     }\n \n     pub fn sym_arg(&mut self, arg: Symbol) -> &mut Command {\n-        self.arg(&arg.as_str());\n+        self.arg(&*arg.as_str());\n         self\n     }\n "}, {"sha": "242a17659a06b461e94b24a8416f21059f62a18f", "filename": "src/libsyntax/parse/parser/module.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d0db29003975d8c4b3a552ff8c3a68435173cdc7/src%2Flibsyntax%2Fparse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0db29003975d8c4b3a552ff8c3a68435173cdc7/src%2Flibsyntax%2Fparse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fmodule.rs?ref=d0db29003975d8c4b3a552ff8c3a68435173cdc7", "patch": "@@ -210,7 +210,7 @@ impl<'a> Parser<'a> {\n             // `/` to `\\`.\n             #[cfg(windows)]\n             let s = s.replace(\"/\", \"\\\\\");\n-            Some(dir_path.join(s))\n+            Some(dir_path.join(&*s))\n         } else {\n             None\n         }\n@@ -314,7 +314,7 @@ impl<'a> Parser<'a> {\n \n     fn push_directory(&mut self, id: Ident, attrs: &[Attribute]) {\n         if let Some(path) = attr::first_attr_value_str_by_name(attrs, sym::path) {\n-            self.directory.path.to_mut().push(&path.as_str());\n+            self.directory.path.to_mut().push(&*path.as_str());\n             self.directory.ownership = DirectoryOwnership::Owned { relative: None };\n         } else {\n             // We have to push on the current module name in the case of relative\n@@ -325,10 +325,10 @@ impl<'a> Parser<'a> {\n             // directory path to `/x/y/z`, not `/x/z` with a relative offset of `y`.\n             if let DirectoryOwnership::Owned { relative } = &mut self.directory.ownership {\n                 if let Some(ident) = relative.take() { // remove the relative offset\n-                    self.directory.path.to_mut().push(ident.as_str());\n+                    self.directory.path.to_mut().push(&*ident.as_str());\n                 }\n             }\n-            self.directory.path.to_mut().push(&id.as_str());\n+            self.directory.path.to_mut().push(&*id.as_str());\n         }\n     }\n }"}, {"sha": "3f7b3e5b3d82aa43c3d55845fc3b7161b293da70", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d0db29003975d8c4b3a552ff8c3a68435173cdc7/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0db29003975d8c4b3a552ff8c3a68435173cdc7/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=d0db29003975d8c4b3a552ff8c3a68435173cdc7", "patch": "@@ -1099,16 +1099,6 @@ pub struct SymbolStr {\n     string: &'static str,\n }\n \n-impl<U: ?Sized> std::convert::AsRef<U> for SymbolStr\n-where\n-    str: std::convert::AsRef<U>\n-{\n-    #[inline]\n-    fn as_ref(&self) -> &U {\n-        self.string.as_ref()\n-    }\n-}\n-\n // This impl allows a `SymbolStr` to be directly equated with a `String` or\n // `&str`.\n impl<T: std::ops::Deref<Target = str>> std::cmp::PartialEq<T> for SymbolStr {"}]}