{"sha": "f51bbc7db93e1e15489d0b43abc110410e44576b", "node_id": "C_kwDOAAsO6NoAKGY1MWJiYzdkYjkzZTFlMTU0ODlkMGI0M2FiYzExMDQxMGU0NDU3NmI", "commit": {"author": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-20T09:53:15Z"}, "committer": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-28T14:59:31Z"}, "message": "apply iter_cloned_collect to copied()", "tree": {"sha": "348db680ef70590d777e71585dca53e0c0014b84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/348db680ef70590d777e71585dca53e0c0014b84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f51bbc7db93e1e15489d0b43abc110410e44576b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f51bbc7db93e1e15489d0b43abc110410e44576b", "html_url": "https://github.com/rust-lang/rust/commit/f51bbc7db93e1e15489d0b43abc110410e44576b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f51bbc7db93e1e15489d0b43abc110410e44576b/comments", "author": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "committer": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec7364f227a2cb8c3cc4ae5f98689e4440cc35e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec7364f227a2cb8c3cc4ae5f98689e4440cc35e8", "html_url": "https://github.com/rust-lang/rust/commit/ec7364f227a2cb8c3cc4ae5f98689e4440cc35e8"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "30d56113c6c102af9e81b9a9c86857bb491406f3", "filename": "clippy_lints/src/methods/iter_cloned_collect.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f51bbc7db93e1e15489d0b43abc110410e44576b/clippy_lints%2Fsrc%2Fmethods%2Fiter_cloned_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f51bbc7db93e1e15489d0b43abc110410e44576b/clippy_lints%2Fsrc%2Fmethods%2Fiter_cloned_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_cloned_collect.rs?ref=f51bbc7db93e1e15489d0b43abc110410e44576b", "patch": "@@ -9,7 +9,7 @@ use rustc_span::sym;\n \n use super::ITER_CLONED_COLLECT;\n \n-pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &hir::Expr<'_>, recv: &'tcx hir::Expr<'_>) {\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, method_name: &str, expr: &hir::Expr<'_>, recv: &'tcx hir::Expr<'_>) {\n     if_chain! {\n         if is_type_diagnostic_item(cx, cx.typeck_results().expr_ty(expr), sym::Vec);\n         if let Some(slice) = derefs_to_slice(cx, recv, cx.typeck_results().expr_ty(recv));\n@@ -20,8 +20,8 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &hir::Expr<'_>, recv: &'\n                 cx,\n                 ITER_CLONED_COLLECT,\n                 to_replace,\n-                \"called `iter().cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and \\\n-                more readable\",\n+                &format!(\"called `iter().{}().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and \\\n+                more readable\", method_name),\n                 \"try\",\n                 \".to_vec()\".to_string(),\n                 Applicability::MachineApplicable,"}, {"sha": "a325da75ba6e69f5c44a9c3753e003174dd0a1ee", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f51bbc7db93e1e15489d0b43abc110410e44576b/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f51bbc7db93e1e15489d0b43abc110410e44576b/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=f51bbc7db93e1e15489d0b43abc110410e44576b", "patch": "@@ -2204,7 +2204,9 @@ fn check_methods<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, msrv: Optio\n             (\"assume_init\", []) => uninit_assumed_init::check(cx, expr, recv),\n             (\"cloned\", []) => cloned_instead_of_copied::check(cx, expr, recv, span, msrv),\n             (\"collect\", []) => match method_call!(recv) {\n-                Some((\"cloned\", [recv2], _)) => iter_cloned_collect::check(cx, expr, recv2),\n+                Some((name @ (\"cloned\" | \"copied\"), [recv2], _)) => {\n+                    iter_cloned_collect::check(cx, name, expr, recv2);\n+                },\n                 Some((\"map\", [m_recv, m_arg], _)) => {\n                     map_collect_result_unit::check(cx, expr, m_recv, m_arg, recv);\n                 },"}, {"sha": "9b862133580459199a7fa746cfbef677ded7c678", "filename": "tests/ui/iter_cloned_collect.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f51bbc7db93e1e15489d0b43abc110410e44576b/tests%2Fui%2Fiter_cloned_collect.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f51bbc7db93e1e15489d0b43abc110410e44576b/tests%2Fui%2Fiter_cloned_collect.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_cloned_collect.fixed?ref=f51bbc7db93e1e15489d0b43abc110410e44576b", "patch": "@@ -23,4 +23,7 @@ fn main() {\n     // Issue #6808\n     let arr: [u8; 64] = [0; 64];\n     let _: Vec<_> = arr.to_vec();\n+\n+    // Issue #6703\n+    let _: Vec<isize> = v.to_vec();\n }"}, {"sha": "b2cc497bf433ae608a644e88f1fc9f986c033b8b", "filename": "tests/ui/iter_cloned_collect.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f51bbc7db93e1e15489d0b43abc110410e44576b/tests%2Fui%2Fiter_cloned_collect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f51bbc7db93e1e15489d0b43abc110410e44576b/tests%2Fui%2Fiter_cloned_collect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_cloned_collect.stderr?ref=f51bbc7db93e1e15489d0b43abc110410e44576b", "patch": "@@ -28,5 +28,11 @@ error: called `iter().cloned().collect()` on a slice to create a `Vec`. Calling\n LL |     let _: Vec<_> = arr.iter().cloned().collect();\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.to_vec()`\n \n-error: aborting due to 4 previous errors\n+error: called `iter().copied().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n+  --> $DIR/iter_cloned_collect.rs:31:26\n+   |\n+LL |     let _: Vec<isize> = v.iter().copied().collect();\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.to_vec()`\n+\n+error: aborting due to 5 previous errors\n "}]}