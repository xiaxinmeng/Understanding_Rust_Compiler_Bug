{"sha": "7cd681684f96c0f59468346384f6f5c5a04a7ff5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZDY4MTY4NGY5NmMwZjU5NDY4MzQ2Mzg0ZjZmNWM1YTA0YTdmZjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-27T21:12:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-15T20:39:15Z"}, "message": "rt: Move test functions to rust_test_helpers.cpp", "tree": {"sha": "e97c83b672578e67ad77a24320e38b19f9946307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e97c83b672578e67ad77a24320e38b19f9946307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cd681684f96c0f59468346384f6f5c5a04a7ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cd681684f96c0f59468346384f6f5c5a04a7ff5", "html_url": "https://github.com/rust-lang/rust/commit/7cd681684f96c0f59468346384f6f5c5a04a7ff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cd681684f96c0f59468346384f6f5c5a04a7ff5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39e2ab5e8b67763ff960203a32acc24a17beeb50", "url": "https://api.github.com/repos/rust-lang/rust/commits/39e2ab5e8b67763ff960203a32acc24a17beeb50", "html_url": "https://github.com/rust-lang/rust/commit/39e2ab5e8b67763ff960203a32acc24a17beeb50"}], "stats": {"total": 194, "additions": 107, "deletions": 87}, "files": [{"sha": "015992abf7821f98f59b8e35e88192b5f844eb9f", "filename": "mk/rt.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7cd681684f96c0f59468346384f6f5c5a04a7ff5/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7cd681684f96c0f59468346384f6f5c5a04a7ff5/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=7cd681684f96c0f59468346384f6f5c5a04a7ff5", "patch": "@@ -76,7 +76,8 @@ RUNTIME_CXXS_$(1) := \\\n               rt/boxed_region.cpp \\\n               rt/arch/$$(HOST_$(1))/context.cpp \\\n               rt/arch/$$(HOST_$(1))/gpr.cpp \\\n-              rt/rust_android_dummy.cpp\n+              rt/rust_android_dummy.cpp \\\n+              rt/rust_test_helpers.cpp\n \n RUNTIME_CS_$(1) := rt/linenoise/linenoise.c rt/linenoise/utf8.c\n "}, {"sha": "475c030e8f25022a22bc6977c5da04491bd5d338", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/7cd681684f96c0f59468346384f6f5c5a04a7ff5/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7cd681684f96c0f59468346384f6f5c5a04a7ff5/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=7cd681684f96c0f59468346384f6f5c5a04a7ff5", "patch": "@@ -589,50 +589,6 @@ rust_log_console_off() {\n     log_console_off(task->kernel->env);\n }\n \n-extern \"C\" CDECL lock_and_signal *\n-rust_dbg_lock_create() {\n-    return new lock_and_signal();\n-}\n-\n-extern \"C\" CDECL void\n-rust_dbg_lock_destroy(lock_and_signal *lock) {\n-    assert(lock);\n-    delete lock;\n-}\n-\n-extern \"C\" CDECL void\n-rust_dbg_lock_lock(lock_and_signal *lock) {\n-    assert(lock);\n-    lock->lock();\n-}\n-\n-extern \"C\" CDECL void\n-rust_dbg_lock_unlock(lock_and_signal *lock) {\n-    assert(lock);\n-    lock->unlock();\n-}\n-\n-extern \"C\" CDECL void\n-rust_dbg_lock_wait(lock_and_signal *lock) {\n-    assert(lock);\n-    lock->wait();\n-}\n-\n-extern \"C\" CDECL void\n-rust_dbg_lock_signal(lock_and_signal *lock) {\n-    assert(lock);\n-    lock->signal();\n-}\n-\n-typedef void *(*dbg_callback)(void*);\n-\n-extern \"C\" CDECL void *\n-rust_dbg_call(dbg_callback cb, void *data) {\n-    return cb(data);\n-}\n-\n-extern \"C\" CDECL void rust_dbg_do_nothing() { }\n-\n extern \"C\" CDECL void\n rust_dbg_breakpoint() {\n     BREAKPOINT_AWESOME;\n@@ -844,48 +800,6 @@ rust_readdir() {\n \n #endif\n \n-// These functions are used in the unit tests for C ABI calls.\n-\n-extern \"C\" CDECL uint32_t\n-rust_dbg_extern_identity_u32(uint32_t u) {\n-    return u;\n-}\n-\n-extern \"C\" CDECL uint64_t\n-rust_dbg_extern_identity_u64(uint64_t u) {\n-    return u;\n-}\n-\n-struct TwoU64s {\n-    uint64_t one;\n-    uint64_t two;\n-};\n-\n-extern \"C\" CDECL TwoU64s\n-rust_dbg_extern_identity_TwoU64s(TwoU64s u) {\n-    return u;\n-}\n-\n-struct TwoDoubles {\n-    double one;\n-    double two;\n-};\n-\n-extern \"C\" CDECL TwoDoubles\n-rust_dbg_extern_identity_TwoDoubles(TwoDoubles u) {\n-    return u;\n-}\n-\n-extern \"C\" CDECL double\n-rust_dbg_extern_identity_double(double u) {\n-    return u;\n-}\n-\n-extern \"C\" CDECL char\n-rust_dbg_extern_identity_u8(char u) {\n-    return u;\n-}\n-\n extern \"C\" rust_env*\n rust_get_rt_env() {\n     rust_task *task = rust_get_current_task();"}, {"sha": "2c8026f159efa84a87908114a757bb3242c3e73b", "filename": "src/rt/rust_test_helpers.cpp", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/7cd681684f96c0f59468346384f6f5c5a04a7ff5/src%2Frt%2Frust_test_helpers.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7cd681684f96c0f59468346384f6f5c5a04a7ff5/src%2Frt%2Frust_test_helpers.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_test_helpers.cpp?ref=7cd681684f96c0f59468346384f6f5c5a04a7ff5", "patch": "@@ -0,0 +1,105 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Helper functions used only in tests\n+\n+#include \"rust_sched_loop.h\"\n+#include \"rust_task.h\"\n+#include \"rust_util.h\"\n+#include \"rust_scheduler.h\"\n+#include \"sync/timer.h\"\n+#include \"sync/rust_thread.h\"\n+#include \"rust_abi.h\"\n+\n+// These functions are used in the unit tests for C ABI calls.\n+\n+extern \"C\" CDECL uint32_t\n+rust_dbg_extern_identity_u32(uint32_t u) {\n+    return u;\n+}\n+\n+extern \"C\" CDECL uint64_t\n+rust_dbg_extern_identity_u64(uint64_t u) {\n+    return u;\n+}\n+\n+struct TwoU64s {\n+    uint64_t one;\n+    uint64_t two;\n+};\n+\n+extern \"C\" CDECL TwoU64s\n+rust_dbg_extern_identity_TwoU64s(TwoU64s u) {\n+    return u;\n+}\n+\n+struct TwoDoubles {\n+    double one;\n+    double two;\n+};\n+\n+extern \"C\" CDECL TwoDoubles\n+rust_dbg_extern_identity_TwoDoubles(TwoDoubles u) {\n+    return u;\n+}\n+\n+extern \"C\" CDECL double\n+rust_dbg_extern_identity_double(double u) {\n+    return u;\n+}\n+\n+extern \"C\" CDECL char\n+rust_dbg_extern_identity_u8(char u) {\n+    return u;\n+}\n+\n+extern \"C\" CDECL lock_and_signal *\n+rust_dbg_lock_create() {\n+    return new lock_and_signal();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_destroy(lock_and_signal *lock) {\n+    assert(lock);\n+    delete lock;\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_lock(lock_and_signal *lock) {\n+    assert(lock);\n+    lock->lock();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_unlock(lock_and_signal *lock) {\n+    assert(lock);\n+    lock->unlock();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_wait(lock_and_signal *lock) {\n+    assert(lock);\n+    lock->wait();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_signal(lock_and_signal *lock) {\n+    assert(lock);\n+    lock->signal();\n+}\n+\n+typedef void *(*dbg_callback)(void*);\n+\n+extern \"C\" CDECL void *\n+rust_dbg_call(dbg_callback cb, void *data) {\n+    return cb(data);\n+}\n+\n+extern \"C\" CDECL void rust_dbg_do_nothing() { }"}]}