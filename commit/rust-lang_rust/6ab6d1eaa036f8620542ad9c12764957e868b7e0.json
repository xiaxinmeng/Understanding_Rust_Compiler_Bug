{"sha": "6ab6d1eaa036f8620542ad9c12764957e868b7e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYjZkMWVhYTAzNmY4NjIwNTQyYWQ5YzEyNzY0OTU3ZTg2OGI3ZTA=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-17T11:57:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-19T12:36:58Z"}, "message": "fix comments", "tree": {"sha": "4bd9a3bc5f99d25efafde8673f5c40825521f760", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd9a3bc5f99d25efafde8673f5c40825521f760"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ab6d1eaa036f8620542ad9c12764957e868b7e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ab6d1eaa036f8620542ad9c12764957e868b7e0", "html_url": "https://github.com/rust-lang/rust/commit/6ab6d1eaa036f8620542ad9c12764957e868b7e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ab6d1eaa036f8620542ad9c12764957e868b7e0/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c8cb56506646637e45a646657baf12fa9a8f49a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c8cb56506646637e45a646657baf12fa9a8f49a", "html_url": "https://github.com/rust-lang/rust/commit/5c8cb56506646637e45a646657baf12fa9a8f49a"}], "stats": {"total": 45, "additions": 5, "deletions": 40}, "files": [{"sha": "fa79908a1bd27ef599612698b52ce46dc9a92b60", "filename": "crates/ra_ide_api/src/imp.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fimp.rs?ref=6ab6d1eaa036f8620542ad9c12764957e868b7e0", "patch": "@@ -19,7 +19,6 @@ use crate::{\n     CrateId, db, Diagnostic, FileId, FilePosition, FileRange, FileSystemEdit,\n     Query, RootChange, SourceChange, SourceFileEdit,\n     symbol_index::{FileSymbol, LibrarySymbolsQuery},\n-    rename::rename\n };\n \n impl db::RootDatabase {\n@@ -232,10 +231,6 @@ impl db::RootDatabase {\n             .collect()\n     }\n \n-    pub(crate) fn rename(&self, position: FilePosition, new_name: &str) -> Option<SourceChange> {\n-        rename(self, position, new_name)\n-    }\n-\n     pub(crate) fn index_resolve(&self, name_ref: &ast::NameRef) -> Vec<FileSymbol> {\n         let name = name_ref.text();\n         let mut query = Query::new(name.to_string());"}, {"sha": "33bef178a9a1bcb23b50154d96d15ed29173c700", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=6ab6d1eaa036f8620542ad9c12764957e868b7e0", "patch": "@@ -466,7 +466,7 @@ impl Analysis {\n         position: FilePosition,\n         new_name: &str,\n     ) -> Cancelable<Option<SourceChange>> {\n-        self.with_db(|db| db.rename(position, new_name))\n+        self.with_db(|db| rename::rename(db, position, new_name))\n     }\n \n     fn with_db<F: FnOnce(&db::RootDatabase) -> T + std::panic::UnwindSafe, T>("}, {"sha": "9ab6f2a774bd23be994922f6688b575f4d31ade9", "filename": "crates/ra_ide_api/src/rename.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_ide_api%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_ide_api%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Frename.rs?ref=6ab6d1eaa036f8620542ad9c12764957e868b7e0", "patch": "@@ -40,9 +40,7 @@ fn find_name_and_module_at_offset(\n     position: FilePosition,\n ) -> Option<(&ast::Name, &ast::Module)> {\n     let ast_name = find_node_at_offset::<ast::Name>(syntax, position.offset);\n-    let ast_name_parent = ast_name\n-        .and_then(|n| n.syntax().parent())\n-        .and_then(|p| ast::Module::cast(p));\n+    let ast_name_parent = ast::Module::cast(ast_name?.syntax().parent()?);\n \n     if let (Some(ast_module), Some(name)) = (ast_name_parent, ast_name) {\n         return Some((name, ast_module));"}, {"sha": "9cdca82c4feb77605569d048384e3e73768fd546", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 3, "deletions": 31, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ab6d1eaa036f8620542ad9c12764957e868b7e0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=6ab6d1eaa036f8620542ad9c12764957e868b7e0", "patch": "@@ -5,7 +5,7 @@ use lsp_types::{\n     FoldingRangeKind, FoldingRangeParams, Hover, HoverContents, Location, MarkupContent,\n     MarkupKind, ParameterInformation, ParameterLabel, Position, PrepareRenameResponse, Range,\n     RenameParams, SignatureInformation, SymbolInformation, TextDocumentIdentifier, TextEdit,\n-    WorkspaceEdit, DocumentChanges, TextDocumentEdit, DocumentChangeOperation, ResourceOp\n+    WorkspaceEdit\n };\n use ra_ide_api::{\n     FileId, FilePosition, FileRange, FoldKind, Query, RangeInfo, RunnableKind, Severity,\n@@ -472,37 +472,9 @@ pub fn handle_rename(world: ServerWorld, params: RenameParams) -> Result<Option<\n         return Ok(None);\n     }\n \n-    let mut source_change = change.unwrap();\n-    let text_document_edits = source_change\n-        .source_file_edits\n-        .drain(..)\n-        .into_iter()\n-        .map(|e| e.try_conv_with(&world))\n-        .collect::<Result<Vec<TextDocumentEdit>>>();\n-\n-    let text_document_ops = source_change\n-        .file_system_edits\n-        .drain(..)\n-        .into_iter()\n-        .map(|e| e.try_conv_with(&world))\n-        .collect::<Result<Vec<ResourceOp>>>();\n-\n-    let mut document_changes = Vec::new();\n-    document_changes.extend(\n-        text_document_edits?\n-            .into_iter()\n-            .map(DocumentChangeOperation::Edit),\n-    );\n-    document_changes.extend(\n-        text_document_ops?\n-            .into_iter()\n-            .map(DocumentChangeOperation::Op),\n-    );\n+    let source_change_req = change.unwrap().try_conv_with(&world)?;\n \n-    Ok(Some(WorkspaceEdit {\n-        changes: None,\n-        document_changes: Some(DocumentChanges::Operations(document_changes)),\n-    }))\n+    Ok(Some(source_change_req.workspace_edit))\n }\n \n pub fn handle_references("}]}