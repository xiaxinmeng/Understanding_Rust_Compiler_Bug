{"sha": "15958ca9ffa7e26440689739fcf6f25b9b3c6f88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OTU4Y2E5ZmZhN2UyNjQ0MDY4OTczOWZjZjZmMjViOWIzYzZmODg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-01T10:55:29Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-01T14:52:17Z"}, "message": "Rollup merge of #55558 - nnethercote:tweak-MatcherPos-matches, r=petrochenkov\n\nTweak `MatcherPos::matches`\n\nThese changes reduce instruction counts on `sentry-cli-check` incremental builds by up to 2%.", "tree": {"sha": "2f391abc3d7fd985cb67ed8c97b6865a0275c52e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f391abc3d7fd985cb67ed8c97b6865a0275c52e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15958ca9ffa7e26440689739fcf6f25b9b3c6f88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvbEyEACgkQ/vbIBR0O\nATx94w/+MyosqIlU0SLYm1bIvMKaSt2gLXnFWIfH57ttfUR8vhYPLcyuQNzL6zXR\nFwHnrBmUA4kQWvxdKuCOjTpH8Nckc3xQNV8M2FNMQ+Xt/eDzPdWgwEp9DIgtHL58\nODnHvViJP/rXdH+GpF0Etiw3xFRSok2Q0HuSF8LQxXRt+u3Tzblv8RBKrf+xgoa5\nFzgLYJCLY20ny9CGvpDSSMxzhgndgRUVltHpkObhi4zdo8snvLxwHJkgRX2goe4m\nFX2nBnoaiuAC8o48u9PHru2ZCK2mmhlXf/NxxstvIKd91w1E/G7O4NobpEV6eowz\nXfKhfVZm8g9uEankdlTs0nwHfagCQwVBm2kUJO6AAFqivgioSBrmm/ldJuWKOmqC\nvRCOTznz5d2QK5rT3g4RzQdLS4zRgT86aGlCxw4NNd8tm9DnouU09PwIIqHZ1kpm\ny/P3DRNkVJ1A16BEgzTZnIW2bGtsWthEHp3eFo0ztfEyftdOxGNp20RbeShp7DT5\nfw8521gWhYUc2dcpzH7LOrYq4UTeLMprytxUfwZqPbqDOX1aDWKKniwbF4PIY/Zx\nJ9nhl+v+ND0fyjW50kHRuEUDJ6UBiX80e/9eZrnldULXtlEXmUcCebM7NTy3yN7a\nhd7hFXHggXXD4dHd/Ja9ihBKmiNmOEWv/Enc6m5XgyzYjkUGHrE=\n=rFQt\n-----END PGP SIGNATURE-----", "payload": "tree 2f391abc3d7fd985cb67ed8c97b6865a0275c52e\nparent 133ba2d063af3a078dff30ff4df3dd864082fcb5\nparent 0d2abe46ca810dfab7db9e89977b751eca103084\nauthor Pietro Albini <pietro@pietroalbini.org> 1541069729 +0100\ncommitter kennytm <kennytm@gmail.com> 1541083937 +0800\n\nRollup merge of #55558 - nnethercote:tweak-MatcherPos-matches, r=petrochenkov\n\nTweak `MatcherPos::matches`\n\nThese changes reduce instruction counts on `sentry-cli-check` incremental builds by up to 2%.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15958ca9ffa7e26440689739fcf6f25b9b3c6f88", "html_url": "https://github.com/rust-lang/rust/commit/15958ca9ffa7e26440689739fcf6f25b9b3c6f88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15958ca9ffa7e26440689739fcf6f25b9b3c6f88/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "133ba2d063af3a078dff30ff4df3dd864082fcb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/133ba2d063af3a078dff30ff4df3dd864082fcb5", "html_url": "https://github.com/rust-lang/rust/commit/133ba2d063af3a078dff30ff4df3dd864082fcb5"}, {"sha": "0d2abe46ca810dfab7db9e89977b751eca103084", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d2abe46ca810dfab7db9e89977b751eca103084", "html_url": "https://github.com/rust-lang/rust/commit/0d2abe46ca810dfab7db9e89977b751eca103084"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "38bbfc6b4c375f1f3e11f25ac2b4634e8434fde2", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/15958ca9ffa7e26440689739fcf6f25b9b3c6f88/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15958ca9ffa7e26440689739fcf6f25b9b3c6f88/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=15958ca9ffa7e26440689739fcf6f25b9b3c6f88", "patch": "@@ -143,6 +143,8 @@ struct MatcherTtFrame<'a> {\n     idx: usize,\n }\n \n+type NamedMatchVec = SmallVec<[NamedMatch; 4]>;\n+\n /// Represents a single \"position\" (aka \"matcher position\", aka \"item\"), as described in the module\n /// documentation.\n #[derive(Clone)]\n@@ -168,7 +170,7 @@ struct MatcherPos<'a> {\n     /// all bound matches from the submatcher into the shared top-level `matches` vector. If `sep`\n     /// and `up` are `Some`, then `matches` is _not_ the shared top-level list. Instead, if one\n     /// wants the shared `matches`, one should use `up.matches`.\n-    matches: Vec<Rc<Vec<NamedMatch>>>,\n+    matches: Box<[Rc<NamedMatchVec>]>,\n     /// The position in `matches` corresponding to the first metavar in this matcher's sequence of\n     /// token trees. In other words, the first metavar in the first token of `top_elts` corresponds\n     /// to `matches[match_lo]`.\n@@ -278,9 +280,14 @@ pub fn count_names(ms: &[TokenTree]) -> usize {\n     })\n }\n \n-/// Initialize `len` empty shared `Vec`s to be used to store matches of metavars.\n-fn create_matches(len: usize) -> Vec<Rc<Vec<NamedMatch>>> {\n-    (0..len).into_iter().map(|_| Rc::new(Vec::new())).collect()\n+/// `len` `Vec`s (initially shared and empty) that will store matches of metavars.\n+fn create_matches(len: usize) -> Box<[Rc<NamedMatchVec>]> {\n+    if len == 0 {\n+        vec![]\n+    } else {\n+        let empty_matches = Rc::new(SmallVec::new());\n+        vec![empty_matches.clone(); len]\n+    }.into_boxed_slice()\n }\n \n /// Generate the top-level matcher position in which the \"dot\" is before the first token of the\n@@ -332,7 +339,7 @@ fn initial_matcher_pos(ms: &[TokenTree], open: Span) -> MatcherPos {\n /// token tree it was derived from.\n #[derive(Debug, Clone)]\n pub enum NamedMatch {\n-    MatchedSeq(Rc<Vec<NamedMatch>>, DelimSpan),\n+    MatchedSeq(Rc<NamedMatchVec>, DelimSpan),\n     MatchedNonterminal(Rc<Nonterminal>),\n }\n \n@@ -540,7 +547,7 @@ fn inner_parse_loop<'a>(\n                         new_item.match_cur += seq.num_captures;\n                         new_item.idx += 1;\n                         for idx in item.match_cur..item.match_cur + seq.num_captures {\n-                            new_item.push_match(idx, MatchedSeq(Rc::new(vec![]), sp));\n+                            new_item.push_match(idx, MatchedSeq(Rc::new(smallvec![]), sp));\n                         }\n                         cur_items.push(new_item);\n                     }"}]}