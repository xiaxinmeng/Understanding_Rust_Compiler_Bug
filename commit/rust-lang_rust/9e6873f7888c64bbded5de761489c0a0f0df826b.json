{"sha": "9e6873f7888c64bbded5de761489c0a0f0df826b", "node_id": "C_kwDOAAsO6NoAKDllNjg3M2Y3ODg4YzY0YmJkZWQ1ZGU3NjE0ODljMGEwZjBkZjgyNmI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-01-25T11:31:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-25T11:31:41Z"}, "message": "Rollup merge of #106767 - chbaker0:disable-unstable-features, r=Mark-Simulacrum\n\nAllow setting CFG_DISABLE_UNSTABLE_FEATURES to 0\n\nTwo locations check whether this build-time environment variable is defined. Allowing it to be explicitly disabled with a \"0\" value is useful, especially for integrating with external build systems.", "tree": {"sha": "641d879f17e6f386afe3c77d638a7447add8ca32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/641d879f17e6f386afe3c77d638a7447add8ca32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e6873f7888c64bbded5de761489c0a0f0df826b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj0RMdCRBK7hj4Ov3rIwAABOEIAKoE/FUi0G9tMYaJ2mDjFsfn\n4pgAGUA1hyxBwca0RGZyq0lhfw2gfNoRuLsIpQgYxWewkjEiL4y7u8V7hHpxi9cy\nWKohUDDHx6IXM1FyRr2nN3JiMOslz2d9RPjgMSggf0VU9LzWf5A6hPSn9ycc/jdA\nVmul0uwP/xDmiJ0v7YixgVYeNOzjd/97oI85NqY04FVDMsSDSQQyyvZFFkekhQg5\nk/P39ZkxcweH3c+a/4IJFfna8n2alUzU9lg77IIs0Opvo9DlmFjdCtKdoTNfK1Oy\nMh262REcUdvreHNU3f5ewNnrRoNxWzS3C+Kd+n4WotFe7/Ti1icIm4KwqbGsQNY=\n=kdWp\n-----END PGP SIGNATURE-----\n", "payload": "tree 641d879f17e6f386afe3c77d638a7447add8ca32\nparent b36a8dcea3545eb8edb8967ac382d0ccaa4d4023\nparent 0a03d1c9cafde0ada19b4fab0f3d6892cb154fd8\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1674646301 +0530\ncommitter GitHub <noreply@github.com> 1674646301 +0530\n\nRollup merge of #106767 - chbaker0:disable-unstable-features, r=Mark-Simulacrum\n\nAllow setting CFG_DISABLE_UNSTABLE_FEATURES to 0\n\nTwo locations check whether this build-time environment variable is defined. Allowing it to be explicitly disabled with a \"0\" value is useful, especially for integrating with external build systems.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e6873f7888c64bbded5de761489c0a0f0df826b", "html_url": "https://github.com/rust-lang/rust/commit/9e6873f7888c64bbded5de761489c0a0f0df826b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e6873f7888c64bbded5de761489c0a0f0df826b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b36a8dcea3545eb8edb8967ac382d0ccaa4d4023", "url": "https://api.github.com/repos/rust-lang/rust/commits/b36a8dcea3545eb8edb8967ac382d0ccaa4d4023", "html_url": "https://github.com/rust-lang/rust/commit/b36a8dcea3545eb8edb8967ac382d0ccaa4d4023"}, {"sha": "0a03d1c9cafde0ada19b4fab0f3d6892cb154fd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a03d1c9cafde0ada19b4fab0f3d6892cb154fd8", "html_url": "https://github.com/rust-lang/rust/commit/0a03d1c9cafde0ada19b4fab0f3d6892cb154fd8"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "93d16716346915119dcf3213c27728293e73e20a", "filename": "compiler/rustc_feature/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9e6873f7888c64bbded5de761489c0a0f0df826b/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e6873f7888c64bbded5de761489c0a0f0df826b/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Flib.rs?ref=9e6873f7888c64bbded5de761489c0a0f0df826b", "patch": "@@ -83,7 +83,8 @@ impl UnstableFeatures {\n     /// Otherwise, only `RUSTC_BOOTSTRAP=1` will work.\n     pub fn from_environment(krate: Option<&str>) -> Self {\n         // `true` if this is a feature-staged build, i.e., on the beta or stable channel.\n-        let disable_unstable_features = option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").is_some();\n+        let disable_unstable_features =\n+            option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").map(|s| s != \"0\").unwrap_or(false);\n         // Returns whether `krate` should be counted as unstable\n         let is_unstable_crate = |var: &str| {\n             krate.map_or(false, |name| var.split(',').any(|new_krate| new_krate == name))"}, {"sha": "9d22ebbee873bab9b680fd37e9fde055e932c3c6", "filename": "library/test/src/cli.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9e6873f7888c64bbded5de761489c0a0f0df826b/library%2Ftest%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e6873f7888c64bbded5de761489c0a0f0df826b/library%2Ftest%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fcli.rs?ref=9e6873f7888c64bbded5de761489c0a0f0df826b", "patch": "@@ -309,7 +309,8 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n // FIXME: Copied from librustc_ast until linkage errors are resolved. Issue #47566\n fn is_nightly() -> bool {\n     // Whether this is a feature-staged build, i.e., on the beta or stable channel\n-    let disable_unstable_features = option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").is_some();\n+    let disable_unstable_features =\n+        option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").map(|s| s != \"0\").unwrap_or(false);\n     // Whether we should enable unstable features for bootstrapping\n     let bootstrap = env::var(\"RUSTC_BOOTSTRAP\").is_ok();\n "}]}