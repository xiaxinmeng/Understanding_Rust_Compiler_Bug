{"sha": "3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiN2Q2ZWViNGZjNDExMjUwNGZjNzdkZWU2ZmMzNWExNmM4MGYwNWM=", "commit": {"author": {"name": "mikerite", "email": "33983332+mikerite@users.noreply.github.com", "date": "2019-06-04T06:27:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-04T06:27:31Z"}, "message": "Fix comment grammar\n\nCo-Authored-By: Philipp Krones <hello@philkrones.com>", "tree": {"sha": "d8015ea3874bcc7447558b4936ebbc506c20722d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8015ea3874bcc7447558b4936ebbc506c20722d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc9g9TCRBK7hj4Ov3rIwAAdHIIAIBURZShWODGN6qSCoOzdpR1\nRMf+NnwJjOfw13+lfbPQgI56vExjlXCdgwvrJC6IvDree49AWmQyvlz9sha102Ix\nLsrCtp75wnzrRu9K1PjhQ2/vLxIWFbU4aR5zP4foepOP9uRKdaajOMAOSknNzUFJ\na/yDaekl57MLY8x7wRjBlYZDId4YkGakO2P0GD6hqUFo0fs3Ax34hkr6A3tmP8av\nmgidUMFy8NgE/a8fvG4zmoTVk7YXQcvFDFLeX3rIZPwo+oTeXNPSBxbO2T7z58yz\nczd5+hR35UZ1IaaWlclLH1TwcnKXXS5SN6LZqQAWVe+HOFb3Xrr5O8IwzqyPYpg=\n=vK/G\n-----END PGP SIGNATURE-----\n", "payload": "tree d8015ea3874bcc7447558b4936ebbc506c20722d\nparent 98585a03241f7b849b43f4ed9ede1b3ec42890d7\nauthor mikerite <33983332+mikerite@users.noreply.github.com> 1559629651 +0200\ncommitter GitHub <noreply@github.com> 1559629651 +0200\n\nFix comment grammar\n\nCo-Authored-By: Philipp Krones <hello@philkrones.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c", "html_url": "https://github.com/rust-lang/rust/commit/3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98585a03241f7b849b43f4ed9ede1b3ec42890d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/98585a03241f7b849b43f4ed9ede1b3ec42890d7", "html_url": "https://github.com/rust-lang/rust/commit/98585a03241f7b849b43f4ed9ede1b3ec42890d7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1e7ff4907ae68c44f94e4d3db4ab0da8ee59848d", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3b7d6eeb4fc4112504fc77dee6fc35a16c80f05c", "patch": "@@ -1884,7 +1884,7 @@ fn lint_map_unwrap_or_else<'a, 'tcx>(\n \n     if is_option || is_result {\n         // Don't make a suggestion that may fail to compile due to mutably borrowing\n-        // they same variable twice.\n+        // the same variable twice.\n         let map_mutated_vars = mutated_variables(&map_args[0], cx);\n         let unwrap_mutated_vars = mutated_variables(&unwrap_args[1], cx);\n         if let (Some(map_mutated_vars), Some(unwrap_mutated_vars)) = (map_mutated_vars, unwrap_mutated_vars) {"}]}