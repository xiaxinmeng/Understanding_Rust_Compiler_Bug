{"sha": "14d59af0a369f1b05fd993f612144ae8462fb606", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZDU5YWYwYTM2OWYxYjA1ZmQ5OTNmNjEyMTQ0YWU4NDYyZmI2MDY=", "commit": {"author": {"name": "june0cho", "email": "june0.cho@samsung.com", "date": "2013-05-29T05:56:21Z"}, "committer": {"name": "june0cho", "email": "june0.cho@samsung.com", "date": "2013-05-29T06:04:34Z"}, "message": "Fix vec::mut_slice", "tree": {"sha": "f2a8ec5f6df2d702eac371edd0f01683ffc67bdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2a8ec5f6df2d702eac371edd0f01683ffc67bdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14d59af0a369f1b05fd993f612144ae8462fb606", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14d59af0a369f1b05fd993f612144ae8462fb606", "html_url": "https://github.com/rust-lang/rust/commit/14d59af0a369f1b05fd993f612144ae8462fb606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14d59af0a369f1b05fd993f612144ae8462fb606/comments", "author": {"login": "june0cho", "id": 3859124, "node_id": "MDQ6VXNlcjM4NTkxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3859124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/june0cho", "html_url": "https://github.com/june0cho", "followers_url": "https://api.github.com/users/june0cho/followers", "following_url": "https://api.github.com/users/june0cho/following{/other_user}", "gists_url": "https://api.github.com/users/june0cho/gists{/gist_id}", "starred_url": "https://api.github.com/users/june0cho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/june0cho/subscriptions", "organizations_url": "https://api.github.com/users/june0cho/orgs", "repos_url": "https://api.github.com/users/june0cho/repos", "events_url": "https://api.github.com/users/june0cho/events{/privacy}", "received_events_url": "https://api.github.com/users/june0cho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "june0cho", "id": 3859124, "node_id": "MDQ6VXNlcjM4NTkxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3859124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/june0cho", "html_url": "https://github.com/june0cho", "followers_url": "https://api.github.com/users/june0cho/followers", "following_url": "https://api.github.com/users/june0cho/following{/other_user}", "gists_url": "https://api.github.com/users/june0cho/gists{/gist_id}", "starred_url": "https://api.github.com/users/june0cho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/june0cho/subscriptions", "organizations_url": "https://api.github.com/users/june0cho/orgs", "repos_url": "https://api.github.com/users/june0cho/repos", "events_url": "https://api.github.com/users/june0cho/events{/privacy}", "received_events_url": "https://api.github.com/users/june0cho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e946b4fa3f7d9a551fd8f039a2b15142d132f3fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e946b4fa3f7d9a551fd8f039a2b15142d132f3fb", "html_url": "https://github.com/rust-lang/rust/commit/e946b4fa3f7d9a551fd8f039a2b15142d132f3fb"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "33e7b0a97c42aded136a4a45567b489cb4f127dc", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14d59af0a369f1b05fd993f612144ae8462fb606/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d59af0a369f1b05fd993f612144ae8462fb606/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=14d59af0a369f1b05fd993f612144ae8462fb606", "patch": "@@ -2347,16 +2347,16 @@ impl<T:Eq> OwnedEqVector<T> for ~[T] {\n }\n \n pub trait MutableVector<'self, T> {\n-    fn mut_slice(&mut self, start: uint, end: uint) -> &'self mut [T];\n+    fn mut_slice(self, start: uint, end: uint) -> &'self mut [T];\n \n     unsafe fn unsafe_mut_ref(&self, index: uint) -> *mut T;\n     unsafe fn unsafe_set(&self, index: uint, val: T);\n }\n \n impl<'self,T> MutableVector<'self, T> for &'self mut [T] {\n     #[inline]\n-    fn mut_slice(&mut self, start: uint, end: uint) -> &'self mut [T] {\n-        mut_slice(*self, start, end)\n+    fn mut_slice(self, start: uint, end: uint) -> &'self mut [T] {\n+        mut_slice(self, start, end)\n     }\n \n     #[inline(always)]"}]}