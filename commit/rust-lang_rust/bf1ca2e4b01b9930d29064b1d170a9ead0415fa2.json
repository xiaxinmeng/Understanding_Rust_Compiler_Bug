{"sha": "bf1ca2e4b01b9930d29064b1d170a9ead0415fa2", "node_id": "C_kwDOAAsO6NoAKGJmMWNhMmU0YjAxYjk5MzBkMjkwNjRiMWQxNzBhOWVhZDA0MTVmYTI", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-01-29T11:40:23Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-01-29T11:40:23Z"}, "message": "Make local_def_id_to_hir_id query directly returh HirId", "tree": {"sha": "0f6a65406d314c8a2e9a2a83e5f0538630a7965c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f6a65406d314c8a2e9a2a83e5f0538630a7965c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmH1J6cACgkQgTGiTgx5\n76/hRA/9F17HcL2U5gE4AIsxIUK7wpc+fnEwY0gX79WkxZBfT7QaFiB8DMzhPJnW\n99k9/gPhGDyXYQ8USn0O8VLEgPwdPqCuC9Ub6ew/GBB0E1lmyqdS8AyRNCRZ3Ufm\nGDvI7RewPFx0y/+37F6qVZ8ITZ29tFLCTwSVZ9NDE3jy4nVF75ZdpsNyKS5VXNXP\nQqBU1PgKYZP2WH9n+RSBkp+w4fEaItfVZFjkwFiGzfVv7S5lDrT6Le/nTuwpB/y/\n8coxKsjs1p5ytfwkBu2nc/KY+vbjx45BmzbhW7i/5P+oWHFY5jbl+USEUrVyPOFx\ngkMpKmVNTsvCuiMQO4zrElbdhDuiQv0rKA7yAKDi+ciRowsNaIyYsRnN+JjBasi4\nQwoh4zCI6nV4ybNgfnvJfzTTAZ/iOZHbJ2MxI97bzIsAB1EA+o0ZyS5r4YcR1EXk\n8c9vrdhnEeWZJ7HmL0jkDaHadsG4W0GHC7VeHHD72uy89oLniyput9XNb3oOCHE8\nVAPDIJgn+Rj+fFzoxgT6PhVg9WsYLcNbScjwGd4tzb84Qb1FaC2Ojq27IurVMopn\nZFPpnDVT0gByurIdE/WRcTzjQT0BdigA3blbS0n25/9uSUjoiPdt6kE1sPjGbMeE\no+j6LAZvkYxSoLecEkzKSUXR7V+vIwevkHUhXjYna82aBr4wASs=\n=FVZ2\n-----END PGP SIGNATURE-----", "payload": "tree 0f6a65406d314c8a2e9a2a83e5f0538630a7965c\nparent 5a299a9903abd6bd5161d610855b0c123ed58dfb\nauthor Santiago Pastorino <spastorino@gmail.com> 1643456423 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1643456423 -0300\n\nMake local_def_id_to_hir_id query directly returh HirId\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2", "html_url": "https://github.com/rust-lang/rust/commit/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a299a9903abd6bd5161d610855b0c123ed58dfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a299a9903abd6bd5161d610855b0c123ed58dfb", "html_url": "https://github.com/rust-lang/rust/commit/5a299a9903abd6bd5161d610855b0c123ed58dfb"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "649cb34bd5f3cbd089d4d8f8683ddc30aaf3f7d3", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=bf1ca2e4b01b9930d29064b1d170a9ead0415fa2", "patch": "@@ -215,12 +215,7 @@ impl<'hir> Map<'hir> {\n \n     #[inline]\n     pub fn local_def_id_to_hir_id(&self, def_id: LocalDefId) -> HirId {\n-        let owner = self.tcx.local_def_id_to_hir_id(def_id);\n-        match owner {\n-            MaybeOwner::Owner(_) => HirId::make_owner(def_id),\n-            MaybeOwner::Phantom => bug!(\"No HirId for {:?}\", def_id),\n-            MaybeOwner::NonOwner(hir_id) => hir_id,\n-        }\n+        self.tcx.local_def_id_to_hir_id(def_id)\n     }\n \n     pub fn iter_local_def_id(&self) -> impl Iterator<Item = LocalDefId> + '_ {"}, {"sha": "1053f0cefbeddcc526e204ac9200320ebf242a4c", "filename": "compiler/rustc_middle/src/hir/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs?ref=bf1ca2e4b01b9930d29064b1d170a9ead0415fa2", "patch": "@@ -69,7 +69,14 @@ pub fn provide(providers: &mut Providers) {\n         let node = owner.node();\n         Some(Owner { node, hash_without_bodies: owner.nodes.hash_without_bodies })\n     };\n-    providers.local_def_id_to_hir_id = |tcx, id| tcx.hir_crate(()).owners[id].map(|_| ());\n+    providers.local_def_id_to_hir_id = |tcx, id| {\n+        let owner = tcx.hir_crate(()).owners[id].map(|_| ());\n+        match owner {\n+            MaybeOwner::Owner(_) => HirId::make_owner(id),\n+            MaybeOwner::Phantom => bug!(\"No HirId for {:?}\", id),\n+            MaybeOwner::NonOwner(hir_id) => hir_id,\n+        }\n+    };\n     providers.hir_owner_nodes = |tcx, id| tcx.hir_crate(()).owners[id].map(|i| &i.nodes);\n     providers.hir_owner_parent = |tcx, id| {\n         // Accessing the def_key is ok since its value is hashed as part of `id`'s DefPathHash."}, {"sha": "c01e7177760f9c4ac4f585c20097afec12f7d2c4", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1ca2e4b01b9930d29064b1d170a9ead0415fa2/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=bf1ca2e4b01b9930d29064b1d170a9ead0415fa2", "patch": "@@ -60,7 +60,7 @@ rustc_queries! {\n     ///\n     /// This can be conveniently accessed by methods on `tcx.hir()`.\n     /// Avoid calling this query directly.\n-    query local_def_id_to_hir_id(key: LocalDefId) -> hir::MaybeOwner<()> {\n+    query local_def_id_to_hir_id(key: LocalDefId) -> hir::HirId {\n         desc { |tcx| \"HIR ID of `{}`\", tcx.def_path_str(key.to_def_id()) }\n     }\n "}]}