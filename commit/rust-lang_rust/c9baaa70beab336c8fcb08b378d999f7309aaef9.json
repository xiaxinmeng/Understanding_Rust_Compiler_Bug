{"sha": "c9baaa70beab336c8fcb08b378d999f7309aaef9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5YmFhYTcwYmVhYjMzNmM4ZmNiMDhiMzc4ZDk5OWY3MzA5YWFlZjk=", "commit": {"author": {"name": "Sam Radhakrishnan", "email": "sk09idm@gmail.com", "date": "2019-09-30T21:45:31Z"}, "committer": {"name": "Sam Radhakrishnan", "email": "sk09idm@gmail.com", "date": "2019-09-30T22:16:34Z"}, "message": "Fixes #64919. Suggest fix based on operator precendence.", "tree": {"sha": "e4716b13bf5de0b36b9a7fd8f252bc72b1ff9bb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4716b13bf5de0b36b9a7fd8f252bc72b1ff9bb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9baaa70beab336c8fcb08b378d999f7309aaef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9baaa70beab336c8fcb08b378d999f7309aaef9", "html_url": "https://github.com/rust-lang/rust/commit/c9baaa70beab336c8fcb08b378d999f7309aaef9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9baaa70beab336c8fcb08b378d999f7309aaef9/comments", "author": {"login": "sam09", "id": 6648290, "node_id": "MDQ6VXNlcjY2NDgyOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6648290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam09", "html_url": "https://github.com/sam09", "followers_url": "https://api.github.com/users/sam09/followers", "following_url": "https://api.github.com/users/sam09/following{/other_user}", "gists_url": "https://api.github.com/users/sam09/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam09/subscriptions", "organizations_url": "https://api.github.com/users/sam09/orgs", "repos_url": "https://api.github.com/users/sam09/repos", "events_url": "https://api.github.com/users/sam09/events{/privacy}", "received_events_url": "https://api.github.com/users/sam09/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sam09", "id": 6648290, "node_id": "MDQ6VXNlcjY2NDgyOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6648290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam09", "html_url": "https://github.com/sam09", "followers_url": "https://api.github.com/users/sam09/followers", "following_url": "https://api.github.com/users/sam09/following{/other_user}", "gists_url": "https://api.github.com/users/sam09/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam09/subscriptions", "organizations_url": "https://api.github.com/users/sam09/orgs", "repos_url": "https://api.github.com/users/sam09/repos", "events_url": "https://api.github.com/users/sam09/events{/privacy}", "received_events_url": "https://api.github.com/users/sam09/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "url": "https://api.github.com/repos/rust-lang/rust/commits/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "html_url": "https://github.com/rust-lang/rust/commit/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "3c825712217e6e9123f760d5370beaacc9247d63", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c9baaa70beab336c8fcb08b378d999f7309aaef9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9baaa70beab336c8fcb08b378d999f7309aaef9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c9baaa70beab336c8fcb08b378d999f7309aaef9", "patch": "@@ -4344,7 +4344,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 let max_len = receiver.rfind(\".\").unwrap();\n                                 format!(\"{}{}\", &receiver[..max_len], method_call)\n                             } else {\n-                                format!(\"{}{}\", receiver, method_call)\n+                                match &expr.kind {\n+                                    ExprKind::Binary(_,_,_) => format!(\"({}){}\", receiver, method_call),\n+                                    ExprKind::Unary(_,_) => format!(\"({}){}\", receiver, method_call),\n+                                    _ => format!(\"{}{}\", receiver, method_call),\n+                                }\n                             };\n                             Some(if is_struct_pat_shorthand_field {\n                                 format!(\"{}: {}\", receiver, sugg)"}, {"sha": "9a5c183ca342881384d2ae5cd587cf3e0ed531cd", "filename": "src/test/ui/mismatched_types/abridged.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c9baaa70beab336c8fcb08b378d999f7309aaef9/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9baaa70beab336c8fcb08b378d999f7309aaef9/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.rs?ref=c9baaa70beab336c8fcb08b378d999f7309aaef9", "patch": "@@ -50,4 +50,13 @@ fn e() -> X<X<String, String>, String> {\n     x //~ ERROR mismatched types\n }\n \n+fn f() -> String {\n+    1+2 //~ ERROR mismatched types\n+}\n+\n+\n+fn g() -> String {\n+    -2 //~ ERROR mismatched types\n+}\n+\n fn main() {}"}, {"sha": "ded12d89c099dda001fd03cc4778c5a067dec54d", "filename": "src/test/ui/mismatched_types/abridged.stderr", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c9baaa70beab336c8fcb08b378d999f7309aaef9/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c9baaa70beab336c8fcb08b378d999f7309aaef9/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr?ref=c9baaa70beab336c8fcb08b378d999f7309aaef9", "patch": "@@ -66,6 +66,34 @@ LL |     x\n    = note: expected type `X<X<_, std::string::String>, _>`\n               found type `X<X<_, {integer}>, _>`\n \n-error: aborting due to 6 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/abridged.rs:54:5\n+   |\n+LL | fn f() -> String {\n+   |           ------ expected `std::string::String` because of return type\n+LL |     1+2\n+   |     ^^^\n+   |     |\n+   |     expected struct `std::string::String`, found integer\n+   |     help: try using a conversion method: `(1+2).to_string()`\n+   |\n+   = note: expected type `std::string::String`\n+              found type `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/abridged.rs:59:5\n+   |\n+LL | fn g() -> String {\n+   |           ------ expected `std::string::String` because of return type\n+LL |     -2\n+   |     ^^\n+   |     |\n+   |     expected struct `std::string::String`, found integer\n+   |     help: try using a conversion method: `(-2).to_string()`\n+   |\n+   = note: expected type `std::string::String`\n+              found type `{integer}`\n+\n+error: aborting due to 8 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}