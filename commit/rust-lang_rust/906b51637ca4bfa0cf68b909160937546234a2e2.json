{"sha": "906b51637ca4bfa0cf68b909160937546234a2e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNmI1MTYzN2NhNGJmYTBjZjY4YjkwOTE2MDkzNzU0NjIzNGEyZTI=", "commit": {"author": {"name": "A.A.Abroskin", "email": "arkweid@evilmartians.com", "date": "2019-01-09T10:38:38Z"}, "committer": {"name": "A.A.Abroskin", "email": "arkweid@evilmartians.com", "date": "2019-01-09T10:38:38Z"}, "message": "change assert_checks to assertions_on_constants", "tree": {"sha": "3be892951d4ab1dda07e89222f544064a751c105", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3be892951d4ab1dda07e89222f544064a751c105"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/906b51637ca4bfa0cf68b909160937546234a2e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/906b51637ca4bfa0cf68b909160937546234a2e2", "html_url": "https://github.com/rust-lang/rust/commit/906b51637ca4bfa0cf68b909160937546234a2e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/906b51637ca4bfa0cf68b909160937546234a2e2/comments", "author": null, "committer": null, "parents": [{"sha": "96058616e2a5d8af709da67cb03c35715437a990", "url": "https://api.github.com/repos/rust-lang/rust/commits/96058616e2a5d8af709da67cb03c35715437a990", "html_url": "https://github.com/rust-lang/rust/commit/96058616e2a5d8af709da67cb03c35715437a990"}], "stats": {"total": 111, "additions": 51, "deletions": 60}, "files": [{"sha": "69d0350eb09f8ccd86037eebabedb7ecab53dc8b", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -616,6 +616,7 @@ All notable changes to this project will be documented in this file.\n [`absurd_extreme_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n [`almost_swapped`]: https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped\n [`approx_constant`]: https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n+[`assertions_on_constants`]: https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n [`assign_op_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n [`assign_ops`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_ops\n [`bad_bit_mask`]: https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n@@ -679,10 +680,8 @@ All notable changes to this project will be documented in this file.\n [`expect_fun_call`]: https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call\n [`expl_impl_clone_on_copy`]: https://rust-lang.github.io/rust-clippy/master/index.html#expl_impl_clone_on_copy\n [`explicit_counter_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\n-[`explicit_false`]: https://rust-lang.github.io/rust-clippy/master/index.html#explicit_false\n [`explicit_into_iter_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#explicit_into_iter_loop\n [`explicit_iter_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop\n-[`explicit_true`]: https://rust-lang.github.io/rust-clippy/master/index.html#explicit_true\n [`explicit_write`]: https://rust-lang.github.io/rust-clippy/master/index.html#explicit_write\n [`extend_from_slice`]: https://rust-lang.github.io/rust-clippy/master/index.html#extend_from_slice\n [`extra_unused_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes"}, {"sha": "751f0add8eb50c0f99bc48e143be0bb6570a1c92", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -8,11 +8,11 @@\n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n <<<<<<< HEAD\n-[There are 290 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 291 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n ||||||| merged common ancestors\n [There are 291 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n =======\n-[There are 293 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 291 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n >>>>>>> run ./util/dev update_lints\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:"}, {"sha": "0068d6fa15781452dc339ab079389342a3433280", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "renamed", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -11,50 +11,40 @@ use crate::rustc::hir::{Expr, ExprKind};\n use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n use crate::syntax::ast::LitKind;\n-use crate::utils::{is_direct_expn_of, span_lint};\n+use crate::utils::{is_direct_expn_of, span_lint, span_lint_and_sugg};\n+use rustc_errors::Applicability;\n use if_chain::if_chain;\n \n-/// **What it does:** Check explicit call assert!(true)\n+/// **What it does:** Check explicit call assert!(true/false)\n ///\n-/// **Why is this bad?** Will be optimized out by the compiler\n-///\n-/// **Known problems:** None\n-///\n-/// **Example:**\n-/// ```rust\n-/// assert!(true)\n-/// ```\n-declare_clippy_lint! {\n-    pub EXPLICIT_TRUE,\n-    correctness,\n-    \"assert!(true) will be optimized out by the compiler\"\n-}\n-\n-/// **What it does:** Check explicit call assert!(false)\n-///\n-/// **Why is this bad?** Should probably be replaced by a panic!() or unreachable!()\n+/// **Why is this bad?** Will be optimized out by the compiler or should probably be replaced by a panic!() or unreachable!()\n ///\n /// **Known problems:** None\n ///\n /// **Example:**\n /// ```rust\n /// assert!(false)\n+/// // or\n+/// assert!(true)\n+/// // or\n+/// const B: bool = false;\n+/// assert!(B)\n /// ```\n declare_clippy_lint! {\n-    pub EXPLICIT_FALSE,\n-    correctness,\n-    \"assert!(false) should probably be replaced by a panic!() or unreachable!()\"\n+    pub ASSERTIONS_ON_CONSTANTS,\n+    style,\n+    \"assert!(true/false) will be optimized out by the compiler/should probably be replaced by a panic!() or unreachable!()\"\n }\n \n-pub struct AssertChecks;\n+pub struct AssertionsOnConstants;\n \n-impl LintPass for AssertChecks {\n+impl LintPass for AssertionsOnConstants {\n     fn get_lints(&self) -> LintArray {\n-        lint_array![EXPLICIT_TRUE, EXPLICIT_FALSE]\n+        lint_array![ASSERTIONS_ON_CONSTANTS]\n     }\n }\n \n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertChecks {\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertionsOnConstants {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n         if_chain! {\n             if is_direct_expn_of(e.span, \"assert\").is_some();\n@@ -63,12 +53,18 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertChecks {\n             then {\n                 match inner.node {\n                     LitKind::Bool(true) => {\n-                        span_lint(cx, EXPLICIT_TRUE, e.span,\n+                        span_lint(cx, ASSERTIONS_ON_CONSTANTS, e.span,\n                             \"assert!(true) will be optimized out by the compiler\");\n                     },\n                     LitKind::Bool(false) => {\n-                        span_lint(cx, EXPLICIT_FALSE, e.span,\n-                            \"assert!(false) should probably be replaced by a panic!() or unreachable!()\");\n+                        span_lint_and_sugg(\n+                            cx,\n+                            ASSERTIONS_ON_CONSTANTS,\n+                            e.span,\n+                            \"assert!(false) should probably be replaced\",\n+                            \"try\",\n+                            \"panic!()\".to_string(),\n+                            Applicability::MachineApplicable);\n                     },\n                     _ => (),\n                 }", "previous_filename": "clippy_lints/src/assert_checks.rs"}, {"sha": "192c9226b699da9f77df73eb98341ca76bc810ae", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -88,7 +88,7 @@ mod utils;\n // begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n pub mod approx_const;\n pub mod arithmetic;\n-pub mod assert_checks;\n+pub mod assertions_on_constants;\n pub mod assign_ops;\n pub mod attrs;\n pub mod bit_mask;\n@@ -487,7 +487,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box ptr_offset_with_cast::Pass);\n     reg.register_late_lint_pass(box redundant_clone::RedundantClone);\n     reg.register_late_lint_pass(box slow_vector_initialization::Pass);\n-    reg.register_late_lint_pass(box assert_checks::AssertChecks);\n+    reg.register_late_lint_pass(box assertions_on_constants::AssertionsOnConstants);\n \n     reg.register_lint_group(\"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -565,8 +565,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::all\", Some(\"clippy\"), vec![\n         approx_const::APPROX_CONSTANT,\n-        assert_checks::EXPLICIT_FALSE,\n-        assert_checks::EXPLICIT_TRUE,\n+        assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n         assign_ops::ASSIGN_OP_PATTERN,\n         assign_ops::MISREFACTORED_ASSIGN_OP,\n         attrs::DEPRECATED_CFG_ATTR,\n@@ -788,6 +787,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     ]);\n \n     reg.register_lint_group(\"clippy::style\", Some(\"clippy_style\"), vec![\n+        assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n         assign_ops::ASSIGN_OP_PATTERN,\n         attrs::UNKNOWN_CLIPPY_LINTS,\n         bit_mask::VERBOSE_BIT_MASK,\n@@ -944,8 +944,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::correctness\", Some(\"clippy_correctness\"), vec![\n         approx_const::APPROX_CONSTANT,\n-        assert_checks::EXPLICIT_FALSE,\n-        assert_checks::EXPLICIT_TRUE,\n         attrs::DEPRECATED_SEMVER,\n         attrs::USELESS_ATTRIBUTE,\n         bit_mask::BAD_BIT_MASK,"}, {"sha": "e203994165061e1ad0b6ec3380d3f569d283dbb3", "filename": "tests/ui/assert_checks.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/96058616e2a5d8af709da67cb03c35715437a990/tests%2Fui%2Fassert_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96058616e2a5d8af709da67cb03c35715437a990/tests%2Fui%2Fassert_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassert_checks.stderr?ref=96058616e2a5d8af709da67cb03c35715437a990", "patch": "@@ -1,18 +0,0 @@\n-error: assert!(true) will be optimized out by the compiler\n-  --> $DIR/assert_checks.rs:11:5\n-   |\n-11 |     assert!(true);\n-   |     ^^^^^^^^^^^^^^\n-   |\n-   = note: #[deny(clippy::explicit_true)] on by default\n-\n-error: assert!(false) should probably be replaced by a panic!() or unreachable!()\n-  --> $DIR/assert_checks.rs:12:5\n-   |\n-12 |     assert!(false);\n-   |     ^^^^^^^^^^^^^^^\n-   |\n-   = note: #[deny(clippy::explicit_false)] on by default\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "811046d060a25fc5169f2f7d05a99cd701678a17", "filename": "tests/ui/assertions_on_constants.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_constants.rs?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "previous_filename": "tests/ui/assert_checks.rs"}, {"sha": "33104ed2066a7170436485603c652f1aeed370b0", "filename": "tests/ui/assertions_on_constants.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fassertions_on_constants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fassertions_on_constants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_constants.stderr?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -0,0 +1,16 @@\n+error: assert!(true) will be optimized out by the compiler\n+  --> $DIR/assertions_on_constants.rs:11:5\n+   |\n+LL |     assert!(true);\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::assertions-on-constants` implied by `-D warnings`\n+\n+error: assert!(false) should probably be replaced\n+  --> $DIR/assertions_on_constants.rs:12:5\n+   |\n+LL |     assert!(false);\n+   |     ^^^^^^^^^^^^^^^ help: try: `panic!()`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "2c7f67d4505a8b7c45194f3991d6ddccd93007a1", "filename": "tests/ui/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.rs?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -8,7 +8,7 @@\n // except according to those terms.\n \n #![warn(clippy::inline_always, clippy::deprecated_semver)]\n-#![allow(clippy::assert_checks::explicit_true)]\n+#![allow(clippy::assertions_on_constants::assertions_on_constants)]\n #[inline(always)]\n fn test_attr_lint() {\n     assert!(true)"}, {"sha": "2bb5037614db30d34bcfaae812e9215ecd43a795", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -8,7 +8,7 @@\n // except according to those terms.\n \n #![warn(clippy::empty_line_after_outer_attr)]\n-#![allow(clippy::assert_checks::explicit_true)]\n+#![allow(clippy::assertions_on_constants::assertions_on_constants)]\n // This should produce a warning\n #[crate_type = \"lib\"]\n "}, {"sha": "309a22dc2151a9cf28a3dd4536315a0e9a17ebfd", "filename": "tests/ui/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b51637ca4bfa0cf68b909160937546234a2e2/tests%2Fui%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_unimplemented.rs?ref=906b51637ca4bfa0cf68b909160937546234a2e2", "patch": "@@ -8,7 +8,7 @@\n // except according to those terms.\n \n #![warn(clippy::panic_params, clippy::unimplemented)]\n-#![allow(clippy::assert_checks::explicit_true)]\n+#![allow(clippy::assertions_on_constants::assertions_on_constants)]\n fn missing() {\n     if true {\n         panic!(\"{}\");"}]}