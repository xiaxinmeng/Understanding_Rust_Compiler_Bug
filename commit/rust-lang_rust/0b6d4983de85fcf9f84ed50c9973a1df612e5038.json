{"sha": "0b6d4983de85fcf9f84ed50c9973a1df612e5038", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNmQ0OTgzZGU4NWZjZjlmODRlZDUwYzk5NzNhMWRmNjEyZTUwMzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-16T17:36:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-16T17:36:45Z"}, "message": "Switch to published teraron", "tree": {"sha": "078ae05cb446a7628372c1d3afd1b285e3830a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/078ae05cb446a7628372c1d3afd1b285e3830a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b6d4983de85fcf9f84ed50c9973a1df612e5038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6d4983de85fcf9f84ed50c9973a1df612e5038", "html_url": "https://github.com/rust-lang/rust/commit/0b6d4983de85fcf9f84ed50c9973a1df612e5038", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b6d4983de85fcf9f84ed50c9973a1df612e5038/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "514aa3cf853c3c4beef8f827c12328d626f977de", "url": "https://api.github.com/repos/rust-lang/rust/commits/514aa3cf853c3c4beef8f827c12328d626f977de", "html_url": "https://github.com/rust-lang/rust/commit/514aa3cf853c3c4beef8f827c12328d626f977de"}], "stats": {"total": 128, "additions": 4, "deletions": 124}, "files": [{"sha": "79da84ebcc24be28a1e9ee663d2b6a58e506c375", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b6d4983de85fcf9f84ed50c9973a1df612e5038/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/0b6d4983de85fcf9f84ed50c9973a1df612e5038/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=0b6d4983de85fcf9f84ed50c9973a1df612e5038", "patch": "@@ -1024,6 +1024,7 @@ dependencies = [\n [[package]]\n name = \"teraron\"\n version = \"0.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"failure 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"heck 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1091,7 +1092,7 @@ dependencies = [\n  \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"teraron 0.0.1\",\n+ \"teraron 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"walkdir 2.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1380,6 +1381,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum synstructure 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"85bb9b7550d063ea184027c9b8c20ac167cd36d3e06b3a40bceb9d746dc1a7b7\"\n \"checksum tempdir 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15f2b5fb00ccdf689e0149d1b1b3c03fead81c2b37735d812fa8bddbbf41b6d8\"\n \"checksum tera 0.11.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6c87cae42cc4fc480278c7583792cc5da2d51a25be916b7921cbb45c43063b8d\"\n+\"checksum teraron 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d89ad4617d1dec55331067fadaa041e813479e1779616f3d3ce9308bf46184e\"\n \"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n \"checksum text_unit 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"93fc86da66d0b9aa8d359b0ec31b4342c6bc52637eadef05b91b098551a9f8e9\"\n \"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\""}, {"sha": "7ce9f1aa8993e2d1feaf14db7ba1d0e85323302d", "filename": "crates/teraron/Cargo.toml", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/514aa3cf853c3c4beef8f827c12328d626f977de/crates%2Fteraron%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/514aa3cf853c3c4beef8f827c12328d626f977de/crates%2Fteraron%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fteraron%2FCargo.toml?ref=514aa3cf853c3c4beef8f827c12328d626f977de", "patch": "@@ -1,13 +0,0 @@\n-[package]\n-name = \"teraron\"\n-version = \"0.0.1\"\n-authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n-repository = \"https://github.com/rust-analyzer/teraron\"\n-description = \"Genrate Rust code from a .tera template and a .ron data\"\n-license = \"MIT OR Apache-2.0\"\n-\n-[dependencies]\n-failure = \"0.1.2\"\n-tera = \"0.11.18\"\n-ron = \"0.4.0\"\n-heck = \"0.3.0\""}, {"sha": "e464ea080348452cda39ef30a50e01d81f1e80b2", "filename": "crates/teraron/src/lib.rs", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/514aa3cf853c3c4beef8f827c12328d626f977de/crates%2Fteraron%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/514aa3cf853c3c4beef8f827c12328d626f977de/crates%2Fteraron%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fteraron%2Fsrc%2Flib.rs?ref=514aa3cf853c3c4beef8f827c12328d626f977de", "patch": "@@ -1,109 +0,0 @@\n-//! A simple tool to generate rust code by passing a ron value\n-//! to a tera template\n-\n-#[macro_use]\n-extern crate failure;\n-extern crate tera;\n-extern crate ron;\n-extern crate heck;\n-\n-use std::{\n-    fs,\n-    collections::HashMap,\n-    path::Path,\n-};\n-\n-use heck::{CamelCase, ShoutySnakeCase, SnakeCase};\n-\n-#[derive(Clone, Copy, PartialEq, Eq)]\n-pub enum Mode {\n-    Overwrite,\n-    Verify,\n-}\n-\n-pub use Mode::*;\n-\n-/// A helper to update file on disk if it has changed.\n-/// With verify = false,\n-pub fn update(path: &Path, contents: &str, mode: Mode) -> Result<(), failure::Error> {\n-    match fs::read_to_string(path) {\n-        Ok(ref old_contents) if old_contents == contents => {\n-            return Ok(());\n-        }\n-        _ => (),\n-    }\n-    if mode == Verify {\n-        bail!(\"`{}` is not up-to-date\", path.display());\n-    }\n-    eprintln!(\"updating {}\", path.display());\n-    fs::write(path, contents)?;\n-    Ok(())\n-}\n-\n-pub fn generate(\n-    template: &Path,\n-    src: &Path,\n-    mode: Mode,\n-) -> Result<(), failure::Error> {\n-    assert_eq!(\n-        template.extension().and_then(|it| it.to_str()), Some(\"tera\"),\n-        \"template file must have .rs.tera extension\",\n-    );\n-    let file_name = template.file_stem().unwrap().to_str().unwrap();\n-    assert!(\n-        file_name.ends_with(\".rs\"),\n-        \"template file must have .rs.tera extension\",\n-    );\n-    let tgt = template.with_file_name(file_name);\n-    let template = fs::read_to_string(template)?;\n-    let src: ron::Value = {\n-        let text = fs::read_to_string(src)?;\n-        ron::de::from_str(&text)?\n-    };\n-    let content = render(&template, src)?;\n-    update(\n-        &tgt,\n-        &content,\n-        mode,\n-    )\n-}\n-\n-pub fn render(\n-    template: &str,\n-    src: ron::Value,\n-) -> Result<String, failure::Error> {\n-    let mut tera = mk_tera();\n-    tera.add_raw_template(\"_src\", template)\n-        .map_err(|e| format_err!(\"template parsing error: {:?}\", e))?;\n-    let res = tera.render(\"_src\", &src)\n-        .map_err(|e| format_err!(\"template rendering error: {:?}\", e))?;\n-    return Ok(res);\n-}\n-\n-fn mk_tera() -> tera::Tera {\n-    let mut res = tera::Tera::default();\n-    res.register_filter(\"camel\", |arg, _| {\n-        Ok(arg.as_str().unwrap().to_camel_case().into())\n-    });\n-    res.register_filter(\"snake\", |arg, _| {\n-        Ok(arg.as_str().unwrap().to_snake_case().into())\n-    });\n-    res.register_filter(\"SCREAM\", |arg, _| {\n-        Ok(arg.as_str().unwrap().to_shouty_snake_case().into())\n-    });\n-    res.register_function(\"concat\", Box::new(concat));\n-    res\n-}\n-\n-fn concat(args: HashMap<String, tera::Value>) -> tera::Result<tera::Value> {\n-    let mut elements = Vec::new();\n-    for &key in [\"a\", \"b\", \"c\"].iter() {\n-        let val = match args.get(key) {\n-            Some(val) => val,\n-            None => continue,\n-        };\n-        let val = val.as_array().unwrap();\n-        elements.extend(val.iter().cloned());\n-    }\n-    Ok(tera::Value::Array(elements))\n-}"}, {"sha": "41b19c5c69c2270acc94c6ef0969cce35dd18f21", "filename": "crates/tools/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b6d4983de85fcf9f84ed50c9973a1df612e5038/crates%2Ftools%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0b6d4983de85fcf9f84ed50c9973a1df612e5038/crates%2Ftools%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2FCargo.toml?ref=0b6d4983de85fcf9f84ed50c9973a1df612e5038", "patch": "@@ -6,7 +6,7 @@ authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n publish = false\n \n [dependencies]\n-teraron = { path = \"../teraron\"}\n+teraron = \"0.0.1\"\n walkdir = \"2.1.3\"\n itertools = \"0.7.8\"\n clap = \"2.32.0\""}]}