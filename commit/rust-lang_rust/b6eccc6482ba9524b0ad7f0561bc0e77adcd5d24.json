{"sha": "b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZWNjYzY0ODJiYTk1MjRiMGFkN2YwNTYxYmMwZTc3YWRjZDVkMjQ=", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-01-25T10:41:03Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-01-26T08:13:54Z"}, "message": "Test that _weak atomics sometimes fail", "tree": {"sha": "d53fe207bea7c6b22f542477cabecd514e508f4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d53fe207bea7c6b22f542477cabecd514e508f4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24", "html_url": "https://github.com/rust-lang/rust/commit/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c678bd722ea6fe8d1827787d5ecd411a77f411ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/c678bd722ea6fe8d1827787d5ecd411a77f411ca", "html_url": "https://github.com/rust-lang/rust/commit/c678bd722ea6fe8d1827787d5ecd411a77f411ca"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "4871aa9fe0f653a9c2b8968edad6bf783ee37228", "filename": "tests/run-pass/atomic.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24/tests%2Frun-pass%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24/tests%2Frun-pass%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fatomic.rs?ref=b6eccc6482ba9524b0ad7f0561bc0e77adcd5d24", "patch": "@@ -5,6 +5,7 @@ fn main() {\n     atomic_isize();\n     atomic_u64();\n     atomic_fences();\n+    weak_sometimes_fails();\n }\n \n fn atomic_bool() {\n@@ -85,3 +86,17 @@ fn atomic_fences() {\n     compiler_fence(Acquire);\n     compiler_fence(AcqRel);\n }\n+\n+fn weak_sometimes_fails() {\n+    static ATOMIC: AtomicBool = AtomicBool::new(false);\n+    let tries = 20;\n+    for _ in 0..tries {\n+        let cur = ATOMIC.load(Relaxed);\n+        // Try (weakly) to flip the flag.\n+        if ATOMIC.compare_exchange_weak(cur, !cur, Relaxed, Relaxed).is_err() {\n+            // We succeeded, so return and skip the panic.\n+            return;\n+        }\n+    }\n+    panic!(\"compare_exchange_weak succeeded {} tries in a row\", tries);\n+}"}]}