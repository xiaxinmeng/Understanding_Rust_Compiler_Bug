{"sha": "4cda21dc42d64dea645be70079d2e88a914a96f5", "node_id": "C_kwDOAAsO6NoAKDRjZGEyMWRjNDJkNjRkZWE2NDViZTcwMDc5ZDJlODhhOTE0YTk2ZjU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-29T09:49:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-29T09:49:46Z"}, "message": "Auto merge of #9981 - Jarcho:issue_9954, r=flip1995\n\nDon't lint `unnecessary_operation` in mixed macro contexts\n\nfixes #9954\n\nchangelog: `unnecessary_operation`: Don't lint in mixed macro contexts.", "tree": {"sha": "f5d2e7d45322d4d3a75c8a80bcb9421a7aa1b934", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5d2e7d45322d4d3a75c8a80bcb9421a7aa1b934"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cda21dc42d64dea645be70079d2e88a914a96f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cda21dc42d64dea645be70079d2e88a914a96f5", "html_url": "https://github.com/rust-lang/rust/commit/4cda21dc42d64dea645be70079d2e88a914a96f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cda21dc42d64dea645be70079d2e88a914a96f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9a8b8c2f37da4dfc46b98e40b9b23ea6ae80fa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9a8b8c2f37da4dfc46b98e40b9b23ea6ae80fa4", "html_url": "https://github.com/rust-lang/rust/commit/e9a8b8c2f37da4dfc46b98e40b9b23ea6ae80fa4"}, {"sha": "0893322e5412f78e8214c3ebc8b5b79a8c976f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/0893322e5412f78e8214c3ebc8b5b79a8c976f38", "html_url": "https://github.com/rust-lang/rust/commit/0893322e5412f78e8214c3ebc8b5b79a8c976f38"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "79c1ae4861e805d8edefa6f127ef200d1ea4a97d", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4cda21dc42d64dea645be70079d2e88a914a96f5/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cda21dc42d64dea645be70079d2e88a914a96f5/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=4cda21dc42d64dea645be70079d2e88a914a96f5", "patch": "@@ -6,7 +6,8 @@ use clippy_utils::ty::has_drop;\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{is_range_literal, BinOpKind, BlockCheckMode, Expr, ExprKind, PatKind, Stmt, StmtKind, UnsafeSource};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::ops::Deref;\n \n@@ -159,8 +160,11 @@ fn has_no_effect(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n fn check_unnecessary_operation(cx: &LateContext<'_>, stmt: &Stmt<'_>) {\n     if_chain! {\n         if let StmtKind::Semi(expr) = stmt.kind;\n+        let ctxt = stmt.span.ctxt();\n+        if expr.span.ctxt() == ctxt;\n         if let Some(reduced) = reduce_expression(cx, expr);\n-        if !&reduced.iter().any(|e| e.span.from_expansion());\n+        if !in_external_macro(cx.sess(), stmt.span);\n+        if reduced.iter().all(|e| e.span.ctxt() == ctxt);\n         then {\n             if let ExprKind::Index(..) = &expr.kind {\n                 let snippet = if let (Some(arr), Some(func)) ="}, {"sha": "d37163570abe07ee61fba6db3942e538e6382601", "filename": "tests/ui/unnecessary_operation.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4cda21dc42d64dea645be70079d2e88a914a96f5/tests%2Fui%2Funnecessary_operation.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4cda21dc42d64dea645be70079d2e88a914a96f5/tests%2Fui%2Funnecessary_operation.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_operation.fixed?ref=4cda21dc42d64dea645be70079d2e88a914a96f5", "patch": "@@ -76,4 +76,13 @@ fn main() {\n     DropStruct { ..get_drop_struct() };\n     DropEnum::Tuple(get_number());\n     DropEnum::Struct { field: get_number() };\n+\n+    // Issue #9954\n+    fn one() -> i8 {\n+        1\n+    }\n+    macro_rules! use_expr {\n+        ($($e:expr),*) => {{ $($e;)* }}\n+    }\n+    use_expr!(isize::MIN / -(one() as isize), i8::MIN / -one());\n }"}, {"sha": "a14fd4bca0efde72bd30a1acec726665cdb6f9d8", "filename": "tests/ui/unnecessary_operation.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4cda21dc42d64dea645be70079d2e88a914a96f5/tests%2Fui%2Funnecessary_operation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cda21dc42d64dea645be70079d2e88a914a96f5/tests%2Fui%2Funnecessary_operation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_operation.rs?ref=4cda21dc42d64dea645be70079d2e88a914a96f5", "patch": "@@ -80,4 +80,13 @@ fn main() {\n     DropStruct { ..get_drop_struct() };\n     DropEnum::Tuple(get_number());\n     DropEnum::Struct { field: get_number() };\n+\n+    // Issue #9954\n+    fn one() -> i8 {\n+        1\n+    }\n+    macro_rules! use_expr {\n+        ($($e:expr),*) => {{ $($e;)* }}\n+    }\n+    use_expr!(isize::MIN / -(one() as isize), i8::MIN / -one());\n }"}]}