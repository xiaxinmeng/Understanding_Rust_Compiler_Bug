{"sha": "c0dd36fd425416f5465abf7f12f5d3a14b35751d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZGQzNmZkNDI1NDE2ZjU0NjVhYmY3ZjEyZjVkM2ExNGIzNTc1MWQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-09T11:38:01Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-09T11:38:01Z"}, "message": "Store `#[derive]` attribute ID along macro invoc", "tree": {"sha": "3fc19fa9306afd69bf5702919237753c94337007", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fc19fa9306afd69bf5702919237753c94337007"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0dd36fd425416f5465abf7f12f5d3a14b35751d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0dd36fd425416f5465abf7f12f5d3a14b35751d", "html_url": "https://github.com/rust-lang/rust/commit/c0dd36fd425416f5465abf7f12f5d3a14b35751d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0dd36fd425416f5465abf7f12f5d3a14b35751d/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "546da15972312f62be8a64a409d39a8d96ed53a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/546da15972312f62be8a64a409d39a8d96ed53a6", "html_url": "https://github.com/rust-lang/rust/commit/546da15972312f62be8a64a409d39a8d96ed53a6"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "d69116d51523a11a5bcb3f61806b3b11b0b561cb", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=c0dd36fd425416f5465abf7f12f5d3a14b35751d", "patch": "@@ -62,7 +62,7 @@ use hir_expand::{\n     ast_id_map::FileAstId,\n     eager::{expand_eager_macro, ErrorEmitted, ErrorSink},\n     hygiene::Hygiene,\n-    AstId, HirFileId, InFile, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n+    AstId, AttrId, HirFileId, InFile, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n use la_arena::Idx;\n use nameres::DefMap;\n@@ -699,6 +699,7 @@ fn macro_call_as_call_id(\n \n fn derive_macro_as_call_id(\n     item_attr: &AstIdWithPath<ast::Item>,\n+    derive_attr: AttrId,\n     db: &dyn db::DefDatabase,\n     krate: CrateId,\n     resolver: impl Fn(path::ModPath) -> Option<MacroDefId>,\n@@ -712,6 +713,7 @@ fn derive_macro_as_call_id(\n             MacroCallKind::Derive {\n                 ast_id: item_attr.ast_id,\n                 derive_name: last_segment.to_string(),\n+                derive_attr,\n             },\n         )\n         .into();"}, {"sha": "9e181751cbcfc91dd1ffd5b1e928f8202dc30ce8", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=c0dd36fd425416f5465abf7f12f5d3a14b35751d", "patch": "@@ -617,7 +617,7 @@ mod diagnostics {\n                             let node = ast_id.to_node(db.upcast());\n                             (ast_id.file_id, SyntaxNodePtr::from(AstPtr::new(&node)), None)\n                         }\n-                        MacroCallKind::Derive { ast_id, derive_name } => {\n+                        MacroCallKind::Derive { ast_id, derive_name, .. } => {\n                             let node = ast_id.to_node(db.upcast());\n \n                             // Compute the precise location of the macro name's token in the derive"}, {"sha": "d13d7be278b5edc12fd3ae07785fd276dfda04d7", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=c0dd36fd425416f5465abf7f12f5d3a14b35751d", "patch": "@@ -13,7 +13,7 @@ use hir_expand::{\n     builtin_macro::find_builtin_macro,\n     name::{AsName, Name},\n     proc_macro::ProcMacroExpander,\n-    HirFileId, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n+    AttrId, HirFileId, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n use hir_expand::{InFile, MacroCallLoc};\n use rustc_hash::{FxHashMap, FxHashSet};\n@@ -216,7 +216,7 @@ struct MacroDirective {\n #[derive(Clone, Debug, Eq, PartialEq)]\n enum MacroDirectiveKind {\n     FnLike { ast_id: AstIdWithPath<ast::MacroCall> },\n-    Derive { ast_id: AstIdWithPath<ast::Item> },\n+    Derive { ast_id: AstIdWithPath<ast::Item>, derive_attr: AttrId },\n }\n \n struct DefData<'a> {\n@@ -831,10 +831,14 @@ impl DefCollector<'_> {\n                         Err(UnresolvedMacro) | Ok(Err(_)) => {}\n                     }\n                 }\n-                MacroDirectiveKind::Derive { ast_id } => {\n-                    match derive_macro_as_call_id(ast_id, self.db, self.def_map.krate, |path| {\n-                        self.resolve_derive_macro(directive.module_id, &path)\n-                    }) {\n+                MacroDirectiveKind::Derive { ast_id, derive_attr } => {\n+                    match derive_macro_as_call_id(\n+                        ast_id,\n+                        *derive_attr,\n+                        self.db,\n+                        self.def_map.krate,\n+                        |path| self.resolve_derive_macro(directive.module_id, &path),\n+                    ) {\n                         Ok(call_id) => {\n                             resolved.push((directive.module_id, call_id, directive.depth));\n                             res = ReachedFixedPoint::No;\n@@ -1368,7 +1372,7 @@ impl ModCollector<'_, '_> {\n                         self.def_collector.unexpanded_macros.push(MacroDirective {\n                             module_id: self.module_id,\n                             depth: self.macro_depth + 1,\n-                            kind: MacroDirectiveKind::Derive { ast_id },\n+                            kind: MacroDirectiveKind::Derive { ast_id, derive_attr: derive.id },\n                         });\n                     }\n                 }"}, {"sha": "537c0302866a2ab8bb8200f319e537338442da81", "filename": "crates/hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=c0dd36fd425416f5465abf7f12f5d3a14b35751d", "patch": "@@ -269,7 +269,7 @@ mod tests {\n     use expect_test::{expect, Expect};\n     use name::AsName;\n \n-    use crate::{test_db::TestDB, AstId, MacroCallId, MacroCallKind, MacroCallLoc};\n+    use crate::{test_db::TestDB, AstId, AttrId, MacroCallId, MacroCallKind, MacroCallLoc};\n \n     use super::*;\n \n@@ -317,7 +317,11 @@ $0\n                 local_inner: false,\n             },\n             krate: CrateId(0),\n-            kind: MacroCallKind::Derive { ast_id, derive_name: name.to_string() },\n+            kind: MacroCallKind::Derive {\n+                ast_id,\n+                derive_name: name.to_string(),\n+                derive_attr: AttrId(0),\n+            },\n         };\n \n         let id: MacroCallId = db.intern_macro(loc).into();"}, {"sha": "a0e6aec62802703feb09ee514802869c86fdbf15", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd36fd425416f5465abf7f12f5d3a14b35751d/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=c0dd36fd425416f5465abf7f12f5d3a14b35751d", "patch": "@@ -291,7 +291,7 @@ pub struct MacroCallLoc {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum MacroCallKind {\n     FnLike { ast_id: AstId<ast::MacroCall> },\n-    Derive { ast_id: AstId<ast::Item>, derive_name: String },\n+    Derive { ast_id: AstId<ast::Item>, derive_name: String, derive_attr: AttrId },\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]"}]}