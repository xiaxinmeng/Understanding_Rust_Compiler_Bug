{"sha": "138aa9950309a3926c195b9be44278cb7f22f510", "node_id": "C_kwDOAAsO6NoAKDEzOGFhOTk1MDMwOWEzOTI2YzE5NWI5YmU0NDI3OGNiN2YyMmY1MTA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-05-24T18:58:28Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-05-24T18:58:28Z"}, "message": "Stabilize checked slice->str conversion functions", "tree": {"sha": "e4d9976283008af0d347bf25f0b1de92aa98fbdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4d9976283008af0d347bf25f0b1de92aa98fbdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/138aa9950309a3926c195b9be44278cb7f22f510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/138aa9950309a3926c195b9be44278cb7f22f510", "html_url": "https://github.com/rust-lang/rust/commit/138aa9950309a3926c195b9be44278cb7f22f510", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/138aa9950309a3926c195b9be44278cb7f22f510/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2eba058e6e1c698723e47074561a30b50b5fa7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2eba058e6e1c698723e47074561a30b50b5fa7a", "html_url": "https://github.com/rust-lang/rust/commit/b2eba058e6e1c698723e47074561a30b50b5fa7a"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f1055a34b9e87c09f400b5a9dea23977bfcc0a7c", "filename": "library/core/src/str/converts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138aa9950309a3926c195b9be44278cb7f22f510/library%2Fcore%2Fsrc%2Fstr%2Fconverts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138aa9950309a3926c195b9be44278cb7f22f510/library%2Fcore%2Fsrc%2Fstr%2Fconverts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fconverts.rs?ref=138aa9950309a3926c195b9be44278cb7f22f510", "patch": "@@ -82,9 +82,9 @@ use super::Utf8Error;\n /// assert_eq!(\"\ud83d\udc96\", sparkle_heart);\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_str_from_utf8\", issue = \"91006\")]\n+#[rustc_const_stable(feature = \"const_str_from_utf8_shared\", since = \"1.63.0\")]\n pub const fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error> {\n-    // This should use `?` again, once it's `const`\n+    // FIXME: This should use `?` again, once it's `const`\n     match run_utf8_validation(v) {\n         Ok(_) => {\n             // SAFETY: validation succeeded."}, {"sha": "4e569fcc866b6c974c0d373cc0d85062bd460490", "filename": "library/core/src/str/error.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/138aa9950309a3926c195b9be44278cb7f22f510/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138aa9950309a3926c195b9be44278cb7f22f510/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs?ref=138aa9950309a3926c195b9be44278cb7f22f510", "patch": "@@ -72,7 +72,7 @@ impl Utf8Error {\n     /// assert_eq!(1, error.valid_up_to());\n     /// ```\n     #[stable(feature = \"utf8_error\", since = \"1.5.0\")]\n-    #[rustc_const_unstable(feature = \"const_str_from_utf8\", issue = \"91006\")]\n+    #[rustc_const_stable(feature = \"const_str_from_utf8_shared\", since = \"1.63.0\")]\n     #[must_use]\n     #[inline]\n     pub const fn valid_up_to(&self) -> usize {\n@@ -95,11 +95,11 @@ impl Utf8Error {\n     ///\n     /// [U+FFFD]: ../../std/char/constant.REPLACEMENT_CHARACTER.html\n     #[stable(feature = \"utf8_error_error_len\", since = \"1.20.0\")]\n-    #[rustc_const_unstable(feature = \"const_str_from_utf8\", issue = \"91006\")]\n+    #[rustc_const_stable(feature = \"const_str_from_utf8_shared\", since = \"1.63.0\")]\n     #[must_use]\n     #[inline]\n     pub const fn error_len(&self) -> Option<usize> {\n-        // This should become `map` again, once it's `const`\n+        // FIXME: This should become `map` again, once it's `const`\n         match self.error_len {\n             Some(len) => Some(len as usize),\n             None => None,"}]}