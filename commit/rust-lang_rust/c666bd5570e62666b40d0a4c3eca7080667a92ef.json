{"sha": "c666bd5570e62666b40d0a4c3eca7080667a92ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NjZiZDU1NzBlNjI2NjZiNDBkMGE0YzNlY2E3MDgwNjY3YTkyZWY=", "commit": {"author": {"name": "Mahmut Bulut", "email": "vertexclique@gmail.com", "date": "2019-09-28T16:24:05Z"}, "committer": {"name": "Mahmut Bulut", "email": "vertexclique@gmail.com", "date": "2019-09-28T16:24:05Z"}, "message": "Fix typo in intrinsics op safety", "tree": {"sha": "c168dc63a356b6b1758062e1862976d15c2ca6ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c168dc63a356b6b1758062e1862976d15c2ca6ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c666bd5570e62666b40d0a4c3eca7080667a92ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEM04zbc7jHDpuYQtU0g8vXm39bxEFAl2PiSUACgkQ0g8vXm39\nbxGp0g/+J0IvcLA0I83PoBKE5Gwgr5z92erFVRBMTMs6FahiPtNA3YJiXifMtUvV\ns8t+8mEkMgjuFtUi+AJfC+2s7Ga6pT4OiFgHzjWY5wpbqf9+OkEcsKWazMbUMUt1\nmXdOd0lnTYot1z5hgRnuAki9+7RZPH5IypgSkq5HjMvGxZrOcBcuO0R+uCuXbXAn\n5RPbPh30m9XR10PYaobFDyVDB9lnTHmG3iCED61lEq2zdyVFxkSa5hdHOu5bnbC5\n5KoSoSYKTYbkcV08xzCWPf4wmPTDODBNLtHwvCtxAlVRwlSrZcMGX+SeqOVCaZ2G\nxxDWoDOeIWHx5kpAqns54ild/5DRkC2e5uE1TlBzj/KF3pgxtM5eDf5sNSZQYdq4\nA9mToaMWX8+/LRwZgL93BRZ9pRipHPM+oXv4WtysSaYvWU5J+0n9KvWAm3O7+etw\nKo212UiZR8tJp4FFVjzsicf4jeehyARUvTgld8rnoTn6dIGMkDPaaAnwaCupuChC\n2TD4PFDrjU3T5ayGxVzEO5mu5wWCxUDKYx7JLdvZutD3+1KcrBpkPpDAHaT9TzbK\nbgefSIgcwnhFxIbTPUE5/afGFA5tZXNnDb3GU5FtSGUdPC58dmdo1irm366XV86k\n9w9Qyk8a/peTdSWJ6p9FWta3PZl+ZvlgXLnlGhQTp2cweI8naoE=\n=dEdt\n-----END PGP SIGNATURE-----", "payload": "tree c168dc63a356b6b1758062e1862976d15c2ca6ea\nparent ddf43867a9cbb3766b48552632a602498fae2699\nauthor Mahmut Bulut <vertexclique@gmail.com> 1569687845 +0200\ncommitter Mahmut Bulut <vertexclique@gmail.com> 1569687845 +0200\n\nFix typo in intrinsics op safety\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c666bd5570e62666b40d0a4c3eca7080667a92ef", "html_url": "https://github.com/rust-lang/rust/commit/c666bd5570e62666b40d0a4c3eca7080667a92ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c666bd5570e62666b40d0a4c3eca7080667a92ef/comments", "author": {"login": "vertexclique", "id": 578559, "node_id": "MDQ6VXNlcjU3ODU1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/578559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vertexclique", "html_url": "https://github.com/vertexclique", "followers_url": "https://api.github.com/users/vertexclique/followers", "following_url": "https://api.github.com/users/vertexclique/following{/other_user}", "gists_url": "https://api.github.com/users/vertexclique/gists{/gist_id}", "starred_url": "https://api.github.com/users/vertexclique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vertexclique/subscriptions", "organizations_url": "https://api.github.com/users/vertexclique/orgs", "repos_url": "https://api.github.com/users/vertexclique/repos", "events_url": "https://api.github.com/users/vertexclique/events{/privacy}", "received_events_url": "https://api.github.com/users/vertexclique/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vertexclique", "id": 578559, "node_id": "MDQ6VXNlcjU3ODU1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/578559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vertexclique", "html_url": "https://github.com/vertexclique", "followers_url": "https://api.github.com/users/vertexclique/followers", "following_url": "https://api.github.com/users/vertexclique/following{/other_user}", "gists_url": "https://api.github.com/users/vertexclique/gists{/gist_id}", "starred_url": "https://api.github.com/users/vertexclique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vertexclique/subscriptions", "organizations_url": "https://api.github.com/users/vertexclique/orgs", "repos_url": "https://api.github.com/users/vertexclique/repos", "events_url": "https://api.github.com/users/vertexclique/events{/privacy}", "received_events_url": "https://api.github.com/users/vertexclique/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddf43867a9cbb3766b48552632a602498fae2699", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf43867a9cbb3766b48552632a602498fae2699", "html_url": "https://github.com/rust-lang/rust/commit/ddf43867a9cbb3766b48552632a602498fae2699"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7ecb1b5a41ecd7457daa75baf4652c65ae4f8007", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c666bd5570e62666b40d0a4c3eca7080667a92ef/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c666bd5570e62666b40d0a4c3eca7080667a92ef/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=c666bd5570e62666b40d0a4c3eca7080667a92ef", "patch": "@@ -63,7 +63,7 @@ fn equate_intrinsic_type<'tcx>(\n }\n \n /// Returns `true` if the given intrinsic is unsafe to call or not.\n-pub fn intrisic_operation_unsafety(intrinsic: &str) -> hir::Unsafety {\n+pub fn intrinsic_operation_unsafety(intrinsic: &str) -> hir::Unsafety {\n     match intrinsic {\n         \"size_of\" | \"min_align_of\" | \"needs_drop\" |\n         \"add_with_overflow\" | \"sub_with_overflow\" | \"mul_with_overflow\" |\n@@ -130,7 +130,7 @@ pub fn check_intrinsic_type(tcx: TyCtxt<'_>, it: &hir::ForeignItem) {\n     } else if &name[..] == \"abort\" || &name[..] == \"unreachable\" {\n         (0, Vec::new(), tcx.types.never, hir::Unsafety::Unsafe)\n     } else {\n-        let unsafety = intrisic_operation_unsafety(&name[..]);\n+        let unsafety = intrinsic_operation_unsafety(&name[..]);\n         let (n_tps, inputs, output) = match &name[..] {\n             \"breakpoint\" => (0, Vec::new(), tcx.mk_unit()),\n             \"size_of\" |"}, {"sha": "5b634c67c445b952ddaadbcd598b055ca794c477", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c666bd5570e62666b40d0a4c3eca7080667a92ef/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c666bd5570e62666b40d0a4c3eca7080667a92ef/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=c666bd5570e62666b40d0a4c3eca7080667a92ef", "patch": "@@ -16,7 +16,7 @@\n \n use crate::astconv::{AstConv, Bounds, SizedByDefault};\n use crate::constrained_generic_params as cgp;\n-use crate::check::intrinsic::intrisic_operation_unsafety;\n+use crate::check::intrinsic::intrinsic_operation_unsafety;\n use crate::lint;\n use crate::middle::resolve_lifetime as rl;\n use crate::middle::weak_lang_items;\n@@ -2368,7 +2368,7 @@ fn compute_sig_of_foreign_fn_decl<'tcx>(\n     abi: abi::Abi,\n ) -> ty::PolyFnSig<'tcx> {\n     let unsafety = if abi == abi::Abi::RustIntrinsic {\n-        intrisic_operation_unsafety(&*tcx.item_name(def_id).as_str())\n+        intrinsic_operation_unsafety(&*tcx.item_name(def_id).as_str())\n     } else {\n         hir::Unsafety::Unsafe\n     };"}]}