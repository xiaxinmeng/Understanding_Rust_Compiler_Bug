{"sha": "d92d28e523bf056ab4eb752510ec52fe4f1c6311", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MmQyOGU1MjNiZjA1NmFiNGViNzUyNTEwZWM1MmZlNGYxYzYzMTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-30T15:03:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-30T15:03:09Z"}, "message": "Auto merge of #77298 - jyn514:bootstrap-config, r=Mark-Simulacrum\n\nDon't warn if the config file is somewhere other than `config.toml`\n\nPreviously, `config.config` was always hardcoded as `\"config.toml\"`.\nI thought that it was being overridden with the actual value later, but\nit turns out `flags.config` was being completely discarded. This keeps\n`config.config` in sync with `flags.config`.\n\nFixes https://github.com/rust-lang/rust/issues/77293\nr? `@Mark-Simulacrum`\ncc `@davidtwco`", "tree": {"sha": "70536774b7345aec60734603f9128c79fabebac0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70536774b7345aec60734603f9128c79fabebac0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d92d28e523bf056ab4eb752510ec52fe4f1c6311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d92d28e523bf056ab4eb752510ec52fe4f1c6311", "html_url": "https://github.com/rust-lang/rust/commit/d92d28e523bf056ab4eb752510ec52fe4f1c6311", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d92d28e523bf056ab4eb752510ec52fe4f1c6311/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "939cc3e445db1eaf8b3834984e274f8c2267d9c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/939cc3e445db1eaf8b3834984e274f8c2267d9c5", "html_url": "https://github.com/rust-lang/rust/commit/939cc3e445db1eaf8b3834984e274f8c2267d9c5"}, {"sha": "d537067c97531af7f8343f75fafb4d6b9e79eaaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d537067c97531af7f8343f75fafb4d6b9e79eaaf", "html_url": "https://github.com/rust-lang/rust/commit/d537067c97531af7f8343f75fafb4d6b9e79eaaf"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "5314398ce9a2270788ea703391306894e2159789", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d92d28e523bf056ab4eb752510ec52fe4f1c6311/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d92d28e523bf056ab4eb752510ec52fe4f1c6311/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=d92d28e523bf056ab4eb752510ec52fe4f1c6311", "patch": "@@ -513,7 +513,6 @@ impl Config {\n         config.rust_codegen_backends = vec![INTERNER.intern_str(\"llvm\")];\n         config.deny_warnings = true;\n         config.missing_tools = false;\n-        config.config = PathBuf::from(\"config.toml\");\n \n         // set by bootstrap.py\n         config.build = TargetSelection::from_user(&env!(\"BUILD_TRIPLE\"));\n@@ -556,10 +555,10 @@ impl Config {\n         #[cfg(test)]\n         let get_toml = |_| TomlConfig::default();\n         #[cfg(not(test))]\n-        let get_toml = |file: PathBuf| {\n+        let get_toml = |file: &Path| {\n             use std::process;\n \n-            let contents = t!(fs::read_to_string(&file), \"`include` config not found\");\n+            let contents = t!(fs::read_to_string(file), \"`include` config not found\");\n             match toml::from_str(&contents) {\n                 Ok(table) => table,\n                 Err(err) => {\n@@ -569,18 +568,21 @@ impl Config {\n             }\n         };\n \n-        let mut toml = flags.config.map(get_toml).unwrap_or_else(TomlConfig::default);\n+        let mut toml = flags.config.as_deref().map(get_toml).unwrap_or_else(TomlConfig::default);\n         if let Some(include) = &toml.profile {\n             let mut include_path = config.src.clone();\n             include_path.push(\"src\");\n             include_path.push(\"bootstrap\");\n             include_path.push(\"defaults\");\n             include_path.push(format!(\"config.toml.{}\", include));\n-            let included_toml = get_toml(include_path);\n+            let included_toml = get_toml(&include_path);\n             toml.merge(included_toml);\n         }\n \n         config.changelog_seen = toml.changelog_seen;\n+        if let Some(cfg) = flags.config {\n+            config.config = cfg;\n+        }\n \n         let build = toml.build.unwrap_or_default();\n "}]}