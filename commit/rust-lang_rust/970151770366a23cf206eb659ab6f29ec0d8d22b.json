{"sha": "970151770366a23cf206eb659ab6f29ec0d8d22b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MDE1MTc3MDM2NmEyM2NmMjA2ZWI2NTlhYjZmMjllYzBkOGQyMmI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-12T02:25:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-12T03:24:35Z"}, "message": "std: Fix uv_tcp_t size on i686-apple-darwin", "tree": {"sha": "dfd18eb18d9a4d7d7cf9a287ac8aa4ee985efe9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd18eb18d9a4d7d7cf9a287ac8aa4ee985efe9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/970151770366a23cf206eb659ab6f29ec0d8d22b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/970151770366a23cf206eb659ab6f29ec0d8d22b", "html_url": "https://github.com/rust-lang/rust/commit/970151770366a23cf206eb659ab6f29ec0d8d22b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/970151770366a23cf206eb659ab6f29ec0d8d22b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b126c742e5cb1573da51a257735951996375e23e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b126c742e5cb1573da51a257735951996375e23e", "html_url": "https://github.com/rust-lang/rust/commit/b126c742e5cb1573da51a257735951996375e23e"}], "stats": {"total": 85, "additions": 66, "deletions": 19}, "files": [{"sha": "be6b79059a9f2830b3abdd175d1e25be751624db", "filename": "src/libstd/uv_ll.rs", "status": "modified", "additions": 66, "deletions": 19, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/970151770366a23cf206eb659ab6f29ec0d8d22b/src%2Flibstd%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/970151770366a23cf206eb659ab6f29ec0d8d22b/src%2Flibstd%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_ll.rs?ref=970151770366a23cf206eb659ab6f29ec0d8d22b", "patch": "@@ -99,7 +99,18 @@ pub struct uv_tcp_t {\n     a08: *u8, a09: *u8, a10: *u8, a11: *u8,\n     a12: *u8, a13: *u8, a14: *u8, a15: *u8,\n     a16: *u8, a17: *u8, a18: *u8, a19: *u8,\n-    a20: *u8, a21: *u8, a22: *u8, a23: *u8\n+    a20: *u8, a21: *u8, a22: *u8,\n+    a23: uv_tcp_t_osx_riders\n+}\n+#[cfg(target_arch=\"x86_64\")]\n+pub struct uv_tcp_t_osx_riders {\n+    a23: *u8,\n+}\n+#[cfg(target_arch=\"x86\")]\n+#[cfg(target_arch=\"arm\")]\n+pub struct uv_tcp_t_osx_riders {\n+    a23: *u8,\n+    a24: *u8, a25: *u8,\n }\n #[cfg(target_os=\"linux\")]\n #[cfg(target_os=\"freebsd\")]\n@@ -440,24 +451,60 @@ pub mod uv_ll_struct_stubgen {\n         }\n         #[cfg(target_os = \"macos\")]\n         pub fn gen_stub_os() -> uv_tcp_t {\n-            uv_tcp_t {\n-                fields: uv_handle_fields {\n-                    loop_handle: ptr::null(), type_: 0u32,\n-                    close_cb: ptr::null(),\n-                    data: ptr::null(),\n-                },\n-                a00: 0 as *u8, a01: 0 as *u8, a02: 0 as *u8,\n-                a03: 0 as *u8,\n-                a04: 0 as *u8, a05: 0 as *u8, a06: 0 as *u8,\n-                a07: 0 as *u8,\n-                a08: 0 as *u8, a09: 0 as *u8, a10: 0 as *u8,\n-                a11: 0 as *u8,\n-                a12: 0 as *u8, a13: 0 as *u8, a14: 0 as *u8,\n-                a15: 0 as *u8,\n-                a16: 0 as *u8, a17: 0 as *u8, a18: 0 as *u8,\n-                a19: 0 as *u8,\n-                a20: 0 as *u8, a21: 0 as *u8, a22: 0 as *u8,\n-                a23: 0 as *u8,\n+            use super::uv_tcp_t_osx_riders;\n+\n+            return gen_stub_arch();\n+\n+            #[cfg(target_arch = \"x86_64\")]\n+            fn gen_stub_arch() -> uv_tcp_t {\n+                uv_tcp_t {\n+                    fields: uv_handle_fields {\n+                        loop_handle: ptr::null(), type_: 0u32,\n+                        close_cb: ptr::null(),\n+                        data: ptr::null(),\n+                    },\n+                    a00: 0 as *u8, a01: 0 as *u8, a02: 0 as *u8,\n+                    a03: 0 as *u8,\n+                    a04: 0 as *u8, a05: 0 as *u8, a06: 0 as *u8,\n+                    a07: 0 as *u8,\n+                    a08: 0 as *u8, a09: 0 as *u8, a10: 0 as *u8,\n+                    a11: 0 as *u8,\n+                    a12: 0 as *u8, a13: 0 as *u8, a14: 0 as *u8,\n+                    a15: 0 as *u8,\n+                    a16: 0 as *u8, a17: 0 as *u8, a18: 0 as *u8,\n+                    a19: 0 as *u8,\n+                    a20: 0 as *u8, a21: 0 as *u8, a22: 0 as *u8,\n+                    a23: uv_tcp_t_osx_riders {\n+                        a23: 0 as *u8,\n+                    }\n+                }\n+            }\n+\n+            #[cfg(target_arch = \"x86\")]\n+            #[cfg(target_arch = \"arm\")]\n+            fn gen_stub_arch() -> uv_tcp_t {\n+                uv_tcp_t {\n+                    fields: uv_handle_fields {\n+                        loop_handle: ptr::null(), type_: 0u32,\n+                        close_cb: ptr::null(),\n+                        data: ptr::null(),\n+                    },\n+                    a00: 0 as *u8, a01: 0 as *u8, a02: 0 as *u8,\n+                    a03: 0 as *u8,\n+                    a04: 0 as *u8, a05: 0 as *u8, a06: 0 as *u8,\n+                    a07: 0 as *u8,\n+                    a08: 0 as *u8, a09: 0 as *u8, a10: 0 as *u8,\n+                    a11: 0 as *u8,\n+                    a12: 0 as *u8, a13: 0 as *u8, a14: 0 as *u8,\n+                    a15: 0 as *u8,\n+                    a16: 0 as *u8, a17: 0 as *u8, a18: 0 as *u8,\n+                    a19: 0 as *u8,\n+                    a20: 0 as *u8, a21: 0 as *u8, a22: 0 as *u8,\n+                    a23: uv_tcp_t_osx_riders {\n+                        a23: 0 as *u8,\n+                        a24: 0 as *u8, a25: 0 as *u8,\n+                    }\n+                }\n             }\n         }\n     }"}]}