{"sha": "078b112d9452eb24cf6d5dffe8f4479cbe830d4e", "node_id": "C_kwDOAAsO6NoAKDA3OGIxMTJkOTQ1MmViMjRjZjZkNWRmZmU4ZjQ0NzljYmU4MzBkNGU", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2021-12-16T22:22:35Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2021-12-16T22:22:35Z"}, "message": "add a panicking example", "tree": {"sha": "3ca35ee643e438716875d50d21d84386ed77016b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ca35ee643e438716875d50d21d84386ed77016b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/078b112d9452eb24cf6d5dffe8f4479cbe830d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/078b112d9452eb24cf6d5dffe8f4479cbe830d4e", "html_url": "https://github.com/rust-lang/rust/commit/078b112d9452eb24cf6d5dffe8f4479cbe830d4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/078b112d9452eb24cf6d5dffe8f4479cbe830d4e/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4420cc33d6686c9d4ae6bf490b977fc47e56d340", "url": "https://api.github.com/repos/rust-lang/rust/commits/4420cc33d6686c9d4ae6bf490b977fc47e56d340", "html_url": "https://github.com/rust-lang/rust/commit/4420cc33d6686c9d4ae6bf490b977fc47e56d340"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "cb74a0084c66d46f6bde712b297d53bdb3e70d34", "filename": "library/std/src/error.rs", "status": "modified", "additions": 51, "deletions": 4, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/078b112d9452eb24cf6d5dffe8f4479cbe830d4e/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078b112d9452eb24cf6d5dffe8f4479cbe830d4e/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=078b112d9452eb24cf6d5dffe8f4479cbe830d4e", "patch": "@@ -857,14 +857,61 @@ impl dyn Error + Send + Sync {\n ///\n /// fn main() {\n ///     match get_super_error() {\n-///         Err(e) => {\n-///             let report = Report::new(e).pretty(true);\n-///             println!(\"Error: {}\", report);\n-///         }\n+///         Err(e) => println!(\"Error: {}\", Report::new(e)),\n ///         _ => println!(\"No error\"),\n ///     }\n /// }\n /// ```\n+///\n+/// This example produces the following output:\n+///\n+/// ```console\n+/// Error: SuperError is here!: SuperErrorSideKick is here!\n+/// ```\n+///\n+/// Report prints the same output via `Display` and `Debug`, so it works well with\n+/// [`unwrap`]/[`expect`]:\n+///\n+/// ```should_panic\n+/// #![feature(error_reporter)]\n+/// use std::error::Report;\n+/// # use std::error::Error;\n+/// # use std::fmt;\n+/// # #[derive(Debug)]\n+/// # struct SuperError {\n+/// #     source: SuperErrorSideKick,\n+/// # }\n+/// # impl fmt::Display for SuperError {\n+/// #     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+/// #         write!(f, \"SuperError is here!\")\n+/// #     }\n+/// # }\n+/// # impl Error for SuperError {\n+/// #     fn source(&self) -> Option<&(dyn Error + 'static)> {\n+/// #         Some(&self.source)\n+/// #     }\n+/// # }\n+/// # #[derive(Debug)]\n+/// # struct SuperErrorSideKick;\n+/// # impl fmt::Display for SuperErrorSideKick {\n+/// #     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+/// #         write!(f, \"SuperErrorSideKick is here!\")\n+/// #     }\n+/// # }\n+/// # impl Error for SuperErrorSideKick {}\n+/// # fn get_super_error() -> Result<(), SuperError> {\n+/// #     Err(SuperError { source: SuperErrorSideKick })\n+/// # }\n+///\n+/// get_super_error().map_err(Report::new).unwrap();\n+/// ```\n+///\n+/// This example produces the following output:\n+///\n+/// ```console\n+/// thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: SuperError is here!: SuperErrorSideKick is here!', src/error.rs:34:40\n+/// note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n+/// ```\n #[unstable(feature = \"error_reporter\", issue = \"90172\")]\n pub struct Report<E> {\n     /// The error being reported."}]}