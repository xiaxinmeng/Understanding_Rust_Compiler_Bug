{"sha": "29456429013b225214151cb96355051b07f451d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NDU2NDI5MDEzYjIyNTIxNDE1MWNiOTYzNTUwNTFiMDdmNDUxZDQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-20T23:48:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-20T23:48:12Z"}, "message": "Rollup merge of #42062 - fhartwig:fix-off-by-one-span, r=nikomatsakis\n\nFix off-by-one error in column number in `explain_span`.\n\nFixes #41938", "tree": {"sha": "2f288eb7d9e67503ed520a29a1bb982cdb714fd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f288eb7d9e67503ed520a29a1bb982cdb714fd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29456429013b225214151cb96355051b07f451d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29456429013b225214151cb96355051b07f451d4", "html_url": "https://github.com/rust-lang/rust/commit/29456429013b225214151cb96355051b07f451d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29456429013b225214151cb96355051b07f451d4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c37d66aa0ad9bc5c9a31ee6132c1e73fc1f18531", "url": "https://api.github.com/repos/rust-lang/rust/commits/c37d66aa0ad9bc5c9a31ee6132c1e73fc1f18531", "html_url": "https://github.com/rust-lang/rust/commit/c37d66aa0ad9bc5c9a31ee6132c1e73fc1f18531"}, {"sha": "eb703f78515db10854d290b2f16e332cbc1c510d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb703f78515db10854d290b2f16e332cbc1c510d", "html_url": "https://github.com/rust-lang/rust/commit/eb703f78515db10854d290b2f16e332cbc1c510d"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "0515e1cc304356f738a5c009e7d266d2ac164b59", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -113,7 +113,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                                         heading: &str, span: Span)\n                                         -> (String, Option<Span>) {\n             let lo = tcx.sess.codemap().lookup_char_pos_adj(span.lo);\n-            (format!(\"the {} at {}:{}\", heading, lo.line, lo.col.to_usize()),\n+            (format!(\"the {} at {}:{}\", heading, lo.line, lo.col.to_usize() + 1),\n              Some(span))\n         }\n "}, {"sha": "0fa4184606e452b348205688ad9f851853711bde", "filename": "src/test/compile-fail/issue-27942.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fcompile-fail%2Fissue-27942.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fcompile-fail%2Fissue-27942.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-27942.rs?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -11,7 +11,7 @@\n pub trait Resources<'a> {}\n \n pub trait Buffer<'a, R: Resources<'a>> {\n-    //~^ NOTE the lifetime 'a as defined on the trait at 13:0...\n+    //~^ NOTE the lifetime 'a as defined on the trait at 13:1...\n     //~| NOTE ...does not necessarily outlive the lifetime 'a as defined on the trait\n \n     fn select(&self) -> BufferViewHandle<R>;\n@@ -22,7 +22,7 @@ pub trait Buffer<'a, R: Resources<'a>> {\n     //~| ERROR mismatched types\n     //~| lifetime mismatch\n     //~| NOTE expected type `Resources<'_>`\n-    //~| NOTE the anonymous lifetime #1 defined on the method body at 17:4...\n+    //~| NOTE the anonymous lifetime #1 defined on the method body at 17:5...\n }\n \n pub struct BufferViewHandle<'a, R: 'a+Resources<'a>>(&'a R);"}, {"sha": "f325d10b548735ca04af219b6f7a044777fd9786", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -4,14 +4,14 @@ error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n 12 |     if x > y { x } else { y }\n    |                           ^\n    |\n-note: ...the reference is valid for the lifetime 'a as defined on the function body at 11:0...\n+note: ...the reference is valid for the lifetime 'a as defined on the function body at 11:1...\n   --> $DIR/ex1-return-one-existing-name-if-else.rs:11:1\n    |\n 11 | / fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n 12 | |     if x > y { x } else { y }\n 13 | | }\n    | |_^\n-note: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the function body at 11:0\n+note: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the function body at 11:1\n   --> $DIR/ex1-return-one-existing-name-if-else.rs:11:1\n    |\n 11 | / fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {"}, {"sha": "df484a14927c737ce514e9ab27e550585b7a6330", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -6,14 +6,14 @@ error[E0308]: mismatched types\n    |\n    = note: expected type `Ref<'a, _>`\n               found type `Ref<'_, _>`\n-note: the anonymous lifetime #2 defined on the function body at 15:0...\n+note: the anonymous lifetime #2 defined on the function body at 15:1...\n   --> $DIR/ex2a-push-one-existing-name.rs:15:1\n    |\n 15 | / fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n 16 | |     x.push(y);\n 17 | | }\n    | |_^\n-note: ...does not necessarily outlive the lifetime 'a as defined on the function body at 15:0\n+note: ...does not necessarily outlive the lifetime 'a as defined on the function body at 15:1\n   --> $DIR/ex2a-push-one-existing-name.rs:15:1\n    |\n 15 | / fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {"}, {"sha": "6764c58f4bb59aeb1b9b345eab5f840ba0032c48", "filename": "src/test/ui/lifetime-errors/ex2b-push-no-existing-names.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -6,14 +6,14 @@ error[E0308]: mismatched types\n    |\n    = note: expected type `Ref<'_, _>`\n               found type `Ref<'_, _>`\n-note: the anonymous lifetime #3 defined on the function body at 15:0...\n+note: the anonymous lifetime #3 defined on the function body at 15:1...\n   --> $DIR/ex2b-push-no-existing-names.rs:15:1\n    |\n 15 | / fn foo(x: &mut Vec<Ref<i32>>, y: Ref<i32>) {\n 16 | |     x.push(y);\n 17 | | }\n    | |_^\n-note: ...does not necessarily outlive the anonymous lifetime #2 defined on the function body at 15:0\n+note: ...does not necessarily outlive the anonymous lifetime #2 defined on the function body at 15:1\n   --> $DIR/ex2b-push-no-existing-names.rs:15:1\n    |\n 15 | / fn foo(x: &mut Vec<Ref<i32>>, y: Ref<i32>) {"}, {"sha": "7356fc11862f6e104d004cd642852161b18e5e1b", "filename": "src/test/ui/lifetime-errors/ex2c-push-inference-variable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -4,7 +4,7 @@ error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` d\n 16 |     let z = Ref { data: y.data };\n    |             ^^^\n    |\n-note: first, the lifetime cannot outlive the lifetime 'c as defined on the function body at 15:0...\n+note: first, the lifetime cannot outlive the lifetime 'c as defined on the function body at 15:1...\n   --> $DIR/ex2c-push-inference-variable.rs:15:1\n    |\n 15 | / fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n@@ -17,7 +17,7 @@ note: ...so that reference does not outlive borrowed content\n    |\n 16 |     let z = Ref { data: y.data };\n    |                         ^^^^^^\n-note: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 15:0...\n+note: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 15:1...\n   --> $DIR/ex2c-push-inference-variable.rs:15:1\n    |\n 15 | / fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {"}, {"sha": "38b0acf9339e0e89595a6c0ee889abca1f2c221e", "filename": "src/test/ui/lifetime-errors/ex2d-push-inference-variable-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -4,7 +4,7 @@ error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` d\n 17 |     let b = Ref { data: y.data };\n    |             ^^^\n    |\n-note: first, the lifetime cannot outlive the lifetime 'c as defined on the function body at 15:0...\n+note: first, the lifetime cannot outlive the lifetime 'c as defined on the function body at 15:1...\n   --> $DIR/ex2d-push-inference-variable-2.rs:15:1\n    |\n 15 | / fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n@@ -18,7 +18,7 @@ note: ...so that reference does not outlive borrowed content\n    |\n 17 |     let b = Ref { data: y.data };\n    |                         ^^^^^^\n-note: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 15:0...\n+note: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 15:1...\n   --> $DIR/ex2d-push-inference-variable-2.rs:15:1\n    |\n 15 | / fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {"}, {"sha": "035e516e8628e9b933157645e651ef281f272c01", "filename": "src/test/ui/lifetime-errors/ex2e-push-inference-variable-3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29456429013b225214151cb96355051b07f451d4/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr?ref=29456429013b225214151cb96355051b07f451d4", "patch": "@@ -4,7 +4,7 @@ error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` d\n 17 |     let b = Ref { data: y.data };\n    |             ^^^\n    |\n-note: first, the lifetime cannot outlive the lifetime 'c as defined on the function body at 15:0...\n+note: first, the lifetime cannot outlive the lifetime 'c as defined on the function body at 15:1...\n   --> $DIR/ex2e-push-inference-variable-3.rs:15:1\n    |\n 15 | / fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n@@ -18,7 +18,7 @@ note: ...so that reference does not outlive borrowed content\n    |\n 17 |     let b = Ref { data: y.data };\n    |                         ^^^^^^\n-note: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 15:0...\n+note: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 15:1...\n   --> $DIR/ex2e-push-inference-variable-3.rs:15:1\n    |\n 15 | / fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {"}]}