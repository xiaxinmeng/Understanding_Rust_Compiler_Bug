{"sha": "469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "node_id": "C_kwDOAAsO6NoAKDQ2OWZhYTJiNjY3ZGMxZDZjYjZjYTkwMmExZDJjOWExMTZmYjA5NmE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-17T14:58:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-17T14:58:06Z"}, "message": "Rollup merge of #90901 - rukai:improve_manuallydrop_help, r=estebank\n\nImprove ManuallyDrop suggestion\n\ncloses https://github.com/rust-lang/rust/issues/90585\n* Fixes the recommended change to use ManuallyDrop as per the issue\n* Changes the note to a help\n* improves the span so it only points at the type.", "tree": {"sha": "94b4f214e769074627a9dbf67a7a5dae7e9ff75e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94b4f214e769074627a9dbf67a7a5dae7e9ff75e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhlRh+CRBK7hj4Ov3rIwAAxJoIAICJNS1avPHiNGRjOZWjZaa7\n3ngy4JaGEDZZrddYK73L0Kh7bB4FjVTywelFAkET4g0ZIwpMXZrUcsBPE6tzJxt5\nlmGh/cLrQRtwdCOApcVupOAzpwSDTKUH+jQkawtveecV1n9r0bgyzIbVHGn82Lrt\n4n/6nPI1GtyfAMF6ETJUnIh3LK2tKQ+t84ddErmQw4ciLjmVfPs5pkeB2F3XnMW+\nz3TnnzpPJj7qzWCfO6M6LAFjFyBQve8YtVGjKdn+FKubtzTazsLbJkRO7MgXC4t9\nQdaNDuq5stiOhUAUGjo3NZuVSZmtsV+zOMvS7OeBszeOlhzeo8WXo5CgS+/1DVg=\n=WZ0Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 94b4f214e769074627a9dbf67a7a5dae7e9ff75e\nparent fb660de28ea8140c90aa8fee755d441c30a67e66\nparent 62acf7f96def600de3239cb93b62d07e9b514276\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1637161086 +0100\ncommitter GitHub <noreply@github.com> 1637161086 +0100\n\nRollup merge of #90901 - rukai:improve_manuallydrop_help, r=estebank\n\nImprove ManuallyDrop suggestion\n\ncloses https://github.com/rust-lang/rust/issues/90585\n* Fixes the recommended change to use ManuallyDrop as per the issue\n* Changes the note to a help\n* improves the span so it only points at the type.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "html_url": "https://github.com/rust-lang/rust/commit/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb660de28ea8140c90aa8fee755d441c30a67e66", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb660de28ea8140c90aa8fee755d441c30a67e66", "html_url": "https://github.com/rust-lang/rust/commit/fb660de28ea8140c90aa8fee755d441c30a67e66"}, {"sha": "62acf7f96def600de3239cb93b62d07e9b514276", "url": "https://api.github.com/repos/rust-lang/rust/commits/62acf7f96def600de3239cb93b62d07e9b514276", "html_url": "https://github.com/rust-lang/rust/commit/62acf7f96def600de3239cb93b62d07e9b514276"}], "stats": {"total": 86, "additions": 43, "deletions": 43}, "files": [{"sha": "bb1d9744e66fe068447885de77b80c62f789339a", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "patch": "@@ -371,16 +371,26 @@ fn check_union_fields(tcx: TyCtxt<'_>, span: Span, item_def_id: LocalDefId) -> b\n         let param_env = tcx.param_env(item_def_id);\n         for field in fields {\n             let field_ty = field.ty(tcx, substs);\n-            // We are currently checking the type this field came from, so it must be local.\n-            let field_span = tcx.hir().span_if_local(field.did).unwrap();\n             if field_ty.needs_drop(tcx, param_env) {\n+                let (field_span, ty_span) = match tcx.hir().get_if_local(field.did) {\n+                    // We are currently checking the type this field came from, so it must be local.\n+                    Some(Node::Field(field)) => (field.span, field.ty.span),\n+                    _ => unreachable!(\"mir field has to correspond to hir field\"),\n+                };\n                 struct_span_err!(\n                     tcx.sess,\n                     field_span,\n                     E0740,\n                     \"unions may not contain fields that need dropping\"\n                 )\n-                .span_note(field_span, \"`std::mem::ManuallyDrop` can be used to wrap the type\")\n+                .multipart_suggestion_verbose(\n+                    \"wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\",\n+                    vec![\n+                        (ty_span.shrink_to_lo(), format!(\"std::mem::ManuallyDrop<\")),\n+                        (ty_span.shrink_to_hi(), \">\".into()),\n+                    ],\n+                    Applicability::MaybeIncorrect,\n+                )\n                 .emit();\n                 return false;\n             }"}, {"sha": "0967cb7ba8bd28496eb354928e22222250af39a2", "filename": "src/test/ui/feature-gates/feature-gate-untagged_unions.stderr", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr?ref=469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "patch": "@@ -13,23 +13,21 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: String,\n    |     ^^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/feature-gate-untagged_unions.rs:16:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: String,\n-   |     ^^^^^^^^^\n+LL |     a: std::mem::ManuallyDrop<String>,\n+   |        +++++++++++++++++++++++      +\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/feature-gate-untagged_unions.rs:24:5\n    |\n LL |     a: T,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/feature-gate-untagged_unions.rs:24:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: T,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<T>,\n+   |        +++++++++++++++++++++++ +\n \n error: aborting due to 3 previous errors\n "}, {"sha": "8edf4db441b9cf872a8b429367757277ed04ba4a", "filename": "src/test/ui/union/issue-41073.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Fissue-41073.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Fissue-41073.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Fissue-41073.stderr?ref=469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "patch": "@@ -4,11 +4,10 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: A,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/issue-41073.rs:4:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: A,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<A>,\n+   |        +++++++++++++++++++++++ +\n \n error: aborting due to previous error\n "}, {"sha": "65ca5fd931d670417865d75e1393d812be9081ec", "filename": "src/test/ui/union/union-custom-drop.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr?ref=469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "patch": "@@ -4,11 +4,10 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     bar: Bar,\n    |     ^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-custom-drop.rs:7:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     bar: Bar,\n-   |     ^^^^^^^^\n+LL |     bar: std::mem::ManuallyDrop<Bar>,\n+   |          +++++++++++++++++++++++   +\n \n error: aborting due to previous error\n "}, {"sha": "f5e9681735c6f93272155b397e73b52b4a3ca570", "filename": "src/test/ui/union/union-with-drop-fields.mirunsafeck.stderr", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.mirunsafeck.stderr?ref=469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "patch": "@@ -4,35 +4,32 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: String,\n    |     ^^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:11:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: String,\n-   |     ^^^^^^^^^\n+LL |     a: std::mem::ManuallyDrop<String>,\n+   |        +++++++++++++++++++++++      +\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:19:5\n    |\n LL |     a: S,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:19:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: S,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<S>,\n+   |        +++++++++++++++++++++++ +\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:24:5\n    |\n LL |     a: T,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:24:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: T,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<T>,\n+   |        +++++++++++++++++++++++ +\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f5e9681735c6f93272155b397e73b52b4a3ca570", "filename": "src/test/ui/union/union-with-drop-fields.thirunsafeck.stderr", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/469faa2b667dc1d6cb6ca902a1d2c9a116fb096a/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.thirunsafeck.stderr?ref=469faa2b667dc1d6cb6ca902a1d2c9a116fb096a", "patch": "@@ -4,35 +4,32 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: String,\n    |     ^^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:11:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: String,\n-   |     ^^^^^^^^^\n+LL |     a: std::mem::ManuallyDrop<String>,\n+   |        +++++++++++++++++++++++      +\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:19:5\n    |\n LL |     a: S,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:19:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: S,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<S>,\n+   |        +++++++++++++++++++++++ +\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:24:5\n    |\n LL |     a: T,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:24:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: T,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<T>,\n+   |        +++++++++++++++++++++++ +\n \n error: aborting due to 3 previous errors\n "}]}