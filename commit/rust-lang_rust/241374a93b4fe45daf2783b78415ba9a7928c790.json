{"sha": "241374a93b4fe45daf2783b78415ba9a7928c790", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MTM3NGE5M2I0ZmU0NWRhZjI3ODNiNzg0MTViYTlhNzkyOGM3OTA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-20T19:30:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-20T19:30:14Z"}, "message": "Rollup merge of #73197 - c410-f3r:ranges, r=dtolnay\n\nImpl Default for ranges\n\nCouldn't find an issue about it.\n\n`Range` and friends probably can implement `Default` if `Idx: Default`. For example, the following would be possible:\n\n```rust\n#[derive(Default)]\nstruct Foo(core::ops::RangeToInclusive<u64>);\n\nlet _ = [1, 2, 3].get(core::ops::Range::default());\n\ncore::ops::RangeFrom::<u8>::default().take(20).for_each(|x| { dbg!(x); });\n\nfn stuff<T: Default>() { let instance = T::default(); ... more stuff }\nstuff::<core::ops::RangeTo<f32>>();\n```\n\nMaybe there are some concerns about safety or misunderstandings?", "tree": {"sha": "8b5110c1429374fb736b3220659accfb099e8cb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b5110c1429374fb736b3220659accfb099e8cb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/241374a93b4fe45daf2783b78415ba9a7928c790", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfFfDHCRBK7hj4Ov3rIwAAdHIIAIJSYg9TatyK5QKoajzADmuh\nGSk1UOTTN62BXRW6ZfcjgHBBWnxd9u6oJlxjxu3Z6sVcAONEpC4eklPe+D9PUgvT\njO0rmoPzfUVpxFhk/j7mDL7sZ6J0kTllH97QIcMw/ToErFhs5PAkZSpqc5r3j1nv\n30sHyTtaAayOvlCDmed/fcb+SEpWfLOOSg5Gin+NVA8pd7axDvrG2w3WtMZoa8no\nOiW9cL+9TM4muYbANB1wde9+tQlogV2K5iqDQ4lHTVyMLnf1N4IhuNqryFJd9wz/\n81M5KvbaCTf14KnCp5qgpL0Accr2OPT6ICf1eat2zgzviu4a49SSF8P/RzVJXjA=\n=k5+B\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b5110c1429374fb736b3220659accfb099e8cb6\nparent 105cd4955425de2613ac2ae6c2d2d1baf17ebd2b\nparent c3756927478afe8d3a880edc469afd766c2f9e82\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595273414 -0700\ncommitter GitHub <noreply@github.com> 1595273414 -0700\n\nRollup merge of #73197 - c410-f3r:ranges, r=dtolnay\n\nImpl Default for ranges\n\nCouldn't find an issue about it.\n\n`Range` and friends probably can implement `Default` if `Idx: Default`. For example, the following would be possible:\n\n```rust\n#[derive(Default)]\nstruct Foo(core::ops::RangeToInclusive<u64>);\n\nlet _ = [1, 2, 3].get(core::ops::Range::default());\n\ncore::ops::RangeFrom::<u8>::default().take(20).for_each(|x| { dbg!(x); });\n\nfn stuff<T: Default>() { let instance = T::default(); ... more stuff }\nstuff::<core::ops::RangeTo<f32>>();\n```\n\nMaybe there are some concerns about safety or misunderstandings?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/241374a93b4fe45daf2783b78415ba9a7928c790", "html_url": "https://github.com/rust-lang/rust/commit/241374a93b4fe45daf2783b78415ba9a7928c790", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/241374a93b4fe45daf2783b78415ba9a7928c790/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "105cd4955425de2613ac2ae6c2d2d1baf17ebd2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/105cd4955425de2613ac2ae6c2d2d1baf17ebd2b", "html_url": "https://github.com/rust-lang/rust/commit/105cd4955425de2613ac2ae6c2d2d1baf17ebd2b"}, {"sha": "c3756927478afe8d3a880edc469afd766c2f9e82", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3756927478afe8d3a880edc469afd766c2f9e82", "html_url": "https://github.com/rust-lang/rust/commit/c3756927478afe8d3a880edc469afd766c2f9e82"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "179038d1977c86ada516b1fce43454eb335c0fb5", "filename": "src/libcore/ops/range.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/241374a93b4fe45daf2783b78415ba9a7928c790/src%2Flibcore%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/241374a93b4fe45daf2783b78415ba9a7928c790/src%2Flibcore%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Frange.rs?ref=241374a93b4fe45daf2783b78415ba9a7928c790", "patch": "@@ -39,7 +39,7 @@ use crate::hash::Hash;\n /// [`Iterator`]: ../iter/trait.IntoIterator.html\n /// [slicing index]: ../slice/trait.SliceIndex.html\n #[doc(alias = \"..\")]\n-#[derive(Copy, Clone, PartialEq, Eq, Hash)]\n+#[derive(Copy, Clone, Default, PartialEq, Eq, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RangeFull;\n \n@@ -71,7 +71,7 @@ impl fmt::Debug for RangeFull {\n /// assert_eq!(arr[1..=3], [  1,2,3  ]);\n /// ```\n #[doc(alias = \"..\")]\n-#[derive(Clone, PartialEq, Eq, Hash)] // not Copy -- see #27186\n+#[derive(Clone, Default, PartialEq, Eq, Hash)] // not Copy -- see #27186\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Range<Idx> {\n     /// The lower bound of the range (inclusive)."}]}