{"sha": "9daac58ee9a7be95f14f29b44d0a256669b0419e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYWFjNThlZTlhN2JlOTVmMTRmMjliNDRkMGEyNTY2NjliMDQxOWU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-05T00:52:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-05T00:52:52Z"}, "message": "Rollup merge of #80696 - RalfJung:failing-promoteds, r=oli-obk\n\nmake sure that promoteds which fail to evaluate in dead const code behave correctly\n\nhttps://github.com/rust-lang/rust/pull/80243 showed that we'll have to live with these kinds of failing promoteds for a while, so let's make sure we have a test that covers them.", "tree": {"sha": "a94314484d443335c89bc0b0a5e17f6cecbbaf62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a94314484d443335c89bc0b0a5e17f6cecbbaf62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9daac58ee9a7be95f14f29b44d0a256669b0419e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf87hkCRBK7hj4Ov3rIwAAdHIIACc7qtC0aDu9P971UWI/pBk8\nyNRsU0UONgMvdSC0J6EpacPUSt3gFm+n7cn3wxJCACugBpJbRZ4pQFej2aB3e4OW\n9bQJ/x8NtgKHdBwT7xnpKljO05EHyYYDByvFsYLauwLrdNI5vIRQFoEcvUqqoheZ\nSUaQpF8POsHcQu1Fcg0nzZGa+tM/wqExN5UE9GuiVVD9V4StkTnkjaVBbqQwqyb7\nAM8+sDOD9FW2UyM+GlXzoTAGGCbiXAQhZac8a+2GFewXtUeunbaYLV+SY0vTzEgN\nelOkAyN58ATgDyy6RNu2dHgxoc3B0o/W7KV6LMWVLxLmQtjZTS6xGC3bp2nUaAY=\n=Z/l3\n-----END PGP SIGNATURE-----\n", "payload": "tree a94314484d443335c89bc0b0a5e17f6cecbbaf62\nparent ee94d9d690df06a1336dd671757a7e814b797b51\nparent 92d1b390438e1aefef6532463ddccc27ec3b2dda\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1609807972 +0900\ncommitter GitHub <noreply@github.com> 1609807972 +0900\n\nRollup merge of #80696 - RalfJung:failing-promoteds, r=oli-obk\n\nmake sure that promoteds which fail to evaluate in dead const code behave correctly\n\nhttps://github.com/rust-lang/rust/pull/80243 showed that we'll have to live with these kinds of failing promoteds for a while, so let's make sure we have a test that covers them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9daac58ee9a7be95f14f29b44d0a256669b0419e", "html_url": "https://github.com/rust-lang/rust/commit/9daac58ee9a7be95f14f29b44d0a256669b0419e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9daac58ee9a7be95f14f29b44d0a256669b0419e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee94d9d690df06a1336dd671757a7e814b797b51", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee94d9d690df06a1336dd671757a7e814b797b51", "html_url": "https://github.com/rust-lang/rust/commit/ee94d9d690df06a1336dd671757a7e814b797b51"}, {"sha": "92d1b390438e1aefef6532463ddccc27ec3b2dda", "url": "https://api.github.com/repos/rust-lang/rust/commits/92d1b390438e1aefef6532463ddccc27ec3b2dda", "html_url": "https://github.com/rust-lang/rust/commit/92d1b390438e1aefef6532463ddccc27ec3b2dda"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "b6e7127a9b77909c761b326c593303df70239311", "filename": "src/test/ui/consts/promotion.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9daac58ee9a7be95f14f29b44d0a256669b0419e/src%2Ftest%2Fui%2Fconsts%2Fpromotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9daac58ee9a7be95f14f29b44d0a256669b0419e/src%2Ftest%2Fui%2Fconsts%2Fpromotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromotion.rs?ref=9daac58ee9a7be95f14f29b44d0a256669b0419e", "patch": "@@ -4,12 +4,23 @@\n \n fn foo(_: &'static [&'static str]) {}\n fn bar(_: &'static [&'static str; 3]) {}\n-fn baz_i32(_: &'static i32) {}\n-fn baz_u32(_: &'static u32) {}\n+const fn baz_i32(_: &'static i32) {}\n+const fn baz_u32(_: &'static u32) {}\n+\n+const fn fail() -> i32 { 1/0 }\n+const C: i32 = {\n+    // Promoted that fails to evaluate in dead code -- this must work\n+    // (for backwards compatibility reasons).\n+    if false {\n+        baz_i32(&fail());\n+    }\n+    42\n+};\n \n fn main() {\n     foo(&[\"a\", \"b\", \"c\"]);\n     bar(&[\"d\", \"e\", \"f\"]);\n+    assert_eq!(C, 42);\n \n     // make sure that these do not cause trouble despite overflowing\n     baz_u32(&(0-1));"}]}