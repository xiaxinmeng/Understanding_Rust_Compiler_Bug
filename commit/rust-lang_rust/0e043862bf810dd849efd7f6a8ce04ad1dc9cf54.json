{"sha": "0e043862bf810dd849efd7f6a8ce04ad1dc9cf54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMDQzODYyYmY4MTBkZDg0OWVmZDdmNmE4Y2UwNGFkMWRjOWNmNTQ=", "commit": {"author": {"name": "Sebastian Hahn", "email": "sebastian@torproject.org", "date": "2015-12-18T21:56:09Z"}, "committer": {"name": "Sebastian Hahn", "email": "sebastian@torproject.org", "date": "2015-12-18T23:23:07Z"}, "message": "use core::mem::unintialized instead of uninit intrinsic", "tree": {"sha": "6dad65cbc6743f9a79c790c3fc1b9c1ad3f71f2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dad65cbc6743f9a79c790c3fc1b9c1ad3f71f2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e043862bf810dd849efd7f6a8ce04ad1dc9cf54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e043862bf810dd849efd7f6a8ce04ad1dc9cf54", "html_url": "https://github.com/rust-lang/rust/commit/0e043862bf810dd849efd7f6a8ce04ad1dc9cf54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e043862bf810dd849efd7f6a8ce04ad1dc9cf54/comments", "author": {"login": "shahn", "id": 128636, "node_id": "MDQ6VXNlcjEyODYzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/128636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahn", "html_url": "https://github.com/shahn", "followers_url": "https://api.github.com/users/shahn/followers", "following_url": "https://api.github.com/users/shahn/following{/other_user}", "gists_url": "https://api.github.com/users/shahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahn/subscriptions", "organizations_url": "https://api.github.com/users/shahn/orgs", "repos_url": "https://api.github.com/users/shahn/repos", "events_url": "https://api.github.com/users/shahn/events{/privacy}", "received_events_url": "https://api.github.com/users/shahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shahn", "id": 128636, "node_id": "MDQ6VXNlcjEyODYzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/128636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahn", "html_url": "https://github.com/shahn", "followers_url": "https://api.github.com/users/shahn/followers", "following_url": "https://api.github.com/users/shahn/following{/other_user}", "gists_url": "https://api.github.com/users/shahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahn/subscriptions", "organizations_url": "https://api.github.com/users/shahn/orgs", "repos_url": "https://api.github.com/users/shahn/repos", "events_url": "https://api.github.com/users/shahn/events{/privacy}", "received_events_url": "https://api.github.com/users/shahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bed2acf92761b53ef96e5a6d60f1c725dd566bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bed2acf92761b53ef96e5a6d60f1c725dd566bd", "html_url": "https://github.com/rust-lang/rust/commit/8bed2acf92761b53ef96e5a6d60f1c725dd566bd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8e649bfbee055c597472cf8e4a8cbbf68a38cde3", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e043862bf810dd849efd7f6a8ce04ad1dc9cf54/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e043862bf810dd849efd7f6a8ce04ad1dc9cf54/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=0e043862bf810dd849efd7f6a8ce04ad1dc9cf54", "patch": "@@ -160,11 +160,11 @@ use core::cell::Cell;\n use core::cmp::Ordering;\n use core::fmt;\n use core::hash::{Hasher, Hash};\n-use core::intrinsics::{assume, abort, uninit};\n+use core::intrinsics::{assume, abort};\n use core::marker;\n #[cfg(not(stage0))]\n use core::marker::Unsize;\n-use core::mem::{self, align_of_val, size_of_val, forget};\n+use core::mem::{self, align_of_val, size_of_val, forget, uninitialized};\n use core::ops::Deref;\n #[cfg(not(stage0))]\n use core::ops::CoerceUnsized;\n@@ -855,7 +855,7 @@ impl<T> Weak<T> {\n                 _ptr: Shared::new(Box::into_raw(box RcBox {\n                     strong: Cell::new(0),\n                     weak: Cell::new(1),\n-                    value: uninit(),\n+                    value: uninitialized(),\n                 })),\n             }\n         }"}]}