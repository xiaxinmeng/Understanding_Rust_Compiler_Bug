{"sha": "2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNGNmZmRlM2JkYzM2ZDk2MzRlYmYyNGU1MTJmMTlhYTZmZTFjY2I=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-07T23:50:26Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-07T23:50:26Z"}, "message": "Reduce callsites in Chain::last()", "tree": {"sha": "ee57a509eda48126285791ccbe82ee4048c92b52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee57a509eda48126285791ccbe82ee4048c92b52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb", "html_url": "https://github.com/rust-lang/rust/commit/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aac1077ed495ef8d1241ce76d4b64d7eb13a856", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aac1077ed495ef8d1241ce76d4b64d7eb13a856", "html_url": "https://github.com/rust-lang/rust/commit/8aac1077ed495ef8d1241ce76d4b64d7eb13a856"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "aadecdfbb6589e93a7b9f6fb132deae4adeba14c", "filename": "src/libcore/iter/adapters/chain.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs?ref=2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb", "patch": "@@ -130,17 +130,16 @@ where\n \n     #[inline]\n     fn last(self) -> Option<A::Item> {\n-        match self {\n-            Chain { a: Some(a), b: Some(b) } => {\n-                // Must exhaust a before b.\n-                let a_last = a.last();\n-                let b_last = b.last();\n-                b_last.or(a_last)\n-            }\n-            Chain { a: Some(a), b: None } => a.last(),\n-            Chain { a: None, b: Some(b) } => b.last(),\n-            Chain { a: None, b: None } => None,\n-        }\n+        // Must exhaust a before b.\n+        let a_last = match self.a {\n+            Some(a) => a.last(),\n+            None => None,\n+        };\n+        let b_last = match self.b {\n+            Some(b) => b.last(),\n+            None => None,\n+        };\n+        b_last.or(a_last)\n     }\n \n     #[inline]"}]}