{"sha": "4093bafe636bb711228e76d780d520626df28921", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOTNiYWZlNjM2YmI3MTEyMjhlNzZkNzgwZDUyMDYyNmRmMjg5MjE=", "commit": {"author": {"name": "krdln", "email": "mkrdln@gmail.com", "date": "2017-01-11T14:56:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-11T14:56:06Z"}, "message": "Add `&mut expr` to syntax index", "tree": {"sha": "bb13afebd63ed027dc567fa928c1480b2500a2b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb13afebd63ed027dc567fa928c1480b2500a2b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4093bafe636bb711228e76d780d520626df28921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4093bafe636bb711228e76d780d520626df28921", "html_url": "https://github.com/rust-lang/rust/commit/4093bafe636bb711228e76d780d520626df28921", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4093bafe636bb711228e76d780d520626df28921/comments", "author": {"login": "krdln", "id": 3074996, "node_id": "MDQ6VXNlcjMwNzQ5OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3074996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krdln", "html_url": "https://github.com/krdln", "followers_url": "https://api.github.com/users/krdln/followers", "following_url": "https://api.github.com/users/krdln/following{/other_user}", "gists_url": "https://api.github.com/users/krdln/gists{/gist_id}", "starred_url": "https://api.github.com/users/krdln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krdln/subscriptions", "organizations_url": "https://api.github.com/users/krdln/orgs", "repos_url": "https://api.github.com/users/krdln/repos", "events_url": "https://api.github.com/users/krdln/events{/privacy}", "received_events_url": "https://api.github.com/users/krdln/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d03d51cc0534ac514732f4e8d845e9743ef6300", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d03d51cc0534ac514732f4e8d845e9743ef6300", "html_url": "https://github.com/rust-lang/rust/commit/0d03d51cc0534ac514732f4e8d845e9743ef6300"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5fa78001fad5442df034d87eb8d76aad07048fec", "filename": "src/doc/book/syntax-index.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4093bafe636bb711228e76d780d520626df28921/src%2Fdoc%2Fbook%2Fsyntax-index.md", "raw_url": "https://github.com/rust-lang/rust/raw/4093bafe636bb711228e76d780d520626df28921/src%2Fdoc%2Fbook%2Fsyntax-index.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsyntax-index.md?ref=4093bafe636bb711228e76d780d520626df28921", "patch": "@@ -45,7 +45,7 @@\n * `%` (`expr % expr`): arithmetic remainder.  Overloadable (`Rem`).\n * `%=` (`var %= expr`): arithmetic remainder & assignment. Overloadable (`RemAssign`).\n * `&` (`expr & expr`): bitwise and.  Overloadable (`BitAnd`).\n-* `&` (`&expr`): borrow.  See [References and Borrowing].\n+* `&` (`&expr`, `&mut expr`): borrow.  See [References and Borrowing].\n * `&` (`&type`, `&mut type`, `&'a type`, `&'a mut type`): borrowed pointer type.  See [References and Borrowing].\n * `&=` (`var &= expr`): bitwise and & assignment. Overloadable (`BitAndAssign`).\n * `&&` (`expr && expr`): logical and."}]}