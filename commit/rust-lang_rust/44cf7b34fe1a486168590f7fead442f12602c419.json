{"sha": "44cf7b34fe1a486168590f7fead442f12602c419", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0Y2Y3YjM0ZmUxYTQ4NjE2ODU5MGY3ZmVhZDQ0MmYxMjYwMmM0MTk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-14T19:20:18Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-26T19:44:50Z"}, "message": "Fix never in if expressions", "tree": {"sha": "cc57761879baba138231882b4147bade8bc4bfbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc57761879baba138231882b4147bade8bc4bfbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44cf7b34fe1a486168590f7fead442f12602c419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44cf7b34fe1a486168590f7fead442f12602c419", "html_url": "https://github.com/rust-lang/rust/commit/44cf7b34fe1a486168590f7fead442f12602c419", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44cf7b34fe1a486168590f7fead442f12602c419/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1f47c37886b5cba116ba99fa37977d51871eba4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1f47c37886b5cba116ba99fa37977d51871eba4", "html_url": "https://github.com/rust-lang/rust/commit/c1f47c37886b5cba116ba99fa37977d51871eba4"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "1adf5cd5385d519e47a53501dc2e0e2d140d0c2b", "filename": "crates/ra_hir/src/marks.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44cf7b34fe1a486168590f7fead442f12602c419/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cf7b34fe1a486168590f7fead442f12602c419/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmarks.rs?ref=44cf7b34fe1a486168590f7fead442f12602c419", "patch": "@@ -16,4 +16,6 @@ test_utils::marks!(\n     match_second_arm_never\n     match_all_arms_never\n     match_no_never_arms\n+    if_never\n+    if_else_never\n );"}, {"sha": "d01063766e8cb4f4d4d9619fce9861a5589c9f3a", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/44cf7b34fe1a486168590f7fead442f12602c419/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cf7b34fe1a486168590f7fead442f12602c419/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=44cf7b34fe1a486168590f7fead442f12602c419", "patch": "@@ -987,14 +987,21 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 let then_ty = self.infer_expr(*then_branch, expected);\n                 match else_branch {\n                     Some(else_branch) => {\n-                        self.infer_expr(*else_branch, expected);\n+                        let else_ty = self.infer_expr(*else_branch, expected);\n+                        if Self::is_never(&then_ty) {\n+                            tested_by!(if_never);\n+                            else_ty\n+                        } else {\n+                            tested_by!(if_else_never);\n+                            then_ty\n+                        }\n                     }\n                     None => {\n                         // no else branch -> unit\n                         self.unify(&then_ty, &Ty::unit()); // actually coerce\n+                        then_ty\n                     }\n-                };\n-                then_ty\n+                }\n             }\n             Expr::Block { statements, tail } => self.infer_block(statements, *tail, expected),\n             Expr::TryBlock { body } => {"}, {"sha": "94b0fe3b3ae88c3308038a19c3cf514b0d6c1ab9", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/44cf7b34fe1a486168590f7fead442f12602c419/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cf7b34fe1a486168590f7fead442f12602c419/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=44cf7b34fe1a486168590f7fead442f12602c419", "patch": "@@ -3595,7 +3595,7 @@ fn no_such_field_diagnostics() {\n     );\n }\n \n-mod match_with_never_tests {\n+mod branching_with_never_tests {\n     use super::type_at;\n     use test_utils::covers;\n \n@@ -3644,6 +3644,46 @@ fn test(a: i32) {\n         assert_eq!(t, \"f64\");\n     }\n \n+    #[test]\n+    fn if_never() {\n+        covers!(if_never);\n+        let t = type_at(\n+            r#\"\n+//- /main.rs\n+fn test() {\n+    let i = if true {\n+        loop {}\n+    } else {\n+        3.0\n+    };\n+    i<|>\n+    ()\n+}\n+\"#,\n+        );\n+        assert_eq!(t, \"f64\");\n+    }\n+\n+    #[test]\n+    fn if_else_never() {\n+        covers!(if_else_never);\n+        let t = type_at(\n+            r#\"\n+//- /main.rs\n+fn test(input: bool) {\n+    let i = if input {\n+        2.0\n+    } else {\n+        return\n+    };\n+    i<|>\n+    ()\n+}\n+\"#,\n+        );\n+        assert_eq!(t, \"f64\");\n+    }\n+\n     #[test]\n     fn match_second_arm_never() {\n         covers!(match_second_arm_never);"}]}