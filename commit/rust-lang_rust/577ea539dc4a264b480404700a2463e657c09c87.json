{"sha": "577ea539dc4a264b480404700a2463e657c09c87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3N2VhNTM5ZGM0YTI2NGI0ODA0MDQ3MDBhMjQ2M2U2NTdjMDljODc=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-05-27T13:09:26Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-05-27T14:40:00Z"}, "message": "Only build clang_rt when RUSTBUILD_FORCE_CLANG_BASED_TESTS is set.", "tree": {"sha": "d0b31b0b265430534d177c8a9ef99d14a3f0110b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0b31b0b265430534d177c8a9ef99d14a3f0110b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/577ea539dc4a264b480404700a2463e657c09c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/577ea539dc4a264b480404700a2463e657c09c87", "html_url": "https://github.com/rust-lang/rust/commit/577ea539dc4a264b480404700a2463e657c09c87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/577ea539dc4a264b480404700a2463e657c09c87/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48b9896eebff639f794f2a67532c741eb1e3b79f", "url": "https://api.github.com/repos/rust-lang/rust/commits/48b9896eebff639f794f2a67532c741eb1e3b79f", "html_url": "https://github.com/rust-lang/rust/commit/48b9896eebff639f794f2a67532c741eb1e3b79f"}], "stats": {"total": 53, "additions": 34, "deletions": 19}, "files": [{"sha": "bf3601cb312fdf0519f0c1f06b7604db92afce1b", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/577ea539dc4a264b480404700a2463e657c09c87/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/577ea539dc4a264b480404700a2463e657c09c87/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=577ea539dc4a264b480404700a2463e657c09c87", "patch": "@@ -203,8 +203,16 @@ impl Step for Llvm {\n             cfg.define(\"LLVM_BUILD_32_BITS\", \"ON\");\n         }\n \n+        let mut enabled_llvm_projects = Vec::new();\n+\n+        if util::forcing_clang_based_tests() {\n+            enabled_llvm_projects.push(\"clang\");\n+            enabled_llvm_projects.push(\"compiler-rt\");\n+        }\n+\n         if want_lldb {\n-            cfg.define(\"LLVM_ENABLE_PROJECTS\", \"clang;lldb;compiler-rt\");\n+            enabled_llvm_projects.push(\"clang\");\n+            enabled_llvm_projects.push(\"lldb\");\n             // For the time being, disable code signing.\n             cfg.define(\"LLDB_CODESIGN_IDENTITY\", \"\");\n             cfg.define(\"LLDB_NO_DEBUGSERVER\", \"ON\");\n@@ -214,6 +222,12 @@ impl Step for Llvm {\n             cfg.define(\"LLVM_ENABLE_LIBXML2\", \"OFF\");\n         }\n \n+        if enabled_llvm_projects.len() > 0 {\n+            enabled_llvm_projects.sort();\n+            enabled_llvm_projects.dedup();\n+            cfg.define(\"LLVM_ENABLE_PROJECTS\", enabled_llvm_projects.join(\";\"));\n+        }\n+\n         if let Some(num_linkers) = builder.config.llvm_link_jobs {\n             if num_linkers > 0 {\n                 cfg.define(\"LLVM_PARALLEL_LINK_JOBS\", num_linkers.to_string());"}, {"sha": "9d0aa09f15cfb01f674bda17b39421769c4ccad6", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/577ea539dc4a264b480404700a2463e657c09c87/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/577ea539dc4a264b480404700a2463e657c09c87/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=577ea539dc4a264b480404700a2463e657c09c87", "patch": "@@ -1143,24 +1143,9 @@ impl Step for Compiletest {\n             }\n         }\n \n-        if let Some(var) = env::var_os(\"RUSTBUILD_FORCE_CLANG_BASED_TESTS\") {\n-            match &var.to_string_lossy().to_lowercase()[..] {\n-                \"1\" | \"yes\" | \"on\" => {\n-                    assert!(builder.config.lldb_enabled,\n-                        \"RUSTBUILD_FORCE_CLANG_BASED_TESTS needs Clang/LLDB to \\\n-                         be built.\");\n-                    let clang_exe = builder.llvm_out(target).join(\"bin\").join(\"clang\");\n-                    cmd.arg(\"--run-clang-based-tests-with\").arg(clang_exe);\n-                }\n-                \"0\" | \"no\" | \"off\" => {\n-                    // Nothing to do.\n-                }\n-                other => {\n-                    // Let's make sure typos don't get unnoticed\n-                    panic!(\"Unrecognized option '{}' set in \\\n-                            RUSTBUILD_FORCE_CLANG_BASED_TESTS\", other);\n-                }\n-            }\n+        if util::forcing_clang_based_tests() {\n+            let clang_exe = builder.llvm_out(target).join(\"bin\").join(\"clang\");\n+            cmd.arg(\"--run-clang-based-tests-with\").arg(clang_exe);\n         }\n \n         // Get paths from cmd args"}, {"sha": "9f684678bb060be35fbfde61d36a04adafec9374", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/577ea539dc4a264b480404700a2463e657c09c87/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/577ea539dc4a264b480404700a2463e657c09c87/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=577ea539dc4a264b480404700a2463e657c09c87", "patch": "@@ -356,3 +356,19 @@ impl CiEnv {\n         }\n     }\n }\n+\n+pub fn forcing_clang_based_tests() -> bool {\n+    if let Some(var) = env::var_os(\"RUSTBUILD_FORCE_CLANG_BASED_TESTS\") {\n+        match &var.to_string_lossy().to_lowercase()[..] {\n+            \"1\" | \"yes\" | \"on\" => true,\n+            \"0\" | \"no\" | \"off\" => false,\n+            other => {\n+                // Let's make sure typos don't go unnoticed\n+                panic!(\"Unrecognized option '{}' set in \\\n+                        RUSTBUILD_FORCE_CLANG_BASED_TESTS\", other)\n+            }\n+        }\n+    } else {\n+        false\n+    }\n+}"}]}