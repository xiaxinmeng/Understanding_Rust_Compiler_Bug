{"sha": "d9e6377b910261f65b83a6353935459acb73462e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZTYzNzdiOTEwMjYxZjY1YjgzYTYzNTM5MzU0NTlhY2I3MzQ2MmU=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-06-14T12:36:56Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-08-04T14:49:19Z"}, "message": "adjust `hir_def::TypeBound::as_path`", "tree": {"sha": "56e50990c7621586310304ab9508dee3a0ff48e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56e50990c7621586310304ab9508dee3a0ff48e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9e6377b910261f65b83a6353935459acb73462e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e6377b910261f65b83a6353935459acb73462e", "html_url": "https://github.com/rust-lang/rust/commit/d9e6377b910261f65b83a6353935459acb73462e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9e6377b910261f65b83a6353935459acb73462e/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b217e9cc50a5fb3a85f4db162b3217e4e7f007c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b217e9cc50a5fb3a85f4db162b3217e4e7f007c5", "html_url": "https://github.com/rust-lang/rust/commit/b217e9cc50a5fb3a85f4db162b3217e4e7f007c5"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "a153e17b17a83952d5fb22e11e451bcaa34aad6e", "filename": "crates/hir_def/src/item_tree/tests.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d9e6377b910261f65b83a6353935459acb73462e/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e6377b910261f65b83a6353935459acb73462e/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=d9e6377b910261f65b83a6353935459acb73462e", "patch": "@@ -304,7 +304,7 @@ struct S<'a, 'b: 'a, T: Copy + 'a + 'b, const K: u8 = 0> {\n     field: &'a &'b T,\n }\n \n-struct Tuple<T: Copy>(T);\n+struct Tuple<T: Copy, U: ?Sized>(T, U);\n \n impl<'a, 'b: 'a, T: Copy + 'a + 'b, const K: u8 = 0> S<'a, 'b, T, K> {\n     fn f<G: 'a>(arg: impl Copy) -> impl Copy {}\n@@ -325,11 +325,13 @@ trait Tr<'a, T: 'a>: Super where Self: for<'a> Tr<'a, T> {}\n                 pub(self) field: &'a &'b T,\n             }\n \n-            pub(self) struct Tuple<T>(\n+            pub(self) struct Tuple<T, U>(\n                 pub(self) 0: T,\n+                pub(self) 1: U,\n             )\n             where\n-                T: Copy;\n+                T: Copy,\n+                U: ?Sized;\n \n             impl<'a, 'b, T, const K: u8> S<'a, 'b, T, K>\n             where"}, {"sha": "0abd14eebfb16ad1c7949e107cfcb4a1327d36bd", "filename": "crates/hir_def/src/type_ref.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d9e6377b910261f65b83a6353935459acb73462e/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e6377b910261f65b83a6353935459acb73462e/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs?ref=d9e6377b910261f65b83a6353935459acb73462e", "patch": "@@ -332,9 +332,10 @@ impl TypeBound {\n         }\n     }\n \n-    pub fn as_path(&self) -> Option<&Path> {\n+    pub fn as_path(&self) -> Option<(&Path, &TraitBoundModifier)> {\n         match self {\n-            TypeBound::Path(p, _) | TypeBound::ForLifetime(_, p) => Some(p),\n+            TypeBound::Path(p, m) => Some((p, m)),\n+            TypeBound::ForLifetime(_, p) => Some((p, &TraitBoundModifier::None)),\n             TypeBound::Lifetime(_) | TypeBound::Error => None,\n         }\n     }"}, {"sha": "14b8a726a8faa25ac502f6727bcd441784d92aa8", "filename": "crates/hir_ty/src/utils.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d9e6377b910261f65b83a6353935459acb73462e/crates%2Fhir_ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e6377b910261f65b83a6353935459acb73462e/crates%2Fhir_ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Futils.rs?ref=d9e6377b910261f65b83a6353935459acb73462e", "patch": "@@ -13,7 +13,7 @@ use hir_def::{\n     intern::Interned,\n     path::Path,\n     resolver::{HasResolver, TypeNs},\n-    type_ref::TypeRef,\n+    type_ref::{TraitBoundModifier, TypeRef},\n     AssocContainerId, GenericDefId, Lookup, TraitId, TypeAliasId, TypeParamId,\n };\n use hir_expand::name::{name, Name};\n@@ -58,6 +58,10 @@ fn direct_super_traits(db: &dyn DefDatabase, trait_: TraitId) -> Vec<TraitId> {\n             },\n             WherePredicate::Lifetime { .. } => None,\n         })\n+        .filter_map(|(path, bound_modifier)| match bound_modifier {\n+            TraitBoundModifier::None => Some(path),\n+            TraitBoundModifier::Maybe => None,\n+        })\n         .filter_map(|path| match resolver.resolve_path_in_type_ns_fully(db, path.mod_path()) {\n             Some(TypeNs::TraitId(t)) => Some(t),\n             _ => None,"}]}