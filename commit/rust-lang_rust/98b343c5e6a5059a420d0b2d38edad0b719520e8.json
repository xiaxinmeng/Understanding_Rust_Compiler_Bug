{"sha": "98b343c5e6a5059a420d0b2d38edad0b719520e8", "node_id": "C_kwDOAAsO6NoAKDk4YjM0M2M1ZTZhNTA1OWE0MjBkMGIyZDM4ZWRhZDBiNzE5NTIwZTg", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-11-19T11:22:27Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-11-19T11:22:27Z"}, "message": "[arithmetic-side-effects] Detect overflowing associated constants of integers", "tree": {"sha": "bdaadca223b692636b70c40b3d725e9568a5d987", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdaadca223b692636b70c40b3d725e9568a5d987"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98b343c5e6a5059a420d0b2d38edad0b719520e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98b343c5e6a5059a420d0b2d38edad0b719520e8", "html_url": "https://github.com/rust-lang/rust/commit/98b343c5e6a5059a420d0b2d38edad0b719520e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98b343c5e6a5059a420d0b2d38edad0b719520e8/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d15e5e6ad620f56113478f1500438039e6c2a8ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d15e5e6ad620f56113478f1500438039e6c2a8ec", "html_url": "https://github.com/rust-lang/rust/commit/d15e5e6ad620f56113478f1500438039e6c2a8ec"}], "stats": {"total": 244, "additions": 130, "deletions": 114}, "files": [{"sha": "eda65e3015357fcb1154af35e42b3ca3d40ca7c4", "filename": "clippy_lints/src/operators/arithmetic_side_effects.rs", "status": "modified", "additions": 59, "deletions": 56, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/98b343c5e6a5059a420d0b2d38edad0b719520e8/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b343c5e6a5059a420d0b2d38edad0b719520e8/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs?ref=98b343c5e6a5059a420d0b2d38edad0b719520e8", "patch": "@@ -1,12 +1,19 @@\n use super::ARITHMETIC_SIDE_EFFECTS;\n-use clippy_utils::{consts::constant_simple, diagnostics::span_lint};\n+use clippy_utils::{\n+    consts::{constant, constant_simple},\n+    diagnostics::span_lint,\n+    peel_hir_expr_refs,\n+};\n use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::Ty;\n use rustc_session::impl_lint_pass;\n-use rustc_span::source_map::{Span, Spanned};\n+use rustc_span::{\n+    source_map::{Span, Spanned},\n+    sym,\n+};\n \n const HARD_CODED_ALLOWED: &[&str] = &[\n     \"&str\",\n@@ -38,24 +45,6 @@ impl ArithmeticSideEffects {\n         }\n     }\n \n-    /// Assuming that `expr` is a literal integer, checks operators (+=, -=, *, /) in a\n-    /// non-constant environment that won't overflow.\n-    fn has_valid_op(op: &Spanned<hir::BinOpKind>, expr: &hir::Expr<'_>) -> bool {\n-        if let hir::ExprKind::Lit(ref lit) = expr.kind &&\n-            let ast::LitKind::Int(value, _) = lit.node\n-        {\n-            match (&op.node, value) {\n-                (hir::BinOpKind::Div | hir::BinOpKind::Rem, 0) => false,\n-                (hir::BinOpKind::Add | hir::BinOpKind::Sub, 0)\n-                    | (hir::BinOpKind::Div | hir::BinOpKind::Rem, _)\n-                    | (hir::BinOpKind::Mul, 0 | 1) => true,\n-                _ => false,\n-            }\n-        } else {\n-            false\n-        }\n-    }\n-\n     /// Checks if the given `expr` has any of the inner `allowed` elements.\n     fn is_allowed_ty(&self, ty: Ty<'_>) -> bool {\n         self.allowed\n@@ -74,15 +63,14 @@ impl ArithmeticSideEffects {\n         self.expr_span = Some(expr.span);\n     }\n \n-    /// If `expr` does not match any variant of `LiteralIntegerTy`, returns `None`.\n-    fn literal_integer<'expr, 'tcx>(expr: &'expr hir::Expr<'tcx>) -> Option<LiteralIntegerTy<'expr, 'tcx>> {\n-        if matches!(expr.kind, hir::ExprKind::Lit(_)) {\n-            return Some(LiteralIntegerTy::Value(expr));\n+    /// If `expr` is not a literal integer like `1`, returns `None`.\n+    fn literal_integer(expr: &hir::Expr<'_>) -> Option<u128> {\n+        if let hir::ExprKind::Lit(ref lit) = expr.kind && let ast::LitKind::Int(n, _) = lit.node {\n+            Some(n)\n         }\n-        if let hir::ExprKind::AddrOf(.., inn) = expr.kind && let hir::ExprKind::Lit(_) = inn.kind {\n-            return Some(LiteralIntegerTy::Ref(inn));\n+        else {\n+            None\n         }\n-        None\n     }\n \n     /// Manages when the lint should be triggered. Operations in constant environments, hard coded\n@@ -117,10 +105,20 @@ impl ArithmeticSideEffects {\n             return;\n         }\n         let has_valid_op = if Self::is_integral(lhs_ty) && Self::is_integral(rhs_ty) {\n-            match (Self::literal_integer(lhs), Self::literal_integer(rhs)) {\n-                (None, Some(lit_int_ty)) | (Some(lit_int_ty), None) => Self::has_valid_op(op, lit_int_ty.into()),\n-                (Some(LiteralIntegerTy::Value(_)), Some(LiteralIntegerTy::Value(_))) => true,\n-                (None, None) | (Some(_), Some(_)) => false,\n+            let (actual_lhs, lhs_ref_counter) = peel_hir_expr_refs(lhs);\n+            let (actual_rhs, rhs_ref_counter) = peel_hir_expr_refs(rhs);\n+            match (Self::literal_integer(actual_lhs), Self::literal_integer(actual_rhs)) {\n+                (None, None) => false,\n+                (None, Some(n)) | (Some(n), None) => match (&op.node, n) {\n+                    (hir::BinOpKind::Div | hir::BinOpKind::Rem, 0) => false,\n+                    (hir::BinOpKind::Add | hir::BinOpKind::Sub, 0)\n+                    | (hir::BinOpKind::Div | hir::BinOpKind::Rem, _)\n+                    | (hir::BinOpKind::Mul, 0 | 1) => true,\n+                    _ => false,\n+                },\n+                (Some(_), Some(_)) => {\n+                    matches!((lhs_ref_counter, rhs_ref_counter), (0, 0))\n+                },\n             }\n         } else {\n             false\n@@ -129,21 +127,45 @@ impl ArithmeticSideEffects {\n             self.issue_lint(cx, expr);\n         }\n     }\n+\n+    fn manage_unary_ops<'tcx>(\n+        &mut self,\n+        cx: &LateContext<'tcx>,\n+        expr: &hir::Expr<'tcx>,\n+        un_expr: &hir::Expr<'tcx>,\n+        un_op: hir::UnOp,\n+    ) {\n+        let hir::UnOp::Neg = un_op else { return; };\n+        if constant(cx, cx.typeck_results(), un_expr).is_some() {\n+            return;\n+        }\n+        let ty = cx.typeck_results().expr_ty(expr).peel_refs();\n+        if self.is_allowed_ty(ty) {\n+            return;\n+        }\n+        let actual_un_expr = peel_hir_expr_refs(un_expr).0;\n+        if Self::literal_integer(actual_un_expr).is_some() {\n+            return;\n+        }\n+        self.issue_lint(cx, expr);\n+    }\n+\n+    fn should_skip_expr(&mut self, expr: &hir::Expr<'_>) -> bool {\n+        self.expr_span.is_some() || self.const_span.map_or(false, |sp| sp.contains(expr.span))\n+    }\n }\n \n impl<'tcx> LateLintPass<'tcx> for ArithmeticSideEffects {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &hir::Expr<'tcx>) {\n-        if self.expr_span.is_some() || self.const_span.map_or(false, |sp| sp.contains(expr.span)) {\n+        if self.should_skip_expr(expr) {\n             return;\n         }\n         match &expr.kind {\n-            hir::ExprKind::Binary(op, lhs, rhs) | hir::ExprKind::AssignOp(op, lhs, rhs) => {\n+            hir::ExprKind::AssignOp(op, lhs, rhs) | hir::ExprKind::Binary(op, lhs, rhs) => {\n                 self.manage_bin_ops(cx, expr, op, lhs, rhs);\n             },\n-            hir::ExprKind::Unary(hir::UnOp::Neg, _) => {\n-                if constant_simple(cx, cx.typeck_results(), expr).is_none() {\n-                    self.issue_lint(cx, expr);\n-                }\n+            hir::ExprKind::Unary(un_op, un_expr) => {\n+                self.manage_unary_ops(cx, expr, un_expr, *un_op);\n             },\n             _ => {},\n         }\n@@ -177,22 +199,3 @@ impl<'tcx> LateLintPass<'tcx> for ArithmeticSideEffects {\n         }\n     }\n }\n-\n-/// Tells if an expression is a integer declared by value or by reference.\n-///\n-/// If `LiteralIntegerTy::Ref`, then the contained value will be `hir::ExprKind::Lit` rather\n-/// than `hirExprKind::Addr`.\n-enum LiteralIntegerTy<'expr, 'tcx> {\n-    /// For example, `&199`\n-    Ref(&'expr hir::Expr<'tcx>),\n-    /// For example, `1` or `i32::MAX`\n-    Value(&'expr hir::Expr<'tcx>),\n-}\n-\n-impl<'expr, 'tcx> From<LiteralIntegerTy<'expr, 'tcx>> for &'expr hir::Expr<'tcx> {\n-    fn from(from: LiteralIntegerTy<'expr, 'tcx>) -> Self {\n-        match from {\n-            LiteralIntegerTy::Ref(elem) | LiteralIntegerTy::Value(elem) => elem,\n-        }\n-    }\n-}"}, {"sha": "e8a023ab17643514d08d08c803d51beea762610f", "filename": "tests/ui-toml/arithmetic_side_effects_allowed/arithmetic_side_effects_allowed.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/98b343c5e6a5059a420d0b2d38edad0b719520e8/tests%2Fui-toml%2Farithmetic_side_effects_allowed%2Farithmetic_side_effects_allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b343c5e6a5059a420d0b2d38edad0b719520e8/tests%2Fui-toml%2Farithmetic_side_effects_allowed%2Farithmetic_side_effects_allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Farithmetic_side_effects_allowed%2Farithmetic_side_effects_allowed.rs?ref=98b343c5e6a5059a420d0b2d38edad0b719520e8", "patch": "@@ -1,6 +1,6 @@\n #![warn(clippy::arithmetic_side_effects)]\n \n-use core::ops::Add;\n+use core::ops::{Add, Neg};\n \n #[derive(Clone, Copy)]\n struct Point {\n@@ -16,9 +16,18 @@ impl Add for Point {\n     }\n }\n \n+impl Neg for Point {\n+    type Output = Self;\n+\n+    fn neg(self) -> Self::Output {\n+        todo!()\n+    }\n+}\n+\n fn main() {\n     let _ = Point { x: 1, y: 0 } + Point { x: 2, y: 3 };\n \n     let point: Point = Point { x: 1, y: 0 };\n     let _ = point + point;\n+    let _ = -point;\n }"}, {"sha": "b5ed8988a518ff9299bc679ce8a5c0d9efb4f104", "filename": "tests/ui/arithmetic_side_effects.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/98b343c5e6a5059a420d0b2d38edad0b719520e8/tests%2Fui%2Farithmetic_side_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b343c5e6a5059a420d0b2d38edad0b719520e8/tests%2Fui%2Farithmetic_side_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic_side_effects.rs?ref=98b343c5e6a5059a420d0b2d38edad0b719520e8", "patch": "@@ -150,8 +150,12 @@ pub fn non_overflowing_ops_or_ops_already_handled_by_the_compiler_should_not_tri\n     _n = 23 + 85;\n \n     // Unary\n-    _n = -1;\n-    _n = -(-1);\n+    _n = -2147483647;\n+    _n = -i32::MAX;\n+    _n = -i32::MIN;\n+    _n = -&2147483647;\n+    _n = -&i32::MAX;\n+    _n = -&i32::MIN;\n }\n \n pub fn runtime_ops() {"}, {"sha": "0259a0824e794cc7ba5a0f957f0130f6b3c49a0e", "filename": "tests/ui/arithmetic_side_effects.stderr", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/98b343c5e6a5059a420d0b2d38edad0b719520e8/tests%2Fui%2Farithmetic_side_effects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98b343c5e6a5059a420d0b2d38edad0b719520e8/tests%2Fui%2Farithmetic_side_effects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic_side_effects.stderr?ref=98b343c5e6a5059a420d0b2d38edad0b719520e8", "patch": "@@ -19,331 +19,331 @@ LL |     let _ = inferred_string + \"\";\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:161:5\n+  --> $DIR/arithmetic_side_effects.rs:165:5\n    |\n LL |     _n += 1;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:162:5\n+  --> $DIR/arithmetic_side_effects.rs:166:5\n    |\n LL |     _n += &1;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:163:5\n+  --> $DIR/arithmetic_side_effects.rs:167:5\n    |\n LL |     _n -= 1;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:164:5\n+  --> $DIR/arithmetic_side_effects.rs:168:5\n    |\n LL |     _n -= &1;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:165:5\n+  --> $DIR/arithmetic_side_effects.rs:169:5\n    |\n LL |     _n /= 0;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:166:5\n+  --> $DIR/arithmetic_side_effects.rs:170:5\n    |\n LL |     _n /= &0;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:167:5\n+  --> $DIR/arithmetic_side_effects.rs:171:5\n    |\n LL |     _n %= 0;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:168:5\n+  --> $DIR/arithmetic_side_effects.rs:172:5\n    |\n LL |     _n %= &0;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:169:5\n+  --> $DIR/arithmetic_side_effects.rs:173:5\n    |\n LL |     _n *= 2;\n    |     ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:170:5\n+  --> $DIR/arithmetic_side_effects.rs:174:5\n    |\n LL |     _n *= &2;\n    |     ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:173:10\n+  --> $DIR/arithmetic_side_effects.rs:177:10\n    |\n LL |     _n = _n + 1;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:174:10\n+  --> $DIR/arithmetic_side_effects.rs:178:10\n    |\n LL |     _n = _n + &1;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:175:10\n+  --> $DIR/arithmetic_side_effects.rs:179:10\n    |\n LL |     _n = 1 + _n;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:176:10\n+  --> $DIR/arithmetic_side_effects.rs:180:10\n    |\n LL |     _n = &1 + _n;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:177:10\n+  --> $DIR/arithmetic_side_effects.rs:181:10\n    |\n LL |     _n = _n - 1;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:178:10\n+  --> $DIR/arithmetic_side_effects.rs:182:10\n    |\n LL |     _n = _n - &1;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:179:10\n+  --> $DIR/arithmetic_side_effects.rs:183:10\n    |\n LL |     _n = 1 - _n;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:180:10\n+  --> $DIR/arithmetic_side_effects.rs:184:10\n    |\n LL |     _n = &1 - _n;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:181:10\n+  --> $DIR/arithmetic_side_effects.rs:185:10\n    |\n LL |     _n = _n / 0;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:182:10\n+  --> $DIR/arithmetic_side_effects.rs:186:10\n    |\n LL |     _n = _n / &0;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:183:10\n+  --> $DIR/arithmetic_side_effects.rs:187:10\n    |\n LL |     _n = _n % 0;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:184:10\n+  --> $DIR/arithmetic_side_effects.rs:188:10\n    |\n LL |     _n = _n % &0;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:185:10\n+  --> $DIR/arithmetic_side_effects.rs:189:10\n    |\n LL |     _n = _n * 2;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:186:10\n+  --> $DIR/arithmetic_side_effects.rs:190:10\n    |\n LL |     _n = _n * &2;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:187:10\n+  --> $DIR/arithmetic_side_effects.rs:191:10\n    |\n LL |     _n = 2 * _n;\n    |          ^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:188:10\n+  --> $DIR/arithmetic_side_effects.rs:192:10\n    |\n LL |     _n = &2 * _n;\n    |          ^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:189:10\n+  --> $DIR/arithmetic_side_effects.rs:193:10\n    |\n LL |     _n = 23 + &85;\n    |          ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:190:10\n+  --> $DIR/arithmetic_side_effects.rs:194:10\n    |\n LL |     _n = &23 + 85;\n    |          ^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:191:10\n+  --> $DIR/arithmetic_side_effects.rs:195:10\n    |\n LL |     _n = &23 + &85;\n    |          ^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:194:13\n+  --> $DIR/arithmetic_side_effects.rs:198:13\n    |\n LL |     let _ = Custom + 0;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:195:13\n+  --> $DIR/arithmetic_side_effects.rs:199:13\n    |\n LL |     let _ = Custom + 1;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:196:13\n+  --> $DIR/arithmetic_side_effects.rs:200:13\n    |\n LL |     let _ = Custom + 2;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:197:13\n+  --> $DIR/arithmetic_side_effects.rs:201:13\n    |\n LL |     let _ = Custom + 0.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:198:13\n+  --> $DIR/arithmetic_side_effects.rs:202:13\n    |\n LL |     let _ = Custom + 1.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:199:13\n+  --> $DIR/arithmetic_side_effects.rs:203:13\n    |\n LL |     let _ = Custom + 2.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:200:13\n+  --> $DIR/arithmetic_side_effects.rs:204:13\n    |\n LL |     let _ = Custom - 0;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:201:13\n+  --> $DIR/arithmetic_side_effects.rs:205:13\n    |\n LL |     let _ = Custom - 1;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:202:13\n+  --> $DIR/arithmetic_side_effects.rs:206:13\n    |\n LL |     let _ = Custom - 2;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:203:13\n+  --> $DIR/arithmetic_side_effects.rs:207:13\n    |\n LL |     let _ = Custom - 0.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:204:13\n+  --> $DIR/arithmetic_side_effects.rs:208:13\n    |\n LL |     let _ = Custom - 1.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:205:13\n+  --> $DIR/arithmetic_side_effects.rs:209:13\n    |\n LL |     let _ = Custom - 2.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:206:13\n+  --> $DIR/arithmetic_side_effects.rs:210:13\n    |\n LL |     let _ = Custom / 0;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:207:13\n+  --> $DIR/arithmetic_side_effects.rs:211:13\n    |\n LL |     let _ = Custom / 1;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:208:13\n+  --> $DIR/arithmetic_side_effects.rs:212:13\n    |\n LL |     let _ = Custom / 2;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:209:13\n+  --> $DIR/arithmetic_side_effects.rs:213:13\n    |\n LL |     let _ = Custom / 0.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:210:13\n+  --> $DIR/arithmetic_side_effects.rs:214:13\n    |\n LL |     let _ = Custom / 1.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:211:13\n+  --> $DIR/arithmetic_side_effects.rs:215:13\n    |\n LL |     let _ = Custom / 2.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:212:13\n+  --> $DIR/arithmetic_side_effects.rs:216:13\n    |\n LL |     let _ = Custom * 0;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:213:13\n+  --> $DIR/arithmetic_side_effects.rs:217:13\n    |\n LL |     let _ = Custom * 1;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:214:13\n+  --> $DIR/arithmetic_side_effects.rs:218:13\n    |\n LL |     let _ = Custom * 2;\n    |             ^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:215:13\n+  --> $DIR/arithmetic_side_effects.rs:219:13\n    |\n LL |     let _ = Custom * 0.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:216:13\n+  --> $DIR/arithmetic_side_effects.rs:220:13\n    |\n LL |     let _ = Custom * 1.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:217:13\n+  --> $DIR/arithmetic_side_effects.rs:221:13\n    |\n LL |     let _ = Custom * 2.0;\n    |             ^^^^^^^^^^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:220:10\n+  --> $DIR/arithmetic_side_effects.rs:224:10\n    |\n LL |     _n = -_n;\n    |          ^^^\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n-  --> $DIR/arithmetic_side_effects.rs:221:10\n+  --> $DIR/arithmetic_side_effects.rs:225:10\n    |\n LL |     _n = -&_n;\n    |          ^^^^"}]}