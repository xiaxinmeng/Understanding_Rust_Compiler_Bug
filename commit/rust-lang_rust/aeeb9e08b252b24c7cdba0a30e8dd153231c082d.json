{"sha": "aeeb9e08b252b24c7cdba0a30e8dd153231c082d", "node_id": "C_kwDOAAsO6NoAKGFlZWI5ZTA4YjI1MmIyNGM3Y2RiYTBhMzBlOGRkMTUzMjMxYzA4MmQ", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-09-09T06:20:18Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-09-09T07:49:09Z"}, "message": "Add `TyBuilder` method to build `Substitution` for generator", "tree": {"sha": "17e8091d8a1c8f69f7abe6f73c9e8a97d06df5d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17e8091d8a1c8f69f7abe6f73c9e8a97d06df5d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeeb9e08b252b24c7cdba0a30e8dd153231c082d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmMa8CwACgkQ4laYqTBY\nYXG0jA/9Gh37Za65KofrrXHEFxoKa5rLhGCJKGJzya2UBWBiJ0Vn9gsTEJXnAYw1\nTGlu9hhRj2i8b+cq+whPvYh4aaj5gOY+50tTHVBk3g8sCha1VJbBQM7nwm97zCMY\nmuX2GvKgZA2SZfZW/WuMB5XUfNb9iy1Kph3xLhhLJNGJBL2YTpNC3exohd/pKeZz\nS/wpT4xfjwPZSa46jocbDSRV+zwXlywANV6a8uOSNqgk12uRFU5tshGsyf+lV1LI\nvmbexPUiYMp0l3q2vi+KZXz1mSeGUugxf+M3QDN/RzfeciPnJ7QNqM2hhz+TfuoV\nXVLqiOL8k21h3UchqNOfd35Sg4t4qnsciEAC5DhiPtQR/ljlYQxjt2nLu1XcOu0e\nxoRt/XFZp9nvRAuHZ9tHjGDUBxxBetlcYn37SOAZMiIxOtDfo31Py7P5V5wB83ku\nfZFeKSzvW3TXc9IkzIkEuwsbacN80ztL/5dc7qPReNqU3fGQB94eCoHKU3vuYrw8\n7IM5W2gVmc1VQt+r9M2Vp8mXcslziZz0WeNPl+CAXpwpDasgFrm57HgVXmuuJ9wA\nQiSI7477298gHjcAzcj1ABy1yjNhqw4+NWAHO3fmZBPrvEAp7fbgGIFxK9lYbzDl\nPDz+pIHa9ezR6MsJbbHCV5HpR5B8cq1aglfxEID+btrqQu0k0eo=\n=+Cai\n-----END PGP SIGNATURE-----", "payload": "tree 17e8091d8a1c8f69f7abe6f73c9e8a97d06df5d1\nparent ba64c93a44c5bdd78b01ef868435dc427f0cf4d4\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1662704418 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1662709749 +0900\n\nAdd `TyBuilder` method to build `Substitution` for generator\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeeb9e08b252b24c7cdba0a30e8dd153231c082d", "html_url": "https://github.com/rust-lang/rust/commit/aeeb9e08b252b24c7cdba0a30e8dd153231c082d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeeb9e08b252b24c7cdba0a30e8dd153231c082d/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "html_url": "https://github.com/rust-lang/rust/commit/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "3ae7fb2a617cf92fdf446923fdd9d47947989347", "filename": "crates/hir-ty/src/builder.rs", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/aeeb9e08b252b24c7cdba0a30e8dd153231c082d/crates%2Fhir-ty%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeeb9e08b252b24c7cdba0a30e8dd153231c082d/crates%2Fhir-ty%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fbuilder.rs?ref=aeeb9e08b252b24c7cdba0a30e8dd153231c082d", "patch": "@@ -9,8 +9,8 @@ use chalk_ir::{\n     AdtId, BoundVar, DebruijnIndex, Scalar,\n };\n use hir_def::{\n-    builtin_type::BuiltinType, generics::TypeOrConstParamData, ConstParamId, GenericDefId, TraitId,\n-    TypeAliasId,\n+    builtin_type::BuiltinType, generics::TypeOrConstParamData, ConstParamId, DefWithBodyId,\n+    GenericDefId, TraitId, TypeAliasId,\n };\n use smallvec::SmallVec;\n \n@@ -205,6 +205,38 @@ impl TyBuilder<()> {\n         )\n     }\n \n+    /// Creates a `TyBuilder` to build `Substitution` for a generator defined in `parent`.\n+    ///\n+    /// A generator's substitution consists of:\n+    /// - generic parameters in scope on `parent`\n+    /// - resume type of generator\n+    /// - yield type of generator ([`Generator::Yield`](std::ops::Generator::Yield))\n+    /// - return type of generator ([`Generator::Return`](std::ops::Generator::Return))\n+    /// in this order.\n+    ///\n+    /// This method prepopulates the builder with placeholder substitution of `parent`, so you\n+    /// should only push exactly 3 `GenericArg`s before building.\n+    pub fn subst_for_generator(db: &dyn HirDatabase, parent: DefWithBodyId) -> TyBuilder<()> {\n+        let parent_subst = match parent.as_generic_def_id() {\n+            Some(parent) => generics(db.upcast(), parent).placeholder_subst(db),\n+            // Static initializers *may* contain generators.\n+            None => Substitution::empty(Interner),\n+        };\n+        let builder = TyBuilder::new(\n+            (),\n+            parent_subst\n+                .iter(Interner)\n+                .map(|arg| match arg.constant(Interner) {\n+                    Some(c) => ParamKind::Const(c.data(Interner).ty.clone()),\n+                    None => ParamKind::Type,\n+                })\n+                // These represent resume type, yield type, and return type of generator.\n+                .chain(std::iter::repeat(ParamKind::Type).take(3))\n+                .collect(),\n+        );\n+        builder.use_parent_substs(&parent_subst)\n+    }\n+\n     pub fn build(self) -> Substitution {\n         let ((), subst) = self.build_internal();\n         subst"}]}