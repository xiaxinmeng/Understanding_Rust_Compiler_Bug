{"sha": "9d12b04c32ecde905253479dd43408a82734fe8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMTJiMDRjMzJlY2RlOTA1MjUzNDc5ZGQ0MzQwOGE4MjczNGZlOGE=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-05-28T10:55:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-28T10:55:44Z"}, "message": "Merge pull request #2806 from mockersf/loop-mut-cond\n\nbetter parsing of condition in while loop for mutability", "tree": {"sha": "36f78536e018726fcfc27d580f848a0e6fb32ca3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36f78536e018726fcfc27d580f848a0e6fb32ca3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d12b04c32ecde905253479dd43408a82734fe8a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbC+AwCRBK7hj4Ov3rIwAAdHIIAG7pQITmrqIS0O9KiZMcO+M3\nYX5nq0WNNEh4y+UGa3KHC3HaGI7LsOSB0um7QNo/ZjHj26NONuN7GVKef2i9z2Zt\n68rQB7+NpsVqytTvQz+cD5SoiZ6YlyiFJUKTchbSI0aIlSYQxLwWdDzUUOxrPZhp\nUCuW4RWh6GAnV25+MRCWPO6CQTzdmDpuVsIwE1eUJrKjrICRuSM4gHkT+YuUs/Dh\n0WlbByQVwFzUeahxjKI8Hs1+J1O5Rf7ulqN5wLAe2y9ZKqiY0BN8JzOYV56Jaaaj\nzCPAI2v9L9mLQGE/fynBNbPlYwn08B/Stwrh12tZlUYqlw/Ihkk0h5zHWulySV4=\n=pufh\n-----END PGP SIGNATURE-----\n", "payload": "tree 36f78536e018726fcfc27d580f848a0e6fb32ca3\nparent f30db144dce90fb7d56d9ac660f1f85717985bd9\nparent 5379fc1b2804b647946b4a5d485db6c9579e4f55\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1527504944 +0200\ncommitter GitHub <noreply@github.com> 1527504944 +0200\n\nMerge pull request #2806 from mockersf/loop-mut-cond\n\nbetter parsing of condition in while loop for mutability"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d12b04c32ecde905253479dd43408a82734fe8a", "html_url": "https://github.com/rust-lang/rust/commit/9d12b04c32ecde905253479dd43408a82734fe8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d12b04c32ecde905253479dd43408a82734fe8a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30db144dce90fb7d56d9ac660f1f85717985bd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f30db144dce90fb7d56d9ac660f1f85717985bd9", "html_url": "https://github.com/rust-lang/rust/commit/f30db144dce90fb7d56d9ac660f1f85717985bd9"}, {"sha": "5379fc1b2804b647946b4a5d485db6c9579e4f55", "url": "https://api.github.com/repos/rust-lang/rust/commits/5379fc1b2804b647946b4a5d485db6c9579e4f55", "html_url": "https://github.com/rust-lang/rust/commit/5379fc1b2804b647946b4a5d485db6c9579e4f55"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "c8f1d3edaeb37294cca75ed41082d8cfa384e52a", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9d12b04c32ecde905253479dd43408a82734fe8a/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d12b04c32ecde905253479dd43408a82734fe8a/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=9d12b04c32ecde905253479dd43408a82734fe8a", "patch": "@@ -2154,9 +2154,10 @@ fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, b\n     let mut mut_var_visitor = VarCollectorVisitor {\n         cx,\n         ids: HashMap::new(),\n+        def_ids: HashMap::new(),\n         skip: false,\n     };\n-    walk_expr(&mut mut_var_visitor, expr);\n+    mut_var_visitor.visit_expr(cond);\n     if mut_var_visitor.skip {\n         return;\n     }\n@@ -2172,7 +2173,7 @@ fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, b\n     if delegate.skip {\n         return;\n     }\n-    if !delegate.used_mutably.iter().any(|(_, v)| *v) {\n+    if !(delegate.used_mutably.iter().any(|(_, v)| *v) || mut_var_visitor.def_ids.iter().any(|(_, v)| *v)) {\n         span_lint(\n             cx,\n             WHILE_IMMUTABLE_CONDITION,\n@@ -2189,6 +2190,7 @@ fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, b\n struct VarCollectorVisitor<'a, 'tcx: 'a> {\n     cx: &'a LateContext<'a, 'tcx>,\n     ids: HashMap<NodeId, bool>,\n+    def_ids: HashMap<def_id::DefId, bool>,\n     skip: bool,\n }\n \n@@ -2203,6 +2205,9 @@ impl<'a, 'tcx> VarCollectorVisitor<'a, 'tcx> {\n                     Def::Local(node_id) | Def::Upvar(node_id, ..) => {\n                         self.ids.insert(node_id, false);\n                     },\n+                    Def::Static(def_id, mutable) => {\n+                        self.def_ids.insert(def_id, mutable);\n+                    },\n                     _ => {},\n                 }\n             }\n@@ -2221,8 +2226,6 @@ impl<'a, 'tcx> Visitor<'tcx> for VarCollectorVisitor<'a, 'tcx> {\n         }\n     }\n \n-    fn visit_block(&mut self, _b: &'tcx Block) {}\n-\n     fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n         NestedVisitorMap::None\n     }"}, {"sha": "6ecd40b99b1c130a210cee35af153cf34ee9fe7a", "filename": "tests/run-pass/issues_loop_mut_cond.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9d12b04c32ecde905253479dd43408a82734fe8a/tests%2Frun-pass%2Fissues_loop_mut_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d12b04c32ecde905253479dd43408a82734fe8a/tests%2Frun-pass%2Fissues_loop_mut_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissues_loop_mut_cond.rs?ref=9d12b04c32ecde905253479dd43408a82734fe8a", "patch": "@@ -0,0 +1,28 @@\n+#![allow(dead_code)]\n+\n+/// Issue: https://github.com/rust-lang-nursery/rust-clippy/issues/2596\n+pub fn loop_on_block_condition(u: &mut isize) {\n+    while { *u < 0 } {\n+        *u += 1;\n+    }\n+}\n+\n+/// https://github.com/rust-lang-nursery/rust-clippy/issues/2584\n+fn loop_with_unsafe_condition(ptr: *const u8) {\n+    let mut len = 0;\n+    while unsafe { *ptr.offset(len) } != 0 {\n+        len += 1;\n+    }\n+}\n+\n+/// https://github.com/rust-lang-nursery/rust-clippy/issues/2710\n+static mut RUNNING: bool = true;\n+fn loop_on_static_condition() {\n+    unsafe {\n+        while RUNNING {\n+            RUNNING = false;\n+        }\n+    }\n+}\n+\n+fn main() {}"}]}