{"sha": "33dceaa24409951dfe7607c580de6fd504932c90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZGNlYWEyNDQwOTk1MWRmZTc2MDdjNTgwZGU2ZmQ1MDQ5MzJjOTA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-27T19:37:27Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-27T21:57:03Z"}, "message": "rustdoc: Add test for foreign impl trait with bounds", "tree": {"sha": "746b8eb12d97ec460ae7a114b78fe1021082782a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/746b8eb12d97ec460ae7a114b78fe1021082782a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33dceaa24409951dfe7607c580de6fd504932c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33dceaa24409951dfe7607c580de6fd504932c90", "html_url": "https://github.com/rust-lang/rust/commit/33dceaa24409951dfe7607c580de6fd504932c90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33dceaa24409951dfe7607c580de6fd504932c90/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a547b4f61f7acec8bf526e93cc244a82cb8925e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a547b4f61f7acec8bf526e93cc244a82cb8925e", "html_url": "https://github.com/rust-lang/rust/commit/6a547b4f61f7acec8bf526e93cc244a82cb8925e"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "ba6c3e956953be16dacb3b317f33dd92b478c081", "filename": "src/test/rustdoc/auxiliary/extern-impl-trait.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/33dceaa24409951dfe7607c580de6fd504932c90/src%2Ftest%2Frustdoc%2Fauxiliary%2Fextern-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33dceaa24409951dfe7607c580de6fd504932c90/src%2Ftest%2Frustdoc%2Fauxiliary%2Fextern-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fextern-impl-trait.rs?ref=33dceaa24409951dfe7607c580de6fd504932c90", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Foo {\n+    type Associated;\n+}\n+\n+pub struct X;\n+pub struct Y;\n+\n+\n+impl Foo for X {\n+    type Associated = ();\n+}\n+\n+impl Foo for Y {\n+    type Associated = ();\n+}\n+\n+impl X {\n+    pub fn returns_sized<'a>(&'a self) -> impl Foo<Associated=()> + 'a {\n+        X\n+    }\n+}\n+\n+impl Y {\n+    pub fn returns_unsized<'a>(&'a self) -> Box<impl ?Sized + Foo<Associated=()> + 'a> {\n+        Box::new(X)\n+    }\n+}"}, {"sha": "02a8e962fe17badf2f5e4ca430b459e49337c750", "filename": "src/test/rustdoc/extern-impl-trait.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/33dceaa24409951dfe7607c580de6fd504932c90/src%2Ftest%2Frustdoc%2Fextern-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33dceaa24409951dfe7607c580de6fd504932c90/src%2Ftest%2Frustdoc%2Fextern-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-impl-trait.rs?ref=33dceaa24409951dfe7607c580de6fd504932c90", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:extern-impl-trait.rs\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate extern_impl_trait;\n+\n+// @has 'foo/struct.X.html' '//code' \"impl Foo<Associated = ()> + 'a\"\n+pub use extern_impl_trait::X;\n+\n+// @has 'foo/struct.Y.html' '//code' \"impl ?Sized + Foo<Associated = ()> + 'a\"\n+pub use extern_impl_trait::Y;"}]}