{"sha": "4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNmM0ZjNmZDU5ZmUyYzdjZmNkY2VkZDk5NGY4MTUyNDljYTVhY2E=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-21T09:18:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-21T09:18:55Z"}, "message": "Merge #4069\n\n4069: More detailed Sublime Text install instructions r=lnicola a=nnmm\n\n* People might typically jump directly to their editor and wonder where the part about installing rust-analyzer is \u2013 at least I did. I added a link to the relevant section for ST.\r\n* Make ST instructions more detailed and user friendly (especially beginners), include troubleshooting tips.\r\n* Minor grammar improvements throughout.\n\nCo-authored-by: Nikolai Morin <nnmmgit@gmail.com>", "tree": {"sha": "572dfeed02aecb9c21d892aa579a201b90bf512d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/572dfeed02aecb9c21d892aa579a201b90bf512d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJenrp/CRBK7hj4Ov3rIwAAdHIIAIydugsmgkU0RF6FOeX4sed4\nHptQKub0xDsDH721AXfjdPdSDPxsvleNhilKpyPNSPDFlNMlK6hp2ZArRjOsFpdC\n3b0E7AaR8T0w5gO5rKkXAfOLWTk+GZpIitWhjWcQ/rmKAD9pimeYaN7lrZ/6fH/X\nzMODl4SEijUuKB2c9LwnVABV4u2SC4rmK8ybB8wUQn/THY31fu4P9n1+3yPigKpH\n20PTnZTGu1aDTDKnDhfQCLNnPu6U0WD7j7ukiXRnrtebArqWSNK+Dh9QknHQ2jbU\nra1tUSnpx6T7TouelwWHDcbthSLkydyiC8s3Dxwvy4ODEGhwabL5AvAAT+ooa4c=\n=fMzV\n-----END PGP SIGNATURE-----\n", "payload": "tree 572dfeed02aecb9c21d892aa579a201b90bf512d\nparent ec645f2d75d2939a2f64959019dd916750f1ec00\nparent 427f634de3fe6a746adf5de41eeb290c5ac321ef\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587460735 +0000\ncommitter GitHub <noreply@github.com> 1587460735 +0000\n\nMerge #4069\n\n4069: More detailed Sublime Text install instructions r=lnicola a=nnmm\n\n* People might typically jump directly to their editor and wonder where the part about installing rust-analyzer is \u2013 at least I did. I added a link to the relevant section for ST.\r\n* Make ST instructions more detailed and user friendly (especially beginners), include troubleshooting tips.\r\n* Minor grammar improvements throughout.\n\nCo-authored-by: Nikolai Morin <nnmmgit@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca", "html_url": "https://github.com/rust-lang/rust/commit/4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec645f2d75d2939a2f64959019dd916750f1ec00", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec645f2d75d2939a2f64959019dd916750f1ec00", "html_url": "https://github.com/rust-lang/rust/commit/ec645f2d75d2939a2f64959019dd916750f1ec00"}, {"sha": "427f634de3fe6a746adf5de41eeb290c5ac321ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/427f634de3fe6a746adf5de41eeb290c5ac321ef", "html_url": "https://github.com/rust-lang/rust/commit/427f634de3fe6a746adf5de41eeb290c5ac321ef"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "77cdd5e1c38495060b91b1c46e01f8c93e338d20", "filename": "docs/user/readme.adoc", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca/docs%2Fuser%2Freadme.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca/docs%2Fuser%2Freadme.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Freadme.adoc?ref=4c6c4f3fd59fe2c7cfcdcedd994f815249ca5aca", "patch": "@@ -14,9 +14,9 @@\n // Master copy of this document lives in the https://github.com/rust-analyzer/rust-analyzer repository\n \n At its core, rust-analyzer is a *library* for semantic analysis of Rust code as it changes over time.\n-This manual focuses on a specific usage of the library -- the implementation of\n-https://microsoft.github.io/language-server-protocol/[Language Server Protocol].\n-LSP allows various code editors, like VS Code, Emacs or Vim, to implement semantic features like completion or goto definition by talking to an external language server process.\n+This manual focuses on a specific usage of the library -- running it as part of a server that implements the\n+https://microsoft.github.io/language-server-protocol/[Language Server Protocol] (LSP).\n+The LSP allows various code editors, like VS Code, Emacs or Vim, to implement semantic features like completion or goto definition by talking to an external language server process.\n \n To improve this document, send a pull request against\n https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/readme.adoc[this file].\n@@ -26,7 +26,7 @@ https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/readme.adoc\n In theory, one should be able to just install the server binary and have it automatically work with any editor.\n We are not there yet, so some editor specific setup is required.\n \n-Additionally, rust-analyzer needs sources of the standard library.\n+Additionally, rust-analyzer needs the sources of the standard library.\n If the source code is not present, rust-analyzer will attempt to install it automatically.\n \n To add the sources manually, run the following command:\n@@ -38,7 +38,7 @@ $ rustup component add rust-src\n === VS Code\n \n This is the best supported editor at the moment.\n-rust-analyzer plugin for VS Code is maintained\n+The rust-analyzer plugin for VS Code is maintained\n https://github.com/rust-analyzer/rust-analyzer/tree/master/editors/code[in tree].\n \n You can install the latest release of the plugin from\n@@ -74,7 +74,7 @@ We ship nightly releases for VS Code. To help us out with testing the newest cod\n { \"rust-analyzer.updates.channel\": \"nightly\" }\n ----\n \n-You will be prompted to install the `nightly` extension version. Just click `Download now` and from that moment you will get automatic updates each 24 hours.\n+You will be prompted to install the `nightly` extension version. Just click `Download now` and from that moment you will get automatic updates every 24 hours.\n \n If you don't want to be asked for `Download now` every day when the new nightly version is released add the following to your `settings.json`:\n [source,json]\n@@ -110,19 +110,21 @@ Here are some useful self-diagnostic commands:\n \n === Language Server Binary\n \n-Other editors generally require `rust-analyzer` binary to be in `$PATH`.\n-You can download the pre-built binary from\n-https://github.com/rust-analyzer/rust-analyzer/releases[releases]\n-page, or you can install it from source using the following command:\n+Other editors generally require the `rust-analyzer` binary to be in `$PATH`.\n+You can download the pre-built binary from the https://github.com/rust-analyzer/rust-analyzer/releases[releases] page. Typically, you then need to rename the binary for your platform, e.g. `rust-analyzer-mac` if you're on Mac OS, to `rust-analzyer` and make it executable in addition to moving it into a directory in your `$PATH`.\n+\n+Alternatively, you can install it from source using the following command:\n \n [source,bash]\n ----\n $ cargo xtask install --server\n ----\n \n+If your editor can't find the binary even though the binary is on your `$PATH`, the likely explanation is that it doesn't see the same `$PATH` as the shell, see https://github.com/rust-analyzer/rust-analyzer/issues/1811[this issue]. On Unix, running the editor from a shell or changing the `.desktop` file to set the environment should help.\n+\n ==== Arch Linux\n \n-`rust-analyzer` binary can be installed from AUR (Arch User Repository):\n+The `rust-analyzer` binary can be installed from AUR (Arch User Repository):\n \n - https://aur.archlinux.org/packages/rust-analyzer-bin[`rust-analyzer-bin`] (binary from GitHub releases)\n - https://aur.archlinux.org/packages/rust-analyzer[`rust-analyzer`] (built from latest tagged source)\n@@ -183,11 +185,20 @@ Once `neovim/nvim-lsp` is installed, use `+lua require'nvim_lsp'.rust_analyzer.s\n \n === Sublime Text 3\n \n-Prerequisites:\n+Prerequisites: You have installed the <<language-server-binary,`rust-analyzer` binary>>.\n+\n+You also need the `LSP` package. To install it:\n+\n+1. If you've never installed a Sublime Text package, install Package Control:\n+   * Open the command palette (Win/Linux: `ctrl+shift+p`, Mac: `cmd+shift+p`)\n+   * Type `Install Package Control`, press enter\n+2. In the command palette, run `Package control: Install package`, and in the list that pops up, type `LSP` and press enter.\n+\n+Finally, with your Rust project open, in the command palette, run `LSP: Enable Language Server In Project` or `LSP: Enable Language Server Globally`, then select `rust-analyzer` in the list that pops up to enable the rust-analyzer LSP. The latter means that rust-analzyer is enabled by default in Rust projects.\n \n-`LSP` package.\n+If it worked, you should see \"rust-analzyer, Line X, Column Y\" on the left side of the bottom bar, and after waiting a bit, functionality like tooltips on hovering over variables should become available.\n \n-Invoke the command palette (`ctrl+shift+p`) and type LSP enable to locally/globally enable the rust-analyzer LSP (type LSP enable, then choose either locally or globally, then select rust-analyzer)\n+If you get an error saying `No such file or directory: 'rust-analyzer'`, see the <<language-server-binary,section on installing the language server binary>>.\n \n == Usage\n "}]}