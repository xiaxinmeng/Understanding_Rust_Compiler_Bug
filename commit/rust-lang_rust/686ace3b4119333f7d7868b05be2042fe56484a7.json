{"sha": "686ace3b4119333f7d7868b05be2042fe56484a7", "node_id": "C_kwDOAAsO6NoAKDY4NmFjZTNiNDExOTMzM2Y3ZDc4NjhiMDViZTIwNDJmZTU2NDg0YTc", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-11-14T19:21:05Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-12-03T22:51:49Z"}, "message": "add `unwind_asm` feature gate for `may_unwind` option", "tree": {"sha": "fad629eb66db90656165b463fc5c57f6fb1b7866", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fad629eb66db90656165b463fc5c57f6fb1b7866"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/686ace3b4119333f7d7868b05be2042fe56484a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/686ace3b4119333f7d7868b05be2042fe56484a7", "html_url": "https://github.com/rust-lang/rust/commit/686ace3b4119333f7d7868b05be2042fe56484a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/686ace3b4119333f7d7868b05be2042fe56484a7/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "059d3b3f345b2b0084b8f66f015b7709dedefc33", "url": "https://api.github.com/repos/rust-lang/rust/commits/059d3b3f345b2b0084b8f66f015b7709dedefc33", "html_url": "https://github.com/rust-lang/rust/commit/059d3b3f345b2b0084b8f66f015b7709dedefc33"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "9f27ace25ab4b442aade416279123f6db49939d6", "filename": "compiler/rustc_ast_lowering/src/asm.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/686ace3b4119333f7d7868b05be2042fe56484a7/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686ace3b4119333f7d7868b05be2042fe56484a7/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs?ref=686ace3b4119333f7d7868b05be2042fe56484a7", "patch": "@@ -49,6 +49,17 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 .struct_span_err(sp, \"the `att_syntax` option is only supported on x86\")\n                 .emit();\n         }\n+        if asm.options.contains(InlineAsmOptions::MAY_UNWIND)\n+            && !self.sess.features_untracked().asm_unwind\n+        {\n+            feature_err(\n+                &self.sess.parse_sess,\n+                sym::asm_unwind,\n+                sp,\n+                \"the `may_unwind` option is unstable\",\n+            )\n+            .emit();\n+        }\n \n         let mut clobber_abis = FxHashMap::default();\n         if let Some(asm_arch) = asm_arch {"}, {"sha": "640c4bba6dafb43022f32959aff3075f164b9cbd", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/686ace3b4119333f7d7868b05be2042fe56484a7/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686ace3b4119333f7d7868b05be2042fe56484a7/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=686ace3b4119333f7d7868b05be2042fe56484a7", "patch": "@@ -290,6 +290,8 @@ declare_features! (\n     (active, asm_experimental_arch, \"1.58.0\", Some(72016), None),\n     /// Allows using `sym` operands in inline assembly.\n     (active, asm_sym, \"1.58.0\", Some(72016), None),\n+    /// Allows the `may_unwind` option in inline assembly.\n+    (active, asm_unwind, \"1.58.0\", Some(72016), None),\n     /// Allows the user of associated type bounds.\n     (active, associated_type_bounds, \"1.34.0\", Some(52662), None),\n     /// Allows associated type defaults."}, {"sha": "309c305293fd6e54e6ffe3d6af4b229d214b67bc", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/686ace3b4119333f7d7868b05be2042fe56484a7/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686ace3b4119333f7d7868b05be2042fe56484a7/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=686ace3b4119333f7d7868b05be2042fe56484a7", "patch": "@@ -332,6 +332,7 @@ symbols! {\n         asm_const,\n         asm_experimental_arch,\n         asm_sym,\n+        asm_unwind,\n         assert,\n         assert_inhabited,\n         assert_macro,"}, {"sha": "a7765bef293c335ffe0f2da3ef1b423673c4370f", "filename": "src/test/ui/feature-gates/feature-gate-asm_unwind.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/686ace3b4119333f7d7868b05be2042fe56484a7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686ace3b4119333f7d7868b05be2042fe56484a7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm_unwind.rs?ref=686ace3b4119333f7d7868b05be2042fe56484a7", "patch": "@@ -0,0 +1,8 @@\n+#![feature(asm)]\n+\n+fn main() {\n+    unsafe {\n+        asm!(\"\", options(may_unwind));\n+        //~^ ERROR the `may_unwind` option is unstable\n+    }\n+}"}, {"sha": "67a5921a6478121a694af0648a901b987dc8fbb9", "filename": "src/test/ui/feature-gates/feature-gate-asm_unwind.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/686ace3b4119333f7d7868b05be2042fe56484a7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm_unwind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/686ace3b4119333f7d7868b05be2042fe56484a7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm_unwind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm_unwind.stderr?ref=686ace3b4119333f7d7868b05be2042fe56484a7", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: the `may_unwind` option is unstable\n+  --> $DIR/feature-gate-asm_unwind.rs:5:9\n+   |\n+LL |         asm!(\"\", options(may_unwind));\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #72016 <https://github.com/rust-lang/rust/issues/72016> for more information\n+   = help: add `#![feature(asm_unwind)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}]}