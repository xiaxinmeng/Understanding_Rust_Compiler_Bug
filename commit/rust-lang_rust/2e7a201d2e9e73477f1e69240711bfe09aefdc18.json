{"sha": "2e7a201d2e9e73477f1e69240711bfe09aefdc18", "node_id": "C_kwDOAAsO6NoAKDJlN2EyMDFkMmU5ZTczNDc3ZjFlNjkyNDA3MTFiZmUwOWFlZmRjMTg", "commit": {"author": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2022-09-23T16:47:47Z"}, "committer": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2022-09-24T20:12:00Z"}, "message": "Constify cmp_min_max_by", "tree": {"sha": "42858fb5cb546caef5e8d0ea7018b444c496f32f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42858fb5cb546caef5e8d0ea7018b444c496f32f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e7a201d2e9e73477f1e69240711bfe09aefdc18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7a201d2e9e73477f1e69240711bfe09aefdc18", "html_url": "https://github.com/rust-lang/rust/commit/2e7a201d2e9e73477f1e69240711bfe09aefdc18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e7a201d2e9e73477f1e69240711bfe09aefdc18/comments", "author": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6580010551063718462f9dfe41c9490d92994d0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6580010551063718462f9dfe41c9490d92994d0e", "html_url": "https://github.com/rust-lang/rust/commit/6580010551063718462f9dfe41c9490d92994d0e"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "f0fa2e1d2c190a629def5e5185408d8419ff3e71", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 49, "deletions": 6, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/2e7a201d2e9e73477f1e69240711bfe09aefdc18/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7a201d2e9e73477f1e69240711bfe09aefdc18/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=2e7a201d2e9e73477f1e69240711bfe09aefdc18", "patch": "@@ -22,6 +22,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n+use crate::const_closure::ConstFnMutClosure;\n use crate::marker::Destruct;\n use crate::marker::StructuralPartialEq;\n \n@@ -1222,7 +1223,12 @@ pub const fn min<T: ~const Ord + ~const Destruct>(v1: T, v2: T) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn min_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn min_by<T, F: ~const FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+{\n     match compare(&v1, &v2) {\n         Ordering::Less | Ordering::Equal => v1,\n         Ordering::Greater => v2,\n@@ -1244,8 +1250,24 @@ pub fn min_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn min_by_key<T, F: FnMut(&T) -> K, K: Ord>(v1: T, v2: T, mut f: F) -> T {\n-    min_by(v1, v2, |v1, v2| f(v1).cmp(&f(v2)))\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn min_by_key<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(v1: T, v2: T, mut f: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+    K: ~const Destruct,\n+{\n+    const fn imp<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(\n+        f: &mut F,\n+        (v1, v2): (&T, &T),\n+    ) -> Ordering\n+    where\n+        T: ~const Destruct,\n+        K: ~const Destruct,\n+    {\n+        f(v1).cmp(&f(v2))\n+    }\n+    min_by(v1, v2, ConstFnMutClosure::new(&mut f, imp))\n }\n \n /// Compares and returns the maximum of two values.\n@@ -1286,7 +1308,12 @@ pub const fn max<T: ~const Ord + ~const Destruct>(v1: T, v2: T) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn max_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn max_by<T, F: ~const FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+{\n     match compare(&v1, &v2) {\n         Ordering::Less | Ordering::Equal => v2,\n         Ordering::Greater => v1,\n@@ -1308,8 +1335,24 @@ pub fn max_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n-pub fn max_by_key<T, F: FnMut(&T) -> K, K: Ord>(v1: T, v2: T, mut f: F) -> T {\n-    max_by(v1, v2, |v1, v2| f(v1).cmp(&f(v2)))\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+pub const fn max_by_key<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(v1: T, v2: T, mut f: F) -> T\n+where\n+    T: ~const Destruct,\n+    F: ~const Destruct,\n+    K: ~const Destruct,\n+{\n+    const fn imp<T, F: ~const FnMut(&T) -> K, K: ~const Ord>(\n+        f: &mut F,\n+        (v1, v2): (&T, &T),\n+    ) -> Ordering\n+    where\n+        T: ~const Destruct,\n+        K: ~const Destruct,\n+    {\n+        f(v1).cmp(&f(v2))\n+    }\n+    max_by(v1, v2, ConstFnMutClosure::new(&mut f, imp))\n }\n \n // Implementation of PartialEq, Eq, PartialOrd and Ord for primitive types"}]}