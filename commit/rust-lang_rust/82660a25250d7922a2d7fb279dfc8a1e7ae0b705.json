{"sha": "82660a25250d7922a2d7fb279dfc8a1e7ae0b705", "node_id": "C_kwDOAAsO6NoAKDgyNjYwYTI1MjUwZDc5MjJhMmQ3ZmIyNzlkZmM4YTFlN2FlMGI3MDU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-04T21:11:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-04T21:11:07Z"}, "message": "Rollup merge of #98738 - tmiasko:checked-binop, r=oli-obk\n\nClarify MIR semantics of checked binary operations", "tree": {"sha": "e78ef8a6c6f068242b2dc55ebc60b3aa59bea8c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e78ef8a6c6f068242b2dc55ebc60b3aa59bea8c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82660a25250d7922a2d7fb279dfc8a1e7ae0b705", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiw1drCRBK7hj4Ov3rIwAA020IABd4S0iuVmI3ohQCD3g0DvDF\nTcTmWawDwvGWC0Yi+FFRh+/2pJOjDRcdFbO5zksnXSumynVfID7a5PZXqwefdgWC\n8JQN5eJWaSEjP0GrMf74pNduyU5UjKs2hNaK4eVJQS9hwTdMUr3k07V+B5IJ5VmV\n3U6U6e2a6ei4R/AgosdgbUuZ70cIoHcQX0kdS/ZORNBsACz3myQco9Qh1D/sb5ol\n4CGxVWztZn3ckM0PAJPLJgFkpNWF/W9oywTzQRjETpTNkGxAEjBOabdotux+lqcY\npsw79wjDH37Tp16g+D7jcZB9OzsqsuUR06JnPfowV98synUK/nQegD1Hw+p1N+g=\n=RQ3l\n-----END PGP SIGNATURE-----\n", "payload": "tree e78ef8a6c6f068242b2dc55ebc60b3aa59bea8c8\nparent 17581a79adb7b1c064222defa94a5a3d79f5bfb2\nparent b88479738ec8de29da27d9fd4bef5581c362e9b0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656969067 +0200\ncommitter GitHub <noreply@github.com> 1656969067 +0200\n\nRollup merge of #98738 - tmiasko:checked-binop, r=oli-obk\n\nClarify MIR semantics of checked binary operations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82660a25250d7922a2d7fb279dfc8a1e7ae0b705", "html_url": "https://github.com/rust-lang/rust/commit/82660a25250d7922a2d7fb279dfc8a1e7ae0b705", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82660a25250d7922a2d7fb279dfc8a1e7ae0b705/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17581a79adb7b1c064222defa94a5a3d79f5bfb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/17581a79adb7b1c064222defa94a5a3d79f5bfb2", "html_url": "https://github.com/rust-lang/rust/commit/17581a79adb7b1c064222defa94a5a3d79f5bfb2"}, {"sha": "b88479738ec8de29da27d9fd4bef5581c362e9b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b88479738ec8de29da27d9fd4bef5581c362e9b0", "html_url": "https://github.com/rust-lang/rust/commit/b88479738ec8de29da27d9fd4bef5581c362e9b0"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "17824da2345a46e6ccd6db107a5660322fd1c098", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/82660a25250d7922a2d7fb279dfc8a1e7ae0b705/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82660a25250d7922a2d7fb279dfc8a1e7ae0b705/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=82660a25250d7922a2d7fb279dfc8a1e7ae0b705", "patch": "@@ -990,11 +990,19 @@ pub enum Rvalue<'tcx> {\n     ///   matching types and return a value of that type.\n     BinaryOp(BinOp, Box<(Operand<'tcx>, Operand<'tcx>)>),\n \n-    /// Same as `BinaryOp`, but yields `(T, bool)` instead of `T`. In addition to performing the\n-    /// same computation as the matching `BinaryOp`, checks if the infinite precison result would be\n-    /// unequal to the actual result and sets the `bool` if this is the case.\n+    /// Same as `BinaryOp`, but yields `(T, bool)` with a `bool` indicating an error condition.\n     ///\n-    /// This only supports addition, subtraction, multiplication, and shift operations on integers.\n+    /// When overflow checking is disabled, the error condition is false. Otherwise, the error\n+    /// condition is determined as described below.\n+    ///\n+    /// For addition, subtraction, and multiplication on integers the error condition is set when\n+    /// the infinite precision result would be unequal to the actual result.\n+    ///\n+    /// For shift operations on integers the error condition is set when the value of right-hand\n+    /// side is greater than or equal to the number of bits in the type of the left-hand side, or\n+    /// when the value of right-hand side is negative.\n+    ///\n+    /// Other combinations of types and operators are unsupported.\n     CheckedBinaryOp(BinOp, Box<(Operand<'tcx>, Operand<'tcx>)>),\n \n     /// Computes a value as described by the operation."}]}