{"sha": "2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMzJlNWM1OGM1Yjk0OTNmZGZhMjhkYzcwZmQ2YzdlM2ZlNDdiZmE=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2018-01-22T05:34:42Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2018-01-22T05:34:42Z"}, "message": "Fix unnecessary_fold bug", "tree": {"sha": "ec445279ebd7ca139402e2a09ed269f6b9c5f068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec445279ebd7ca139402e2a09ed269f6b9c5f068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa", "html_url": "https://github.com/rust-lang/rust/commit/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96cba36b46ae1ab24da8de0d75e35328f23f7ebb", "url": "https://api.github.com/repos/rust-lang/rust/commits/96cba36b46ae1ab24da8de0d75e35328f23f7ebb", "html_url": "https://github.com/rust-lang/rust/commit/96cba36b46ae1ab24da8de0d75e35328f23f7ebb"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "e9b82ca0ac9bca97127e2dbd5bf931df124a5d5a", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa", "patch": "@@ -1141,6 +1141,13 @@ fn lint_unnecessary_fold(cx: &LateContext, expr: &hir::Expr, fold_args: &[hir::E\n     assert!(fold_args.len() == 3,\n         \"Expected fold_args to have three entries - the receiver, the initial value and the closure\");\n \n+    fn is_exactly_closure_param(expr: &hir::Expr, closure_param: ast::Name) -> bool {\n+        if let hir::ExprPath(hir::QPath::Resolved(None, ref path)) = expr.node {\n+            return path.segments.len() == 1 && &path.segments[0].name == &closure_param;\n+        }\n+        false\n+    }\n+\n     fn check_fold_with_op(\n         cx: &LateContext,\n         fold_args: &[hir::Expr],\n@@ -1162,8 +1169,8 @@ fn lint_unnecessary_fold(cx: &LateContext, expr: &hir::Expr, fold_args: &[hir::E\n             if let Some(first_arg_ident) = get_arg_name(&closure_body.arguments[0].pat);\n             if let Some(second_arg_ident) = get_arg_name(&closure_body.arguments[1].pat);\n \n-            if let hir::ExprPath(hir::QPath::Resolved(None, ref path)) = left_expr.node;\n-            if path.segments.len() == 1 && &path.segments[0].name == &first_arg_ident;\n+            if is_exactly_closure_param(&*left_expr, first_arg_ident);\n+            if replacement_has_args || is_exactly_closure_param(&*right_expr, second_arg_ident);\n \n             then {\n                 // Span containing `.fold(...)`"}, {"sha": "4afab4c8be6b3f225576a952ba2914f988552068", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa", "patch": "@@ -419,6 +419,9 @@ fn unnecessary_fold_should_ignore() {\n     let _ = (0..3).fold(true, |acc, x| x > 2 && acc);\n     let _ = (0..3).fold(0, |acc, x| x + acc);\n     let _ = (0..3).fold(1, |acc, x| x * acc);\n+\n+    let _ = [(0..2), (0..3)].iter().fold(0, |a, b| a + b.len());\n+    let _ = [(0..2), (0..3)].iter().fold(1, |a, b| a * b.len());\n }\n \n #[allow(similar_names)]"}, {"sha": "ef52d85c31f6056dfd2db25dd523a446594e3faf", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=2132e5c58c5b9493fdfa28dc70fd6c7e3fe47bfa", "patch": "@@ -526,9 +526,9 @@ error: this `.fold` can be written more succinctly using another method\n     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.any(|x| x > 2)`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:427:13\n+   --> $DIR/methods.rs:430:13\n     |\n-427 |     let _ = opt.unwrap();\n+430 |     let _ = opt.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n     = note: `-D option-unwrap-used` implied by `-D warnings`"}]}