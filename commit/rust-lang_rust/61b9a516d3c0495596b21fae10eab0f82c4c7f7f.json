{"sha": "61b9a516d3c0495596b21fae10eab0f82c4c7f7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYjlhNTE2ZDNjMDQ5NTU5NmIyMWZhZTEwZWFiMGY4MmM0YzdmN2Y=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-08-01T08:12:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-01T08:12:45Z"}, "message": "Rollup merge of #52824 - varkor:fix-llvm-ret-move-warnings, r=rkruppe\n\nFix -Wpessimizing-move warnings in rustllvm/PassWrapper\n\nThese are producing warnings when building rustc (`warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]`).", "tree": {"sha": "8a7729910e06749af7a4bea4e9370ceba0c55f0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a7729910e06749af7a4bea4e9370ceba0c55f0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61b9a516d3c0495596b21fae10eab0f82c4c7f7f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbYWt9CRBK7hj4Ov3rIwAAdHIIAKWbeZd8Xl/KBkzV04PIM9U3\nnumCgKlAGbVTMk6fP95pIpaNgFbhoRi5VDz7CeACjsR1OLZJyVUFFlXwZ7xuj6x2\nVag+vKTyPaBWOKpHvgq6AxdqWNU69IwOguEC0SQ3zyTiEZP1XHROpxp3gW56cNKV\nSOa0zybyr/fzIbSpYWs972z0siljN+tKOsO18iS8d/8UUSGDl3OS167HbfNCFDvX\ntY9XdSoPvF0a1cxKlAlQmYWW6J2n55yVfTM9qU6JLizKv+nKo2hzVt9sTwae9Ah/\nsJOJxbv1UIaVssktDx0IVMpkSEtmitkTaRVsedlwypt6D7Ba77Pp7Bdn5d7QqFo=\n=pLq6\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a7729910e06749af7a4bea4e9370ceba0c55f0a\nparent 9e43ebda534c14885124fbde2915083f43ec1c99\nparent 9ccd7eef1eeda8d207f62dae0c32d35cad7fa826\nauthor Pietro Albini <pietro@pietroalbini.org> 1533111165 +0200\ncommitter GitHub <noreply@github.com> 1533111165 +0200\n\nRollup merge of #52824 - varkor:fix-llvm-ret-move-warnings, r=rkruppe\n\nFix -Wpessimizing-move warnings in rustllvm/PassWrapper\n\nThese are producing warnings when building rustc (`warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]`).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61b9a516d3c0495596b21fae10eab0f82c4c7f7f", "html_url": "https://github.com/rust-lang/rust/commit/61b9a516d3c0495596b21fae10eab0f82c4c7f7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61b9a516d3c0495596b21fae10eab0f82c4c7f7f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e43ebda534c14885124fbde2915083f43ec1c99", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e43ebda534c14885124fbde2915083f43ec1c99", "html_url": "https://github.com/rust-lang/rust/commit/9e43ebda534c14885124fbde2915083f43ec1c99"}, {"sha": "9ccd7eef1eeda8d207f62dae0c32d35cad7fa826", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ccd7eef1eeda8d207f62dae0c32d35cad7fa826", "html_url": "https://github.com/rust-lang/rust/commit/9ccd7eef1eeda8d207f62dae0c32d35cad7fa826"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a13e4ffa8f8295cc50da40d3c3fe3b0735c6128a", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61b9a516d3c0495596b21fae10eab0f82c4c7f7f/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/61b9a516d3c0495596b21fae10eab0f82c4c7f7f/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=61b9a516d3c0495596b21fae10eab0f82c4c7f7f", "patch": "@@ -1075,7 +1075,7 @@ LLVMRustPrepareThinLTOImport(const LLVMRustThinLTOData *Data, LLVMModuleRef M) {\n     auto MOrErr = getLazyBitcodeModule(Memory, Context, true, true);\n \n     if (!MOrErr)\n-      return std::move(MOrErr);\n+      return MOrErr;\n \n     // The rest of this closure is a workaround for\n     // https://bugs.llvm.org/show_bug.cgi?id=38184 where during ThinLTO imports\n@@ -1093,14 +1093,14 @@ LLVMRustPrepareThinLTOImport(const LLVMRustThinLTOData *Data, LLVMModuleRef M) {\n     // shouldn't be a perf hit.\n     if (Error Err = (*MOrErr)->materializeMetadata()) {\n       Expected<std::unique_ptr<Module>> Ret(std::move(Err));\n-      return std::move(Ret);\n+      return Ret;\n     }\n \n     auto *WasmCustomSections = (*MOrErr)->getNamedMetadata(\"wasm.custom_sections\");\n     if (WasmCustomSections)\n       WasmCustomSections->eraseFromParent();\n \n-    return std::move(MOrErr);\n+    return MOrErr;\n   };\n   FunctionImporter Importer(Data->Index, Loader);\n   Expected<bool> Result = Importer.importFunctions(Mod, ImportList);"}]}