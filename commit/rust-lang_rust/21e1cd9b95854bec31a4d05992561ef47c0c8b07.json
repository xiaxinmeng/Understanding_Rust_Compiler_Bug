{"sha": "21e1cd9b95854bec31a4d05992561ef47c0c8b07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZTFjZDliOTU4NTRiZWMzMWE0ZDA1OTkyNTYxZWY0N2MwYzhiMDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-22T04:42:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-22T04:42:36Z"}, "message": "Auto merge of #85531 - luqmana:flip-gc, r=petrochenkov\n\nSwap TargetOptions::linker_is_gnu default from false to true and update targets as appropriate.\n\n#85274 gated the `--gc-sections` flag on targets that specified `linker_is_gnu` to stop us from passing it to incompatible linkers. But that had the unintended effect of the flag no longer being passed on targets for which it is valid and hence caused a regression in binary size. Given that most `ld`-style linkers are GNU compatible, this change flips our default for `linker_is_gnu` from false to true. That also means updating the targets that relied on the previous default:\n* Apple\n* Illumos\n* L4Re (not sure about this one)\n* MSVC\n* NvtPtx\n* Solaris\n\nFixes #85519", "tree": {"sha": "8ac9f0e3e2c47e59eac778304e8a952bc80b3333", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ac9f0e3e2c47e59eac778304e8a952bc80b3333"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21e1cd9b95854bec31a4d05992561ef47c0c8b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21e1cd9b95854bec31a4d05992561ef47c0c8b07", "html_url": "https://github.com/rust-lang/rust/commit/21e1cd9b95854bec31a4d05992561ef47c0c8b07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21e1cd9b95854bec31a4d05992561ef47c0c8b07/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d1610356b135cf34445621df58d257a2e090d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/51d1610356b135cf34445621df58d257a2e090d2", "html_url": "https://github.com/rust-lang/rust/commit/51d1610356b135cf34445621df58d257a2e090d2"}, {"sha": "3221a5e65bd5c90a2fe9cfe341110b3bd8fb6e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/3221a5e65bd5c90a2fe9cfe341110b3bd8fb6e16", "html_url": "https://github.com/rust-lang/rust/commit/3221a5e65bd5c90a2fe9cfe341110b3bd8fb6e16"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "de92b167f00ecea294a936b11b99efb7afbd0ba9", "filename": "compiler/rustc_target/src/spec/aarch64_unknown_none.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -16,7 +16,6 @@ pub fn target() -> Target {\n         executables: true,\n         relocation_model: RelocModel::Static,\n         disable_redzone: true,\n-        linker_is_gnu: true,\n         max_atomic_width: Some(128),\n         panic_strategy: PanicStrategy::Abort,\n         unsupported_abis: super::arm_base::unsupported_abis(),"}, {"sha": "2566eeae14a69ec81b2e8cc6a5fa046f3d75c3f3", "filename": "compiler/rustc_target/src/spec/aarch64_unknown_none_softfloat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none_softfloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none_softfloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none_softfloat.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -16,7 +16,6 @@ pub fn target() -> Target {\n         executables: true,\n         relocation_model: RelocModel::Static,\n         disable_redzone: true,\n-        linker_is_gnu: true,\n         max_atomic_width: Some(128),\n         panic_strategy: PanicStrategy::Abort,\n         unsupported_abis: super::arm_base::unsupported_abis(),"}, {"sha": "45c5c1a16e9cc417191e4bc0d7d68e9ffeb2c93e", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -22,6 +22,7 @@ pub fn opts(os: &str) -> TargetOptions {\n         // macOS has -dead_strip, which doesn't rely on function_sections\n         function_sections: false,\n         dynamic_linking: true,\n+        linker_is_gnu: false,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n         is_like_osx: true,"}, {"sha": "2cb2661a5265e667fea44ad7309ef4c2f11e7014", "filename": "compiler/rustc_target/src/spec/avr_gnu_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Favr_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Favr_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Favr_gnu_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -16,7 +16,6 @@ pub fn target(target_cpu: String) -> Target {\n \n             linker: Some(\"avr-gcc\".to_owned()),\n             executables: true,\n-            linker_is_gnu: true,\n             eh_frame_header: false,\n             pre_link_args: vec![(LinkerFlavor::Gcc, vec![format!(\"-mmcu={}\", target_cpu)])]\n                 .into_iter()"}, {"sha": "e13a640d4d2103678364a21810f2745518759615", "filename": "compiler/rustc_target/src/spec/dragonfly_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -6,7 +6,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n-        linker_is_gnu: true,\n         has_rpath: true,\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,"}, {"sha": "bef2fce7c839bcbe357f29bfa2e83d5bee3af9c9", "filename": "compiler/rustc_target/src/spec/freebsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -6,7 +6,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n-        linker_is_gnu: true,\n         has_rpath: true,\n         position_independent_executables: true,\n         eliminate_frame_pointer: false, // FIXME 43575"}, {"sha": "23a2e65749e111e7cfbf4d11c87a2ea8f93943bc", "filename": "compiler/rustc_target/src/spec/fuchsia_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -27,7 +27,6 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         families: vec![\"unix\".to_string()],\n         is_like_fuchsia: true,\n-        linker_is_gnu: true,\n         pre_link_args,\n         pre_link_objects: crt_objects::new(&[\n             (LinkOutputKind::DynamicNoPicExe, &[\"Scrt1.o\"]),"}, {"sha": "2b95523d6f7b5ed4dbe609731f15416cb1980f59", "filename": "compiler/rustc_target/src/spec/haiku_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhaiku_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhaiku_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhaiku_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -7,7 +7,6 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         families: vec![\"unix\".to_string()],\n         relro_level: RelroLevel::Full,\n-        linker_is_gnu: true,\n         ..Default::default()\n     }\n }"}, {"sha": "75ca1f79b12cce91289a339cc28229609bf6b66d", "filename": "compiler/rustc_target/src/spec/hermit_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -13,7 +13,6 @@ pub fn opts() -> TargetOptions {\n         linker: Some(\"rust-lld\".to_owned()),\n         executables: true,\n         has_elf_tls: true,\n-        linker_is_gnu: true,\n         pre_link_args,\n         panic_strategy: PanicStrategy::Abort,\n         position_independent_executables: true,"}, {"sha": "c55a46e69a8334be202a23cf84c6b28425e60431", "filename": "compiler/rustc_target/src/spec/hermit_kernel_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_kernel_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_kernel_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_kernel_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -14,7 +14,6 @@ pub fn opts() -> TargetOptions {\n         linker: Some(\"rust-lld\".to_owned()),\n         executables: true,\n         has_elf_tls: true,\n-        linker_is_gnu: true,\n         pre_link_args,\n         panic_strategy: PanicStrategy::Abort,\n         position_independent_executables: true,"}, {"sha": "9d9da50be7a27341d843f65fd1c3d01e45b46f2c", "filename": "compiler/rustc_target/src/spec/illumos_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fillumos_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fillumos_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fillumos_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -33,6 +33,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         families: vec![\"unix\".to_string()],\n         is_like_solaris: true,\n+        linker_is_gnu: false,\n         limit_rdylib_exports: false, // Linker doesn't support this\n         eliminate_frame_pointer: false,\n         eh_frame_header: false,"}, {"sha": "f6e3102f6176203dbc3743e6e012241344693cad", "filename": "compiler/rustc_target/src/spec/l4re_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fl4re_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fl4re_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fl4re_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -20,6 +20,7 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         panic_strategy: PanicStrategy::Abort,\n         linker: Some(\"ld\".to_string()),\n+        linker_is_gnu: false,\n         families: vec![\"unix\".to_string()],\n         ..Default::default()\n     }"}, {"sha": "af81bc714c74389fac2ffeb701b08847f834e107", "filename": "compiler/rustc_target/src/spec/linux_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -6,7 +6,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n-        linker_is_gnu: true,\n         has_rpath: true,\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,"}, {"sha": "145aa4a589443f8f946f0bf55217f5b832242db8", "filename": "compiler/rustc_target/src/spec/linux_kernel_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_kernel_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_kernel_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_kernel_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -8,7 +8,6 @@ pub fn opts() -> TargetOptions {\n         // don't use probe-stack=inline-asm until rust#83139 and rust#84667 are resolved\n         stack_probes: StackProbeType::Call,\n         eliminate_frame_pointer: false,\n-        linker_is_gnu: true,\n         position_independent_executables: true,\n         needs_plt: true,\n         relro_level: RelroLevel::Full,"}, {"sha": "dc14e4bdf9428818f277c665a5d10c7476bbdd09", "filename": "compiler/rustc_target/src/spec/mipsel_sony_psp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -21,7 +21,6 @@ pub fn target() -> Target {\n             cpu: \"mips2\".to_string(),\n             executables: true,\n             linker: Some(\"rust-lld\".to_owned()),\n-            linker_is_gnu: true,\n             relocation_model: RelocModel::Static,\n \n             // PSP FPU only supports single precision floats."}, {"sha": "f1bd8ff237d0a9f30f9f7101b94a3786228bcee8", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -1086,7 +1086,7 @@ pub struct TargetOptions {\n     /// Version of DWARF to use if not using the default.\n     /// Useful because some platforms (osx, bsd) only want up to DWARF2.\n     pub dwarf_version: Option<u32>,\n-    /// Whether the linker support GNU-like arguments such as -O. Defaults to false.\n+    /// Whether the linker support GNU-like arguments such as -O. Defaults to true.\n     pub linker_is_gnu: bool,\n     /// The MinGW toolchain has a known issue that prevents it from correctly\n     /// handling COFF object files with more than 2<sup>15</sup> sections. Since each weak\n@@ -1307,7 +1307,7 @@ impl Default for TargetOptions {\n             is_like_fuchsia: false,\n             is_like_wasm: false,\n             dwarf_version: None,\n-            linker_is_gnu: false,\n+            linker_is_gnu: true,\n             allows_weak_linkage: true,\n             has_rpath: false,\n             no_default_libraries: true,"}, {"sha": "f1ed4c154d27251cd5e035ff0b008f5d7c915dee", "filename": "compiler/rustc_target/src/spec/msvc_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmsvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmsvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmsvc_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -16,6 +16,7 @@ pub fn opts() -> TargetOptions {\n         is_like_windows: true,\n         is_like_msvc: true,\n         lld_flavor: LldFlavor::Link,\n+        linker_is_gnu: false,\n         pre_link_args,\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,"}, {"sha": "6bb6083d47c53a75b4e8188950f7c03a45cc6b21", "filename": "compiler/rustc_target/src/spec/netbsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -6,7 +6,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n-        linker_is_gnu: true,\n         no_default_libraries: false,\n         has_rpath: true,\n         position_independent_executables: true,"}, {"sha": "97960a75b095f43a2e6be7f738cd96d5269579f6", "filename": "compiler/rustc_target/src/spec/nvptx64_nvidia_cuda.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnvptx64_nvidia_cuda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnvptx64_nvidia_cuda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnvptx64_nvidia_cuda.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -14,6 +14,7 @@ pub fn target() -> Target {\n             linker_flavor: LinkerFlavor::PtxLinker,\n             // The linker can be installed from `crates.io`.\n             linker: Some(\"rust-ptx-linker\".to_string()),\n+            linker_is_gnu: false,\n \n             // With `ptx-linker` approach, it can be later overridden via link flags.\n             cpu: \"sm_30\".to_string(),"}, {"sha": "29b415e77266e24a1da42ba7cf317e5a3d3b910b", "filename": "compiler/rustc_target/src/spec/openbsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -6,7 +6,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n-        linker_is_gnu: true,\n         has_rpath: true,\n         abi_return_struct_as_int: true,\n         position_independent_executables: true,"}, {"sha": "fcf5db3746d245b03b91c8cfed954a3fbedd9003", "filename": "compiler/rustc_target/src/spec/redox_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fredox_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -7,7 +7,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n-        linker_is_gnu: true,\n         has_rpath: true,\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,"}, {"sha": "bc32b50168884668fd129e5ceb546c67572db5cc", "filename": "compiler/rustc_target/src/spec/solaris_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsolaris_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsolaris_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsolaris_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -8,6 +8,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         families: vec![\"unix\".to_string()],\n         is_like_solaris: true,\n+        linker_is_gnu: false,\n         limit_rdylib_exports: false, // Linker doesn't support this\n         eh_frame_header: false,\n "}, {"sha": "f996009f830633a15e3865641aa7a3c6b597063e", "filename": "compiler/rustc_target/src/spec/thumbv4t_none_eabi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv4t_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv4t_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv4t_none_eabi.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -28,7 +28,6 @@ pub fn target() -> Target {\n         options: TargetOptions {\n             linker_flavor: LinkerFlavor::Ld,\n             linker: Some(\"arm-none-eabi-ld\".to_string()),\n-            linker_is_gnu: true,\n \n             // extra args passed to the external assembler (assuming `arm-none-eabi-as`):\n             // * activate t32/a32 interworking"}, {"sha": "a91e77178655479db52dc679ef338afdb78f079a", "filename": "compiler/rustc_target/src/spec/vxworks_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fvxworks_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fvxworks_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fvxworks_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -10,7 +10,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: vec![\"unix\".to_string()],\n-        linker_is_gnu: true,\n         has_rpath: true,\n         has_elf_tls: true,\n         crt_static_default: true,"}, {"sha": "302139395d31798ef1ec62dc6b25a3911dadb640", "filename": "compiler/rustc_target/src/spec/wasm32_unknown_emscripten.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_emscripten.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -34,7 +34,6 @@ pub fn target() -> Target {\n         // functionality, and a .wasm file.\n         exe_suffix: \".js\".to_string(),\n         linker: None,\n-        linker_is_gnu: true,\n         is_like_emscripten: true,\n         panic_strategy: PanicStrategy::Unwind,\n         post_link_args,"}, {"sha": "35a52896f6fa628e6842da4b68de2029b9a59260", "filename": "compiler/rustc_target/src/spec/windows_gnu_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -66,7 +66,6 @@ pub fn opts() -> TargetOptions {\n         // FIXME(#13846) this should be enabled for windows\n         function_sections: false,\n         linker: Some(\"gcc\".to_string()),\n-        linker_is_gnu: true,\n         dynamic_linking: true,\n         executables: true,\n         dll_prefix: String::new(),"}, {"sha": "06eb33d8d82e97d1f2750c406d31ad4d8f103e1a", "filename": "compiler/rustc_target/src/spec/x86_64_fortanix_unknown_sgx.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e1cd9b95854bec31a4d05992561ef47c0c8b07/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs?ref=21e1cd9b95854bec31a4d05992561ef47c0c8b07", "patch": "@@ -57,7 +57,6 @@ pub fn target() -> Target {\n         vendor: \"fortanix\".into(),\n         linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n         executables: true,\n-        linker_is_gnu: true,\n         linker: Some(\"rust-lld\".to_owned()),\n         max_atomic_width: Some(64),\n         cpu: \"x86-64\".into(),"}]}