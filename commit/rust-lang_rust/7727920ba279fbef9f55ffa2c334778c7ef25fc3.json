{"sha": "7727920ba279fbef9f55ffa2c334778c7ef25fc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Mjc5MjBiYTI3OWZiZWY5ZjU1ZmZhMmMzMzQ3NzhjN2VmMjVmYzM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-19T21:52:20Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-21T02:05:03Z"}, "message": "iterator: add a method for reversing a container\n\nthis works on any container with a mutable double-ended iterator", "tree": {"sha": "d4bcbf70f90cf057a5d30fe656d232d747aef517", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4bcbf70f90cf057a5d30fe656d232d747aef517"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7727920ba279fbef9f55ffa2c334778c7ef25fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7727920ba279fbef9f55ffa2c334778c7ef25fc3", "html_url": "https://github.com/rust-lang/rust/commit/7727920ba279fbef9f55ffa2c334778c7ef25fc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7727920ba279fbef9f55ffa2c334778c7ef25fc3/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b68eedf846e07e093e9e46b781b7a16a49bcb7b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b68eedf846e07e093e9e46b781b7a16a49bcb7b1", "html_url": "https://github.com/rust-lang/rust/commit/b68eedf846e07e093e9e46b781b7a16a49bcb7b1"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "bd706d412881d829d441bfe0f5f8a0ba781ec6f2", "filename": "doc/tutorial-container.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7727920ba279fbef9f55ffa2c334778c7ef25fc3/doc%2Ftutorial-container.md", "raw_url": "https://github.com/rust-lang/rust/raw/7727920ba279fbef9f55ffa2c334778c7ef25fc3/doc%2Ftutorial-container.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-container.md?ref=7727920ba279fbef9f55ffa2c334778c7ef25fc3", "patch": "@@ -319,6 +319,16 @@ for x in it.invert() {\n }\n ~~~\n \n+The `reverse_` method is also available for any double-ended iterator yielding\n+mutable references. It can be used to reverse a container in-place. Note that\n+the trailing underscore is a workaround for issue #5898 and will be removed.\n+\n+~~~\n+let mut ys = [1, 2, 3, 4, 5];\n+ys.mut_iter().reverse_();\n+assert_eq!(ys, [5, 4, 3, 2, 1]);\n+~~~\n+\n ## Random-access iterators\n \n The `RandomAccessIterator` trait represents an iterator offering random access"}, {"sha": "36e62856464aab12e3137baa39dc68dc573c9db4", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7727920ba279fbef9f55ffa2c334778c7ef25fc3/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7727920ba279fbef9f55ffa2c334778c7ef25fc3/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=7727920ba279fbef9f55ffa2c334778c7ef25fc3", "patch": "@@ -24,6 +24,7 @@ use ops::{Add, Mul, Sub};\n use cmp::Ord;\n use clone::Clone;\n use uint;\n+use util;\n \n /// Conversion from an `Iterator`\n pub trait FromIterator<A> {\n@@ -583,6 +584,26 @@ pub trait DoubleEndedIterator<A>: Iterator<A> {\n     }\n }\n \n+/// A double-ended iterator yielding mutable references\n+pub trait MutableDoubleEndedIterator {\n+    // FIXME: #5898: should be called `reverse`\n+    /// Use an iterator to reverse a container in-place\n+    fn reverse_(&mut self);\n+}\n+\n+impl<'self, A, T: DoubleEndedIterator<&'self mut A>> MutableDoubleEndedIterator for T {\n+    // FIXME: #5898: should be called `reverse`\n+    /// Use an iterator to reverse a container in-place\n+    fn reverse_(&mut self) {\n+        loop {\n+            match (self.next(), self.next_back()) {\n+                (Some(x), Some(y)) => util::swap(x, y),\n+                _ => break\n+            }\n+        }\n+    }\n+}\n+\n /// An object implementing random access indexing by `uint`\n ///\n /// A `RandomAccessIterator` should be either infinite or a `DoubleEndedIterator`.\n@@ -2338,4 +2359,11 @@ mod tests {\n         assert_eq!(range_inclusive(0i, 5).collect::<~[int]>(), ~[0i, 1, 2, 3, 4, 5]);\n         assert_eq!(range_inclusive(0i, 5).invert().collect::<~[int]>(), ~[5i, 4, 3, 2, 1, 0]);\n     }\n+\n+    #[test]\n+    fn test_reverse() {\n+        let mut ys = [1, 2, 3, 4, 5];\n+        ys.mut_iter().reverse_();\n+        assert_eq!(ys, [5, 4, 3, 2, 1]);\n+    }\n }"}, {"sha": "7a0346c94fcb1dc67012f664cd56269938d2ece8", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7727920ba279fbef9f55ffa2c334778c7ef25fc3/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7727920ba279fbef9f55ffa2c334778c7ef25fc3/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=7727920ba279fbef9f55ffa2c334778c7ef25fc3", "patch": "@@ -51,8 +51,8 @@ pub use container::{Container, Mutable, Map, MutableMap, Set, MutableSet};\n pub use hash::Hash;\n pub use iter::Times;\n pub use iterator::Extendable;\n-pub use iterator::{Iterator, DoubleEndedIterator};\n-pub use iterator::{ClonableIterator, OrdIterator};\n+pub use iterator::{Iterator, DoubleEndedIterator, ClonableIterator, OrdIterator};\n+pub use iterator::MutableDoubleEndedIterator;\n pub use num::{Num, NumCast, CheckedAdd, CheckedSub, CheckedMul};\n pub use num::{Orderable, Signed, Unsigned, Round};\n pub use num::{Algebraic, Trigonometric, Exponential, Hyperbolic};"}]}