{"sha": "707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwN2NlMmI3OThhZDdiYjZjMWUwZmNlMGRhNTQyZDljYWVmMDdiNTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-01-19T23:51:51Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-01-22T05:41:46Z"}, "message": "Account for labels when suggesting `loop` instead of `while true`", "tree": {"sha": "a4676eaeb8c54e1f7297cf542757b08159cdf596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4676eaeb8c54e1f7297cf542757b08159cdf596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "html_url": "https://github.com/rust-lang/rust/commit/707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc1eee2f256efbd1d3b50b6b090232f81cac6d72", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc1eee2f256efbd1d3b50b6b090232f81cac6d72", "html_url": "https://github.com/rust-lang/rust/commit/dc1eee2f256efbd1d3b50b6b090232f81cac6d72"}], "stats": {"total": 128, "additions": 116, "deletions": 12}, "files": [{"sha": "b37660e4a90d3bb46b8b2656ae078dd55f327f62", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "patch": "@@ -96,18 +96,24 @@ fn pierce_parens(mut expr: &ast::Expr) -> &ast::Expr {\n \n impl EarlyLintPass for WhileTrue {\n     fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &ast::Expr) {\n-        if let ast::ExprKind::While(cond, ..) = &e.kind {\n+        if let ast::ExprKind::While(cond, _, label) = &e.kind {\n             if let ast::ExprKind::Lit(ref lit) = pierce_parens(cond).kind {\n                 if let ast::LitKind::Bool(true) = lit.kind {\n                     if !lit.span.from_expansion() {\n                         let msg = \"denote infinite loops with `loop { ... }`\";\n-                        let condition_span = cx.sess.source_map().guess_head_span(e.span);\n+                        let condition_span = e.span.with_hi(cond.span.hi());\n                         cx.struct_span_lint(WHILE_TRUE, condition_span, |lint| {\n                             lint.build(msg)\n                                 .span_suggestion_short(\n                                     condition_span,\n                                     \"use `loop`\",\n-                                    \"loop\".to_owned(),\n+                                    format!(\n+                                        \"{}loop\",\n+                                        label.map_or_else(String::new, |label| format!(\n+                                            \"{}: \",\n+                                            label.ident,\n+                                        ))\n+                                    ),\n                                     Applicability::MachineApplicable,\n                                 )\n                                 .emit();"}, {"sha": "897fd172b29f34bc8fbfafe520b557f18ffb7999", "filename": "src/test/ui/issues/issue-1962.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-1962.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-1962.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1962.fixed?ref=707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "patch": "@@ -3,8 +3,8 @@\n \n fn main() {\n     let mut i = 0;\n-    loop { //~ ERROR denote infinite loops with `loop\n+    'a: loop { //~ ERROR denote infinite loops with `loop\n         i += 1;\n-        if i == 5 { break; }\n+        if i == 5 { break 'a; }\n     }\n }"}, {"sha": "71e874100874f4fba0367ae8a2a093f124fc8e3b", "filename": "src/test/ui/issues/issue-1962.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-1962.rs", "raw_url": "https://github.com/rust-lang/rust/raw/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-1962.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1962.rs?ref=707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "patch": "@@ -3,8 +3,8 @@\n \n fn main() {\n     let mut i = 0;\n-    while true { //~ ERROR denote infinite loops with `loop\n+    'a: while true { //~ ERROR denote infinite loops with `loop\n         i += 1;\n-        if i == 5 { break; }\n+        if i == 5 { break 'a; }\n     }\n }"}, {"sha": "4c32a4cf3dd5946ac7bfae466c77724938ccb2fe", "filename": "src/test/ui/issues/issue-1962.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-1962.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-1962.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1962.stderr?ref=707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "patch": "@@ -1,8 +1,8 @@\n error: denote infinite loops with `loop { ... }`\n   --> $DIR/issue-1962.rs:6:5\n    |\n-LL |     while true {\n-   |     ^^^^^^^^^^ help: use `loop`\n+LL |     'a: while true {\n+   |     ^^^^^^^^^^^^^^ help: use `loop`\n    |\n    = note: requested on the command line with `-D while-true`\n "}, {"sha": "59ef28481d0e6e35b05d20a0d032c4b8036040c5", "filename": "src/test/ui/issues/issue-27042.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-27042.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Fissues%2Fissue-27042.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27042.stderr?ref=707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "patch": "@@ -4,7 +4,7 @@ warning: denote infinite loops with `loop { ... }`\n LL | /         'b:\n LL | |\n LL | |         while true { break }; // but here we cite the whole loop\n-   | |____________________________^ help: use `loop`\n+   | |__________________^ help: use `loop`\n    |\n    = note: `#[warn(while_true)]` on by default\n "}, {"sha": "7a8ff0360f6eaf83b0420a771f291568c3f784dc", "filename": "src/test/ui/label/label_misspelled.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.rs?ref=707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "patch": "@@ -16,3 +16,25 @@ fn main() {\n         //~^ ERROR cannot find value `for_loop` in this scope\n     };\n }\n+\n+fn foo() {\n+    'LOOP: loop {\n+        break LOOP;\n+        //~^ ERROR cannot find value `LOOP` in this scope\n+    };\n+    'while_loop: while true { //~ WARN denote infinite loops with\n+        break while_loop;\n+        //~^ ERROR cannot find value `while_loop` in this scope\n+        //~| ERROR `break` with value from a `while` loop\n+    };\n+    'while_let: while let Some(_) = Some(()) {\n+        break while_let;\n+        //~^ ERROR cannot find value `while_let` in this scope\n+        //~| ERROR `break` with value from a `while` loop\n+    }\n+    'for_loop: for _ in 0..3 {\n+        break for_loop;\n+        //~^ ERROR cannot find value `for_loop` in this scope\n+        //~| ERROR `break` with value from a `for` loop\n+    };\n+}"}, {"sha": "8282d3ada32f29a69b00239904c39aeeb29e5b8b", "filename": "src/test/ui/label/label_misspelled.stderr", "status": "modified", "additions": 78, "deletions": 2, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/707ce2b798ad7bb6c1e0fce0da542d9caef07b56/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel%2Flabel_misspelled.stderr?ref=707ce2b798ad7bb6c1e0fce0da542d9caef07b56", "patch": "@@ -34,6 +34,42 @@ LL |         for_loop;\n    |         not found in this scope\n    |         help: a label with a similar name exists: `'for_loop`\n \n+error[E0425]: cannot find value `LOOP` in this scope\n+  --> $DIR/label_misspelled.rs:22:15\n+   |\n+LL |         break LOOP;\n+   |               ^^^^\n+   |               |\n+   |               not found in this scope\n+   |               help: a label with a similar name exists: `'LOOP`\n+\n+error[E0425]: cannot find value `while_loop` in this scope\n+  --> $DIR/label_misspelled.rs:26:15\n+   |\n+LL |         break while_loop;\n+   |               ^^^^^^^^^^\n+   |               |\n+   |               not found in this scope\n+   |               help: a label with a similar name exists: `'while_loop`\n+\n+error[E0425]: cannot find value `while_let` in this scope\n+  --> $DIR/label_misspelled.rs:31:15\n+   |\n+LL |         break while_let;\n+   |               ^^^^^^^^^\n+   |               |\n+   |               not found in this scope\n+   |               help: a label with a similar name exists: `'while_let`\n+\n+error[E0425]: cannot find value `for_loop` in this scope\n+  --> $DIR/label_misspelled.rs:36:15\n+   |\n+LL |         break for_loop;\n+   |               ^^^^^^^^\n+   |               |\n+   |               not found in this scope\n+   |               help: a label with a similar name exists: `'for_loop`\n+\n warning: denote infinite loops with `loop { ... }`\n   --> $DIR/label_misspelled.rs:6:5\n    |\n@@ -42,6 +78,46 @@ LL |     'while_loop: while true {\n    |\n    = note: `#[warn(while_true)]` on by default\n \n-error: aborting due to 4 previous errors; 1 warning emitted\n+warning: denote infinite loops with `loop { ... }`\n+  --> $DIR/label_misspelled.rs:25:5\n+   |\n+LL |     'while_loop: while true {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use `loop`\n+\n+error[E0571]: `break` with value from a `while` loop\n+  --> $DIR/label_misspelled.rs:26:9\n+   |\n+LL |         break while_loop;\n+   |         ^^^^^^^^^^^^^^^^ can only break with a value inside `loop` or breakable block\n+   |\n+help: instead, use `break` on its own without a value inside this `while` loop\n+   |\n+LL |         break;\n+   |         ^^^^^\n+\n+error[E0571]: `break` with value from a `while` loop\n+  --> $DIR/label_misspelled.rs:31:9\n+   |\n+LL |         break while_let;\n+   |         ^^^^^^^^^^^^^^^ can only break with a value inside `loop` or breakable block\n+   |\n+help: instead, use `break` on its own without a value inside this `while` loop\n+   |\n+LL |         break;\n+   |         ^^^^^\n+\n+error[E0571]: `break` with value from a `for` loop\n+  --> $DIR/label_misspelled.rs:36:9\n+   |\n+LL |         break for_loop;\n+   |         ^^^^^^^^^^^^^^ can only break with a value inside `loop` or breakable block\n+   |\n+help: instead, use `break` on its own without a value inside this `for` loop\n+   |\n+LL |         break;\n+   |         ^^^^^\n+\n+error: aborting due to 11 previous errors; 2 warnings emitted\n \n-For more information about this error, try `rustc --explain E0425`.\n+Some errors have detailed explanations: E0425, E0571.\n+For more information about an error, try `rustc --explain E0425`."}]}