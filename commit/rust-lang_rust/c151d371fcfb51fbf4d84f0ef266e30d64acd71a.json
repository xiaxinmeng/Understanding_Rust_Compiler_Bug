{"sha": "c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNTFkMzcxZmNmYjUxZmJmNGQ4NGYwZWYyNjZlMzBkNjRhY2Q3MWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-28T04:56:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-28T04:56:04Z"}, "message": "auto merge of #9562 : alexcrichton/rust/snapshots, r=thestinger", "tree": {"sha": "f6bc067e9c637d9fbf70b418d579e4448eba74c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6bc067e9c637d9fbf70b418d579e4448eba74c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "html_url": "https://github.com/rust-lang/rust/commit/c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2f8ba8c9dc2e145859fa761e7e912dbf3cf598", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a2f8ba8c9dc2e145859fa761e7e912dbf3cf598", "html_url": "https://github.com/rust-lang/rust/commit/4a2f8ba8c9dc2e145859fa761e7e912dbf3cf598"}, {"sha": "46aaf5128df346b2a8c16524acc9c3703705459b", "url": "https://api.github.com/repos/rust-lang/rust/commits/46aaf5128df346b2a8c16524acc9c3703705459b", "html_url": "https://github.com/rust-lang/rust/commit/46aaf5128df346b2a8c16524acc9c3703705459b"}], "stats": {"total": 58, "additions": 8, "deletions": 50}, "files": [{"sha": "27a2af95a2a37efef9acdb38a3e716b5f5e8b1c1", "filename": "src/libstd/logging.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Flibstd%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Flibstd%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flogging.rs?ref=c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "patch": "@@ -37,16 +37,7 @@ pub fn console_off() {\n     rt::logging::console_off();\n }\n \n-#[cfg(stage0)]\n-#[doc(hidden)]\n-pub fn log(_level: u32, s: ~str) {\n-    // this is a terrible approximation, but it gets the job done (for stage0 at\n-    // least)\n-    ::io::println(s);\n-}\n-\n #[allow(missing_doc)]\n-#[cfg(not(stage0))]\n pub fn log(_level: u32, args: &fmt::Arguments) {\n     use rt::task::Task;\n     use rt::local::Local;"}, {"sha": "e7876cf65716f4272febcad37acab98b05788b1d", "filename": "src/libstd/rt/crate_map.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Flibstd%2Frt%2Fcrate_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Flibstd%2Frt%2Fcrate_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcrate_map.rs?ref=c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "patch": "@@ -10,7 +10,6 @@\n \n \n use libc::c_char;\n-#[cfg(stage0)] use libc::c_void;\n use ptr;\n use ptr::RawPtr;\n use vec;\n@@ -40,17 +39,6 @@ struct CrateMapV0 {\n     children: [*CrateMap, ..1]\n }\n \n-#[cfg(stage0)]\n-struct CrateMap {\n-    version: i32,\n-    annihilate_fn: *c_void,\n-    entries: *ModEntry,\n-    /// a dynamically sized struct, where all pointers to children are listed adjacent\n-    /// to the struct, terminated with NULL\n-    children: [*CrateMap, ..1]\n-}\n-\n-#[cfg(not(stage0))]\n struct CrateMap {\n     version: i32,\n     entries: *ModEntry,"}, {"sha": "66ec0ae3417b24c0760e462e7e6d5a45d8299af8", "filename": "src/libstd/sys.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Flibstd%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Flibstd%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys.rs?ref=c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "patch": "@@ -125,36 +125,7 @@ impl FailWithCause for &'static str {\n     }\n }\n \n-// This stage0 version is incredibly wrong.\n-#[cfg(stage0)]\n-pub fn begin_unwind_(msg: *c_char, file: *c_char, line: size_t) -> ! {\n-    use option::{Some, None};\n-    use rt::in_green_task_context;\n-    use rt::task::Task;\n-    use rt::local::Local;\n-    use rt::logging::Logger;\n-    use str::Str;\n-\n-    unsafe {\n-        let msg = str::raw::from_c_str(msg);\n-        let file = str::raw::from_c_str(file);\n-        if in_green_task_context() {\n-            rterrln!(\"task failed at '%s', %s:%i\", msg, file, line as int);\n-        } else {\n-            rterrln!(\"failed in non-task context at '%s', %s:%i\",\n-                     msg, file, line as int);\n-        }\n-\n-        let task: *mut Task = Local::unsafe_borrow();\n-        if (*task).unwinder.unwinding {\n-            rtabort!(\"unwinding again\");\n-        }\n-        (*task).unwinder.begin_unwind();\n-    }\n-}\n-\n // FIXME #4427: Temporary until rt::rt_fail_ goes away\n-#[cfg(not(stage0))]\n pub fn begin_unwind_(msg: *c_char, file: *c_char, line: size_t) -> ! {\n     use rt::in_green_task_context;\n     use rt::task::Task;"}, {"sha": "3e4a67420604746915daafbdf5ec5f27a1a6155f", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c151d371fcfb51fbf4d84f0ef266e30d64acd71a/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=c151d371fcfb51fbf4d84f0ef266e30d64acd71a", "patch": "@@ -1,3 +1,11 @@\n+S 2013-09-26 1434b4b\n+  freebsd-x86_64 e0493c3b79e71487452dfb2155d6c972ca6c5822\n+  linux-i386 9b38e3773c097656549a109b01589e057abf23a7\n+  linux-x86_64 26c54870b6ea586c37435e319c8861f7f9539c82\n+  macos-i386 ceb98f65e53668cde984160582ab2a47ed909c16\n+  macos-x86_64 834efd21b948971dc0ddacd96972d1a354fdbbc3\n+  winnt-i386 b2be7e7b15c0bfce01812787e69d277c9e5e5803\n+\n S 2013-09-23 348d844\n   freebsd-x86_64 8b99ec197e441f013c5ba0788f8bcfa689bfc75e\n   linux-i386 9a237fcbe4d29986a360b1dc8984da3b946463e6"}]}