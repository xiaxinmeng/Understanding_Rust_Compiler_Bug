{"sha": "5a18734338518dbb749ec89a261dffc296a979dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMTg3MzQzMzg1MThkYmI3NDllYzg5YTI2MWRmZmMyOTZhOTc5ZGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-26T15:28:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-26T15:28:04Z"}, "message": "Fix config switching", "tree": {"sha": "b0ab4365f16a7ce628bf797d8ca8f0ee0c948791", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0ab4365f16a7ce628bf797d8ca8f0ee0c948791"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a18734338518dbb749ec89a261dffc296a979dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a18734338518dbb749ec89a261dffc296a979dc", "html_url": "https://github.com/rust-lang/rust/commit/5a18734338518dbb749ec89a261dffc296a979dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a18734338518dbb749ec89a261dffc296a979dc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "html_url": "https://github.com/rust-lang/rust/commit/a0a475546b6f50644a1fa2a1e8586afde1ec82eb"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "ec71f8b29185e3675665bf0adb2a76e79012b33f", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5a18734338518dbb749ec89a261dffc296a979dc/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a18734338518dbb749ec89a261dffc296a979dc/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=5a18734338518dbb749ec89a261dffc296a979dc", "patch": "@@ -1,5 +1,5 @@\n //! Project loading & configuration updates\n-use std::sync::Arc;\n+use std::{mem, sync::Arc};\n \n use crossbeam_channel::unbounded;\n use flycheck::FlycheckHandle;\n@@ -14,12 +14,14 @@ use crate::{\n };\n \n impl GlobalState {\n-    pub(crate) fn update_configuration(&mut self, new_config: Config) {\n-        self.analysis_host.update_lru_capacity(new_config.lru_capacity);\n-        if new_config.flycheck != self.config.flycheck {\n+    pub(crate) fn update_configuration(&mut self, config: Config) {\n+        let old_config = mem::replace(&mut self.config, config);\n+        if self.config.lru_capacity != old_config.lru_capacity {\n+            self.analysis_host.update_lru_capacity(old_config.lru_capacity);\n+        }\n+        if self.config.flycheck != old_config.flycheck {\n             self.reload_flycheck();\n         }\n-        self.config = new_config;\n     }\n     pub(crate) fn reload(&mut self) {\n         let workspaces = {"}]}