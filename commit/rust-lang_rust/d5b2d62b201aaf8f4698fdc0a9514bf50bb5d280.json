{"sha": "d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YjJkNjJiMjAxYWFmOGY0Njk4ZmRjMGE5NTE0YmY1MGJiNWQyODA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-09-13T22:06:21Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-09-13T22:06:41Z"}, "message": "Add build-system mechanisms for running benchmarks under 'perf'.", "tree": {"sha": "797c9a58c6e765b291e36f55735825ceef2e9f6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/797c9a58c6e765b291e36f55735825ceef2e9f6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "html_url": "https://github.com/rust-lang/rust/commit/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c84b8e90b843ed65a29518432c5d490688560012", "url": "https://api.github.com/repos/rust-lang/rust/commits/c84b8e90b843ed65a29518432c5d490688560012", "html_url": "https://github.com/rust-lang/rust/commit/c84b8e90b843ed65a29518432c5d490688560012"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "bdb55e1c574bbc336208c689f736137d13026536", "filename": "Makefile.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "patch": "@@ -271,11 +271,17 @@ endif\n \n ifneq ($(strip $(findstring check,$(MAKECMDGOALS)) \\\n                $(findstring test,$(MAKECMDGOALS))  \\\n+               $(findstring perf,$(MAKECMDGOALS))  \\\n                $(findstring tidy,$(MAKECMDGOALS))),)\n   CFG_INFO := $(info cfg: including test rules)\n   include $(CFG_SRC_DIR)/mk/tests.mk\n endif\n \n+ifneq ($(findstring perf,$(MAKECMDGOALS)),)\n+  CFG_INFO := $(info cfg: including perf rules)\n+  include $(CFG_SRC_DIR)/mk/perf.mk\n+endif\n+\n ifneq ($(findstring clean,$(MAKECMDGOALS)),)\n   CFG_INFO := $(info cfg: including clean rules)\n   include $(CFG_SRC_DIR)/mk/clean.mk"}, {"sha": "f6b6d8f5c4a374710b1a029a52777a52a06e5231", "filename": "configure", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/configure", "raw_url": "https://github.com/rust-lang/rust/raw/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "patch": "@@ -183,7 +183,8 @@ for i in \\\n     rustllvm \\\n     dl stage0 stage1 stage2 stage3 \\\n     stage0/lib stage1/lib stage2/lib stage3/lib \\\n-    test/run-pass test/run-fail test/compile-fail test/bench test/pretty\n+    test/run-pass test/run-fail test/compile-fail \\\n+    test/bench test/perf test/pretty\n do\n     make_dir $i\n done\n@@ -205,6 +206,7 @@ probe CFG_CLANG            clang++\n probe CFG_GCC              gcc\n probe CFG_LLVM_CONFIG      llvm-config\n probe CFG_VALGRIND         valgrind\n+probe CFG_PERF             perf\n probe CFG_MAKEINFO         makeinfo\n probe CFG_TEXI2PDF         texi2pdf\n probe CFG_TEX              tex"}, {"sha": "9e7ffc6d665b7c9ac4d6e001b1343ac0ec84f114", "filename": "mk/perf.mk", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/mk%2Fperf.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/mk%2Fperf.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fperf.mk?ref=d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "patch": "@@ -0,0 +1 @@\n+perf: check-stage2-perf"}, {"sha": "c7cd36331fb021e7e4fd079ee7abe0aeaf35f1e9", "filename": "mk/platform.mk", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "patch": "@@ -34,6 +34,35 @@ ifeq ($(CFG_OSTYPE), Linux)\n   CFG_UNIXY := 1\n   CFG_LDENV := LD_LIBRARY_PATH\n   CFG_DEF_SUFFIX := .linux.def\n+  ifdef CFG_PERF\n+\tCFG_PERF_TOOL :=\\\n+\t  $(CFG_PERF) \\\n+\t  stat \\\n+\t  -e cycles \\\n+\t  -e instructions \\\n+\t  -e cache-references \\\n+\t  -e cache-misses \\\n+\t  -e branches \\\n+\t  -e branch-misses \\\n+\t  -e bus-cycles \\\n+\t  -e task-clock \\\n+\t  -e page-faults \\\n+\t  -e context-switches \\\n+\t  -e cpu-migrations \\\n+\t  -e kmem:mm_page_alloc \\\n+\t  -e syscalls:sys_enter \\\n+\t  -e sched:sched_switch \\\n+\t  -e fs:do_sys_open \\\n+\t  -i \\\n+\t  -r 10\n+  else\n+    ifdef CFG_VALGRIND\n+      CFG_PERF_TOOL :=\\\n+        $(CFG_VALGRIND) --tool=cachegrind --cache-sim=yes --branch-sim=yes\n+    else\n+      CFG_PERF_TOOL := /usr/bin/time --verbose\n+    endif\n+  endif\n endif\n \n ifeq ($(CFG_OSTYPE), Darwin)"}, {"sha": "6b28c16b2d13631ba6e41950fde6dc4fc28c3754", "filename": "mk/tests.mk", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=d5b2d62b201aaf8f4698fdc0a9514bf50bb5d280", "patch": "@@ -15,10 +15,15 @@ CFAIL_RS := $(wildcard $(S)src/test/compile-fail/*.rs)\n BENCH_RS := $(wildcard $(S)src/test/bench/*.rs)\n PRETTY_RS := $(wildcard $(S)src/test/pretty/*.rs)\n \n+# perf tests are the same as bench tests only they run under\n+# a performance monitor.\n+PERF_RS := $(wildcard $(S)src/test/bench/*.rs)\n+\n RPASS_TESTS := $(RPASS_RC) $(RPASS_RS)\n RFAIL_TESTS := $(RFAIL_RC) $(RFAIL_RS)\n CFAIL_TESTS := $(CFAIL_RC) $(CFAIL_RS)\n BENCH_TESTS := $(BENCH_RS)\n+PERF_TESTS := $(PERF_RS)\n PRETTY_TESTS := $(PRETTY_RS)\n \n FT := run_pass_stage2\n@@ -40,6 +45,11 @@ ifdef CFG_VALGRIND\n   CTEST_RUNTOOL = --runtool \"$(CFG_VALGRIND)\"\n endif\n \n+# Arguments to the perf tests\n+ifdef CFG_PERF_TOOL\n+  CTEST_PERF_RUNTOOL = --runtool \"$(CFG_PERF_TOOL)\"\n+endif\n+\n CTEST_TESTARGS := $(TESTARGS)\n \n ifdef VERBOSE\n@@ -150,7 +160,7 @@ test/rustctest.stage$(2).out.tmp: test/rustctest.stage$(2)$$(X)\n \t$$(Q)touch $$@\n \n \n-# Rules for the cfail/rfail/rpass/bench test runner\n+# Rules for the cfail/rfail/rpass/bench/perf test runner\n \n check-stage$(2)-cfail: test/compile-fail.stage$(2).out \\\n \n@@ -160,6 +170,8 @@ check-stage$(2)-rpass: test/run-pass.stage$(2).out \\\n \n check-stage$(2)-bench: test/bench.stage$(2).out \\\n \n+check-stage$(2)-perf: test/perf.stage$(2).out \\\n+\n check-stage$(2)-pretty-rpass: test/pretty-rpass.stage$(2).out \\\n \n check-stage$(2)-pretty-rfail: test/pretty-rfail.stage$(2).out \\\n@@ -203,6 +215,12 @@ BENCH_ARGS$(2) := $$(CTEST_COMMON_ARGS$(2)) \\\n                   --mode run-pass \\\n                   $$(CTEST_RUNTOOL) \\\n \n+PERF_ARGS$(2) := $$(CTEST_COMMON_ARGS$(2)) \\\n+                  --src-base $(S)src/test/bench/ \\\n+                  --build-base test/perf/ \\\n+                  --mode run-pass \\\n+                  $$(CTEST_PERF_RUNTOOL) \\\n+\n PRETTY_RPASS_ARGS$(2) := $$(CTEST_COMMON_ARGS$(2)) \\\n                          --src-base $$(S)src/test/run-pass/ \\\n                          --build-base test/run-pass/ \\\n@@ -253,6 +271,12 @@ test/bench.stage$(2).out.tmp: test/compiletest.stage$(2)$$(X) \\\n \t$$(Q)$$(call CFG_RUN_CTEST,$(2),$$<) $$(BENCH_ARGS$(2))\n \t$$(Q)touch $$@\n \n+test/perf.stage$(2).out.tmp: test/compiletest.stage$(2)$$(X) \\\n+                            $$(BENCH_TESTS)\n+\t@$$(call E, perf: $$<)\n+\t$$(Q)$$(call CFG_RUN_CTEST,$(2),$$<) $$(PERF_ARGS$(2))\n+\t$$(Q)touch $$@\n+\n test/pretty-rpass.stage$(2).out.tmp: test/compiletest.stage$(2)$$(X) \\\n                                      $$(RPASS_TESTS)\n \t@$$(call E, run: $$<)"}]}