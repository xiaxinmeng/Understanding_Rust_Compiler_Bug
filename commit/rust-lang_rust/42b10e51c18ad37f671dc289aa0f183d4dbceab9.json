{"sha": "42b10e51c18ad37f671dc289aa0f183d4dbceab9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYjEwZTUxYzE4YWQzN2Y2NzFkYzI4OWFhMGYxODNkNGRiY2VhYjk=", "commit": {"author": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2020-03-24T13:33:35Z"}, "committer": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2020-03-24T17:35:40Z"}, "message": "must_use on split_off\n\n#70194", "tree": {"sha": "61b09b23fd2e88dcd3f7234017304adefca17df6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61b09b23fd2e88dcd3f7234017304adefca17df6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42b10e51c18ad37f671dc289aa0f183d4dbceab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42b10e51c18ad37f671dc289aa0f183d4dbceab9", "html_url": "https://github.com/rust-lang/rust/commit/42b10e51c18ad37f671dc289aa0f183d4dbceab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42b10e51c18ad37f671dc289aa0f183d4dbceab9/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "374ab25585f0a817fe7bd6986737f12347b12d0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/374ab25585f0a817fe7bd6986737f12347b12d0b", "html_url": "https://github.com/rust-lang/rust/commit/374ab25585f0a817fe7bd6986737f12347b12d0b"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "69284fbf1b37db7b89b26052d667007e252281d9", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42b10e51c18ad37f671dc289aa0f183d4dbceab9/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b10e51c18ad37f671dc289aa0f183d4dbceab9/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=42b10e51c18ad37f671dc289aa0f183d4dbceab9", "patch": "@@ -1876,6 +1876,7 @@ impl<T> VecDeque<T> {\n     /// assert_eq!(buf2, [2, 3]);\n     /// ```\n     #[inline]\n+    #[must_use = \"use `.truncate()` if you don't need the other half\"]\n     #[stable(feature = \"split_off\", since = \"1.4.0\")]\n     pub fn split_off(&mut self, at: usize) -> Self {\n         let len = self.len();"}, {"sha": "7c89d38caa4e64dbd3ad7a0f1d445fff50870bc4", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42b10e51c18ad37f671dc289aa0f183d4dbceab9/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b10e51c18ad37f671dc289aa0f183d4dbceab9/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=42b10e51c18ad37f671dc289aa0f183d4dbceab9", "patch": "@@ -1461,6 +1461,7 @@ impl String {\n     /// ```\n     #[inline]\n     #[stable(feature = \"string_split_off\", since = \"1.16.0\")]\n+    #[must_use = \"use `.truncate()` if you don't need the other half\"]\n     pub fn split_off(&mut self, at: usize) -> String {\n         assert!(self.is_char_boundary(at));\n         let other = self.vec.split_off(at);"}, {"sha": "d2f09eb4a75688fe1119cb4a3aab288999bd93c4", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42b10e51c18ad37f671dc289aa0f183d4dbceab9/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b10e51c18ad37f671dc289aa0f183d4dbceab9/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=42b10e51c18ad37f671dc289aa0f183d4dbceab9", "patch": "@@ -266,14 +266,14 @@ fn test_split_off_empty() {\n fn test_split_off_past_end() {\n     let orig = \"Hello, world!\";\n     let mut split = String::from(orig);\n-    split.split_off(orig.len() + 1);\n+    let _ = split.split_off(orig.len() + 1);\n }\n \n #[test]\n #[should_panic]\n fn test_split_off_mid_char() {\n     let mut orig = String::from(\"\u5c71\");\n-    orig.split_off(1);\n+    let _ = orig.split_off(1);\n }\n \n #[test]"}]}