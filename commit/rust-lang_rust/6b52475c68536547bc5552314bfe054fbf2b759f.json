{"sha": "6b52475c68536547bc5552314bfe054fbf2b759f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNTI0NzVjNjg1MzY1NDdiYzU1NTIzMTRiZmUwNTRmYmYyYjc1OWY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-19T06:16:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-19T06:16:08Z"}, "message": "Rollup merge of #80133 - Aaron1011:fix/const-mut-deref, r=estebank\n\nSuppress `CONST_ITEM_MUTATION` lint if a dereference occurs anywhere\n\nFixes #79971", "tree": {"sha": "f1215c4c67df71fe62e7f65125be8bc1beedfccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1215c4c67df71fe62e7f65125be8bc1beedfccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b52475c68536547bc5552314bfe054fbf2b759f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf3ZqpCRBK7hj4Ov3rIwAAdHIIAAgNQFj956PxYvuFH6Q1exfT\ntAj0nlj8wTj6gj9qqoMusiv3tWlAUtw985N+XB/IRB8nKYjKGsElkvYdyTFjwbXr\nEqMXrqhv4pP5zAx3dj+mCWCjXvBbe3d+twmhtvT6MbHC87vZMtkAaHN/EhsSzfQq\nHkeAoPE5ccPJHJpNwqeYgaD9RT1pysSAgTnSi7wZFj1vlCkm22Oi9QdQVOy8WxUe\nu2NzZeSqEFEfg8986tqJ26YaqmnfPtE7bzcoE1e+qWXYs04V/VrM/gxelQpbgLfs\nuOGziVuDq5DgkLqWVkJaUfWeBZAb6/7RmqTnVDu+XjH+ndtEcZAL9Es5iaSWgrM=\n=QD+2\n-----END PGP SIGNATURE-----\n", "payload": "tree f1215c4c67df71fe62e7f65125be8bc1beedfccf\nparent 904c4c6df789660c48b1f016dc7b090943cce09c\nparent dea13632a8e8f90febe3de17c740498285397936\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1608358568 +0900\ncommitter GitHub <noreply@github.com> 1608358568 +0900\n\nRollup merge of #80133 - Aaron1011:fix/const-mut-deref, r=estebank\n\nSuppress `CONST_ITEM_MUTATION` lint if a dereference occurs anywhere\n\nFixes #79971\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b52475c68536547bc5552314bfe054fbf2b759f", "html_url": "https://github.com/rust-lang/rust/commit/6b52475c68536547bc5552314bfe054fbf2b759f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b52475c68536547bc5552314bfe054fbf2b759f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "904c4c6df789660c48b1f016dc7b090943cce09c", "url": "https://api.github.com/repos/rust-lang/rust/commits/904c4c6df789660c48b1f016dc7b090943cce09c", "html_url": "https://github.com/rust-lang/rust/commit/904c4c6df789660c48b1f016dc7b090943cce09c"}, {"sha": "dea13632a8e8f90febe3de17c740498285397936", "url": "https://api.github.com/repos/rust-lang/rust/commits/dea13632a8e8f90febe3de17c740498285397936", "html_url": "https://github.com/rust-lang/rust/commit/dea13632a8e8f90febe3de17c740498285397936"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "e2d50ba034ad3f65f80633fed0e848a40c90a72f", "filename": "compiler/rustc_mir/src/transform/check_const_item_mutation.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b52475c68536547bc5552314bfe054fbf2b759f/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b52475c68536547bc5552314bfe054fbf2b759f/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs?ref=6b52475c68536547bc5552314bfe054fbf2b759f", "patch": "@@ -66,12 +66,14 @@ impl<'a, 'tcx> ConstMutationChecker<'a, 'tcx> {\n         location: Location,\n         decorate: impl for<'b> FnOnce(LintDiagnosticBuilder<'b>) -> DiagnosticBuilder<'b>,\n     ) {\n-        // Don't lint on borrowing/assigning to a dereference\n-        // e.g:\n+        // Don't lint on borrowing/assigning when a dereference is involved.\n+        // If we 'leave' the temporary via a dereference, we must\n+        // be modifying something else\n         //\n         // `unsafe { *FOO = 0; *BAR.field = 1; }`\n         // `unsafe { &mut *FOO }`\n-        if !matches!(place.projection.last(), Some(PlaceElem::Deref)) {\n+        // `unsafe { (*ARRAY)[0] = val; }\n+        if !place.projection.iter().any(|p| matches!(p, PlaceElem::Deref)) {\n             let source_info = self.body.source_info(location);\n             let lint_root = self.body.source_scopes[source_info.scope]\n                 .local_data"}, {"sha": "4bf5e0a9e212a2e38f0627c6e4dc7ca71b001220", "filename": "src/test/ui/lint/lint-const-item-mutation.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b52475c68536547bc5552314bfe054fbf2b759f/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b52475c68536547bc5552314bfe054fbf2b759f/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.rs?ref=6b52475c68536547bc5552314bfe054fbf2b759f", "patch": "@@ -30,6 +30,8 @@ const MUTABLE: Mutable = Mutable { msg: \"\" };\n const MUTABLE2: Mutable2 = Mutable2 { msg: \"\", other: String::new() };\n const VEC: Vec<i32> = Vec::new();\n const PTR: *mut () = 1 as *mut _;\n+const PTR_TO_ARRAY: *mut [u32; 4] = 0x12345678 as _;\n+const ARRAY_OF_PTR: [*mut u32; 1] = [1 as *mut _];\n \n fn main() {\n     ARRAY[0] = 5; //~ WARN attempting to modify\n@@ -55,4 +57,10 @@ fn main() {\n     // Test that we don't warn when converting a raw pointer\n     // into a mutable reference\n     unsafe { &mut *PTR };\n+\n+    // Test that we don't warn when there's a dereference involved.\n+    // If we ever 'leave' the const via a deference, we're going\n+    // to end up modifying something other than the temporary\n+    unsafe { (*PTR_TO_ARRAY)[0] = 1 };\n+    unsafe { *ARRAY_OF_PTR[0] = 25; }\n }"}, {"sha": "74505eeb987c6613ad82e514dedfcb5413ab50a2", "filename": "src/test/ui/lint/lint-const-item-mutation.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6b52475c68536547bc5552314bfe054fbf2b759f/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b52475c68536547bc5552314bfe054fbf2b759f/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-const-item-mutation.stderr?ref=6b52475c68536547bc5552314bfe054fbf2b759f", "patch": "@@ -1,5 +1,5 @@\n warning: attempting to modify a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:35:5\n+  --> $DIR/lint-const-item-mutation.rs:37:5\n    |\n LL |     ARRAY[0] = 5;\n    |     ^^^^^^^^^^^^\n@@ -13,7 +13,7 @@ LL | const ARRAY: [u8; 1] = [25];\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attempting to modify a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:36:5\n+  --> $DIR/lint-const-item-mutation.rs:38:5\n    |\n LL |     MY_STRUCT.field = false;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attempting to modify a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:37:5\n+  --> $DIR/lint-const-item-mutation.rs:39:5\n    |\n LL |     MY_STRUCT.inner_array[0] = 'b';\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -39,7 +39,7 @@ LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: taking a mutable reference to a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:38:5\n+  --> $DIR/lint-const-item-mutation.rs:40:5\n    |\n LL |     MY_STRUCT.use_mut();\n    |     ^^^^^^^^^^^^^^^^^^^\n@@ -58,7 +58,7 @@ LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: taking a mutable reference to a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:39:5\n+  --> $DIR/lint-const-item-mutation.rs:41:5\n    |\n LL |     &mut MY_STRUCT;\n    |     ^^^^^^^^^^^^^^\n@@ -72,7 +72,7 @@ LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: taking a mutable reference to a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:40:5\n+  --> $DIR/lint-const-item-mutation.rs:42:5\n    |\n LL |     (&mut MY_STRUCT).use_mut();\n    |     ^^^^^^^^^^^^^^^^\n@@ -86,7 +86,7 @@ LL | const MY_STRUCT: MyStruct = MyStruct { field: true, inner_array: ['a'], raw\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attempting to modify a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:52:5\n+  --> $DIR/lint-const-item-mutation.rs:54:5\n    |\n LL |     MUTABLE2.msg = \"wow\";\n    |     ^^^^^^^^^^^^^^^^^^^^\n@@ -99,7 +99,7 @@ LL | const MUTABLE2: Mutable2 = Mutable2 { msg: \"\", other: String::new() };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: taking a mutable reference to a `const` item\n-  --> $DIR/lint-const-item-mutation.rs:53:5\n+  --> $DIR/lint-const-item-mutation.rs:55:5\n    |\n LL |     VEC.push(0);\n    |     ^^^^^^^^^^^"}]}