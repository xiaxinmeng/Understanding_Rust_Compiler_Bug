{"sha": "98e801ac0be56d20dfdecb235cf912c58f9a9531", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZTgwMWFjMGJlNTZkMjBkZmRlY2IyMzVjZjkxMmM1OGY5YTk1MzE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-22T16:26:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-22T16:26:17Z"}, "message": "Rollup merge of #50945 - stjepang:stabilize-from-ref, r=SimonSapin\n\nStabilize feature from_ref\n\nFunction `from_ref_mut` is now renamed to `from_mut`, as discussed in #45703.\n\nCloses #45703.\n\nr? @SimonSapin", "tree": {"sha": "f5974a1802a4b376b195d029bb67d8b07466bfd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5974a1802a4b376b195d029bb67d8b07466bfd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98e801ac0be56d20dfdecb235cf912c58f9a9531", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbBESpCRBK7hj4Ov3rIwAAdHIIABo9jCMagFqn4iqCXL5m5LXS\n9kbfQHsbHZxACZde4rVYY36aV/jFFuPy6W+1mS0sSVqOsb4LeVhVUBhKSd60dYrR\nXMBgdHoAOSFnNrXWyeJg4HRT/TzWwGBa6Bfa1HE/FqpZsR1lkBVu27uJ2GEKFTnr\ndJOQA2mUbCr7ejWUxMkdAgh3eM2wk0o6BWuBBCpyX3cOCvqk0Zm4Od6Vn7EPeSgv\n8cUGIQwkPmUdzNnUOVhFB4RrppE4KIXwIKbznKqfVcovgHHmIQ4KAk8aHmy5S81A\nm1MYJI+qP+QvqeX/sW689cTkiyJe8Me8mkkAxm/jnqaQ+LV7E/sF37iMkkafgWY=\n=EbKP\n-----END PGP SIGNATURE-----\n", "payload": "tree f5974a1802a4b376b195d029bb67d8b07466bfd7\nparent 5b67b13d1e3eb657e94bcf974579c576bbbab873\nparent 26d62f55a40db77c6bca85ad56a44aee898096a5\nauthor kennytm <kennytm@gmail.com> 1527006377 +0800\ncommitter GitHub <noreply@github.com> 1527006377 +0800\n\nRollup merge of #50945 - stjepang:stabilize-from-ref, r=SimonSapin\n\nStabilize feature from_ref\n\nFunction `from_ref_mut` is now renamed to `from_mut`, as discussed in #45703.\n\nCloses #45703.\n\nr? @SimonSapin\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98e801ac0be56d20dfdecb235cf912c58f9a9531", "html_url": "https://github.com/rust-lang/rust/commit/98e801ac0be56d20dfdecb235cf912c58f9a9531", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98e801ac0be56d20dfdecb235cf912c58f9a9531/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b67b13d1e3eb657e94bcf974579c576bbbab873", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b67b13d1e3eb657e94bcf974579c576bbbab873", "html_url": "https://github.com/rust-lang/rust/commit/5b67b13d1e3eb657e94bcf974579c576bbbab873"}, {"sha": "26d62f55a40db77c6bca85ad56a44aee898096a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/26d62f55a40db77c6bca85ad56a44aee898096a5", "html_url": "https://github.com/rust-lang/rust/commit/26d62f55a40db77c6bca85ad56a44aee898096a5"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "161493f3892264dd33d1c3a208e1593801205a76", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98e801ac0be56d20dfdecb235cf912c58f9a9531/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e801ac0be56d20dfdecb235cf912c58f9a9531/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=98e801ac0be56d20dfdecb235cf912c58f9a9531", "patch": "@@ -119,8 +119,8 @@ pub use core::slice::{SplitN, RSplitN, SplitNMut, RSplitNMut};\n pub use core::slice::{RSplit, RSplitMut};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::slice::{from_raw_parts, from_raw_parts_mut};\n-#[unstable(feature = \"from_ref\", issue = \"45703\")]\n-pub use core::slice::{from_ref, from_ref_mut};\n+#[stable(feature = \"from_ref\", since = \"1.28.0\")]\n+pub use core::slice::{from_ref, from_mut};\n #[unstable(feature = \"slice_get_slice\", issue = \"35729\")]\n pub use core::slice::SliceIndex;\n #[unstable(feature = \"exact_chunks\", issue = \"47115\")]"}, {"sha": "ab986e4c86d8888f9ff968791a7872100224fa8c", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98e801ac0be56d20dfdecb235cf912c58f9a9531/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e801ac0be56d20dfdecb235cf912c58f9a9531/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=98e801ac0be56d20dfdecb235cf912c58f9a9531", "patch": "@@ -3884,16 +3884,16 @@ pub unsafe fn from_raw_parts_mut<'a, T>(data: *mut T, len: usize) -> &'a mut [T]\n }\n \n /// Converts a reference to T into a slice of length 1 (without copying).\n-#[unstable(feature = \"from_ref\", issue = \"45703\")]\n+#[stable(feature = \"from_ref\", since = \"1.28.0\")]\n pub fn from_ref<T>(s: &T) -> &[T] {\n     unsafe {\n         from_raw_parts(s, 1)\n     }\n }\n \n /// Converts a reference to T into a slice of length 1 (without copying).\n-#[unstable(feature = \"from_ref\", issue = \"45703\")]\n-pub fn from_ref_mut<T>(s: &mut T) -> &mut [T] {\n+#[stable(feature = \"from_ref\", since = \"1.28.0\")]\n+pub fn from_mut<T>(s: &mut T) -> &mut [T] {\n     unsafe {\n         from_raw_parts_mut(s, 1)\n     }"}, {"sha": "ffb8031b83bc65043f7972f3f4afe3544111874d", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98e801ac0be56d20dfdecb235cf912c58f9a9531/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e801ac0be56d20dfdecb235cf912c58f9a9531/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=98e801ac0be56d20dfdecb235cf912c58f9a9531", "patch": "@@ -948,7 +948,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n             Drop { target: ref mut t, unwind: Some(ref mut u), .. } |\n             Assert { target: ref mut t, cleanup: Some(ref mut u), .. } |\n             FalseUnwind { real_target: ref mut t, unwind: Some(ref mut u) } => {\n-                Some(t).into_iter().chain(slice::from_ref_mut(u))\n+                Some(t).into_iter().chain(slice::from_mut(u))\n             }\n             SwitchInt { ref mut targets, .. } => {\n                 None.into_iter().chain(&mut targets[..])"}]}