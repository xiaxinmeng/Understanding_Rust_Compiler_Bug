{"sha": "a5ad4de11186961f8f9b13cfee383af59e75c5d1", "node_id": "C_kwDOAAsO6NoAKGE1YWQ0ZGUxMTE4Njk2MWY4ZjliMTNjZmVlMzgzYWY1OWU3NWM1ZDE", "commit": {"author": {"name": "soruh", "email": "mail@soruh.de", "date": "2022-07-13T14:16:48Z"}, "committer": {"name": "soruh", "email": "mail@soruh.de", "date": "2022-07-13T14:16:48Z"}, "message": "add tests", "tree": {"sha": "5f16eb7f0a4064c77976cb86bb6810cca216c9b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f16eb7f0a4064c77976cb86bb6810cca216c9b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5ad4de11186961f8f9b13cfee383af59e75c5d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5ad4de11186961f8f9b13cfee383af59e75c5d1", "html_url": "https://github.com/rust-lang/rust/commit/a5ad4de11186961f8f9b13cfee383af59e75c5d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5ad4de11186961f8f9b13cfee383af59e75c5d1/comments", "author": {"login": "soruh", "id": 33131839, "node_id": "MDQ6VXNlcjMzMTMxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/33131839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soruh", "html_url": "https://github.com/soruh", "followers_url": "https://api.github.com/users/soruh/followers", "following_url": "https://api.github.com/users/soruh/following{/other_user}", "gists_url": "https://api.github.com/users/soruh/gists{/gist_id}", "starred_url": "https://api.github.com/users/soruh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soruh/subscriptions", "organizations_url": "https://api.github.com/users/soruh/orgs", "repos_url": "https://api.github.com/users/soruh/repos", "events_url": "https://api.github.com/users/soruh/events{/privacy}", "received_events_url": "https://api.github.com/users/soruh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "soruh", "id": 33131839, "node_id": "MDQ6VXNlcjMzMTMxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/33131839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soruh", "html_url": "https://github.com/soruh", "followers_url": "https://api.github.com/users/soruh/followers", "following_url": "https://api.github.com/users/soruh/following{/other_user}", "gists_url": "https://api.github.com/users/soruh/gists{/gist_id}", "starred_url": "https://api.github.com/users/soruh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soruh/subscriptions", "organizations_url": "https://api.github.com/users/soruh/orgs", "repos_url": "https://api.github.com/users/soruh/repos", "events_url": "https://api.github.com/users/soruh/events{/privacy}", "received_events_url": "https://api.github.com/users/soruh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "817082cad6daa9e217f25537ba14e40f1ba874bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/817082cad6daa9e217f25537ba14e40f1ba874bd", "html_url": "https://github.com/rust-lang/rust/commit/817082cad6daa9e217f25537ba14e40f1ba874bd"}], "stats": {"total": 177, "additions": 177, "deletions": 0}, "files": [{"sha": "5f4715bb53d241b4f49fbdc445b5fd9efb030986", "filename": "crates/ide-assists/src/handlers/generate_new.rs", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/a5ad4de11186961f8f9b13cfee383af59e75c5d1/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5ad4de11186961f8f9b13cfee383af59e75c5d1/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs?ref=a5ad4de11186961f8f9b13cfee383af59e75c5d1", "patch": "@@ -123,6 +123,97 @@ mod tests {\n \n     use super::*;\n \n+    #[test]\n+    fn test_generate_new_with_zst_fields() {\n+        check_assist(\n+            generate_new,\n+            r#\"\n+struct Empty;\n+\n+struct Foo { empty: Empty $0}\n+\"#,\n+            r#\"\n+struct Empty;\n+\n+struct Foo { empty: Empty }\n+\n+impl Foo {\n+    fn $0new() -> Self { Self { empty: Empty } }\n+}\n+\"#,\n+        );\n+        check_assist(\n+            generate_new,\n+            r#\"\n+struct Empty;\n+\n+struct Foo { baz: String, empty: Empty $0}\n+\"#,\n+            r#\"\n+struct Empty;\n+\n+struct Foo { baz: String, empty: Empty }\n+\n+impl Foo {\n+    fn $0new(baz: String) -> Self { Self { baz, empty: Empty } }\n+}\n+\"#,\n+        );\n+        check_assist(\n+            generate_new,\n+            r#\"\n+enum Empty { Bar }\n+\n+struct Foo { empty: Empty $0}\n+\"#,\n+            r#\"\n+enum Empty { Bar }\n+\n+struct Foo { empty: Empty }\n+\n+impl Foo {\n+    fn $0new() -> Self { Self { empty: Empty::Bar } }\n+}\n+\"#,\n+        );\n+\n+        // make sure the assist only works on unit variants\n+        check_assist(\n+            generate_new,\n+            r#\"\n+struct Empty {}\n+\n+struct Foo { empty: Empty $0}\n+\"#,\n+            r#\"\n+struct Empty {}\n+\n+struct Foo { empty: Empty }\n+\n+impl Foo {\n+    fn $0new(empty: Empty) -> Self { Self { empty } }\n+}\n+\"#,\n+        );\n+        check_assist(\n+            generate_new,\n+            r#\"\n+enum Empty { Bar {} }\n+\n+struct Foo { empty: Empty $0}\n+\"#,\n+            r#\"\n+enum Empty { Bar {} }\n+\n+struct Foo { empty: Empty }\n+\n+impl Foo {\n+    fn $0new(empty: Empty) -> Self { Self { empty } }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_generate_new() {\n         check_assist("}, {"sha": "30f903af50d5bd0e8eba742a19af4f42e809fa46", "filename": "crates/ide-diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/a5ad4de11186961f8f9b13cfee383af59e75c5d1/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5ad4de11186961f8f9b13cfee383af59e75c5d1/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=a5ad4de11186961f8f9b13cfee383af59e75c5d1", "patch": "@@ -345,6 +345,92 @@ fn test_fn() {\n         );\n     }\n \n+    #[test]\n+    fn test_fill_struct_zst_fields() {\n+        check_fix(\n+            r#\"\n+struct Empty;\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct {$0};\n+}\n+\"#,\n+            r#\"\n+struct Empty;\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct { one: 0, two: Empty };\n+}\n+\"#,\n+        );\n+        check_fix(\n+            r#\"\n+enum Empty { Foo };\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct {$0};\n+}\n+\"#,\n+            r#\"\n+enum Empty { Foo };\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct { one: 0, two: Empty::Foo };\n+}\n+\"#,\n+        );\n+\n+        // make sure the assist doesn't fill non Unit variants\n+        check_fix(\n+            r#\"\n+struct Empty {};\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct {$0};\n+}\n+\"#,\n+            r#\"\n+struct Empty {};\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct { one: 0, two: todo!() };\n+}\n+\"#,\n+        );\n+        check_fix(\n+            r#\"\n+enum Empty { Foo {} };\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct {$0};\n+}\n+\"#,\n+            r#\"\n+enum Empty { Foo {} };\n+\n+struct TestStruct { one: i32, two: Empty }\n+\n+fn test_fn() {\n+    let s = TestStruct { one: 0, two: todo!() };\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_fill_struct_fields_self() {\n         check_fix("}]}