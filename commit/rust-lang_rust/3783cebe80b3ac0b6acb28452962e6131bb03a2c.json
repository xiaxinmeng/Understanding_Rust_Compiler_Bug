{"sha": "3783cebe80b3ac0b6acb28452962e6131bb03a2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ODNjZWJlODBiM2FjMGI2YWNiMjg0NTI5NjJlNjEzMWJiMDNhMmM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-02T10:16:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-02T10:16:09Z"}, "message": "remove dependency on lazy_static and regex by getting rid of some dead validation hack", "tree": {"sha": "bff244a313fed258bfd9cc4aab82daa6d0ff8b98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bff244a313fed258bfd9cc4aab82daa6d0ff8b98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3783cebe80b3ac0b6acb28452962e6131bb03a2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3783cebe80b3ac0b6acb28452962e6131bb03a2c", "html_url": "https://github.com/rust-lang/rust/commit/3783cebe80b3ac0b6acb28452962e6131bb03a2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3783cebe80b3ac0b6acb28452962e6131bb03a2c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0486769b33f88c545aa702f40b19cb11549b39e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0486769b33f88c545aa702f40b19cb11549b39e", "html_url": "https://github.com/rust-lang/rust/commit/e0486769b33f88c545aa702f40b19cb11549b39e"}], "stats": {"total": 35, "additions": 1, "deletions": 34}, "files": [{"sha": "fd62625be131a571de049bae640824faa34f85d2", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3783cebe80b3ac0b6acb28452962e6131bb03a2c/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3783cebe80b3ac0b6acb28452962e6131bb03a2c/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=3783cebe80b3ac0b6acb28452962e6131bb03a2c", "patch": "@@ -21,9 +21,7 @@ required-features = [\"cargo_miri\"]\n [dependencies]\n byteorder = { version = \"1.1\", features = [\"i128\"]}\n cargo_metadata = { version = \"0.6\", optional = true }\n-regex = \"1.0\"\n-lazy_static = \"1.0\"\n-env_logger = \"0.5.0-rc.1\"\n+env_logger = \"0.5\"\n log = \"0.4\"\n \n [features]"}, {"sha": "f16471352c8fad7976e2dac305f0fb0c1b813f6a", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3783cebe80b3ac0b6acb28452962e6131bb03a2c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3783cebe80b3ac0b6acb28452962e6131bb03a2c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3783cebe80b3ac0b6acb28452962e6131bb03a2c", "patch": "@@ -17,9 +17,6 @@ extern crate rustc_data_structures;\n extern crate rustc_mir;\n extern crate rustc_target;\n extern crate syntax;\n-extern crate regex;\n-#[macro_use]\n-extern crate lazy_static;\n \n use rustc::ty::{self, TyCtxt};\n use rustc::ty::layout::{TyLayout, LayoutOf, Size};"}, {"sha": "8d55f8ab0afe9c015f2dc9b4d51bd16f3724776a", "filename": "src/validation.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3783cebe80b3ac0b6acb28452962e6131bb03a2c/src%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3783cebe80b3ac0b6acb28452962e6131bb03a2c/src%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalidation.rs?ref=3783cebe80b3ac0b6acb28452962e6131bb03a2c", "patch": "@@ -159,34 +159,6 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n         }\n         debug_assert!(self.memory.cur_frame == self.cur_frame());\n \n-        // HACK: Determine if this method is whitelisted and hence we do not perform any validation.\n-        // We currently insta-UB on anything passing around uninitialized memory, so we have to whitelist\n-        // the places that are allowed to do that.\n-        // The second group is stuff libstd does that is forbidden even under relaxed validation.\n-        {\n-            // The regexp we use for filtering\n-            use regex::Regex;\n-            lazy_static! {\n-                static ref RE: Regex = Regex::new(\"^(\\\n-                    (std|alloc::heap::__core)::mem::(uninitialized|forget)::|\\\n-                    <(std|alloc)::heap::Heap as (std::heap|alloc::allocator)::Alloc>::|\\\n-                    <(std|alloc::heap::__core)::mem::ManuallyDrop<T>><.*>::new$|\\\n-                    <(std|alloc::heap::__core)::mem::ManuallyDrop<T> as std::ops::DerefMut><.*>::deref_mut$|\\\n-                    (std|alloc::heap::__core)::ptr::read::|\\\n-                    \\\n-                    <std::sync::Arc<T>><.*>::inner$|\\\n-                    <std::sync::Arc<T>><.*>::drop_slow$|\\\n-                    (std::heap|alloc::allocator)::Layout::for_value::|\\\n-                    (std|alloc::heap::__core)::mem::(size|align)_of_val::\\\n-                )\").unwrap();\n-            }\n-            // Now test\n-            let name = self.frame().instance.to_string();\n-            if RE.is_match(&name) {\n-                return Ok(());\n-            }\n-        }\n-\n         // We need to monomorphize ty *without* erasing lifetimes\n         trace!(\"validation_op1: {:?}\", operand.ty.sty);\n         let ty = operand.ty.subst(self.tcx.tcx, self.substs());"}]}