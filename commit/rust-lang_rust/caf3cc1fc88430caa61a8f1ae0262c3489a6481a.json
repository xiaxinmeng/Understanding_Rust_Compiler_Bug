{"sha": "caf3cc1fc88430caa61a8f1ae0262c3489a6481a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZjNjYzFmYzg4NDMwY2FhNjFhOGYxYWUwMjYyYzM0ODlhNjQ4MWE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-10-29T02:44:30Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-11T20:14:34Z"}, "message": "Add explicit Miri support to libpanic_unwind", "tree": {"sha": "7a09b792739f3ef92c8847b8f5e1ec5283c568ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a09b792739f3ef92c8847b8f5e1ec5283c568ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caf3cc1fc88430caa61a8f1ae0262c3489a6481a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl3JwSoACgkQtAh+UQ6Y\nsWQ+0g/+OEz2OUVs4LzMJhhTQJmRpQZ1462Ak/P/tggOPfzAahGC78T8wdvhOYQp\nZMMloYP/LJz5BnO7FUjr+sphaFbD83+ZTS9QQtFY2vOtqzZvH/bW+SiX5JUbt/N/\nNqxEENRcQxfDEVJVG8xrckxBFUrLbWKWQoxZxn3dmfKt8HOwhOBPfgzekW7tG+3B\nPbqZQf906CJAZn/C/z4BTNxZE3WHIdAcUxw4n3UvUP/b8jWQ1BZd3AiuTVnL9Ekf\nfvS8kPwb2rTNY4HL1oyR5o8tV2JJOumj3MNgBboM/b43+Ffn/DXii0hsxmuWyuY+\nb/ZtGmhHBx/K0Ojht5NL1+vBAhuDEnnR3Hbi27nycxwkufifE6p1+EQPeaL/pZ1u\nXc7EbjOLgGQaUvjjaGnxSvL5xrZ1fqwF//VEXj4gUtXCB8nwD6UtbLZwhqqTsNVr\nDyrIrFpX4fRYjpKx6XE//6A8Czyx/7TWNpyKMAyWZbgwRjCemgBGqpcvk71jjEQq\nT/VoiH01S0dCVZc9PWOkkS5jwEvndITb2eMcJrd06pSWZQTbKnpMAThR8IuJoWAR\n5j06rvVDNnM/L50GPXe8KyurAAgL7AHO9tfWvRVhpwM5MgAmH4raa1tQTL80xsov\n+Cdtz9CIwl8S/ZvmKEmKirK0BkHBF0MDkhURBwx5XNXuJ+aJ/MI=\n=+GBm\n-----END PGP SIGNATURE-----", "payload": "tree 7a09b792739f3ef92c8847b8f5e1ec5283c568ef\nparent 8ff4d41ba486db16446a70ef94a3d58285880358\nauthor Aaron Hill <aa1ronham@gmail.com> 1572317070 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1573503274 -0500\n\nAdd explicit Miri support to libpanic_unwind\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caf3cc1fc88430caa61a8f1ae0262c3489a6481a", "html_url": "https://github.com/rust-lang/rust/commit/caf3cc1fc88430caa61a8f1ae0262c3489a6481a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caf3cc1fc88430caa61a8f1ae0262c3489a6481a/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff4d41ba486db16446a70ef94a3d58285880358", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ff4d41ba486db16446a70ef94a3d58285880358", "html_url": "https://github.com/rust-lang/rust/commit/8ff4d41ba486db16446a70ef94a3d58285880358"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "f4a1ff0dd005f78762716a0cbf226745ceadd704", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/caf3cc1fc88430caa61a8f1ae0262c3489a6481a/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf3cc1fc88430caa61a8f1ae0262c3489a6481a/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=caf3cc1fc88430caa61a8f1ae0262c3489a6481a", "patch": "@@ -1348,6 +1348,11 @@ extern \"rust-intrinsic\" {\n     /// See documentation of `<*const T>::offset_from` for details.\n     #[cfg(not(bootstrap))]\n     pub fn ptr_offset_from<T>(ptr: *const T, base: *const T) -> isize;\n+\n+    /// Internal hook used by Miri to implement unwinding.\n+    /// Perma-unstable: do not use\n+    #[cfg(not(bootstrap))]\n+    pub fn miri_start_panic(data: *mut (dyn crate::any::Any + Send)) -> !;\n }\n \n // Some functions are defined here because they accidentally got made"}, {"sha": "4c6c728f6f7d4e2c00ba3c6dfd141dab49d777f2", "filename": "src/libpanic_unwind/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/caf3cc1fc88430caa61a8f1ae0262c3489a6481a/src%2Flibpanic_unwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf3cc1fc88430caa61a8f1ae0262c3489a6481a/src%2Flibpanic_unwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Flib.rs?ref=caf3cc1fc88430caa61a8f1ae0262c3489a6481a", "patch": "@@ -36,7 +36,10 @@ use core::raw;\n use core::panic::BoxMeUp;\n \n cfg_if::cfg_if! {\n-    if #[cfg(target_os = \"emscripten\")] {\n+    if #[cfg(miri)] {\n+        #[path = \"miri.rs\"]\n+        mod imp;\n+    } else if #[cfg(target_os = \"emscripten\")] {\n         #[path = \"emcc.rs\"]\n         mod imp;\n     } else if #[cfg(target_arch = \"wasm32\")] {"}, {"sha": "a2d52638e8b4897eea0a25c308ce69d1223c5e3c", "filename": "src/libpanic_unwind/miri.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/caf3cc1fc88430caa61a8f1ae0262c3489a6481a/src%2Flibpanic_unwind%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf3cc1fc88430caa61a8f1ae0262c3489a6481a/src%2Flibpanic_unwind%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fmiri.rs?ref=caf3cc1fc88430caa61a8f1ae0262c3489a6481a", "patch": "@@ -0,0 +1,12 @@\n+pub fn payload() -> *mut u8 {\n+    core::ptr::null_mut()\n+}\n+\n+pub unsafe fn panic(data: Box<dyn Any + Send>) -> u32 {\n+    core::intrinsics::miri_start_panic(Box::into_raw(data))\n+}\n+\n+pub unsafe fn cleanup(ptr: *mut u8) -> Box<dyn Any + Send> {\n+    Box::from_raw(ptr)\n+}\n+"}]}