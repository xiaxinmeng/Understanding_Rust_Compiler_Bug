{"sha": "51901eea8c918fd55506b3e6311857d4f5bd1ba5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOTAxZWVhOGM5MThmZDU1NTA2YjNlNjMxMTg1N2Q0ZjViZDFiYTU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-07T23:05:13Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-06T12:20:08Z"}, "message": "Rename `bool`'s `then` to `to_option`", "tree": {"sha": "fe08ceccca848b84ab9d8f4d1303f10211e666c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe08ceccca848b84ab9d8f4d1303f10211e666c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51901eea8c918fd55506b3e6311857d4f5bd1ba5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51901eea8c918fd55506b3e6311857d4f5bd1ba5", "html_url": "https://github.com/rust-lang/rust/commit/51901eea8c918fd55506b3e6311857d4f5bd1ba5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51901eea8c918fd55506b3e6311857d4f5bd1ba5/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "html_url": "https://github.com/rust-lang/rust/commit/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "aa1ba7affc167ced730a1bd93c80fbbd5798c02e", "filename": "src/libcore/bool.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/51901eea8c918fd55506b3e6311857d4f5bd1ba5/src%2Flibcore%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51901eea8c918fd55506b3e6311857d4f5bd1ba5/src%2Flibcore%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbool.rs?ref=51901eea8c918fd55506b3e6311857d4f5bd1ba5", "patch": "@@ -9,12 +9,12 @@ impl bool {\n     /// ```\n     /// #![feature(bool_to_option)]\n     ///\n-    /// assert_eq!(false.then(0), None);\n-    /// assert_eq!(true.then(0), Some(0));\n+    /// assert_eq!(false.to_option(0), None);\n+    /// assert_eq!(true.to_option(0), Some(0));\n     /// ```\n     #[unstable(feature = \"bool_to_option\", issue = \"64260\")]\n     #[inline]\n-    pub fn then<T>(self, t: T) -> Option<T> {\n+    pub fn to_option<T>(self, t: T) -> Option<T> {\n         if self {\n             Some(t)\n         } else {\n@@ -29,12 +29,12 @@ impl bool {\n     /// ```\n     /// #![feature(bool_to_option)]\n     ///\n-    /// assert_eq!(false.then_with(|| 0), None);\n-    /// assert_eq!(true.then_with(|| 0), Some(0));\n+    /// assert_eq!(false.to_option_with(|| 0), None);\n+    /// assert_eq!(true.to_option_with(|| 0), Some(0));\n     /// ```\n     #[unstable(feature = \"bool_to_option\", issue = \"64260\")]\n     #[inline]\n-    pub fn then_with<T, F: FnOnce() -> T>(self, f: F) -> Option<T> {\n+    pub fn to_option_with<T, F: FnOnce() -> T>(self, f: F) -> Option<T> {\n         if self {\n             Some(f())\n         } else {"}]}