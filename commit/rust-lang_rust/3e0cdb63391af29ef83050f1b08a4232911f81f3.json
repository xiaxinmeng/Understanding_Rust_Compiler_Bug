{"sha": "3e0cdb63391af29ef83050f1b08a4232911f81f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMGNkYjYzMzkxYWYyOWVmODMwNTBmMWIwOGE0MjMyOTExZjgxZjM=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-12-17T14:23:20Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-12-17T14:23:20Z"}, "message": "Correct span in privacy error", "tree": {"sha": "f59e70af5d3851364dfdb7b83996d5cf8d25de86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f59e70af5d3851364dfdb7b83996d5cf8d25de86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e0cdb63391af29ef83050f1b08a4232911f81f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e0cdb63391af29ef83050f1b08a4232911f81f3", "html_url": "https://github.com/rust-lang/rust/commit/3e0cdb63391af29ef83050f1b08a4232911f81f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e0cdb63391af29ef83050f1b08a4232911f81f3/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "126db549b038c84269a1e4fe46f051b2c15d6970", "url": "https://api.github.com/repos/rust-lang/rust/commits/126db549b038c84269a1e4fe46f051b2c15d6970", "html_url": "https://github.com/rust-lang/rust/commit/126db549b038c84269a1e4fe46f051b2c15d6970"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "2ec65424163b59af63b85c6f4aef254de50352b2", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3e0cdb63391af29ef83050f1b08a4232911f81f3/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0cdb63391af29ef83050f1b08a4232911f81f3/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=3e0cdb63391af29ef83050f1b08a4232911f81f3", "patch": "@@ -1261,13 +1261,13 @@ impl<'a, 'tcx> VisiblePrivateTypesVisitor<'a, 'tcx> {\n     }\n \n     fn check_ty_param_bound(&self,\n-                            span: Span,\n                             ty_param_bound: &ast::TyParamBound) {\n         if let ast::TraitTyParamBound(ref trait_ref) = *ty_param_bound {\n             if !self.tcx.sess.features.borrow().visible_private_types &&\n                 self.path_is_private_type(trait_ref.trait_ref.ref_id) {\n+                    let span = trait_ref.trait_ref.path.span;\n                     self.tcx.sess.span_err(span,\n-                                           \"private type in exported type \\\n+                                           \"private trait in exported type \\\n                                             parameter bound\");\n             }\n         }\n@@ -1311,7 +1311,7 @@ impl<'a, 'tcx, 'v> Visitor<'v> for VisiblePrivateTypesVisitor<'a, 'tcx> {\n                 }\n \n                 for bound in bounds.iter() {\n-                    self.check_ty_param_bound(item.span, bound)\n+                    self.check_ty_param_bound(bound)\n                 }\n             }\n \n@@ -1449,14 +1449,14 @@ impl<'a, 'tcx, 'v> Visitor<'v> for VisiblePrivateTypesVisitor<'a, 'tcx> {\n     fn visit_generics(&mut self, generics: &ast::Generics) {\n         for ty_param in generics.ty_params.iter() {\n             for bound in ty_param.bounds.iter() {\n-                self.check_ty_param_bound(ty_param.span, bound)\n+                self.check_ty_param_bound(bound)\n             }\n         }\n         for predicate in generics.where_clause.predicates.iter() {\n             match predicate {\n                 &ast::WherePredicate::BoundPredicate(ref bound_pred) => {\n                     for bound in bound_pred.bounds.iter() {\n-                        self.check_ty_param_bound(bound_pred.span, bound)\n+                        self.check_ty_param_bound(bound)\n                     }\n                 }\n                 &ast::WherePredicate::EqPredicate(ref eq_pred) => {"}, {"sha": "397ac5373bb7be0ff41756876f1df50f091af8df", "filename": "src/test/compile-fail/visible-private-types-generics.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3e0cdb63391af29ef83050f1b08a4232911f81f3/src%2Ftest%2Fcompile-fail%2Fvisible-private-types-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0cdb63391af29ef83050f1b08a4232911f81f3/src%2Ftest%2Fcompile-fail%2Fvisible-private-types-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvisible-private-types-generics.rs?ref=3e0cdb63391af29ef83050f1b08a4232911f81f3", "patch": "@@ -10,17 +10,14 @@\n \n trait Foo {}\n \n-pub fn f<T:Foo>() {}    //~ ERROR private type in exported type\n+pub fn f<\n+    T\n+    : Foo //~ ERROR private trait in exported type parameter bound\n+>() {}\n \n-pub fn g<T>() where T: Foo {}   //~ ERROR private type in exported type\n-\n-pub struct H<T:Foo> {   //~ ERROR private type in exported type\n-    x: T,\n-}\n-\n-pub struct I<T> where T: Foo {  //~ ERROR private type in exported type\n-    x: T,\n-}\n+pub fn g<T>() where\n+    T\n+    : Foo //~ ERROR private trait in exported type parameter bound\n+{}\n \n fn main() {}\n-"}, {"sha": "dc6d446154ac75b4045c7006e98b7a6f07134495", "filename": "src/test/compile-fail/visible-private-types-supertrait.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e0cdb63391af29ef83050f1b08a4232911f81f3/src%2Ftest%2Fcompile-fail%2Fvisible-private-types-supertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0cdb63391af29ef83050f1b08a4232911f81f3/src%2Ftest%2Fcompile-fail%2Fvisible-private-types-supertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvisible-private-types-supertrait.rs?ref=3e0cdb63391af29ef83050f1b08a4232911f81f3", "patch": "@@ -10,7 +10,6 @@\n \n trait Foo {}\n \n-pub trait Bar : Foo {}  //~ ERROR private type in exported type\n+pub trait Bar : Foo {} //~ ERROR private trait in exported type\n \n fn main() {}\n-"}]}