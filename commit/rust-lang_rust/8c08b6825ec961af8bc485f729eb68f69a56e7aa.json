{"sha": "8c08b6825ec961af8bc485f729eb68f69a56e7aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMDhiNjgyNWVjOTYxYWY4YmM0ODVmNzI5ZWI2OGY2OWE1NmU3YWE=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-01-26T02:31:31Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-01-26T14:50:17Z"}, "message": "Preserve indentation in doc comments", "tree": {"sha": "14b8e47caf9d7fed6db59e8432c8b374780bf9a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14b8e47caf9d7fed6db59e8432c8b374780bf9a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c08b6825ec961af8bc485f729eb68f69a56e7aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c08b6825ec961af8bc485f729eb68f69a56e7aa", "html_url": "https://github.com/rust-lang/rust/commit/8c08b6825ec961af8bc485f729eb68f69a56e7aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c08b6825ec961af8bc485f729eb68f69a56e7aa/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5af7b2f4af51291fa4a0549c549796ba0520927b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5af7b2f4af51291fa4a0549c549796ba0520927b", "html_url": "https://github.com/rust-lang/rust/commit/5af7b2f4af51291fa4a0549c549796ba0520927b"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "74a45f52f3151bbd7e58f776f4bee5a9228039fe", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 40, "deletions": 9, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/8c08b6825ec961af8bc485f729eb68f69a56e7aa/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c08b6825ec961af8bc485f729eb68f69a56e7aa/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=8c08b6825ec961af8bc485f729eb68f69a56e7aa", "patch": "@@ -115,19 +115,30 @@ pub trait DocCommentsOwner: AstNode {\n     }\n \n     /// Returns the textual content of a doc comment block as a single string.\n-    /// That is, strips leading `///` and joins lines\n+    /// That is, strips leading `///` (+ optional 1 character of whitespace)\n+    /// and joins lines.\n     fn doc_comment_text(&self) -> std::string::String {\n         self.doc_comments()\n             .filter(|comment| comment.is_doc_comment())\n             .map(|comment| {\n-                let prefix = comment.prefix();\n-                let trimmed = comment\n-                    .text()\n-                    .as_str()\n-                    .trim()\n-                    .trim_start_matches(prefix)\n-                    .trim_start();\n-                trimmed.to_owned()\n+                let prefix_len = comment.prefix().len();\n+\n+                // Strip leading and trailing whitespace\n+                let line = comment.text().as_str().trim();\n+\n+                // Determine if the prefix or prefix + 1 char is stripped\n+                let pos = if line\n+                    .chars()\n+                    .nth(prefix_len)\n+                    .map(|c| c.is_whitespace())\n+                    .unwrap_or(false)\n+                {\n+                    prefix_len + 1\n+                } else {\n+                    prefix_len\n+                };\n+\n+                line[pos..].to_owned()\n             })\n             .join(\"\\n\")\n     }\n@@ -701,3 +712,23 @@ fn test_doc_comment_of_items() {\n     let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n     assert_eq!(\"doc\", module.doc_comment_text());\n }\n+\n+#[test]\n+fn test_doc_comment_preserves_indents() {\n+    let file = SourceFile::parse(\n+        r#\"\n+        /// doc1\n+        /// ```\n+        /// fn foo() {\n+        ///     // ...\n+        /// }\n+        /// ```\n+        mod foo {}\n+        \"#,\n+    );\n+    let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n+    assert_eq!(\n+        \"doc1\\n```\\nfn foo() {\\n    // ...\\n}\\n```\",\n+        module.doc_comment_text()\n+    );\n+}"}]}