{"sha": "3ee865461f3fa128835f3d79ea5f396e6ebdf6c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZTg2NTQ2MWYzZmExMjg4MzVmM2Q3OWVhNWYzOTZlNmViZGY2YzE=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-03-17T13:51:07Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-03-17T13:51:07Z"}, "message": "Revert \"Don't duplicate `check_abi()`\"\n\nThis reverts commit 1c7d7471dae217810f48e594baca2e143a38da10.", "tree": {"sha": "16b2170254436ad1710fecac25582053b8277046", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16b2170254436ad1710fecac25582053b8277046"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ee865461f3fa128835f3d79ea5f396e6ebdf6c1", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYFIJSxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLiD/AD/cWjXxSMkpft1rzrCVo1OV1NHZt23\nHy+xwsMy1nqho1YBAMzR0fQfQQ4pSjZG86vz7SCJ8Zt4SksTCTba8605LI4M\n=Wka/\n-----END PGP SIGNATURE-----", "payload": "tree 16b2170254436ad1710fecac25582053b8277046\nparent bbc348539bce27627c60b4a27d6a822643f1c002\nauthor hyd-dev <yd-huang@outlook.com> 1615989067 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1615989067 +0800\n\nRevert \"Don't duplicate `check_abi()`\"\n\nThis reverts commit 1c7d7471dae217810f48e594baca2e143a38da10.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee865461f3fa128835f3d79ea5f396e6ebdf6c1", "html_url": "https://github.com/rust-lang/rust/commit/3ee865461f3fa128835f3d79ea5f396e6ebdf6c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ee865461f3fa128835f3d79ea5f396e6ebdf6c1/comments", "author": null, "committer": null, "parents": [{"sha": "bbc348539bce27627c60b4a27d6a822643f1c002", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc348539bce27627c60b4a27d6a822643f1c002", "html_url": "https://github.com/rust-lang/rust/commit/bbc348539bce27627c60b4a27d6a822643f1c002"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "7fe0ae0a97c4c4d223c49d7a07294b9a2113a96c", "filename": "src/helpers.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ee865461f3fa128835f3d79ea5f396e6ebdf6c1/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee865461f3fa128835f3d79ea5f396e6ebdf6c1/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=3ee865461f3fa128835f3d79ea5f396e6ebdf6c1", "patch": "@@ -169,7 +169,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let this = self.eval_context_mut();\n         let param_env = ty::ParamEnv::reveal_all(); // in Miri this is always the param_env we use... and this.param_env is private.\n         let callee_abi = f.ty(*this.tcx, param_env).fn_sig(*this.tcx).abi();\n-        check_abi(caller_abi, callee_abi)?;\n+        if callee_abi != caller_abi {\n+            throw_ub_format!(\"calling a function with ABI {} using caller ABI {}\", callee_abi.name(), caller_abi.name())\n+        }\n \n         // Push frame.\n         let mir = &*this.load_mir(f.def, None)?;"}]}