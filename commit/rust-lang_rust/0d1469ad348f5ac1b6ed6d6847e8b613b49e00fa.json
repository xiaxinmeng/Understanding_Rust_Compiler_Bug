{"sha": "0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "node_id": "C_kwDOAAsO6NoAKDBkMTQ2OWFkMzQ4ZjVhYzFiNmVkNmQ2ODQ3ZThiNjEzYjQ5ZTAwZmE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-12T03:37:18Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-12T03:51:10Z"}, "message": "Remove unused argument from `visit_poly_trait_ref`.", "tree": {"sha": "fb3ec3b226d6e876444a94be99ea9c56efd2f571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb3ec3b226d6e876444a94be99ea9c56efd2f571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "html_url": "https://github.com/rust-lang/rust/commit/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "308153563bf008ab3cadec9148c4930521189844", "url": "https://api.github.com/repos/rust-lang/rust/commits/308153563bf008ab3cadec9148c4930521189844", "html_url": "https://github.com/rust-lang/rust/commit/308153563bf008ab3cadec9148c4930521189844"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "28dbfbab2e19bd511908dc8b2f8da751a4d2932b", "filename": "clippy_lints/src/disallowed_types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa/clippy_lints%2Fsrc%2Fdisallowed_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa/clippy_lints%2Fsrc%2Fdisallowed_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_types.rs?ref=0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::{\n-    def::Res, def_id::DefId, Item, ItemKind, PolyTraitRef, PrimTy, TraitBoundModifier, Ty, TyKind, UseKind,\n+    def::Res, def_id::DefId, Item, ItemKind, PolyTraitRef, PrimTy, Ty, TyKind, UseKind,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n@@ -120,7 +120,7 @@ impl<'tcx> LateLintPass<'tcx> for DisallowedTypes {\n         }\n     }\n \n-    fn check_poly_trait_ref(&mut self, cx: &LateContext<'tcx>, poly: &'tcx PolyTraitRef<'tcx>, _: TraitBoundModifier) {\n+    fn check_poly_trait_ref(&mut self, cx: &LateContext<'tcx>, poly: &'tcx PolyTraitRef<'tcx>) {\n         self.check_res_emit(cx, &poly.trait_ref.path.res, poly.trait_ref.path.span);\n     }\n }"}, {"sha": "643a7cfd577b796a193593b12702861f4f184894", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "patch": "@@ -10,7 +10,7 @@ use rustc_hir::FnRetTy::Return;\n use rustc_hir::{\n     BareFnTy, BodyId, FnDecl, GenericArg, GenericBound, GenericParam, GenericParamKind, Generics, Impl, ImplItem,\n     ImplItemKind, Item, ItemKind, LangItem, Lifetime, LifetimeName, ParamName, PolyTraitRef, PredicateOrigin,\n-    TraitBoundModifier, TraitFn, TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n+    TraitFn, TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::nested_filter as middle_nested_filter;\n@@ -422,7 +422,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n         self.record(&Some(*lifetime));\n     }\n \n-    fn visit_poly_trait_ref(&mut self, poly_tref: &'tcx PolyTraitRef<'tcx>, tbm: TraitBoundModifier) {\n+    fn visit_poly_trait_ref(&mut self, poly_tref: &'tcx PolyTraitRef<'tcx>) {\n         let trait_ref = &poly_tref.trait_ref;\n         if CLOSURE_TRAIT_BOUNDS.iter().any(|&item| {\n             self.cx\n@@ -435,7 +435,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n             sub_visitor.visit_trait_ref(trait_ref);\n             self.nested_elision_site_lts.append(&mut sub_visitor.all_lts());\n         } else {\n-            walk_poly_trait_ref(self, poly_tref, tbm);\n+            walk_poly_trait_ref(self, poly_tref);\n         }\n     }\n \n@@ -466,7 +466,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n                     self.unelided_trait_object_lifetime = true;\n                 }\n                 for bound in bounds {\n-                    self.visit_poly_trait_ref(bound, TraitBoundModifier::None);\n+                    self.visit_poly_trait_ref(bound);\n                 }\n             },\n             _ => walk_ty(self, ty),"}]}