{"sha": "cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436", "node_id": "C_kwDOAAsO6NoAKGNhZDRjYjM4Y2RiZjAzM2ZiNWQ3YTZjNzI2ZDg2YTE1ZTJmNGU0MzY", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2023-01-27T18:25:31Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2023-01-27T18:25:31Z"}, "message": "Make it work with `Self { .. }`", "tree": {"sha": "2f68b5c653f2be5d7035aaf8b2661da070f7f053", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f68b5c653f2be5d7035aaf8b2661da070f7f053"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436", "html_url": "https://github.com/rust-lang/rust/commit/cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e993072661a578189a41405b03da8127c4902e2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e993072661a578189a41405b03da8127c4902e2c", "html_url": "https://github.com/rust-lang/rust/commit/e993072661a578189a41405b03da8127c4902e2c"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "a666562f1010c2d02e23c6378be8422b51829aea", "filename": "crates/ide/src/signature_help.rs", "status": "modified", "additions": 33, "deletions": 10, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436/crates%2Fide%2Fsrc%2Fsignature_help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436/crates%2Fide%2Fsrc%2Fsignature_help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsignature_help.rs?ref=cad4cb38cdbf033fb5d7a6c726d86a15e2f4e436", "patch": "@@ -410,8 +410,21 @@ fn signature_help_for_record_lit(\n     let fields;\n \n     let db = sema.db;\n-    match sema.resolve_path(&record.path()?)? {\n-        PathResolution::Def(ModuleDef::Adt(adt)) => match adt {\n+    let path_res = sema.resolve_path(&record.path()?)?;\n+    if let PathResolution::Def(ModuleDef::Variant(variant)) = path_res {\n+        fields = variant.fields(db);\n+        let en = variant.parent_enum(db);\n+\n+        res.doc = en.docs(db).map(|it| it.into());\n+        format_to!(res.signature, \"enum {}::{} {{ \", en.name(db), variant.name(db));\n+    } else {\n+        let adt = match path_res {\n+            PathResolution::SelfType(imp) => imp.self_ty(db).as_adt()?,\n+            PathResolution::Def(ModuleDef::Adt(adt)) => adt,\n+            _ => return None,\n+        };\n+\n+        match adt {\n             hir::Adt::Struct(it) => {\n                 fields = it.fields(db);\n                 res.doc = it.docs(db).map(|it| it.into());\n@@ -423,15 +436,7 @@ fn signature_help_for_record_lit(\n                 format_to!(res.signature, \"union {} {{ \", it.name(db));\n             }\n             _ => return None,\n-        },\n-        PathResolution::Def(ModuleDef::Variant(variant)) => {\n-            fields = variant.fields(db);\n-            let en = variant.parent_enum(db);\n-\n-            res.doc = en.docs(db).map(|it| it.into());\n-            format_to!(res.signature, \"enum {}::{} {{ \", en.name(db), variant.name(db));\n         }\n-        _ => return None,\n     }\n \n     let mut fields =\n@@ -1571,4 +1576,22 @@ fn f() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn record_literal_self() {\n+        check(\n+            r#\"\n+struct S { t: u8 }\n+impl S {\n+    fn new() -> Self {\n+        Self { $0 }\n+    }\n+}\n+        \"#,\n+            expect![[r#\"\n+                struct S { t: u8 }\n+                           ^^^^^\n+            \"#]],\n+        );\n+    }\n }"}]}