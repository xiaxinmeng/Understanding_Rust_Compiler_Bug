{"sha": "ae05961fdf5048cb5af27621390dd6c22aaee102", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMDU5NjFmZGY1MDQ4Y2I1YWYyNzYyMTM5MGRkNmMyMmFhZWUxMDI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-04-09T15:52:10Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-04-09T15:52:10Z"}, "message": "Make tidy treat \"test/ui/foo.nll.stderr\" just like \"foo.stderr\".", "tree": {"sha": "454c2390c2ac65169fd8bbab7f33550cf9df23c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/454c2390c2ac65169fd8bbab7f33550cf9df23c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae05961fdf5048cb5af27621390dd6c22aaee102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae05961fdf5048cb5af27621390dd6c22aaee102", "html_url": "https://github.com/rust-lang/rust/commit/ae05961fdf5048cb5af27621390dd6c22aaee102", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae05961fdf5048cb5af27621390dd6c22aaee102/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9b70c394e7f341b4016fce4cbf763d404b26f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b70c394e7f341b4016fce4cbf763d404b26f9", "html_url": "https://github.com/rust-lang/rust/commit/4b9b70c394e7f341b4016fce4cbf763d404b26f9"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "bda58bc09f77625714a23244b2018ebace908ddc", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ae05961fdf5048cb5af27621390dd6c22aaee102/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae05961fdf5048cb5af27621390dd6c22aaee102/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=ae05961fdf5048cb5af27621390dd6c22aaee102", "patch": "@@ -12,14 +12,41 @@\n \n use std::path::Path;\n \n+// See rust-lang/rust#48879: In addition to the mapping from `foo.rs`\n+// to `foo.stderr`/`foo.stdout`, we also can optionally have\n+// `foo.$mode.stderr`, where $mode is one of the strings on this list,\n+// as an alternative to use when running under that mode.\n+static COMPARE_MODE_NAMES: [&'static str; 1] = [\"nll\"];\n+\n pub fn check(path: &Path, bad: &mut bool) {\n     super::walk_many(&[&path.join(\"test/ui\"), &path.join(\"test/ui-fulldeps\")],\n                      &mut |_| false,\n                      &mut |file_path| {\n         if let Some(ext) = file_path.extension() {\n             if (ext == \"stderr\" || ext == \"stdout\") && !file_path.with_extension(\"rs\").exists() {\n-                println!(\"Stray file with UI testing output: {:?}\", file_path);\n-                *bad = true;\n+\n+                // rust-lang/rust#48879: this fn used to be beautful\n+                // because Path API special-cases replacing\n+                // extensions. That works great for \".stderr\" but not\n+                // so well for \".nll.stderr\". To support the latter,\n+                // we explicitly search backwards for mode's starting\n+                // point and build corresponding source name.\n+                let filename = file_path.file_name().expect(\"need filename\")\n+                    .to_str().expect(\"need UTF-8 filename\");\n+                let found_matching_prefix = COMPARE_MODE_NAMES.iter().any(|mode| {\n+                    if let Some(r_idx) = filename.rfind(&format!(\".{}\", mode)) {\n+                        let source_name = format!(\"{}.rs\", &filename[0..r_idx]);\n+                        let source_path = file_path.with_file_name(source_name);\n+                        source_path.exists()\n+                    } else {\n+                        false\n+                    }\n+                });\n+\n+                if !found_matching_prefix {\n+                    println!(\"Stray file with UI testing output: {:?}\", file_path);\n+                    *bad = true;\n+                }\n             }\n         }\n     });"}]}