{"sha": "37b1779426f42d82c563a963f58f03172e88e5aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YjE3Nzk0MjZmNDJkODJjNTYzYTk2M2Y1OGYwMzE3MmU4OGU1YWE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-15T01:55:40Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-15T03:22:50Z"}, "message": "Look for a newline after match arm only when there is one", "tree": {"sha": "526764ad29ac7649caa397b3eb66741cc7c71583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/526764ad29ac7649caa397b3eb66741cc7c71583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37b1779426f42d82c563a963f58f03172e88e5aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37b1779426f42d82c563a963f58f03172e88e5aa", "html_url": "https://github.com/rust-lang/rust/commit/37b1779426f42d82c563a963f58f03172e88e5aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37b1779426f42d82c563a963f58f03172e88e5aa/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf775785e0ed7bcc76f81e9f7ba3c08363c571a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf775785e0ed7bcc76f81e9f7ba3c08363c571a6", "html_url": "https://github.com/rust-lang/rust/commit/bf775785e0ed7bcc76f81e9f7ba3c08363c571a6"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "a5d2334dcdab0b21df1c2f33b36d1ce8cd7d73bf", "filename": "src/lists.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/37b1779426f42d82c563a963f58f03172e88e5aa/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37b1779426f42d82c563a963f58f03172e88e5aa/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=37b1779426f42d82c563a963f58f03172e88e5aa", "patch": "@@ -602,7 +602,11 @@ where\n                         // Match arms may not have trailing comma. In any case, for match arms,\n                         // we will assume that the post comment belongs to the next arm if they\n                         // do not end with trailing comma.\n-                        1\n+                        if let Some(newline_index) = newline_index {\n+                            newline_index + 1\n+                        } else {\n+                            0\n+                        }\n                     }\n                 }\n                 None => post_snippet"}]}