{"sha": "22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyZmE3NjliYzQ1ZGE2N2RkNmE4YTYwYzRmOWFlOGI5ZjdlNTRlMjk=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-08T21:33:57Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-08T21:33:57Z"}, "message": "trans: don't misuse C_nil for ZSTs other than ().", "tree": {"sha": "1d3ac7ab035912c620f84205f04676df0880379f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d3ac7ab035912c620f84205f04676df0880379f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29", "html_url": "https://github.com/rust-lang/rust/commit/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "368f6ae8cb03c0986d30af704b64c58a2b87dfe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/368f6ae8cb03c0986d30af704b64c58a2b87dfe4", "html_url": "https://github.com/rust-lang/rust/commit/368f6ae8cb03c0986d30af704b64c58a2b87dfe4"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "b414e3435bf62a08474fd94e4643e15b8c9d9528", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29", "patch": "@@ -16,7 +16,7 @@ use rustc::mir::repr as mir;\n use rustc::mir::tcx::LvalueTy;\n use session::config::FullDebugInfo;\n use base;\n-use common::{self, Block, BlockAndBuilder, CrateContext, FunctionContext};\n+use common::{self, Block, BlockAndBuilder, CrateContext, FunctionContext, C_null};\n use debuginfo::{self, declare_local, DebugLoc, VariableAccess, VariableKind};\n use machine;\n use type_of;\n@@ -124,11 +124,12 @@ impl<'tcx> TempRef<'tcx> {\n             // Zero-size temporaries aren't always initialized, which\n             // doesn't matter because they don't contain data, but\n             // we need something in the operand.\n-            let nil = common::C_nil(ccx);\n+            let llty = type_of::type_of(ccx, ty);\n             let val = if common::type_is_imm_pair(ccx, ty) {\n-                OperandValue::Pair(nil, nil)\n+                let fields = llty.field_types();\n+                OperandValue::Pair(C_null(fields[0]), C_null(fields[1]))\n             } else {\n-                OperandValue::Immediate(nil)\n+                OperandValue::Immediate(C_null(llty))\n             };\n             let op = OperandRef {\n                 val: val,"}, {"sha": "2371909b31b779f96d46f57240526edc607775a5", "filename": "src/test/run-pass/mir_trans_calls.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29/src%2Ftest%2Frun-pass%2Fmir_trans_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29/src%2Ftest%2Frun-pass%2Fmir_trans_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_trans_calls.rs?ref=22fa769bc45da67dd6a8a60c4f9ae8b9f7e54e29", "patch": "@@ -30,6 +30,7 @@ fn test2(a: isize) -> isize {\n     callee(a)\n }\n \n+#[derive(PartialEq, Eq, Debug)]\n struct Foo;\n impl Foo {\n     fn inherent_method(&self, a: isize) -> isize { a }\n@@ -157,6 +158,19 @@ fn test_fn_ignored_pair_0() {\n     test_fn_ignored_pair().0\n }\n \n+#[rustc_mir]\n+fn id<T>(x: T) -> T { x }\n+\n+#[rustc_mir]\n+fn ignored_pair_named() -> (Foo, Foo) {\n+    (Foo, Foo)\n+}\n+\n+#[rustc_mir]\n+fn test_fn_ignored_pair_named() -> (Foo, Foo) {\n+    id(ignored_pair_named())\n+}\n+\n fn main() {\n     assert_eq!(test1(1, (2, 3), &[4, 5, 6]), (1, (2, 3), &[4, 5, 6][..]));\n     assert_eq!(test2(98), 98);\n@@ -181,4 +195,5 @@ fn main() {\n     assert_eq!(test_fn_transmute_zst(()), [()]);\n \n     assert_eq!(test_fn_ignored_pair_0(), ());\n+    assert_eq!(test_fn_ignored_pair_named(), (Foo, Foo));\n }"}]}