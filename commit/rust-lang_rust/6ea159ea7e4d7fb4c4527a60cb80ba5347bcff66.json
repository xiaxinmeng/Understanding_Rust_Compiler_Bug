{"sha": "6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYTE1OWVhN2U0ZDdmYjRjNDUyN2E2MGNiODBiYTUzNDdiY2ZmNjY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-02-08T10:50:53Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-02-11T18:01:40Z"}, "message": "Expose hidden snippet suggestions", "tree": {"sha": "2b2b310f4e6b9a6b473964cf1b094b5bf8881559", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b2b310f4e6b9a6b473964cf1b094b5bf8881559"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66", "html_url": "https://github.com/rust-lang/rust/commit/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b4e7c8a9efa9593907008e16b8f65242c72594", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b4e7c8a9efa9593907008e16b8f65242c72594", "html_url": "https://github.com/rust-lang/rust/commit/05b4e7c8a9efa9593907008e16b8f65242c72594"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "8394e66850e8c4824912a38cbcbbe2658a1be2b9", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66", "patch": "@@ -323,6 +323,29 @@ impl Diagnostic {\n         self\n     }\n \n+    /// Prints out a message with for a suggestion without showing the suggested code.\n+    ///\n+    /// This is intended to be used for suggestions that are obvious in what the changes need to\n+    /// be from the message, showing the span label inline would be visually unpleasant\n+    /// (marginally overlapping spans or multiline spans) and showing the snippet window wouldn't\n+    /// improve understandability.\n+    pub fn span_suggestion_hidden(\n+        &mut self, sp: Span, msg: &str, suggestion: String, applicability: Applicability\n+    ) -> &mut Self {\n+        self.suggestions.push(CodeSuggestion {\n+            substitutions: vec![Substitution {\n+                parts: vec![SubstitutionPart {\n+                    snippet: suggestion,\n+                    span: sp,\n+                }],\n+            }],\n+            msg: msg.to_owned(),\n+            style: SuggestionStyle::HideCodeInline,\n+            applicability: applicability,\n+        });\n+        self\n+    }\n+\n     pub fn set_span<S: Into<MultiSpan>>(&mut self, sp: S) -> &mut Self {\n         self.span = sp.into();\n         self"}, {"sha": "5b37a7bb3467d4be83d0da2c14821e9342c387a0", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66", "patch": "@@ -261,6 +261,26 @@ impl<'a> DiagnosticBuilder<'a> {\n         );\n         self\n     }\n+\n+    pub fn span_suggestion_hidden(\n+        &mut self,\n+        sp: Span,\n+        msg: &str,\n+        suggestion: String,\n+        applicability: Applicability,\n+    ) -> &mut Self {\n+        if !self.allow_suggestions {\n+            return self\n+        }\n+        self.diagnostic.span_suggestion_hidden(\n+            sp,\n+            msg,\n+            suggestion,\n+            applicability,\n+        );\n+        self\n+    }\n+\n     forward!(pub fn set_span<S: Into<MultiSpan>>(&mut self, sp: S) -> &mut Self);\n     forward!(pub fn code(&mut self, s: DiagnosticId) -> &mut Self);\n "}]}