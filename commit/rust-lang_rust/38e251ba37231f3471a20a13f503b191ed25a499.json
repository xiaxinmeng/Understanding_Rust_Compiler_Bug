{"sha": "38e251ba37231f3471a20a13f503b191ed25a499", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZTI1MWJhMzcyMzFmMzQ3MWEyMGExM2Y1MDNiMTkxZWQyNWE0OTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-24T14:15:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-24T14:15:56Z"}, "message": "Auto merge of #50079 - NickAtAccuPS:android_abstract_socket, r=sfackler\n\nAndroid abstract unix domain sockets AddressKind correction\n\nThe prior check causes abstract unix domain sockets to return AddressKind::Unnamed instead of AddressKind::Abstract on Android.\n\nOther than the immediately proceeding comment \"macOS seems to return a len of 16 and a zeroed sun_path for unnamed addresses\" the check as-implemented does not seem to have alternative explanation. I couldn't find an alternative explanation while stepping though git blame. I suspect the AddressKind::Unnamed nonzero check should instead be if macos, length 16, and zeroed array. @sfackler could you comment on this, the code as-is is the same from your initial addition of abstract uds support.", "tree": {"sha": "13d4e5496bc54d4c8b64877f39afe32c0bf287e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13d4e5496bc54d4c8b64877f39afe32c0bf287e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38e251ba37231f3471a20a13f503b191ed25a499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38e251ba37231f3471a20a13f503b191ed25a499", "html_url": "https://github.com/rust-lang/rust/commit/38e251ba37231f3471a20a13f503b191ed25a499", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38e251ba37231f3471a20a13f503b191ed25a499/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a6200a5c8f19763268f531302ed7ddccf1e7204", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a6200a5c8f19763268f531302ed7ddccf1e7204", "html_url": "https://github.com/rust-lang/rust/commit/2a6200a5c8f19763268f531302ed7ddccf1e7204"}, {"sha": "da6142c81057342d8d6686ae4078995aab73b5bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/da6142c81057342d8d6686ae4078995aab73b5bc", "html_url": "https://github.com/rust-lang/rust/commit/da6142c81057342d8d6686ae4078995aab73b5bc"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e277b1aa7b5f99b872c97f737558677d80bd2d76", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/38e251ba37231f3471a20a13f503b191ed25a499/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e251ba37231f3471a20a13f503b191ed25a499/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=38e251ba37231f3471a20a13f503b191ed25a499", "patch": "@@ -214,7 +214,10 @@ impl SocketAddr {\n         let path = unsafe { mem::transmute::<&[libc::c_char], &[u8]>(&self.addr.sun_path) };\n \n         // macOS seems to return a len of 16 and a zeroed sun_path for unnamed addresses\n-        if len == 0 || (cfg!(not(target_os = \"linux\")) && self.addr.sun_path[0] == 0) {\n+        if len == 0\n+            || (cfg!(not(any(target_os = \"linux\", target_os = \"android\")))\n+                && self.addr.sun_path[0] == 0)\n+        {\n             AddressKind::Unnamed\n         } else if self.addr.sun_path[0] == 0 {\n             AddressKind::Abstract(&path[1..len])"}]}