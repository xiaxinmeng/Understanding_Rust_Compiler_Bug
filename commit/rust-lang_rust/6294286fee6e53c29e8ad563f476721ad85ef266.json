{"sha": "6294286fee6e53c29e8ad563f476721ad85ef266", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyOTQyODZmZWU2ZTUzYzI5ZThhZDU2M2Y0NzY3MjFhZDg1ZWYyNjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-24T00:54:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-24T00:54:53Z"}, "message": "Merge #6610\n\n6610: add 'Re-enable this test' assist r=SomeoneToIgnore a=jakobhellermann\n\nThe `Ignore this test` assist previously allowed ignoring multiple times, each time adding a `#[ignore]` attribute.\r\n\r\nThis PR instead shows an assist to undo the ignoring.\n\nCo-authored-by: Jakob Hellermann <jakob.hellermann@protonmail.com>", "tree": {"sha": "a10e4e43027d124ef1ff9d9c7aadc36bd1c2ab9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a10e4e43027d124ef1ff9d9c7aadc36bd1c2ab9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6294286fee6e53c29e8ad563f476721ad85ef266", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfvFndCRBK7hj4Ov3rIwAAdHIIAJGfQZ7tCOqx8s7vtR2vgOC+\nzWofZAcUNps1rgdaeK7oWvwaPiA3FQepaP+g1Vb/oFsNkUE6vbHGOWJGN1/SwC6h\noO9Z82qZLQ/bcCl/1zOs2wBQ30KbtWy4pL1yDWrz7lG9EyUce3QHhU07AglKYfwt\nnJtXpsuZz5UhZaAXN/ntpYPYmx/+WltpEFmWKrBKR9GhxHeVD5fbgCUC2YzUliqU\nfsJWwy8m8t5QusnBYPUgmRuDmhpu2jz5/Luu+2XjVsceAObZme3VvCQ4zaS8RMiT\n/YC+kChyBG0sWnxEynIBfmPf+24gWbm/UPVJcwHV2RFLSJGvmBic4pG9JilsFlg=\n=KSWD\n-----END PGP SIGNATURE-----\n", "payload": "tree a10e4e43027d124ef1ff9d9c7aadc36bd1c2ab9d\nparent 2ff78cde31cb4f5a4e05ef51dc9347838f790898\nparent a172c2317c621ba15b7fc4c11b10040dac346ec8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1606179293 +0000\ncommitter GitHub <noreply@github.com> 1606179293 +0000\n\nMerge #6610\n\n6610: add 'Re-enable this test' assist r=SomeoneToIgnore a=jakobhellermann\n\nThe `Ignore this test` assist previously allowed ignoring multiple times, each time adding a `#[ignore]` attribute.\r\n\r\nThis PR instead shows an assist to undo the ignoring.\n\nCo-authored-by: Jakob Hellermann <jakob.hellermann@protonmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6294286fee6e53c29e8ad563f476721ad85ef266", "html_url": "https://github.com/rust-lang/rust/commit/6294286fee6e53c29e8ad563f476721ad85ef266", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6294286fee6e53c29e8ad563f476721ad85ef266/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ff78cde31cb4f5a4e05ef51dc9347838f790898", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff78cde31cb4f5a4e05ef51dc9347838f790898", "html_url": "https://github.com/rust-lang/rust/commit/2ff78cde31cb4f5a4e05ef51dc9347838f790898"}, {"sha": "a172c2317c621ba15b7fc4c11b10040dac346ec8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a172c2317c621ba15b7fc4c11b10040dac346ec8", "html_url": "https://github.com/rust-lang/rust/commit/a172c2317c621ba15b7fc4c11b10040dac346ec8"}], "stats": {"total": 83, "additions": 76, "deletions": 7}, "files": [{"sha": "2b9dff081fd684443c21ae3cf19b0a807c0434d1", "filename": "crates/assists/src/handlers/ignore_test.rs", "status": "modified", "additions": 76, "deletions": 7, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/6294286fee6e53c29e8ad563f476721ad85ef266/crates%2Fassists%2Fsrc%2Fhandlers%2Fignore_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6294286fee6e53c29e8ad563f476721ad85ef266/crates%2Fassists%2Fsrc%2Fhandlers%2Fignore_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fignore_test.rs?ref=6294286fee6e53c29e8ad563f476721ad85ef266", "patch": "@@ -1,4 +1,7 @@\n-use syntax::{ast, AstNode};\n+use syntax::{\n+    ast::{self, AttrsOwner},\n+    AstNode, AstToken,\n+};\n \n use crate::{utils::test_related_attribute, AssistContext, AssistId, AssistKind, Assists};\n \n@@ -25,10 +28,76 @@ pub(crate) fn ignore_test(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n     let func = attr.syntax().parent().and_then(ast::Fn::cast)?;\n     let attr = test_related_attribute(&func)?;\n \n-    acc.add(\n-        AssistId(\"ignore_test\", AssistKind::None),\n-        \"Ignore this test\",\n-        attr.syntax().text_range(),\n-        |builder| builder.insert(attr.syntax().text_range().end(), &format!(\"\\n#[ignore]\")),\n-    )\n+    match has_ignore_attribute(&func) {\n+        None => acc.add(\n+            AssistId(\"ignore_test\", AssistKind::None),\n+            \"Ignore this test\",\n+            attr.syntax().text_range(),\n+            |builder| builder.insert(attr.syntax().text_range().end(), &format!(\"\\n#[ignore]\")),\n+        ),\n+        Some(ignore_attr) => acc.add(\n+            AssistId(\"unignore_test\", AssistKind::None),\n+            \"Re-enable this test\",\n+            ignore_attr.syntax().text_range(),\n+            |builder| {\n+                builder.delete(ignore_attr.syntax().text_range());\n+                let whitespace = ignore_attr\n+                    .syntax()\n+                    .next_sibling_or_token()\n+                    .and_then(|x| x.into_token())\n+                    .and_then(ast::Whitespace::cast);\n+                if let Some(whitespace) = whitespace {\n+                    builder.delete(whitespace.syntax().text_range());\n+                }\n+            },\n+        ),\n+    }\n+}\n+\n+fn has_ignore_attribute(fn_def: &ast::Fn) -> Option<ast::Attr> {\n+    fn_def.attrs().find_map(|attr| {\n+        if attr.path()?.syntax().text().to_string() == \"ignore\" {\n+            Some(attr)\n+        } else {\n+            None\n+        }\n+    })\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::ignore_test;\n+    use crate::tests::check_assist;\n+\n+    #[test]\n+    fn test_base_case() {\n+        check_assist(\n+            ignore_test,\n+            r#\"\n+            #[test<|>]\n+            fn test() {}\n+            \"#,\n+            r#\"\n+            #[test]\n+            #[ignore]\n+            fn test() {}\n+            \"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn test_unignore() {\n+        check_assist(\n+            ignore_test,\n+            r#\"\n+            #[test<|>]\n+            #[ignore]\n+            fn test() {}\n+            \"#,\n+            r#\"\n+            #[test]\n+            fn test() {}\n+            \"#,\n+        )\n+    }\n }"}]}