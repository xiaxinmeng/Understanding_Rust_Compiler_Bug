{"sha": "8792c5c0407ecc4d3b9acf357d0adcc2f791dffa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3OTJjNWMwNDA3ZWNjNGQzYjlhY2YzNTdkMGFkY2MyZjc5MWRmZmE=", "commit": {"author": {"name": "Andreas Tolfsen", "email": "ato@mozilla.com", "date": "2015-07-07T14:15:22Z"}, "committer": {"name": "Andreas Tolfsen", "email": "ato@mozilla.com", "date": "2015-07-08T12:12:18Z"}, "message": "librustdoc: generalise handling of keyboard shortcuts", "tree": {"sha": "164846791da40e4322b7e46fc7265aa34b9ee43d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/164846791da40e4322b7e46fc7265aa34b9ee43d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8792c5c0407ecc4d3b9acf357d0adcc2f791dffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8792c5c0407ecc4d3b9acf357d0adcc2f791dffa", "html_url": "https://github.com/rust-lang/rust/commit/8792c5c0407ecc4d3b9acf357d0adcc2f791dffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8792c5c0407ecc4d3b9acf357d0adcc2f791dffa/comments", "author": {"login": "andreastt", "id": 399120, "node_id": "MDQ6VXNlcjM5OTEyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/399120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreastt", "html_url": "https://github.com/andreastt", "followers_url": "https://api.github.com/users/andreastt/followers", "following_url": "https://api.github.com/users/andreastt/following{/other_user}", "gists_url": "https://api.github.com/users/andreastt/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreastt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreastt/subscriptions", "organizations_url": "https://api.github.com/users/andreastt/orgs", "repos_url": "https://api.github.com/users/andreastt/repos", "events_url": "https://api.github.com/users/andreastt/events{/privacy}", "received_events_url": "https://api.github.com/users/andreastt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andreastt", "id": 399120, "node_id": "MDQ6VXNlcjM5OTEyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/399120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreastt", "html_url": "https://github.com/andreastt", "followers_url": "https://api.github.com/users/andreastt/followers", "following_url": "https://api.github.com/users/andreastt/following{/other_user}", "gists_url": "https://api.github.com/users/andreastt/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreastt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreastt/subscriptions", "organizations_url": "https://api.github.com/users/andreastt/orgs", "repos_url": "https://api.github.com/users/andreastt/repos", "events_url": "https://api.github.com/users/andreastt/events{/privacy}", "received_events_url": "https://api.github.com/users/andreastt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd8e175c4e39537b16beb40c704a17fcf9796852", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8e175c4e39537b16beb40c704a17fcf9796852", "html_url": "https://github.com/rust-lang/rust/commit/fd8e175c4e39537b16beb40c704a17fcf9796852"}], "stats": {"total": 92, "additions": 48, "deletions": 44}, "files": [{"sha": "c77cdd4d021837b645f868253783c939cb5893a9", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 48, "deletions": 44, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/8792c5c0407ecc4d3b9acf357d0adcc2f791dffa/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/8792c5c0407ecc4d3b9acf357d0adcc2f791dffa/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=8792c5c0407ecc4d3b9acf357d0adcc2f791dffa", "patch": "@@ -76,62 +76,65 @@\n     highlightSourceLines(null);\n     $(window).on('hashchange', highlightSourceLines);\n \n-    // Helper function for Keyboard events,\n-    // Get's the char from the keypress event\n+    // Gets the human-readable string for the virtual-key code of the\n+    // given KeyboardEvent, ev.\n     //\n-    // This method is used because e.wich === x is not\n-    // compatible with non-english keyboard layouts\n+    // This function is meant as a polyfill for KeyboardEvent#key,\n+    // since it is not supported in Trident.  We also test for\n+    // KeyboardEvent#keyCode because the handleShortcut handler is\n+    // also registered for the keydown event, because Blink doesn't fire\n+    // keypress on hitting the Escape key.\n     //\n-    // Note: event.type must be keypress !\n-    function getChar(event) {\n-      if (event.which == null) {\n-        return String.fromCharCode(event.keyCode) // IE\n-      } else if (event.which!=0 && event.charCode!=0) {\n-        return String.fromCharCode(event.which)   // the rest\n-      } else {\n-        return null // special key\n-      }\n+    // So I guess you could say things are getting pretty interoperable.\n+    function getVirtualKey(ev) {\n+        if (\"key\" in ev && typeof ev.key != \"undefined\")\n+            return ev.key;\n+\n+        var c = ev.charCode || ev.keyCode;\n+        if (c == 27)\n+            return \"Escape\";\n+        return String.fromCharCode(c);\n     }\n \n-    $(document).on('keypress', function handleKeyboardShortcut(e) {\n-        if (document.activeElement.tagName === 'INPUT') {\n+    function handleShortcut(ev) {\n+        if (document.activeElement.tagName == \"INPUT\")\n             return;\n-        }\n \n-        if (getChar(e) === '?') {\n-            if (e.shiftKey && $('#help').hasClass('hidden')) {\n-                e.preventDefault();\n-                $('#help').removeClass('hidden');\n+        switch (getVirtualKey(ev)) {\n+        case \"Escape\":\n+            if (!$(\"#help\").hasClass(\"hidden\")) {\n+                ev.preventDefault();\n+                $(\"#help\").addClass(\"hidden\");\n+            } else if (!$(\"#search\").hasClass(\"hidden\")) {\n+                ev.preventDefault();\n+                $(\"#search\").addClass(\"hidden\");\n+                $(\"#main\").removeClass(\"hidden\");\n             }\n-        } else if (getChar(e) === 's' || getChar(e) === 'S') {\n-            e.preventDefault();\n-            $('.search-input').focus();\n-        }\n-    }).on('keydown', function(e) {\n-        // The escape key event has to be captured with the keydown event.\n-        // Because keypressed has no keycode for the escape key\n-        // (and other special keys in general)...\n-        if (document.activeElement.tagName === 'INPUT') {\n-            return;\n-        }\n-\n-        if (e.keyCode === 27) { // escape key\n-            if (!$('#help').hasClass('hidden')) {\n-                e.preventDefault();\n-                $('#help').addClass('hidden');\n-            } else if (!$('#search').hasClass('hidden')) {\n-                e.preventDefault();\n-                $('#search').addClass('hidden');\n-                $('#main').removeClass('hidden');\n+            break;\n+\n+        case \"s\":\n+        case \"S\":\n+            ev.preventDefault();\n+            $(\".search-input\").focus();\n+            break;\n+\n+        case \"?\":\n+            if (ev.shiftKey && $(\"#help\").hasClass(\"hidden\")) {\n+                ev.preventDefault();\n+                $(\"#help\").removeClass(\"hidden\");\n             }\n+            break;\n         }\n-    }).on('click', function(e) {\n-        if (!$(e.target).closest('#help').length) {\n-            $('#help').addClass('hidden');\n+    }\n+\n+    $(document).on(\"keypress\", handleShortcut);\n+    $(document).on(\"keydown\", handleShortcut);\n+    $(document).on(\"click\", function(ev) {\n+        if (!$(ev.target).closest(\"#help\").length) {\n+            $(\"#help\").addClass(\"hidden\");\n         }\n     });\n \n-\n     $('.version-selector').on('change', function() {\n         var i, match,\n             url = document.location.href,\n@@ -150,6 +153,7 @@\n \n         document.location.href = url;\n     });\n+\n     /**\n      * A function to compute the Levenshtein distance between two strings\n      * Licensed under the Creative Commons Attribution-ShareAlike 3.0 Unported"}]}