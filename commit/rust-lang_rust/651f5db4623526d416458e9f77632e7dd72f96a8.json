{"sha": "651f5db4623526d416458e9f77632e7dd72f96a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MWY1ZGI0NjIzNTI2ZDQxNjQ1OGU5Zjc3NjMyZTdkZDcyZjk2YTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-26T23:04:05Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-26T23:04:05Z"}, "message": "Implement another error code found on windows.\n\nCloses #8811", "tree": {"sha": "701656ee731f6e3353ba45e85a6a79886ee31194", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/701656ee731f6e3353ba45e85a6a79886ee31194"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/651f5db4623526d416458e9f77632e7dd72f96a8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/651f5db4623526d416458e9f77632e7dd72f96a8", "html_url": "https://github.com/rust-lang/rust/commit/651f5db4623526d416458e9f77632e7dd72f96a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/651f5db4623526d416458e9f77632e7dd72f96a8/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcdcd309fb9baf06f835831c83b94a5ad1cdd568", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdcd309fb9baf06f835831c83b94a5ad1cdd568", "html_url": "https://github.com/rust-lang/rust/commit/dcdcd309fb9baf06f835831c83b94a5ad1cdd568"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "dc69c8486daad774185350af88b1e1bd0656a3ad", "filename": "src/libstd/rt/io/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fmod.rs?ref=651f5db4623526d416458e9f77632e7dd72f96a8", "patch": "@@ -368,6 +368,7 @@ pub enum IoErrorKind {\n     Closed,\n     ConnectionRefused,\n     ConnectionReset,\n+    ConnectionAborted,\n     NotConnected,\n     BrokenPipe,\n     PathAlreadyExists,\n@@ -397,6 +398,7 @@ impl ToStr for IoErrorKind {\n             MismatchedFileTypeForOperation => ~\"MismatchedFileTypeForOperation\",\n             IoUnavailable => ~\"IoUnavailable\",\n             ResourceUnavailable => ~\"ResourceUnavailable\",\n+            ConnectionAborted => ~\"ConnectionAborted\",\n         }\n     }\n }"}, {"sha": "6314c0755a0bc40834f66e431ad64746973a73c6", "filename": "src/libstd/rt/io/net/tcp.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs?ref=651f5db4623526d416458e9f77632e7dd72f96a8", "patch": "@@ -364,7 +364,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME #8811\n     fn write_close_ip4() {\n         do run_in_mt_newsched_task {\n             let addr = next_test_ip4();\n@@ -380,8 +379,11 @@ mod test {\n                 loop {\n                     let mut stop = false;\n                     do io_error::cond.trap(|e| {\n-                        // NB: ECONNRESET on linux, EPIPE on mac\n-                        assert!(e.kind == ConnectionReset || e.kind == BrokenPipe);\n+                        // NB: ECONNRESET on linux, EPIPE on mac, ECONNABORTED\n+                        //     on windows\n+                        assert!(e.kind == ConnectionReset ||\n+                                e.kind == BrokenPipe ||\n+                                e.kind == ConnectionAborted);\n                         stop = true;\n                     }).inside {\n                         stream.write(buf);\n@@ -399,7 +401,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME #8811\n     fn write_close_ip6() {\n         do run_in_mt_newsched_task {\n             let addr = next_test_ip6();\n@@ -415,8 +416,11 @@ mod test {\n                 loop {\n                     let mut stop = false;\n                     do io_error::cond.trap(|e| {\n-                        // NB: ECONNRESET on linux, EPIPE on mac\n-                        assert!(e.kind == ConnectionReset || e.kind == BrokenPipe);\n+                        // NB: ECONNRESET on linux, EPIPE on mac, ECONNABORTED\n+                        //     on windows\n+                        assert!(e.kind == ConnectionReset ||\n+                                e.kind == BrokenPipe ||\n+                                e.kind == ConnectionAborted);\n                         stop = true;\n                     }).inside {\n                         stream.write(buf);"}, {"sha": "b611c6a5c5da0381ed31799c5d128ccd22a2be9b", "filename": "src/libstd/rt/uv/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fmod.rs?ref=651f5db4623526d416458e9f77632e7dd72f96a8", "patch": "@@ -314,6 +314,7 @@ pub fn uv_error_to_io_error(uverr: UvError) -> IoError {\n             ECONNRESET => ConnectionReset,\n             ENOTCONN => NotConnected,\n             EPIPE => BrokenPipe,\n+            ECONNABORTED => ConnectionAborted,\n             err => {\n                 rtdebug!(\"uverr.code {}\", err as int);\n                 // XXX: Need to map remaining uv error types"}, {"sha": "2964eb9c58be3f4befbe35ec34f5e2794de442aa", "filename": "src/libstd/rt/uv/uvll.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651f5db4623526d416458e9f77632e7dd72f96a8/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs?ref=651f5db4623526d416458e9f77632e7dd72f96a8", "patch": "@@ -55,6 +55,7 @@ pub mod errors {\n     pub static ECONNRESET: c_int = -4078;\n     pub static ENOTCONN: c_int = -4054;\n     pub static EPIPE: c_int = -4048;\n+    pub static ECONNABORTED: c_int = -4080;\n }\n #[cfg(not(windows))]\n pub mod errors {\n@@ -66,6 +67,7 @@ pub mod errors {\n     pub static ECONNRESET: c_int = -libc::ECONNRESET;\n     pub static ENOTCONN: c_int = -libc::ENOTCONN;\n     pub static EPIPE: c_int = -libc::EPIPE;\n+    pub static ECONNABORTED: c_int = -libc::ECONNABORTED;\n }\n \n pub static PROCESS_SETUID: c_int = 1 << 0;"}]}