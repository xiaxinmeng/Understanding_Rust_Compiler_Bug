{"sha": "d3a585e593f441405fd30d082b8eb70e0b4c0d62", "node_id": "C_kwDOAAsO6NoAKGQzYTU4NWU1OTNmNDQxNDA1ZmQzMGQwODJiOGViNzBlMGI0YzBkNjI", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-05-09T15:55:06Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-06-23T20:10:47Z"}, "message": "Panic safety.", "tree": {"sha": "2e624a7266c11d7887c41a09f88260197f4bba51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e624a7266c11d7887c41a09f88260197f4bba51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3a585e593f441405fd30d082b8eb70e0b4c0d62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a585e593f441405fd30d082b8eb70e0b4c0d62", "html_url": "https://github.com/rust-lang/rust/commit/d3a585e593f441405fd30d082b8eb70e0b4c0d62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3a585e593f441405fd30d082b8eb70e0b4c0d62/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caf8bcceff301b4fa3414e3f21813581a8d758a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/caf8bcceff301b4fa3414e3f21813581a8d758a3", "html_url": "https://github.com/rust-lang/rust/commit/caf8bcceff301b4fa3414e3f21813581a8d758a3"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "718308d1e2a40d10ef0fdc7f15ebb12cb0b5406e", "filename": "library/std/src/sys_common/wtf8.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d3a585e593f441405fd30d082b8eb70e0b4c0d62/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a585e593f441405fd30d082b8eb70e0b4c0d62/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs?ref=d3a585e593f441405fd30d082b8eb70e0b4c0d62", "patch": "@@ -220,11 +220,11 @@ impl Wtf8Buf {\n                     let surrogate = surrogate.unpaired_surrogate();\n                     // Surrogates are known to be in the code point range.\n                     let code_point = unsafe { CodePoint::from_u32_unchecked(surrogate as u32) };\n+                    // The string will now contain an unpaired surrogate.\n+                    string.is_known_utf8 = false;\n                     // Skip the WTF-8 concatenation check,\n                     // surrogate pairs are already decoded by decode_utf16\n                     string.push_code_point_unchecked(code_point);\n-                    // The string now contains an unpaired surrogate.\n-                    string.is_known_utf8 = false;\n                 }\n             }\n         }\n@@ -346,13 +346,13 @@ impl Wtf8Buf {\n                 self.bytes.extend_from_slice(other_without_trail_surrogate);\n             }\n             _ => {\n-                self.bytes.extend_from_slice(&other.bytes);\n-\n-                // If we're pushing a string containing a surrogate, we may no\n-                // longer have UTF-8.\n+                // If we'll be pushing a string containing a surrogate, we may\n+                // no longer have UTF-8.\n                 if other.next_surrogate(0).is_some() {\n                     self.is_known_utf8 = false;\n                 }\n+\n+                self.bytes.extend_from_slice(&other.bytes);\n             }\n         }\n     }\n@@ -721,8 +721,8 @@ impl Wtf8 {\n     }\n \n     pub fn clone_into(&self, buf: &mut Wtf8Buf) {\n-        self.bytes.clone_into(&mut buf.bytes);\n         buf.is_known_utf8 = false;\n+        self.bytes.clone_into(&mut buf.bytes);\n     }\n \n     /// Boxes this `Wtf8`."}]}