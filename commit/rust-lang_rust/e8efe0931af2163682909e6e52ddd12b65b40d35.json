{"sha": "e8efe0931af2163682909e6e52ddd12b65b40d35", "node_id": "C_kwDOAAsO6NoAKGU4ZWZlMDkzMWFmMjE2MzY4MjkwOWU2ZTUyZGRkMTJiNjViNDBkMzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-16T06:02:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-16T06:02:24Z"}, "message": "Rollup merge of #89914 - jackh726:gat_genericboundfailure, r=estebank\n\nEmit impl difference error for GenericBoundFailure too\n\nFixes #86787\n\nr? ````@estebank````", "tree": {"sha": "54666abe8ead7ad939f9b34af3846e32bc83a939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54666abe8ead7ad939f9b34af3846e32bc83a939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8efe0931af2163682909e6e52ddd12b65b40d35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhamrxCRBK7hj4Ov3rIwAAPIMIAETngYQ6RdWV+gb6SqBH4jhU\nzua5F7bR1ks5gZ3SyucMdRwNC2I1milNozlsVuzYLIcGvo5Abr6gmhHv2tI9Xwla\nTzyVxblj81eLFIappFP2r5ox0SRJGGeN022kHWo7swbiB6m8v079VWHlWnq9N23Y\nQWH4Whnx9D4cfAlj+c7x8VAoq+8QGkhQbp0NTA/V+gwqFQNZpQlecOLuXixMUG9m\n25jLEFSLiaClVgG9O4Uo/p7rMABAm2quC38Ygy26k+aZukXjeAfTJPXQO6W1gfSS\nEEo0fchPWeie+Q3fs2gQs2JnvIC1ONy0Fs7SiZR+tRR4QB+TsfakhglfDHnTXnY=\n=zRU/\n-----END PGP SIGNATURE-----\n", "payload": "tree 54666abe8ead7ad939f9b34af3846e32bc83a939\nparent 27a7ced29f952fc73adb25231f52c8b2d9535497\nparent c4f9eb1e5a6ab0f1eaf36170b083e28946c69e15\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634364144 +0200\ncommitter GitHub <noreply@github.com> 1634364144 +0200\n\nRollup merge of #89914 - jackh726:gat_genericboundfailure, r=estebank\n\nEmit impl difference error for GenericBoundFailure too\n\nFixes #86787\n\nr? ````@estebank````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8efe0931af2163682909e6e52ddd12b65b40d35", "html_url": "https://github.com/rust-lang/rust/commit/e8efe0931af2163682909e6e52ddd12b65b40d35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8efe0931af2163682909e6e52ddd12b65b40d35/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27a7ced29f952fc73adb25231f52c8b2d9535497", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a7ced29f952fc73adb25231f52c8b2d9535497", "html_url": "https://github.com/rust-lang/rust/commit/27a7ced29f952fc73adb25231f52c8b2d9535497"}, {"sha": "c4f9eb1e5a6ab0f1eaf36170b083e28946c69e15", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4f9eb1e5a6ab0f1eaf36170b083e28946c69e15", "html_url": "https://github.com/rust-lang/rust/commit/c4f9eb1e5a6ab0f1eaf36170b083e28946c69e15"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "ea9d0eae17e2c46b27a713da65513ef1351e6af9", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8efe0931af2163682909e6e52ddd12b65b40d35/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8efe0931af2163682909e6e52ddd12b65b40d35/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=e8efe0931af2163682909e6e52ddd12b65b40d35", "patch": "@@ -46,7 +46,9 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n                 }\n             }\n         }\n-        if let RegionResolutionError::ConcreteFailure(origin, _, _) = error.clone() {\n+        if let RegionResolutionError::ConcreteFailure(origin, _, _)\n+        | RegionResolutionError::GenericBoundFailure(origin, _, _) = error.clone()\n+        {\n             if let SubregionOrigin::CompareImplTypeObligation {\n                 span,\n                 item_name,"}, {"sha": "ff2ffec22c4564a65a0b49a151edcab3a61825ec", "filename": "src/test/ui/generic-associated-types/impl_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs?ref=e8efe0931af2163682909e6e52ddd12b65b40d35", "patch": "@@ -13,7 +13,7 @@ struct Fooy<T>(T);\n \n impl<T> Foo for Fooy<T> {\n     type A<'a> where Self: 'static = (&'a ());\n-    //~^ ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR `impl` associated type\n     type B<'a, 'b> where 'b: 'a = (&'a(), &'b ());\n     //~^ ERROR `impl` associated type\n     //~| ERROR lifetime bound not satisfied"}, {"sha": "f47b5f81e25b2c2a5fc55d7c3f44021dc827c2e6", "filename": "src/test/ui/generic-associated-types/impl_bounds.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr?ref=e8efe0931af2163682909e6e52ddd12b65b40d35", "patch": "@@ -1,11 +1,11 @@\n-error[E0310]: the parameter type `T` may not live long enough\n+error: `impl` associated type signature for `A` doesn't match `trait` associated type signature\n   --> $DIR/impl_bounds.rs:15:5\n    |\n+LL |     type A<'a> where Self: 'a;\n+   |     -------------------------- expected\n+...\n LL |     type A<'a> where Self: 'static = (&'a ());\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider adding an explicit lifetime bound `T: 'static`...\n-   = note: ...so that the definition in impl matches the definition from the trait\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found\n \n error: `impl` associated type signature for `B` doesn't match `trait` associated type signature\n   --> $DIR/impl_bounds.rs:17:5\n@@ -85,5 +85,5 @@ LL | impl<T: std::marker::Copy> Foo for Fooy<T> {\n \n error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0277, E0310, E0478.\n+Some errors have detailed explanations: E0277, E0478.\n For more information about an error, try `rustc --explain E0277`."}, {"sha": "f1f05ea6627e8f9282564e85d5732af2eea4488e", "filename": "src/test/ui/generic-associated-types/issue-86787.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.rs?ref=e8efe0931af2163682909e6e52ddd12b65b40d35", "patch": "@@ -21,8 +21,8 @@ where\n {\n     type T = Either<Left::T, Right::T>;\n     type TRef<'a>\n-    //~^ the associated type\n-    //~^^ the associated type\n+    //~^ `impl` associated type signature\n+    //~^^ `impl` associated type signature\n     where\n     <Left as HasChildrenOf>::T: 'a,\n     <Right as HasChildrenOf>::T: 'a"}, {"sha": "648eff77d73bb876abde0e156833a300d6db1494", "filename": "src/test/ui/generic-associated-types/issue-86787.stderr", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8efe0931af2163682909e6e52ddd12b65b40d35/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.stderr?ref=e8efe0931af2163682909e6e52ddd12b65b40d35", "patch": "@@ -1,29 +1,32 @@\n-error[E0309]: the associated type `<Left as HasChildrenOf>::T` may not live long enough\n+error: `impl` associated type signature for `TRef` doesn't match `trait` associated type signature\n   --> $DIR/issue-86787.rs:23:5\n    |\n+LL |       type TRef<'a>;\n+   |       -------------- expected\n+...\n LL | /     type TRef<'a>\n LL | |\n LL | |\n LL | |     where\n LL | |     <Left as HasChildrenOf>::T: 'a,\n LL | |     <Right as HasChildrenOf>::T: 'a\n-   | |                                    - help: consider adding a where clause: `, <Left as HasChildrenOf>::T: 'a`\n LL | |     = Either<&'a Left::T, &'a Right::T>;\n-   | |________________________________________^ ...so that the definition in impl matches the definition from the trait\n+   | |________________________________________^ found\n \n-error[E0309]: the associated type `<Right as HasChildrenOf>::T` may not live long enough\n+error: `impl` associated type signature for `TRef` doesn't match `trait` associated type signature\n   --> $DIR/issue-86787.rs:23:5\n    |\n+LL |       type TRef<'a>;\n+   |       -------------- expected\n+...\n LL | /     type TRef<'a>\n LL | |\n LL | |\n LL | |     where\n LL | |     <Left as HasChildrenOf>::T: 'a,\n LL | |     <Right as HasChildrenOf>::T: 'a\n-   | |                                    - help: consider adding a where clause: `, <Right as HasChildrenOf>::T: 'a`\n LL | |     = Either<&'a Left::T, &'a Right::T>;\n-   | |________________________________________^ ...so that the definition in impl matches the definition from the trait\n+   | |________________________________________^ found\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0309`."}]}