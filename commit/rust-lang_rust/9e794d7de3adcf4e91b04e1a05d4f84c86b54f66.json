{"sha": "9e794d7de3adcf4e91b04e1a05d4f84c86b54f66", "node_id": "C_kwDOAAsO6NoAKDllNzk0ZDdkZTNhZGNmNGU5MWIwNGUxYTA1ZDRmODRjODZiNTRmNjY", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-20T02:51:07Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-20T03:04:34Z"}, "message": "Eliminate offset number from Fits frames\n\nPrintStackElems with pbreak=PrintStackBreak::Fits always carried a\nmeaningless value offset=0. We can combine the two types PrintStackElem\n+ PrintStackBreak into one PrintFrame enum that stores offset only for\nBroken frames.", "tree": {"sha": "755485df494b0821281d08726045853ecc747cb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/755485df494b0821281d08726045853ecc747cb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e794d7de3adcf4e91b04e1a05d4f84c86b54f66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHo0UIACgkQ+boUO5X/\nbYLWjBAAsmJqSjNKLrM+Hlr73N2ar3HCE30UhtIu5TQv0KPAVPXPqCA4JKn5b7yV\nZhFb/BtDANpz3mTeFHzYggNKaUR3YrHPSO2yiP0zQpj6ZoawMN6nMkfQY1B5Wz4m\nuoUGTfGfZMvj7iQeKysii85ebJNHwHSWnaQ4XcjORL7hPnS2xgxhhvTCZVxyd+ni\nk4an7gcjdHU7m48SV4n3FCCDOOjiUt6ihVe1XB936Hys+4GOZ4pix2dHa+PKmUZ5\nIosq3hIWnrWaXfXFffe+Pu4dqSQBZpYKb3PNMvbzxCYEaRsrqW0ny1rlD6+F/4T/\nf7JGnmSsH4zAivHI05VupsnXPg83aaP/26sVJV3zx62Lb9Uv4zU+SBPeGZMZJGQk\nywN8+xg247vXjcJKk9nFlfqllBwyXdlQhUlMi6OUFOHs6MdZX0fIBdr3tIYWg47t\nJ0/qBnstc+httx0zPFZquebRVXLEXDv+qvL62kl1YLoLvB0WcdX2lqrPHBWJzD3r\nny1/7pEMEX0Lr3V+Jx0mf5RA/3cUtaXMB5/Lko4DuZv0sLMWSOIpZuvQb3E2H5kv\nmYS9toWnY/SBLAY0p+GrLsbbkhm5BqLExOCQyaMyMQM2qN4mEJ2VYWPl+WUL5OR9\nKXU00ZTtnod+y0o1Z/X/ITkH3o1B8kIUVt4FnlbCu6pvizbE9UU=\n=ynsc\n-----END PGP SIGNATURE-----", "payload": "tree 755485df494b0821281d08726045853ecc747cb5\nparent 65dd67096e6771a3bdf5b9b4a4cd638777a0ae89\nauthor David Tolnay <dtolnay@gmail.com> 1642647067 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1642647874 -0800\n\nEliminate offset number from Fits frames\n\nPrintStackElems with pbreak=PrintStackBreak::Fits always carried a\nmeaningless value offset=0. We can combine the two types PrintStackElem\n+ PrintStackBreak into one PrintFrame enum that stores offset only for\nBroken frames.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e794d7de3adcf4e91b04e1a05d4f84c86b54f66", "html_url": "https://github.com/rust-lang/rust/commit/9e794d7de3adcf4e91b04e1a05d4f84c86b54f66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e794d7de3adcf4e91b04e1a05d4f84c86b54f66/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65dd67096e6771a3bdf5b9b4a4cd638777a0ae89", "url": "https://api.github.com/repos/rust-lang/rust/commits/65dd67096e6771a3bdf5b9b4a4cd638777a0ae89", "html_url": "https://github.com/rust-lang/rust/commit/65dd67096e6771a3bdf5b9b4a4cd638777a0ae89"}], "stats": {"total": 47, "additions": 19, "deletions": 28}, "files": [{"sha": "de57820d2613d0649bbcbfea7b56f122ebfac65b", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/9e794d7de3adcf4e91b04e1a05d4f84c86b54f66/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e794d7de3adcf4e91b04e1a05d4f84c86b54f66/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=9e794d7de3adcf4e91b04e1a05d4f84c86b54f66", "patch": "@@ -176,15 +176,9 @@ impl Token {\n }\n \n #[derive(Copy, Clone)]\n-enum PrintStackBreak {\n+enum PrintFrame {\n     Fits,\n-    Broken(Breaks),\n-}\n-\n-#[derive(Copy, Clone)]\n-struct PrintStackElem {\n-    offset: isize,\n-    pbreak: PrintStackBreak,\n+    Broken { offset: isize, breaks: Breaks },\n }\n \n const SIZE_INFINITY: isize = 0xffff;\n@@ -209,7 +203,7 @@ pub struct Printer {\n     /// advancing.\n     scan_stack: VecDeque<usize>,\n     /// Stack of blocks-in-progress being flushed by print\n-    print_stack: Vec<PrintStackElem>,\n+    print_stack: Vec<PrintFrame>,\n     /// Buffered indentation to avoid writing trailing whitespace\n     pending_indentation: isize,\n     /// The token most recently popped from the left boundary of the\n@@ -380,21 +374,19 @@ impl Printer {\n         self.pending_indentation += amount;\n     }\n \n-    fn get_top(&self) -> PrintStackElem {\n-        *self.print_stack.last().unwrap_or({\n-            &PrintStackElem { offset: 0, pbreak: PrintStackBreak::Broken(Breaks::Inconsistent) }\n-        })\n+    fn get_top(&self) -> PrintFrame {\n+        *self\n+            .print_stack\n+            .last()\n+            .unwrap_or(&PrintFrame::Broken { offset: 0, breaks: Breaks::Inconsistent })\n     }\n \n     fn print_begin(&mut self, token: BeginToken, size: isize) {\n         if size > self.space {\n             let col = self.margin - self.space + token.offset;\n-            self.print_stack.push(PrintStackElem {\n-                offset: col,\n-                pbreak: PrintStackBreak::Broken(token.breaks),\n-            });\n+            self.print_stack.push(PrintFrame::Broken { offset: col, breaks: token.breaks });\n         } else {\n-            self.print_stack.push(PrintStackElem { offset: 0, pbreak: PrintStackBreak::Fits });\n+            self.print_stack.push(PrintFrame::Fits);\n         }\n     }\n \n@@ -403,20 +395,19 @@ impl Printer {\n     }\n \n     fn print_break(&mut self, token: BreakToken, size: isize) {\n-        let top = self.get_top();\n-        match top.pbreak {\n-            PrintStackBreak::Fits => {\n-                self.space -= token.blank_space;\n+        match self.get_top() {\n+            PrintFrame::Fits => {\n                 self.indent(token.blank_space);\n+                self.space -= token.blank_space;\n             }\n-            PrintStackBreak::Broken(Breaks::Consistent) => {\n-                self.print_newline(top.offset + token.offset);\n-                self.space = self.margin - (top.offset + token.offset);\n+            PrintFrame::Broken { offset, breaks: Breaks::Consistent } => {\n+                self.print_newline(offset + token.offset);\n+                self.space = self.margin - (offset + token.offset);\n             }\n-            PrintStackBreak::Broken(Breaks::Inconsistent) => {\n+            PrintFrame::Broken { offset, breaks: Breaks::Inconsistent } => {\n                 if size > self.space {\n-                    self.print_newline(top.offset + token.offset);\n-                    self.space = self.margin - (top.offset + token.offset);\n+                    self.print_newline(offset + token.offset);\n+                    self.space = self.margin - (offset + token.offset);\n                 } else {\n                     self.indent(token.blank_space);\n                     self.space -= token.blank_space;"}]}