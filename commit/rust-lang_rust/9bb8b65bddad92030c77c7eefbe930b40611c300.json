{"sha": "9bb8b65bddad92030c77c7eefbe930b40611c300", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYjhiNjViZGRhZDkyMDMwYzc3YzdlZWZiZTkzMGI0MDYxMWMzMDA=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2016-08-21T01:07:19Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2016-08-21T01:07:19Z"}, "message": "Update E0503 to the new format\n\nFixes #35703\nPart of #35233", "tree": {"sha": "ad5a56163d61cf022e1eb13048e5220a16158866", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad5a56163d61cf022e1eb13048e5220a16158866"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bb8b65bddad92030c77c7eefbe930b40611c300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb8b65bddad92030c77c7eefbe930b40611c300", "html_url": "https://github.com/rust-lang/rust/commit/9bb8b65bddad92030c77c7eefbe930b40611c300", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bb8b65bddad92030c77c7eefbe930b40611c300/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "490189634b656dcca9e41e6b52093569c03bd4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/490189634b656dcca9e41e6b52093569c03bd4df", "html_url": "https://github.com/rust-lang/rust/commit/490189634b656dcca9e41e6b52093569c03bd4df"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "c1f162e5772bf41d81cffac9fa3a52bff9481341", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=9bb8b65bddad92030c77c7eefbe930b40611c300", "patch": "@@ -647,10 +647,13 @@ impl<'a, 'tcx> CheckLoanCtxt<'a, 'tcx> {\n                 struct_span_err!(self.bccx, span, E0503,\n                                  \"cannot use `{}` because it was mutably borrowed\",\n                                  &self.bccx.loan_path_to_string(copy_path))\n-                    .span_note(loan_span,\n+                    .span_label(loan_span,\n                                &format!(\"borrow of `{}` occurs here\",\n                                        &self.bccx.loan_path_to_string(&loan_path))\n                                )\n+                    .span_label(span,\n+                               &format!(\"use of borrowed `{}`\",\n+                                        &self.bccx.loan_path_to_string(&loan_path)))\n                     .emit();\n             }\n         }"}, {"sha": "530822f6c5bafb1c387cae483b780d8536be33e8", "filename": "src/test/compile-fail/borrowck/borrowck-box-insensitivity.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-box-insensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-box-insensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-box-insensitivity.rs?ref=9bb8b65bddad92030c77c7eefbe930b40611c300", "patch": "@@ -71,6 +71,7 @@ fn copy_after_mut_borrow() {\n     let _x = &mut a.x;\n     //~^ NOTE borrow of `a.x` occurs here\n     let _y = a.y; //~ ERROR cannot use\n+    //~^ NOTE use of borrowed `a.x`\n }\n \n fn move_after_mut_borrow() {\n@@ -141,6 +142,7 @@ fn copy_after_mut_borrow_nested() {\n     let _x = &mut a.x.x;\n     //~^ NOTE borrow of `a.x.x` occurs here\n     let _y = a.y; //~ ERROR cannot use\n+    //~^ NOTE use of borrowed `a.x.x`\n }\n \n fn move_after_mut_borrow_nested() {"}, {"sha": "ceefd583a5ca6f1b22de8dd9c8403e625297ec08", "filename": "src/test/compile-fail/issue-25793.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Ftest%2Fcompile-fail%2Fissue-25793.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Ftest%2Fcompile-fail%2Fissue-25793.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-25793.rs?ref=9bb8b65bddad92030c77c7eefbe930b40611c300", "patch": "@@ -12,6 +12,7 @@ macro_rules! width(\n     ($this:expr) => {\n         $this.width.unwrap()\n         //~^ ERROR cannot use `self.width` because it was mutably borrowed\n+        //~| NOTE use of borrowed `*self`\n     }\n );\n "}, {"sha": "8c026df7d9754ea846ad63bd58e88db69de29964", "filename": "src/test/compile-fail/regions-escape-loop-via-vec.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Ftest%2Fcompile-fail%2Fregions-escape-loop-via-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb8b65bddad92030c77c7eefbe930b40611c300/src%2Ftest%2Fcompile-fail%2Fregions-escape-loop-via-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-escape-loop-via-vec.rs?ref=9bb8b65bddad92030c77c7eefbe930b40611c300", "patch": "@@ -12,11 +12,20 @@\n fn broken() {\n     let mut x = 3;\n     let mut _y = vec!(&mut x);\n+    //~^ NOTE borrow of `x` occurs here\n+    //~| NOTE borrow of `x` occurs here\n+    //~| NOTE borrow of `x` occurs here\n     while x < 10 { //~ ERROR cannot use `x` because it was mutably borrowed\n+        //~^ NOTE use of borrowed `x`\n         let mut z = x; //~ ERROR cannot use `x` because it was mutably borrowed\n+        //~^ NOTE use of borrowed `x`\n         _y.push(&mut z); //~ ERROR `z` does not live long enough\n+        //~^ NOTE does not live long enough\n         x += 1; //~ ERROR cannot assign\n+        //~^ NOTE assignment to borrowed `x` occurs here\n     }\n+    //~^ NOTE borrowed value only valid until here\n }\n+//~^ NOTE borrowed value must be valid until here\n \n fn main() { }"}]}