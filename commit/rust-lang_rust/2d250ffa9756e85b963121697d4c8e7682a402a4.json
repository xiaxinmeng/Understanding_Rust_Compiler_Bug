{"sha": "2d250ffa9756e85b963121697d4c8e7682a402a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMjUwZmZhOTc1NmU4NWI5NjMxMjE2OTdkNGM4ZTc2ODJhNDAyYTQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-14T09:44:53Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-14T09:44:53Z"}, "message": "Fix miscompilation in previous commit", "tree": {"sha": "3916f445d8b0fe669cb5ff9acdcc69cde25a9f18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3916f445d8b0fe669cb5ff9acdcc69cde25a9f18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d250ffa9756e85b963121697d4c8e7682a402a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d250ffa9756e85b963121697d4c8e7682a402a4", "html_url": "https://github.com/rust-lang/rust/commit/2d250ffa9756e85b963121697d4c8e7682a402a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d250ffa9756e85b963121697d4c8e7682a402a4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb59d616aa62217b8f4c56311766957710d9e984", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb59d616aa62217b8f4c56311766957710d9e984", "html_url": "https://github.com/rust-lang/rust/commit/bb59d616aa62217b8f4c56311766957710d9e984"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "263b6c40a2054fb004a9add22a96cafd63c567a9", "filename": "src/base.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2d250ffa9756e85b963121697d4c8e7682a402a4/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d250ffa9756e85b963121697d4c8e7682a402a4/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=2d250ffa9756e85b963121697d4c8e7682a402a4", "patch": "@@ -701,19 +701,22 @@ fn trans_stmt<'tcx>(\n                         fx.bcx.call_memset(fx.cx.module.target_config(), addr, val, times);\n                     } else {\n                         let loop_block = fx.bcx.create_block();\n+                        let loop_block2 = fx.bcx.create_block();\n                         let done_block = fx.bcx.create_block();\n                         let index = fx.bcx.append_block_param(loop_block, fx.pointer_type);\n                         let zero = fx.bcx.ins().iconst(fx.pointer_type, 0);\n                         fx.bcx.ins().jump(loop_block, &[zero]);\n \n                         fx.bcx.switch_to_block(loop_block);\n+                        let done = fx.bcx.ins().icmp_imm(IntCC::Equal, index, times as i64);\n+                        fx.bcx.ins().brnz(done, done_block, &[]);\n+                        fx.bcx.ins().jump(loop_block2, &[]);\n+\n+                        fx.bcx.switch_to_block(loop_block2);\n                         let to = lval.place_index(fx, index);\n                         to.write_cvalue(fx, operand);\n-\n                         let index = fx.bcx.ins().iadd_imm(index, 1);\n-                        let done = fx.bcx.ins().icmp_imm(IntCC::Equal, index, times as i64);\n-                        fx.bcx.ins().brz(done, loop_block, &[index]);\n-                        fx.bcx.ins().jump(done_block, &[]);\n+                        fx.bcx.ins().jump(loop_block, &[index]);\n \n                         fx.bcx.switch_to_block(done_block);\n                     }"}]}