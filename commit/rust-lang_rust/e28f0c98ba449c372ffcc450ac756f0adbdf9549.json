{"sha": "e28f0c98ba449c372ffcc450ac756f0adbdf9549", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyOGYwYzk4YmE0NDljMzcyZmZjYzQ1MGFjNzU2ZjBhZGJkZjk1NDk=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-05T16:54:31Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-05T17:21:03Z"}, "message": "Get rid of some walk_mut uses", "tree": {"sha": "7a5ee320a6ac5615fb8270e3a9fae3b4bd9c0419", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a5ee320a6ac5615fb8270e3a9fae3b4bd9c0419"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e28f0c98ba449c372ffcc450ac756f0adbdf9549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e28f0c98ba449c372ffcc450ac756f0adbdf9549", "html_url": "https://github.com/rust-lang/rust/commit/e28f0c98ba449c372ffcc450ac756f0adbdf9549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e28f0c98ba449c372ffcc450ac756f0adbdf9549/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30a339e038bfd94d8c91f79287be9b7db4f0cb4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/30a339e038bfd94d8c91f79287be9b7db4f0cb4e", "html_url": "https://github.com/rust-lang/rust/commit/30a339e038bfd94d8c91f79287be9b7db4f0cb4e"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "06187df564434593394b40acca78c3a5c58be187", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e28f0c98ba449c372ffcc450ac756f0adbdf9549/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e28f0c98ba449c372ffcc450ac756f0adbdf9549/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=e28f0c98ba449c372ffcc450ac756f0adbdf9549", "patch": "@@ -108,19 +108,22 @@ impl<'a, 'b> Canonicalizer<'a, 'b> {\n }\n \n impl<T> Canonicalized<T> {\n-    pub(super) fn decanonicalize_ty(&self, mut ty: Ty) -> Ty {\n-        ty.walk_mut_binders(\n+    pub(super) fn decanonicalize_ty(&self, ty: Ty) -> Ty {\n+        ty.fold_binders(\n             &mut |ty, binders| {\n-                if let &mut TyKind::BoundVar(bound) = ty.interned_mut() {\n+                if let TyKind::BoundVar(bound) = ty.kind(&Interner) {\n                     if bound.debruijn >= binders {\n                         let (v, k) = self.free_vars[bound.index];\n-                        *ty = TyKind::InferenceVar(v, k).intern(&Interner);\n+                        TyKind::InferenceVar(v, k).intern(&Interner)\n+                    } else {\n+                        ty\n                     }\n+                } else {\n+                    ty\n                 }\n             },\n             DebruijnIndex::INNERMOST,\n-        );\n-        ty\n+        )\n     }\n \n     pub(super) fn apply_solution("}, {"sha": "a3c3ef6b2593cf19901b0ee2fd49d9536666105c", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e28f0c98ba449c372ffcc450ac756f0adbdf9549/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e28f0c98ba449c372ffcc450ac756f0adbdf9549/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=e28f0c98ba449c372ffcc450ac756f0adbdf9549", "patch": "@@ -1011,17 +1011,19 @@ pub(crate) fn generic_defaults_query(\n                 p.default.as_ref().map_or(TyKind::Error.intern(&Interner), |t| ctx.lower_ty(t));\n \n             // Each default can only refer to previous parameters.\n-            ty.walk_mut_binders(\n-                &mut |ty, binders| match ty.interned_mut() {\n+            ty = ty.fold_binders(\n+                &mut |ty, binders| match ty.kind(&Interner) {\n                     TyKind::BoundVar(BoundVar { debruijn, index }) if *debruijn == binders => {\n                         if *index >= idx {\n                             // type variable default referring to parameter coming\n                             // after it. This is forbidden (FIXME: report\n                             // diagnostic)\n-                            *ty = TyKind::Error.intern(&Interner);\n+                            TyKind::Error.intern(&Interner)\n+                        } else {\n+                            ty\n                         }\n                     }\n-                    _ => {}\n+                    _ => ty,\n                 },\n                 DebruijnIndex::INNERMOST,\n             );"}]}