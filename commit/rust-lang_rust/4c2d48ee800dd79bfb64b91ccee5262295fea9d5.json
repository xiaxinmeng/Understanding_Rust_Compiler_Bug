{"sha": "4c2d48ee800dd79bfb64b91ccee5262295fea9d5", "node_id": "C_kwDOAAsO6NoAKDRjMmQ0OGVlODAwZGQ3OWJmYjY0YjkxY2NlZTUyNjIyOTVmZWE5ZDU", "commit": {"author": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2023-02-15T18:48:19Z"}, "committer": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2023-02-15T18:58:38Z"}, "message": "Suggest simpler fs helper methods in File::{open,create}", "tree": {"sha": "e2447b95c2095493af55d6acb8f2429505dc9091", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2447b95c2095493af55d6acb8f2429505dc9091"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c2d48ee800dd79bfb64b91ccee5262295fea9d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c2d48ee800dd79bfb64b91ccee5262295fea9d5", "html_url": "https://github.com/rust-lang/rust/commit/4c2d48ee800dd79bfb64b91ccee5262295fea9d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c2d48ee800dd79bfb64b91ccee5262295fea9d5/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15adc7b5e430bdef0c6ba1526b510878ac0c69eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/15adc7b5e430bdef0c6ba1526b510878ac0c69eb", "html_url": "https://github.com/rust-lang/rust/commit/15adc7b5e430bdef0c6ba1526b510878ac0c69eb"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "c550378e7d6b79ba680de269dc5db64ed327e4c4", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c2d48ee800dd79bfb64b91ccee5262295fea9d5/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2d48ee800dd79bfb64b91ccee5262295fea9d5/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=4c2d48ee800dd79bfb64b91ccee5262295fea9d5", "patch": "@@ -334,6 +334,10 @@ impl File {\n     ///\n     /// See the [`OpenOptions::open`] method for more details.\n     ///\n+    /// If you only need to read the entire file contents,\n+    /// consider [`std::fs::read()`][self::read] or\n+    /// [`std::fs::read_to_string()`][self::read_to_string] instead.\n+    ///\n     /// # Errors\n     ///\n     /// This function will return an error if `path` does not already exist.\n@@ -364,9 +368,11 @@ impl File {\n     ///\n     /// Depending on the platform, this function may fail if the\n     /// full directory path does not exist.\n-    ///\n     /// See the [`OpenOptions::open`] function for more details.\n     ///\n+    /// See also [`std::fs::write()`][self::write] for a simple function to\n+    /// create a file with a given data.\n+    ///\n     /// # Examples\n     ///\n     /// ```no_run\n@@ -975,6 +981,9 @@ impl OpenOptions {\n     /// In order for the file to be created, [`OpenOptions::write`] or\n     /// [`OpenOptions::append`] access must be used.\n     ///\n+    /// See also [`std::fs::write()`][self::write] for a simple function to\n+    /// create a file with a given data.\n+    ///\n     /// # Examples\n     ///\n     /// ```no_run"}]}