{"sha": "ccad5449ff11b07368a30a7d843cc6ce57fdd0aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYWQ1NDQ5ZmYxMWIwNzM2OGEzMGE3ZDg0M2NjNmNlNTdmZGQwYWE=", "commit": {"author": {"name": "Gleb Kozyrev", "email": "gleb@gkoz.com", "date": "2016-02-18T14:07:12Z"}, "committer": {"name": "Gleb Kozyrev", "email": "gleb@gkoz.com", "date": "2016-02-18T14:08:11Z"}, "message": "Add mutual PartialOrd impls for Path and PathBuf", "tree": {"sha": "885af91952e1dcd88a61a42bb949787abd75c60d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/885af91952e1dcd88a61a42bb949787abd75c60d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccad5449ff11b07368a30a7d843cc6ce57fdd0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccad5449ff11b07368a30a7d843cc6ce57fdd0aa", "html_url": "https://github.com/rust-lang/rust/commit/ccad5449ff11b07368a30a7d843cc6ce57fdd0aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccad5449ff11b07368a30a7d843cc6ce57fdd0aa/comments", "author": {"login": "gkoz", "id": 4260361, "node_id": "MDQ6VXNlcjQyNjAzNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4260361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkoz", "html_url": "https://github.com/gkoz", "followers_url": "https://api.github.com/users/gkoz/followers", "following_url": "https://api.github.com/users/gkoz/following{/other_user}", "gists_url": "https://api.github.com/users/gkoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkoz/subscriptions", "organizations_url": "https://api.github.com/users/gkoz/orgs", "repos_url": "https://api.github.com/users/gkoz/repos", "events_url": "https://api.github.com/users/gkoz/events{/privacy}", "received_events_url": "https://api.github.com/users/gkoz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gkoz", "id": 4260361, "node_id": "MDQ6VXNlcjQyNjAzNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4260361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkoz", "html_url": "https://github.com/gkoz", "followers_url": "https://api.github.com/users/gkoz/followers", "following_url": "https://api.github.com/users/gkoz/following{/other_user}", "gists_url": "https://api.github.com/users/gkoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkoz/subscriptions", "organizations_url": "https://api.github.com/users/gkoz/orgs", "repos_url": "https://api.github.com/users/gkoz/repos", "events_url": "https://api.github.com/users/gkoz/events{/privacy}", "received_events_url": "https://api.github.com/users/gkoz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27be4336d9dc0a829ca3c19e8b08a404b11b359d", "url": "https://api.github.com/repos/rust-lang/rust/commits/27be4336d9dc0a829ca3c19e8b08a404b11b359d", "html_url": "https://github.com/rust-lang/rust/commit/27be4336d9dc0a829ca3c19e8b08a404b11b359d"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "887de66a1bd6bf695f54f4e9aa8310a4ef412f68", "filename": "src/libstd/path.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ccad5449ff11b07368a30a7d843cc6ce57fdd0aa/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccad5449ff11b07368a30a7d843cc6ce57fdd0aa/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=ccad5449ff11b07368a30a7d843cc6ce57fdd0aa", "patch": "@@ -2051,7 +2051,7 @@ impl<'a> IntoIterator for &'a Path {\n     fn into_iter(self) -> Iter<'a> { self.iter() }\n }\n \n-macro_rules! impl_eq {\n+macro_rules! impl_cmp {\n     ($lhs:ty, $rhs: ty) => {\n         #[stable(feature = \"partialeq_path\", since = \"1.6.0\")]\n         impl<'a, 'b> PartialEq<$rhs> for $lhs {\n@@ -2065,14 +2065,29 @@ macro_rules! impl_eq {\n             fn eq(&self, other: &$lhs) -> bool { <Path as PartialEq>::eq(self, other) }\n         }\n \n+        #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n+        impl<'a, 'b> PartialOrd<$rhs> for $lhs {\n+            #[inline]\n+            fn partial_cmp(&self, other: &$rhs) -> Option<cmp::Ordering> {\n+                <Path as PartialOrd>::partial_cmp(self, other)\n+            }\n+        }\n+\n+        #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n+        impl<'a, 'b> PartialOrd<$lhs> for $rhs {\n+            #[inline]\n+            fn partial_cmp(&self, other: &$lhs) -> Option<cmp::Ordering> {\n+                <Path as PartialOrd>::partial_cmp(self, other)\n+            }\n+        }\n     }\n }\n \n-impl_eq!(PathBuf, Path);\n-impl_eq!(PathBuf, &'a Path);\n-impl_eq!(Cow<'a, Path>, Path);\n-impl_eq!(Cow<'a, Path>, &'b Path);\n-impl_eq!(Cow<'a, Path>, PathBuf);\n+impl_cmp!(PathBuf, Path);\n+impl_cmp!(PathBuf, &'a Path);\n+impl_cmp!(Cow<'a, Path>, Path);\n+impl_cmp!(Cow<'a, Path>, &'b Path);\n+impl_cmp!(Cow<'a, Path>, PathBuf);\n \n #[stable(since = \"1.7.0\", feature = \"strip_prefix\")]\n impl fmt::Display for StripPrefixError {"}]}