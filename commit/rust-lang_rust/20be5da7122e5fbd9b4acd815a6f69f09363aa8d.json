{"sha": "20be5da7122e5fbd9b4acd815a6f69f09363aa8d", "node_id": "C_kwDOAAsO6NoAKDIwYmU1ZGE3MTIyZTVmYmQ5YjRhY2Q4MTVhNmY2OWYwOTM2M2FhOGQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-10T08:22:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-10T08:22:30Z"}, "message": "Rollup merge of #97888 - hoodmane:emscripten-eh-personality, r=Amanieu\n\nDon't use __gxx_personality_v0 in panic_unwind on emscripten target\n\nThis resolves #85821. See also the discussion here:\nhttps://github.com/emscripten-core/emscripten/issues/17128\n\nThe consensus seems to be that rust_eh_personality is never invoked.\nI patched __gxx_personality_v0 to log invocations and then ran\nvarious panic tests and it was never called, so this analysis matches\nwhat seems to happen in practice. This replaces the definition with\nan abort, modeled on the structured exception handling implementation.", "tree": {"sha": "39a6ae4aae4fa2dee76aefbdab4ff0c7a20b4bfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a6ae4aae4fa2dee76aefbdab4ff0c7a20b4bfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20be5da7122e5fbd9b4acd815a6f69f09363aa8d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiov9GCRBK7hj4Ov3rIwAAgB0IAHWcfMX5uWHqCRfpWkXHXEjW\ne0tzJuxJ/ybdz9dapgak9fZOGyjktE/cLNrlaDSLW7MY/FMU3ysEfh/kq8qsYYBT\nkjrUmD+UceO2CD50fIudjd3O7LShgSn4Iof0NUCnEmHt0GhjNVxWMcb4RE6g4rum\nkDcaf3y1c4DPz6goPF7pibZggoMCSo3x+4Ammb4u8u01D9nX9JhUGNLXYy9NvNXq\n5bLKecYB5EhpchQkRvUZyYMRbmTLwnSSUJEqHgbw7F9LLSKfngcHnA0X8lqkwVkI\n+BOEC8/xSody4AP4Y+sA1fGzE9fFj9rkifnv1ugyDSVB+wtZGjq+dCfd0qWkmR8=\n=vwR9\n-----END PGP SIGNATURE-----\n", "payload": "tree 39a6ae4aae4fa2dee76aefbdab4ff0c7a20b4bfb\nparent a652a4303f39c7e33040b7a595627b04e6c34abf\nparent d2d205d0a87861aaa2ce3a39a65afc35a2beb55a\nauthor Yuki Okushi <jtitor@2k36.org> 1654849350 +0900\ncommitter GitHub <noreply@github.com> 1654849350 +0900\n\nRollup merge of #97888 - hoodmane:emscripten-eh-personality, r=Amanieu\n\nDon't use __gxx_personality_v0 in panic_unwind on emscripten target\n\nThis resolves #85821. See also the discussion here:\nhttps://github.com/emscripten-core/emscripten/issues/17128\n\nThe consensus seems to be that rust_eh_personality is never invoked.\nI patched __gxx_personality_v0 to log invocations and then ran\nvarious panic tests and it was never called, so this analysis matches\nwhat seems to happen in practice. This replaces the definition with\nan abort, modeled on the structured exception handling implementation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20be5da7122e5fbd9b4acd815a6f69f09363aa8d", "html_url": "https://github.com/rust-lang/rust/commit/20be5da7122e5fbd9b4acd815a6f69f09363aa8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20be5da7122e5fbd9b4acd815a6f69f09363aa8d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a652a4303f39c7e33040b7a595627b04e6c34abf", "url": "https://api.github.com/repos/rust-lang/rust/commits/a652a4303f39c7e33040b7a595627b04e6c34abf", "html_url": "https://github.com/rust-lang/rust/commit/a652a4303f39c7e33040b7a595627b04e6c34abf"}, {"sha": "d2d205d0a87861aaa2ce3a39a65afc35a2beb55a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2d205d0a87861aaa2ce3a39a65afc35a2beb55a", "html_url": "https://github.com/rust-lang/rust/commit/d2d205d0a87861aaa2ce3a39a65afc35a2beb55a"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "1ee69ff9cb2857a7108d99d74d6950da525c5f6b", "filename": "library/panic_unwind/src/emcc.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/20be5da7122e5fbd9b4acd815a6f69f09363aa8d/library%2Fpanic_unwind%2Fsrc%2Femcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20be5da7122e5fbd9b4acd815a6f69f09363aa8d/library%2Fpanic_unwind%2Fsrc%2Femcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Femcc.rs?ref=20be5da7122e5fbd9b4acd815a6f69f09363aa8d", "patch": "@@ -105,15 +105,19 @@ extern \"C\" fn exception_cleanup(ptr: *mut libc::c_void) -> *mut libc::c_void {\n     }\n }\n \n+// This is required by the compiler to exist (e.g., it's a lang item), but it's\n+// never actually called by the compiler.  Emscripten EH doesn't use a\n+// personality function at all, it instead uses __cxa_find_matching_catch.\n+// Wasm error handling would use __gxx_personality_wasm0.\n #[lang = \"eh_personality\"]\n unsafe extern \"C\" fn rust_eh_personality(\n-    version: c_int,\n-    actions: uw::_Unwind_Action,\n-    exception_class: uw::_Unwind_Exception_Class,\n-    exception_object: *mut uw::_Unwind_Exception,\n-    context: *mut uw::_Unwind_Context,\n+    _version: c_int,\n+    _actions: uw::_Unwind_Action,\n+    _exception_class: uw::_Unwind_Exception_Class,\n+    _exception_object: *mut uw::_Unwind_Exception,\n+    _context: *mut uw::_Unwind_Context,\n ) -> uw::_Unwind_Reason_Code {\n-    __gxx_personality_v0(version, actions, exception_class, exception_object, context)\n+    core::intrinsics::abort()\n }\n \n extern \"C\" {\n@@ -125,11 +129,4 @@ extern \"C\" {\n         tinfo: *const TypeInfo,\n         dest: extern \"C\" fn(*mut libc::c_void) -> *mut libc::c_void,\n     ) -> !;\n-    fn __gxx_personality_v0(\n-        version: c_int,\n-        actions: uw::_Unwind_Action,\n-        exception_class: uw::_Unwind_Exception_Class,\n-        exception_object: *mut uw::_Unwind_Exception,\n-        context: *mut uw::_Unwind_Context,\n-    ) -> uw::_Unwind_Reason_Code;\n }"}]}