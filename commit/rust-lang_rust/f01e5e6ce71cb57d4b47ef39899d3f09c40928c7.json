{"sha": "f01e5e6ce71cb57d4b47ef39899d3f09c40928c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMWU1ZTZjZTcxY2I1N2Q0YjQ3ZWYzOTg5OWQzZjA5YzQwOTI4Yzc=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-05T11:24:58Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-05T14:14:24Z"}, "message": "Lint on invalid values passed to x.py --warnings\n\nThis also introduces support for `--warnings allow` and fixes --warnings\nbeing overridden by the configuration file, config.toml.", "tree": {"sha": "572c4d8c38781e160490148bf957f7a3f46ccb85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/572c4d8c38781e160490148bf957f7a3f46ccb85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7", "html_url": "https://github.com/rust-lang/rust/commit/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f119bf2761ab11ca577fac9881678c04d3e7fdb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f119bf2761ab11ca577fac9881678c04d3e7fdb0", "html_url": "https://github.com/rust-lang/rust/commit/f119bf2761ab11ca577fac9881678c04d3e7fdb0"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "20d7548df5c654cef9fea62fb96a70b727e4d5fd", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=f01e5e6ce71cb57d4b47ef39899d3f09c40928c7", "patch": "@@ -405,7 +405,7 @@ impl Config {\n         config.incremental = flags.incremental;\n         config.dry_run = flags.dry_run;\n         config.keep_stage = flags.keep_stage;\n-        if let Some(value) = flags.warnings {\n+        if let Some(value) = flags.deny_warnings {\n             config.deny_warnings = value;\n         }\n \n@@ -571,7 +571,7 @@ impl Config {\n             config.rustc_default_linker = rust.default_linker.clone();\n             config.musl_root = rust.musl_root.clone().map(PathBuf::from);\n             config.save_toolstates = rust.save_toolstates.clone().map(PathBuf::from);\n-            set(&mut config.deny_warnings, rust.deny_warnings.or(flags.warnings));\n+            set(&mut config.deny_warnings, flags.deny_warnings.or(rust.deny_warnings));\n             set(&mut config.backtrace_on_ice, rust.backtrace_on_ice);\n             set(&mut config.rust_verify_llvm_ir, rust.verify_llvm_ir);\n             set(&mut config.rust_remap_debuginfo, rust.remap_debuginfo);"}, {"sha": "0e171e92b3125f0622d011b0e7471761ad7254b4", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01e5e6ce71cb57d4b47ef39899d3f09c40928c7/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=f01e5e6ce71cb57d4b47ef39899d3f09c40928c7", "patch": "@@ -33,8 +33,11 @@ pub struct Flags {\n     pub rustc_error_format: Option<String>,\n     pub dry_run: bool,\n \n-    // true => deny\n-    pub warnings: Option<bool>,\n+    // This overrides the deny-warnings configuation option,\n+    // which passes -Dwarnings to the compiler invocations.\n+    //\n+    // true => deny, false => allow\n+    pub deny_warnings: Option<bool>,\n }\n \n pub enum Subcommand {\n@@ -468,7 +471,7 @@ Arguments:\n                 .into_iter()\n                 .map(|p| p.into())\n                 .collect::<Vec<_>>(),\n-            warnings: matches.opt_str(\"warnings\").map(|v| v == \"deny\"),\n+            deny_warnings: parse_deny_warnings(&matches),\n         }\n     }\n }\n@@ -549,3 +552,18 @@ fn split(s: &[String]) -> Vec<String> {\n         .map(|s| s.to_string())\n         .collect()\n }\n+\n+fn parse_deny_warnings(matches: &getopts::Matches) -> Option<bool> {\n+    match matches.opt_str(\"warnings\").as_ref().map(|v| v.as_str()) {\n+        Some(\"deny\") => Some(true),\n+        Some(\"allow\") => Some(false),\n+        Some(value) => {\n+            eprintln!(\n+                r#\"invalid value for --warnings: {:?}, expected \"allow\" or \"deny\"\"#,\n+                value,\n+                );\n+            process::exit(1);\n+        },\n+        None => None,\n+    }\n+}"}]}