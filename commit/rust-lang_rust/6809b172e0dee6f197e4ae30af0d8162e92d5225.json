{"sha": "6809b172e0dee6f197e4ae30af0d8162e92d5225", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MDliMTcyZTBkZWU2ZjE5N2U0YWUzMGFmMGQ4MTYyZTkyZDUyMjU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-14T21:20:09Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-15T03:01:44Z"}, "message": "remove `borrow_offset` as ~ is now free of headers", "tree": {"sha": "1f21f0a0d612ed8baec2ea886eb3c2eda53f0ca8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f21f0a0d612ed8baec2ea886eb3c2eda53f0ca8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6809b172e0dee6f197e4ae30af0d8162e92d5225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6809b172e0dee6f197e4ae30af0d8162e92d5225", "html_url": "https://github.com/rust-lang/rust/commit/6809b172e0dee6f197e4ae30af0d8162e92d5225", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6809b172e0dee6f197e4ae30af0d8162e92d5225/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e885e42b1292fe2592488a52c35d54b9fe50fb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e885e42b1292fe2592488a52c35d54b9fe50fb8", "html_url": "https://github.com/rust-lang/rust/commit/0e885e42b1292fe2592488a52c35d54b9fe50fb8"}], "stats": {"total": 53, "additions": 3, "deletions": 50}, "files": [{"sha": "8f639a5e499f1d2f2440c0d95da1faec67969734", "filename": "src/librustc/back/abi.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fback%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fback%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fabi.rs?ref=6809b172e0dee6f197e4ae30af0d8162e92d5225", "patch": "@@ -45,9 +45,8 @@ pub static tydesc_field_align: uint = 1u;\n pub static tydesc_field_take_glue: uint = 2u;\n pub static tydesc_field_drop_glue: uint = 3u;\n pub static tydesc_field_visit_glue: uint = 4u;\n-pub static tydesc_field_borrow_offset: uint = 5u;\n-pub static tydesc_field_name_offset: uint = 6u;\n-pub static n_tydesc_fields: uint = 7u;\n+pub static tydesc_field_name_offset: uint = 5u;\n+pub static n_tydesc_fields: uint = 6u;\n \n // The two halves of a closure: code and environment.\n pub static fn_field_code: uint = 0u;"}, {"sha": "f98fec7cbef30af8b2e01f551da3d2d8d7cab91e", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=6809b172e0dee6f197e4ae30af0d8162e92d5225", "patch": "@@ -90,7 +90,6 @@ pub struct tydesc_info {\n     tydesc: ValueRef,\n     size: ValueRef,\n     align: ValueRef,\n-    borrow_offset: ValueRef,\n     name: ValueRef,\n     take_glue: Cell<Option<ValueRef>>,\n     drop_glue: Cell<Option<ValueRef>>,"}, {"sha": "72fc3e8022820e60b2e100b779741c425c778619", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=6809b172e0dee6f197e4ae30af0d8162e92d5225", "patch": "@@ -398,29 +398,7 @@ pub fn trans_to_datum<'a>(bcx: &'a Block<'a>, expr: &ast::Expr)\n                                                      autoderefs));\n                 derefd_datum.to_rptr(bcx).to_value_llval(bcx)\n             }\n-            ty::UniqTraitStore(..) => {\n-                // For a ~T box, there may or may not be a header,\n-                // depending on whether the type T references managed\n-                // boxes. However, since we do not *know* the type T\n-                // for objects, this presents a hurdle. Our solution is\n-                // to load the \"borrow offset\" from the type descriptor;\n-                // this value will either be 0 or sizeof(BoxHeader), depending\n-                // on the type T.\n-                let llopaque =\n-                    PointerCast(bcx, source_data, Type::opaque().ptr_to());\n-                let lltydesc_ptr_ptr =\n-                    PointerCast(bcx, vtable,\n-                                bcx.ccx().tydesc_type.ptr_to().ptr_to());\n-                let lltydesc_ptr =\n-                    Load(bcx, lltydesc_ptr_ptr);\n-                let borrow_offset_ptr =\n-                    GEPi(bcx, lltydesc_ptr,\n-                         [0, abi::tydesc_field_borrow_offset]);\n-                let borrow_offset =\n-                    Load(bcx, borrow_offset_ptr);\n-                InBoundsGEP(bcx, llopaque, [borrow_offset])\n-            }\n-            ty::RegionTraitStore(..) => {\n+            ty::UniqTraitStore(..) | ty::RegionTraitStore(..) => {\n                 source_data\n             }\n         };"}, {"sha": "01e33b88dda11e99448d496455a1445fd62d63b9", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=6809b172e0dee6f197e4ae30af0d8162e92d5225", "patch": "@@ -546,17 +546,6 @@ pub fn declare_tydesc(ccx: &CrateContext, t: ty::t) -> @tydesc_info {\n                  ppaux::ty_to_str(ccx.tcx, t));\n     }\n \n-    let has_header = match ty::get(t).sty {\n-        ty::ty_box(..) => true,\n-        _ => false\n-    };\n-\n-    let borrow_offset = if has_header {\n-        ccx.offsetof_gep(llty, [0u, abi::box_field_body])\n-    } else {\n-        C_uint(ccx, 0)\n-    };\n-\n     let llsize = llsize_of(ccx, llty);\n     let llalign = llalign_of(ccx, llty);\n     let name = mangle_internal_name_by_type_and_seq(ccx, t, \"tydesc\").to_managed();\n@@ -575,7 +564,6 @@ pub fn declare_tydesc(ccx: &CrateContext, t: ty::t) -> @tydesc_info {\n         tydesc: gvar,\n         size: llsize,\n         align: llalign,\n-        borrow_offset: borrow_offset,\n         name: ty_name,\n         take_glue: Cell::new(None),\n         drop_glue: Cell::new(None),\n@@ -685,15 +673,12 @@ pub fn emit_tydescs(ccx: &CrateContext) {\n               }\n             };\n \n-        debug!(\"ti.borrow_offset: {}\", ccx.tn.val_to_str(ti.borrow_offset));\n-\n         let tydesc = C_named_struct(ccx.tydesc_type,\n                                     [ti.size, // size\n                                      ti.align, // align\n                                      take_glue, // take_glue\n                                      drop_glue, // drop_glue\n                                      visit_glue, // visit_glue\n-                                     ti.borrow_offset, // borrow_offset\n                                      ti.name]); // name\n \n         unsafe {"}, {"sha": "833a7848ad316a0f16cc11e34d9eb43ce58ba819", "filename": "src/librustc/middle/trans/type_.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs?ref=6809b172e0dee6f197e4ae30af0d8162e92d5225", "patch": "@@ -220,7 +220,6 @@ impl Type {\n                      glue_fn_ty, // take\n                      glue_fn_ty, // drop\n                      glue_fn_ty, // visit\n-                     int_ty, // borrow_offset\n                      Type::struct_([Type::i8p(), Type::int(arch)], false)]; // name\n         tydesc.set_struct_body(elems, false);\n "}, {"sha": "18a1790cd9b61f57000a0d6277750c6514eff3f8", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6809b172e0dee6f197e4ae30af0d8162e92d5225/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=6809b172e0dee6f197e4ae30af0d8162e92d5225", "patch": "@@ -98,13 +98,6 @@ pub struct TyDesc {\n     // Called by reflection visitor to visit a value of type `T`\n     visit_glue: GlueFn,\n \n-    // If T represents a box pointer (`@U` or `~U`), then\n-    // `borrow_offset` is the amount that the pointer must be adjusted\n-    // to find the payload.  This is always derivable from the type\n-    // `U`, but in the case of `@Trait` or `~Trait` objects, the type\n-    // `U` is unknown.\n-    borrow_offset: uint,\n-\n     // Name corresponding to the type\n     name: &'static str\n }"}]}