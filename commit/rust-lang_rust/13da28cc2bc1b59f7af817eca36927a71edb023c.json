{"sha": "13da28cc2bc1b59f7af817eca36927a71edb023c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZGEyOGNjMmJjMWI1OWY3YWY4MTdlY2EzNjkyN2E3MWVkYjAyM2M=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-06T14:50:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-06T14:50:06Z"}, "message": "Merge #9155\n\n9155: internal: replace attribute with equivalent whitespace r=jonas-schievink a=jonas-schievink\n\nThis is needed to that the `TokenMap` we create contains offsets that match the source. Currently the offsets don't match because the attribute is removed, shifting all subsequent token offsets by the attribute's text length.\r\n\r\nCurrently this fix has no visible effect because we don't remap tokens in attribute macros.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "a8cb03b4e8afd7d499308bd9f4b387db90b353a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8cb03b4e8afd7d499308bd9f4b387db90b353a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13da28cc2bc1b59f7af817eca36927a71edb023c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvOCeCRBK7hj4Ov3rIwAA2twIAI2y1Jf+M9iSk5uPT42FaPMs\nCM8PNwS1IgN8d+4Ib7QRgatYfHrUDnC1P88fHGU1RtadGVX7cwK/WwhLLwwA/U68\nmHcr4MeM0tC3FsqE7be8rNHxstozGjaF1PQaxuyWYlJ03N7cKRfYMEZdsnDKVb95\nl9xK8MV67/UQczt6IlbVLXMa9LF2qHXgbZsYcEWKz0eDPut23D25vQzs5htxvRJo\n77E4jsx5roeK/98wehEKmCAGAT4bpHsgl7n8XIp/Myh/wnvIMIQgfoloQEI5l2mf\nvEGdFdK0RX2nyrRCNg9zyw6KEjLxe2KQblgM3qLBv+3kTmiFxxQFZ7j1IRt3GiA=\n=OYM6\n-----END PGP SIGNATURE-----\n", "payload": "tree a8cb03b4e8afd7d499308bd9f4b387db90b353a3\nparent d616a6a45697589a5fb4eeb4a30382322f8b8184\nparent 1d5c60ff548c082a59eebda4bbaede99cec3cc4d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622991006 +0000\ncommitter GitHub <noreply@github.com> 1622991006 +0000\n\nMerge #9155\n\n9155: internal: replace attribute with equivalent whitespace r=jonas-schievink a=jonas-schievink\n\nThis is needed to that the `TokenMap` we create contains offsets that match the source. Currently the offsets don't match because the attribute is removed, shifting all subsequent token offsets by the attribute's text length.\r\n\r\nCurrently this fix has no visible effect because we don't remap tokens in attribute macros.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13da28cc2bc1b59f7af817eca36927a71edb023c", "html_url": "https://github.com/rust-lang/rust/commit/13da28cc2bc1b59f7af817eca36927a71edb023c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13da28cc2bc1b59f7af817eca36927a71edb023c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d616a6a45697589a5fb4eeb4a30382322f8b8184", "url": "https://api.github.com/repos/rust-lang/rust/commits/d616a6a45697589a5fb4eeb4a30382322f8b8184", "html_url": "https://github.com/rust-lang/rust/commit/d616a6a45697589a5fb4eeb4a30382322f8b8184"}, {"sha": "1d5c60ff548c082a59eebda4bbaede99cec3cc4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5c60ff548c082a59eebda4bbaede99cec3cc4d", "html_url": "https://github.com/rust-lang/rust/commit/1d5c60ff548c082a59eebda4bbaede99cec3cc4d"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "82dc7f326a6aacceb99bb622f10bdc75dab86a5c", "filename": "crates/hir_expand/src/input.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13da28cc2bc1b59f7af817eca36927a71edb023c/crates%2Fhir_expand%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13da28cc2bc1b59f7af817eca36927a71edb023c/crates%2Fhir_expand%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Finput.rs?ref=13da28cc2bc1b59f7af817eca36927a71edb023c", "patch": "@@ -1,7 +1,7 @@\n //! Macro input conditioning.\n \n use syntax::{\n-    ast::{self, AttrsOwner},\n+    ast::{self, make, AttrsOwner},\n     AstNode, SyntaxNode,\n };\n \n@@ -61,7 +61,9 @@ fn remove_attr_invoc(item: ast::Item, attr_index: usize) -> ast::Item {\n         .attrs()\n         .nth(attr_index)\n         .unwrap_or_else(|| panic!(\"cannot find attribute #{}\", attr_index));\n-    attr.syntax().detach();\n+    let syntax_index = attr.syntax().index();\n+    let ws = make::tokens::whitespace(&\" \".repeat(u32::from(attr.syntax().text().len()) as usize));\n+    item.syntax().splice_children(syntax_index..syntax_index + 1, vec![ws.into()]);\n     item\n }\n "}]}