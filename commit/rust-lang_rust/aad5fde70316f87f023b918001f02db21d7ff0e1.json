{"sha": "aad5fde70316f87f023b918001f02db21d7ff0e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZDVmZGU3MDMxNmY4N2YwMjNiOTE4MDAxZjAyZGIyMWQ3ZmYwZTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-05T17:21:21Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-05T17:21:21Z"}, "message": "fix deallocating/reallocating with integer pointers", "tree": {"sha": "47bb53020cc14de9366b2c613a54e0b30b18121d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47bb53020cc14de9366b2c613a54e0b30b18121d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aad5fde70316f87f023b918001f02db21d7ff0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aad5fde70316f87f023b918001f02db21d7ff0e1", "html_url": "https://github.com/rust-lang/rust/commit/aad5fde70316f87f023b918001f02db21d7ff0e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aad5fde70316f87f023b918001f02db21d7ff0e1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "802dcb7f890cf1e05a98fd21466f74d9c9b5b748", "url": "https://api.github.com/repos/rust-lang/rust/commits/802dcb7f890cf1e05a98fd21466f74d9c9b5b748", "html_url": "https://github.com/rust-lang/rust/commit/802dcb7f890cf1e05a98fd21466f74d9c9b5b748"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "540e3fc96406674f7b4a82beac1ceac14071f592", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aad5fde70316f87f023b918001f02db21d7ff0e1/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad5fde70316f87f023b918001f02db21d7ff0e1/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=aad5fde70316f87f023b918001f02db21d7ff0e1", "patch": "@@ -50,8 +50,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     ) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n         if !ptr.is_null_ptr(this) {\n+            let ptr = this.force_ptr(ptr)?;\n             this.memory_mut().deallocate(\n-                ptr.to_ptr()?,\n+                ptr,\n                 None,\n                 MiriMemoryKind::C.into(),\n             )?;\n@@ -78,7 +79,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 Ok(Scalar::Ptr(new_ptr))\n             }\n         } else {\n-            let old_ptr = old_ptr.to_ptr()?;\n+            let old_ptr = this.force_ptr(old_ptr)?;\n             let memory = this.memory_mut();\n             let old_size = Size::from_bytes(memory.get(old_ptr.alloc_id)?.bytes.len() as u64);\n             if new_size == 0 {\n@@ -234,7 +235,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::Ptr(ptr), dest)?;\n             }\n             \"__rust_dealloc\" => {\n-                let ptr = this.read_scalar(args[0])?.to_ptr()?;\n+                let ptr = this.read_scalar(args[0])?.not_undef()?;\n                 let old_size = this.read_scalar(args[1])?.to_usize(this)?;\n                 let align = this.read_scalar(args[2])?.to_usize(this)?;\n                 if old_size == 0 {\n@@ -243,6 +244,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 if !align.is_power_of_two() {\n                     return err!(HeapAllocNonPowerOfTwoAlignment(align));\n                 }\n+                let ptr = this.force_ptr(ptr)?;\n                 this.memory_mut().deallocate(\n                     ptr,\n                     Some((Size::from_bytes(old_size), Align::from_bytes(align).unwrap())),"}]}