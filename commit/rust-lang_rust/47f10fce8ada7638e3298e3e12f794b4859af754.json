{"sha": "47f10fce8ada7638e3298e3e12f794b4859af754", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZjEwZmNlOGFkYTc2MzhlMzI5OGUzZTEyZjc5NGI0ODU5YWY3NTQ=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-04-26T15:41:58Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-04-26T15:41:58Z"}, "message": "Pass in char instead of single-char string", "tree": {"sha": "b564b04b6203ba1fb2981773b497c50958ee591c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b564b04b6203ba1fb2981773b497c50958ee591c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47f10fce8ada7638e3298e3e12f794b4859af754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47f10fce8ada7638e3298e3e12f794b4859af754", "html_url": "https://github.com/rust-lang/rust/commit/47f10fce8ada7638e3298e3e12f794b4859af754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47f10fce8ada7638e3298e3e12f794b4859af754/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70dc33e00c305e83bd2dc1de17c09af5c0faef7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/70dc33e00c305e83bd2dc1de17c09af5c0faef7f", "html_url": "https://github.com/rust-lang/rust/commit/70dc33e00c305e83bd2dc1de17c09af5c0faef7f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ba432912f386f6de8e438d4477c1672dc1ef83bf", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47f10fce8ada7638e3298e3e12f794b4859af754/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47f10fce8ada7638e3298e3e12f794b4859af754/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=47f10fce8ada7638e3298e3e12f794b4859af754", "patch": "@@ -107,23 +107,23 @@ impl Filter {\n     // env RA_PROFILE=foo|bar|baz   // enabled only selected entries\n     // env RA_PROFILE=*@3>10        // dump everything, up to depth 3, if it takes more than 10 ms\n     pub fn from_spec(mut spec: &str) -> Filter {\n-        let longer_than = if let Some(idx) = spec.rfind(\">\") {\n+        let longer_than = if let Some(idx) = spec.rfind('>') {\n             let longer_than = spec[idx + 1..].parse().expect(\"invalid profile longer_than\");\n             spec = &spec[..idx];\n             Duration::from_millis(longer_than)\n         } else {\n             Duration::new(0, 0)\n         };\n \n-        let depth = if let Some(idx) = spec.rfind(\"@\") {\n+        let depth = if let Some(idx) = spec.rfind('@') {\n             let depth: usize = spec[idx + 1..].parse().expect(\"invalid profile depth\");\n             spec = &spec[..idx];\n             depth\n         } else {\n             999\n         };\n         let allowed =\n-            if spec == \"*\" { Vec::new() } else { spec.split(\"|\").map(String::from).collect() };\n+            if spec == \"*\" { Vec::new() } else { spec.split('|').map(String::from).collect() };\n         Filter::new(depth, allowed, longer_than)\n     }\n "}]}