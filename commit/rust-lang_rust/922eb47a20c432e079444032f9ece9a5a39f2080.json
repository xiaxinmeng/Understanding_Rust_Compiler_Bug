{"sha": "922eb47a20c432e079444032f9ece9a5a39f2080", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMmViNDdhMjBjNDMyZTA3OTQ0NDAzMmY5ZWNlOWE1YTM5ZjIwODA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-02-24T03:11:19Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-02-25T03:52:29Z"}, "message": "test: Use `#[deriving(Hash)]` in a couple tests", "tree": {"sha": "af2e641d88ccd25a348d0f0773c076950328a27e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af2e641d88ccd25a348d0f0773c076950328a27e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/922eb47a20c432e079444032f9ece9a5a39f2080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/922eb47a20c432e079444032f9ece9a5a39f2080", "html_url": "https://github.com/rust-lang/rust/commit/922eb47a20c432e079444032f9ece9a5a39f2080", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/922eb47a20c432e079444032f9ece9a5a39f2080/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "848cbb4e130d7ec9609b36b3f6f7a68099cbd6a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/848cbb4e130d7ec9609b36b3f6f7a68099cbd6a7", "html_url": "https://github.com/rust-lang/rust/commit/848cbb4e130d7ec9609b36b3f6f7a68099cbd6a7"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "af60a35cbf80cb4fa895ddb4e0d9daf648f78a09", "filename": "src/test/run-pass/deriving-global.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/922eb47a20c432e079444032f9ece9a5a39f2080/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922eb47a20c432e079444032f9ece9a5a39f2080/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-global.rs?ref=922eb47a20c432e079444032f9ece9a5a39f2080", "patch": "@@ -27,18 +27,21 @@ mod submod {\n     // function calls, then being in a submodule will (correctly)\n     // cause errors about unrecognised module `std` (or `extra`)\n     #[deriving(Eq, Ord, TotalEq, TotalOrd,\n+               Hash,\n                Clone, DeepClone,\n                Show, Rand,\n                Encodable, Decodable)]\n     enum A { A1(uint), A2(int) }\n \n     #[deriving(Eq, Ord, TotalEq, TotalOrd,\n+               Hash,\n                Clone, DeepClone,\n                Show, Rand,\n                Encodable, Decodable)]\n     struct B { x: uint, y: int }\n \n     #[deriving(Eq, Ord, TotalEq, TotalOrd,\n+               Hash,\n                Clone, DeepClone,\n                Show, Rand,\n                Encodable, Decodable)]"}, {"sha": "069f50f89f4ae85837a860812ddff1645a93ba92", "filename": "src/test/run-pass/deriving-meta-multiple.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/922eb47a20c432e079444032f9ece9a5a39f2080/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922eb47a20c432e079444032f9ece9a5a39f2080/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs?ref=922eb47a20c432e079444032f9ece9a5a39f2080", "patch": "@@ -10,8 +10,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving(Eq)]\n-#[deriving(Clone)]\n+use std::hash::hash;\n+\n+#[deriving(Eq, Clone, Hash)]\n struct Foo {\n     bar: uint,\n     baz: int\n@@ -22,4 +23,5 @@ pub fn main() {\n \n     a == a;    // check for Eq impl w/o testing its correctness\n     a.clone(); // check for Clone impl w/o testing its correctness\n+    hash(&a);  // check for Hash impl w/o testing its correctness\n }"}, {"sha": "069f50f89f4ae85837a860812ddff1645a93ba92", "filename": "src/test/run-pass/deriving-meta.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/922eb47a20c432e079444032f9ece9a5a39f2080/src%2Ftest%2Frun-pass%2Fderiving-meta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/922eb47a20c432e079444032f9ece9a5a39f2080/src%2Ftest%2Frun-pass%2Fderiving-meta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta.rs?ref=922eb47a20c432e079444032f9ece9a5a39f2080", "patch": "@@ -10,7 +10,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving(Eq, Clone)]\n+use std::hash::hash;\n+\n+#[deriving(Eq, Clone, Hash)]\n struct Foo {\n     bar: uint,\n     baz: int\n@@ -21,4 +23,5 @@ pub fn main() {\n \n     a == a;    // check for Eq impl w/o testing its correctness\n     a.clone(); // check for Clone impl w/o testing its correctness\n+    hash(&a);  // check for Hash impl w/o testing its correctness\n }"}]}