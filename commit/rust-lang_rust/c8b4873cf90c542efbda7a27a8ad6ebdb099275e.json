{"sha": "c8b4873cf90c542efbda7a27a8ad6ebdb099275e", "node_id": "C_kwDOAAsO6NoAKGM4YjQ4NzNjZjkwYzU0MmVmYmRhN2EyN2E4YWQ2ZWJkYjA5OTI3NWU", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-16T11:20:57Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-07-06T20:01:39Z"}, "message": "Add function to manually fulfill lint expectations (RFC 2383)", "tree": {"sha": "4913fa66e755c58f74d87c065797d682993429be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4913fa66e755c58f74d87c065797d682993429be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8b4873cf90c542efbda7a27a8ad6ebdb099275e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmLF6iMACgkQ9cWdDmae\nUwL+Cw/9FN1SUKCDFN+3BxgAyPftWrRk+9ZT5+qOBw8W2pEgC8q0f8Xr7Rb2CSnJ\nDF5Cu2p2UKWWAyXlis5W2Rv/Jt6lfIKcYtR6MEhn52Tj1nox7TM2q50ujomLU1qn\nTuHNA5NRHUW2rg0W5q8kA775QOCPnVrX1ePh59UWNwQjyFwRllA0fM46vJtZctVn\n2300FC3URNDDB0C4AJgP98a4VlUQg2vrdIFwR2BCD+wQ45bPswk1cPi8bwKVh3wj\n1nlbmmpqOCT49839Z6Q5xaFx55BYDzIltvTBYXgBwzJ19nN6xlvhrakumQ3tjFW8\noZg0aEHtiTqIqHfe4MvM3iuRfNikmWtuuYwH1q/xzWaT4jXNjsgZiQTcLH1TNK9+\neOFelNWmYXNLGX5vq9roe/XF/EhJPDjW1AiPcUvZ0irmvzsjGn9AP9KHXccnAWxH\nS0rOchkLu+aEfQSeHy/wrEn0bu6WRYRAAAaiqBt6YdUp3TbV5QZo7DcdNSFBXII8\nVpN0sz0p8vjKEhD82sBq63FcgyTGhc5yEV71NgwhTGTLR6np3Ez8FmMtuWOIiOLq\nVfg24kJiMGQov88TSBn5uIh+WowgKwZ9OWfnyhrSxp6k8NhNEucZYAcz1bPclZuB\njKTrwzRKa8GBjexRLyVWCop614LKUFrrV2PTm9+HctBOU8jbYnA=\n=Ppqn\n-----END PGP SIGNATURE-----", "payload": "tree 4913fa66e755c58f74d87c065797d682993429be\nparent 6c6388cd6c264904e3dc961c59d9187d640ed25d\nauthor xFrednet <xFrednet@gmail.com> 1655378457 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1657137699 +0200\n\nAdd function to manually fulfill lint expectations (RFC 2383)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8b4873cf90c542efbda7a27a8ad6ebdb099275e", "html_url": "https://github.com/rust-lang/rust/commit/c8b4873cf90c542efbda7a27a8ad6ebdb099275e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8b4873cf90c542efbda7a27a8ad6ebdb099275e/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c6388cd6c264904e3dc961c59d9187d640ed25d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6388cd6c264904e3dc961c59d9187d640ed25d", "html_url": "https://github.com/rust-lang/rust/commit/6c6388cd6c264904e3dc961c59d9187d640ed25d"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "cf5af7d481242eba3cd4da0d7bf8cb571f30cf5b", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/c8b4873cf90c542efbda7a27a8ad6ebdb099275e/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8b4873cf90c542efbda7a27a8ad6ebdb099275e/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=c8b4873cf90c542efbda7a27a8ad6ebdb099275e", "patch": "@@ -33,7 +33,7 @@ use rustc_middle::middle::stability;\n use rustc_middle::ty::layout::{LayoutError, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, print::Printer, subst::GenericArg, RegisteredTools, Ty, TyCtxt};\n-use rustc_session::lint::BuiltinLintDiagnostics;\n+use rustc_session::lint::{BuiltinLintDiagnostics, LintExpectationId};\n use rustc_session::lint::{FutureIncompatibleInfo, Level, Lint, LintBuffer, LintId};\n use rustc_session::Session;\n use rustc_span::lev_distance::find_best_match_for_name;\n@@ -887,6 +887,29 @@ pub trait LintContext: Sized {\n     ) {\n         self.lookup(lint, None as Option<Span>, decorate);\n     }\n+\n+    /// This returns the lint level for the given lint at the current location.\n+    fn get_lint_level(&self, lint: &'static Lint) -> Level;\n+\n+    /// This function can be used to manually fulfill an expectation. This can\n+    /// be used for lints which contain several spans, and should be suppressed,\n+    /// if either location was marked with an expectation.\n+    ///\n+    /// Note that this function should only be called for [`LintExpectationId`]s\n+    /// retrieved from the current lint pass. Buffered or manually created ids can\n+    /// cause ICEs.\n+    fn fulfill_expectation(&self, expectation: LintExpectationId) {\n+        // We need to make sure that submitted expectation ids are correctly fulfilled suppressed\n+        // and stored between compilation sessions. To not manually do these steps, we simply create\n+        // a dummy diagnostic and emit is as usual, which will be suppressed and stored like a normal\n+        // expected lint diagnostic.\n+        self.sess()\n+            .struct_expect(\n+                \"this is a dummy diagnostic, to submit and store an expectation\",\n+                expectation,\n+            )\n+            .emit();\n+    }\n }\n \n impl<'a> EarlyContext<'a> {\n@@ -934,6 +957,10 @@ impl LintContext for LateContext<'_> {\n             None => self.tcx.struct_lint_node(lint, hir_id, decorate),\n         }\n     }\n+\n+    fn get_lint_level(&self, lint: &'static Lint) -> Level {\n+        self.tcx.lint_level_at_node(lint, self.last_node_with_lint_attrs).0\n+    }\n }\n \n impl LintContext for EarlyContext<'_> {\n@@ -956,6 +983,10 @@ impl LintContext for EarlyContext<'_> {\n     ) {\n         self.builder.struct_lint(lint, span.map(|s| s.into()), decorate)\n     }\n+\n+    fn get_lint_level(&self, lint: &'static Lint) -> Level {\n+        self.builder.lint_level(lint).0\n+    }\n }\n \n impl<'tcx> LateContext<'tcx> {"}, {"sha": "a35d830f711a54f2ad9ef404bb9a5138c61e271b", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c8b4873cf90c542efbda7a27a8ad6ebdb099275e/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8b4873cf90c542efbda7a27a8ad6ebdb099275e/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=c8b4873cf90c542efbda7a27a8ad6ebdb099275e", "patch": "@@ -229,6 +229,13 @@ impl Level {\n             Level::Deny | Level::Forbid => true,\n         }\n     }\n+\n+    pub fn get_expectation_id(&self) -> Option<LintExpectationId> {\n+        match self {\n+            Level::Expect(id) | Level::ForceWarn(Some(id)) => Some(*id),\n+            _ => None,\n+        }\n+    }\n }\n \n /// Specification of a single lint."}]}