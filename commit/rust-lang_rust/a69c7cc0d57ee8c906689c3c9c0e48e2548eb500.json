{"sha": "a69c7cc0d57ee8c906689c3c9c0e48e2548eb500", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2OWM3Y2MwZDU3ZWU4YzkwNjY4OWMzYzljMGU0OGUyNTQ4ZWI1MDA=", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-07-12T19:11:02Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-08-15T07:11:03Z"}, "message": "don't derive `Copy` for `RegionElement`", "tree": {"sha": "5ace83936d194834e72a07df8e263b18f0c39d5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ace83936d194834e72a07df8e263b18f0c39d5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500", "html_url": "https://github.com/rust-lang/rust/commit/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19dfea552aeba5049b5a51aec206fcaf08d6d7c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/19dfea552aeba5049b5a51aec206fcaf08d6d7c0", "html_url": "https://github.com/rust-lang/rust/commit/19dfea552aeba5049b5a51aec206fcaf08d6d7c0"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "fe9df41db45e2b9a9c42e137a8cb240188e0fd9c", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=a69c7cc0d57ee8c906689c3c9c0e48e2548eb500", "patch": "@@ -213,7 +213,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                     placeholder,\n                     error_element,\n                 } => {\n-                    let error_vid = self.regioncx.region_from_element(longer_fr, error_element);\n+                    let error_vid = self.regioncx.region_from_element(longer_fr, &error_element);\n \n                     // Find the code to blame for the fact that `longer_fr` outlives `error_fr`.\n                     let (_, span) = self.regioncx.find_outlives_blame_span("}, {"sha": "a96cdbc13f345a2891feb89bb0f55f1f9622de66", "filename": "compiler/rustc_mir/src/borrow_check/region_infer/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fmod.rs?ref=a69c7cc0d57ee8c906689c3c9c0e48e2548eb500", "patch": "@@ -1923,8 +1923,12 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n     }\n \n     /// Get the region outlived by `longer_fr` and live at `element`.\n-    crate fn region_from_element(&self, longer_fr: RegionVid, element: RegionElement) -> RegionVid {\n-        match element {\n+    crate fn region_from_element(\n+        &self,\n+        longer_fr: RegionVid,\n+        element: &RegionElement,\n+    ) -> RegionVid {\n+        match *element {\n             RegionElement::Location(l) => self.find_sub_region_live_at(longer_fr, l),\n             RegionElement::RootUniversalRegion(r) => r,\n             RegionElement::PlaceholderRegion(error_placeholder) => self"}, {"sha": "f247d07e1f05e66bad3fbd20bcc1c209751583af", "filename": "compiler/rustc_mir/src/borrow_check/region_infer/values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a69c7cc0d57ee8c906689c3c9c0e48e2548eb500/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fvalues.rs?ref=a69c7cc0d57ee8c906689c3c9c0e48e2548eb500", "patch": "@@ -114,7 +114,7 @@ rustc_index::newtype_index! {\n \n /// An individual element in a region value -- the value of a\n /// particular region variable consists of a set of these elements.\n-#[derive(Debug, Copy, Clone)]\n+#[derive(Debug, Clone)]\n crate enum RegionElement {\n     /// A point in the control-flow graph.\n     Location(Location),"}]}