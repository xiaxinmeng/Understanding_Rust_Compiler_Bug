{"sha": "02d0a8bbcf0a64339e4279c4ddb4841189ba5069", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZDBhOGJiY2YwYTY0MzM5ZTQyNzljNGRkYjQ4NDExODliYTUwNjk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-11T20:05:16Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-11T20:14:28Z"}, "message": "docs", "tree": {"sha": "6dfefb93b5192924f3e7681b8ea915f6ebed31c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dfefb93b5192924f3e7681b8ea915f6ebed31c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02d0a8bbcf0a64339e4279c4ddb4841189ba5069", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02d0a8bbcf0a64339e4279c4ddb4841189ba5069", "html_url": "https://github.com/rust-lang/rust/commit/02d0a8bbcf0a64339e4279c4ddb4841189ba5069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02d0a8bbcf0a64339e4279c4ddb4841189ba5069/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad7e33efee023822bd63fa6f942c25582ef12a1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7e33efee023822bd63fa6f942c25582ef12a1e", "html_url": "https://github.com/rust-lang/rust/commit/ad7e33efee023822bd63fa6f942c25582ef12a1e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "62b922ea4beac8d894a0bf892fd639c4cf5b490c", "filename": "src/doc/reference.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/02d0a8bbcf0a64339e4279c4ddb4841189ba5069/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/02d0a8bbcf0a64339e4279c4ddb4841189ba5069/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=02d0a8bbcf0a64339e4279c4ddb4841189ba5069", "patch": "@@ -2117,6 +2117,13 @@ macro scope.\n   destructors from being run twice. Destructors might be run multiple times on\n   the same object with this attribute.\n - `doc` - Doc comments such as `/// foo` are equivalent to `#[doc = \"foo\"]`.\n+- `rustc_on_unimplemented` - Write a custom note to be shown along with the error\n+   when the trait is found to be unimplemented on a type.\n+   You may use format arguments like `{T}`, `{A}` to correspond to the\n+   types at the point of use corresponding to the type parameters of the\n+   trait of the same name. `{Self}` will be replaced with the type that is supposed\n+   to implement the trait but doesn't. To use this, the `on_unimplemented` feature gate\n+   must be enabled.\n \n ### Conditional compilation\n "}, {"sha": "dda534cc489b522e12db13c208f11545abc0fc5c", "filename": "src/test/compile-fail/on-unimplemented-bad-anno.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02d0a8bbcf0a64339e4279c4ddb4841189ba5069/src%2Ftest%2Fcompile-fail%2Fon-unimplemented-bad-anno.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d0a8bbcf0a64339e4279c4ddb4841189ba5069/src%2Ftest%2Fcompile-fail%2Fon-unimplemented-bad-anno.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fon-unimplemented-bad-anno.rs?ref=02d0a8bbcf0a64339e4279c4ddb4841189ba5069", "patch": "@@ -29,6 +29,9 @@ trait BadAnnotation1 {}\n //~^ ERROR there is no type parameter C on trait BadAnnotation2\n trait BadAnnotation2<A,B> {}\n \n+#[rustc_on_unimplemented = \"Unimplemented trait error on `{Self}` with params `<{A},{B},{}>`\"]\n+//~^ only named substitution parameters are allowed\n+trait BadAnnotation3<A,B> {}\n \n pub fn main() {\n }"}]}