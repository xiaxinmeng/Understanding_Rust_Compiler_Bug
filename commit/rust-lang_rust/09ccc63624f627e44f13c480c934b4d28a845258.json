{"sha": "09ccc63624f627e44f13c480c934b4d28a845258", "node_id": "C_kwDOAAsO6NoAKDA5Y2NjNjM2MjRmNjI3ZTQ0ZjEzYzQ4MGM5MzRiNGQyOGE4NDUyNTg", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-03-27T20:35:29Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-03-27T20:35:29Z"}, "message": "fix other source of box deref", "tree": {"sha": "f41d2dbd6f7d594ffdeb02cbbdeee0aba33c47cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f41d2dbd6f7d594ffdeb02cbbdeee0aba33c47cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09ccc63624f627e44f13c480c934b4d28a845258", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09ccc63624f627e44f13c480c934b4d28a845258", "html_url": "https://github.com/rust-lang/rust/commit/09ccc63624f627e44f13c480c934b4d28a845258", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09ccc63624f627e44f13c480c934b4d28a845258/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece64ed3f56f811f2122dc3dcbff85bf47f8fee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece64ed3f56f811f2122dc3dcbff85bf47f8fee3", "html_url": "https://github.com/rust-lang/rust/commit/ece64ed3f56f811f2122dc3dcbff85bf47f8fee3"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "17cfb6c5dfb541a4438d303213bf2216d58b4e1c", "filename": "compiler/rustc_codegen_ssa/src/mir/place.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/09ccc63624f627e44f13c480c934b4d28a845258/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ccc63624f627e44f13c480c934b4d28a845258/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs?ref=09ccc63624f627e44f13c480c934b4d28a845258", "patch": "@@ -441,11 +441,19 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                     .find(|elem| matches!(elem.1, mir::ProjectionElem::Deref))\n                 {\n                     base = elem.0 + 1;\n-                    self.codegen_consume(\n+                    let cg_base = self.codegen_consume(\n                         bx,\n                         mir::PlaceRef { projection: &place_ref.projection[..elem.0], ..place_ref },\n-                    )\n-                    .deref(bx.cx())\n+                    );\n+\n+                    // a box with a non-zst allocator should not be directly dereferenced\n+                    if cg_base.layout.ty.is_box() && !cg_base.layout.field(cx, 1).is_zst() {\n+                        let ptr = cg_base.extract_field(bx, 0).extract_field(bx, 0);\n+\n+                        ptr.deref(bx.cx())\n+                    } else {\n+                        cg_base.deref(bx.cx())\n+                    }\n                 } else {\n                     bug!(\"using operand local {:?} as place\", place_ref);\n                 }"}, {"sha": "c2d4275aa49d386daf4b67a878aa9ac5772068d4", "filename": "src/test/ui/box/issue-95036.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/09ccc63624f627e44f13c480c934b4d28a845258/src%2Ftest%2Fui%2Fbox%2Fissue-95036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ccc63624f627e44f13c480c934b4d28a845258/src%2Ftest%2Fui%2Fbox%2Fissue-95036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox%2Fissue-95036.rs?ref=09ccc63624f627e44f13c480c934b4d28a845258", "patch": "@@ -3,8 +3,20 @@\n \n #![feature(allocator_api, bench_black_box)]\n \n+#[inline(never)]\n+pub fn by_ref(node: &mut Box<[u8; 1], &std::alloc::Global>) {\n+    node[0] = 9u8;\n+}\n+\n pub fn main() {\n     let mut node = Box::new_in([5u8], &std::alloc::Global);\n     node[0] = 7u8;\n+\n+    std::hint::black_box(node);\n+\n+    let mut node = Box::new_in([5u8], &std::alloc::Global);\n+\n+    by_ref(&mut node);\n+\n     std::hint::black_box(node);\n }"}]}