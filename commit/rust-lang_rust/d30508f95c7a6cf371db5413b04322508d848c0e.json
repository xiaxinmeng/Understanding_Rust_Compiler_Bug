{"sha": "d30508f95c7a6cf371db5413b04322508d848c0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMDUwOGY5NWM3YTZjZjM3MWRiNTQxM2IwNDMyMjUwOGQ4NDhjMGU=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-09-20T13:04:09Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-10T13:19:13Z"}, "message": "Remove `target_os`, which does not have `SO_PASSCRED` constant in `libc`", "tree": {"sha": "4d70600f067ff9f0db5e3c896614044c53f880d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d70600f067ff9f0db5e3c896614044c53f880d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d30508f95c7a6cf371db5413b04322508d848c0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d30508f95c7a6cf371db5413b04322508d848c0e", "html_url": "https://github.com/rust-lang/rust/commit/d30508f95c7a6cf371db5413b04322508d848c0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d30508f95c7a6cf371db5413b04322508d848c0e/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f6d7dcc0a917617eb135a39b4687c3a4a4e3e0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f6d7dcc0a917617eb135a39b4687c3a4a4e3e0b", "html_url": "https://github.com/rust-lang/rust/commit/1f6d7dcc0a917617eb135a39b4687c3a4a4e3e0b"}], "stats": {"total": 61, "additions": 5, "deletions": 56}, "files": [{"sha": "46061200be74d622321739423a49429f4e9f7238", "filename": "library/std/src/sys/unix/ext/net/datagram.rs", "status": "modified", "additions": 2, "deletions": 28, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d30508f95c7a6cf371db5413b04322508d848c0e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fdatagram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30508f95c7a6cf371db5413b04322508d848c0e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fdatagram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fdatagram.rs?ref=d30508f95c7a6cf371db5413b04322508d848c0e", "patch": "@@ -748,20 +748,7 @@ impl UnixDatagram {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[cfg(any(\n-        doc,\n-        target_os = \"android\",\n-        target_os = \"dragonfly\",\n-        target_os = \"emscripten\",\n-        target_os = \"freebsd\",\n-        target_os = \"fuchsia\",\n-        target_os = \"ios\",\n-        target_os = \"linux\",\n-        target_os = \"macos\",\n-        target_os = \"netbsd\",\n-        target_os = \"openbsd\",\n-        target_env = \"uclibc\",\n-    ))]\n+    #[cfg(any(doc, target_os = \"android\", target_os = \"emscripten\", target_os = \"linux\",))]\n     #[unstable(feature = \"unix_socket_ancillary_data\", issue = \"76915\")]\n     pub fn set_passcred(&self, passcred: bool) -> io::Result<()> {\n         self.0.set_passcred(passcred)\n@@ -773,20 +760,7 @@ impl UnixDatagram {\n     /// Get the socket option `SO_PASSCRED`.\n     ///\n     /// [`set_passcred`]: UnixDatagram::set_passcred\n-    #[cfg(any(\n-        doc,\n-        target_os = \"android\",\n-        target_os = \"dragonfly\",\n-        target_os = \"emscripten\",\n-        target_os = \"freebsd\",\n-        target_os = \"fuchsia\",\n-        target_os = \"ios\",\n-        target_os = \"linux\",\n-        target_os = \"macos\",\n-        target_os = \"netbsd\",\n-        target_os = \"openbsd\",\n-        target_env = \"uclibc\",\n-    ))]\n+    #[cfg(any(doc, target_os = \"android\", target_os = \"emscripten\", target_os = \"linux\",))]\n     #[unstable(feature = \"unix_socket_ancillary_data\", issue = \"76915\")]\n     pub fn passcred(&self) -> io::Result<bool> {\n         self.0.passcred()"}, {"sha": "783a50e09b2bcc8a54fe7621e590b96104c4261e", "filename": "library/std/src/sys/unix/ext/net/stream.rs", "status": "modified", "additions": 2, "deletions": 28, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d30508f95c7a6cf371db5413b04322508d848c0e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30508f95c7a6cf371db5413b04322508d848c0e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fstream.rs?ref=d30508f95c7a6cf371db5413b04322508d848c0e", "patch": "@@ -375,20 +375,7 @@ impl UnixStream {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[cfg(any(\n-        doc,\n-        target_os = \"android\",\n-        target_os = \"dragonfly\",\n-        target_os = \"emscripten\",\n-        target_os = \"freebsd\",\n-        target_os = \"fuchsia\",\n-        target_os = \"ios\",\n-        target_os = \"linux\",\n-        target_os = \"macos\",\n-        target_os = \"netbsd\",\n-        target_os = \"openbsd\",\n-        target_env = \"uclibc\",\n-    ))]\n+    #[cfg(any(doc, target_os = \"android\", target_os = \"emscripten\", target_os = \"linux\",))]\n     #[unstable(feature = \"unix_socket_ancillary_data\", issue = \"76915\")]\n     pub fn set_passcred(&self, passcred: bool) -> io::Result<()> {\n         self.0.set_passcred(passcred)\n@@ -400,20 +387,7 @@ impl UnixStream {\n     /// Get the socket option `SO_PASSCRED`.\n     ///\n     /// [`set_passcred`]: UnixStream::set_passcred\n-    #[cfg(any(\n-        doc,\n-        target_os = \"android\",\n-        target_os = \"dragonfly\",\n-        target_os = \"emscripten\",\n-        target_os = \"freebsd\",\n-        target_os = \"fuchsia\",\n-        target_os = \"ios\",\n-        target_os = \"linux\",\n-        target_os = \"macos\",\n-        target_os = \"netbsd\",\n-        target_os = \"openbsd\",\n-        target_env = \"uclibc\",\n-    ))]\n+    #[cfg(any(doc, target_os = \"android\", target_os = \"emscripten\", target_os = \"linux\",))]\n     #[unstable(feature = \"unix_socket_ancillary_data\", issue = \"76915\")]\n     pub fn passcred(&self) -> io::Result<bool> {\n         self.0.passcred()"}, {"sha": "abf45ad2d1bc809ef16f9fadfc13939709538424", "filename": "library/std/src/sys/unix/ext/net/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d30508f95c7a6cf371db5413b04322508d848c0e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30508f95c7a6cf371db5413b04322508d848c0e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs?ref=d30508f95c7a6cf371db5413b04322508d848c0e", "patch": "@@ -491,6 +491,7 @@ fn test_send_vectored_fds_unix_stream() {\n     }\n }\n \n+#[cfg(any(test, target_os = \"android\", target_os = \"emscripten\", target_os = \"linux\",))]\n #[test]\n fn test_send_vectored_with_ancillary_to_unix_datagram() {\n     fn getpid() -> libc::pid_t {"}]}