{"sha": "838e3874fc11f24ebe8a7dff02a7f7614a5d2938", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzOGUzODc0ZmMxMWYyNGViZThhN2RmZjAyYTdmNzYxNGE1ZDI5Mzg=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-01T21:14:37Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-11T10:18:44Z"}, "message": "Explain the panic! in exception_copy", "tree": {"sha": "f6ead622f0523897de6625f1351d76bed458ef08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6ead622f0523897de6625f1351d76bed458ef08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/838e3874fc11f24ebe8a7dff02a7f7614a5d2938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/838e3874fc11f24ebe8a7dff02a7f7614a5d2938", "html_url": "https://github.com/rust-lang/rust/commit/838e3874fc11f24ebe8a7dff02a7f7614a5d2938", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/838e3874fc11f24ebe8a7dff02a7f7614a5d2938/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43611921120e2df3383f99b42bf060a6be28f23e", "url": "https://api.github.com/repos/rust-lang/rust/commits/43611921120e2df3383f99b42bf060a6be28f23e", "html_url": "https://github.com/rust-lang/rust/commit/43611921120e2df3383f99b42bf060a6be28f23e"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "ef27e38c2d1d604d0c80f47c0f51cebade827389", "filename": "src/libpanic_unwind/seh.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/838e3874fc11f24ebe8a7dff02a7f7614a5d2938/src%2Flibpanic_unwind%2Fseh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838e3874fc11f24ebe8a7dff02a7f7614a5d2938/src%2Flibpanic_unwind%2Fseh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fseh.rs?ref=838e3874fc11f24ebe8a7dff02a7f7614a5d2938", "patch": "@@ -218,13 +218,20 @@ static mut TYPE_DESCRIPTOR: _TypeDescriptor = _TypeDescriptor {\n //\n // Note that x86 Windows uses the \"thiscall\" calling convention for C++ member\n // functions instead of the default \"C\" calling convention.\n+//\n+// The exception_copy function is a bit special here: it is invoked by the MSVC\n+// runtime under a try/catch block and the panic that we generate here will be\n+// used as the result of the exception copy. This is used by the C++ runtime to\n+// support capturing exceptions with std::exception_ptr, which we can't support\n+// because Box<dyn Any> isn't clonable.\n cfg_if::cfg_if! {\n     if #[cfg(target_arch = \"x86\")] {\n         unsafe extern \"thiscall\" fn exception_cleanup(e: *mut [u64; 2]) {\n             if (*e)[0] != 0 {\n                 cleanup(*e);\n             }\n         }\n+        #[unwind(allowed)]\n         unsafe extern \"thiscall\" fn exception_copy(_dest: *mut [u64; 2],\n                                                    _src: *mut [u64; 2])\n                                                    -> *mut [u64; 2] {\n@@ -236,6 +243,7 @@ cfg_if::cfg_if! {\n                 cleanup(*e);\n             }\n         }\n+        #[unwind(allowed)]\n         unsafe extern \"C\" fn exception_copy(_dest: *mut [u64; 2],\n                                             _src: *mut [u64; 2])\n                                             -> *mut [u64; 2] {"}]}