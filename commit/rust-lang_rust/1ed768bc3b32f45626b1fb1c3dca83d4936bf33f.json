{"sha": "1ed768bc3b32f45626b1fb1c3dca83d4936bf33f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZDc2OGJjM2IzMmY0NTYyNmIxZmIxYzNkY2E4M2Q0OTM2YmYzM2Y=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T22:12:09Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T22:13:04Z"}, "message": "rustc: Determine the region of pointer dereference expressions", "tree": {"sha": "bc7151f883624bcb66d59816eabb6566419cfc55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc7151f883624bcb66d59816eabb6566419cfc55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ed768bc3b32f45626b1fb1c3dca83d4936bf33f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ed768bc3b32f45626b1fb1c3dca83d4936bf33f", "html_url": "https://github.com/rust-lang/rust/commit/1ed768bc3b32f45626b1fb1c3dca83d4936bf33f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ed768bc3b32f45626b1fb1c3dca83d4936bf33f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1600be2c3b1054e2fce59778e2f85d7fa582657f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1600be2c3b1054e2fce59778e2f85d7fa582657f", "html_url": "https://github.com/rust-lang/rust/commit/1600be2c3b1054e2fce59778e2f85d7fa582657f"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "c47a04ddb64de9705196b2e87b91254b6ff9d81b", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1ed768bc3b32f45626b1fb1c3dca83d4936bf33f/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ed768bc3b32f45626b1fb1c3dca83d4936bf33f/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=1ed768bc3b32f45626b1fb1c3dca83d4936bf33f", "patch": "@@ -1933,8 +1933,8 @@ fn lookup_field_ty(cx: ty::ctxt, items:[@ast::class_item],\n \n /*\n  * Returns the region that the value named by the given expression lives in.\n- * If the expression is not an lvalue, reports an error and returns the block\n- * region.\n+ * The expression must have been typechecked. If the expression is not an\n+ * lvalue, returns the block region.\n  *\n  * Note that borrowing is not detected here, because we would have to\n  * immediately structurally resolve too many types otherwise. Thus the\n@@ -1958,10 +1958,20 @@ fn region_of(fcx: @fn_ctxt, expr: @ast::expr) -> ty::region {\n                 }\n             }\n         }\n-        ast::expr_field(base, _, _) | ast::expr_index(base, _) |\n-                ast::expr_unary(ast::deref, base) {\n-            fcx.ccx.tcx.sess.span_unimpl(expr.span, \"regions of field, \" +\n-                                         \"index, or deref operations\");\n+        ast::expr_field(base, _, _) | ast::expr_index(base, _) {\n+            fcx.ccx.tcx.sess.span_unimpl(expr.span, \"regions of field or \" +\n+                                         \"index operations\");\n+        }\n+        ast::expr_unary(ast::deref, base) {\n+            let expr_ty = ty::expr_ty(fcx.ccx.tcx, base);\n+            let expr_ty = structurally_resolved_type(fcx, expr.span, expr_ty);\n+            alt ty::get(expr_ty).struct {\n+                ty::ty_rptr(region, _) { region }\n+                ty::ty_box(_) | ty::ty_uniq(_) {\n+                    fcx.ccx.tcx.sess.span_unimpl(expr.span, \"borrowing\");\n+                }\n+                _ { ret region_of(fcx, base); }\n+            }\n         }\n         _ {\n             let blk_id = fcx.ccx.tcx.region_map.rvalue_to_block.get(expr.id);"}]}