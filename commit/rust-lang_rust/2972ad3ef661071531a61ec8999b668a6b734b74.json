{"sha": "2972ad3ef661071531a61ec8999b668a6b734b74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NzJhZDNlZjY2MTA3MTUzMWE2MWVjODk5OWI2NjhhNmI3MzRiNzQ=", "commit": {"author": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-09-08T14:03:15Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-09-10T16:05:04Z"}, "message": "Refactoring: tests in `same_item_push`", "tree": {"sha": "f561e884f63abc1413f652cee26e42bb1ee07447", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f561e884f63abc1413f652cee26e42bb1ee07447"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2972ad3ef661071531a61ec8999b668a6b734b74", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl9aTrAACgkQaTCGhp1Q\nZjd3pxAAjbrZWkXYXbAuzvsMsSC3GsWH7b8gsMvEOieGM5AtidRwbBdgGbZUDE0i\nmrM3T9QpPZB9fuRVs1LJxqwTtcbLNjDQG+RjL35ej4U2DeyK85NyzlL1d3r9B1zV\nlE1f/R8LJ8gm+Ch5huCiIT9WpfoO2Sdm1y1W05VlZoIwhzCeb0iCQSt4rQdbREgL\nK1um47F92d9p0qf4cfd1qTLiOS+XMgyW5AvdG1TeV3rgRHO7k0YPATHF87vj2i/B\nBRza0n1wLUx3dwk6iFZiFtXHDWEZ5kDgxiMFBvRzCORzqYkHkOJ6qA96PYrFTMRc\ni+23SBiIBRUUVlhRqnnHo5J3bRnsBSAjNlvLdD3aMqvovcQw2Df6PSU+hj8NA/4k\nK2J78CrDuurHiEyaXnVVns8PN4FFdPWOvIE0gab3Bwg5UYPODUcnHpIMjYJ8BUwb\n432tFmVZAOok4p7UEwYdeDQUQwY8SNo/wnhKeRNCLz8ahQzyGlJ+j7cmeLh2dnU6\n6Niq+vl1uc5i/pyZdLWINA58eoWszC8b+EyBA1sIv/NpGNtvkW8Yl15tNBipDGig\nK7+75jEQryFqQtqba2ILbWEUI5OyGrBtaRx60NLUVBkQFw8uw2CstS+clRdTzdpq\n8WUkaHmPs0uDjW5adgnF+v7dXbtvcXge3EQq4Y8uH1A8OvBpA70=\n=AVRZ\n-----END PGP SIGNATURE-----", "payload": "tree f561e884f63abc1413f652cee26e42bb1ee07447\nparent 14faebe20ea82392f393c3ff5efaab7250e51989\nauthor Takayuki Nakata <f.seasons017@gmail.com> 1599573795 +0900\ncommitter flip1995 <hello@philkrones.com> 1599753904 +0200\n\nRefactoring: tests in `same_item_push`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2972ad3ef661071531a61ec8999b668a6b734b74", "html_url": "https://github.com/rust-lang/rust/commit/2972ad3ef661071531a61ec8999b668a6b734b74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2972ad3ef661071531a61ec8999b668a6b734b74/comments", "author": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14faebe20ea82392f393c3ff5efaab7250e51989", "url": "https://api.github.com/repos/rust-lang/rust/commits/14faebe20ea82392f393c3ff5efaab7250e51989", "html_url": "https://github.com/rust-lang/rust/commit/14faebe20ea82392f393c3ff5efaab7250e51989"}], "stats": {"total": 139, "additions": 71, "deletions": 68}, "files": [{"sha": "a37c8782ec3300c58f887df041a048abf143159f", "filename": "tests/ui/same_item_push.rs", "status": "modified", "additions": 51, "deletions": 48, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/2972ad3ef661071531a61ec8999b668a6b734b74/tests%2Fui%2Fsame_item_push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2972ad3ef661071531a61ec8999b668a6b734b74/tests%2Fui%2Fsame_item_push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsame_item_push.rs?ref=2972ad3ef661071531a61ec8999b668a6b734b74", "patch": "@@ -16,64 +16,76 @@ fn fun() -> usize {\n }\n \n fn main() {\n-    // Test for basic case\n-    let mut spaces = Vec::with_capacity(10);\n-    for _ in 0..10 {\n-        spaces.push(vec![b' ']);\n-    }\n-\n-    let mut vec2: Vec<u8> = Vec::new();\n+    // ** linted cases **\n+    let mut vec: Vec<u8> = Vec::new();\n     let item = 2;\n     for _ in 5..=20 {\n-        vec2.push(item);\n+        vec.push(item);\n     }\n \n-    let mut vec3: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     for _ in 0..15 {\n         let item = 2;\n-        vec3.push(item);\n+        vec.push(item);\n     }\n \n-    let mut vec4: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     for _ in 0..15 {\n-        vec4.push(13);\n+        vec.push(13);\n+    }\n+\n+    let mut vec = Vec::new();\n+    for _ in 0..20 {\n+        vec.push(VALUE);\n+    }\n+\n+    let mut vec = Vec::new();\n+    let item = VALUE;\n+    for _ in 0..20 {\n+        vec.push(item);\n+    }\n+\n+    // ** non-linted cases **\n+    let mut spaces = Vec::with_capacity(10);\n+    for _ in 0..10 {\n+        spaces.push(vec![b' ']);\n     }\n \n     // Suggestion should not be given as pushed variable can mutate\n-    let mut vec5: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     let mut item: u8 = 2;\n     for _ in 0..30 {\n-        vec5.push(mutate_increment(&mut item));\n+        vec.push(mutate_increment(&mut item));\n     }\n \n-    let mut vec6: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     let mut item: u8 = 2;\n     let mut item2 = &mut mutate_increment(&mut item);\n     for _ in 0..30 {\n-        vec6.push(mutate_increment(item2));\n+        vec.push(mutate_increment(item2));\n     }\n \n-    let mut vec7: Vec<usize> = Vec::new();\n+    let mut vec: Vec<usize> = Vec::new();\n     for (a, b) in [0, 1, 4, 9, 16].iter().enumerate() {\n-        vec7.push(a);\n+        vec.push(a);\n     }\n \n-    let mut vec8: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     for i in 0..30 {\n-        vec8.push(increment(i));\n+        vec.push(increment(i));\n     }\n \n-    let mut vec9: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     for i in 0..30 {\n-        vec9.push(i + i * i);\n+        vec.push(i + i * i);\n     }\n \n     // Suggestion should not be given as there are multiple pushes that are not the same\n-    let mut vec10: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     let item: u8 = 2;\n     for _ in 0..30 {\n-        vec10.push(item);\n-        vec10.push(item * 2);\n+        vec.push(item);\n+        vec.push(item * 2);\n     }\n \n     // Suggestion should not be given as Vec is not involved\n@@ -88,23 +100,23 @@ fn main() {\n     for i in 0..30 {\n         vec_a.push(A { kind: i });\n     }\n-    let mut vec12: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     for a in vec_a {\n-        vec12.push(2u8.pow(a.kind));\n+        vec.push(2u8.pow(a.kind));\n     }\n \n     // Fix #5902\n-    let mut vec13: Vec<u8> = Vec::new();\n+    let mut vec: Vec<u8> = Vec::new();\n     let mut item = 0;\n     for _ in 0..10 {\n-        vec13.push(item);\n+        vec.push(item);\n         item += 10;\n     }\n \n     // Fix #5979\n-    let mut vec14: Vec<std::fs::File> = Vec::new();\n+    let mut vec: Vec<std::fs::File> = Vec::new();\n     for _ in 0..10 {\n-        vec14.push(std::fs::File::open(\"foobar\").unwrap());\n+        vec.push(std::fs::File::open(\"foobar\").unwrap());\n     }\n     // Fix #5979\n     #[derive(Clone)]\n@@ -113,36 +125,27 @@ fn main() {\n     trait T {}\n     impl T for S {}\n \n-    let mut vec15: Vec<Box<dyn T>> = Vec::new();\n+    let mut vec: Vec<Box<dyn T>> = Vec::new();\n     for _ in 0..10 {\n-        vec15.push(Box::new(S {}));\n-    }\n-\n-    let mut vec16 = Vec::new();\n-    for _ in 0..20 {\n-        vec16.push(VALUE);\n-    }\n-\n-    let mut vec17 = Vec::new();\n-    let item = VALUE;\n-    for _ in 0..20 {\n-        vec17.push(item);\n+        vec.push(Box::new(S {}));\n     }\n \n-    let mut vec18 = Vec::new();\n+    // Fix #5985\n+    let mut vec = Vec::new();\n     let item = 42;\n     let item = fun();\n     for _ in 0..20 {\n-        vec18.push(item);\n+        vec.push(item);\n     }\n \n-    let mut vec19 = Vec::new();\n+    // Fix #5985\n+    let mut vec = Vec::new();\n     let key = 1;\n     for _ in 0..20 {\n         let item = match key {\n             1 => 10,\n             _ => 0,\n         };\n-        vec19.push(item);\n+        vec.push(item);\n     }\n }"}, {"sha": "d9ffa15780ad004b17609a48ef8e241af1992c7e", "filename": "tests/ui/same_item_push.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/2972ad3ef661071531a61ec8999b668a6b734b74/tests%2Fui%2Fsame_item_push.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2972ad3ef661071531a61ec8999b668a6b734b74/tests%2Fui%2Fsame_item_push.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsame_item_push.stderr?ref=2972ad3ef661071531a61ec8999b668a6b734b74", "patch": "@@ -1,43 +1,43 @@\n error: it looks like the same item is being pushed into this Vec\n-  --> $DIR/same_item_push.rs:24:9\n+  --> $DIR/same_item_push.rs:23:9\n    |\n-LL |         vec2.push(item);\n-   |         ^^^^\n+LL |         vec.push(item);\n+   |         ^^^\n    |\n    = note: `-D clippy::same-item-push` implied by `-D warnings`\n-   = help: try using vec![item;SIZE] or vec2.resize(NEW_SIZE, item)\n+   = help: try using vec![item;SIZE] or vec.resize(NEW_SIZE, item)\n \n error: it looks like the same item is being pushed into this Vec\n-  --> $DIR/same_item_push.rs:30:9\n+  --> $DIR/same_item_push.rs:29:9\n    |\n-LL |         vec3.push(item);\n-   |         ^^^^\n+LL |         vec.push(item);\n+   |         ^^^\n    |\n-   = help: try using vec![item;SIZE] or vec3.resize(NEW_SIZE, item)\n+   = help: try using vec![item;SIZE] or vec.resize(NEW_SIZE, item)\n \n error: it looks like the same item is being pushed into this Vec\n-  --> $DIR/same_item_push.rs:35:9\n+  --> $DIR/same_item_push.rs:34:9\n    |\n-LL |         vec4.push(13);\n-   |         ^^^^\n+LL |         vec.push(13);\n+   |         ^^^\n    |\n-   = help: try using vec![13;SIZE] or vec4.resize(NEW_SIZE, 13)\n+   = help: try using vec![13;SIZE] or vec.resize(NEW_SIZE, 13)\n \n error: it looks like the same item is being pushed into this Vec\n-  --> $DIR/same_item_push.rs:119:9\n+  --> $DIR/same_item_push.rs:39:9\n    |\n-LL |         vec16.push(VALUE);\n-   |         ^^^^^\n+LL |         vec.push(VALUE);\n+   |         ^^^\n    |\n-   = help: try using vec![VALUE;SIZE] or vec16.resize(NEW_SIZE, VALUE)\n+   = help: try using vec![VALUE;SIZE] or vec.resize(NEW_SIZE, VALUE)\n \n error: it looks like the same item is being pushed into this Vec\n-  --> $DIR/same_item_push.rs:125:9\n+  --> $DIR/same_item_push.rs:45:9\n    |\n-LL |         vec17.push(item);\n-   |         ^^^^^\n+LL |         vec.push(item);\n+   |         ^^^\n    |\n-   = help: try using vec![item;SIZE] or vec17.resize(NEW_SIZE, item)\n+   = help: try using vec![item;SIZE] or vec.resize(NEW_SIZE, item)\n \n error: aborting due to 5 previous errors\n "}]}