{"sha": "8227db86eb8c9497ba81da35c012f23ece7a1ac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMjdkYjg2ZWI4Yzk0OTdiYTgxZGEzNWMwMTJmMjNlY2U3YTFhYzA=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-05-05T23:49:07Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-05-06T01:00:13Z"}, "message": "fix typos caught by codespell", "tree": {"sha": "2aa90d4b221d8b61ba21ef54fb9957e889193bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aa90d4b221d8b61ba21ef54fb9957e889193bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8227db86eb8c9497ba81da35c012f23ece7a1ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8227db86eb8c9497ba81da35c012f23ece7a1ac0", "html_url": "https://github.com/rust-lang/rust/commit/8227db86eb8c9497ba81da35c012f23ece7a1ac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8227db86eb8c9497ba81da35c012f23ece7a1ac0/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "252b5444daf83a9f1b18e2dfe4b46830d2be4447", "url": "https://api.github.com/repos/rust-lang/rust/commits/252b5444daf83a9f1b18e2dfe4b46830d2be4447", "html_url": "https://github.com/rust-lang/rust/commit/252b5444daf83a9f1b18e2dfe4b46830d2be4447"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "e7a03a9b7e17439ea4a1557ea9e1c026897d88b4", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=8227db86eb8c9497ba81da35c012f23ece7a1ac0", "patch": "@@ -374,7 +374,7 @@ fn extract_labels<'v, 'a>(ctxt: &mut LifetimeContext<'a>, b: &'v ast::Block) {\n         fn visit_expr(&mut self, ex: &'v ast::Expr) {\n             if let Some(label) = expression_label(ex) {\n                 for &(prior, prior_span) in &self.labels_in_fn[..] {\n-                    // FIXME (#24278): non-hygienic comparision\n+                    // FIXME (#24278): non-hygienic comparison\n                     if label.name == prior.name {\n                         signal_shadowing_problem(self.sess,\n                                                  label.name,\n@@ -420,7 +420,7 @@ fn extract_labels<'v, 'a>(ctxt: &mut LifetimeContext<'a>, b: &'v ast::Block) {\n                 EarlyScope(_, lifetimes, s) |\n                 LateScope(lifetimes, s) => {\n                     for lifetime_def in lifetimes {\n-                        // FIXME (#24278): non-hygienic comparision\n+                        // FIXME (#24278): non-hygienic comparison\n                         if label.name == lifetime_def.lifetime.name {\n                             signal_shadowing_problem(\n                                 sess,\n@@ -677,7 +677,7 @@ impl<'a> LifetimeContext<'a> {\n                                         lifetime: &ast::Lifetime)\n     {\n         for &(label, label_span) in &self.labels_in_fn {\n-            // FIXME (#24278): non-hygienic comparision\n+            // FIXME (#24278): non-hygienic comparison\n             if lifetime.name == label.name {\n                 signal_shadowing_problem(self.sess,\n                                          lifetime.name,"}, {"sha": "677254238c03498143cda5e658a8c1c22bb45b98", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=8227db86eb8c9497ba81da35c012f23ece7a1ac0", "patch": "@@ -1344,7 +1344,7 @@ pub fn ast_ty_arg_to_ty<'tcx>(this: &AstConv<'tcx>,\n }\n \n // Check the base def in a PathResolution and convert it to a Ty. If there are\n-// associated types in the PathResolution, these will need to be seperately\n+// associated types in the PathResolution, these will need to be separately\n // resolved.\n fn base_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n                         rscope: &RegionScope,"}, {"sha": "444e5dea89a46c2079cabfe59d684d16e397bb08", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=8227db86eb8c9497ba81da35c012f23ece7a1ac0", "patch": "@@ -944,7 +944,7 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics<'tcx>,\n         // a Sized bound, removing the bounds as we find them.\n         //\n         // Note that associated types also have a sized bound by default, but we\n-        // don't actually konw the set of associated types right here so that's\n+        // don't actually know the set of associated types right here so that's\n         // handled in cleaning associated types\n         let mut sized_params = HashSet::new();\n         where_predicates.retain(|pred| {"}, {"sha": "6f3c0fd63aa6da6c64551e43ab3ae4167a5f0284", "filename": "src/libstd/sys/unix/process2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs?ref=8227db86eb8c9497ba81da35c012f23ece7a1ac0", "patch": "@@ -328,7 +328,7 @@ impl Process {\n         }) {\n             Ok(0) => None,\n             Ok(n) if n == self.pid => Some(translate_status(status)),\n-            Ok(n) => panic!(\"unkown pid: {}\", n),\n+            Ok(n) => panic!(\"unknown pid: {}\", n),\n             Err(e) => panic!(\"unknown waitpid error: {}\", e),\n         }\n     }"}, {"sha": "51f9de8edf057541e005040ad6da030a998070b9", "filename": "src/rt/valgrind/valgrind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Frt%2Fvalgrind%2Fvalgrind.h", "raw_url": "https://github.com/rust-lang/rust/raw/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Frt%2Fvalgrind%2Fvalgrind.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fvalgrind%2Fvalgrind.h?ref=8227db86eb8c9497ba81da35c012f23ece7a1ac0", "patch": "@@ -5122,7 +5122,7 @@ VALGRIND_PRINTF_BACKTRACE(const char *format, ...)\n \n \n /* These requests allow control to move from the simulated CPU to the\n-   real CPU, calling an arbitary function.\n+   real CPU, calling an arbitrary function.\n \n    Note that the current ThreadId is inserted as the first argument.\n    So this call:"}, {"sha": "d5b799710941bdb9a5c6aaf4e1e872fd46b9386c", "filename": "src/test/run-pass/issue-20616.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Ftest%2Frun-pass%2Fissue-20616.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8227db86eb8c9497ba81da35c012f23ece7a1ac0/src%2Ftest%2Frun-pass%2Fissue-20616.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20616.rs?ref=8227db86eb8c9497ba81da35c012f23ece7a1ac0", "patch": "@@ -32,7 +32,7 @@ type TypeF<T> = Box<T>;\n // type argument with trailing comma\n type TypeG<T> = Box<T,>;\n \n-// trailing comma on liftime defs\n+// trailing comma on lifetime defs\n type TypeH<'a,> = &'a ();\n \n // trailing comma on type argument"}]}