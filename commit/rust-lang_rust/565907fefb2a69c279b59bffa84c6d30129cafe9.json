{"sha": "565907fefb2a69c279b59bffa84c6d30129cafe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NTkwN2ZlZmIyYTY5YzI3OWI1OWJmZmE4NGM2ZDMwMTI5Y2FmZTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-23T02:08:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-23T02:08:27Z"}, "message": "Auto merge of #46857 - estebank:use-loop-sp, r=nikomatsakis\n\nPoint at `while true` span instead of entire block", "tree": {"sha": "7c082d31c5fb50120c47a173e018ff0ed32654d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c082d31c5fb50120c47a173e018ff0ed32654d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/565907fefb2a69c279b59bffa84c6d30129cafe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/565907fefb2a69c279b59bffa84c6d30129cafe9", "html_url": "https://github.com/rust-lang/rust/commit/565907fefb2a69c279b59bffa84c6d30129cafe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/565907fefb2a69c279b59bffa84c6d30129cafe9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0cf23e11507988ab41a774052e1a06cea12010a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0cf23e11507988ab41a774052e1a06cea12010a", "html_url": "https://github.com/rust-lang/rust/commit/f0cf23e11507988ab41a774052e1a06cea12010a"}, {"sha": "e9f4fc8d406ddd2d75e4aae34fe84abdd1bc479a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f4fc8d406ddd2d75e4aae34fe84abdd1bc479a", "html_url": "https://github.com/rust-lang/rust/commit/e9f4fc8d406ddd2d75e4aae34fe84abdd1bc479a"}], "stats": {"total": 35, "additions": 7, "deletions": 28}, "files": [{"sha": "a2a6a0da68ff055034ff393c6b5c211cb706db2f", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=565907fefb2a69c279b59bffa84c6d30129cafe9", "patch": "@@ -102,11 +102,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for WhileTrue {\n                 if let ast::LitKind::Bool(true) = lit.node {\n                     if lit.span.ctxt() == SyntaxContext::empty() {\n                         let msg = \"denote infinite loops with `loop { ... }`\";\n-                        let mut err = cx.struct_span_lint(WHILE_TRUE, e.span, msg);\n                         let condition_span = cx.tcx.sess.codemap().def_span(e.span);\n-                        err.span_suggestion_short(condition_span,\n-                                                  \"use `loop`\",\n-                                                  \"loop\".to_owned());\n+                        let mut err = cx.struct_span_lint(WHILE_TRUE, condition_span, msg);\n+                        err.span_suggestion_short(condition_span, \"use `loop`\", \"loop\".to_owned());\n                         err.emit();\n                     }\n                 }"}, {"sha": "3547accd2ed334f6e9c7c22dc105d6115ae2a7a3", "filename": "src/test/ui/codemap_tests/unicode_3.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.stderr?ref=565907fefb2a69c279b59bffa84c6d30129cafe9", "patch": "@@ -2,9 +2,7 @@ warning: denote infinite loops with `loop { ... }`\n   --> $DIR/unicode_3.rs:14:45\n    |\n 14 |     let s = \"Z\u0368A\u0351\u0366\u0352\u034b\u0364\u0351\u031aL\u0304\u0351\u034bG\u0302\u0368\u0365\u033f\u0352\u033d\u0344O\u0365\u035b\u036d!\u030f\"; while true { break; }\n-   |                       ----------^^^^^^^^^^^\n-   |                       |\n-   |                       help: use `loop`\n+   |                       ^^^^^^^^^^ help: use `loop`\n    |\n    = note: #[warn(while_true)] on by default\n "}, {"sha": "5f920316b5ca167c0d91b1b81c99f1dbf1e7f60d", "filename": "src/test/ui/issue-1962.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Ftest%2Fui%2Fissue-1962.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Ftest%2Fui%2Fissue-1962.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1962.stderr?ref=565907fefb2a69c279b59bffa84c6d30129cafe9", "patch": "@@ -1,15 +1,8 @@\n error: denote infinite loops with `loop { ... }`\n   --> $DIR/issue-1962.rs:14:3\n    |\n-14 |     while true  { //~ ERROR denote infinite loops with `loop\n-   |     ^---------\n-   |     |\n-   |  ___help: use `loop`\n-   | |\n-15 | |     i += 1;\n-16 | |     if i == 5 { break; }\n-17 | |   }\n-   | |___^\n+14 |   while true  { //~ ERROR denote infinite loops with `loop\n+   |   ^^^^^^^^^^ help: use `loop`\n    |\n    = note: requested on the command line with `-D while-true`\n "}, {"sha": "701a95222183a6f9369292f0fd9c1100dde9ec3f", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/565907fefb2a69c279b59bffa84c6d30129cafe9/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=565907fefb2a69c279b59bffa84c6d30129cafe9", "patch": "@@ -75,18 +75,8 @@ warning: function is marked #[no_mangle], but not exported\n warning: denote infinite loops with `loop { ... }`\n   --> $DIR/suggestions.rs:34:5\n    |\n-34 |       while true { // should suggest `loop`\n-   |       ^---------\n-   |       |\n-   |  _____help: use `loop`\n-   | |\n-35 | |     //~^ WARN denote infinite loops\n-36 | |         let mut a = (1); // should suggest no `mut`, no parens\n-37 | |         //~^ WARN does not need to be mutable\n-...  |\n-44 | |         println!(\"{}\", a);\n-45 | |     }\n-   | |_____^\n+34 |     while true { // should suggest `loop`\n+   |     ^^^^^^^^^^ help: use `loop`\n    |\n    = note: #[warn(while_true)] on by default\n "}]}