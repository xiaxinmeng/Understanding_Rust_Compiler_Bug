{"sha": "fe512dacc84932de7eb044c0961598f9203446b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNTEyZGFjYzg0OTMyZGU3ZWIwNDRjMDk2MTU5OGY5MjAzNDQ2Yjk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-09T15:44:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-23T20:28:27Z"}, "message": "Remove awful hack concerning `Trait impl Trait` in method resolution code that I've been longing to remove for quite some time.", "tree": {"sha": "b7aff75c020678a3661a1772ce0f1b045c848c2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7aff75c020678a3661a1772ce0f1b045c848c2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe512dacc84932de7eb044c0961598f9203446b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe512dacc84932de7eb044c0961598f9203446b9", "html_url": "https://github.com/rust-lang/rust/commit/fe512dacc84932de7eb044c0961598f9203446b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe512dacc84932de7eb044c0961598f9203446b9/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f5d22593328d18bd140e7ab10bdeccd0690928a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f5d22593328d18bd140e7ab10bdeccd0690928a", "html_url": "https://github.com/rust-lang/rust/commit/8f5d22593328d18bd140e7ab10bdeccd0690928a"}], "stats": {"total": 30, "additions": 9, "deletions": 21}, "files": [{"sha": "d7db21f3a2f762350f94f0636886695f8b203fbf", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fe512dacc84932de7eb044c0961598f9203446b9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe512dacc84932de7eb044c0961598f9203446b9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=fe512dacc84932de7eb044c0961598f9203446b9", "patch": "@@ -404,26 +404,9 @@ impl<'a,'tcx> ConfirmContext<'a,'tcx> {\n                all_substs.repr(self.tcx()));\n \n         // Instantiate the bounds on the method with the\n-        // type/early-bound-regions substitutions performed.  The only\n-        // late-bound-regions that can appear in bounds are from the\n-        // impl, and those were already instantiated above.\n-        //\n-        // FIXME(DST). Super hack. For a method on a trait object\n-        // `Trait`, the generic signature requires that\n-        // `Self:Trait`. Since, for an object, we bind `Self` to the\n-        // type `Trait`, this leads to an obligation\n-        // `Trait:Trait`. Until such time we DST is fully implemented,\n-        // that obligation is not necessarily satisfied. (In the\n-        // future, it would be.) But we know that the true `Self` DOES implement\n-        // the trait. So we just delete this requirement. Hack hack hack.\n-        let mut method_predicates = pick.method_ty.predicates.instantiate(self.tcx(), &all_substs);\n-        match pick.kind {\n-            probe::ObjectPick(..) => {\n-                assert_eq!(method_predicates.predicates.get_slice(subst::SelfSpace).len(), 1);\n-                method_predicates.predicates.pop(subst::SelfSpace);\n-            }\n-            _ => { }\n-        }\n+        // type/early-bound-regions substitutions performed. There can\n+        // be no late-bound regions appearing here.\n+        let method_predicates = pick.method_ty.predicates.instantiate(self.tcx(), &all_substs);\n         let method_predicates = self.fcx.normalize_associated_types_in(self.span,\n                                                                        &method_predicates);\n "}, {"sha": "8fb543fb96703cda1a50fc7c0731dfc11288656f", "filename": "src/test/compile-fail/issue-18959.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe512dacc84932de7eb044c0961598f9203446b9/src%2Ftest%2Fcompile-fail%2Fissue-18959.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe512dacc84932de7eb044c0961598f9203446b9/src%2Ftest%2Fcompile-fail%2Fissue-18959.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18959.rs?ref=fe512dacc84932de7eb044c0961598f9203446b9", "patch": "@@ -17,7 +17,11 @@ impl Foo for Thing {\n     fn foo<T>(&self, _: &T) {}\n }\n \n-#[inline(never)] fn foo(b: &Bar) { b.foo(&0_usize) }\n+#[inline(never)]\n+fn foo(b: &Bar) {\n+    b.foo(&0usize)\n+    //~^ ERROR the trait `Foo` is not implemented for the type `Bar`\n+}\n \n fn main() {\n     let mut thing = Thing;"}, {"sha": "b09b10ffa0aad9dc22572e47f9348b44d7d7e7ac", "filename": "src/test/compile-fail/trait-test-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fe512dacc84932de7eb044c0961598f9203446b9/src%2Ftest%2Fcompile-fail%2Ftrait-test-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe512dacc84932de7eb044c0961598f9203446b9/src%2Ftest%2Fcompile-fail%2Ftrait-test-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-test-2.rs?ref=fe512dacc84932de7eb044c0961598f9203446b9", "patch": "@@ -18,4 +18,5 @@ fn main() {\n     10.dup::<i32>(); //~ ERROR does not take type parameters\n     10.blah::<i32, i32>(); //~ ERROR incorrect number of type parameters\n     (box 10 as Box<bar>).dup(); //~ ERROR cannot convert to a trait object\n+    //~^ ERROR the trait `bar` is not implemented for the type `bar`\n }"}]}