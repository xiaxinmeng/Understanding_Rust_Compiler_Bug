{"sha": "888137d7d27405ce0d41ae134088f814a2ec92a2", "node_id": "C_kwDOAAsO6NoAKDg4ODEzN2Q3ZDI3NDA1Y2UwZDQxYWUxMzQwODhmODE0YTJlYzkyYTI", "commit": {"author": {"name": "Jeremy Stucki", "email": "dev@jeremystucki.ch", "date": "2022-12-20T21:10:40Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T02:59:38Z"}, "message": "rustc: Remove needless lifetimes", "tree": {"sha": "3d97ca043318f2ad153fcc6ee8ffcf6a4e5a918d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d97ca043318f2ad153fcc6ee8ffcf6a4e5a918d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/888137d7d27405ce0d41ae134088f814a2ec92a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/888137d7d27405ce0d41ae134088f814a2ec92a2", "html_url": "https://github.com/rust-lang/rust/commit/888137d7d27405ce0d41ae134088f814a2ec92a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/888137d7d27405ce0d41ae134088f814a2ec92a2/comments", "author": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2e83dce57c41363095cac253c5255070afcd667", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e83dce57c41363095cac253c5255070afcd667", "html_url": "https://github.com/rust-lang/rust/commit/c2e83dce57c41363095cac253c5255070afcd667"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "dcd560b3dcd952efe7d81228ac4403d1f8b748ab", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/888137d7d27405ce0d41ae134088f814a2ec92a2/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888137d7d27405ce0d41ae134088f814a2ec92a2/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=888137d7d27405ce0d41ae134088f814a2ec92a2", "patch": "@@ -63,7 +63,7 @@ pub fn linkage_to_gcc(linkage: Linkage) -> FunctionType {\n     }\n }\n \n-pub fn compile_codegen_unit<'tcx>(tcx: TyCtxt<'tcx>, cgu_name: Symbol, supports_128bit_integers: bool) -> (ModuleCodegen<GccContext>, u64) {\n+pub fn compile_codegen_unit(tcx: TyCtxt<'_>, cgu_name: Symbol, supports_128bit_integers: bool) -> (ModuleCodegen<GccContext>, u64) {\n     let prof_timer = tcx.prof.generic_activity(\"codegen_module\");\n     let start_time = Instant::now();\n "}, {"sha": "ef857cbe5719e4180621cae3f06a84747e97c301", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/888137d7d27405ce0d41ae134088f814a2ec92a2/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888137d7d27405ce0d41ae134088f814a2ec92a2/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=888137d7d27405ce0d41ae134088f814a2ec92a2", "patch": "@@ -44,7 +44,7 @@ pub fn bytes_in_context<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, bytes: &[u8]) ->\n     context.new_array_constructor(None, typ, &elements)\n }\n \n-pub fn type_is_pointer<'gcc>(typ: Type<'gcc>) -> bool {\n+pub fn type_is_pointer(typ: Type) -> bool {\n     typ.get_pointee().is_some()\n }\n "}, {"sha": "16db781a894a97e02e26230eb19c0b03e3deb239", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/888137d7d27405ce0d41ae134088f814a2ec92a2/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888137d7d27405ce0d41ae134088f814a2ec92a2/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=888137d7d27405ce0d41ae134088f814a2ec92a2", "patch": "@@ -163,7 +163,7 @@ impl ExtraBackendMethods for GccCodegenBackend {\n         mods\n     }\n \n-    fn compile_codegen_unit<'tcx>(&self, tcx: TyCtxt<'tcx>, cgu_name: Symbol) -> (ModuleCodegen<Self::Module>, u64) {\n+    fn compile_codegen_unit(&self, tcx: TyCtxt<'_>, cgu_name: Symbol) -> (ModuleCodegen<Self::Module>, u64) {\n         base::compile_codegen_unit(tcx, cgu_name, *self.supports_128bit_integers.lock().expect(\"lock\"))\n     }\n "}]}