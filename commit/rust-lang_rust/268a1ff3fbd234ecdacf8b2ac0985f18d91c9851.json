{"sha": "268a1ff3fbd234ecdacf8b2ac0985f18d91c9851", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2OGExZmYzZmJkMjM0ZWNkYWNmOGIyYWMwOTg1ZjE4ZDkxYzk4NTE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-15T00:18:21Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-15T00:18:21Z"}, "message": "Account for `Path`s on `is_suggestable_infer_ty`\n\nFix #68162.", "tree": {"sha": "527a52a9a1de22e0402cb9e755af2d98af563b01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/527a52a9a1de22e0402cb9e755af2d98af563b01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851", "html_url": "https://github.com/rust-lang/rust/commit/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30ca215b4e38b32aa7abdd635c5e2d56f5724494", "url": "https://api.github.com/repos/rust-lang/rust/commits/30ca215b4e38b32aa7abdd635c5e2d56f5724494", "html_url": "https://github.com/rust-lang/rust/commit/30ca215b4e38b32aa7abdd635c5e2d56f5724494"}], "stats": {"total": 131, "additions": 86, "deletions": 45}, "files": [{"sha": "dca3289747e4ce92c52ac07bc20a5e84eb01549f", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=268a1ff3fbd234ecdacf8b2ac0985f18d91c9851", "patch": "@@ -1806,6 +1806,16 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n     }\n }\n \n+fn are_suggestable_generic_args(generic_args: &[hir::GenericArg<'_>]) -> bool {\n+    generic_args\n+        .iter()\n+        .filter_map(|arg| match arg {\n+            hir::GenericArg::Type(ty) => Some(ty),\n+            _ => None,\n+        })\n+        .any(is_suggestable_infer_ty)\n+}\n+\n /// Whether `ty` is a type with `_` placeholders that can be infered. Used in diagnostics only to\n /// use inference to provide suggestions for the appropriate type if possible.\n fn is_suggestable_infer_ty(ty: &hir::Ty<'_>) -> bool {\n@@ -1815,13 +1825,16 @@ fn is_suggestable_infer_ty(ty: &hir::Ty<'_>) -> bool {\n         Slice(ty) | Array(ty, _) => is_suggestable_infer_ty(ty),\n         Tup(tys) => tys.iter().any(is_suggestable_infer_ty),\n         Ptr(mut_ty) | Rptr(_, mut_ty) => is_suggestable_infer_ty(mut_ty.ty),\n-        Def(_, generic_args) => generic_args\n-            .iter()\n-            .filter_map(|arg| match arg {\n-                hir::GenericArg::Type(ty) => Some(ty),\n-                _ => None,\n-            })\n-            .any(is_suggestable_infer_ty),\n+        Def(_, generic_args) => are_suggestable_generic_args(generic_args),\n+        Path(hir::QPath::TypeRelative(ty, segment)) => {\n+            is_suggestable_infer_ty(ty) || are_suggestable_generic_args(segment.generic_args().args)\n+        }\n+        Path(hir::QPath::Resolved(ty_opt, hir::Path { segments, .. })) => {\n+            ty_opt.map_or(false, is_suggestable_infer_ty)\n+                || segments\n+                    .iter()\n+                    .any(|segment| are_suggestable_generic_args(segment.generic_args().args))\n+        }\n         _ => false,\n     }\n }"}, {"sha": "86c7c52b27166ed608d80c9353c31e5db16e8eef", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs?ref=268a1ff3fbd234ecdacf8b2ac0985f18d91c9851", "patch": "@@ -68,6 +68,13 @@ struct Test10 {\n }\n \n pub fn main() {\n+    static A = 42;\n+    //~^ ERROR missing type for `static` item\n+    static B: _ = 42;\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    static C: Option<_> = Some(42);\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+\n     fn fn_test() -> _ { 5 }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n "}, {"sha": "f740a9f7f34b115536a4071d67230a0d8c7cc1ac", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.stderr", "status": "modified", "additions": 59, "deletions": 38, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/268a1ff3fbd234ecdacf8b2ac0985f18d91c9851/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr?ref=268a1ff3fbd234ecdacf8b2ac0985f18d91c9851", "patch": "@@ -1,35 +1,35 @@\n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:146:18\n+  --> $DIR/typeck_type_placeholder_item.rs:153:18\n    |\n LL | struct BadStruct<_>(_);\n    |                  ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:149:16\n+  --> $DIR/typeck_type_placeholder_item.rs:156:16\n    |\n LL | trait BadTrait<_> {}\n    |                ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:159:19\n+  --> $DIR/typeck_type_placeholder_item.rs:166:19\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:159:22\n+  --> $DIR/typeck_type_placeholder_item.rs:166:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                      ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:164:19\n+  --> $DIR/typeck_type_placeholder_item.rs:171:19\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                   ^ expected identifier, found reserved identifier\n \n error[E0403]: the name `_` is already used for a generic parameter in this item's generic parameters\n-  --> $DIR/typeck_type_placeholder_item.rs:159:22\n+  --> $DIR/typeck_type_placeholder_item.rs:166:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   -  ^ already used\n@@ -177,8 +177,29 @@ LL |\n LL |     b: (T, T),\n    |\n \n+error: missing type for `static` item\n+  --> $DIR/typeck_type_placeholder_item.rs:71:12\n+   |\n+LL |     static A = 42;\n+   |            ^ help: provide a type for the item: `A: i32`\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:73:15\n+   |\n+LL |     static B: _ = 42;\n+   |               ^\n+   |               |\n+   |               not allowed in type signatures\n+   |               help: replace `_` with the correct type: `i32`\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:75:15\n+   |\n+LL |     static C: Option<_> = Some(42);\n+   |               ^^^^^^^^^ not allowed in type signatures\n+\n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:71:21\n+  --> $DIR/typeck_type_placeholder_item.rs:78:21\n    |\n LL |     fn fn_test() -> _ { 5 }\n    |                     ^\n@@ -187,7 +208,7 @@ LL |     fn fn_test() -> _ { 5 }\n    |                     help: replace with the correct return type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:74:23\n+  --> $DIR/typeck_type_placeholder_item.rs:81:23\n    |\n LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      -^--^-\n@@ -197,7 +218,7 @@ LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      help: replace with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:77:22\n+  --> $DIR/typeck_type_placeholder_item.rs:84:22\n    |\n LL |     static FN_TEST3: _ = \"test\";\n    |                      ^\n@@ -206,7 +227,7 @@ LL |     static FN_TEST3: _ = \"test\";\n    |                      help: replace `_` with the correct type: `&'static str`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:80:22\n+  --> $DIR/typeck_type_placeholder_item.rs:87:22\n    |\n LL |     static FN_TEST4: _ = 145;\n    |                      ^\n@@ -215,13 +236,13 @@ LL |     static FN_TEST4: _ = 145;\n    |                      help: replace `_` with the correct type: `i32`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:83:22\n+  --> $DIR/typeck_type_placeholder_item.rs:90:22\n    |\n LL |     static FN_TEST5: (_, _) = (1, 2);\n    |                      ^^^^^^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:86:20\n+  --> $DIR/typeck_type_placeholder_item.rs:93:20\n    |\n LL |     fn fn_test6(_: _) { }\n    |                    ^ not allowed in type signatures\n@@ -232,7 +253,7 @@ LL |     fn fn_test6<T>(_: T) { }\n    |                ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:89:20\n+  --> $DIR/typeck_type_placeholder_item.rs:96:20\n    |\n LL |     fn fn_test7(x: _) { let _x: usize = x; }\n    |                    ^ not allowed in type signatures\n@@ -243,13 +264,13 @@ LL |     fn fn_test7<T>(x: T) { let _x: usize = x; }\n    |                ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:92:29\n+  --> $DIR/typeck_type_placeholder_item.rs:99:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:92:29\n+  --> $DIR/typeck_type_placeholder_item.rs:99:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^ not allowed in type signatures\n@@ -260,7 +281,7 @@ LL |     fn fn_test8<T>(_f: fn() -> T) { }\n    |                ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:115:12\n+  --> $DIR/typeck_type_placeholder_item.rs:122:12\n    |\n LL |         a: _,\n    |            ^ not allowed in type signatures\n@@ -279,21 +300,21 @@ LL |         b: (T, T),\n    |\n \n error[E0282]: type annotations needed\n-  --> $DIR/typeck_type_placeholder_item.rs:120:27\n+  --> $DIR/typeck_type_placeholder_item.rs:127:27\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                           ^^^^^^ cannot infer type\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:120:28\n+  --> $DIR/typeck_type_placeholder_item.rs:127:28\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                            ^  ^ not allowed in type signatures\n    |                            |\n    |                            not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:124:30\n+  --> $DIR/typeck_type_placeholder_item.rs:131:30\n    |\n LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             -^--^-\n@@ -303,7 +324,7 @@ LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             help: replace with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:127:33\n+  --> $DIR/typeck_type_placeholder_item.rs:134:33\n    |\n LL |     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n    |                           ------^-\n@@ -312,7 +333,7 @@ LL |     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n    |                           help: replace with the correct return type: `(i32, i32)`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:146:21\n+  --> $DIR/typeck_type_placeholder_item.rs:153:21\n    |\n LL | struct BadStruct<_>(_);\n    |                     ^ not allowed in type signatures\n@@ -323,7 +344,7 @@ LL | struct BadStruct<T>(T);\n    |                  ^  ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:151:15\n+  --> $DIR/typeck_type_placeholder_item.rs:158:15\n    |\n LL | impl BadTrait<_> for BadStruct<_> {}\n    |               ^                ^ not allowed in type signatures\n@@ -336,13 +357,13 @@ LL | impl<T> BadTrait<T> for BadStruct<T> {}\n    |     ^^^          ^                ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:154:34\n+  --> $DIR/typeck_type_placeholder_item.rs:161:34\n    |\n LL | fn impl_trait() -> impl BadTrait<_> {\n    |                                  ^ not allowed in type signatures\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:159:25\n+  --> $DIR/typeck_type_placeholder_item.rs:166:25\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                         ^ not allowed in type signatures\n@@ -353,7 +374,7 @@ LL | struct BadStruct1<T, _>(T);\n    |                   ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:164:25\n+  --> $DIR/typeck_type_placeholder_item.rs:171:25\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                         ^ not allowed in type signatures\n@@ -364,7 +385,7 @@ LL | struct BadStruct2<K, T>(K, T);\n    |                   ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:168:14\n+  --> $DIR/typeck_type_placeholder_item.rs:175:14\n    |\n LL | type X = Box<_>;\n    |              ^ not allowed in type signatures\n@@ -381,7 +402,7 @@ LL |     fn test10<T>(&self, _x : T) { }\n    |              ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:132:31\n+  --> $DIR/typeck_type_placeholder_item.rs:139:31\n    |\n LL |     fn method_test1(&self, x: _);\n    |                               ^ not allowed in type signatures\n@@ -392,7 +413,7 @@ LL |     fn method_test1<T>(&self, x: T);\n    |                    ^^^           ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:134:31\n+  --> $DIR/typeck_type_placeholder_item.rs:141:31\n    |\n LL |     fn method_test2(&self, x: _) -> _;\n    |                               ^     ^ not allowed in type signatures\n@@ -405,7 +426,7 @@ LL |     fn method_test2<T>(&self, x: T) -> T;\n    |                    ^^^           ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:136:31\n+  --> $DIR/typeck_type_placeholder_item.rs:143:31\n    |\n LL |     fn method_test3(&self) -> _;\n    |                               ^ not allowed in type signatures\n@@ -416,7 +437,7 @@ LL |     fn method_test3<T>(&self) -> T;\n    |                    ^^^           ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:138:26\n+  --> $DIR/typeck_type_placeholder_item.rs:145:26\n    |\n LL |     fn assoc_fn_test1(x: _);\n    |                          ^ not allowed in type signatures\n@@ -427,7 +448,7 @@ LL |     fn assoc_fn_test1<T>(x: T);\n    |                      ^^^    ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:140:26\n+  --> $DIR/typeck_type_placeholder_item.rs:147:26\n    |\n LL |     fn assoc_fn_test2(x: _) -> _;\n    |                          ^     ^ not allowed in type signatures\n@@ -440,7 +461,7 @@ LL |     fn assoc_fn_test2<T>(x: T) -> T;\n    |                      ^^^    ^     ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:142:28\n+  --> $DIR/typeck_type_placeholder_item.rs:149:28\n    |\n LL |     fn assoc_fn_test3() -> _;\n    |                            ^ not allowed in type signatures\n@@ -462,7 +483,7 @@ LL |     fn clone_from<T>(&mut self, other: T) { *self = Test9; }\n    |                  ^^^                   ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:102:34\n+  --> $DIR/typeck_type_placeholder_item.rs:109:34\n    |\n LL |         fn fn_test10(&self, _x : _) { }\n    |                                  ^ not allowed in type signatures\n@@ -473,7 +494,7 @@ LL |         fn fn_test10<T>(&self, _x : T) { }\n    |                     ^^^             ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:110:41\n+  --> $DIR/typeck_type_placeholder_item.rs:117:41\n    |\n LL |         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n    |                                         ^ not allowed in type signatures\n@@ -484,7 +505,7 @@ LL |         fn clone_from<T>(&mut self, other: T) { *self = FnTest9; }\n    |                      ^^^                   ^\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:174:21\n+  --> $DIR/typeck_type_placeholder_item.rs:181:21\n    |\n LL | type Y = impl Trait<_>;\n    |                     ^ not allowed in type signatures\n@@ -508,7 +529,7 @@ LL |     fn clone(&self) -> _ { Test9 }\n    |                        help: replace with the correct return type: `Test9`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:99:31\n+  --> $DIR/typeck_type_placeholder_item.rs:106:31\n    |\n LL |         fn fn_test9(&self) -> _ { () }\n    |                               ^\n@@ -517,15 +538,15 @@ LL |         fn fn_test9(&self) -> _ { () }\n    |                               help: replace with the correct return type: `()`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:107:28\n+  --> $DIR/typeck_type_placeholder_item.rs:114:28\n    |\n LL |         fn clone(&self) -> _ { FnTest9 }\n    |                            ^\n    |                            |\n    |                            not allowed in type signatures\n    |                            help: replace with the correct return type: `main::FnTest9`\n \n-error: aborting due to 55 previous errors\n+error: aborting due to 58 previous errors\n \n Some errors have detailed explanations: E0121, E0282, E0403.\n For more information about an error, try `rustc --explain E0121`."}]}