{"sha": "2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNWFlMWNiMDYxZjY1OTlkMTA4ZDlhMGZjMGI3YjRlMTdhYmI1ZTc=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-12-11T18:20:50Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-12-13T18:39:14Z"}, "message": "Apply suggestions from review", "tree": {"sha": "018565f715ab7f3c6f7c2c5076e22b68bbf0337f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/018565f715ab7f3c6f7c2c5076e22b68bbf0337f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7", "html_url": "https://github.com/rust-lang/rust/commit/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3aecd0d55d81b73b571b961201d4da36417bf61", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3aecd0d55d81b73b571b961201d4da36417bf61", "html_url": "https://github.com/rust-lang/rust/commit/b3aecd0d55d81b73b571b961201d4da36417bf61"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "713dd3a7c834ad8540f9f7f3e6a07a5343d425ea", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7", "patch": "@@ -56,7 +56,7 @@ impl NonConstExpr {\n             | Self::Match(WhileLetDesugar)\n             => &[sym::const_loop, sym::const_if_match],\n \n-            // A `for` loop's desugaring contains a call to `FromIterator::from_iter`,\n+            // A `for` loop's desugaring contains a call to `IntoIterator::into_iter`,\n             // so they are not yet allowed with `#![feature(const_loop)]`.\n             _ => return None,\n         };\n@@ -167,10 +167,10 @@ impl<'tcx> CheckConstVisitor<'tcx> {\n             // If the user enabled `#![feature(const_loop)]` but not `#![feature(const_if_match)]`,\n             // explain why their `while` loop is being rejected.\n             &[gate @ sym::const_if_match] if gates.contains(&sym::const_loop) => {\n-                let mut err = feature_err(&self.tcx.sess.parse_sess, gate, span, &msg);\n-                err.note(\"`#![feature(const_loop)]` alone is not sufficient, \\\n-                          since this loop expression contains an implicit conditional\");\n-                err.emit();\n+                feature_err(&self.tcx.sess.parse_sess, gate, span, &msg)\n+                    .note(\"`#![feature(const_loop)]` alone is not sufficient, \\\n+                           since this loop expression contains an implicit conditional\")\n+                    .emit();\n             }\n \n             &[missing_primary, ref missing_secondary @ ..] => {"}, {"sha": "9da5546976c755ea4e8458dbdef1e146abdb776e", "filename": "src/test/ui/consts/control-flow/drop-failure.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fdrop-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fdrop-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fdrop-failure.rs?ref=2b5ae1cb061f6599d108d9a0fc0b7b4e17abb5e7", "patch": "@@ -43,6 +43,8 @@ const _: Option<Vec<i32>> = {\n         tmp = some;\n         some = None;\n \n+        // We can escape the loop with `Some` still in `tmp`,\n+        // which would require that it be dropped at the end of the block.\n         if i > 100 {\n             break;\n         }"}]}