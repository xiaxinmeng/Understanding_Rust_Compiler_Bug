{"sha": "b723082cdb2d5793c103f64f9709639f97e31c61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MjMwODJjZGIyZDU3OTNjMTAzZjY0Zjk3MDk2MzlmOTdlMzFjNjE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-07T19:12:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-07T20:31:11Z"}, "message": "Rename hash_def_id to hash_node_id", "tree": {"sha": "24a25b68da2e47b255c76d65f887208393bf9abc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24a25b68da2e47b255c76d65f887208393bf9abc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b723082cdb2d5793c103f64f9709639f97e31c61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b723082cdb2d5793c103f64f9709639f97e31c61", "html_url": "https://github.com/rust-lang/rust/commit/b723082cdb2d5793c103f64f9709639f97e31c61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b723082cdb2d5793c103f64f9709639f97e31c61/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2362599d65a8517857610255a851efebc2ffaa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2362599d65a8517857610255a851efebc2ffaa4", "html_url": "https://github.com/rust-lang/rust/commit/d2362599d65a8517857610255a851efebc2ffaa4"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b8174139e5ee808ece30f2445c3846195ab3f3ae", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b723082cdb2d5793c103f64f9709639f97e31c61/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b723082cdb2d5793c103f64f9709639f97e31c61/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=b723082cdb2d5793c103f64f9709639f97e31c61", "patch": "@@ -51,7 +51,7 @@ fn maybe_find_item(int item_id, &ebml::doc items) -> option::t[ebml::doc] {\n         ret ebml::be_uint_from_bytes(bytes, 0u, 4u) as int == item_id;\n     }\n     auto eqer = bind eq_item(_, item_id);\n-    auto found = lookup_hash(items, eqer, encoder::hash_def_id(item_id));\n+    auto found = lookup_hash(items, eqer, encoder::hash_node_id(item_id));\n     if (vec::len(found) == 0u) {\n         ret option::none[ebml::doc];\n     } else { ret option::some[ebml::doc](found.(0)); }"}, {"sha": "dc7c392799212d1c02ac3b39f3b73ed70b96251f", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b723082cdb2d5793c103f64f9709639f97e31c61/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b723082cdb2d5793c103f64f9709639f97e31c61/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=b723082cdb2d5793c103f64f9709639f97e31c61", "patch": "@@ -18,7 +18,7 @@ import front::attr;\n \n export def_to_str;\n export hash_path;\n-export hash_def_id;\n+export hash_node_id;\n export encode_metadata;\n \n // Path table encoding\n@@ -371,7 +371,7 @@ fn encode_info_for_items(&@crate_ctxt cx, &ebml::writer ebml_w) ->\n // Path and definition ID indexing\n \n // djb's cdb hashes.\n-fn hash_def_id(&int def_id) -> uint { ret 177573u ^ (def_id as uint); }\n+fn hash_node_id(&int node_id) -> uint { ret 177573u ^ (node_id as uint); }\n \n fn hash_path(&str s) -> uint {\n     auto h = 5381u;\n@@ -540,7 +540,7 @@ fn encode_metadata(&@crate_ctxt cx, &@crate crate) -> str {\n     ebml::start_tag(ebml_w, tag_items);\n     auto items_index = encode_info_for_items(cx, ebml_w);\n     auto int_writer = write_int;\n-    auto item_hasher = hash_def_id;\n+    auto item_hasher = hash_node_id;\n     auto items_buckets = create_index[int](items_index, item_hasher);\n     encode_index[int](ebml_w, items_buckets, int_writer);\n     ebml::end_tag(ebml_w);"}]}