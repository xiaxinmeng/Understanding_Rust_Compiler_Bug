{"sha": "9985f4611b0d52e7faf6fc68adcdbced786871a9", "node_id": "C_kwDOAAsO6NoAKDk5ODVmNDYxMWIwZDUyZTdmYWY2ZmM2OGFkY2RiY2VkNzg2ODcxYTk", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-14T02:49:08Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-14T02:49:08Z"}, "message": "Clarify `expand_struct_method_body`.\n\nSpotted by @RalfJung. This causes no behavioural changes.", "tree": {"sha": "43684c733df1c9ab3b621d9d926846e57d4e8170", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43684c733df1c9ab3b621d9d926846e57d4e8170"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9985f4611b0d52e7faf6fc68adcdbced786871a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9985f4611b0d52e7faf6fc68adcdbced786871a9", "html_url": "https://github.com/rust-lang/rust/commit/9985f4611b0d52e7faf6fc68adcdbced786871a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9985f4611b0d52e7faf6fc68adcdbced786871a9/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1a859b25a95999ba276075bbd8e284ea675b41a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a859b25a95999ba276075bbd8e284ea675b41a", "html_url": "https://github.com/rust-lang/rust/commit/c1a859b25a95999ba276075bbd8e284ea675b41a"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "7b3c73de6de7dba6fd81b380407682cccb070ea4", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9985f4611b0d52e7faf6fc68adcdbced786871a9/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9985f4611b0d52e7faf6fc68adcdbced786871a9/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs?ref=9985f4611b0d52e7faf6fc68adcdbced786871a9", "patch": "@@ -1060,18 +1060,17 @@ impl<'a> MethodDef<'a> {\n                 trait_.create_struct_field_access_fields(cx, selflike_args, struct_def, true);\n             mk_body(cx, selflike_fields)\n         } else {\n-            // Neither packed nor copy. Need to use ref patterns.\n+            // Packed and not copy. Need to use ref patterns.\n             let prefixes: Vec<_> =\n                 (0..selflike_args.len()).map(|i| format!(\"__self_{}\", i)).collect();\n-            let addr_of = always_copy;\n+            let addr_of = false;\n             let selflike_fields =\n                 trait_.create_struct_pattern_fields(cx, struct_def, &prefixes, addr_of);\n             let mut body = mk_body(cx, selflike_fields);\n \n             let struct_path = cx.path(span, vec![Ident::new(kw::SelfUpper, type_ident.span)]);\n-            let by_ref = ByRef::from(is_packed && !always_copy);\n             let patterns =\n-                trait_.create_struct_patterns(cx, struct_path, struct_def, &prefixes, by_ref);\n+                trait_.create_struct_patterns(cx, struct_path, struct_def, &prefixes, ByRef::Yes);\n \n             // Do the let-destructuring.\n             let mut stmts: Vec<_> = iter::zip(selflike_args, patterns)"}]}