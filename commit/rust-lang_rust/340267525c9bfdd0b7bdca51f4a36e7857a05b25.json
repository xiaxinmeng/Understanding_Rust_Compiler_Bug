{"sha": "340267525c9bfdd0b7bdca51f4a36e7857a05b25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MDI2NzUyNWM5YmZkZDBiN2JkY2E1MWY0YTM2ZTc4NTdhMDViMjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-06T08:09:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-06T08:09:53Z"}, "message": "exported_symbols_cache: ensure we do not overwrite anything", "tree": {"sha": "08bc3d2d10cc26c0c478b8d0f732f92e269b7cc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08bc3d2d10cc26c0c478b8d0f732f92e269b7cc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/340267525c9bfdd0b7bdca51f4a36e7857a05b25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/340267525c9bfdd0b7bdca51f4a36e7857a05b25", "html_url": "https://github.com/rust-lang/rust/commit/340267525c9bfdd0b7bdca51f4a36e7857a05b25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/340267525c9bfdd0b7bdca51f4a36e7857a05b25/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b57313a4d91d9b66d237151a852955a9e450160", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b57313a4d91d9b66d237151a852955a9e450160", "html_url": "https://github.com/rust-lang/rust/commit/9b57313a4d91d9b66d237151a852955a9e450160"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2de0baf294747207b0ad5af17bba6dc86aea7e4d", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/340267525c9bfdd0b7bdca51f4a36e7857a05b25/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/340267525c9bfdd0b7bdca51f4a36e7857a05b25/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=340267525c9bfdd0b7bdca51f4a36e7857a05b25", "patch": "@@ -194,7 +194,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         let instance = instance_and_crate.map(|ic| ic.0);\n         // Cache it and load its MIR, if found.\n-        this.machine.exported_symbols_cache.insert(link_name, instance);\n+        this.machine.exported_symbols_cache.try_insert(link_name, instance).unwrap();\n         instance.map(|instance| this.load_mir(instance.def, None)).transpose()\n     }\n "}]}