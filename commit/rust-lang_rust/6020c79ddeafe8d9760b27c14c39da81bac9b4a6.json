{"sha": "6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMjBjNzlkZGVhZmU4ZDk3NjBiMjdjMTRjMzlkYTgxYmFjOWI0YTY=", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2021-05-24T22:36:36Z"}, "committer": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2021-06-24T14:46:14Z"}, "message": "Implement Desktop and Mobile version with gridlayout\n\n* implement sans-serif #85621", "tree": {"sha": "ca5cce8abd1e7ec6e82401d909e54a218a6dad01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca5cce8abd1e7ec6e82401d909e54a218a6dad01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "html_url": "https://github.com/rust-lang/rust/commit/6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "456a03227e3c81a51631f87ec80cac301e5fa6d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/456a03227e3c81a51631f87ec80cac301e5fa6d7", "html_url": "https://github.com/rust-lang/rust/commit/456a03227e3c81a51631f87ec80cac301e5fa6d7"}], "stats": {"total": 92, "additions": 61, "deletions": 31}, "files": [{"sha": "f68c0e5cd5e537b7d8e118a9061446ab056d8934", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "patch": "@@ -263,14 +263,14 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n             curty = myty;\n         } else if myty != curty {\n             if curty.is_some() {\n-                w.write_str(\"</table>\");\n+                w.write_str(\"</item-table>\");\n             }\n             curty = myty;\n             let (short, name) = item_ty_to_strs(myty.unwrap());\n             write!(\n                 w,\n                 \"<h2 id=\\\"{id}\\\" class=\\\"section-header\\\">\\\n-                       <a href=\\\"#{id}\\\">{name}</a></h2>\\n<table>\",\n+                       <a href=\\\"#{id}\\\">{name}</a></h2>\\n<item-table>\",\n                 id = cx.derive_id(short.to_owned()),\n                 name = name\n             );\n@@ -283,14 +283,14 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 match *src {\n                     Some(ref src) => write!(\n                         w,\n-                        \"<tr><td><code>{}extern crate {} as {};\",\n+                        \"<item-left><code>{}extern crate {} as {};\",\n                         myitem.visibility.print_with_space(myitem.def_id, cx),\n                         anchor(myitem.def_id.expect_real(), &*src.as_str(), cx),\n                         myitem.name.as_ref().unwrap(),\n                     ),\n                     None => write!(\n                         w,\n-                        \"<tr><td><code>{}extern crate {};\",\n+                        \"<item-left><code>{}extern crate {};\",\n                         myitem.visibility.print_with_space(myitem.def_id, cx),\n                         anchor(\n                             myitem.def_id.expect_real(),\n@@ -299,7 +299,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                         ),\n                     ),\n                 }\n-                w.write_str(\"</code></td></tr>\");\n+                w.write_str(\"</code></item-left>\\n\");\n             }\n \n             clean::ImportItem(ref import) => {\n@@ -326,10 +326,10 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n \n                 write!(\n                     w,\n-                    \"<tr class=\\\"{stab}{add}import-item\\\">\\\n-                         <td><code>{vis}{imp}</code></td>\\\n-                         <td class=\\\"docblock-short\\\">{stab_tags}</td>\\\n-                     </tr>\",\n+                    \"<item-left class=\\\"{stab}{add}import-item\\\">\\\n+                         <code>{vis}{imp}</code>\\\n+                     </item-left>\\\n+                     <item-right class=\\\"docblock-short\\\">{stab_tags}</item-right>\\n\",\n                     stab = stab.unwrap_or_default(),\n                     add = add,\n                     vis = myitem.visibility.print_with_space(myitem.def_id, cx),\n@@ -358,11 +358,10 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 let doc_value = myitem.doc_value().unwrap_or_default();\n                 write!(\n                     w,\n-                    \"<tr class=\\\"{stab}{add}module-item\\\">\\\n-                         <td><a class=\\\"{class}\\\" href=\\\"{href}\\\" \\\n-                             title=\\\"{title}\\\">{name}</a>{unsafety_flag}</td>\\\n-                         <td class=\\\"docblock-short\\\">{stab_tags}{docs}</td>\\\n-                     </tr>\",\n+                    \"<item-left class=\\\"{stab}{add}module-item\\\">\\\n+                         <a class=\\\"{class}\\\" href=\\\"{href}\\\" \\\n+                             title=\\\"{title}\\\">{name}</a>{unsafety_flag}</item-left>\\\n+                     <item-right class=\\\"docblock-short\\\">{stab_tags}{docs}</item-right>\\n\",\n                     name = *myitem.name.as_ref().unwrap(),\n                     stab_tags = extra_info_tags(myitem, item, cx.tcx()),\n                     docs = MarkdownSummaryLine(&doc_value, &myitem.links(cx)).into_string(),\n@@ -382,7 +381,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n     }\n \n     if curty.is_some() {\n-        w.write_str(\"</table>\");\n+        w.write_str(\"</item-table>\\n\");\n     }\n }\n "}, {"sha": "5b722ca502c99f0ddb3f2bf10aa3b7847b1a58b6", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "patch": "@@ -169,6 +169,7 @@ div.impl-items > div {\n h1, h2, h3, h4,\n .sidebar, a.source, .search-input, .search-results .result-name,\n .content table td:first-child > a,\n+item-left > a,\n div.item-list .out-of-band, span.since,\n #source-sidebar, #sidebar-toggle,\n details.rustdoc-toggle > summary::before,\n@@ -710,6 +711,25 @@ a {\n \n .block a.current.crate { font-weight: 500; }\n \n+item-table {\n+\tdisplay: grid;\n+\tcolumn-gap: 1.2rem;\n+\trow-gap: 0.0rem;\n+\tgrid-template-columns: auto 1fr;\n+\t/* align content left */\n+\tjustify-items: start;\n+}\n+\n+item-left, item-right {\n+\tdisplay: block;\n+}\n+item-left {\n+\tgrid-column: 1;\n+}\n+item-right {\n+\tgrid-column: 2;\n+}\n+\n .search-container {\n \tposition: relative;\n }\n@@ -1737,6 +1757,16 @@ details.undocumented[open] > summary::before {\n \t#help-button {\n \t\tdisplay: none;\n \t}\n+\n+\t/* Display an alternating layout on tablets and phones */\n+\titem-table {\n+\t\tdisplay: flex;\n+\t\tflex-flow: column wrap;\n+\t}\n+\titem-left, item-right {\n+\t\twidth: 100%;\n+\t}\n+\n \t.search-container > div {\n \t\twidth: calc(100% - 32px);\n \t}\n@@ -1749,7 +1779,8 @@ details.undocumented[open] > summary::before {\n \t.search-results .result-name, .search-results div.desc, .search-results .result-description {\n \t\twidth: 100%;\n \t}\n-\t.search-results div.desc, .search-results .result-description {\n+\t/* Display second row of staggered layouts */\n+\t.search-results div.desc, .search-results .result-description, item-right {\n \t\tpadding-left: 2em;\n \t}\n }"}, {"sha": "bc30e45556a89761fa57c51a77bdb3037c3f9abe", "filename": "src/test/rustdoc/doc-cfg.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs?ref=6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "patch": "@@ -12,7 +12,7 @@ pub struct Portable;\n // @has doc_cfg/unix_only/index.html \\\n //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n //  'This is supported on Unix only.'\n-// @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\AARM\\Z'\n+// @matches - '//*[@class=\"docblock-short\"]//*[@class=\"stab portability\"]' '\\AARM\\Z'\n // @count - '//*[@class=\"stab portability\"]' 2\n #[doc(cfg(unix))]\n pub mod unix_only {\n@@ -42,7 +42,7 @@ pub mod unix_only {\n // @has doc_cfg/wasi_only/index.html \\\n //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n //  'This is supported on WASI only.'\n-// @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\AWebAssembly\\Z'\n+// @matches - '//*[@class=\"docblock-short\"]//*[@class=\"stab portability\"]' '\\AWebAssembly\\Z'\n // @count - '//*[@class=\"stab portability\"]' 2\n #[doc(cfg(target_os = \"wasi\"))]\n pub mod wasi_only {\n@@ -74,7 +74,7 @@ pub mod wasi_only {\n \n // the portability header is different on the module view versus the full view\n // @has doc_cfg/index.html\n-// @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\Aavx\\Z'\n+// @matches - '//*[@class=\"docblock-short\"]//*[@class=\"stab portability\"]' '\\Aavx\\Z'\n \n // @has doc_cfg/fn.uses_target_feature.html\n // @has - '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\"}, {"sha": "30bb6b0fc74ed1da9722405473db9953201cb5f8", "filename": "src/test/rustdoc/duplicate-cfg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs?ref=6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "patch": "@@ -2,8 +2,8 @@\n #![feature(doc_cfg)]\n \n // @has 'foo/index.html'\n-// @matches '-' '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '^sync$'\n-// @has '-' '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]/@title' 'This is supported on crate feature `sync` only'\n+// @matches '-' '//*[@class=\"docblock-short\"]//*[@class=\"stab portability\"]' '^sync$'\n+// @has '-' '//*[@class=\"docblock-short\"]//*[@class=\"stab portability\"]/@title' 'This is supported on crate feature `sync` only'\n \n // @has 'foo/struct.Foo.html'\n // @has '-' '//*[@class=\"stab portability\"]' 'sync'"}, {"sha": "62a51a2335064558ab6094d9f508538d685f52f3", "filename": "src/test/rustdoc/issue-55364.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fissue-55364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fissue-55364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-55364.rs?ref=6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "patch": "@@ -29,8 +29,8 @@ pub mod subone {\n // @has - '//section[@id=\"main\"]/details/div[@class=\"docblock\"]//a[@href=\"../fn.foo.html\"]' 'foo'\n // @has - '//section[@id=\"main\"]/details/div[@class=\"docblock\"]//a[@href=\"../fn.bar.html\"]' 'bar'\n // Though there should be such links later\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td/a[@class=\"fn\"][@href=\"fn.foo.html\"]' 'foo'\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td/a[@class=\"fn\"][@href=\"fn.bar.html\"]' 'bar'\n+// @has - '//section[@id=\"main\"]/item-table//item-left[@class=\"module-item\"]/a[@class=\"fn\"][@href=\"fn.foo.html\"]' 'foo'\n+// @has - '//section[@id=\"main\"]/item-table//item-left[@class=\"module-item\"]/a[@class=\"fn\"][@href=\"fn.bar.html\"]' 'bar'\n /// See either [foo] or [bar].\n pub mod subtwo {\n \n@@ -68,8 +68,8 @@ pub mod subthree {\n // Next we go *deeper* - In order to ensure it's not just \"this or parent\"\n // we test `crate::` and a `super::super::...` chain\n // @has issue_55364/subfour/subfive/subsix/subseven/subeight/index.html\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td[@class=\"docblock-short\"]//a[@href=\"../../../../../subone/fn.foo.html\"]' 'other foo'\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td[@class=\"docblock-short\"]//a[@href=\"../../../../../subtwo/fn.bar.html\"]' 'other bar'\n+// @has - '//section[@id=\"main\"]/item-table//item-right[@class=\"docblock-short\"]//a[@href=\"../../../../../subone/fn.foo.html\"]' 'other foo'\n+// @has - '//section[@id=\"main\"]/item-table//item-right[@class=\"docblock-short\"]//a[@href=\"../../../../../subtwo/fn.bar.html\"]' 'other bar'\n pub mod subfour {\n     pub mod subfive {\n         pub mod subsix {"}, {"sha": "583b49698c4e61db85f6d07eac2714207cfdb4b6", "filename": "src/test/rustdoc/reexport-check.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Freexport-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Freexport-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexport-check.rs?ref=6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "patch": "@@ -4,15 +4,15 @@\n extern crate reexport_check;\n \n // @!has 'foo/index.html' '//code' 'pub use self::i32;'\n-// @has 'foo/index.html' '//tr[@class=\"deprecated module-item\"]' 'i32'\n+// @has 'foo/index.html' '//item-left[@class=\"deprecated module-item\"]' 'i32'\n // @has 'foo/i32/index.html'\n #[allow(deprecated, deprecated_in_future)]\n pub use std::i32;\n // @!has 'foo/index.html' '//code' 'pub use self::string::String;'\n-// @has 'foo/index.html' '//tr[@class=\"module-item\"]' 'String'\n+// @has 'foo/index.html' '//item-left[@class=\"module-item\"]' 'String'\n pub use std::string::String;\n \n-// @has 'foo/index.html' '//td[@class=\"docblock-short\"]' 'Docs in original'\n+// @has 'foo/index.html' '//item-right[@class=\"docblock-short\"]' 'Docs in original'\n // this is a no-op, but shows what happens if there's an attribute that isn't a doc-comment\n #[doc(inline)]\n pub use reexport_check::S;"}, {"sha": "9e792e181cdae089f8e25ae965c01bc49c0f8c8e", "filename": "src/test/rustdoc/short-docblock-codeblock.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fshort-docblock-codeblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6020c79ddeafe8d9760b27c14c39da81bac9b4a6/src%2Ftest%2Frustdoc%2Fshort-docblock-codeblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshort-docblock-codeblock.rs?ref=6020c79ddeafe8d9760b27c14c39da81bac9b4a6", "patch": "@@ -1,8 +1,8 @@\n #![crate_name = \"foo\"]\n \n-// @has foo/index.html '//*[@class=\"module-item\"]//td[@class=\"docblock-short\"]' \"\"\n-// @!has foo/index.html '//*[@id=\"module-item\"]//td[@class=\"docblock-short\"]' \"Some text.\"\n-// @!has foo/index.html '//*[@id=\"module-item\"]//td[@class=\"docblock-short\"]' \"let x = 12;\"\n+// @has foo/index.html '//*[@class=\"module-item\"]//following-sibling::item-right[@class=\"docblock-short\"]' \"\"\n+// @!has foo/index.html '//*[@id=\"module-item\"]//following-sibling::item-right[@class=\"docblock-short\"]' \"Some text.\"\n+// @!has foo/index.html '//*[@id=\"module-item\"]//following-sibling::item-right[@class=\"docblock-short\"]' \"let x = 12;\"\n \n /// ```\n /// let x = 12;"}]}