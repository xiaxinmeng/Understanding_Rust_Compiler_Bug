{"sha": "db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMGQwZThjNDM1Zjk2YmQzNjE4NGM3NmU4YmMwMWVjYmNiYzRlYTM=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-25T21:58:10Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-26T22:08:35Z"}, "message": "Add additional semicolon test", "tree": {"sha": "52cd8d206bcdf081721d9e197aee0ef17445c311", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52cd8d206bcdf081721d9e197aee0ef17445c311"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl/AJ2MACgkQtAh+UQ6Y\nsWQldg/+KWmjzIoHopQ/+Rar49t0ltESEGvkcha7J0x/Uo41Rn0Ay1HUzcHmKmWJ\nF/Wm46mMzMMIcXU0FuSaId7uWGk4ndj7f8w03IY78Rk1D7qOhT8ViGBBm7bTtrm7\nRhUad84ltkp9i++Rgz12vusGln+1n9u8n3Ptl1GE0ID8vj8hFHH+G+jFkRdXUxYX\nwzQB0Jc/xzUzaFLjwawtwFe238R/DJ0bXaQjfNLVjSXGAkQ/VZcl/RReYe/PIHYK\n4aG7ZVgsV0o1e+lKDD1DcYalMeDT50WLz+B5xqulm6cmR4CUqYHuqR/99ItNisps\noThn1uiYlovuGt5Jcgo/AfNLuwpW63mY/Q07gz/mu4pF8YOIoQ2efRHAY/SfYkh7\nwKoIBUsl4RZ1FgyR6+4jtKG+rYLeYDqJxVNoFefmti/r1XVaZ4n53ad8yyykkT2G\nZ0rR4QN1i/6NmOYHltVGwXP2rrzyTvEM9QF4tHoyTt5fUJCt7Yg3rUvil4fD5lIA\npHVnEqYpXWKsaihbf2nlQbkniISLoHVnlNhvu+zOyG2dWbSzqNNDuFQl1DZdaYiY\nzaBs63tudcElDgZbRH7nkDzgqR1Kqdq2QrihPOL1ZWXUPKay+if7hlsChVNs1n+X\n25uLScNG/RVi3yPQMp94QCyo6vSjFs6fsMZGppB1tD8fUdSszi4=\n=eb0O\n-----END PGP SIGNATURE-----", "payload": "tree 52cd8d206bcdf081721d9e197aee0ef17445c311\nparent 758834d3e2b2589f73b62df386780c8096ed7ae1\nauthor Aaron Hill <aa1ronham@gmail.com> 1606341490 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1606428515 -0500\n\nAdd additional semicolon test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "html_url": "https://github.com/rust-lang/rust/commit/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758834d3e2b2589f73b62df386780c8096ed7ae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/758834d3e2b2589f73b62df386780c8096ed7ae1", "html_url": "https://github.com/rust-lang/rust/commit/758834d3e2b2589f73b62df386780c8096ed7ae1"}], "stats": {"total": 234, "additions": 126, "deletions": 108}, "files": [{"sha": "9e82ccd9bed86db518e51fcc22ce01f9f9ec714a", "filename": "src/test/ui/proc-macro/allowed-attr-stmt-expr.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fallowed-attr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fallowed-attr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fallowed-attr-stmt-expr.rs?ref=db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "patch": "@@ -26,8 +26,9 @@ fn print_str(string: &'static str) {\n macro_rules! make_stmt {\n     ($stmt:stmt) => {\n         #[print_attr]\n-        #[allow(unused)]\n-        $stmt\n+        #[rustc_dummy]\n+        $stmt; // This semicolon is *not* passed to the macro,\n+               // since `$stmt` is already a statement.\n     }\n }\n \n@@ -37,6 +38,10 @@ macro_rules! second_make_stmt {\n     }\n }\n \n+// The macro will see a semicolon here\n+#[print_attr]\n+struct ItemWithSemi;\n+\n \n fn main() {\n     make_stmt!(struct Foo {});\n@@ -56,6 +61,12 @@ fn main() {\n     #[rustc_dummy]\n     struct Other {};\n \n+    // The macro also sees a semicolon,\n+    // for consistency with the `ItemWithSemi` case above.\n+    #[print_attr]\n+    #[rustc_dummy]\n+    struct NonBracedStruct;\n+\n     #[expect_expr]\n     print_str(\"string\")\n }"}, {"sha": "be14e368c046da7b2d2c1f804e878ab70f312321", "filename": "src/test/ui/proc-macro/allowed-attr-stmt-expr.stdout", "status": "modified", "additions": 104, "deletions": 77, "changes": 181, "blob_url": "https://github.com/rust-lang/rust/blob/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fallowed-attr-stmt-expr.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fallowed-attr-stmt-expr.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fallowed-attr-stmt-expr.stdout?ref=db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "patch": "@@ -1,111 +1,117 @@\n-PRINT-ATTR INPUT (DISPLAY): #[allow(unused)] struct Foo { }\n+PRINT-ATTR INPUT (DISPLAY): struct ItemWithSemi ;\n+PRINT-ATTR INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"struct\",\n+        span: $DIR/allowed-attr-stmt-expr.rs:43:1: 43:7 (#0),\n+    },\n+    Ident {\n+        ident: \"ItemWithSemi\",\n+        span: $DIR/allowed-attr-stmt-expr.rs:43:8: 43:20 (#0),\n+    },\n+    Punct {\n+        ch: ';',\n+        spacing: Alone,\n+        span: $DIR/allowed-attr-stmt-expr.rs:43:20: 43:21 (#0),\n+    },\n+]\n+PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] struct Foo { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:29:9: 29:10 (#12),\n+        span: $DIR/allowed-attr-stmt-expr.rs:29:9: 29:10 (#15),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n-                ident: \"allow\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:29:11: 29:16 (#12),\n-            },\n-            Group {\n-                delimiter: Parenthesis,\n-                stream: TokenStream [\n-                    Ident {\n-                        ident: \"unused\",\n-                        span: $DIR/allowed-attr-stmt-expr.rs:29:17: 29:23 (#12),\n-                    },\n-                ],\n-                span: $DIR/allowed-attr-stmt-expr.rs:29:16: 29:24 (#12),\n+                ident: \"rustc_dummy\",\n+                span: $DIR/allowed-attr-stmt-expr.rs:29:11: 29:22 (#15),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:29:10: 29:25 (#12),\n+        span: $DIR/allowed-attr-stmt-expr.rs:29:10: 29:23 (#15),\n     },\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:42:16: 42:22 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:47:16: 47:22 (#0),\n     },\n     Ident {\n         ident: \"Foo\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:42:23: 42:26 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:47:23: 47:26 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/allowed-attr-stmt-expr.rs:42:27: 42:29 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:47:27: 47:29 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): #[expect_let] let string = \"Hello, world!\" ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:45:5: 45:6 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:50:5: 50:6 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"expect_let\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:45:7: 45:17 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:50:7: 50:17 (#0),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:45:6: 45:18 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:50:6: 50:18 (#0),\n     },\n     Ident {\n         ident: \"let\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:46:5: 46:8 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:51:5: 51:8 (#0),\n     },\n     Ident {\n         ident: \"string\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:46:9: 46:15 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:51:9: 51:15 (#0),\n     },\n     Punct {\n         ch: '=',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:46:16: 46:17 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:51:16: 51:17 (#0),\n     },\n     Literal {\n         kind: Str,\n         symbol: \"Hello, world!\",\n         suffix: None,\n-        span: $DIR/allowed-attr-stmt-expr.rs:46:18: 46:33 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:51:18: 51:33 (#0),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:46:33: 46:34 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:51:33: 51:34 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): #[expect_print_stmt] println ! (\"{}\", string) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:49:5: 49:6 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:54:5: 54:6 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"expect_print_stmt\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:49:7: 49:24 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:54:7: 54:24 (#0),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:49:6: 49:25 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:54:6: 54:25 (#0),\n     },\n     Ident {\n         ident: \"println\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:50:5: 50:12 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:55:5: 55:12 (#0),\n     },\n     Punct {\n         ch: '!',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:50:12: 50:13 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:55:12: 55:13 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n@@ -114,181 +120,202 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                 kind: Str,\n                 symbol: \"{}\",\n                 suffix: None,\n-                span: $DIR/allowed-attr-stmt-expr.rs:50:14: 50:18 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:55:14: 55:18 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/allowed-attr-stmt-expr.rs:50:18: 50:19 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:55:18: 55:19 (#0),\n             },\n             Ident {\n                 ident: \"string\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:50:20: 50:26 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:55:20: 55:26 (#0),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:50:13: 50:27 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:55:13: 55:27 (#0),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:50:27: 50:28 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:55:27: 55:28 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): second_make_stmt ! (#[allow(dead_code)] struct Bar { }) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"second_make_stmt\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:5: 53:21 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:5: 58:21 (#0),\n     },\n     Punct {\n         ch: '!',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:21: 53:22 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:21: 58:22 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Alone,\n-                span: $DIR/allowed-attr-stmt-expr.rs:53:23: 53:24 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:58:23: 58:24 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"allow\",\n-                        span: $DIR/allowed-attr-stmt-expr.rs:53:25: 53:30 (#0),\n+                        span: $DIR/allowed-attr-stmt-expr.rs:58:25: 58:30 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"dead_code\",\n-                                span: $DIR/allowed-attr-stmt-expr.rs:53:31: 53:40 (#0),\n+                                span: $DIR/allowed-attr-stmt-expr.rs:58:31: 58:40 (#0),\n                             },\n                         ],\n-                        span: $DIR/allowed-attr-stmt-expr.rs:53:30: 53:41 (#0),\n+                        span: $DIR/allowed-attr-stmt-expr.rs:58:30: 58:41 (#0),\n                     },\n                 ],\n-                span: $DIR/allowed-attr-stmt-expr.rs:53:24: 53:42 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:58:24: 58:42 (#0),\n             },\n             Ident {\n                 ident: \"struct\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:53:43: 53:49 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:58:43: 58:49 (#0),\n             },\n             Ident {\n                 ident: \"Bar\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:53:50: 53:53 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:58:50: 58:53 (#0),\n             },\n             Group {\n                 delimiter: Brace,\n                 stream: TokenStream [],\n-                span: $DIR/allowed-attr-stmt-expr.rs:53:54: 53:56 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:58:54: 58:56 (#0),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:22: 53:57 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:22: 58:57 (#0),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:57: 53:58 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:57: 58:58 (#0),\n     },\n ]\n-PRINT-ATTR INPUT (DISPLAY): #[allow(unused)] #[allow(dead_code)] struct Bar { }\n+PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] #[allow(dead_code)] struct Bar { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:29:9: 29:10 (#34),\n+        span: $DIR/allowed-attr-stmt-expr.rs:29:9: 29:10 (#37),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n-                ident: \"allow\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:29:11: 29:16 (#34),\n-            },\n-            Group {\n-                delimiter: Parenthesis,\n-                stream: TokenStream [\n-                    Ident {\n-                        ident: \"unused\",\n-                        span: $DIR/allowed-attr-stmt-expr.rs:29:17: 29:23 (#34),\n-                    },\n-                ],\n-                span: $DIR/allowed-attr-stmt-expr.rs:29:16: 29:24 (#34),\n+                ident: \"rustc_dummy\",\n+                span: $DIR/allowed-attr-stmt-expr.rs:29:11: 29:22 (#37),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:29:10: 29:25 (#34),\n+        span: $DIR/allowed-attr-stmt-expr.rs:29:10: 29:23 (#37),\n     },\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:23: 53:24 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:23: 58:24 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"allow\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:53:25: 53:30 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:58:25: 58:30 (#0),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"dead_code\",\n-                        span: $DIR/allowed-attr-stmt-expr.rs:53:31: 53:40 (#0),\n+                        span: $DIR/allowed-attr-stmt-expr.rs:58:31: 58:40 (#0),\n                     },\n                 ],\n-                span: $DIR/allowed-attr-stmt-expr.rs:53:30: 53:41 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:58:30: 58:41 (#0),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:24: 53:42 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:24: 58:42 (#0),\n     },\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:43: 53:49 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:43: 58:49 (#0),\n     },\n     Ident {\n         ident: \"Bar\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:50: 53:53 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:50: 58:53 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/allowed-attr-stmt-expr.rs:53:54: 53:56 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:58:54: 58:56 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] struct Other { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/allowed-attr-stmt-expr.rs:56:5: 56:6 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:61:5: 61:6 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"rustc_dummy\",\n-                span: $DIR/allowed-attr-stmt-expr.rs:56:7: 56:18 (#0),\n+                span: $DIR/allowed-attr-stmt-expr.rs:61:7: 61:18 (#0),\n             },\n         ],\n-        span: $DIR/allowed-attr-stmt-expr.rs:56:6: 56:19 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:61:6: 61:19 (#0),\n     },\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:57:5: 57:11 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:62:5: 62:11 (#0),\n     },\n     Ident {\n         ident: \"Other\",\n-        span: $DIR/allowed-attr-stmt-expr.rs:57:12: 57:17 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:62:12: 62:17 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/allowed-attr-stmt-expr.rs:57:18: 57:20 (#0),\n+        span: $DIR/allowed-attr-stmt-expr.rs:62:18: 62:20 (#0),\n+    },\n+]\n+PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] struct NonBracedStruct ;\n+PRINT-ATTR INPUT (DEBUG): TokenStream [\n+    Punct {\n+        ch: '#',\n+        spacing: Alone,\n+        span: $DIR/allowed-attr-stmt-expr.rs:67:5: 67:6 (#0),\n+    },\n+    Group {\n+        delimiter: Bracket,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"rustc_dummy\",\n+                span: $DIR/allowed-attr-stmt-expr.rs:67:7: 67:18 (#0),\n+            },\n+        ],\n+        span: $DIR/allowed-attr-stmt-expr.rs:67:6: 67:19 (#0),\n+    },\n+    Ident {\n+        ident: \"struct\",\n+        span: $DIR/allowed-attr-stmt-expr.rs:68:5: 68:11 (#0),\n+    },\n+    Ident {\n+        ident: \"NonBracedStruct\",\n+        span: $DIR/allowed-attr-stmt-expr.rs:68:12: 68:27 (#0),\n+    },\n+    Punct {\n+        ch: ';',\n+        spacing: Alone,\n+        span: $DIR/allowed-attr-stmt-expr.rs:68:27: 68:28 (#0),\n     },\n ]"}, {"sha": "4f18ce9bf486d86bccc7c630f3d59eb5b8e22808", "filename": "src/test/ui/proc-macro/attr-stmt-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs?ref=db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "patch": "@@ -25,7 +25,7 @@ fn print_str(string: &'static str) {\n macro_rules! make_stmt {\n     ($stmt:stmt) => {\n         #[print_attr]\n-        #[allow(unused)]\n+        #[rustc_dummy]\n         $stmt\n     }\n }"}, {"sha": "ed8af761a5571af9b00bbbac87b7b7b97d19b3b4", "filename": "src/test/ui/proc-macro/attr-stmt-expr.stdout", "status": "modified", "additions": 8, "deletions": 28, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stdout?ref=db0d0e8c435f96bd36184c76e8bc01ecbcbc4ea3", "patch": "@@ -1,4 +1,4 @@\n-PRINT-ATTR INPUT (DISPLAY): #[allow(unused)] struct Foo { }\n+PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] struct Foo { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n@@ -9,21 +9,11 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n-                ident: \"allow\",\n-                span: $DIR/attr-stmt-expr.rs:28:11: 28:16 (#12),\n-            },\n-            Group {\n-                delimiter: Parenthesis,\n-                stream: TokenStream [\n-                    Ident {\n-                        ident: \"unused\",\n-                        span: $DIR/attr-stmt-expr.rs:28:17: 28:23 (#12),\n-                    },\n-                ],\n-                span: $DIR/attr-stmt-expr.rs:28:16: 28:24 (#12),\n+                ident: \"rustc_dummy\",\n+                span: $DIR/attr-stmt-expr.rs:28:11: 28:22 (#12),\n             },\n         ],\n-        span: $DIR/attr-stmt-expr.rs:28:10: 28:25 (#12),\n+        span: $DIR/attr-stmt-expr.rs:28:10: 28:23 (#12),\n     },\n     Ident {\n         ident: \"struct\",\n@@ -195,7 +185,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n         span: $DIR/attr-stmt-expr.rs:51:57: 51:58 (#0),\n     },\n ]\n-PRINT-ATTR INPUT (DISPLAY): #[allow(unused)] #[allow(dead_code)] struct Bar { }\n+PRINT-ATTR INPUT (DISPLAY): #[rustc_dummy] #[allow(dead_code)] struct Bar { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n@@ -206,21 +196,11 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n-                ident: \"allow\",\n-                span: $DIR/attr-stmt-expr.rs:28:11: 28:16 (#34),\n-            },\n-            Group {\n-                delimiter: Parenthesis,\n-                stream: TokenStream [\n-                    Ident {\n-                        ident: \"unused\",\n-                        span: $DIR/attr-stmt-expr.rs:28:17: 28:23 (#34),\n-                    },\n-                ],\n-                span: $DIR/attr-stmt-expr.rs:28:16: 28:24 (#34),\n+                ident: \"rustc_dummy\",\n+                span: $DIR/attr-stmt-expr.rs:28:11: 28:22 (#34),\n             },\n         ],\n-        span: $DIR/attr-stmt-expr.rs:28:10: 28:25 (#34),\n+        span: $DIR/attr-stmt-expr.rs:28:10: 28:23 (#34),\n     },\n     Punct {\n         ch: '#',"}]}