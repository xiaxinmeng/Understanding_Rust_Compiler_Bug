{"sha": "28c602a94ebe15b45cfda59a4681d6916901aa40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YzYwMmE5NGViZTE1YjQ1Y2ZkYTU5YTQ2ODFkNjkxNjkwMWFhNDA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2019-03-25T22:16:40Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2019-03-25T22:29:49Z"}, "message": "Utilize `?` instead of `return None`.", "tree": {"sha": "ebf90a1c6f7aa33d6749d805dafa12a725fd5997", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebf90a1c6f7aa33d6749d805dafa12a725fd5997"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28c602a94ebe15b45cfda59a4681d6916901aa40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28c602a94ebe15b45cfda59a4681d6916901aa40", "html_url": "https://github.com/rust-lang/rust/commit/28c602a94ebe15b45cfda59a4681d6916901aa40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28c602a94ebe15b45cfda59a4681d6916901aa40/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c27fb19ba15a2e45485e601a79914c6280196b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c27fb19ba15a2e45485e601a79914c6280196b0", "html_url": "https://github.com/rust-lang/rust/commit/4c27fb19ba15a2e45485e601a79914c6280196b0"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "c9a9375ec590e7032dd42b80f1d5db602e3152f8", "filename": "src/libcore/num/flt2dec/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c602a94ebe15b45cfda59a4681d6916901aa40/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c602a94ebe15b45cfda59a4681d6916901aa40/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs?ref=28c602a94ebe15b45cfda59a4681d6916901aa40", "patch": "@@ -239,10 +239,8 @@ impl<'a> Formatted<'a> {\n \n         let mut written = self.sign.len();\n         for part in self.parts {\n-            match part.write(&mut out[written..]) {\n-                Some(len) => { written += len; }\n-                None => { return None; }\n-            }\n+            let len = part.write(&mut out[written..])?;\n+            written += len;\n         }\n         Some(written)\n     }"}, {"sha": "90f62a4d132c7c1731a9c93d751090cda5ff70f7", "filename": "src/librustc/traits/util.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c602a94ebe15b45cfda59a4681d6916901aa40/src%2Flibrustc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c602a94ebe15b45cfda59a4681d6916901aa40/src%2Flibrustc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Futil.rs?ref=28c602a94ebe15b45cfda59a4681d6916901aa40", "patch": "@@ -292,11 +292,7 @@ impl<'cx, 'gcx, 'tcx> Iterator for SupertraitDefIds<'cx, 'gcx, 'tcx> {\n     type Item = DefId;\n \n     fn next(&mut self) -> Option<DefId> {\n-        let def_id = match self.stack.pop() {\n-            Some(def_id) => def_id,\n-            None => { return None; }\n-        };\n-\n+        let def_id = self.stack.pop()?;\n         let predicates = self.tcx.super_predicates_of(def_id);\n         let visited = &mut self.visited;\n         self.stack.extend("}, {"sha": "b11bd9c2408bf75506a5e25e4105ce25cbf42b24", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/28c602a94ebe15b45cfda59a4681d6916901aa40/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c602a94ebe15b45cfda59a4681d6916901aa40/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=28c602a94ebe15b45cfda59a4681d6916901aa40", "patch": "@@ -5318,10 +5318,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n     ) -> Option<Span> {\n         // Be helpful when the user wrote `{... expr;}` and\n         // taking the `;` off is enough to fix the error.\n-        let last_stmt = match blk.stmts.last() {\n-            Some(s) => s,\n-            None => return None,\n-        };\n+        let last_stmt = blk.stmts.last()?;\n         let last_expr = match last_stmt.node {\n             hir::StmtKind::Semi(ref e) => e,\n             _ => return None,"}]}