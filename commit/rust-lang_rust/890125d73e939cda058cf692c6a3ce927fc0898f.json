{"sha": "890125d73e939cda058cf692c6a3ce927fc0898f", "node_id": "C_kwDOAAsO6NoAKDg5MDEyNWQ3M2U5MzljZGEwNThjZjY5MmM2YTNjZTkyN2ZjMDg5OGY", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-04-13T21:32:17Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-04-18T23:53:50Z"}, "message": "Add a comment explaining the `(())` idiom for empty structs.", "tree": {"sha": "f4e96a5ba3c8fe90e6be7101262a448922351dac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4e96a5ba3c8fe90e6be7101262a448922351dac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/890125d73e939cda058cf692c6a3ce927fc0898f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/890125d73e939cda058cf692c6a3ce927fc0898f", "html_url": "https://github.com/rust-lang/rust/commit/890125d73e939cda058cf692c6a3ce927fc0898f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/890125d73e939cda058cf692c6a3ce927fc0898f/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f934043c179eb2d9c1dda4e7a70284e0d9354c82", "url": "https://api.github.com/repos/rust-lang/rust/commits/f934043c179eb2d9c1dda4e7a70284e0d9354c82", "html_url": "https://github.com/rust-lang/rust/commit/f934043c179eb2d9c1dda4e7a70284e0d9354c82"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "e4de52612ef6232a8b0f668bb960311214d64556", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890125d73e939cda058cf692c6a3ce927fc0898f/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890125d73e939cda058cf692c6a3ce927fc0898f/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=890125d73e939cda058cf692c6a3ce927fc0898f", "patch": "@@ -220,6 +220,7 @@ impl TryFrom<HandleOrInvalid> for OwnedHandle {\n \n /// This is the error type used by [`HandleOrNull`] when attempting to convert\n /// into a handle, to indicate that the value is null.\n+// The empty field prevents constructing this, and allows extending it in the future.\n #[unstable(feature = \"io_safety\", issue = \"87074\")]\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct NullHandleError(());\n@@ -237,6 +238,7 @@ impl crate::error::Error for NullHandleError {}\n /// This is the error type used by [`HandleOrInvalid`] when attempting to\n /// convert into a handle, to indicate that the value is\n /// `INVALID_HANDLE_VALUE`.\n+// The empty field prevents constructing this, and allows extending it in the future.\n #[unstable(feature = \"io_safety\", issue = \"87074\")]\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct InvalidHandleError(());"}]}