{"sha": "b2605d809d613fe8bb84f41fccbda95038e83f25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNjA1ZDgwOWQ2MTNmZThiYjg0ZjQxZmNjYmRhOTUwMzhlODNmMjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-21T09:55:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-21T09:55:23Z"}, "message": "Auto merge of #1241 - RalfJung:dont-panic, r=RalfJung\n\nwhitelist platforms where panicking should work\n\n@CAD97 [proposed](https://github.com/rust-lang/miri/issues/1059#issuecomment-601217992) trying to get a better error for failed panics on Windows.\n\nCould you test if this works for you?", "tree": {"sha": "52d8ba9c5f03ce54d79b64f1b2b3926b243133b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52d8ba9c5f03ce54d79b64f1b2b3926b243133b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2605d809d613fe8bb84f41fccbda95038e83f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2605d809d613fe8bb84f41fccbda95038e83f25", "html_url": "https://github.com/rust-lang/rust/commit/b2605d809d613fe8bb84f41fccbda95038e83f25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2605d809d613fe8bb84f41fccbda95038e83f25/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee71b2e140583cbb5afb7551582bab36f04035cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee71b2e140583cbb5afb7551582bab36f04035cc", "html_url": "https://github.com/rust-lang/rust/commit/ee71b2e140583cbb5afb7551582bab36f04035cc"}, {"sha": "5c09047411d3d1ba3a99893db64770864289d3a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c09047411d3d1ba3a99893db64770864289d3a5", "html_url": "https://github.com/rust-lang/rust/commit/5c09047411d3d1ba3a99893db64770864289d3a5"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "60da1f1e6cc6dfde50a63e314b1e45b88fc92a63", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -132,6 +132,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 // This matches calls to the foreign item `panic_impl`.\n                 // The implementation is provided by the function with the `#[panic_handler]` attribute.\n                 \"panic_impl\" => {\n+                    this.check_panic_supported()?;\n                     let panic_impl_id = this.tcx.lang_items().panic_impl().unwrap();\n                     let panic_impl_instance = ty::Instance::mono(*this.tcx, panic_impl_id);\n                     return Ok(Some(&*this.load_mir(panic_impl_instance.def, None)?));"}, {"sha": "5b5a11b86b49f27bccabf5e62474be8581cb7bab", "filename": "src/shims/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -42,6 +42,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             return this.emulate_foreign_item(instance.def_id(), args, ret, unwind);\n         }\n \n+        // Better error message for panics on Windows.\n+        let def_id = instance.def_id();\n+        if Some(def_id) == this.tcx.lang_items().begin_panic_fn() ||\n+            Some(def_id) == this.tcx.lang_items().panic_impl()\n+        {\n+            this.check_panic_supported()?;\n+        }\n+\n         // Otherwise, load the MIR.\n         Ok(Some(&*this.load_mir(instance.def, None)?))\n     }"}, {"sha": "8dded8bf4037b169ca2e1b2a82d1fdc3497e10d5", "filename": "src/shims/panic.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -32,6 +32,14 @@ pub struct CatchUnwindData<'tcx> {\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n+    /// Check if panicking is supported on this platform, and give a good error otherwise.\n+    fn check_panic_supported(&self) -> InterpResult<'tcx> {\n+        match self.eval_context_ref().tcx.sess.target.target.target_os.as_str() {\n+            \"linux\" | \"macos\" => Ok(()),\n+            _ => throw_unsup_format!(\"panicking is not supported on this platform\"),\n+        }\n+    }\n+\n     /// Handles the special `miri_start_panic` intrinsic, which is called\n     /// by libpanic_unwind to delegate the actual unwinding process to Miri.\n     fn handle_miri_start_panic("}, {"sha": "af1a155435fb6de07f973a8b255526c69b85c460", "filename": "tests/compile-fail/abort-terminator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fabort-terminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fabort-terminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fabort-terminator.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -1,4 +1,5 @@\n // error-pattern: the evaluated program aborted\n+// ignore-windows (panics dont work on Windows)\n #![feature(unwind_attributes)]\n \n #[unwind(aborts)]"}, {"sha": "3085d0b006570ecbabe23b8225fb97d8cb225236", "filename": "tests/compile-fail/panic/double_panic.rs", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -1,4 +1,6 @@\n- // error-pattern: the evaluated program aborted\n+// error-pattern: the evaluated program aborted\n+// ignore-windows (panics dont work on Windows)\n+\n struct Foo;\n impl Drop for Foo {\n     fn drop(&mut self) {", "previous_filename": "tests/compile-fail/double_panic.rs"}, {"sha": "1d6faf1e751d9e430d02c69c46b1b31d020c12c4", "filename": "tests/compile-fail/panic/windows1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fwindows1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fwindows1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fwindows1.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -0,0 +1,9 @@\n+// ignore-linux\n+// ignore-macos\n+\n+// Test that panics on Windows give a reasonable error message.\n+\n+// error-pattern: panicking is not supported on this platform\n+fn main() {\n+    core::panic!(\"this is {}\", \"Windows\");\n+}"}, {"sha": "023088a692efaf2a278e023d2277c0accba753eb", "filename": "tests/compile-fail/panic/windows2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fwindows2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fwindows2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fwindows2.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -0,0 +1,9 @@\n+// ignore-linux\n+// ignore-macos\n+\n+// Test that panics on Windows give a reasonable error message.\n+\n+// error-pattern: panicking is not supported on this platform\n+fn main() {\n+    std::panic!(\"this is Windows\");\n+}"}, {"sha": "b96022fc4ef5e6af105e066f6f4326ae77b477ea", "filename": "tests/compile-fail/panic/windows3.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fwindows3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2605d809d613fe8bb84f41fccbda95038e83f25/tests%2Fcompile-fail%2Fpanic%2Fwindows3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fwindows3.rs?ref=b2605d809d613fe8bb84f41fccbda95038e83f25", "patch": "@@ -0,0 +1,10 @@\n+// ignore-linux\n+// ignore-macos\n+\n+// Test that panics on Windows give a reasonable error message.\n+\n+// error-pattern: panicking is not supported on this platform\n+#[allow(unconditional_panic)]\n+fn main() {\n+    let _val = 1/0;\n+}"}]}