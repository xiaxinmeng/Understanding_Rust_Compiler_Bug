{"sha": "6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhM2Q1NWFiZjAxMDE2ZDRkZTI3ZWQyMTYwYzBmY2MxYTdmMTJkYjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-28T03:51:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-28T03:51:58Z"}, "message": "Auto merge of #25840 - arielb1:ptr-compare-fixes, r=nrc\n\nFixes #25826.", "tree": {"sha": "44f871de6f7b9306e4df54d8c548a479d5aa1282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44f871de6f7b9306e4df54d8c548a479d5aa1282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "html_url": "https://github.com/rust-lang/rust/commit/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a3cffbddfa21aac6fabd2f07f86703fbf1f26a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a3cffbddfa21aac6fabd2f07f86703fbf1f26a5", "html_url": "https://github.com/rust-lang/rust/commit/1a3cffbddfa21aac6fabd2f07f86703fbf1f26a5"}, {"sha": "080311d1f9919fe877414b2e0c9e8260ae157ccf", "url": "https://api.github.com/repos/rust-lang/rust/commits/080311d1f9919fe877414b2e0c9e8260ae157ccf", "html_url": "https://github.com/rust-lang/rust/commit/080311d1f9919fe877414b2e0c9e8260ae157ccf"}], "stats": {"total": 69, "additions": 61, "deletions": 8}, "files": [{"sha": "d1e7084150eb34b450614cb036e4512bd69e986c", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "patch": "@@ -892,6 +892,8 @@ register_diagnostics! {\n     E0316, // nested quantification of lifetimes\n     E0370, // discriminant overflow\n     E0378, // method calls limited to constant inherent methods\n-    E0394  // cannot refer to other statics by value, use the address-of\n+    E0394, // cannot refer to other statics by value, use the address-of\n            // operator or a constant instead\n+    E0395, // pointer comparison in const-expr\n+    E0396  // pointer dereference in const-expr\n }"}, {"sha": "3e084f3eeb3051aea5c57abef3cc6c66fdd2a785", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "patch": "@@ -536,11 +536,32 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>,\n                           \"allocations are not allowed in {}s\", v.msg());\n             }\n         }\n-        ast::ExprUnary(ast::UnDeref, ref ptr) => {\n-            match ty::node_id_to_type(v.tcx, ptr.id).sty {\n+        ast::ExprUnary(op, ref inner) => {\n+            match ty::node_id_to_type(v.tcx, inner.id).sty {\n                 ty::ty_ptr(_) => {\n-                    // This shouldn't be allowed in constants at all.\n+                    assert!(op == ast::UnDeref);\n+\n+                    v.add_qualif(ConstQualif::NOT_CONST);\n+                    if v.mode != Mode::Var {\n+                        span_err!(v.tcx.sess, e.span, E0396,\n+                                  \"raw pointers cannot be dereferenced in {}s\", v.msg());\n+                    }\n+                }\n+                _ => {}\n+            }\n+        }\n+        ast::ExprBinary(op, ref lhs, _) => {\n+            match ty::node_id_to_type(v.tcx, lhs.id).sty {\n+                ty::ty_ptr(_) => {\n+                    assert!(op.node == ast::BiEq || op.node == ast::BiNe ||\n+                            op.node == ast::BiLe || op.node == ast::BiLt ||\n+                            op.node == ast::BiGe || op.node == ast::BiGt);\n+\n                     v.add_qualif(ConstQualif::NOT_CONST);\n+                    if v.mode != Mode::Var {\n+                        span_err!(v.tcx.sess, e.span, E0395,\n+                                  \"raw pointers cannot be compared in {}s\", v.msg());\n+                    }\n                 }\n                 _ => {}\n             }\n@@ -553,7 +574,7 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>,\n                     v.add_qualif(ConstQualif::NOT_CONST);\n                     if v.mode != Mode::Var {\n                         span_err!(v.tcx.sess, e.span, E0018,\n-                                  \"can't cast a pointer to an integer in {}s\", v.msg());\n+                                  \"raw pointers cannot be cast to integers in {}s\", v.msg());\n                     }\n                 }\n                 _ => {}\n@@ -695,8 +716,6 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>,\n         }\n \n         ast::ExprBlock(_) |\n-        ast::ExprUnary(..) |\n-        ast::ExprBinary(..) |\n         ast::ExprIndex(..) |\n         ast::ExprField(..) |\n         ast::ExprTupField(..) |"}, {"sha": "fa15f3e87c6947a4083579f9fe5d27afacf227d3", "filename": "src/test/compile-fail/const-deref-ptr.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Ftest%2Fcompile-fail%2Fconst-deref-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Ftest%2Fcompile-fail%2Fconst-deref-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-deref-ptr.rs?ref=6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that you can't dereference raw pointers in constants.\n+\n+fn main() {\n+    static C: u64 = unsafe {*(0xdeadbeef as *const u64)}; //~ ERROR E0396\n+    println!(\"{}\", C);\n+}"}, {"sha": "f5b7a0c13b7287fb26616b3df28c39b89fe7ed13", "filename": "src/test/compile-fail/issue-17458.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Ftest%2Fcompile-fail%2Fissue-17458.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Ftest%2Fcompile-fail%2Fissue-17458.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17458.rs?ref=6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n static X: usize = 0 as *const usize as usize;\n-//~^ ERROR: can't cast a pointer to an integer in statics\n+//~^ ERROR: raw pointers cannot be cast to integers in statics\n \n fn main() {\n     assert_eq!(X, 0);"}, {"sha": "00e1279d58a0eb850233acdd9967d7b975e6cb31", "filename": "src/test/compile-fail/issue-25826.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Ftest%2Fcompile-fail%2Fissue-25826.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9/src%2Ftest%2Fcompile-fail%2Fissue-25826.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-25826.rs?ref=6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn id<T>(t: T) -> T { t }\n+fn main() {\n+    const A: bool = id::<u8> as *const () < id::<u16> as *const ();\n+    //~^ ERROR raw pointers cannot be compared in constants [E0395]\n+    println!(\"{}\", A);\n+}"}]}