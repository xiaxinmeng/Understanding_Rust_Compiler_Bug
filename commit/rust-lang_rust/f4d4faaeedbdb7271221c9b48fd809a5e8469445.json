{"sha": "f4d4faaeedbdb7271221c9b48fd809a5e8469445", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZDRmYWFlZWRiZGI3MjcxMjIxYzliNDhmZDgwOWE1ZTg0Njk0NDU=", "commit": {"author": {"name": "ms2300", "email": "matt.sewall@gmail.com", "date": "2018-08-25T17:53:26Z"}, "committer": {"name": "ms2300", "email": "matt.sewall@gmail.com", "date": "2018-09-06T17:43:31Z"}, "message": "Fixing tests from anon -> opaque", "tree": {"sha": "447f78248766e0a86184b2e22d2382136b41e8a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/447f78248766e0a86184b2e22d2382136b41e8a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4d4faaeedbdb7271221c9b48fd809a5e8469445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4d4faaeedbdb7271221c9b48fd809a5e8469445", "html_url": "https://github.com/rust-lang/rust/commit/f4d4faaeedbdb7271221c9b48fd809a5e8469445", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4d4faaeedbdb7271221c9b48fd809a5e8469445/comments", "author": {"login": "ms2300", "id": 15894971, "node_id": "MDQ6VXNlcjE1ODk0OTcx", "avatar_url": "https://avatars.githubusercontent.com/u/15894971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ms2300", "html_url": "https://github.com/ms2300", "followers_url": "https://api.github.com/users/ms2300/followers", "following_url": "https://api.github.com/users/ms2300/following{/other_user}", "gists_url": "https://api.github.com/users/ms2300/gists{/gist_id}", "starred_url": "https://api.github.com/users/ms2300/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ms2300/subscriptions", "organizations_url": "https://api.github.com/users/ms2300/orgs", "repos_url": "https://api.github.com/users/ms2300/repos", "events_url": "https://api.github.com/users/ms2300/events{/privacy}", "received_events_url": "https://api.github.com/users/ms2300/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ms2300", "id": 15894971, "node_id": "MDQ6VXNlcjE1ODk0OTcx", "avatar_url": "https://avatars.githubusercontent.com/u/15894971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ms2300", "html_url": "https://github.com/ms2300", "followers_url": "https://api.github.com/users/ms2300/followers", "following_url": "https://api.github.com/users/ms2300/following{/other_user}", "gists_url": "https://api.github.com/users/ms2300/gists{/gist_id}", "starred_url": "https://api.github.com/users/ms2300/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ms2300/subscriptions", "organizations_url": "https://api.github.com/users/ms2300/orgs", "repos_url": "https://api.github.com/users/ms2300/repos", "events_url": "https://api.github.com/users/ms2300/events{/privacy}", "received_events_url": "https://api.github.com/users/ms2300/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c14360c327a2513560fd8a238bc42ded011bb51", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c14360c327a2513560fd8a238bc42ded011bb51", "html_url": "https://github.com/rust-lang/rust/commit/6c14360c327a2513560fd8a238bc42ded011bb51"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "eacc23c9c4fe22cdfa69c9e953db7793f1959f45", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -100,7 +100,7 @@ fn check_ty(\n                 span,\n                 \"mutable references in const fn are unstable\".into(),\n             )),\n-            ty::Anon(..) => return Err((span, \"`impl Trait` in const fn is unstable\".into())),\n+            ty::Opaque(..) => return Err((span, \"`impl Trait` in const fn is unstable\".into())),\n             ty::FnPtr(..) => {\n                 return Err((span, \"function pointers in const fn are unstable\".into()))\n             }"}, {"sha": "702af3d221b8300b00f3f0c3490cb63d9664341c", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -1646,21 +1646,13 @@ fn explicit_predicates_of<'a, 'tcx>(\n                 let opaque_ty = tcx.mk_opaque(def_id, substs);\n \n                 // Collect the bounds, i.e. the `A+B+'c` in `impl A+B+'c`.\n-<<<<<<< HEAD\n                 let bounds = compute_bounds(\n                     &icx,\n-                    anon_ty,\n+                    opaque_ty,\n                     bounds,\n                     SizedByDefault::Yes,\n                     tcx.def_span(def_id),\n                 );\n-=======\n-                let bounds = compute_bounds(&icx,\n-                                            opaque_ty,\n-                                            bounds,\n-                                            SizedByDefault::Yes,\n-                                            tcx.def_span(def_id));\n->>>>>>> ca386bc20a... Changing TyAnon -> TyOpaque and relevant functions\n \n                 predicates.extend(bounds.predicates(tcx, opaque_ty));\n                 &item.generics"}, {"sha": "1b481fc5a7d3174d9b0db5c25800a44d72502c9c", "filename": "src/librustc_typeck/constrained_type_params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Flibrustc_typeck%2Fconstrained_type_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Flibrustc_typeck%2Fconstrained_type_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fconstrained_type_params.rs?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -1,4 +1,4 @@\n-//n Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "471eda45dafdc950430c222e3694f0a3510b5f66", "filename": "src/test/ui/existential_types/generic_type_does_not_live_long_enough.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.nll.stderr?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/generic_type_does_not_live_long_enough.rs:16:18\n    |\n LL |     let z: i32 = x; //~ ERROR mismatched types\n-   |                  ^ expected i32, found anonymized type\n+   |                  ^ expected i32, found opaque type\n    |\n    = note: expected type `i32`\n               found type `WrongGeneric::<&{integer}>`"}, {"sha": "f1773b7c2fc8fa953197ab417877f49fcd3177e4", "filename": "src/test/ui/existential_types/generic_type_does_not_live_long_enough.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.stderr?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/generic_type_does_not_live_long_enough.rs:16:18\n    |\n LL |     let z: i32 = x; //~ ERROR mismatched types\n-   |                  ^ expected i32, found anonymized type\n+   |                  ^ expected i32, found opaque type\n    |\n    = note: expected type `i32`\n               found type `WrongGeneric::<&{integer}>`"}, {"sha": "ab937a9483c0c88d412daded809d6f4324208dee", "filename": "src/test/ui/existential_types/never_reveal_concrete_type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fnever_reveal_concrete_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fnever_reveal_concrete_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fnever_reveal_concrete_type.stderr?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/never_reveal_concrete_type.rs:24:27\n    |\n LL |     let _: &'static str = x; //~ mismatched types\n-   |                           ^ expected reference, found anonymized type\n+   |                           ^ expected reference, found opaque type\n    |\n    = note: expected type `&'static str`\n               found type `NoReveal`"}, {"sha": "3f03174a4917b988c2f26c5f53bf4553ab64e6b5", "filename": "src/test/ui/existential_types/no_revealing_outside_defining_module.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fno_revealing_outside_defining_module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fexistential_types%2Fno_revealing_outside_defining_module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fno_revealing_outside_defining_module.stderr?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/no_revealing_outside_defining_module.rs:26:19\n    |\n LL |     let _: &str = bomp(); //~ ERROR mismatched types\n-   |                   ^^^^^^ expected &str, found anonymized type\n+   |                   ^^^^^^ expected &str, found opaque type\n    |\n    = note: expected type `&str`\n               found type `Boo`\n@@ -13,7 +13,7 @@ error[E0308]: mismatched types\n LL | fn bomp() -> boo::Boo {\n    |              -------- expected `Boo` because of return type\n LL |     \"\" //~ ERROR mismatched types\n-   |     ^^ expected anonymized type, found reference\n+   |     ^^ expected opaque type, found reference\n    |\n    = note: expected type `Boo`\n               found type `&'static str`"}, {"sha": "2ce24cf789dd37d4653d2baf058087bbdf8e7064", "filename": "src/test/ui/impl-trait/equality2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fimpl-trait%2Fequality2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fimpl-trait%2Fequality2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequality2.rs?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -36,7 +36,7 @@ fn main() {\n     //~^ ERROR mismatched types\n     //~| expected type `u32`\n     //~| found type `impl Foo`\n-    //~| expected u32, found anonymized type\n+    //~| expected u32, found opaque type\n \n     let _: i32 = Leak::leak(hide(0_i32));\n     //~^ ERROR mismatched types"}, {"sha": "da51e35947a3b07562cec646fa7f5f550d4f981a", "filename": "src/test/ui/impl-trait/equality2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fimpl-trait%2Fequality2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4faaeedbdb7271221c9b48fd809a5e8469445/src%2Ftest%2Fui%2Fimpl-trait%2Fequality2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequality2.stderr?ref=f4d4faaeedbdb7271221c9b48fd809a5e8469445", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/equality2.rs:35:18\n    |\n LL |     let _: u32 = hide(0_u32);\n-   |                  ^^^^^^^^^^^ expected u32, found anonymized type\n+   |                  ^^^^^^^^^^^ expected u32, found opaque type\n    |\n    = note: expected type `u32`\n               found type `impl Foo`"}]}