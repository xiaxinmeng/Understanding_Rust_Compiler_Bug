{"sha": "d42d952afc58e2325524d3b025281838449f74a4", "node_id": "C_kwDOAAsO6NoAKGQ0MmQ5NTJhZmM1OGUyMzI1NTI0ZDNiMDI1MjgxODM4NDQ5Zjc0YTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-12T05:52:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-12T05:52:37Z"}, "message": "Rollup merge of #106676 - oli-obk:tait_test, r=dtolnay\n\nTest that we cannot use trait impl methods arguments as defining uses\n\nAddresses https://github.com/rust-lang/rust/issues/63063#issuecomment-1360053614\n\nr? `@dtolnay`", "tree": {"sha": "075b5ecb96ade43bfe2d35269bdff147513faab9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/075b5ecb96ade43bfe2d35269bdff147513faab9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d42d952afc58e2325524d3b025281838449f74a4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjv6AlCRBK7hj4Ov3rIwAAOVIIADnLGwIa7ahGLF60aaIAkD5y\nDP7Yt7r8+sEQBJV4EMVP1x30UhvmFYWRKGYPmnU7lQuSYIR9lk0BCWWGkG4FriG/\no32uqYROjzcJ6i0AXn8tlTRFVil/PouhGWpCry2rN9NBoIgXyPCpJqWmPI//xo8X\nNWJ+sdr4xT0MYgmWF0N68TGHQWB2C+yYkutngpNDsWgoYlJ8+8bhdbBxIy22bvrh\nA10qjex2TDT+97jDojxkraaRNyJHu+3a7Zn/aMJ82k3qDLxoZ470IQ/6373d2y3N\nCfwiJvPCRT4p+N+XBvY/6mo0Cr6rtMqVhejJJzB8VlnA0LlrmSbHYNaHV1h4/Cw=\n=vTVP\n-----END PGP SIGNATURE-----\n", "payload": "tree 075b5ecb96ade43bfe2d35269bdff147513faab9\nparent db8301b7f873114ab95ce27bd8e9c4ab476cb458\nparent 44a5ce6f75f03e0ef8975104ab7a8d6129adaa71\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1673502757 +0100\ncommitter GitHub <noreply@github.com> 1673502757 +0100\n\nRollup merge of #106676 - oli-obk:tait_test, r=dtolnay\n\nTest that we cannot use trait impl methods arguments as defining uses\n\nAddresses https://github.com/rust-lang/rust/issues/63063#issuecomment-1360053614\n\nr? `@dtolnay`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d42d952afc58e2325524d3b025281838449f74a4", "html_url": "https://github.com/rust-lang/rust/commit/d42d952afc58e2325524d3b025281838449f74a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d42d952afc58e2325524d3b025281838449f74a4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db8301b7f873114ab95ce27bd8e9c4ab476cb458", "url": "https://api.github.com/repos/rust-lang/rust/commits/db8301b7f873114ab95ce27bd8e9c4ab476cb458", "html_url": "https://github.com/rust-lang/rust/commit/db8301b7f873114ab95ce27bd8e9c4ab476cb458"}, {"sha": "44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "url": "https://api.github.com/repos/rust-lang/rust/commits/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "html_url": "https://github.com/rust-lang/rust/commit/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "1739ab0063fa9dfa386f1048b8c17315fb572892", "filename": "tests/ui/type-alias-impl-trait/unnameable_type.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d42d952afc58e2325524d3b025281838449f74a4/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42d952afc58e2325524d3b025281838449f74a4/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.rs?ref=d42d952afc58e2325524d3b025281838449f74a4", "patch": "@@ -0,0 +1,24 @@\n+#![feature(type_alias_impl_trait)]\n+\n+// This test ensures that unnameable types stay unnameable\n+// https://github.com/rust-lang/rust/issues/63063#issuecomment-1360053614\n+\n+// library\n+mod private {\n+    pub struct Private;\n+    pub trait Trait {\n+        fn dont_define_this(_private: Private) {}\n+    }\n+}\n+\n+use private::Trait;\n+\n+// downstream\n+type MyPrivate = impl Sized;\n+//~^ ERROR: unconstrained opaque type\n+impl Trait for u32 {\n+    fn dont_define_this(_private: MyPrivate) {}\n+    //~^ ERROR: incompatible type for trait\n+}\n+\n+fn main() {}"}, {"sha": "7dc6efc4b1b6b97c3c39de64a5f94992ea13bdac", "filename": "tests/ui/type-alias-impl-trait/unnameable_type.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d42d952afc58e2325524d3b025281838449f74a4/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d42d952afc58e2325524d3b025281838449f74a4/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.stderr?ref=d42d952afc58e2325524d3b025281838449f74a4", "patch": "@@ -0,0 +1,31 @@\n+error: unconstrained opaque type\n+  --> $DIR/unnameable_type.rs:17:18\n+   |\n+LL | type MyPrivate = impl Sized;\n+   |                  ^^^^^^^^^^\n+   |\n+   = note: `MyPrivate` must be used in combination with a concrete type within the same module\n+\n+error[E0053]: method `dont_define_this` has an incompatible type for trait\n+  --> $DIR/unnameable_type.rs:20:35\n+   |\n+LL | type MyPrivate = impl Sized;\n+   |                  ---------- the found opaque type\n+...\n+LL |     fn dont_define_this(_private: MyPrivate) {}\n+   |                                   ^^^^^^^^^\n+   |                                   |\n+   |                                   expected struct `Private`, found opaque type\n+   |                                   help: change the parameter type to match the trait: `Private`\n+   |\n+note: type in trait\n+  --> $DIR/unnameable_type.rs:10:39\n+   |\n+LL |         fn dont_define_this(_private: Private) {}\n+   |                                       ^^^^^^^\n+   = note: expected signature `fn(Private)`\n+              found signature `fn(MyPrivate)`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0053`."}]}