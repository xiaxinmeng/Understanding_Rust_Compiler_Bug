{"sha": "901588432539a420563e5c1512b40bc8f3cc264e", "node_id": "C_kwDOAAsO6NoAKDkwMTU4ODQzMjUzOWE0MjA1NjNlNWMxNTEyYjQwYmM4ZjNjYzI2NGU", "commit": {"author": {"name": "alex-semenyuk", "email": "alexsemenyuk88@gmail.com", "date": "2022-07-09T10:00:24Z"}, "committer": {"name": "alex-semenyuk", "email": "alexsemenyuk88@gmail.com", "date": "2022-07-09T10:00:24Z"}, "message": "Fix small mistakes", "tree": {"sha": "9b9f287de2544d3be3995736b19812ab6aa8e4b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b9f287de2544d3be3995736b19812ab6aa8e4b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/901588432539a420563e5c1512b40bc8f3cc264e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/901588432539a420563e5c1512b40bc8f3cc264e", "html_url": "https://github.com/rust-lang/rust/commit/901588432539a420563e5c1512b40bc8f3cc264e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/901588432539a420563e5c1512b40bc8f3cc264e/comments", "author": {"login": "alex-semenyuk", "id": 5480441, "node_id": "MDQ6VXNlcjU0ODA0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5480441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-semenyuk", "html_url": "https://github.com/alex-semenyuk", "followers_url": "https://api.github.com/users/alex-semenyuk/followers", "following_url": "https://api.github.com/users/alex-semenyuk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-semenyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-semenyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-semenyuk/subscriptions", "organizations_url": "https://api.github.com/users/alex-semenyuk/orgs", "repos_url": "https://api.github.com/users/alex-semenyuk/repos", "events_url": "https://api.github.com/users/alex-semenyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-semenyuk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex-semenyuk", "id": 5480441, "node_id": "MDQ6VXNlcjU0ODA0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5480441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-semenyuk", "html_url": "https://github.com/alex-semenyuk", "followers_url": "https://api.github.com/users/alex-semenyuk/followers", "following_url": "https://api.github.com/users/alex-semenyuk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-semenyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-semenyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-semenyuk/subscriptions", "organizations_url": "https://api.github.com/users/alex-semenyuk/orgs", "repos_url": "https://api.github.com/users/alex-semenyuk/repos", "events_url": "https://api.github.com/users/alex-semenyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-semenyuk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "526f02ef053b8e249cea814bf603ced24dd9c48d", "url": "https://api.github.com/repos/rust-lang/rust/commits/526f02ef053b8e249cea814bf603ced24dd9c48d", "html_url": "https://github.com/rust-lang/rust/commit/526f02ef053b8e249cea814bf603ced24dd9c48d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "254f391e4bd3a92fe900c6d62283e69b4fb00a2d", "filename": "lintcheck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/901588432539a420563e5c1512b40bc8f3cc264e/lintcheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/901588432539a420563e5c1512b40bc8f3cc264e/lintcheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2FCargo.toml?ref=901588432539a420563e5c1512b40bc8f3cc264e", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"lintcheck\"\n version = \"0.0.1\"\n-description = \"tool to monitor impact of changes in Clippys lints on a part of the ecosystem\"\n+description = \"tool to monitor impact of changes in Clippy's lints on a part of the ecosystem\"\n readme = \"README.md\"\n license = \"MIT OR Apache-2.0\"\n repository = \"https://github.com/rust-lang/rust-clippy\""}, {"sha": "6f3d23382ce15d7036855a029f882035ecc3c6fe", "filename": "lintcheck/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/901588432539a420563e5c1512b40bc8f3cc264e/lintcheck%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/901588432539a420563e5c1512b40bc8f3cc264e/lintcheck%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2FREADME.md?ref=901588432539a420563e5c1512b40bc8f3cc264e", "patch": "@@ -70,7 +70,7 @@ is explicitly specified in the options.\n \n ### Fix mode\n You can run `./lintcheck/target/debug/lintcheck --fix` which will run Clippy with `--fix` and\n-print a warning if Clippys suggestions fail to apply (if the resulting code does not build).  \n+print a warning if Clippy's suggestions fail to apply (if the resulting code does not build).  \n This lets us spot bad suggestions or false positives automatically in some cases.  \n \n Please note that the target dir should be cleaned afterwards since clippy will modify"}, {"sha": "9ee25280f046fdcbcf437a674109d4e38bf4614c", "filename": "lintcheck/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/901588432539a420563e5c1512b40bc8f3cc264e/lintcheck%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/901588432539a420563e5c1512b40bc8f3cc264e/lintcheck%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2Fsrc%2Fmain.rs?ref=901588432539a420563e5c1512b40bc8f3cc264e", "patch": "@@ -545,7 +545,7 @@ fn lintcheck_needs_rerun(lintcheck_logs_path: &Path) -> bool {\n fn main() {\n     // assert that we launch lintcheck from the repo root (via cargo lintcheck)\n     if std::fs::metadata(\"lintcheck/Cargo.toml\").is_err() {\n-        eprintln!(\"lintcheck needs to be run from clippys repo root!\\nUse `cargo lintcheck` alternatively.\");\n+        eprintln!(\"lintcheck needs to be run from clippy's repo root!\\nUse `cargo lintcheck` alternatively.\");\n         std::process::exit(3);\n     }\n \n@@ -586,7 +586,7 @@ fn main() {\n         .map(|o| String::from_utf8_lossy(&o.stdout).into_owned())\n         .expect(\"could not get clippy version!\");\n \n-    // download and extract the crates, then run clippy on them and collect clippys warnings\n+    // download and extract the crates, then run clippy on them and collect clippy's warnings\n     // flatten into one big list of warnings\n \n     let crates = read_crates(&config.sources_toml_path);"}]}