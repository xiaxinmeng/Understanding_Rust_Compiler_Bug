{"sha": "705671ef4986f47044ad45babc77ce822d2c04d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNTY3MWVmNDk4NmY0NzA0NGFkNDViYWJjNzdjZTgyMmQyYzA0ZDY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-11T20:20:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-11T20:20:54Z"}, "message": "Rollup merge of #72019 - matthewjasper:dont-skip-binder, r=davidtwco\n\nFix debug assertion in error code\n\nCloses #70813", "tree": {"sha": "126e1bceb3689fbe5a16349f792d370ef628d037", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/126e1bceb3689fbe5a16349f792d370ef628d037"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/705671ef4986f47044ad45babc77ce822d2c04d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeubOmCRBK7hj4Ov3rIwAAdHIIALNKqke0gMhdPVKWHc4zxwYj\n//nTgFyZIUEHk9TUn1yFUIF2pgPHFediU15IFfOO/Gjid+SiTRxNImaBM1zTzjBj\n8DrMMcEDt9RVxiHXsd9nKKl2YUEOIUs5v4KGvh5ykn/b6R1jU5V3gi3JtyHnu62X\nai+eo+1wcDjYkD9q6PoAsIBjyUVckz3JnOaDb5P/VAFEKTwDiJ5rOoKB7ACLIuHW\n/Pso3wxOGz/9UNL/z48NQu45LexWUNHA+6xyufqjQoh5LjkJf7ypauMEKA3KYCGW\nk8EDj+DemwrERZ3nCA18tGSoYiI5EV5wkY8Ac6/szcuXb1vqESZRICfEjluuUdw=\n=rQa1\n-----END PGP SIGNATURE-----\n", "payload": "tree 126e1bceb3689fbe5a16349f792d370ef628d037\nparent dd595fade53937fafe3940c83293654e77c78d8f\nparent 619c6055e71a5a202cba3f5cb979f17c3581faa3\nauthor Dylan DPC <dylan.dpc@gmail.com> 1589228454 +0200\ncommitter GitHub <noreply@github.com> 1589228454 +0200\n\nRollup merge of #72019 - matthewjasper:dont-skip-binder, r=davidtwco\n\nFix debug assertion in error code\n\nCloses #70813\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/705671ef4986f47044ad45babc77ce822d2c04d6", "html_url": "https://github.com/rust-lang/rust/commit/705671ef4986f47044ad45babc77ce822d2c04d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/705671ef4986f47044ad45babc77ce822d2c04d6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd595fade53937fafe3940c83293654e77c78d8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd595fade53937fafe3940c83293654e77c78d8f", "html_url": "https://github.com/rust-lang/rust/commit/dd595fade53937fafe3940c83293654e77c78d8f"}, {"sha": "619c6055e71a5a202cba3f5cb979f17c3581faa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/619c6055e71a5a202cba3f5cb979f17c3581faa3", "html_url": "https://github.com/rust-lang/rust/commit/619c6055e71a5a202cba3f5cb979f17c3581faa3"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "8553c42589bec3cbc186b41e48c4d2a0fab1030d", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/705671ef4986f47044ad45babc77ce822d2c04d6/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705671ef4986f47044ad45babc77ce822d2c04d6/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=705671ef4986f47044ad45babc77ce822d2c04d6", "patch": "@@ -691,6 +691,15 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             }\n \n             if let ty::Ref(region, t_type, mutability) = trait_ref.skip_binder().self_ty().kind {\n+                if region.is_late_bound() || t_type.has_escaping_bound_vars() {\n+                    // Avoid debug assertion in `mk_obligation_for_def_id`.\n+                    //\n+                    // If the self type has escaping bound vars then it's not\n+                    // going to be the type of an expression, so the suggestion\n+                    // probably won't apply anyway.\n+                    return;\n+                }\n+\n                 let trait_type = match mutability {\n                     hir::Mutability::Mut => self.tcx.mk_imm_ref(region, t_type),\n                     hir::Mutability::Not => self.tcx.mk_mut_ref(region, t_type),"}, {"sha": "319789c4ec28296534a6025cc64d9938f2ada5af", "filename": "src/test/ui/suggestions/imm-ref-trait-object-literal-bound-regions.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/705671ef4986f47044ad45babc77ce822d2c04d6/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705671ef4986f47044ad45babc77ce822d2c04d6/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.rs?ref=705671ef4986f47044ad45babc77ce822d2c04d6", "patch": "@@ -0,0 +1,18 @@\n+// Regression test for #70813 (this used to trigger a debug assertion)\n+\n+trait Trait {}\n+\n+struct S;\n+\n+impl<'a> Trait for &'a mut S {}\n+\n+fn foo<X>(_: X)\n+where\n+    for<'b> &'b X: Trait,\n+{\n+}\n+\n+fn main() {\n+    let s = S;\n+    foo::<S>(s); //~ ERROR the trait bound `for<'b> &'b S: Trait` is not satisfied\n+}"}, {"sha": "83de3c4cfe0a52db7e16cc3ffac280d14050e07d", "filename": "src/test/ui/suggestions/imm-ref-trait-object-literal-bound-regions.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/705671ef4986f47044ad45babc77ce822d2c04d6/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/705671ef4986f47044ad45babc77ce822d2c04d6/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.stderr?ref=705671ef4986f47044ad45babc77ce822d2c04d6", "patch": "@@ -0,0 +1,18 @@\n+error[E0277]: the trait bound `for<'b> &'b S: Trait` is not satisfied\n+  --> $DIR/imm-ref-trait-object-literal-bound-regions.rs:17:5\n+   |\n+LL | fn foo<X>(_: X)\n+   |    --- required by a bound in this\n+LL | where\n+LL |     for<'b> &'b X: Trait,\n+   |                    ----- required by this bound in `foo`\n+...\n+LL |     foo::<S>(s);\n+   |     ^^^^^^^^ the trait `for<'b> Trait` is not implemented for `&'b S`\n+   |\n+   = help: the following implementations were found:\n+             <&'a mut S as Trait>\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}