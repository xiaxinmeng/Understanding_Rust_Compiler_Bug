{"sha": "14c439177b779408452fdf2c8f4fc620f27905d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YzQzOTE3N2I3Nzk0MDg0NTJmZGYyYzhmNGZjNjIwZjI3OTA1ZDE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-20T12:21:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-20T12:21:00Z"}, "message": "Rollup merge of #71863 - mibac138:self-import, r=estebank\n\nSuggest fixes and add error recovery for `use foo::self`\n\nFixes #63741.\nI have implemented 2 suggestions on how to fix a `use foo::self` import, however I feel like showing them both might be too verbose.\n\nAdditionally, I have also implemented error recovery as [menitoned](https://github.com/rust-lang/rust/issues/63741#issuecomment-602391091) by @comex.\n\nI believe r? @estebank deals with diagnostics.", "tree": {"sha": "8393244fdbc73646e1ed9b0ec4594b07756ab1c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8393244fdbc73646e1ed9b0ec4594b07756ab1c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14c439177b779408452fdf2c8f4fc620f27905d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJexSCsCRBK7hj4Ov3rIwAAdHIIADFGq3nzptlk27ofdhaqHlJc\n1SEELONYqn3eBbmrVkJ+2iWf4ZxW92Rzc5M7ijUJtd2c6OY8z+FXqqvOSLpbDhEi\nWXE1VshWzTmfaSyyC9sxYvMyi49g5CoMVdfynE9XysVha8ksurzgGi1uM/0EYbjJ\nvYHiPj+V1QfqtXLI4D+Vm80fbV+xCi2QLGEJSaD/l1hX2x+RSZrcwqUZUWbPWuF0\n2jOrc/bto51uSqw5X/Rupi9OXr+T/23Q+F/GRWlpVI0m5nhxHZj8dx+SAUEQtP0n\nEEcfCVs4traR2yAPiDJijWENEyxaCxW/lrlCnaUCZVZ9AA+TtgXAz/TOJtMeWjU=\n=VGCU\n-----END PGP SIGNATURE-----\n", "payload": "tree 8393244fdbc73646e1ed9b0ec4594b07756ab1c4\nparent 64ad709ad4d2863b7995d8b9e90a1bedb7d0ccf1\nparent aaeea7ffc36cd705116bf45f0479e51788ae33c5\nauthor Dylan DPC <dylan.dpc@gmail.com> 1589977260 +0200\ncommitter GitHub <noreply@github.com> 1589977260 +0200\n\nRollup merge of #71863 - mibac138:self-import, r=estebank\n\nSuggest fixes and add error recovery for `use foo::self`\n\nFixes #63741.\nI have implemented 2 suggestions on how to fix a `use foo::self` import, however I feel like showing them both might be too verbose.\n\nAdditionally, I have also implemented error recovery as [menitoned](https://github.com/rust-lang/rust/issues/63741#issuecomment-602391091) by @comex.\n\nI believe r? @estebank deals with diagnostics.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14c439177b779408452fdf2c8f4fc620f27905d1", "html_url": "https://github.com/rust-lang/rust/commit/14c439177b779408452fdf2c8f4fc620f27905d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14c439177b779408452fdf2c8f4fc620f27905d1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64ad709ad4d2863b7995d8b9e90a1bedb7d0ccf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/64ad709ad4d2863b7995d8b9e90a1bedb7d0ccf1", "html_url": "https://github.com/rust-lang/rust/commit/64ad709ad4d2863b7995d8b9e90a1bedb7d0ccf1"}, {"sha": "aaeea7ffc36cd705116bf45f0479e51788ae33c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaeea7ffc36cd705116bf45f0479e51788ae33c5", "html_url": "https://github.com/rust-lang/rust/commit/aaeea7ffc36cd705116bf45f0479e51788ae33c5"}], "stats": {"total": 209, "additions": 186, "deletions": 23}, "files": [{"sha": "988ec3d4374e0f375765d8bbc05e2741c09f3a1d", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -426,7 +426,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                             return;\n                         }\n \n-                        // Replace `use foo::self;` with `use foo;`\n+                        // Replace `use foo::{ self };` with `use foo;`\n                         source = module_path.pop().unwrap();\n                         if rename.is_none() {\n                             ident = source.ident;\n@@ -435,10 +435,33 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 } else {\n                     // Disallow `self`\n                     if source.ident.name == kw::SelfLower {\n+                        let parent = module_path.last();\n+\n+                        let span = match parent {\n+                            // only `::self` from `use foo::self as bar`\n+                            Some(seg) => seg.ident.span.shrink_to_hi().to(source.ident.span),\n+                            None => source.ident.span,\n+                        };\n+                        let span_with_rename = match rename {\n+                            // only `self as bar` from `use foo::self as bar`\n+                            Some(rename) => source.ident.span.to(rename.span),\n+                            None => source.ident.span,\n+                        };\n                         self.r.report_error(\n-                            use_tree.span,\n-                            ResolutionError::SelfImportsOnlyAllowedWithin,\n+                            span,\n+                            ResolutionError::SelfImportsOnlyAllowedWithin {\n+                                root: parent.is_none(),\n+                                span_with_rename,\n+                            },\n                         );\n+\n+                        // Error recovery: replace `use foo::self;` with `use foo;`\n+                        if let Some(parent) = module_path.pop() {\n+                            source = parent;\n+                            if rename.is_none() {\n+                                ident = source.ident;\n+                            }\n+                        }\n                     }\n \n                     // Disallow `use $crate;`"}, {"sha": "ea237f1a04f992d78ebfe7a6a4c14d08b202fe09", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -301,13 +301,40 @@ impl<'a> Resolver<'a> {\n                 }\n                 err\n             }\n-            ResolutionError::SelfImportsOnlyAllowedWithin => struct_span_err!(\n-                self.session,\n-                span,\n-                E0429,\n-                \"{}\",\n-                \"`self` imports are only allowed within a { } list\"\n-            ),\n+            ResolutionError::SelfImportsOnlyAllowedWithin { root, span_with_rename } => {\n+                let mut err = struct_span_err!(\n+                    self.session,\n+                    span,\n+                    E0429,\n+                    \"{}\",\n+                    \"`self` imports are only allowed within a { } list\"\n+                );\n+\n+                // None of the suggestions below would help with a case like `use self`.\n+                if !root {\n+                    // use foo::bar::self        -> foo::bar\n+                    // use foo::bar::self as abc -> foo::bar as abc\n+                    err.span_suggestion(\n+                        span,\n+                        \"consider importing the module directly\",\n+                        \"\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n+\n+                    // use foo::bar::self        -> foo::bar::{self}\n+                    // use foo::bar::self as abc -> foo::bar::{self as abc}\n+                    let braces = vec![\n+                        (span_with_rename.shrink_to_lo(), \"{\".to_string()),\n+                        (span_with_rename.shrink_to_hi(), \"}\".to_string()),\n+                    ];\n+                    err.multipart_suggestion(\n+                        \"alternatively, use the multi-path `use` syntax to import `self`\",\n+                        braces,\n+                        Applicability::MachineApplicable,\n+                    );\n+                }\n+                err\n+            }\n             ResolutionError::SelfImportCanOnlyAppearOnceInTheList => {\n                 let mut err = struct_span_err!(\n                     self.session,"}, {"sha": "bfb7f081fc33336ebb9d12c5e0cd8539dae21b70", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -194,7 +194,7 @@ enum ResolutionError<'a> {\n     /// Error E0426: use of undeclared label.\n     UndeclaredLabel(&'a str, Option<Symbol>),\n     /// Error E0429: `self` imports are only allowed within a `{ }` list.\n-    SelfImportsOnlyAllowedWithin,\n+    SelfImportsOnlyAllowedWithin { root: bool, span_with_rename: Span },\n     /// Error E0430: `self` import can only appear once in the list.\n     SelfImportCanOnlyAppearOnceInTheList,\n     /// Error E0431: `self` import can only appear in an import list with a non-empty prefix."}, {"sha": "c598803fa6cb80e2d340e93e552e4c0607b2c940", "filename": "src/test/ui/error-codes/E0429.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Ferror-codes%2FE0429.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Ferror-codes%2FE0429.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0429.stderr?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -1,8 +1,17 @@\n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/E0429.rs:1:5\n+  --> $DIR/E0429.rs:1:13\n    |\n LL | use std::fmt::self;\n-   |     ^^^^^^^^^^^^^^\n+   |             ^^^^^^\n+   |\n+help: consider importing the module directly\n+   |\n+LL | use std::fmt;\n+   |            --\n+help: alternatively, use the multi-path `use` syntax to import `self`\n+   |\n+LL | use std::fmt::{self};\n+   |               ^    ^\n \n error: aborting due to previous error\n "}, {"sha": "2dc4331ced775f2490e679b2f866938863511b1c", "filename": "src/test/ui/issues/issue-45829/import-self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.rs?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -9,7 +9,7 @@ use foo::{self};\n use foo as self;\n //~^ ERROR expected identifier\n \n-use foo::self;\n+use foo::self; //~ ERROR is defined multiple times\n //~^ ERROR `self` imports are only allowed within a { } list\n \n use foo::A;"}, {"sha": "158e81cdd9643c179483711e6f9765cdbcf367e9", "filename": "src/test/ui/issues/issue-45829/import-self.stderr", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -5,10 +5,19 @@ LL | use foo as self;\n    |            ^^^^ expected identifier, found keyword\n \n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/import-self.rs:12:5\n+  --> $DIR/import-self.rs:12:8\n    |\n LL | use foo::self;\n-   |     ^^^^^^^^^\n+   |        ^^^^^^\n+   |\n+help: consider importing the module directly\n+   |\n+LL | use foo;\n+   |       --\n+help: alternatively, use the multi-path `use` syntax to import `self`\n+   |\n+LL | use foo::{self};\n+   |          ^    ^\n \n error[E0255]: the name `foo` is defined multiple times\n   --> $DIR/import-self.rs:6:11\n@@ -25,6 +34,21 @@ help: you can use `as` to change the binding name of the import\n LL | use foo::{self as other_foo};\n    |           ^^^^^^^^^^^^^^^^^\n \n+error[E0255]: the name `foo` is defined multiple times\n+  --> $DIR/import-self.rs:12:5\n+   |\n+LL | mod foo {\n+   | ------- previous definition of the module `foo` here\n+...\n+LL | use foo::self;\n+   |     ^^^^^^^^^ `foo` reimported here\n+   |\n+   = note: `foo` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | use foo as other_foo;\n+   |     ^^^^^^^^^^^^^^^^\n+\n error[E0252]: the name `A` is defined multiple times\n   --> $DIR/import-self.rs:16:11\n    |\n@@ -39,7 +63,7 @@ help: you can use `as` to change the binding name of the import\n LL | use foo::{self as OtherA};\n    |           ^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 5 previous errors\n \n Some errors have detailed explanations: E0252, E0255, E0429.\n For more information about an error, try `rustc --explain E0252`."}, {"sha": "501d14be521778bf0227ba90735f8fbb0e3b16f8", "filename": "src/test/ui/use/use-keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-keyword.stderr?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -2,7 +2,7 @@ error[E0429]: `self` imports are only allowed within a { } list\n   --> $DIR/use-keyword.rs:6:13\n    |\n LL |         use self as A;\n-   |             ^^^^^^^^^\n+   |             ^^^^\n \n error[E0432]: unresolved import `super`\n   --> $DIR/use-keyword.rs:8:13"}, {"sha": "a29bd07ac4419eaff767ae9bf767218b7fd14b2e", "filename": "src/test/ui/use/use-mod/use-mod-4.stderr", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -1,20 +1,38 @@\n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/use-mod-4.rs:1:5\n+  --> $DIR/use-mod-4.rs:1:8\n    |\n LL | use foo::self;\n-   |     ^^^^^^^^^\n+   |        ^^^^^^\n+   |\n+help: consider importing the module directly\n+   |\n+LL | use foo;\n+   |       --\n+help: alternatively, use the multi-path `use` syntax to import `self`\n+   |\n+LL | use foo::{self};\n+   |          ^    ^\n \n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/use-mod-4.rs:4:5\n+  --> $DIR/use-mod-4.rs:4:13\n    |\n LL | use std::mem::self;\n-   |     ^^^^^^^^^^^^^^\n+   |             ^^^^^^\n+   |\n+help: consider importing the module directly\n+   |\n+LL | use std::mem;\n+   |            --\n+help: alternatively, use the multi-path `use` syntax to import `self`\n+   |\n+LL | use std::mem::{self};\n+   |               ^    ^\n \n error[E0432]: unresolved import `foo`\n   --> $DIR/use-mod-4.rs:1:5\n    |\n LL | use foo::self;\n-   |     ^^^ maybe a missing crate `foo`?\n+   |     ^^^^^^^^^ no `foo` in the root\n \n error: aborting due to 3 previous errors\n "}, {"sha": "df5b423ec57e6ad195bb6c621f7d58447a64e8fc", "filename": "src/test/ui/use/use-mod/use-mod-5.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-5.rs?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -0,0 +1,13 @@\n+mod foo {\n+    pub mod bar {\n+        pub fn drop() {}\n+    }\n+}\n+\n+use foo::bar::self;\n+//~^ ERROR `self` imports are only allowed within a { } list\n+\n+fn main() {\n+    // Because of error recovery this shouldn't error\n+    bar::drop();\n+}"}, {"sha": "ebb71c51293ec277d6bd4a2dd5498d423d286ecd", "filename": "src/test/ui/use/use-mod/use-mod-5.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-5.stderr?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -0,0 +1,18 @@\n+error[E0429]: `self` imports are only allowed within a { } list\n+  --> $DIR/use-mod-5.rs:7:13\n+   |\n+LL | use foo::bar::self;\n+   |             ^^^^^^\n+   |\n+help: consider importing the module directly\n+   |\n+LL | use foo::bar;\n+   |            --\n+help: alternatively, use the multi-path `use` syntax to import `self`\n+   |\n+LL | use foo::bar::{self};\n+   |               ^    ^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0429`."}, {"sha": "1f8777daca491d5c8b4b86e6d589308771d633b5", "filename": "src/test/ui/use/use-mod/use-mod-6.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-6.rs?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -0,0 +1,13 @@\n+mod foo {\n+    pub mod bar {\n+        pub fn drop() {}\n+    }\n+}\n+\n+use foo::bar::self as abc;\n+//~^ ERROR `self` imports are only allowed within a { } list\n+\n+fn main() {\n+    // Because of error recovery this shouldn't error\n+    abc::drop();\n+}"}, {"sha": "36fdf9c75c704f5a5a15af0e59dd6fcbdf288687", "filename": "src/test/ui/use/use-mod/use-mod-6.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14c439177b779408452fdf2c8f4fc620f27905d1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-6.stderr?ref=14c439177b779408452fdf2c8f4fc620f27905d1", "patch": "@@ -0,0 +1,18 @@\n+error[E0429]: `self` imports are only allowed within a { } list\n+  --> $DIR/use-mod-6.rs:7:13\n+   |\n+LL | use foo::bar::self as abc;\n+   |             ^^^^^^\n+   |\n+help: consider importing the module directly\n+   |\n+LL | use foo::bar as abc;\n+   |            --\n+help: alternatively, use the multi-path `use` syntax to import `self`\n+   |\n+LL | use foo::bar::{self as abc};\n+   |               ^           ^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0429`."}]}