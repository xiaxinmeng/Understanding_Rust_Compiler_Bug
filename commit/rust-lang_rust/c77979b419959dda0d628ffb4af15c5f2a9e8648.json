{"sha": "c77979b419959dda0d628ffb4af15c5f2a9e8648", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3Nzk3OWI0MTk5NTlkZGEwZDYyOGZmYjRhZjE1YzVmMmE5ZTg2NDg=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-10-31T00:35:19Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-10-31T00:35:19Z"}, "message": "Fix for thread locals", "tree": {"sha": "f6eb7fe31dd8f3d03409eb802c3d9703b1cdd3f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6eb7fe31dd8f3d03409eb802c3d9703b1cdd3f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c77979b419959dda0d628ffb4af15c5f2a9e8648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c77979b419959dda0d628ffb4af15c5f2a9e8648", "html_url": "https://github.com/rust-lang/rust/commit/c77979b419959dda0d628ffb4af15c5f2a9e8648", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c77979b419959dda0d628ffb4af15c5f2a9e8648/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4edcddfb618a6d684d1f3289706ecc7794b30278", "url": "https://api.github.com/repos/rust-lang/rust/commits/4edcddfb618a6d684d1f3289706ecc7794b30278", "html_url": "https://github.com/rust-lang/rust/commit/4edcddfb618a6d684d1f3289706ecc7794b30278"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "43b0bf09a6fe1dfa46594897306527a471b2d1e5", "filename": "src/libstd/sys/redox/thread_local.rs", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c77979b419959dda0d628ffb4af15c5f2a9e8648/src%2Flibstd%2Fsys%2Fredox%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77979b419959dda0d628ffb4af15c5f2a9e8648/src%2Flibstd%2Fsys%2Fredox%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fthread_local.rs?ref=c77979b419959dda0d628ffb4af15c5f2a9e8648", "patch": "@@ -12,18 +12,27 @@\n \n use collections::BTreeMap;\n use ptr;\n+use sync::atomic::{AtomicUsize, ATOMIC_USIZE_INIT, Ordering};\n \n pub type Key = usize;\n \n type Dtor = unsafe extern fn(*mut u8);\n \n-#[thread_local]\n-static mut NEXT_KEY: Key = 0;\n+static NEXT_KEY: AtomicUsize = ATOMIC_USIZE_INIT;\n+\n+static mut KEYS: *mut BTreeMap<Key, Option<Dtor>> = ptr::null_mut();\n \n #[thread_local]\n-static mut LOCALS: *mut BTreeMap<Key, (*mut u8, Option<Dtor>)> = ptr::null_mut();\n+static mut LOCALS: *mut BTreeMap<Key, *mut u8> = ptr::null_mut();\n+\n+unsafe fn keys() -> &'static mut BTreeMap<Key, Option<Dtor>> {\n+    if KEYS == ptr::null_mut() {\n+        KEYS = Box::into_raw(Box::new(BTreeMap::new()));\n+    }\n+    &mut *KEYS\n+}\n \n-unsafe fn locals() -> &'static mut BTreeMap<Key, (*mut u8, Option<Dtor>)> {\n+unsafe fn locals() -> &'static mut BTreeMap<Key, *mut u8> {\n     if LOCALS == ptr::null_mut() {\n         LOCALS = Box::into_raw(Box::new(BTreeMap::new()));\n     }\n@@ -32,26 +41,26 @@ unsafe fn locals() -> &'static mut BTreeMap<Key, (*mut u8, Option<Dtor>)> {\n \n #[inline]\n pub unsafe fn create(dtor: Option<Dtor>) -> Key {\n-    let key = NEXT_KEY;\n-    NEXT_KEY += 1;\n-    locals().insert(key, (0 as *mut u8, dtor));\n+    let key = NEXT_KEY.fetch_add(1, Ordering::SeqCst);\n+    keys().insert(key, dtor);\n     key\n }\n \n #[inline]\n-pub unsafe fn set(key: Key, value: *mut u8) {\n-    locals().get_mut(&key).unwrap().0 = value;\n+pub unsafe fn get(key: Key) -> *mut u8 {\n+    if let Some(&entry) = locals().get(&key) {\n+        entry\n+    } else {\n+        ptr::null_mut()\n+    }\n }\n \n #[inline]\n-pub unsafe fn get(key: Key) -> *mut u8 {\n-    locals()[&key].0\n+pub unsafe fn set(key: Key, value: *mut u8) {\n+    locals().insert(key, value);\n }\n \n #[inline]\n pub unsafe fn destroy(key: Key) {\n-    let (value, dtor) = locals().remove(&key).unwrap();\n-    if let Some(dtor_fn) = dtor {\n-        dtor_fn(value);\n-    }\n+    keys().remove(&key);\n }"}]}