{"sha": "ca2ef71e96b0a431f6085449c6d5583b13afa079", "node_id": "C_kwDOAAsO6NoAKGNhMmVmNzFlOTZiMGE0MzFmNjA4NTQ0OWM2ZDU1ODNiMTNhZmEwNzk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-04T13:59:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-04T13:59:03Z"}, "message": "Rollup merge of #93585 - tamaroning:add_tests_for_92630, r=m-ou-se\n\nMissing tests for #92630\n\nfixes #93143", "tree": {"sha": "6bbbfe798a9e05daa0c357dbf4b83a90b5dcadb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bbbfe798a9e05daa0c357dbf4b83a90b5dcadb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca2ef71e96b0a431f6085449c6d5583b13afa079", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/TEnCRBK7hj4Ov3rIwAAHdIIADg4wCNQoSR4jPkToRPR4JiU\nzjY4qMhcG8of64e1ki/Raqq3rLe2FAkQgMpEHj643pGDAGjWXWHHUEENLaeplBFw\nALUaG3Mcbmes5YTQ/BduRk4evimBOLoK8TNBVTpaNHpnGOZkYF1kPeSzSkB/+Ze1\nDJWFp+O8YL/82MpfKH9ZTZ+4iryz9GA1O0Rn+5gDLxggcr/Zw/fZMc8aa2esF7/3\n90m58z0vJ22gxen/m10LZr+tLFxaqy/QRt0B5ItbenFbVRWH17srvx1103qOuT+8\nLl9XBeZb7sY5apS1f6fP1S8NPliYVaZdVUbDe3fxNzDTUp1BDQ6OR1XFOWElYFA=\n=AW0+\n-----END PGP SIGNATURE-----\n", "payload": "tree 6bbbfe798a9e05daa0c357dbf4b83a90b5dcadb5\nparent f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5\nparent 83242897fb356f51762e0e466dfd53186725028a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643983143 +0100\ncommitter GitHub <noreply@github.com> 1643983143 +0100\n\nRollup merge of #93585 - tamaroning:add_tests_for_92630, r=m-ou-se\n\nMissing tests for #92630\n\nfixes #93143\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca2ef71e96b0a431f6085449c6d5583b13afa079", "html_url": "https://github.com/rust-lang/rust/commit/ca2ef71e96b0a431f6085449c6d5583b13afa079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca2ef71e96b0a431f6085449c6d5583b13afa079/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "html_url": "https://github.com/rust-lang/rust/commit/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5"}, {"sha": "83242897fb356f51762e0e466dfd53186725028a", "url": "https://api.github.com/repos/rust-lang/rust/commits/83242897fb356f51762e0e466dfd53186725028a", "html_url": "https://github.com/rust-lang/rust/commit/83242897fb356f51762e0e466dfd53186725028a"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "74b6f74e4013ce3271cc3d97f11025b0a697f2fd", "filename": "library/core/tests/future.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca2ef71e96b0a431f6085449c6d5583b13afa079/library%2Fcore%2Ftests%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2ef71e96b0a431f6085449c6d5583b13afa079/library%2Fcore%2Ftests%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Ffuture.rs?ref=ca2ef71e96b0a431f6085449c6d5583b13afa079", "patch": "@@ -118,3 +118,11 @@ fn block_on(fut: impl Future) {\n         }\n     }\n }\n+\n+// just tests by whether or not this compiles\n+fn _pending_impl_all_auto_traits<T>() {\n+    use std::panic::{RefUnwindSafe, UnwindSafe};\n+    fn all_auto_traits<T: Send + Sync + Unpin + UnwindSafe + RefUnwindSafe>() {}\n+\n+    all_auto_traits::<std::future::Pending<T>>();\n+}"}, {"sha": "a173e461c606f6e69d5ccbb170555fdc726c326d", "filename": "library/core/tests/hash/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca2ef71e96b0a431f6085449c6d5583b13afa079/library%2Fcore%2Ftests%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2ef71e96b0a431f6085449c6d5583b13afa079/library%2Fcore%2Ftests%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fhash%2Fmod.rs?ref=ca2ef71e96b0a431f6085449c6d5583b13afa079", "patch": "@@ -146,3 +146,11 @@ fn test_build_hasher_object_safe() {\n \n     let _: &dyn BuildHasher<Hasher = DefaultHasher> = &RandomState::new();\n }\n+\n+// just tests by whether or not this compiles\n+fn _build_hasher_default_impl_all_auto_traits<T>() {\n+    use std::panic::{RefUnwindSafe, UnwindSafe};\n+    fn all_auto_traits<T: Send + Sync + Unpin + UnwindSafe + RefUnwindSafe>() {}\n+\n+    all_auto_traits::<std::hash::BuildHasherDefault<T>>();\n+}"}, {"sha": "972d61ba909d8dbb08edee5580c29c2ba3cf6225", "filename": "library/core/tests/iter/traits/iterator.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca2ef71e96b0a431f6085449c6d5583b13afa079/library%2Fcore%2Ftests%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2ef71e96b0a431f6085449c6d5583b13afa079/library%2Fcore%2Ftests%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter%2Ftraits%2Fiterator.rs?ref=ca2ef71e96b0a431f6085449c6d5583b13afa079", "patch": "@@ -496,3 +496,11 @@ fn test_collect() {\n     let b: Vec<isize> = a.iter().cloned().collect();\n     assert!(a == b);\n }\n+\n+// just tests by whether or not this compiles\n+fn _empty_impl_all_auto_traits<T>() {\n+    use std::panic::{RefUnwindSafe, UnwindSafe};\n+    fn all_auto_traits<T: Send + Sync + Unpin + UnwindSafe + RefUnwindSafe>() {}\n+\n+    all_auto_traits::<std::iter::Empty<T>>();\n+}"}]}