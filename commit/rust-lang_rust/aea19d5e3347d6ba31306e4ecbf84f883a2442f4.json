{"sha": "aea19d5e3347d6ba31306e4ecbf84f883a2442f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlYTE5ZDVlMzM0N2Q2YmEzMTMwNmU0ZWNiZjg0Zjg4M2EyNDQyZjQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T00:39:06Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T02:48:17Z"}, "message": "Combine error_on_line_overflow_comments/strings\n\n1. Rename to error_on_unformatted_comments_or_strings\n2. Set the option to false by default.", "tree": {"sha": "4f8f13f5a5eaaa8c916a9b3516547bfc0cf1c0aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f8f13f5a5eaaa8c916a9b3516547bfc0cf1c0aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aea19d5e3347d6ba31306e4ecbf84f883a2442f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aea19d5e3347d6ba31306e4ecbf84f883a2442f4", "html_url": "https://github.com/rust-lang/rust/commit/aea19d5e3347d6ba31306e4ecbf84f883a2442f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aea19d5e3347d6ba31306e4ecbf84f883a2442f4/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d9226ffeefcd2863c2f300381e6d9067e165dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d9226ffeefcd2863c2f300381e6d9067e165dc0", "html_url": "https://github.com/rust-lang/rust/commit/4d9226ffeefcd2863c2f300381e6d9067e165dc0"}], "stats": {"total": 53, "additions": 21, "deletions": 32}, "files": [{"sha": "2c7d32ab6488b31ea6caca1cae50bc8cce162822", "filename": "src/config.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aea19d5e3347d6ba31306e4ecbf84f883a2442f4/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aea19d5e3347d6ba31306e4ecbf84f883a2442f4/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=aea19d5e3347d6ba31306e4ecbf84f883a2442f4", "patch": "@@ -682,10 +682,9 @@ create_config! {\n     disable_all_formatting: bool, false, false, \"Don't reformat anything\";\n     skip_children: bool, false, false, \"Don't reformat out of line modules\";\n     error_on_line_overflow: bool, true, false, \"Error if unable to get all lines within max_width\";\n-    error_on_line_overflow_comments: bool, true, false,\n-        \"Error if unable to get comments within max_width\";\n-    error_on_line_overflow_strings: bool, true, false,\n-        \"Error if unable to get string literals within max_width\";\n+    error_on_unformatted_comments_or_strings: bool, false, false,\n+        \"Error if unable to get comments or string literals within max_width, \\\n+         or they are left with trailing whitespaces\";\n     report_todo: ReportTactic, ReportTactic::Never, false,\n         \"Report all, none or unnumbered occurrences of TODO in source file comments\";\n     report_fixme: ReportTactic, ReportTactic::Never, false,"}, {"sha": "6a67343303f2b7facbe31408d0fab9c2384703ec", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aea19d5e3347d6ba31306e4ecbf84f883a2442f4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aea19d5e3347d6ba31306e4ecbf84f883a2442f4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=aea19d5e3347d6ba31306e4ecbf84f883a2442f4", "patch": "@@ -119,12 +119,9 @@ impl FormattingError {\n     }\n \n     fn msg_suffix(&self) -> &str {\n-        if self.is_comment {\n-            \"use `error_on_line_overflow_comments = false` to suppress \\\n-             the warning against comments\\n\"\n-        } else if self.is_string {\n-            \"use `error_on_line_overflow_strings = false` to suppress \\\n-             the warning against string literals\\n\"\n+        if self.is_comment || self.is_string {\n+            \"set `error_on_unformatted_comments_or_strings = false` to suppress \\\n+             the warning against comments or string literals\\n\"\n         } else {\n             \"\"\n         }\n@@ -374,10 +371,8 @@ fn should_report_error(\n     is_string: bool,\n     error_kind: ErrorKind,\n ) -> bool {\n-    let allow_error_report = if char_kind.is_comment() {\n-        config.error_on_line_overflow_comments()\n-    } else if is_string {\n-        config.error_on_line_overflow_strings()\n+    let allow_error_report = if char_kind.is_comment() || is_string {\n+        config.error_on_unformatted_comments_or_strings()\n     } else {\n         true\n     };\n@@ -443,8 +438,7 @@ fn format_lines(\n \n                 // Check for any line width errors we couldn't correct.\n                 let error_kind = ErrorKind::LineOverflow(line_len, config.max_width());\n-                if line_len > config.max_width()\n-                    && !is_skipped_line(cur_line, skipped_range)\n+                if line_len > config.max_width() && !is_skipped_line(cur_line, skipped_range)\n                     && should_report_error(config, kind, is_string, error_kind)\n                 {\n                     errors.push(FormattingError {"}, {"sha": "9fd9e01e274fc97bcbae741bb4db444762b0aa1c", "filename": "tests/target/configs-error_on_line_overflow_comment-false.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4d9226ffeefcd2863c2f300381e6d9067e165dc0/tests%2Ftarget%2Fconfigs-error_on_line_overflow_comment-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9226ffeefcd2863c2f300381e6d9067e165dc0/tests%2Ftarget%2Fconfigs-error_on_line_overflow_comment-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-error_on_line_overflow_comment-false.rs?ref=4d9226ffeefcd2863c2f300381e6d9067e165dc0", "patch": "@@ -1,7 +0,0 @@\n-// rustfmt-error_on_line_overflow_comments: false\n-// Error on line overflow comment\n-\n-// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n-fn main() {\n-    // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n-}"}, {"sha": "b5922745cf20bbd78ee0b9ee27fef5e0ddc06046", "filename": "tests/target/configs-error_on_line_overflow_strings-false.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d9226ffeefcd2863c2f300381e6d9067e165dc0/tests%2Ftarget%2Fconfigs-error_on_line_overflow_strings-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9226ffeefcd2863c2f300381e6d9067e165dc0/tests%2Ftarget%2Fconfigs-error_on_line_overflow_strings-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-error_on_line_overflow_strings-false.rs?ref=4d9226ffeefcd2863c2f300381e6d9067e165dc0", "patch": "@@ -1,9 +0,0 @@\n-// rustfmt-error_on_line_overflow_strings: false\n-// Suppress an error on line overflow strings.\n-\n-fn main() {\n-    let x = \"                                                                                                  \";\n-    let a = \"\n-  \n-\";\n-}"}, {"sha": "ff9a35eb6b82a48afc524a2bb3e6b8b3a9e70cdc", "filename": "tests/target/configs-error_on_unformatted_comments_or_strings-false.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aea19d5e3347d6ba31306e4ecbf84f883a2442f4/tests%2Ftarget%2Fconfigs-error_on_unformatted_comments_or_strings-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aea19d5e3347d6ba31306e4ecbf84f883a2442f4/tests%2Ftarget%2Fconfigs-error_on_unformatted_comments_or_strings-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-error_on_unformatted_comments_or_strings-false.rs?ref=aea19d5e3347d6ba31306e4ecbf84f883a2442f4", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-error_on_unformatted_comments_or_strings: false\n+// Error on line overflow comment or string literals.\n+\n+// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+fn main() {\n+    // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+\n+    let x = \"                                                                                                  \";\n+    let a = \"\n+  \n+\";\n+}"}]}