{"sha": "854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "node_id": "C_kwDOAAsO6NoAKDg1NGIzMTY2YTA1OTE2ZjAxYjZhN2NiOWMwOWZjN2M4ZDI2Njk3YWQ", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-10-24T18:52:51Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-10-24T18:52:51Z"}, "message": "Address some comments", "tree": {"sha": "159dd54e8e4f48c6ee31908766bd54c84a19ac97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/159dd54e8e4f48c6ee31908766bd54c84a19ac97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "html_url": "https://github.com/rust-lang/rust/commit/854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/comments", "author": {}, "committer": {}, "parents": [{"sha": "406e1dc8ebdeb509515c0c8be7cfe015c5eced30", "url": "https://api.github.com/repos/rust-lang/rust/commits/406e1dc8ebdeb509515c0c8be7cfe015c5eced30", "html_url": "https://github.com/rust-lang/rust/commit/406e1dc8ebdeb509515c0c8be7cfe015c5eced30"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "b7b8fe3f25a04c43de3b24f6b93ca162789cd88b", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -559,7 +559,7 @@ impl Emitter for EmitterWriter {\n             &primary_span,\n             &children,\n             &suggestions,\n-            Some(&diag.emitted_at),\n+            self.track_diagnostics.then_some(&diag.emitted_at),\n         );\n     }\n \n@@ -1661,7 +1661,7 @@ impl EmitterWriter {\n             }\n         }\n \n-        if self.track_diagnostics && let Some(tracked) = emitted_at {\n+        if let Some(tracked) = emitted_at {\n             let track = format!(\"-Ztrack-diagnostics: created at {tracked}\");\n             let len = buffer.num_lines();\n             buffer.append(len, &track, Style::NoStyle);"}, {"sha": "0f7220f9f7a187730ff0ac4da26c7d1e13981a4b", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -689,6 +689,7 @@ fn test_unstable_options_tracking_hash() {\n     untracked!(time_llvm_passes, true);\n     untracked!(time_passes, true);\n     untracked!(trace_macros, true);\n+    untracked!(track_diagnostics, false);\n     untracked!(trim_diagnostic_paths, false);\n     untracked!(ui_testing, true);\n     untracked!(unpretty, Some(\"expanded\".to_string()));"}, {"sha": "5327dea8804af2ca23c91008ee5603ceebf6b046", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -1585,8 +1585,8 @@ options! {\n         \"choose the TLS model to use (`rustc --print tls-models` for details)\"),\n     trace_macros: bool = (false, parse_bool, [UNTRACKED],\n         \"for every macro invocation, print its name and arguments (default: no)\"),\n-    track_diagnostics: bool = (false, parse_bool, [TRACKED],\n-        \"Tracks where in rustc a diagnostic was emitted\"),\n+    track_diagnostics: bool = (false, parse_bool, [UNTRACKED],\n+        \"tracks where in rustc a diagnostic was emitted\"),\n     // Diagnostics are considered side-effects of a query (see `QuerySideEffects`) and are saved\n     // alongside query results and changes to translation options can affect diagnostics - so\n     // translation options should be tracked."}, {"sha": "37d934a540ba004a8bbc7a3190ef1c5872487bb5", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -172,7 +172,7 @@ pub(crate) fn new_handler(\n                     unstable_opts.teach,\n                     diagnostic_width,\n                     false,\n-                    false,\n+                    unstable_opts.track_diagnostics,\n                 )\n                 .ui_testing(unstable_opts.ui_testing),\n             )\n@@ -191,7 +191,7 @@ pub(crate) fn new_handler(\n                     json_rendered,\n                     diagnostic_width,\n                     false,\n-                    false,\n+                    unstable_opts.track_diagnostics,\n                 )\n                 .ui_testing(unstable_opts.ui_testing),\n             )"}, {"sha": "fc5343a982e187faf5f6918020e7585a99ed8cff", "filename": "src/test/rustdoc-ui/track-diagnostics.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -0,0 +1,6 @@\n+// compile-flags: -Z track-diagnostics\n+// error-pattern: created at\n+\n+struct A;\n+struct B;\n+const S: A = B;"}, {"sha": "76453cfe220ce562bbf1f74e611b758a32abd162", "filename": "src/test/rustdoc-ui/track-diagnostics.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -0,0 +1,10 @@\n+error[E0308]: mismatched types\n+  --> $DIR/track-diagnostics.rs:6:14\n+   |\n+LL | const S: A = B;\n+   |              ^ expected struct `A`, found struct `B`\n+-Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:2275:31\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "07c8793c08b105046bede492d042feff875443f1", "filename": "src/test/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -170,6 +170,7 @@\n     -Z                             time-passes=val -- measure time of each rustc pass (default: no)\n     -Z                               tls-model=val -- choose the TLS model to use (`rustc --print tls-models` for details)\n     -Z                            trace-macros=val -- for every macro invocation, print its name and arguments (default: no)\n+    -Z                       track-diagnostics=val -- Tracks where in rustc a diagnostic was emitted\n     -Z                translate-additional-ftl=val -- additional fluent translation to preferentially use (for testing translation)\n     -Z        translate-directionality-markers=val -- emit directionality isolation markers in translated diagnostics\n     -Z                          translate-lang=val -- language identifier for diagnostic output"}, {"sha": "8c96f46d57a2f3227e81fc6184ee16fe5c2fd6de", "filename": "src/tools/clippy/tests/ui/track-diagnostics.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -Z track-diagnostics\n+// error-pattern: created at\n+\n+struct A;\n+struct B;\n+const S: A = B;\n+\n+fn main() {}"}, {"sha": "76453cfe220ce562bbf1f74e611b758a32abd162", "filename": "src/tools/clippy/tests/ui/track-diagnostics.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b3166a05916f01b6a7cb9c09fc7c8d26697ad/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr?ref=854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "patch": "@@ -0,0 +1,10 @@\n+error[E0308]: mismatched types\n+  --> $DIR/track-diagnostics.rs:6:14\n+   |\n+LL | const S: A = B;\n+   |              ^ expected struct `A`, found struct `B`\n+-Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:2275:31\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}