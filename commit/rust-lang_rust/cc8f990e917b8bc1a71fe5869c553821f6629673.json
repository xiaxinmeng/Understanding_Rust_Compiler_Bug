{"sha": "cc8f990e917b8bc1a71fe5869c553821f6629673", "node_id": "C_kwDOAAsO6NoAKGNjOGY5OTBlOTE3YjhiYzFhNzFmZTU4NjljNTUzODIxZjY2Mjk2NzM", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-01-31T03:49:11Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-02-02T01:20:12Z"}, "message": "Add tests to assert current behavior of large future sizes\n\nBased on a couple of sources:\n- https://swatinem.de/blog/future-size/\n- https://github.com/rust-lang/rust/issues/62958", "tree": {"sha": "4c0f10499ccdeb8b9e090b7c080eafa244af692d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c0f10499ccdeb8b9e090b7c080eafa244af692d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc8f990e917b8bc1a71fe5869c553821f6629673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc8f990e917b8bc1a71fe5869c553821f6629673", "html_url": "https://github.com/rust-lang/rust/commit/cc8f990e917b8bc1a71fe5869c553821f6629673", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc8f990e917b8bc1a71fe5869c553821f6629673/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11d96b59307b1702fffe871bfc2d0145d070881e", "url": "https://api.github.com/repos/rust-lang/rust/commits/11d96b59307b1702fffe871bfc2d0145d070881e", "html_url": "https://github.com/rust-lang/rust/commit/11d96b59307b1702fffe871bfc2d0145d070881e"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "e021ff512e3c1f3bb04f785c5b1d5e686b4fd5ad", "filename": "tests/ui/future-sizes/future-as-arg.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cc8f990e917b8bc1a71fe5869c553821f6629673/tests%2Fui%2Ffuture-sizes%2Ffuture-as-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc8f990e917b8bc1a71fe5869c553821f6629673/tests%2Fui%2Ffuture-sizes%2Ffuture-as-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture-sizes%2Ffuture-as-arg.rs?ref=cc8f990e917b8bc1a71fe5869c553821f6629673", "patch": "@@ -0,0 +1,19 @@\n+// edition: 2021\n+// run-pass\n+\n+async fn test(_arg: [u8; 8192]) {}\n+\n+async fn use_future(fut: impl std::future::Future<Output = ()>) {\n+    fut.await\n+}\n+\n+fn main() {\n+    let n = std::mem::size_of_val(&use_future(use_future(use_future(use_future(use_future(\n+            use_future(use_future(use_future(use_future(use_future(test(\n+                [0; 8192]\n+            ))))))\n+        ))))));\n+    println!(\"size is: {n}\");\n+    // Not putting an exact number in case it slightly changes over different commits\n+    assert!(n > 8000000);\n+}"}, {"sha": "c543c71f13cdae6079eb761d80f4c3129d02bdd1", "filename": "tests/ui/future-sizes/large-arg.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cc8f990e917b8bc1a71fe5869c553821f6629673/tests%2Fui%2Ffuture-sizes%2Flarge-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc8f990e917b8bc1a71fe5869c553821f6629673/tests%2Fui%2Ffuture-sizes%2Flarge-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture-sizes%2Flarge-arg.rs?ref=cc8f990e917b8bc1a71fe5869c553821f6629673", "patch": "@@ -0,0 +1,17 @@\n+// compile-flags: -Z print-type-sizes --crate-type=lib\n+// edition: 2021\n+// build-pass\n+\n+pub async fn test() {\n+    let _ = a([0u8; 1024]).await;\n+}\n+\n+pub async fn a<T>(t: T) -> T {\n+    b(t).await\n+}\n+async fn b<T>(t: T) -> T {\n+    c(t).await\n+}\n+async fn c<T>(t: T) -> T {\n+    t\n+}"}, {"sha": "cd5a22a270a502a4d54132b037ee82943e378eca", "filename": "tests/ui/future-sizes/large-arg.stdout", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/cc8f990e917b8bc1a71fe5869c553821f6629673/tests%2Fui%2Ffuture-sizes%2Flarge-arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/cc8f990e917b8bc1a71fe5869c553821f6629673/tests%2Fui%2Ffuture-sizes%2Flarge-arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture-sizes%2Flarge-arg.stdout?ref=cc8f990e917b8bc1a71fe5869c553821f6629673", "patch": "@@ -0,0 +1,60 @@\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:5:21: 7:2]`: 3076 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Suspend0`: 3075 bytes\n+print-type-size         field `.__awaitee`: 3075 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Unresumed`: 0 bytes\n+print-type-size     variant `Returned`: 0 bytes\n+print-type-size     variant `Panicked`: 0 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:9:30: 11:2]`: 3075 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Suspend0`: 3074 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         field `.__awaitee`: 2050 bytes\n+print-type-size     variant `Unresumed`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:9:30: 11:2]>`: 3075 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 3075 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:9:30: 11:2]>`: 3075 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 3075 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 3075 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:12:26: 14:2]`: 2050 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Suspend0`: 2049 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         field `.__awaitee`: 1025 bytes\n+print-type-size     variant `Unresumed`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:12:26: 14:2]>`: 2050 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 2050 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:12:26: 14:2]>`: 2050 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 2050 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 2050 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:15:26: 17:2]`: 1025 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Unresumed`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 1024 bytes\n+print-type-size         field `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:15:26: 17:2]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 1025 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:15:26: 17:2]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 1025 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 1025 bytes\n+print-type-size type: `std::task::Poll<[u8; 1024]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Ready`: 1024 bytes\n+print-type-size         field `.0`: 1024 bytes\n+print-type-size     variant `Pending`: 0 bytes"}]}