{"sha": "e4756e6b07989d1cf195667bcf5d9f780618031a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NzU2ZTZiMDc5ODlkMWNmMTk1NjY3YmNmNWQ5Zjc4MDYxODAzMWE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-08-13T01:08:32Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-08-13T01:08:32Z"}, "message": "clear in-scope lifetimes for nested items in HIR lowering\n\nThis was causing us to incorrectly think the lifetimes were\nalready declared on the scope for the nested item, when in fact\nthey are not inherited.", "tree": {"sha": "c9d93df466b0bf5c9fc7873fd49461d0d164bec4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9d93df466b0bf5c9fc7873fd49461d0d164bec4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4756e6b07989d1cf195667bcf5d9f780618031a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4756e6b07989d1cf195667bcf5d9f780618031a", "html_url": "https://github.com/rust-lang/rust/commit/e4756e6b07989d1cf195667bcf5d9f780618031a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4756e6b07989d1cf195667bcf5d9f780618031a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a02a171e6a8e1cf601867230bba577c0351461b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a02a171e6a8e1cf601867230bba577c0351461b2", "html_url": "https://github.com/rust-lang/rust/commit/a02a171e6a8e1cf601867230bba577c0351461b2"}], "stats": {"total": 69, "additions": 65, "deletions": 4}, "files": [{"sha": "dd95d99d4e1d6d6a1f35fcde9d3951f1f5766058", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e4756e6b07989d1cf195667bcf5d9f780618031a/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4756e6b07989d1cf195667bcf5d9f780618031a/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=e4756e6b07989d1cf195667bcf5d9f780618031a", "patch": "@@ -60,10 +60,12 @@ impl<'tcx, 'interner> Visitor<'tcx> for ItemLowerer<'tcx, 'interner> {\n     fn visit_item(&mut self, item: &'tcx Item) {\n         let mut item_hir_id = None;\n         self.lctx.with_hir_id_owner(item.id, |lctx| {\n-            if let Some(hir_item) = lctx.lower_item(item) {\n-                item_hir_id = Some(hir_item.hir_id);\n-                lctx.insert_item(hir_item);\n-            }\n+            lctx.without_in_scope_lifetime_defs(|lctx| {\n+                if let Some(hir_item) = lctx.lower_item(item) {\n+                    item_hir_id = Some(hir_item.hir_id);\n+                    lctx.insert_item(hir_item);\n+                }\n+            })\n         });\n \n         if let Some(hir_id) = item_hir_id {\n@@ -134,6 +136,28 @@ impl LoweringContext<'_> {\n         res\n     }\n \n+    // Clears (and restores) the `in_scope_lifetimes` field. Used when\n+    // visiting nested items, which never inherit in-scope lifetimes\n+    // from their surrounding environment.\n+    fn without_in_scope_lifetime_defs<T>(\n+        &mut self,\n+        f: impl FnOnce(&mut LoweringContext<'_>) -> T,\n+    ) -> T {\n+        let old_in_scope_lifetimes = std::mem::replace(&mut self.in_scope_lifetimes, vec![]);\n+\n+        // this vector is only used when walking over impl headers,\n+        // input types, and the like, and should not be non-empty in\n+        // between items\n+        assert!(self.lifetimes_to_define.is_empty());\n+\n+        let res = f(self);\n+\n+        assert!(self.in_scope_lifetimes.is_empty());\n+        self.in_scope_lifetimes = old_in_scope_lifetimes;\n+\n+        res\n+    }\n+\n     pub(super) fn lower_mod(&mut self, m: &Mod) -> hir::Mod {\n         hir::Mod {\n             inner: m.inner,"}, {"sha": "3c82160595f1dfda847cd6cd0c10008213950690", "filename": "src/test/ui/async-await/nested-in-impl.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e4756e6b07989d1cf195667bcf5d9f780618031a/src%2Ftest%2Fui%2Fasync-await%2Fnested-in-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4756e6b07989d1cf195667bcf5d9f780618031a/src%2Ftest%2Fui%2Fasync-await%2Fnested-in-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fnested-in-impl.rs?ref=e4756e6b07989d1cf195667bcf5d9f780618031a", "patch": "@@ -0,0 +1,17 @@\n+// Test that async fn works when nested inside of\n+// impls with lifetime parameters.\n+//\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+struct Foo<'a>(&'a ());\n+\n+impl<'a> Foo<'a> {\n+    fn test() {\n+        async fn test() {}\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "7de20712fba94c20196260a61e0f27124c6cb420", "filename": "src/test/ui/in-band-lifetimes/nested-items.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e4756e6b07989d1cf195667bcf5d9f780618031a/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fnested-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4756e6b07989d1cf195667bcf5d9f780618031a/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fnested-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fnested-items.rs?ref=e4756e6b07989d1cf195667bcf5d9f780618031a", "patch": "@@ -0,0 +1,20 @@\n+// Test that the `'a` from the impl doesn't\n+// prevent us from creating a `'a` parameter\n+// on the `blah` function.\n+//\n+// check-pass\n+\n+#![feature(in_band_lifetimes)]\n+\n+struct Foo<'a> {\n+    x: &'a u32\n+\n+}\n+\n+impl Foo<'a> {\n+    fn method(&self) {\n+        fn blah(f: Foo<'a>) { }\n+    }\n+}\n+\n+fn main() { }"}]}