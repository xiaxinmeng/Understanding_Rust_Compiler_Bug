{"sha": "f110c206097e9483cbe68be50eca80ac63abcbbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMTBjMjA2MDk3ZTk0ODNjYmU2OGJlNTBlY2E4MGFjNjNhYmNiYmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-26T06:18:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-26T18:12:20Z"}, "message": "Join the process server after running all compile tests", "tree": {"sha": "608543cd9141a042c45ce5e463ff3c11b5d6fa96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/608543cd9141a042c45ce5e463ff3c11b5d6fa96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f110c206097e9483cbe68be50eca80ac63abcbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f110c206097e9483cbe68be50eca80ac63abcbbd", "html_url": "https://github.com/rust-lang/rust/commit/f110c206097e9483cbe68be50eca80ac63abcbbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f110c206097e9483cbe68be50eca80ac63abcbbd/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "067cb6d53751b2c93d3e1ea45e7547069f865e6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/067cb6d53751b2c93d3e1ea45e7547069f865e6a", "html_url": "https://github.com/rust-lang/rust/commit/067cb6d53751b2c93d3e1ea45e7547069f865e6a"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "2bca022eeb4f0107532f125e37335f6d2b3cffaa", "filename": "src/test/compiletest/compiletest.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f110c206097e9483cbe68be50eca80ac63abcbbd/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f110c206097e9483cbe68be50eca80ac63abcbbd/src%2Ftest%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fcompiletest.rs?ref=f110c206097e9483cbe68be50eca80ac63abcbbd", "patch": "@@ -525,7 +525,8 @@ mod procsrv {\n     export run;\n     export close;\n \n-    type handle = chan[request];\n+    type handle = rec(option::t[task] task,\n+                      chan[request] chan);\n \n     tag request {\n         exec(str, str, vec[str], chan[response]);\n@@ -535,22 +536,28 @@ mod procsrv {\n     type response = rec(int pid, int outfd);\n \n     fn mk() -> handle {\n-        task::worker(worker).chan\n+        auto res = task::worker(worker);\n+        ret rec(task = option::some(res.task),\n+                chan = res.chan);\n     }\n \n     fn clone(&handle handle) -> handle {\n-        task::clone_chan(handle)\n+        // Sharing tasks across tasks appears to be (yet another) recipe for\n+        // disaster, so our handle clones will not get the task pointer.\n+        rec(task = option::none,\n+            chan = task::clone_chan(handle.chan))\n     }\n \n     fn close(&handle handle) {\n-        task::send(handle, stop);\n+        task::send(handle.chan, stop);\n+        task::join(option::get(handle.task));\n     }\n \n     fn run(&handle handle, &str lib_path,\n            &str prog, &vec[str] args) -> rec(int status, str out) {\n         auto p = port[response]();\n         auto ch = chan(p);\n-        task::send(handle,\n+        task::send(handle.chan,\n                    exec(lib_path, prog, args, ch));\n \n         auto resp = task::recv(p);"}]}