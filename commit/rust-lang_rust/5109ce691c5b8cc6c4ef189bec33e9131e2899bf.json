{"sha": "5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMDljZTY5MWM1YjhjYzZjNGVmMTg5YmVjMzNlOTEzMWUyODk5YmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-26T06:49:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-26T06:49:40Z"}, "message": "auto merge of #7924 : alexcrichton/rust/opt-lang-xcrate2, r=thestinger\n\nThis is a reopening of #7874", "tree": {"sha": "45fa9ffad1f5f8d87718fecec6f63675dd194841", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45fa9ffad1f5f8d87718fecec6f63675dd194841"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "html_url": "https://github.com/rust-lang/rust/commit/5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0012b5008b32543cf61a2beba36160c42f36d704", "url": "https://api.github.com/repos/rust-lang/rust/commits/0012b5008b32543cf61a2beba36160c42f36d704", "html_url": "https://github.com/rust-lang/rust/commit/0012b5008b32543cf61a2beba36160c42f36d704"}, {"sha": "09e49a8e6c11e57142a0f628745142d94fc87444", "url": "https://api.github.com/repos/rust-lang/rust/commits/09e49a8e6c11e57142a0f628745142d94fc87444", "html_url": "https://github.com/rust-lang/rust/commit/09e49a8e6c11e57142a0f628745142d94fc87444"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "d6287d457c18a95b5647d629e23a55140804552b", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "patch": "@@ -1455,6 +1455,9 @@ fn encode_lang_items(ecx: &EncodeContext, ebml_w: &mut writer::Encoder) {\n     ebml_w.start_tag(tag_lang_items);\n \n     for ecx.tcx.lang_items.each_item |def_id, i| {\n+        let def_id = match def_id {\n+            Some(id) => id, None => { loop }\n+        };\n         if def_id.crate != local_crate {\n             loop;\n         }"}, {"sha": "54e7a2fd7e72b8e8655f35d57594bb2e3b45cabe", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "patch": "@@ -92,8 +92,8 @@ impl LanguageItems {\n         }\n     }\n \n-    pub fn each_item(&self, f: &fn(def_id: def_id, i: uint) -> bool) -> bool {\n-        self.items.iter().enumerate().advance(|(i, &item)| f(item.get(), i))\n+    pub fn each_item(&self, f: &fn(Option<def_id>, uint) -> bool) -> bool {\n+        self.items.iter().enumerate().advance(|(i, &item)| f(item, i))\n     }\n \n     pub fn item_name(index: uint) -> &'static str {"}, {"sha": "70f1b76e246ce532bfde69e4459e899e40bfba66", "filename": "src/test/auxiliary/no_std_crate.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fno_std_crate.rs?ref=5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "patch": "@@ -0,0 +1,3 @@\n+#[no_std];\n+\n+pub fn foo() {}"}, {"sha": "104e33b7488e07edafbfc92433f8bfca56f97eaa", "filename": "src/test/run-pass/no-std-xcrate.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Ftest%2Frun-pass%2Fno-std-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Ftest%2Frun-pass%2Fno-std-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-std-xcrate.rs?ref=5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast\n+// aux-build:no_std_crate.rs\n+\n+// This tests that crates which link to std can also be linked to crates with\n+// #[no_std] that have no lang items.\n+\n+extern mod no_std_crate;\n+\n+fn main() {\n+    no_std_crate::foo();\n+}"}, {"sha": "e393eb3a5c9d379151e1d8bae864fe03767df408", "filename": "src/test/run-pass/no-std-xcrate2.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5109ce691c5b8cc6c4ef189bec33e9131e2899bf/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-std-xcrate2.rs?ref=5109ce691c5b8cc6c4ef189bec33e9131e2899bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test: this has weird linking problems on linux, and it probably needs a\n+//             solution along the lines of disabling segmented stacks and/or the\n+//             stack checks.\n+// aux-build:no_std_crate.rs\n+\n+// This tests that libraries built with #[no_std] can be linked to crates with\n+// #[no_std] and actually run.\n+\n+#[no_std];\n+\n+extern mod no_std_crate;\n+\n+// This is an unfortunate thing to have to do on linux :(\n+#[cfg(target_os = \"linux\")]\n+#[doc(hidden)]\n+pub mod linkhack {\n+    #[link_args=\"-lrustrt -lrt\"]\n+    extern {}\n+}\n+\n+#[start]\n+fn main(_: int, _: **u8, _: *u8) -> int {\n+    no_std_crate::foo();\n+    0\n+}"}]}