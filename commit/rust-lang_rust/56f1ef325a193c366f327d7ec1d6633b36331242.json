{"sha": "56f1ef325a193c366f327d7ec1d6633b36331242", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZjFlZjMyNWExOTNjMzY2ZjMyN2Q3ZWMxZDY2MzNiMzYzMzEyNDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-17T09:29:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-17T09:29:16Z"}, "message": "remove spurious assignments", "tree": {"sha": "b7695e80d54f1df34a458d1c857b3c1c33ba9619", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7695e80d54f1df34a458d1c857b3c1c33ba9619"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56f1ef325a193c366f327d7ec1d6633b36331242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56f1ef325a193c366f327d7ec1d6633b36331242", "html_url": "https://github.com/rust-lang/rust/commit/56f1ef325a193c366f327d7ec1d6633b36331242", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56f1ef325a193c366f327d7ec1d6633b36331242/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "662821f7f732f85e05b85e59ee45747dc52fc2c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/662821f7f732f85e05b85e59ee45747dc52fc2c8", "html_url": "https://github.com/rust-lang/rust/commit/662821f7f732f85e05b85e59ee45747dc52fc2c8"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "509db0355e2ba3bc14399a74b4f76905a567d075", "filename": "src/fn_call.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56f1ef325a193c366f327d7ec1d6633b36331242/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56f1ef325a193c366f327d7ec1d6633b36331242/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=56f1ef325a193c366f327d7ec1d6633b36331242", "patch": "@@ -316,7 +316,6 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx, 'mir> for super::MiriEvalCo\n \n             \"memrchr\" => {\n                 let ptr = self.read_scalar(args[0])?.not_undef()?;\n-                let ptr = ptr;\n                 let val = self.read_scalar(args[1])?.to_bytes()? as u8;\n                 let num = self.read_scalar(args[2])?.to_usize(self)?;\n                 if let Some(idx) = self.memory().read_bytes(ptr, Size::from_bytes(num))?\n@@ -331,7 +330,6 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx, 'mir> for super::MiriEvalCo\n \n             \"memchr\" => {\n                 let ptr = self.read_scalar(args[0])?.not_undef()?;\n-                let ptr = ptr;\n                 let val = self.read_scalar(args[1])?.to_bytes()? as u8;\n                 let num = self.read_scalar(args[2])?.to_usize(self)?;\n                 if let Some(idx) = self.memory().read_bytes(ptr, Size::from_bytes(num))?.iter().position("}]}