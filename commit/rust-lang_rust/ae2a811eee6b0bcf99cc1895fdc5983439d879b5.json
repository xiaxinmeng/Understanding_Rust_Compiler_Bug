{"sha": "ae2a811eee6b0bcf99cc1895fdc5983439d879b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMmE4MTFlZWU2YjBiY2Y5OWNjMTg5NWZkYzU5ODM0MzlkODc5YjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-05T15:47:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-05T15:47:28Z"}, "message": "Auto merge of #1305 - ssomers:map_first_last_vs_miri, r=RalfJung\n\nReplace last_entry with last_key_value\n\nWondering why `last_entry` was introduced (in #1156) while the alternative is shorter and seems clearer to me.\n\nAlso, as the perpetrator of map_first_last, I now think that `first_entry`/`last_entry` are silly methods because they're supposed to be constant time (as opposed to `entry`), so there's no money to be made by doing multiple things with the entry.", "tree": {"sha": "d2900a1eb486445177879b1e7550bf1e37bef898", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2900a1eb486445177879b1e7550bf1e37bef898"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae2a811eee6b0bcf99cc1895fdc5983439d879b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae2a811eee6b0bcf99cc1895fdc5983439d879b5", "html_url": "https://github.com/rust-lang/rust/commit/ae2a811eee6b0bcf99cc1895fdc5983439d879b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae2a811eee6b0bcf99cc1895fdc5983439d879b5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1f053764f3bd200c4c723cfa396592b657b06c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f053764f3bd200c4c723cfa396592b657b06c1", "html_url": "https://github.com/rust-lang/rust/commit/b1f053764f3bd200c4c723cfa396592b657b06c1"}, {"sha": "e7fafa190478bfbf6dfe661d8d02dc126fd86840", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fafa190478bfbf6dfe661d8d02dc126fd86840", "html_url": "https://github.com/rust-lang/rust/commit/e7fafa190478bfbf6dfe661d8d02dc126fd86840"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c70cc874164f1da4a9faf165405fe8586703c63f", "filename": "src/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae2a811eee6b0bcf99cc1895fdc5983439d879b5/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae2a811eee6b0bcf99cc1895fdc5983439d879b5/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=ae2a811eee6b0bcf99cc1895fdc5983439d879b5", "patch": "@@ -56,7 +56,7 @@ impl FileHandler {\n         let new_fd = candidate_new_fd.unwrap_or_else(|| {\n             // find_map ran out of BTreeMap entries before finding a free fd, use one plus the\n             // maximum fd in the map\n-            self.handles.last_entry().map(|entry| entry.key().checked_add(1).unwrap()).unwrap_or(min_fd)\n+            self.handles.last_key_value().map(|(fd, _)| fd.checked_add(1).unwrap()).unwrap_or(min_fd)\n         });\n \n         self.handles.insert(new_fd, file_handle).unwrap_none();"}]}