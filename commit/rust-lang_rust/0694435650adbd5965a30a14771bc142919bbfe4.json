{"sha": "0694435650adbd5965a30a14771bc142919bbfe4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2OTQ0MzU2NTBhZGJkNTk2NWEzMGExNDc3MWJjMTQyOTE5YmJmZTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-19T15:25:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-21T10:36:17Z"}, "message": "implement exit\n\nimplement exit code via new error kind", "tree": {"sha": "b3b96a6d594941c25abbe1bce934f6b081c37d08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3b96a6d594941c25abbe1bce934f6b081c37d08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0694435650adbd5965a30a14771bc142919bbfe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0694435650adbd5965a30a14771bc142919bbfe4", "html_url": "https://github.com/rust-lang/rust/commit/0694435650adbd5965a30a14771bc142919bbfe4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0694435650adbd5965a30a14771bc142919bbfe4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "788616d0f010fd7307ffe3b19d19415bae7782ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/788616d0f010fd7307ffe3b19d19415bae7782ed", "html_url": "https://github.com/rust-lang/rust/commit/788616d0f010fd7307ffe3b19d19415bae7782ed"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "fae9b1d599a424000608c34bbf0c768a5e54d8c3", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0694435650adbd5965a30a14771bc142919bbfe4/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/0694435650adbd5965a30a14771bc142919bbfe4/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=0694435650adbd5965a30a14771bc142919bbfe4", "patch": "@@ -1 +1 @@\n-130dc3e7dac132cf30272ccf4541b512828e2108\n+9224be5fa39f6170f6e046342976efee5453a1ff"}, {"sha": "2f827510aa5d032c42f8084e34349f9756fcc296", "filename": "src/fn_call.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0694435650adbd5965a30a14771bc142919bbfe4/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0694435650adbd5965a30a14771bc142919bbfe4/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=0694435650adbd5965a30a14771bc142919bbfe4", "patch": "@@ -69,11 +69,15 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n         let link_name = link_name.get().trim_end_matches(\"$UNIX2003\");\n         let tcx = &{this.tcx.tcx};\n \n-        // First: functions that could diverge.\n+        // First: functions that diverge.\n         match link_name {\n             \"__rust_start_panic\" | \"panic_impl\" => {\n                 return err!(MachineError(\"the evaluated program panicked\".to_string()));\n             }\n+            \"exit\" => {\n+                let code = this.read_scalar(args[0])?.to_i32()?;\n+                return err!(Exit(code));\n+            }\n             _ => if dest.is_none() {\n                 return err!(Unimplemented(\n                     format!(\"can't call diverging foreign function: {}\", link_name),"}, {"sha": "683eee0cb7a381862f61f876d026d75b20711418", "filename": "src/lib.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0694435650adbd5965a30a14771bc142919bbfe4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0694435650adbd5965a30a14771bc142919bbfe4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=0694435650adbd5965a30a14771bc142919bbfe4", "patch": "@@ -242,6 +242,13 @@ pub fn eval_main<'a, 'tcx: 'a>(\n             }\n         }\n         Err(mut e) => {\n+            // Special treatment for some error kinds\n+            let msg = match e.kind {\n+                InterpError::Exit(code) => std::process::exit(code),\n+                InterpError::NoMirFor(..) =>\n+                    format!(\"{}. Did you set `MIRI_SYSROOT` to a Miri-enabled sysroot? You can prepare one with `cargo miri setup`.\", e),\n+                _ => e.to_string()\n+            };\n             e.print_backtrace();\n             if let Some(frame) = ecx.stack().last() {\n                 let block = &frame.mir.basic_blocks()[frame.block];\n@@ -251,11 +258,10 @@ pub fn eval_main<'a, 'tcx: 'a>(\n                     block.terminator().source_info.span\n                 };\n \n-                let e = e.to_string();\n-                let msg = format!(\"constant evaluation error: {}\", e);\n+                let msg = format!(\"Miri evaluation error: {}\", msg);\n                 let mut err = struct_error(ecx.tcx.tcx.at(span), msg.as_str());\n                 let frames = ecx.generate_stacktrace(None);\n-                err.span_label(span, e);\n+                err.span_label(span, msg);\n                 // We iterate with indices because we need to look at the next frame (the caller).\n                 for idx in 0..frames.len() {\n                     let frame_info = &frames[idx];\n@@ -269,7 +275,7 @@ pub fn eval_main<'a, 'tcx: 'a>(\n                 }\n                 err.emit();\n             } else {\n-                ecx.tcx.sess.err(&e.to_string());\n+                ecx.tcx.sess.err(&msg);\n             }\n \n             for (i, frame) in ecx.stack().iter().enumerate() {"}, {"sha": "d93f0045377efcd20f258f84c39d62320f3be1c7", "filename": "tests/run-pass/exit.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0694435650adbd5965a30a14771bc142919bbfe4/tests%2Frun-pass%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0694435650adbd5965a30a14771bc142919bbfe4/tests%2Frun-pass%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fexit.rs?ref=0694435650adbd5965a30a14771bc142919bbfe4", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    std::process::exit(0)\n+}"}]}