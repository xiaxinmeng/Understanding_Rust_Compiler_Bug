{"sha": "23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYmZhMzk2YTA1NTY0ZmI4ZTE2ZGIyNmJmNWViM2M4ZDdlOTA5Yjg=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2018-03-15T15:08:49Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2018-03-16T09:54:49Z"}, "message": "Format code\n\nSigned-off-by: Mateusz Miku\u0142a <mati865@gmail.com>", "tree": {"sha": "d2f8c3ada619d5cb6c84ee8deb91f787e38ea3c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2f8c3ada619d5cb6c84ee8deb91f787e38ea3c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "html_url": "https://github.com/rust-lang/rust/commit/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb9b982c539a7392030a78321187fa83eee9ad9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb9b982c539a7392030a78321187fa83eee9ad9", "html_url": "https://github.com/rust-lang/rust/commit/cfb9b982c539a7392030a78321187fa83eee9ad9"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "78bccb74ab9c3027599dd7b03d04aae1994c1c5c", "filename": "src/driver.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "patch": "@@ -193,7 +193,5 @@ pub fn main() {\n     }\n \n     let mut ccc = ClippyCompilerCalls::new(clippy_enabled);\n-    rustc_driver::run(move || {\n-        rustc_driver::run_compiler(&args, &mut ccc, None, None)\n-    });\n+    rustc_driver::run(move || rustc_driver::run_compiler(&args, &mut ccc, None, None));\n }"}, {"sha": "95e1fc0c28c0c05997da9ae3bf3737732e826d7e", "filename": "src/main.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "patch": "@@ -67,7 +67,10 @@ pub fn main() {\n     let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref)) {\n         metadata\n     } else {\n-        println!(\"{:?}\", cargo_metadata::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref)));\n+        println!(\n+            \"{:?}\",\n+            cargo_metadata::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref))\n+        );\n         let _ = io::stderr().write_fmt(format_args!(\"error: Could not obtain cargo metadata.\\n\"));\n         process::exit(101);\n     };"}, {"sha": "9b9820f2b521894e44c64e33f9532c5fb232fa19", "filename": "tests/compile-test.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "patch": "@@ -3,7 +3,7 @@\n extern crate compiletest_rs as compiletest;\n extern crate test;\n \n-use std::path::{PathBuf, Path};\n+use std::path::{Path, PathBuf};\n use std::env::{set_var, var};\n \n fn clippy_driver_path() -> PathBuf {\n@@ -43,7 +43,10 @@ fn config(dir: &'static str, mode: &'static str) -> compiletest::Config {\n         config.run_lib_path = rustc_lib_path();\n         config.compile_lib_path = rustc_lib_path();\n     }\n-    config.target_rustcflags = Some(format!(\"-L {0} -L {0}/deps -Dwarnings\", host_libs().display()));\n+    config.target_rustcflags = Some(format!(\n+        \"-L {0} -L {0}/deps -Dwarnings\",\n+        host_libs().display()\n+    ));\n \n     config.mode = cfg_mode;\n     config.build_base = if rustc_test_suite().is_some() {"}, {"sha": "ed6451a3eb68e0c2dced9c4bf3046ef0a3d68aae", "filename": "tests/dogfood.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "patch": "@@ -11,9 +11,12 @@ fn dogfood() {\n         std::env::set_current_dir(root_dir.join(d)).unwrap();\n         let output = std::process::Command::new(\"cargo\")\n             .arg(\"run\")\n-            .arg(\"--bin\").arg(\"cargo-clippy\")\n-            .arg(\"--manifest-path\").arg(root_dir.join(\"Cargo.toml\"))\n-            .output().unwrap();\n+            .arg(\"--bin\")\n+            .arg(\"cargo-clippy\")\n+            .arg(\"--manifest-path\")\n+            .arg(root_dir.join(\"Cargo.toml\"))\n+            .output()\n+            .unwrap();\n         println!(\"status: {}\", output.status);\n         println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n         println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));"}, {"sha": "8dfb8e42d6f029f44372dfa3ecec44ff4a81cbc0", "filename": "tests/matches.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmatches.rs?ref=23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "patch": "@@ -9,16 +9,17 @@ fn test_overlapping() {\n     use clippy_lints::matches::overlapping;\n     use syntax::codemap::DUMMY_SP;\n \n-    let sp = |s, e| {\n-        clippy_lints::matches::SpannedRange {\n-            span: DUMMY_SP,\n-            node: (s, e),\n-        }\n+    let sp = |s, e| clippy_lints::matches::SpannedRange {\n+        span: DUMMY_SP,\n+        node: (s, e),\n     };\n \n     assert_eq!(None, overlapping::<u8>(&[]));\n     assert_eq!(None, overlapping(&[sp(1, Bound::Included(4))]));\n-    assert_eq!(None, overlapping(&[sp(1, Bound::Included(4)), sp(5, Bound::Included(6))]));\n+    assert_eq!(\n+        None,\n+        overlapping(&[sp(1, Bound::Included(4)), sp(5, Bound::Included(6))])\n+    );\n     assert_eq!(\n         None,\n         overlapping(&["}, {"sha": "588dc741d03c9276a56e96fd27778ab5e50a9bc7", "filename": "tests/needless_continue_helpers.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fneedless_continue_helpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fneedless_continue_helpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fneedless_continue_helpers.rs?ref=23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "patch": "@@ -69,7 +69,6 @@ fn test_erode_from_front_no_brace() {\n     assert_eq!(expected, got);\n }\n \n-\n #[test]\n #[cfg_attr(rustfmt, rustfmt_skip)]\n fn test_erode_block() {"}, {"sha": "ff4af08a8a01e27718eb93f8f2fada82494122cc", "filename": "tests/versioncheck.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fversioncheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bfa396a05564fb8e16db26bf5eb3c8d7e909b8/tests%2Fversioncheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fversioncheck.rs?ref=23bfa396a05564fb8e16db26bf5eb3c8d7e909b8", "patch": "@@ -7,10 +7,16 @@ fn check_that_clippy_lints_has_the_same_version_as_clippy() {\n     let clippy_meta = cargo_metadata::metadata(None).expect(\"could not obtain cargo metadata\");\n     std::env::set_current_dir(std::env::current_dir().unwrap().join(\"clippy_lints\")).unwrap();\n     let clippy_lints_meta = cargo_metadata::metadata(None).expect(\"could not obtain cargo metadata\");\n-    assert_eq!(clippy_lints_meta.packages[0].version, clippy_meta.packages[0].version);\n+    assert_eq!(\n+        clippy_lints_meta.packages[0].version,\n+        clippy_meta.packages[0].version\n+    );\n     for package in &clippy_meta.packages[0].dependencies {\n         if package.name == \"clippy_lints\" {\n-            assert_eq!(VersionReq::parse(&clippy_lints_meta.packages[0].version).unwrap(), package.req);\n+            assert_eq!(\n+                VersionReq::parse(&clippy_lints_meta.packages[0].version).unwrap(),\n+                package.req\n+            );\n             return;\n         }\n     }"}]}