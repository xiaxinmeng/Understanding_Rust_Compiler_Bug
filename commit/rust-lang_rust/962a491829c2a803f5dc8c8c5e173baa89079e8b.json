{"sha": "962a491829c2a803f5dc8c8c5e173baa89079e8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MmE0OTE4MjljMmE4MDNmNWRjOGM4YzVlMTczYmFhODkwNzllOGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-01T11:31:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-01T11:31:35Z"}, "message": "Some docs", "tree": {"sha": "9315ed8fc3926c87d1da830eb7e554c0ed80590a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9315ed8fc3926c87d1da830eb7e554c0ed80590a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/962a491829c2a803f5dc8c8c5e173baa89079e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/962a491829c2a803f5dc8c8c5e173baa89079e8b", "html_url": "https://github.com/rust-lang/rust/commit/962a491829c2a803f5dc8c8c5e173baa89079e8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/962a491829c2a803f5dc8c8c5e173baa89079e8b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6f9a0bf35f073e554a340f04e213867732d81a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6f9a0bf35f073e554a340f04e213867732d81a1", "html_url": "https://github.com/rust-lang/rust/commit/f6f9a0bf35f073e554a340f04e213867732d81a1"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "d21be3a88c3905a8b66760ccfe7b8d19aed38e6c", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/962a491829c2a803f5dc8c8c5e173baa89079e8b/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/962a491829c2a803f5dc8c8c5e173baa89079e8b/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=962a491829c2a803f5dc8c8c5e173baa89079e8b", "patch": "@@ -1,3 +1,6 @@\n+//! ra_analyzer crate is the brain of Rust analyzer. It relies on the `salsa`\n+//! crate, which provides and incremental on-deman database of facts.\n+\n extern crate fst;\n extern crate ra_editor;\n extern crate ra_syntax;\n@@ -95,6 +98,7 @@ impl AnalysisChange {\n     }\n }\n \n+/// `AnalysisHost` stores the current state of the world.\n #[derive(Debug)]\n pub struct AnalysisHost {\n     imp: AnalysisHostImpl,\n@@ -106,11 +110,15 @@ impl AnalysisHost {\n             imp: AnalysisHostImpl::new(),\n         }\n     }\n+    /// Returns a snapshot of the current state, which you can query for\n+    /// semantic information.\n     pub fn analysis(&self) -> Analysis {\n         Analysis {\n             imp: self.imp.analysis(),\n         }\n     }\n+    /// Applies changes to the current state of the world. If there are\n+    /// outstanding snapshots, they will be canceled.\n     pub fn apply_change(&mut self, change: AnalysisChange) {\n         self.imp.apply_change(change)\n     }\n@@ -191,6 +199,10 @@ impl Query {\n     }\n }\n \n+/// Analysis is a snapshot of a world state at a moment in time. It is the main\n+/// entry point for asking semantic information about the world. When the world\n+/// state is advanced using `AnalysisHost::apply_change` method, all existing\n+/// `Analysis` are canceled (most method return `Err(Canceled)`).\n #[derive(Debug)]\n pub struct Analysis {\n     pub(crate) imp: AnalysisImpl,"}]}