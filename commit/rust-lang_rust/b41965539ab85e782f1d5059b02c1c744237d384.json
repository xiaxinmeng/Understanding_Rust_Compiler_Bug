{"sha": "b41965539ab85e782f1d5059b02c1c744237d384", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MTk2NTUzOWFiODVlNzgyZjFkNTA1OWIwMmMxYzc0NDIzN2QzODQ=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-10-23T19:20:43Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-10-23T19:39:26Z"}, "message": "Bump match inner block indent a level", "tree": {"sha": "b22732ba3563a6ab762623b4f8c58516f80d8971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b22732ba3563a6ab762623b4f8c58516f80d8971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b41965539ab85e782f1d5059b02c1c744237d384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b41965539ab85e782f1d5059b02c1c744237d384", "html_url": "https://github.com/rust-lang/rust/commit/b41965539ab85e782f1d5059b02c1c744237d384", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b41965539ab85e782f1d5059b02c1c744237d384/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e76fad1f55945c196b32e6629ebaecc4ebfda74", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e76fad1f55945c196b32e6629ebaecc4ebfda74", "html_url": "https://github.com/rust-lang/rust/commit/7e76fad1f55945c196b32e6629ebaecc4ebfda74"}], "stats": {"total": 61, "additions": 56, "deletions": 5}, "files": [{"sha": "00d8ea0e0e26b9afc85a09d9fe3052b3a44bfc9d", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b41965539ab85e782f1d5059b02c1c744237d384/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b41965539ab85e782f1d5059b02c1c744237d384/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b41965539ab85e782f1d5059b02c1c744237d384", "patch": "@@ -863,7 +863,7 @@ impl Rewrite for ast::Arm {\n             // If the patterns were previously stacked, keep them stacked.\n             let pat_span = mk_sp(pats[0].span.lo, pats[pats.len() - 1].span.hi);\n             let pat_str = context.snippet(pat_span);\n-            vertical = pat_str.find('\\n').is_some();\n+            vertical = pat_str.contains('\\n');\n         }\n \n         let pats_width = if vertical {\n@@ -922,10 +922,9 @@ impl Rewrite for ast::Arm {\n         }\n \n         let body_budget = try_opt!(width.checked_sub(context.config.tab_spaces));\n-        let next_line_body = nop_block_collapse(body.rewrite(context,\n-                                                             body_budget,\n-                                                             context.block_indent\n-                                                                    .block_indent(context.config)),\n+        let indent = context.block_indent.block_indent(context.config);\n+        let inner_context = &RewriteContext { block_indent: indent, ..*context };\n+        let next_line_body = nop_block_collapse(body.rewrite(inner_context, body_budget, indent),\n                                                 body_budget);\n \n         let body_str = try_opt!(match_arm_heuristic(same_line_body.as_ref().map(|x| &x[..]),"}, {"sha": "9277319295e104eed1f9fc7c96b32a218115dd8d", "filename": "tests/source/match.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b41965539ab85e782f1d5059b02c1c744237d384/tests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b41965539ab85e782f1d5059b02c1c744237d384/tests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch.rs?ref=b41965539ab85e782f1d5059b02c1c744237d384", "patch": "@@ -243,3 +243,23 @@ fn issue508() {\n         Some(NodeTypeId::Element(_)) => false,\n     }\n }\n+\n+fn issue496() {{{{\n+    match def {\n+        def::DefConst(def_id) | def::DefAssociatedConst(def_id) =>\n+            match const_eval::lookup_const_by_id(cx.tcx, def_id, Some(self.pat.id)) {\n+                Some(const_expr) => { x }}}}}}}\n+\n+fn issue494() {\n+    {\n+        match stmt.node {\n+             hir::StmtExpr(ref expr, id) | hir::StmtSemi(ref expr, id) =>\n+                result.push(\n+                    StmtRef::Mirror(\n+                        Box::new(Stmt { span: stmt.span,\n+                                        kind: StmtKind::Expr {\n+                                            scope: cx.tcx.region_maps.node_extent(id),\n+                                            expr: expr.to_ref() } }))),\n+        }\n+    }\n+}"}, {"sha": "4df098eb4d1ed586edf7b355e6cad1b2205c6d23", "filename": "tests/target/match.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b41965539ab85e782f1d5059b02c1c744237d384/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b41965539ab85e782f1d5059b02c1c744237d384/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=b41965539ab85e782f1d5059b02c1c744237d384", "patch": "@@ -247,3 +247,35 @@ fn issue508() {\n         Some(NodeTypeId::Element(_)) => false,\n     }\n }\n+\n+fn issue496() {\n+    {\n+        {\n+            {\n+                match def {\n+                    def::DefConst(def_id) | def::DefAssociatedConst(def_id) =>\n+                        match const_eval::lookup_const_by_id(cx.tcx, def_id, Some(self.pat.id)) {\n+                            Some(const_expr) => {\n+                                x\n+                            }\n+                        },\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+fn issue494() {\n+    {\n+        match stmt.node {\n+            hir::StmtExpr(ref expr, id) | hir::StmtSemi(ref expr, id) =>\n+                result.push(StmtRef::Mirror(Box::new(Stmt {\n+                    span: stmt.span,\n+                    kind: StmtKind::Expr {\n+                        scope: cx.tcx.region_maps.node_extent(id),\n+                        expr: expr.to_ref(),\n+                    },\n+                }))),\n+        }\n+    }\n+}"}]}