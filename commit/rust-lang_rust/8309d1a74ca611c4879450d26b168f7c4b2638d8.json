{"sha": "8309d1a74ca611c4879450d26b168f7c4b2638d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMDlkMWE3NGNhNjExYzQ4Nzk0NTBkMjZiMTY4ZjdjNGIyNjM4ZDg=", "commit": {"author": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-05-02T03:01:46Z"}, "committer": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-05-05T20:39:34Z"}, "message": "deps: Update syntex_syntax to 0.32.0", "tree": {"sha": "c5632f8d74a43d49bc627678e00108909abce1f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5632f8d74a43d49bc627678e00108909abce1f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8309d1a74ca611c4879450d26b168f7c4b2638d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8309d1a74ca611c4879450d26b168f7c4b2638d8", "html_url": "https://github.com/rust-lang/rust/commit/8309d1a74ca611c4879450d26b168f7c4b2638d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8309d1a74ca611c4879450d26b168f7c4b2638d8/comments", "author": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47631e2a5cdb081ccbbbd643f336781ace09196c", "url": "https://api.github.com/repos/rust-lang/rust/commits/47631e2a5cdb081ccbbbd643f336781ace09196c", "html_url": "https://github.com/rust-lang/rust/commit/47631e2a5cdb081ccbbbd643f336781ace09196c"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "71d4280ed93c05d1b8efd8519f755493de50d38f", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8309d1a74ca611c4879450d26b168f7c4b2638d8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8309d1a74ca611c4879450d26b168f7c4b2638d8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8309d1a74ca611c4879450d26b168f7c4b2638d8", "patch": "@@ -9,7 +9,7 @@ dependencies = [\n  \"regex 0.1.63 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strings 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syntex_syntax 0.31.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syntex_syntax 0.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-segmentation 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -111,7 +111,7 @@ dependencies = [\n \n [[package]]\n name = \"syntex_syntax\"\n-version = \"0.31.0\"\n+version = \"0.32.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "69ed0a108c71a708c293abeef67d7864a3c6bb07", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8309d1a74ca611c4879450d26b168f7c4b2638d8/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8309d1a74ca611c4879450d26b168f7c4b2638d8/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=8309d1a74ca611c4879450d26b168f7c4b2638d8", "patch": "@@ -21,7 +21,7 @@ regex = \"0.1\"\n term = \"0.4\"\n strings = \"0.0.1\"\n diff = \"0.1\"\n-syntex_syntax = \"0.31\"\n+syntex_syntax = \"0.32\"\n log = \"0.3\"\n env_logger = \"0.3\"\n getopts = \"0.2\""}, {"sha": "32fd5f561c3f5ceab2f68562ff172034509d2cda", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8309d1a74ca611c4879450d26b168f7c4b2638d8/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8309d1a74ca611c4879450d26b168f7c4b2638d8/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=8309d1a74ca611c4879450d26b168f7c4b2638d8", "patch": "@@ -145,7 +145,7 @@ impl Rewrite for ast::Expr {\n                 };\n                 wrap_str(format!(\"break{}\", id_str), context.config.max_width, width, offset)\n             }\n-            ast::ExprKind::Closure(capture, ref fn_decl, ref body) => {\n+            ast::ExprKind::Closure(capture, ref fn_decl, ref body, _) => {\n                 rewrite_closure(capture, fn_decl, body, self.span, context, width, offset)\n             }\n             ast::ExprKind::Field(..) |"}, {"sha": "f3b4d1859a1b83fbbcbe06da94fe8d0b5ea1b125", "filename": "src/items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8309d1a74ca611c4879450d26b168f7c4b2638d8/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8309d1a74ca611c4879450d26b168f7c4b2638d8/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8309d1a74ca611c4879450d26b168f7c4b2638d8", "patch": "@@ -1061,7 +1061,7 @@ pub fn rewrite_associated_type(ident: ast::Ident,\n     let prefix = format!(\"type {}\", ident);\n \n     let type_bounds_str = if let Some(ty_param_bounds) = ty_param_bounds_opt {\n-        let bounds: &[_] = &ty_param_bounds.as_slice();\n+        let bounds: &[_] = &ty_param_bounds;\n         let bound_str = bounds.iter()\n             .filter_map(|ty_bound| ty_bound.rewrite(context, context.config.max_width, indent))\n             .collect::<Vec<String>>()\n@@ -1188,7 +1188,7 @@ pub fn span_hi_for_arg(arg: &ast::Arg) -> BytePos {\n \n pub fn is_named_arg(arg: &ast::Arg) -> bool {\n     if let ast::PatKind::Ident(_, ident, _) = arg.pat.node {\n-        ident.node != token::special_idents::invalid\n+        ident.node != token::keywords::Invalid.ident()\n     } else {\n         true\n     }\n@@ -1704,7 +1704,7 @@ fn rewrite_trait_bounds(context: &RewriteContext,\n                         indent: Indent,\n                         width: usize)\n                         -> Option<String> {\n-    let bounds: &[_] = &type_param_bounds.as_slice();\n+    let bounds: &[_] = &type_param_bounds;\n \n     if bounds.is_empty() {\n         return Some(String::new());"}, {"sha": "c7d4dd55469c4a7c0b0bb0233077913b2fd144de", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8309d1a74ca611c4879450d26b168f7c4b2638d8/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8309d1a74ca611c4879450d26b168f7c4b2638d8/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=8309d1a74ca611c4879450d26b168f7c4b2638d8", "patch": "@@ -72,7 +72,7 @@ pub fn format_visibility(vis: &Visibility) -> Option<&'static str> {\n         Visibility::Public => Some(\"pub \"),\n         Visibility::Inherited => Some(\"\"),\n         // FIXME(#970): Handle new visibility types.\n-        Visibility::Crate => None,\n+        Visibility::Crate(_) => None,\n         Visibility::Restricted { .. } => None,\n     }\n }"}]}