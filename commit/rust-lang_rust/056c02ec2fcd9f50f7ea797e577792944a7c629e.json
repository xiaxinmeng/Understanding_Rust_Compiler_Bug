{"sha": "056c02ec2fcd9f50f7ea797e577792944a7c629e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NmMwMmVjMmZjZDlmNTBmN2VhNzk3ZTU3Nzc5Mjk0NGE3YzYyOWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-13T22:23:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-13T22:23:29Z"}, "message": "Rollup merge of #59735 - matklad:deadcode, r=sanxiyn\n\nremove lookup_char_pos_adj\n\nIt is now exactly equivalent to lookup_char_pos.", "tree": {"sha": "49f6a28975f17873605ab79351c9fee2300396e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49f6a28975f17873605ab79351c9fee2300396e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/056c02ec2fcd9f50f7ea797e577792944a7c629e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsmFhCRBK7hj4Ov3rIwAAdHIIACsWyvZJniVaVhw3zpVexeyb\nXpZGYFpnqa7sX9ZPN42vJrZl30gLal/xpVUgCebkIZyVjAxnb+GDZqdBANtk1duL\n0mzxaTiUhVunWU4O7Bvlfm6/bYqE/e05d8qOIFd7WqJTNJ/2qky2dU+pIo0fFZz2\nJx13v4pmFDQZrkvRSNx4gqc4rCZiElYbbTqlR38MlqQ4MWvXN4s4MKPt4WdxOyip\n2+2CZ4XeJOZ2hilEqnTfJtmFOgkxxBKUUmIsxruNcBq2xcQbt8a9C/KAPOYs+5oR\n6wDtx7DMcg2fo+IPXaYfh39YWIW95nLmksv4kQ3wCnBT6thysiiw250axQxC2RA=\n=Kl4X\n-----END PGP SIGNATURE-----\n", "payload": "tree 49f6a28975f17873605ab79351c9fee2300396e4\nparent d5030e24899a6be70889d302560a3fa351608f47\nparent 63080b3c25046b29cbbaef8d587c7da91a302fce\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555194209 +0200\ncommitter GitHub <noreply@github.com> 1555194209 +0200\n\nRollup merge of #59735 - matklad:deadcode, r=sanxiyn\n\nremove lookup_char_pos_adj\n\nIt is now exactly equivalent to lookup_char_pos.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/056c02ec2fcd9f50f7ea797e577792944a7c629e", "html_url": "https://github.com/rust-lang/rust/commit/056c02ec2fcd9f50f7ea797e577792944a7c629e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/056c02ec2fcd9f50f7ea797e577792944a7c629e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5030e24899a6be70889d302560a3fa351608f47", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5030e24899a6be70889d302560a3fa351608f47", "html_url": "https://github.com/rust-lang/rust/commit/d5030e24899a6be70889d302560a3fa351608f47"}, {"sha": "63080b3c25046b29cbbaef8d587c7da91a302fce", "url": "https://api.github.com/repos/rust-lang/rust/commits/63080b3c25046b29cbbaef8d587c7da91a302fce", "html_url": "https://github.com/rust-lang/rust/commit/63080b3c25046b29cbbaef8d587c7da91a302fce"}], "stats": {"total": 39, "additions": 9, "deletions": 30}, "files": [{"sha": "6b2b0c24c77a9f8e7ca59636e6a0a216efed2e61", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=056c02ec2fcd9f50f7ea797e577792944a7c629e", "patch": "@@ -278,7 +278,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn explain_span(self, heading: &str, span: Span) -> (String, Option<Span>) {\n-        let lo = self.sess.source_map().lookup_char_pos_adj(span.lo());\n+        let lo = self.sess.source_map().lookup_char_pos(span.lo());\n         (\n             format!(\"the {} at {}:{}\", heading, lo.line, lo.col.to_usize() + 1),\n             Some(span),"}, {"sha": "b9c4d312adb7b1ea09d8db0b3fc4a5c59c135672", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=056c02ec2fcd9f50f7ea797e577792944a7c629e", "patch": "@@ -65,8 +65,8 @@ impl<'tcx> fmt::Display for FrameInfo<'tcx> {\n                 write!(f, \"inside call to `{}`\", self.instance)?;\n             }\n             if !self.call_site.is_dummy() {\n-                let lo = tcx.sess.source_map().lookup_char_pos_adj(self.call_site.lo());\n-                write!(f, \" at {}:{}:{}\", lo.filename, lo.line, lo.col.to_usize() + 1)?;\n+                let lo = tcx.sess.source_map().lookup_char_pos(self.call_site.lo());\n+                write!(f, \" at {}:{}:{}\", lo.file.name, lo.line, lo.col.to_usize() + 1)?;\n             }\n             Ok(())\n         })"}, {"sha": "53f37bb10bdc0ecfb61bb228826c27c66fea896d", "filename": "src/libsyntax/diagnostics/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs?ref=056c02ec2fcd9f50f7ea797e577792944a7c629e", "patch": "@@ -36,9 +36,9 @@ pub struct ErrorLocation {\n impl ErrorLocation {\n     /// Creates an error location from a span.\n     pub fn from_span(ecx: &ExtCtxt<'_>, sp: Span) -> ErrorLocation {\n-        let loc = ecx.source_map().lookup_char_pos_adj(sp.lo());\n+        let loc = ecx.source_map().lookup_char_pos(sp.lo());\n         ErrorLocation {\n-            filename: loc.filename,\n+            filename: loc.file.name.clone(),\n             line: loc.line\n         }\n     }"}, {"sha": "08abbf5e8a4dc647b912d68488f79866ed838ebb", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=056c02ec2fcd9f50f7ea797e577792944a7c629e", "patch": "@@ -388,16 +388,6 @@ impl SourceMap {\n         }\n     }\n \n-    pub fn lookup_char_pos_adj(&self, pos: BytePos) -> LocWithOpt {\n-        let loc = self.lookup_char_pos(pos);\n-        LocWithOpt {\n-            filename: loc.file.name.clone(),\n-            line: loc.line,\n-            col: loc.col,\n-            file: Some(loc.file)\n-        }\n-    }\n-\n     /// Returns `Some(span)`, a union of the lhs and rhs span. The lhs must precede the rhs. If\n     /// there are gaps between lhs and rhs, the resulting union will cross these gaps.\n     /// For this to work, the spans have to be:\n@@ -438,10 +428,10 @@ impl SourceMap {\n             return \"no-location\".to_string();\n         }\n \n-        let lo = self.lookup_char_pos_adj(sp.lo());\n-        let hi = self.lookup_char_pos_adj(sp.hi());\n+        let lo = self.lookup_char_pos(sp.lo());\n+        let hi = self.lookup_char_pos(sp.hi());\n         format!(\"{}:{}:{}: {}:{}\",\n-                        lo.filename,\n+                        lo.file.name,\n                         lo.line,\n                         lo.col.to_usize() + 1,\n                         hi.line,"}, {"sha": "81cf804cf0b73f7f3fd9bd32039cdcf589aafe89", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056c02ec2fcd9f50f7ea797e577792944a7c629e/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=056c02ec2fcd9f50f7ea797e577792944a7c629e", "patch": "@@ -1295,7 +1295,7 @@ impl Sub for CharPos {\n }\n \n // _____________________________________________________________________________\n-// Loc, LocWithOpt, SourceFileAndLine, SourceFileAndBytePos\n+// Loc, SourceFileAndLine, SourceFileAndBytePos\n //\n \n /// A source code location used for error reporting.\n@@ -1311,17 +1311,6 @@ pub struct Loc {\n     pub col_display: usize,\n }\n \n-/// A source code location used as the result of `lookup_char_pos_adj`.\n-// Actually, *none* of the clients use the filename *or* file field;\n-// perhaps they should just be removed.\n-#[derive(Debug)]\n-pub struct LocWithOpt {\n-    pub filename: FileName,\n-    pub line: usize,\n-    pub col: CharPos,\n-    pub file: Option<Lrc<SourceFile>>,\n-}\n-\n // Used to be structural records.\n #[derive(Debug)]\n pub struct SourceFileAndLine { pub sf: Lrc<SourceFile>, pub line: usize }"}]}