{"sha": "00612e23cb863d6730fe77001068438039d8078b", "node_id": "C_kwDOAAsO6NoAKDAwNjEyZTIzY2I4NjNkNjczMGZlNzcwMDEwNjg0MzgwMzlkODA3OGI", "commit": {"author": {"name": "reez12g", "email": "reez12g@gmail.com", "date": "2022-09-16T11:11:46Z"}, "committer": {"name": "reez12g", "email": "reez12g@gmail.com", "date": "2022-09-29T07:49:23Z"}, "message": "Mark ignore(illustrative) on docs in compiler/rustc_const_eval/src/interpret/validity.rs", "tree": {"sha": "44c080275998bc24b45915c78d6b576eff65f7cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44c080275998bc24b45915c78d6b576eff65f7cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00612e23cb863d6730fe77001068438039d8078b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00612e23cb863d6730fe77001068438039d8078b", "html_url": "https://github.com/rust-lang/rust/commit/00612e23cb863d6730fe77001068438039d8078b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00612e23cb863d6730fe77001068438039d8078b/comments", "author": {"login": "reez12g", "id": 46887885, "node_id": "MDQ6VXNlcjQ2ODg3ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/46887885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reez12g", "html_url": "https://github.com/reez12g", "followers_url": "https://api.github.com/users/reez12g/followers", "following_url": "https://api.github.com/users/reez12g/following{/other_user}", "gists_url": "https://api.github.com/users/reez12g/gists{/gist_id}", "starred_url": "https://api.github.com/users/reez12g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reez12g/subscriptions", "organizations_url": "https://api.github.com/users/reez12g/orgs", "repos_url": "https://api.github.com/users/reez12g/repos", "events_url": "https://api.github.com/users/reez12g/events{/privacy}", "received_events_url": "https://api.github.com/users/reez12g/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reez12g", "id": 46887885, "node_id": "MDQ6VXNlcjQ2ODg3ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/46887885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reez12g", "html_url": "https://github.com/reez12g", "followers_url": "https://api.github.com/users/reez12g/followers", "following_url": "https://api.github.com/users/reez12g/following{/other_user}", "gists_url": "https://api.github.com/users/reez12g/gists{/gist_id}", "starred_url": "https://api.github.com/users/reez12g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reez12g/subscriptions", "organizations_url": "https://api.github.com/users/reez12g/orgs", "repos_url": "https://api.github.com/users/reez12g/repos", "events_url": "https://api.github.com/users/reez12g/events{/privacy}", "received_events_url": "https://api.github.com/users/reez12g/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73775a96dcc04ea4d592be5f21040f2401e0aadd", "url": "https://api.github.com/repos/rust-lang/rust/commits/73775a96dcc04ea4d592be5f21040f2401e0aadd", "html_url": "https://github.com/rust-lang/rust/commit/73775a96dcc04ea4d592be5f21040f2401e0aadd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d4146c2424101b528efbe8fbd8ebb6bd549f36ea", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00612e23cb863d6730fe77001068438039d8078b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00612e23cb863d6730fe77001068438039d8078b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=00612e23cb863d6730fe77001068438039d8078b", "patch": "@@ -56,7 +56,7 @@ macro_rules! throw_validation_failure {\n /// This lets you use the patterns as a kind of validation list, asserting which errors\n /// can possibly happen:\n ///\n-/// ```\n+/// ```ignore(illustrative)\n /// let v = try_validation!(some_fn(), some_path, {\n ///     Foo | Bar | Baz => { \"some failure\" },\n /// });\n@@ -65,7 +65,7 @@ macro_rules! throw_validation_failure {\n /// The patterns must be of type `UndefinedBehaviorInfo`.\n /// An additional expected parameter can also be added to the failure message:\n ///\n-/// ```\n+/// ```ignore(illustrative)\n /// let v = try_validation!(some_fn(), some_path, {\n ///     Foo | Bar | Baz => { \"some failure\" } expected { \"something that wasn't a failure\" },\n /// });\n@@ -74,7 +74,7 @@ macro_rules! throw_validation_failure {\n /// An additional nicety is that both parameters actually take format args, so you can just write\n /// the format string in directly:\n ///\n-/// ```\n+/// ```ignore(illustrative)\n /// let v = try_validation!(some_fn(), some_path, {\n ///     Foo | Bar | Baz => { \"{:?}\", some_failure } expected { \"{}\", expected_value },\n /// });"}]}