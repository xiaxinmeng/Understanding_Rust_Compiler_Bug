{"sha": "7f9d8480d665b8dcc7b1359372e394d455b6e29a", "node_id": "C_kwDOAAsO6NoAKDdmOWQ4NDgwZDY2NWI4ZGNjN2IxMzU5MzcyZTM5NGQ0NTViNmUyOWE", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-29T15:22:27Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-07-05T15:00:21Z"}, "message": "macros: move `sess` out of builder\n\n`sess` field of `SessionDiagnosticDeriveBuilder` is never actually used\nin the builder's member functions, so it doesn't need to be a field.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "189dc4f5467cd9d7d080bcd182e3805f3639f569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/189dc4f5467cd9d7d080bcd182e3805f3639f569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f9d8480d665b8dcc7b1359372e394d455b6e29a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f9d8480d665b8dcc7b1359372e394d455b6e29a", "html_url": "https://github.com/rust-lang/rust/commit/7f9d8480d665b8dcc7b1359372e394d455b6e29a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f9d8480d665b8dcc7b1359372e394d455b6e29a/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "406579ae1326b5a27d034febe75d728c108e707e", "url": "https://api.github.com/repos/rust-lang/rust/commits/406579ae1326b5a27d034febe75d728c108e707e", "html_url": "https://github.com/rust-lang/rust/commit/406579ae1326b5a27d034febe75d728c108e707e"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "27344087fecc5fc05d7a4058de6c0d7791eae460", "filename": "compiler/rustc_macros/src/diagnostics/diagnostic.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f9d8480d665b8dcc7b1359372e394d455b6e29a/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f9d8480d665b8dcc7b1359372e394d455b6e29a/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic.rs?ref=7f9d8480d665b8dcc7b1359372e394d455b6e29a", "patch": "@@ -20,6 +20,7 @@ use synstructure::{BindingInfo, Structure};\n /// The central struct for constructing the `into_diagnostic` method from an annotated struct.\n pub(crate) struct SessionDiagnosticDerive<'a> {\n     structure: Structure<'a>,\n+    sess: syn::Ident,\n     builder: SessionDiagnosticDeriveBuilder,\n }\n \n@@ -28,18 +29,18 @@ impl<'a> SessionDiagnosticDerive<'a> {\n         Self {\n             builder: SessionDiagnosticDeriveBuilder {\n                 diag,\n-                sess,\n                 fields: build_field_mapping(&structure),\n                 kind: None,\n                 code: None,\n                 slug: None,\n             },\n+            sess,\n             structure,\n         }\n     }\n \n     pub(crate) fn into_tokens(self) -> TokenStream {\n-        let SessionDiagnosticDerive { mut structure, mut builder } = self;\n+        let SessionDiagnosticDerive { mut structure, sess, mut builder } = self;\n \n         let ast = structure.ast();\n         let attrs = &ast.attrs;\n@@ -96,7 +97,7 @@ impl<'a> SessionDiagnosticDerive<'a> {\n                     .each(|field_binding| builder.generate_field_attrs_code(field_binding));\n \n                 let span = ast.span().unwrap();\n-                let (diag, sess) = (&builder.diag, &builder.sess);\n+                let diag = &builder.diag;\n                 let init = match (builder.kind, builder.slug) {\n                     (None, _) => {\n                         span_err(span, \"diagnostic kind not specified\")\n@@ -159,7 +160,6 @@ impl<'a> SessionDiagnosticDerive<'a> {\n             }\n         };\n \n-        let sess = &builder.sess;\n         structure.gen_impl(quote! {\n             gen impl<'__session_diagnostic_sess> rustc_session::SessionDiagnostic<'__session_diagnostic_sess, #param_ty>\n                     for @Self\n@@ -200,8 +200,6 @@ impl SessionDiagnosticKind {\n /// only to be able to destructure and split `self.builder` and the `self.structure` up to avoid a\n /// double mut borrow later on.\n struct SessionDiagnosticDeriveBuilder {\n-    /// Name of the session parameter that's passed in to the `as_error` method.\n-    sess: syn::Ident,\n     /// The identifier to use for the generated `DiagnosticBuilder` instance.\n     diag: syn::Ident,\n "}]}