{"sha": "c47ed149b2efe537822632c11d0675bdfb3d790c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0N2VkMTQ5YjJlZmU1Mzc4MjI2MzJjMTFkMDY3NWJkZmIzZDc5MGM=", "commit": {"author": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2019-01-09T16:31:16Z"}, "committer": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2019-01-09T18:59:54Z"}, "message": "save-analysis: Get path def from parent in case there's no def for the path itself.\n\nThis fixes #57462.\n\nThe relevant part from the hir type collector is:\n\n```\nDEBUG 2019-01-09T15:42:58Z: rustc::hir::map::collector: hir_map: NodeId(32) => Entry { parent: NodeId(33), dep_node: 4294967040, node: Expr(expr(32: <Foo>::new)) }\nDEBUG 2019-01-09T15:42:58Z: rustc::hir::map::collector: hir_map: NodeId(48) => Entry { parent: NodeId(32), dep_node: 4294967040, node: Ty(type(Foo)) }\nDEBUG 2019-01-09T15:42:58Z: rustc::hir::map::collector: hir_map: NodeId(30) => Entry { parent: NodeId(48), dep_node: 4294967040, node: PathSegment(PathSegment { ident: Foo#0, id: Some(NodeId(30)), def: Some(Err), args: None, infer_types: true }) }\nDEBUG 2019-01-09T15:42:58Z: rustc::hir::map::collector: hir_map: NodeId(31) => Entry { parent: NodeId(32), dep_node: 4294967040, node: PathSegment(PathSegment { ident: new#0, id: Some(NodeId(31)), def: Some(Err), args: None, infer_types: true }) }\n```\n\nWe have the right ID when looking for NodeId(31) and try with NodeId(32) (which\nis the right thing to look for) from get_path_data, but not for the segments\nthat we write from `write_sub_paths_truncated`.\n\nBasically `process_path` takes an id which is always the parent, and that we\nfall back to in `get_path_data()`, so we get the right result for the last path\nsegment, but not for the other segments that get written to from\n`write_sub_paths_truncated`.\n\nI think we can stop passing the explicit id around to `get_path_data` now, will\nconsider sending that as a followup.", "tree": {"sha": "44c8717ee9cd99e4366d402acc4b3951d01de770", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44c8717ee9cd99e4366d402acc4b3951d01de770"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c47ed149b2efe537822632c11d0675bdfb3d790c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c47ed149b2efe537822632c11d0675bdfb3d790c", "html_url": "https://github.com/rust-lang/rust/commit/c47ed149b2efe537822632c11d0675bdfb3d790c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c47ed149b2efe537822632c11d0675bdfb3d790c/comments", "author": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c97b6ffbf0cec856c0b729c549141b5ac4b2d48", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c97b6ffbf0cec856c0b729c549141b5ac4b2d48", "html_url": "https://github.com/rust-lang/rust/commit/8c97b6ffbf0cec856c0b729c549141b5ac4b2d48"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "00431f86cf588b3dc144274dcd0b32d79d7d3567", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c47ed149b2efe537822632c11d0675bdfb3d790c/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47ed149b2efe537822632c11d0675bdfb3d790c/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=c47ed149b2efe537822632c11d0675bdfb3d790c", "patch": "@@ -622,9 +622,11 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n             Node::Visibility(&Spanned {\n                 node: hir::VisibilityKind::Restricted { ref path, .. }, .. }) => path.def,\n \n-            Node::PathSegment(seg) => match seg.def {\n-                Some(def) => def,\n-                None => HirDef::Err,\n+            Node::PathSegment(seg) => {\n+                match seg.def {\n+                    Some(def) if def != HirDef::Err => def,\n+                    _ => self.get_path_def(self.tcx.hir().get_parent_node(id)),\n+                }\n             },\n             Node::Expr(&hir::Expr {\n                 node: hir::ExprKind::Struct(ref qpath, ..),"}]}