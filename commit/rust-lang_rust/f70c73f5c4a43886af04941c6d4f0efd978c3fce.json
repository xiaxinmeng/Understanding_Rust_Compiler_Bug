{"sha": "f70c73f5c4a43886af04941c6d4f0efd978c3fce", "node_id": "C_kwDOAAsO6NoAKGY3MGM3M2Y1YzRhNDM4ODZhZjA0OTQxYzZkNGYwZWZkOTc4YzNmY2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T00:57:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T00:57:08Z"}, "message": "Auto merge of #8692 - kyoto7250:fixing_unnecessary_to_owned, r=giraffate\n\nfix unnecessary_to_owned about msrv\n\nThis PR fixes ``[`unnecessary_owned`]``.\n\n## What\n\n```rust\n# sample code\nfn _msrv_1_35() {\n    #![clippy::msrv = \"1.35\"]\n    let _ = &[\"x\"][..].to_vec().into_iter();\n}\n\nfn _msrv_1_36() {\n    #![clippy::msrv = \"1.36\"]\n    let _ = &[\"x\"][..].to_vec().into_iter();\n}\n```\n\nIf we will check this code using clippy, ``[`unnecessary_owned`]`` will modify the code as follows.\n\n```rust\nerror: unnecessary use of `to_vec`\n  --> $DIR/unnecessary_to_owned.rs:219:14\n   |\nLL |     let _ = &[\"x\"][..].to_vec().into_iter();\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[\"x\"][..].iter().copied()`\n\nerror: unnecessary use of `to_vec`\n  --> $DIR/unnecessary_to_owned.rs:224:14\n   |\nLL |     let _ = &[\"x\"][..].to_vec().into_iter();\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[\"x\"][..].iter().copied()`\n```\n\nThis is incorrect. Because `Iterator::copied` was estabilished in 1.36.\n\n## Why\n\nThis bug was caused by not separating \"copied\" and \"clone\" by reference to msrv.\n\nhttps://github.com/rust-lang/rust-clippy/blob/89ee6aa6e32df974ef9dbb3c825afbdce441e856/clippy_lints/src/methods/unnecessary_to_owned.rs#L195\n\nSo, I added a conditional branch and described the corresponding test.\n\nThank you in advance.\n\nchangelog: fix wrong suggestions about msrv in [`unnecessary_to_owned`]\n\nr! `@giraffate`", "tree": {"sha": "2ca81b27f9c1950167c5c07aa3fa00086d169dd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ca81b27f9c1950167c5c07aa3fa00086d169dd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f70c73f5c4a43886af04941c6d4f0efd978c3fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f70c73f5c4a43886af04941c6d4f0efd978c3fce", "html_url": "https://github.com/rust-lang/rust/commit/f70c73f5c4a43886af04941c6d4f0efd978c3fce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f70c73f5c4a43886af04941c6d4f0efd978c3fce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06b1695814016a2d7b4b7902520deefbfed809b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/06b1695814016a2d7b4b7902520deefbfed809b5", "html_url": "https://github.com/rust-lang/rust/commit/06b1695814016a2d7b4b7902520deefbfed809b5"}, {"sha": "dfdc5ad7d8f5d3787406a00bab2d1e049a57d1e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfdc5ad7d8f5d3787406a00bab2d1e049a57d1e2", "html_url": "https://github.com/rust-lang/rust/commit/dfdc5ad7d8f5d3787406a00bab2d1e049a57d1e2"}], "stats": {"total": 225, "additions": 138, "deletions": 87}, "files": [{"sha": "f1a74220e6826e2c4734f8b43043fec24445b8ea", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f70c73f5c4a43886af04941c6d4f0efd978c3fce/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70c73f5c4a43886af04941c6d4f0efd978c3fce/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=f70c73f5c4a43886af04941c6d4f0efd978c3fce", "patch": "@@ -2286,7 +2286,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n                 single_char_add_str::check(cx, expr, args);\n                 into_iter_on_ref::check(cx, expr, method_span, method_call.ident.name, args);\n                 single_char_pattern::check(cx, expr, method_call.ident.name, args);\n-                unnecessary_to_owned::check(cx, expr, method_call.ident.name, args);\n+                unnecessary_to_owned::check(cx, expr, method_call.ident.name, args, self.msrv.as_ref());\n             },\n             hir::ExprKind::Binary(op, lhs, rhs) if op.node == hir::BinOpKind::Eq || op.node == hir::BinOpKind::Ne => {\n                 let mut info = BinaryExprInfo {"}, {"sha": "02b882e8b55e041bc14f7afc810a6451b6f24927", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f70c73f5c4a43886af04941c6d4f0efd978c3fce/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70c73f5c4a43886af04941c6d4f0efd978c3fce/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=f70c73f5c4a43886af04941c6d4f0efd978c3fce", "patch": "@@ -5,6 +5,8 @@ use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::{\n     contains_ty, get_associated_type, get_iterator_item_ty, implements_trait, is_copy, peel_mid_ty_refs,\n };\n+use clippy_utils::{meets_msrv, msrvs};\n+\n use clippy_utils::{fn_def_id, get_parent_expr, is_diag_item_method, is_diag_trait_item};\n use rustc_errors::Applicability;\n use rustc_hir::{def_id::DefId, BorrowKind, Expr, ExprKind};\n@@ -13,12 +15,19 @@ use rustc_middle::mir::Mutability;\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, OverloadedDeref};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, SubstsRef};\n use rustc_middle::ty::{self, PredicateKind, ProjectionPredicate, TraitPredicate, Ty};\n+use rustc_semver::RustcVersion;\n use rustc_span::{sym, Symbol};\n use std::cmp::max;\n \n use super::UNNECESSARY_TO_OWNED;\n \n-pub fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>, method_name: Symbol, args: &'tcx [Expr<'tcx>]) {\n+pub fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    expr: &'tcx Expr<'tcx>,\n+    method_name: Symbol,\n+    args: &'tcx [Expr<'tcx>],\n+    msrv: Option<&RustcVersion>,\n+) {\n     if_chain! {\n         if let Some(method_def_id) = cx.typeck_results().type_dependent_def_id(expr.hir_id);\n         if let [receiver] = args;\n@@ -33,7 +42,7 @@ pub fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>, method_name:\n                 if check_addr_of_expr(cx, expr, method_name, method_def_id, receiver) {\n                     return;\n                 }\n-                if check_into_iter_call_arg(cx, expr, method_name, receiver) {\n+                if check_into_iter_call_arg(cx, expr, method_name, receiver, msrv) {\n                     return;\n                 }\n                 check_other_call_arg(cx, expr, method_name, receiver);\n@@ -178,7 +187,13 @@ fn check_addr_of_expr(\n \n /// Checks whether `expr` is an argument in an `into_iter` call and, if so, determines whether its\n /// call of a `to_owned`-like function is unnecessary.\n-fn check_into_iter_call_arg(cx: &LateContext<'_>, expr: &Expr<'_>, method_name: Symbol, receiver: &Expr<'_>) -> bool {\n+fn check_into_iter_call_arg(\n+    cx: &LateContext<'_>,\n+    expr: &Expr<'_>,\n+    method_name: Symbol,\n+    receiver: &Expr<'_>,\n+    msrv: Option<&RustcVersion>,\n+) -> bool {\n     if_chain! {\n         if let Some(parent) = get_parent_expr(cx, expr);\n         if let Some(callee_def_id) = fn_def_id(cx, parent);\n@@ -192,7 +207,7 @@ fn check_into_iter_call_arg(cx: &LateContext<'_>, expr: &Expr<'_>, method_name:\n             if unnecessary_iter_cloned::check_for_loop_iter(cx, parent, method_name, receiver, true) {\n                 return true;\n             }\n-            let cloned_or_copied = if is_copy(cx, item_ty) { \"copied\" } else { \"cloned\" };\n+            let cloned_or_copied = if is_copy(cx, item_ty) && meets_msrv(msrv, &msrvs::ITERATOR_COPIED) { \"copied\" } else { \"cloned\" };\n             // The next suggestion may be incorrect because the removal of the `to_owned`-like\n             // function could cause the iterator to hold a reference to a resource that is used\n             // mutably. See https://github.com/rust-lang/rust-clippy/issues/8148."}, {"sha": "7455e22d49b21f8df93bea25f1095f5beac55983", "filename": "tests/ui/unnecessary_to_owned.fixed", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f70c73f5c4a43886af04941c6d4f0efd978c3fce/tests%2Fui%2Funnecessary_to_owned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f70c73f5c4a43886af04941c6d4f0efd978c3fce/tests%2Fui%2Funnecessary_to_owned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.fixed?ref=f70c73f5c4a43886af04941c6d4f0efd978c3fce", "patch": "@@ -2,6 +2,7 @@\n \n #![allow(clippy::ptr_arg)]\n #![warn(clippy::unnecessary_to_owned)]\n+#![feature(custom_inner_attributes)]\n \n use std::borrow::Cow;\n use std::ffi::{CStr, CString, OsStr, OsString};\n@@ -213,6 +214,17 @@ fn get_file_path(_file_type: &FileType) -> Result<std::path::PathBuf, std::io::E\n \n fn require_string(_: &String) {}\n \n+fn _msrv_1_35() {\n+    #![clippy::msrv = \"1.35\"]\n+    // `copied` was stabilized in 1.36, so clippy should use `cloned`.\n+    let _ = &[\"x\"][..].iter().cloned();\n+}\n+\n+fn _msrv_1_36() {\n+    #![clippy::msrv = \"1.36\"]\n+    let _ = &[\"x\"][..].iter().copied();\n+}\n+\n // https://github.com/rust-lang/rust-clippy/issues/8507\n mod issue_8507 {\n     #![allow(dead_code)]"}, {"sha": "bbcd00ad2204a9a789cee2e457b6d89357aaa223", "filename": "tests/ui/unnecessary_to_owned.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f70c73f5c4a43886af04941c6d4f0efd978c3fce/tests%2Fui%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70c73f5c4a43886af04941c6d4f0efd978c3fce/tests%2Fui%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.rs?ref=f70c73f5c4a43886af04941c6d4f0efd978c3fce", "patch": "@@ -2,6 +2,7 @@\n \n #![allow(clippy::ptr_arg)]\n #![warn(clippy::unnecessary_to_owned)]\n+#![feature(custom_inner_attributes)]\n \n use std::borrow::Cow;\n use std::ffi::{CStr, CString, OsStr, OsString};\n@@ -213,6 +214,17 @@ fn get_file_path(_file_type: &FileType) -> Result<std::path::PathBuf, std::io::E\n \n fn require_string(_: &String) {}\n \n+fn _msrv_1_35() {\n+    #![clippy::msrv = \"1.35\"]\n+    // `copied` was stabilized in 1.36, so clippy should use `cloned`.\n+    let _ = &[\"x\"][..].to_vec().into_iter();\n+}\n+\n+fn _msrv_1_36() {\n+    #![clippy::msrv = \"1.36\"]\n+    let _ = &[\"x\"][..].to_vec().into_iter();\n+}\n+\n // https://github.com/rust-lang/rust-clippy/issues/8507\n mod issue_8507 {\n     #![allow(dead_code)]"}, {"sha": "f9713559e4f7fce4ac6b3d6096ae1e25ee83ee52", "filename": "tests/ui/unnecessary_to_owned.stderr", "status": "modified", "additions": 94, "deletions": 82, "changes": 176, "blob_url": "https://github.com/rust-lang/rust/blob/f70c73f5c4a43886af04941c6d4f0efd978c3fce/tests%2Fui%2Funnecessary_to_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f70c73f5c4a43886af04941c6d4f0efd978c3fce/tests%2Fui%2Funnecessary_to_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.stderr?ref=f70c73f5c4a43886af04941c6d4f0efd978c3fce", "patch": "@@ -1,482 +1,482 @@\n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:150:64\n+  --> $DIR/unnecessary_to_owned.rs:151:64\n    |\n LL |     require_c_str(&CString::from_vec_with_nul(vec![0]).unwrap().to_owned());\n    |                                                                ^^^^^^^^^^^ help: remove this\n    |\n    = note: `-D clippy::redundant-clone` implied by `-D warnings`\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:150:20\n+  --> $DIR/unnecessary_to_owned.rs:151:20\n    |\n LL |     require_c_str(&CString::from_vec_with_nul(vec![0]).unwrap().to_owned());\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:151:40\n+  --> $DIR/unnecessary_to_owned.rs:152:40\n    |\n LL |     require_os_str(&OsString::from(\"x\").to_os_string());\n    |                                        ^^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:151:21\n+  --> $DIR/unnecessary_to_owned.rs:152:21\n    |\n LL |     require_os_str(&OsString::from(\"x\").to_os_string());\n    |                     ^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:152:48\n+  --> $DIR/unnecessary_to_owned.rs:153:48\n    |\n LL |     require_path(&std::path::PathBuf::from(\"x\").to_path_buf());\n    |                                                ^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:152:19\n+  --> $DIR/unnecessary_to_owned.rs:153:19\n    |\n LL |     require_path(&std::path::PathBuf::from(\"x\").to_path_buf());\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:153:35\n+  --> $DIR/unnecessary_to_owned.rs:154:35\n    |\n LL |     require_str(&String::from(\"x\").to_string());\n    |                                   ^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:153:18\n+  --> $DIR/unnecessary_to_owned.rs:154:18\n    |\n LL |     require_str(&String::from(\"x\").to_string());\n    |                  ^^^^^^^^^^^^^^^^^\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:59:36\n+  --> $DIR/unnecessary_to_owned.rs:60:36\n    |\n LL |     require_c_str(&Cow::from(c_str).into_owned());\n    |                                    ^^^^^^^^^^^^^ help: remove this\n    |\n    = note: `-D clippy::unnecessary-to-owned` implied by `-D warnings`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:60:19\n+  --> $DIR/unnecessary_to_owned.rs:61:19\n    |\n LL |     require_c_str(&c_str.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_os_string`\n-  --> $DIR/unnecessary_to_owned.rs:62:20\n+  --> $DIR/unnecessary_to_owned.rs:63:20\n    |\n LL |     require_os_str(&os_str.to_os_string());\n    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:63:38\n+  --> $DIR/unnecessary_to_owned.rs:64:38\n    |\n LL |     require_os_str(&Cow::from(os_str).into_owned());\n    |                                      ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:64:20\n+  --> $DIR/unnecessary_to_owned.rs:65:20\n    |\n LL |     require_os_str(&os_str.to_owned());\n    |                    ^^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_path_buf`\n-  --> $DIR/unnecessary_to_owned.rs:66:18\n+  --> $DIR/unnecessary_to_owned.rs:67:18\n    |\n LL |     require_path(&path.to_path_buf());\n    |                  ^^^^^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:67:34\n+  --> $DIR/unnecessary_to_owned.rs:68:34\n    |\n LL |     require_path(&Cow::from(path).into_owned());\n    |                                  ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:68:18\n+  --> $DIR/unnecessary_to_owned.rs:69:18\n    |\n LL |     require_path(&path.to_owned());\n    |                  ^^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:70:17\n+  --> $DIR/unnecessary_to_owned.rs:71:17\n    |\n LL |     require_str(&s.to_string());\n    |                 ^^^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:71:30\n+  --> $DIR/unnecessary_to_owned.rs:72:30\n    |\n LL |     require_str(&Cow::from(s).into_owned());\n    |                              ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:72:17\n+  --> $DIR/unnecessary_to_owned.rs:73:17\n    |\n LL |     require_str(&s.to_owned());\n    |                 ^^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:73:17\n+  --> $DIR/unnecessary_to_owned.rs:74:17\n    |\n LL |     require_str(&x_ref.to_string());\n    |                 ^^^^^^^^^^^^^^^^^^ help: use: `x_ref.as_ref()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:75:19\n+  --> $DIR/unnecessary_to_owned.rs:76:19\n    |\n LL |     require_slice(&slice.to_vec());\n    |                   ^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:76:36\n+  --> $DIR/unnecessary_to_owned.rs:77:36\n    |\n LL |     require_slice(&Cow::from(slice).into_owned());\n    |                                    ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:77:19\n+  --> $DIR/unnecessary_to_owned.rs:78:19\n    |\n LL |     require_slice(&array.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^ help: use: `array.as_ref()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:78:19\n+  --> $DIR/unnecessary_to_owned.rs:79:19\n    |\n LL |     require_slice(&array_ref.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref.as_ref()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:79:19\n+  --> $DIR/unnecessary_to_owned.rs:80:19\n    |\n LL |     require_slice(&slice.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:80:19\n+  --> $DIR/unnecessary_to_owned.rs:81:19\n    |\n LL |     require_slice(&x_ref.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^ help: use: `x_ref`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:82:42\n+  --> $DIR/unnecessary_to_owned.rs:83:42\n    |\n LL |     require_x(&Cow::<X>::Owned(x.clone()).into_owned());\n    |                                          ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:83:15\n+  --> $DIR/unnecessary_to_owned.rs:84:15\n    |\n LL |     require_x(&x_ref.to_owned());\n    |               ^^^^^^^^^^^^^^^^^ help: use: `x_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:85:25\n+  --> $DIR/unnecessary_to_owned.rs:86:25\n    |\n LL |     require_deref_c_str(c_str.to_owned());\n    |                         ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:86:26\n+  --> $DIR/unnecessary_to_owned.rs:87:26\n    |\n LL |     require_deref_os_str(os_str.to_owned());\n    |                          ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:87:24\n+  --> $DIR/unnecessary_to_owned.rs:88:24\n    |\n LL |     require_deref_path(path.to_owned());\n    |                        ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:88:23\n+  --> $DIR/unnecessary_to_owned.rs:89:23\n    |\n LL |     require_deref_str(s.to_owned());\n    |                       ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:89:25\n+  --> $DIR/unnecessary_to_owned.rs:90:25\n    |\n LL |     require_deref_slice(slice.to_owned());\n    |                         ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:91:30\n+  --> $DIR/unnecessary_to_owned.rs:92:30\n    |\n LL |     require_impl_deref_c_str(c_str.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:92:31\n+  --> $DIR/unnecessary_to_owned.rs:93:31\n    |\n LL |     require_impl_deref_os_str(os_str.to_owned());\n    |                               ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:93:29\n+  --> $DIR/unnecessary_to_owned.rs:94:29\n    |\n LL |     require_impl_deref_path(path.to_owned());\n    |                             ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:94:28\n+  --> $DIR/unnecessary_to_owned.rs:95:28\n    |\n LL |     require_impl_deref_str(s.to_owned());\n    |                            ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:95:30\n+  --> $DIR/unnecessary_to_owned.rs:96:30\n    |\n LL |     require_impl_deref_slice(slice.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:97:29\n+  --> $DIR/unnecessary_to_owned.rs:98:29\n    |\n LL |     require_deref_str_slice(s.to_owned(), slice.to_owned());\n    |                             ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:97:43\n+  --> $DIR/unnecessary_to_owned.rs:98:43\n    |\n LL |     require_deref_str_slice(s.to_owned(), slice.to_owned());\n    |                                           ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:98:29\n+  --> $DIR/unnecessary_to_owned.rs:99:29\n    |\n LL |     require_deref_slice_str(slice.to_owned(), s.to_owned());\n    |                             ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:98:47\n+  --> $DIR/unnecessary_to_owned.rs:99:47\n    |\n LL |     require_deref_slice_str(slice.to_owned(), s.to_owned());\n    |                                               ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:100:26\n+  --> $DIR/unnecessary_to_owned.rs:101:26\n    |\n LL |     require_as_ref_c_str(c_str.to_owned());\n    |                          ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:101:27\n+  --> $DIR/unnecessary_to_owned.rs:102:27\n    |\n LL |     require_as_ref_os_str(os_str.to_owned());\n    |                           ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:102:25\n+  --> $DIR/unnecessary_to_owned.rs:103:25\n    |\n LL |     require_as_ref_path(path.to_owned());\n    |                         ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:103:24\n+  --> $DIR/unnecessary_to_owned.rs:104:24\n    |\n LL |     require_as_ref_str(s.to_owned());\n    |                        ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:104:24\n+  --> $DIR/unnecessary_to_owned.rs:105:24\n    |\n LL |     require_as_ref_str(x.to_owned());\n    |                        ^^^^^^^^^^^^ help: use: `&x`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:105:26\n+  --> $DIR/unnecessary_to_owned.rs:106:26\n    |\n LL |     require_as_ref_slice(array.to_owned());\n    |                          ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:106:26\n+  --> $DIR/unnecessary_to_owned.rs:107:26\n    |\n LL |     require_as_ref_slice(array_ref.to_owned());\n    |                          ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:107:26\n+  --> $DIR/unnecessary_to_owned.rs:108:26\n    |\n LL |     require_as_ref_slice(slice.to_owned());\n    |                          ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:109:31\n+  --> $DIR/unnecessary_to_owned.rs:110:31\n    |\n LL |     require_impl_as_ref_c_str(c_str.to_owned());\n    |                               ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:110:32\n+  --> $DIR/unnecessary_to_owned.rs:111:32\n    |\n LL |     require_impl_as_ref_os_str(os_str.to_owned());\n    |                                ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:111:30\n+  --> $DIR/unnecessary_to_owned.rs:112:30\n    |\n LL |     require_impl_as_ref_path(path.to_owned());\n    |                              ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:112:29\n+  --> $DIR/unnecessary_to_owned.rs:113:29\n    |\n LL |     require_impl_as_ref_str(s.to_owned());\n    |                             ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:113:29\n+  --> $DIR/unnecessary_to_owned.rs:114:29\n    |\n LL |     require_impl_as_ref_str(x.to_owned());\n    |                             ^^^^^^^^^^^^ help: use: `&x`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:114:31\n+  --> $DIR/unnecessary_to_owned.rs:115:31\n    |\n LL |     require_impl_as_ref_slice(array.to_owned());\n    |                               ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:115:31\n+  --> $DIR/unnecessary_to_owned.rs:116:31\n    |\n LL |     require_impl_as_ref_slice(array_ref.to_owned());\n    |                               ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:116:31\n+  --> $DIR/unnecessary_to_owned.rs:117:31\n    |\n LL |     require_impl_as_ref_slice(slice.to_owned());\n    |                               ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:118:30\n+  --> $DIR/unnecessary_to_owned.rs:119:30\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array.to_owned());\n    |                              ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:118:44\n+  --> $DIR/unnecessary_to_owned.rs:119:44\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array.to_owned());\n    |                                            ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:119:30\n+  --> $DIR/unnecessary_to_owned.rs:120:30\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array_ref.to_owned());\n    |                              ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:119:44\n+  --> $DIR/unnecessary_to_owned.rs:120:44\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array_ref.to_owned());\n    |                                            ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:120:30\n+  --> $DIR/unnecessary_to_owned.rs:121:30\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), slice.to_owned());\n    |                              ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:120:44\n+  --> $DIR/unnecessary_to_owned.rs:121:44\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), slice.to_owned());\n    |                                            ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:121:30\n+  --> $DIR/unnecessary_to_owned.rs:122:30\n    |\n LL |     require_as_ref_slice_str(array.to_owned(), s.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:121:48\n+  --> $DIR/unnecessary_to_owned.rs:122:48\n    |\n LL |     require_as_ref_slice_str(array.to_owned(), s.to_owned());\n    |                                                ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:122:30\n+  --> $DIR/unnecessary_to_owned.rs:123:30\n    |\n LL |     require_as_ref_slice_str(array_ref.to_owned(), s.to_owned());\n    |                              ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:122:52\n+  --> $DIR/unnecessary_to_owned.rs:123:52\n    |\n LL |     require_as_ref_slice_str(array_ref.to_owned(), s.to_owned());\n    |                                                    ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:123:30\n+  --> $DIR/unnecessary_to_owned.rs:124:30\n    |\n LL |     require_as_ref_slice_str(slice.to_owned(), s.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:123:48\n+  --> $DIR/unnecessary_to_owned.rs:124:48\n    |\n LL |     require_as_ref_slice_str(slice.to_owned(), s.to_owned());\n    |                                                ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:125:20\n+  --> $DIR/unnecessary_to_owned.rs:126:20\n    |\n LL |     let _ = x.join(&x_ref.to_string());\n    |                    ^^^^^^^^^^^^^^^^^^ help: use: `x_ref`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:127:13\n+  --> $DIR/unnecessary_to_owned.rs:128:13\n    |\n LL |     let _ = slice.to_vec().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:128:13\n+  --> $DIR/unnecessary_to_owned.rs:129:13\n    |\n LL |     let _ = slice.to_owned().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:129:13\n+  --> $DIR/unnecessary_to_owned.rs:130:13\n    |\n LL |     let _ = [std::path::PathBuf::new()][..].to_vec().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:130:13\n+  --> $DIR/unnecessary_to_owned.rs:131:13\n    |\n LL |     let _ = [std::path::PathBuf::new()][..].to_owned().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:132:13\n+  --> $DIR/unnecessary_to_owned.rs:133:13\n    |\n LL |     let _ = IntoIterator::into_iter(slice.to_vec());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:133:13\n+  --> $DIR/unnecessary_to_owned.rs:134:13\n    |\n LL |     let _ = IntoIterator::into_iter(slice.to_owned());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:134:13\n+  --> $DIR/unnecessary_to_owned.rs:135:13\n    |\n LL |     let _ = IntoIterator::into_iter([std::path::PathBuf::new()][..].to_vec());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:135:13\n+  --> $DIR/unnecessary_to_owned.rs:136:13\n    |\n LL |     let _ = IntoIterator::into_iter([std::path::PathBuf::new()][..].to_owned());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:196:14\n+  --> $DIR/unnecessary_to_owned.rs:197:14\n    |\n LL |     for t in file_types.to_vec() {\n    |              ^^^^^^^^^^^^^^^^^^^\n@@ -491,11 +491,23 @@ LL -         let path = match get_file_path(&t) {\n LL +         let path = match get_file_path(t) {\n    | \n \n+error: unnecessary use of `to_vec`\n+  --> $DIR/unnecessary_to_owned.rs:220:14\n+   |\n+LL |     let _ = &[\"x\"][..].to_vec().into_iter();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[\"x\"][..].iter().cloned()`\n+\n+error: unnecessary use of `to_vec`\n+  --> $DIR/unnecessary_to_owned.rs:225:14\n+   |\n+LL |     let _ = &[\"x\"][..].to_vec().into_iter();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[\"x\"][..].iter().copied()`\n+\n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:260:24\n+  --> $DIR/unnecessary_to_owned.rs:272:24\n    |\n LL |         Box::new(build(y.to_string()))\n    |                        ^^^^^^^^^^^^^ help: use: `y`\n \n-error: aborting due to 77 previous errors\n+error: aborting due to 79 previous errors\n "}]}