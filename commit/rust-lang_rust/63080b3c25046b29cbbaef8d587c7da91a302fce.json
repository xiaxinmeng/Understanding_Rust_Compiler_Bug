{"sha": "63080b3c25046b29cbbaef8d587c7da91a302fce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMDgwYjNjMjUwNDZiMjljYmJhZWY4ZDU4N2M3ZGE5MWEzMDJmY2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-05T19:42:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-05T20:16:09Z"}, "message": "remove lookup_char_pos_adj\n\nIt is now exactly equivalent to lookup_char_pos.", "tree": {"sha": "79968cdec1e90a69c1de5b372e30f9c26f2ea8ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79968cdec1e90a69c1de5b372e30f9c26f2ea8ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63080b3c25046b29cbbaef8d587c7da91a302fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63080b3c25046b29cbbaef8d587c7da91a302fce", "html_url": "https://github.com/rust-lang/rust/commit/63080b3c25046b29cbbaef8d587c7da91a302fce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63080b3c25046b29cbbaef8d587c7da91a302fce/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20dbf28624db446c0cf67be4cc71a85931947907", "url": "https://api.github.com/repos/rust-lang/rust/commits/20dbf28624db446c0cf67be4cc71a85931947907", "html_url": "https://github.com/rust-lang/rust/commit/20dbf28624db446c0cf67be4cc71a85931947907"}], "stats": {"total": 39, "additions": 9, "deletions": 30}, "files": [{"sha": "8cfcc466b4019bce4551e45941b6d82379b765a8", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=63080b3c25046b29cbbaef8d587c7da91a302fce", "patch": "@@ -278,7 +278,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn explain_span(self, heading: &str, span: Span) -> (String, Option<Span>) {\n-        let lo = self.sess.source_map().lookup_char_pos_adj(span.lo());\n+        let lo = self.sess.source_map().lookup_char_pos(span.lo());\n         (\n             format!(\"the {} at {}:{}\", heading, lo.line, lo.col.to_usize() + 1),\n             Some(span),"}, {"sha": "b9c4d312adb7b1ea09d8db0b3fc4a5c59c135672", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=63080b3c25046b29cbbaef8d587c7da91a302fce", "patch": "@@ -65,8 +65,8 @@ impl<'tcx> fmt::Display for FrameInfo<'tcx> {\n                 write!(f, \"inside call to `{}`\", self.instance)?;\n             }\n             if !self.call_site.is_dummy() {\n-                let lo = tcx.sess.source_map().lookup_char_pos_adj(self.call_site.lo());\n-                write!(f, \" at {}:{}:{}\", lo.filename, lo.line, lo.col.to_usize() + 1)?;\n+                let lo = tcx.sess.source_map().lookup_char_pos(self.call_site.lo());\n+                write!(f, \" at {}:{}:{}\", lo.file.name, lo.line, lo.col.to_usize() + 1)?;\n             }\n             Ok(())\n         })"}, {"sha": "53f37bb10bdc0ecfb61bb228826c27c66fea896d", "filename": "src/libsyntax/diagnostics/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs?ref=63080b3c25046b29cbbaef8d587c7da91a302fce", "patch": "@@ -36,9 +36,9 @@ pub struct ErrorLocation {\n impl ErrorLocation {\n     /// Creates an error location from a span.\n     pub fn from_span(ecx: &ExtCtxt<'_>, sp: Span) -> ErrorLocation {\n-        let loc = ecx.source_map().lookup_char_pos_adj(sp.lo());\n+        let loc = ecx.source_map().lookup_char_pos(sp.lo());\n         ErrorLocation {\n-            filename: loc.filename,\n+            filename: loc.file.name.clone(),\n             line: loc.line\n         }\n     }"}, {"sha": "08abbf5e8a4dc647b912d68488f79866ed838ebb", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=63080b3c25046b29cbbaef8d587c7da91a302fce", "patch": "@@ -388,16 +388,6 @@ impl SourceMap {\n         }\n     }\n \n-    pub fn lookup_char_pos_adj(&self, pos: BytePos) -> LocWithOpt {\n-        let loc = self.lookup_char_pos(pos);\n-        LocWithOpt {\n-            filename: loc.file.name.clone(),\n-            line: loc.line,\n-            col: loc.col,\n-            file: Some(loc.file)\n-        }\n-    }\n-\n     /// Returns `Some(span)`, a union of the lhs and rhs span. The lhs must precede the rhs. If\n     /// there are gaps between lhs and rhs, the resulting union will cross these gaps.\n     /// For this to work, the spans have to be:\n@@ -438,10 +428,10 @@ impl SourceMap {\n             return \"no-location\".to_string();\n         }\n \n-        let lo = self.lookup_char_pos_adj(sp.lo());\n-        let hi = self.lookup_char_pos_adj(sp.hi());\n+        let lo = self.lookup_char_pos(sp.lo());\n+        let hi = self.lookup_char_pos(sp.hi());\n         format!(\"{}:{}:{}: {}:{}\",\n-                        lo.filename,\n+                        lo.file.name,\n                         lo.line,\n                         lo.col.to_usize() + 1,\n                         hi.line,"}, {"sha": "81cf804cf0b73f7f3fd9bd32039cdcf589aafe89", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63080b3c25046b29cbbaef8d587c7da91a302fce/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=63080b3c25046b29cbbaef8d587c7da91a302fce", "patch": "@@ -1295,7 +1295,7 @@ impl Sub for CharPos {\n }\n \n // _____________________________________________________________________________\n-// Loc, LocWithOpt, SourceFileAndLine, SourceFileAndBytePos\n+// Loc, SourceFileAndLine, SourceFileAndBytePos\n //\n \n /// A source code location used for error reporting.\n@@ -1311,17 +1311,6 @@ pub struct Loc {\n     pub col_display: usize,\n }\n \n-/// A source code location used as the result of `lookup_char_pos_adj`.\n-// Actually, *none* of the clients use the filename *or* file field;\n-// perhaps they should just be removed.\n-#[derive(Debug)]\n-pub struct LocWithOpt {\n-    pub filename: FileName,\n-    pub line: usize,\n-    pub col: CharPos,\n-    pub file: Option<Lrc<SourceFile>>,\n-}\n-\n // Used to be structural records.\n #[derive(Debug)]\n pub struct SourceFileAndLine { pub sf: Lrc<SourceFile>, pub line: usize }"}]}