{"sha": "5d0135e222448e637ec1d66b3dd5c0805884dedd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMDEzNWUyMjI0NDhlNjM3ZWMxZDY2YjNkZDVjMDgwNTg4NGRlZGQ=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-05-18T19:39:56Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-05-21T12:11:11Z"}, "message": "Add documentation for testing cargo lints", "tree": {"sha": "8de4aee122a73a75f3b483121f642c932b193957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8de4aee122a73a75f3b483121f642c932b193957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d0135e222448e637ec1d66b3dd5c0805884dedd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d0135e222448e637ec1d66b3dd5c0805884dedd", "html_url": "https://github.com/rust-lang/rust/commit/5d0135e222448e637ec1d66b3dd5c0805884dedd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d0135e222448e637ec1d66b3dd5c0805884dedd/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eb6adf47579e3c56b38ba6cce7676e8d2d5beb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb6adf47579e3c56b38ba6cce7676e8d2d5beb0", "html_url": "https://github.com/rust-lang/rust/commit/1eb6adf47579e3c56b38ba6cce7676e8d2d5beb0"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "75768681db93c7ed34a133602e403feb103f3b3d", "filename": "doc/adding_lints.md", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5d0135e222448e637ec1d66b3dd5c0805884dedd/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/5d0135e222448e637ec1d66b3dd5c0805884dedd/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=5d0135e222448e637ec1d66b3dd5c0805884dedd", "patch": "@@ -42,8 +42,10 @@ case), and we don't need type information so it will have an early pass type\n `cargo dev new_lint --name=foo_functions --pass=early --category=pedantic`\n (category will default to nursery if not provided). This command will create\n two files: `tests/ui/foo_functions.rs` and `clippy_lints/src/foo_functions.rs`,\n-as well as run `cargo dev update_lints` to register the new lint. Next, we'll\n-open up these files and add our lint!\n+as well as run `cargo dev update_lints` to register the new lint. For cargo lints,\n+two project hierarchies (fail/pass) will be created under `tests/ui-cargo`.\n+\n+Next, we'll open up these files and add our lint!\n \n ## Testing\n \n@@ -105,6 +107,19 @@ our lint, we need to commit the generated `.stderr` files, too. In general, you\n should only commit files changed by `tests/ui/update-all-references.sh` for the\n specific lint you are creating/editing.\n \n+### Cargo lints\n+\n+For cargo lints, the process of testing differs in that we are interested in\n+the contents of the `Cargo.toml` files. If our new lint is named e.g. `foo_categories`,\n+after running `cargo dev new_lint` we will find two new manifest files:\n+\n+* `tests/ui-cargo/foo_categories/fail/Cargo.toml`: this file should cause the new lint to raise an error.\n+* `tests/ui-cargo/foo_categories/pass/Cargo.toml`: this file should not trigger the lint.\n+\n+The process of generating the `.stderr` file is the same, and prepending the `TESTNAME`\n+variable to `cargo uitest` works too, but the script to update the references\n+is in another path: `tests/ui-cargo/update-all-references.sh`.\n+\n ## Rustfix tests\n \n If the lint you are working on is making use of structured suggestions, the"}]}