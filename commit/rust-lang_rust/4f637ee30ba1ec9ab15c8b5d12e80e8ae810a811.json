{"sha": "4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "node_id": "C_kwDOAAsO6NoAKDRmNjM3ZWUzMGJhMWVjOWFiMTVjOGI1ZDEyZTgwZThhZTgxMGE4MTE", "commit": {"author": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2022-05-15T13:15:45Z"}, "committer": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2022-05-15T13:15:45Z"}, "message": "fix use of SetHandleInformation on UWP", "tree": {"sha": "90cf41579ed2657fa5f3b65653d3c3262e6d408f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90cf41579ed2657fa5f3b65653d3c3262e6d408f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "html_url": "https://github.com/rust-lang/rust/commit/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/comments", "author": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1ec3260d79497080ca86540562d410ba67d2a95", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1ec3260d79497080ca86540562d410ba67d2a95", "html_url": "https://github.com/rust-lang/rust/commit/e1ec3260d79497080ca86540562d410ba67d2a95"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "0ecac6b447570503f17951036dc032077824f97d", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "patch": "@@ -206,6 +206,7 @@ impl OwnedHandle {\n     }\n \n     /// Allow child processes to inherit the handle.\n+    #[cfg(not(target_vendor = \"uwp\"))]\n     pub(crate) fn set_inheritable(&self) -> io::Result<()> {\n         cvt(unsafe {\n             c::SetHandleInformation("}, {"sha": "7231fe7d1b622fa74f25f6a224b9f55507695a80", "filename": "library/std/src/os/windows/io/socket.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs?ref=4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "patch": "@@ -10,6 +10,7 @@ use crate::mem;\n use crate::mem::forget;\n use crate::sys;\n use crate::sys::c;\n+#[cfg(not(target_vendor = \"uwp\"))]\n use crate::sys::cvt;\n \n /// A borrowed socket."}, {"sha": "c319cb28630f553ee956fe5f570e289edc98cf07", "filename": "library/std/src/sys/windows/handle.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs?ref=4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "patch": "@@ -221,6 +221,7 @@ impl Handle {\n         Ok(Self(self.0.duplicate(access, inherit, options)?))\n     }\n \n+    #[cfg(not(target_vendor = \"uwp\"))]\n     pub(crate) fn set_inheritable(&self) -> io::Result<()> {\n         self.0.set_inheritable()\n     }"}, {"sha": "2c586f1abe4335977286efbcbd5363f9f425a6d3", "filename": "library/std/src/sys/windows/pipe.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpipe.rs?ref=4f637ee30ba1ec9ab15c8b5d12e80e8ae810a811", "patch": "@@ -57,10 +57,21 @@ impl Pipes {\n             } else {\n                 let (ours, theirs) = if ours_readable { (read, write) } else { (write, read) };\n                 let ours = Handle::from_raw_handle(ours);\n+                #[cfg(not(target_vendor = \"uwp\"))]\n                 let theirs = Handle::from_raw_handle(theirs);\n+                #[cfg(target_vendor = \"uwp\")]\n+                let mut theirs = Handle::from_raw_handle(theirs);\n \n                 if their_handle_inheritable {\n-                    theirs.set_inheritable()?;\n+                    #[cfg(not(target_vendor = \"uwp\"))]\n+                    {\n+                        theirs.set_inheritable()?;\n+                    }\n+\n+                    #[cfg(target_vendor = \"uwp\")]\n+                    {\n+                        theirs = theirs.duplicate(0, true, c::DUPLICATE_SAME_ACCESS)?;\n+                    }\n                 }\n \n                 Ok(Pipes { ours: AnonPipe::Sync(ours), theirs: AnonPipe::Sync(theirs) })"}]}