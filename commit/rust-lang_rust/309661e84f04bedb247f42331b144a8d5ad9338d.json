{"sha": "309661e84f04bedb247f42331b144a8d5ad9338d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOTY2MWU4NGYwNGJlZGIyNDdmNDIzMzFiMTQ0YThkNWFkOTMzOGQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-31T14:22:23Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-31T14:22:23Z"}, "message": "InstCombine: Don't optimize `&mut *x` into `x`", "tree": {"sha": "c90618016682eae6016c50167a344bb77ef99922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c90618016682eae6016c50167a344bb77ef99922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/309661e84f04bedb247f42331b144a8d5ad9338d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/309661e84f04bedb247f42331b144a8d5ad9338d", "html_url": "https://github.com/rust-lang/rust/commit/309661e84f04bedb247f42331b144a8d5ad9338d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/309661e84f04bedb247f42331b144a8d5ad9338d/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6fa392238a459c29a47e2cf824d79a49a8ba039", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6fa392238a459c29a47e2cf824d79a49a8ba039", "html_url": "https://github.com/rust-lang/rust/commit/b6fa392238a459c29a47e2cf824d79a49a8ba039"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "7967137e01e5424f954cfcfc2e6510724dee5717", "filename": "src/librustc_mir/transform/instcombine.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs?ref=309661e84f04bedb247f42331b144a8d5ad9338d", "patch": "@@ -1,11 +1,12 @@\n //! Performs various peephole optimizations.\n \n use crate::transform::{MirPass, MirSource};\n-use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_hir::Mutability;\n use rustc_index::vec::Idx;\n use rustc_middle::mir::visit::{MutVisitor, Visitor};\n use rustc_middle::mir::{\n-    Body, Constant, Local, Location, Mutability, Operand, Place, PlaceRef, ProjectionElem, Rvalue,\n+    Body, Constant, Local, Location, Operand, Place, PlaceRef, ProjectionElem, Rvalue,\n };\n use rustc_middle::ty::{self, TyCtxt};\n use std::mem;\n@@ -39,7 +40,7 @@ impl<'tcx> MutVisitor<'tcx> for InstCombineVisitor<'tcx> {\n     }\n \n     fn visit_rvalue(&mut self, rvalue: &mut Rvalue<'tcx>, location: Location) {\n-        if let Some(mtbl) = self.optimizations.and_stars.remove(&location) {\n+        if self.optimizations.and_stars.remove(&location) {\n             debug!(\"replacing `&*`: {:?}\", rvalue);\n             let new_place = match rvalue {\n                 Rvalue::Ref(_, _, place) => {\n@@ -57,10 +58,7 @@ impl<'tcx> MutVisitor<'tcx> for InstCombineVisitor<'tcx> {\n                 }\n                 _ => bug!(\"Detected `&*` but didn't find `&*`!\"),\n             };\n-            *rvalue = Rvalue::Use(match mtbl {\n-                Mutability::Mut => Operand::Move(new_place),\n-                Mutability::Not => Operand::Copy(new_place),\n-            });\n+            *rvalue = Rvalue::Use(Operand::Copy(new_place))\n         }\n \n         if let Some(constant) = self.optimizations.arrays_lengths.remove(&location) {\n@@ -93,8 +91,8 @@ impl Visitor<'tcx> for OptimizationFinder<'b, 'tcx> {\n             {\n                 // The dereferenced place must have type `&_`.\n                 let ty = Place::ty_from(local, proj_base, self.body, self.tcx).ty;\n-                if let ty::Ref(_, _, mtbl) = ty.kind {\n-                    self.optimizations.and_stars.insert(location, mtbl);\n+                if let ty::Ref(_, _, Mutability::Not) = ty.kind {\n+                    self.optimizations.and_stars.insert(location);\n                 }\n             }\n         }\n@@ -114,6 +112,6 @@ impl Visitor<'tcx> for OptimizationFinder<'b, 'tcx> {\n \n #[derive(Default)]\n struct OptimizationList<'tcx> {\n-    and_stars: FxHashMap<Location, Mutability>,\n+    and_stars: FxHashSet<Location>,\n     arrays_lengths: FxHashMap<Location, Constant<'tcx>>,\n }"}, {"sha": "44f412c2e267428468cf5846a27ff61a4066de33", "filename": "src/test/mir-opt/inline/issue-58867-inline-as-ref-as-mut/rustc.a.Inline.after.mir", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.a.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.a.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.a.Inline.after.mir?ref=309661e84f04bedb247f42331b144a8d5ad9338d", "patch": "@@ -8,14 +8,18 @@ fn a(_1: &mut [T]) -> &mut [T] {\n     let mut _4: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:6\n     scope 1 {\n         debug self => _4;                // in scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        let mut _5: &mut [T];            // in scope 1 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n     }\n \n     bb0: {\n         StorageLive(_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n         StorageLive(_3);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n         StorageLive(_4);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:6\n         _4 = &mut (*_1);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:6\n-        _3 = move _4;                    // scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        StorageLive(_5);                 // scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        _5 = &mut (*_4);                 // scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        _3 = &mut (*_5);                 // scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        StorageDead(_5);                 // scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n         _2 = &mut (*_3);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n         StorageDead(_4);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:14: 3:15\n         _0 = &mut (*_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15"}, {"sha": "48e48f989bd94af11b3685ba655474f9ad7d29af", "filename": "src/test/mir-opt/inline/issue-58867-inline-as-ref-as-mut/rustc.b.Inline.after.mir", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.b.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.b.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.b.Inline.after.mir?ref=309661e84f04bedb247f42331b144a8d5ad9338d", "patch": "@@ -9,6 +9,7 @@ fn b(_1: &mut std::boxed::Box<T>) -> &mut T {\n     scope 1 {\n         debug self => _4;                // in scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n         let mut _5: &mut T;              // in scope 1 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+        let mut _6: &mut T;              // in scope 1 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n     }\n \n     bb0: {\n@@ -17,8 +18,11 @@ fn b(_1: &mut std::boxed::Box<T>) -> &mut T {\n         StorageLive(_4);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:6\n         _4 = &mut (*_1);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:6\n         StorageLive(_5);                 // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n-        _5 = &mut (*(*_4));              // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n-        _3 = move _5;                    // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        StorageLive(_6);                 // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _6 = &mut (*(*_4));              // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _5 = &mut (*_6);                 // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _3 = &mut (*_5);                 // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        StorageDead(_6);                 // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n         StorageDead(_5);                 // scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n         _2 = &mut (*_3);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n         StorageDead(_4);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:14: 8:15"}, {"sha": "4511470f3a50f69fae79bcf6a81834ca48d1be81", "filename": "src/test/mir-opt/nrvo-simple/rustc.nrvo.RenameReturnPlace.diff", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Ftest%2Fmir-opt%2Fnrvo-simple%2Frustc.nrvo.RenameReturnPlace.diff", "raw_url": "https://github.com/rust-lang/rust/raw/309661e84f04bedb247f42331b144a8d5ad9338d/src%2Ftest%2Fmir-opt%2Fnrvo-simple%2Frustc.nrvo.RenameReturnPlace.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnrvo-simple%2Frustc.nrvo.RenameReturnPlace.diff?ref=309661e84f04bedb247f42331b144a8d5ad9338d", "patch": "@@ -26,12 +26,17 @@\n                                            // + span: $DIR/nrvo-simple.rs:3:20: 3:21\n                                            // + literal: Const { ty: u8, val: Value(Scalar(0x00)) }\n           StorageLive(_3);                 // scope 1 at $DIR/nrvo-simple.rs:4:5: 4:19\n+          StorageLive(_5);                 // scope 1 at $DIR/nrvo-simple.rs:4:10: 4:18\n+          StorageLive(_6);                 // scope 1 at $DIR/nrvo-simple.rs:4:10: 4:18\n -         _6 = &mut _2;                    // scope 1 at $DIR/nrvo-simple.rs:4:10: 4:18\n +         _6 = &mut _0;                    // scope 1 at $DIR/nrvo-simple.rs:4:10: 4:18\n-          _3 = move _1(move _6) -> bb1;    // scope 1 at $DIR/nrvo-simple.rs:4:5: 4:19\n+          _5 = &mut (*_6);                 // scope 1 at $DIR/nrvo-simple.rs:4:10: 4:18\n+          _3 = move _1(move _5) -> bb1;    // scope 1 at $DIR/nrvo-simple.rs:4:5: 4:19\n       }\n   \n       bb1: {\n+          StorageDead(_5);                 // scope 1 at $DIR/nrvo-simple.rs:4:18: 4:19\n+          StorageDead(_6);                 // scope 1 at $DIR/nrvo-simple.rs:4:19: 4:20\n           StorageDead(_3);                 // scope 1 at $DIR/nrvo-simple.rs:4:19: 4:20\n -         _0 = _2;                         // scope 1 at $DIR/nrvo-simple.rs:5:5: 5:8\n -         StorageDead(_2);                 // scope 0 at $DIR/nrvo-simple.rs:6:1: 6:2"}]}