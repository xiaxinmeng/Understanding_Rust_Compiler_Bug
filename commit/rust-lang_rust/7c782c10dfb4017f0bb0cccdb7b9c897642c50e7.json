{"sha": "7c782c10dfb4017f0bb0cccdb7b9c897642c50e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNzgyYzEwZGZiNDAxN2YwYmIwY2NjZGI3YjljODk3NjQyYzUwZTc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-09-14T21:11:31Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-09-14T21:11:31Z"}, "message": "Fix description of tuples.", "tree": {"sha": "9c878a79cf6d4a21d52baed89a5f75576e84802c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c878a79cf6d4a21d52baed89a5f75576e84802c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c782c10dfb4017f0bb0cccdb7b9c897642c50e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c782c10dfb4017f0bb0cccdb7b9c897642c50e7", "html_url": "https://github.com/rust-lang/rust/commit/7c782c10dfb4017f0bb0cccdb7b9c897642c50e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c782c10dfb4017f0bb0cccdb7b9c897642c50e7/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79751348b3d0b5a7b3ed9fe29f71bfb860456eeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/79751348b3d0b5a7b3ed9fe29f71bfb860456eeb", "html_url": "https://github.com/rust-lang/rust/commit/79751348b3d0b5a7b3ed9fe29f71bfb860456eeb"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "ce3b3282a682be3a495dd3a451875302245a2c3b", "filename": "doc/rust.texi", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7c782c10dfb4017f0bb0cccdb7b9c897642c50e7/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/7c782c10dfb4017f0bb0cccdb7b9c897642c50e7/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=7c782c10dfb4017f0bb0cccdb7b9c897642c50e7", "patch": "@@ -2366,20 +2366,27 @@ let px: int = p.x;\n @subsection Ref.Type.Tup\n @cindex Tuple types\n \n-The tuple type-constructor @code{tup} forms a new heterogeneous product of\n-values exactly as the record type-constructor does, with the difference\n-that tuple members are automatically assigned implicit field names, given by\n-ascending integers prefixed by the underscore character: @code{_0}, @code{_1},\n-@code{_2}, etc. The members of a tuple are laid out in memory contiguously,\n-like a record, in order specified by the tuple type.\n+The tuple type-constructor forms a new heterogeneous product of\n+values similar to the record type-constructor. The differences are as follows:\n+\n+@itemize\n+@item tuple elements cannot be mutable, unlike record fields\n+@item tuple elements are not named, and can only be accessed by pattern-matching\n+@end itemize\n+\n+Tuple types and values are denoted by listing the types or values of\n+their elements, respectively, in a parenthesized, comma-separated\n+list. Single-element tuples are not legal; all tuples have two or more values.\n+\n+The members of a tuple are laid out in memory contiguously, like a record, in\n+order specified by the tuple type.\n \n An example of a tuple type and its use:\n @example\n-type pair = tup(int,str);\n-let p: pair = tup(10,\"hello\");\n-assert (p._0 == 10);\n-p._1 = \"world\";\n-assert (p._1 == \"world\");\n+type pair = (int,str);\n+let p: pair = (10,\"hello\");\n+let (a, b) = p;\n+assert (b == \"world\");\n @end example\n \n "}]}