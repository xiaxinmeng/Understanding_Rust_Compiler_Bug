{"sha": "d8e9724fb1b14a415d922431a5bc74f937c9ff38", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZTk3MjRmYjFiMTRhNDE1ZDkyMjQzMWE1YmM3NGY5MzdjOWZmMzg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-06T05:09:57Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-06T05:10:34Z"}, "message": "syntax: Stop parsing alts without arrows", "tree": {"sha": "4bd31a94df1a46c76a1887e443db1b0368c82f4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd31a94df1a46c76a1887e443db1b0368c82f4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8e9724fb1b14a415d922431a5bc74f937c9ff38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8e9724fb1b14a415d922431a5bc74f937c9ff38", "html_url": "https://github.com/rust-lang/rust/commit/d8e9724fb1b14a415d922431a5bc74f937c9ff38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8e9724fb1b14a415d922431a5bc74f937c9ff38/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "025d86624de982cdab7e6b13600fec1499c02b56", "url": "https://api.github.com/repos/rust-lang/rust/commits/025d86624de982cdab7e6b13600fec1499c02b56", "html_url": "https://github.com/rust-lang/rust/commit/025d86624de982cdab7e6b13600fec1499c02b56"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "a6c4e6c413196ca118f8a6f9f4014b51e275ce36", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8e9724fb1b14a415d922431a5bc74f937c9ff38/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8e9724fb1b14a415d922431a5bc74f937c9ff38/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=d8e9724fb1b14a415d922431a5bc74f937c9ff38", "patch": "@@ -1558,12 +1558,8 @@ class parser {\n             let pats = self.parse_pats();\n             let mut guard = none;\n             if self.eat_keyword(~\"if\") { guard = some(self.parse_expr()); }\n-            let expr = if self.token != token::FAT_ARROW {\n-                self.parse_block_expr(self.last_span.lo, default_blk)\n-            } else {\n-                self.bump();\n-                self.parse_expr_res(RESTRICT_STMT_EXPR)\n-            };\n+            self.expect(token::FAT_ARROW);\n+            let expr = self.parse_expr_res(RESTRICT_STMT_EXPR);\n \n             let require_comma =\n                 classify::expr_requires_semi_to_be_stmt(expr)"}]}