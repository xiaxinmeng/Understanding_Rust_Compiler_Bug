{"sha": "0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxODJjOGJiZGEwOTRjN2E2YWJmODliNmM0NTE4NWJhMWU1ZDM4YjM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-31T22:10:58Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-05T14:37:58Z"}, "message": "rustc: Rename item_body query to extern_const_body\n\nShould hopefully more accurately reflect what's happening! This commit also\nremoves the cache in the cstore implementation as it's already cached through\nthe query infrastructure.", "tree": {"sha": "031aa208b7ebc20322202e5e2c2d66e1a0d607d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/031aa208b7ebc20322202e5e2c2d66e1a0d607d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "html_url": "https://github.com/rust-lang/rust/commit/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d9c98e4755e2d81c894e6517e3848b786cf7a3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d9c98e4755e2d81c894e6517e3848b786cf7a3b", "html_url": "https://github.com/rust-lang/rust/commit/7d9c98e4755e2d81c894e6517e3848b786cf7a3b"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "431680eb36a01e279454ace3ed973c374347d84d", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "patch": "@@ -563,7 +563,7 @@ define_dep_nodes!( <'tcx>\n     [] GetLangItems,\n     [] DefinedLangItems(CrateNum),\n     [] MissingLangItems(CrateNum),\n-    [] ItemBody(DefId),\n+    [] ExternConstBody(DefId),\n     [] VisibleParentMap,\n     [] IsDirectExternCrate(CrateNum),\n     [] MissingExternCrateItem(CrateNum),"}, {"sha": "ef21a3d56fe03b83dd7c24b25870ad2f4095bad3", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "patch": "@@ -1357,7 +1357,7 @@ define_maps! { <'tcx>\n     [] get_lang_items: get_lang_items_node(CrateNum) -> Rc<LanguageItems>,\n     [] defined_lang_items: DefinedLangItems(CrateNum) -> Rc<Vec<(DefIndex, usize)>>,\n     [] missing_lang_items: MissingLangItems(CrateNum) -> Rc<Vec<LangItem>>,\n-    [] item_body: ItemBody(DefId) -> &'tcx hir::Body,\n+    [] extern_const_body: ExternConstBody(DefId) -> &'tcx hir::Body,\n     [] visible_parent_map: visible_parent_map_node(CrateNum)\n         -> Rc<DefIdMap<DefId>>,\n     [] missing_extern_crate_item: MissingExternCrateItem(CrateNum) -> bool,"}, {"sha": "27a25ff73d15ee1b6ba5da74fa174cffadc4ec78", "filename": "src/librustc_const_eval/eval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_const_eval%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_const_eval%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Feval.rs?ref=0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "patch": "@@ -354,7 +354,7 @@ fn eval_const_expr_partial<'a, 'tcx>(cx: &ConstContext<'a, 'tcx>,\n             }\n           } else {\n             if tcx.is_const_fn(def_id) {\n-                tcx.item_body(def_id)\n+                tcx.extern_const_body(def_id)\n             } else {\n                 signal!(e, TypeckError)\n             }\n@@ -774,7 +774,7 @@ fn const_eval<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         tcx.mir_const_qualif(def_id);\n         tcx.hir.body(tcx.hir.body_owned_by(id))\n     } else {\n-        tcx.item_body(def_id)\n+        tcx.extern_const_body(def_id)\n     };\n     ConstContext::new(tcx, key.param_env.and(substs), tables).eval(&body.value)\n }"}, {"sha": "5e1fbbc9ca2cf2b2faf37bcb6a1d49cbaacf1022", "filename": "src/librustc_const_eval/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_const_eval%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_const_eval%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fpattern.rs?ref=0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "patch": "@@ -609,7 +609,7 @@ impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n                         let body = if let Some(id) = self.tcx.hir.as_local_node_id(def_id) {\n                             self.tcx.hir.body(self.tcx.hir.body_owned_by(id))\n                         } else {\n-                            self.tcx.item_body(def_id)\n+                            self.tcx.extern_const_body(def_id)\n                         };\n                         let pat = self.lower_const_expr(&body.value, pat_id, span);\n                         self.tables = old_tables;"}, {"sha": "58ca22f7bf38aa75d959e675e8e3bc39fc10322e", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "patch": "@@ -215,12 +215,9 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     defined_lang_items => { Rc::new(cdata.get_lang_items(&tcx.dep_graph)) }\n     missing_lang_items => { Rc::new(cdata.get_missing_lang_items(&tcx.dep_graph)) }\n \n-    item_body => {\n-        if let Some(cached) = tcx.hir.get_inlined_body_untracked(def_id) {\n-            return cached;\n-        }\n+    extern_const_body => {\n         debug!(\"item_body({:?}): inlining item\", def_id);\n-        cdata.item_body(tcx, def_id.index)\n+        cdata.extern_const_body(tcx, def_id.index)\n     }\n \n     missing_extern_crate_item => {"}, {"sha": "2523c97cfab84ee7d0b40e15ecac8565d45e3053", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "patch": "@@ -759,10 +759,10 @@ impl<'a, 'tcx> CrateMetadata {\n         }\n     }\n \n-    pub fn item_body(&self,\n-                     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                     id: DefIndex)\n-                     -> &'tcx hir::Body {\n+    pub fn extern_const_body(&self,\n+                             tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                             id: DefIndex)\n+                             -> &'tcx hir::Body {\n         assert!(!self.is_proc_macro(id));\n         let ast = self.entry(id).ast.unwrap();\n         let def_id = self.local_def_id(id);"}, {"sha": "11fe8a64d4102681892b2060ff9554f36cf3ab92", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0182c8bbda094c7a6abf89b6c45185ba1e5d38b3/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=0182c8bbda094c7a6abf89b6c45185ba1e5d38b3", "patch": "@@ -474,7 +474,7 @@ impl hir::print::PpAnn for InlinedConst {\n }\n \n fn print_inlined_const(cx: &DocContext, did: DefId) -> String {\n-    let body = cx.tcx.item_body(did);\n+    let body = cx.tcx.extern_const_body(did);\n     let inlined = InlinedConst {\n         nested_bodies: cx.tcx.item_body_nested_bodies(did)\n     };"}]}