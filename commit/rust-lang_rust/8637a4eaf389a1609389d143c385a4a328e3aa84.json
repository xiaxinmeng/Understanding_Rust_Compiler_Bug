{"sha": "8637a4eaf389a1609389d143c385a4a328e3aa84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MzdhNGVhZjM4OWExNjA5Mzg5ZDE0M2MzODVhNGEzMjhlM2FhODQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-18T01:19:45Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-18T01:19:45Z"}, "message": "rustc: Pull the type out of the correct expression when typechecking channel types. Puts out burning tinderbox.", "tree": {"sha": "f45c115ccd2e922e41887963459dfc68a72acc3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f45c115ccd2e922e41887963459dfc68a72acc3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8637a4eaf389a1609389d143c385a4a328e3aa84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8637a4eaf389a1609389d143c385a4a328e3aa84", "html_url": "https://github.com/rust-lang/rust/commit/8637a4eaf389a1609389d143c385a4a328e3aa84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8637a4eaf389a1609389d143c385a4a328e3aa84/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e1dc63c2fef49ebd1a4b0cd41d4a888019b166", "url": "https://api.github.com/repos/rust-lang/rust/commits/83e1dc63c2fef49ebd1a4b0cd41d4a888019b166", "html_url": "https://github.com/rust-lang/rust/commit/83e1dc63c2fef49ebd1a4b0cd41d4a888019b166"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c6321ffd969020c42c058cc0b9b910cecfcce532", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8637a4eaf389a1609389d143c385a4a328e3aa84/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8637a4eaf389a1609389d143c385a4a328e3aa84/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=8637a4eaf389a1609389d143c385a4a328e3aa84", "patch": "@@ -2515,7 +2515,7 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n \n         case (ast::expr_chan(?x, ?a)) {\n             check_expr(fcx, x);\n-            auto port_t = expr_ty(fcx.ccx.tcx, fcx.ccx.node_types, expr);\n+            auto port_t = expr_ty(fcx.ccx.tcx, fcx.ccx.node_types, x);\n             alt (struct(fcx.ccx.tcx, port_t)) {\n                 case (ty::ty_port(?subtype)) {\n                     auto ct = ty::mk_chan(fcx.ccx.tcx, subtype);"}]}