{"sha": "3a5147e9fe04179681d97e8d780193d981cc6640", "node_id": "C_kwDOAAsO6NoAKDNhNTE0N2U5ZmUwNDE3OTY4MWQ5N2U4ZDc4MDE5M2Q5ODFjYzY2NDA", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2021-10-19T09:21:55Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2021-10-19T12:54:29Z"}, "message": "fix(assist): delete trailing whitespaces\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "c05b0aeff3d9f6c8ab223dfa9a9021f7dcc45bc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c05b0aeff3d9f6c8ab223dfa9a9021f7dcc45bc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a5147e9fe04179681d97e8d780193d981cc6640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5147e9fe04179681d97e8d780193d981cc6640", "html_url": "https://github.com/rust-lang/rust/commit/3a5147e9fe04179681d97e8d780193d981cc6640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a5147e9fe04179681d97e8d780193d981cc6640/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ee1a77235065df6cc2ff89890dfa6ff7eadbb07", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee1a77235065df6cc2ff89890dfa6ff7eadbb07", "html_url": "https://github.com/rust-lang/rust/commit/7ee1a77235065df6cc2ff89890dfa6ff7eadbb07"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "82499d77c3e2f5b03b8424206e07c4783748071a", "filename": "crates/ide_assists/src/handlers/unwrap_result_return_type.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3a5147e9fe04179681d97e8d780193d981cc6640/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_result_return_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a5147e9fe04179681d97e8d780193d981cc6640/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_result_return_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_result_return_type.rs?ref=3a5147e9fe04179681d97e8d780193d981cc6640", "patch": "@@ -1,4 +1,5 @@\n use ide_db::helpers::{for_each_tail_expr, node_ext::walk_expr, FamousDefs};\n+use itertools::Itertools;\n use syntax::{\n     ast::{self, Expr},\n     match_ast, AstNode, TextRange, TextSize,\n@@ -73,7 +74,7 @@ pub(crate) fn unwrap_result_return_type(acc: &mut Assists, ctx: &AssistContext)\n                         ret_type.syntax().text_range().start(),\n                         ret_type.syntax().text_range().end() + TextSize::from(1u32),\n                     );\n-                    builder.replace(text_range, \"\")\n+                    builder.delete(text_range)\n                 } else {\n                     builder.replace(\n                         type_ref.syntax().text_range(),\n@@ -88,14 +89,24 @@ pub(crate) fn unwrap_result_return_type(acc: &mut Assists, ctx: &AssistContext)\n                     let arg_list = ret_expr_arg.syntax().children().find_map(ast::ArgList::cast);\n                     if let Some(arg_list) = arg_list {\n                         if is_unit_type {\n-                            builder.replace(ret_expr_arg.syntax().text_range(), \"\");\n+                            match ret_expr_arg.syntax().prev_sibling_or_token() {\n+                                // Useful to delete the entire line without leaving trailing whitespaces\n+                                Some(whitespace) => {\n+                                    let new_range = TextRange::new(\n+                                        whitespace.text_range().start(),\n+                                        ret_expr_arg.syntax().text_range().end(),\n+                                    );\n+                                    builder.delete(new_range);\n+                                }\n+                                None => {\n+                                    builder.delete(ret_expr_arg.syntax().text_range());\n+                                }\n+                            }\n                         } else {\n-                            let new_ret_expr = arg_list\n-                                .args()\n-                                .map(|arg| arg.to_string())\n-                                .collect::<Vec<String>>()\n-                                .join(\", \");\n-                            builder.replace(ret_expr_arg.syntax().text_range(), new_ret_expr);\n+                            builder.replace(\n+                                ret_expr_arg.syntax().text_range(),\n+                                arg_list.args().join(\", \"),\n+                            );\n                         }\n                     }\n                 }\n@@ -158,7 +169,6 @@ fn foo() -> Result<(), Box<dyn Error$0>> {\n \"#,\n             r#\"\n fn foo() {\n-    \n }\n \"#,\n         );"}]}