{"sha": "1ed6b05145a4729b5812e63aa15c0ccc7ec6495e", "node_id": "C_kwDOAAsO6NoAKDFlZDZiMDUxNDVhNDcyOWI1ODEyZTYzYWExNWMwY2NjN2VjNjQ5NWU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-05T19:50:21Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-05T19:50:21Z"}, "message": "Remove copy_nonoverlapping intrinsic definition\n\nIt has been getting lowered to a dedicated MIR statement for a while", "tree": {"sha": "5625de9e1eaafe3ed27d2b606b35a26cfd1ab633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5625de9e1eaafe3ed27d2b606b35a26cfd1ab633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ed6b05145a4729b5812e63aa15c0ccc7ec6495e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ed6b05145a4729b5812e63aa15c0ccc7ec6495e", "html_url": "https://github.com/rust-lang/rust/commit/1ed6b05145a4729b5812e63aa15c0ccc7ec6495e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ed6b05145a4729b5812e63aa15c0ccc7ec6495e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "906b00e11107a7070fc10a6f6dc8bbbb201cfc2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/906b00e11107a7070fc10a6f6dc8bbbb201cfc2e", "html_url": "https://github.com/rust-lang/rust/commit/906b00e11107a7070fc10a6f6dc8bbbb201cfc2e"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "88f37b19529d5811505cf15e220d819e29e132b2", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1ed6b05145a4729b5812e63aa15c0ccc7ec6495e/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ed6b05145a4729b5812e63aa15c0ccc7ec6495e/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=1ed6b05145a4729b5812e63aa15c0ccc7ec6495e", "patch": "@@ -388,7 +388,7 @@ fn codegen_regular_intrinsic_call<'tcx>(\n \n             fx.bcx.ins().debugtrap();\n         }\n-        sym::copy | sym::copy_nonoverlapping => {\n+        sym::copy => {\n             intrinsic_args!(fx, args => (src, dst, count); intrinsic);\n             let src = src.load_scalar(fx);\n             let dst = dst.load_scalar(fx);\n@@ -400,13 +400,8 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             let byte_amount =\n                 if elem_size != 1 { fx.bcx.ins().imul_imm(count, elem_size as i64) } else { count };\n \n-            if intrinsic == sym::copy_nonoverlapping {\n-                // FIXME emit_small_memcpy\n-                fx.bcx.call_memcpy(fx.target_config, dst, src, byte_amount);\n-            } else {\n-                // FIXME emit_small_memmove\n-                fx.bcx.call_memmove(fx.target_config, dst, src, byte_amount);\n-            }\n+            // FIXME emit_small_memmove\n+            fx.bcx.call_memmove(fx.target_config, dst, src, byte_amount);\n         }\n         sym::volatile_copy_memory | sym::volatile_copy_nonoverlapping_memory => {\n             // NOTE: the volatile variants have src and dst swapped"}]}