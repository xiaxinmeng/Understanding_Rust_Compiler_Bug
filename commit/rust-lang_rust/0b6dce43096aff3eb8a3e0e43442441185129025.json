{"sha": "0b6dce43096aff3eb8a3e0e43442441185129025", "node_id": "C_kwDOAAsO6NoAKDBiNmRjZTQzMDk2YWZmM2ViOGEzZTBlNDM0NDI0NDExODUxMjkwMjU", "commit": {"author": {"name": "StackDoubleFlow", "email": "ojaslandge@gmail.com", "date": "2022-11-08T04:42:07Z"}, "committer": {"name": "StackDoubleFlow", "email": "ojaslandge@gmail.com", "date": "2022-11-15T04:21:24Z"}, "message": "Issue error when `-C link-self-contained` option is used on unsupported platforms\n\nDocument supported targets for `-C link-self-contained`\n\nMove `LinkSelfContainedDefault::True` from wasm_base to wasm32_wasi", "tree": {"sha": "56834a21897af7dff03b9ca899d9c2b97e824871", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56834a21897af7dff03b9ca899d9c2b97e824871"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b6dce43096aff3eb8a3e0e43442441185129025", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEPjgPvMuAWq9woTMRIB00CoLy2/wFAmNzE84ACgkQIB00CoLy\n2/zzpgv/QrpNxgznu2Op4QezQENGmuanEvOO0au0x7V++mqwCjEOK/Gy2TvrXpQv\nc0LKYerpJKLcMXhxo2nsMkFLpsJ7VuVG7alCiUzT8iNDVJOznAoLlLgP+w0jx2+Z\n3I+VVlmxw3LaDS4uMZwbNurYHcC+Pp1lksJsRWqoxfunxYNhAbCzs6bKxFWcK9qY\nhVmvTm2VUL/P+juBms5xEdX3xuxhkuKAHkznF0Jqe1JTELYdDOAWwZRkDFcWYU4F\njV3T/riNb1aYg+QLYq/ZNJIGIbCOwHCwzOfJFUs4tq/nZN2kOjZFzZ7dxJJ3fi0+\nu0YDDdeFo7D37/Abe609HJ6RL7hG/2Yf5oTQniHOzjMc1qPHIXxfT6jVvP8ZH393\nLVcwZP3FL7T5WfJPt6EoEwld4XFBAZvGr+XRnLo3y1SRXUeTHx5Umvf0ao2ONRxH\nDZdlpL/VF4TB757yw6UxdZJx78JJO8OpdIr/dvuJzA8iBssmbEZ/B7nVEECcCfPr\no5IZg3XR\n=E+2c\n-----END PGP SIGNATURE-----", "payload": "tree 56834a21897af7dff03b9ca899d9c2b97e824871\nparent dedfb9c2140dcc770054b1515d6099e42d35004d\nauthor StackDoubleFlow <ojaslandge@gmail.com> 1667882527 -0600\ncommitter StackDoubleFlow <ojaslandge@gmail.com> 1668486084 -0600\n\nIssue error when `-C link-self-contained` option is used on unsupported platforms\n\nDocument supported targets for `-C link-self-contained`\n\nMove `LinkSelfContainedDefault::True` from wasm_base to wasm32_wasi\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6dce43096aff3eb8a3e0e43442441185129025", "html_url": "https://github.com/rust-lang/rust/commit/0b6dce43096aff3eb8a3e0e43442441185129025", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b6dce43096aff3eb8a3e0e43442441185129025/comments", "author": {"login": "StackDoubleFlow", "id": 22183359, "node_id": "MDQ6VXNlcjIyMTgzMzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22183359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StackDoubleFlow", "html_url": "https://github.com/StackDoubleFlow", "followers_url": "https://api.github.com/users/StackDoubleFlow/followers", "following_url": "https://api.github.com/users/StackDoubleFlow/following{/other_user}", "gists_url": "https://api.github.com/users/StackDoubleFlow/gists{/gist_id}", "starred_url": "https://api.github.com/users/StackDoubleFlow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StackDoubleFlow/subscriptions", "organizations_url": "https://api.github.com/users/StackDoubleFlow/orgs", "repos_url": "https://api.github.com/users/StackDoubleFlow/repos", "events_url": "https://api.github.com/users/StackDoubleFlow/events{/privacy}", "received_events_url": "https://api.github.com/users/StackDoubleFlow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "StackDoubleFlow", "id": 22183359, "node_id": "MDQ6VXNlcjIyMTgzMzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22183359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StackDoubleFlow", "html_url": "https://github.com/StackDoubleFlow", "followers_url": "https://api.github.com/users/StackDoubleFlow/followers", "following_url": "https://api.github.com/users/StackDoubleFlow/following{/other_user}", "gists_url": "https://api.github.com/users/StackDoubleFlow/gists{/gist_id}", "starred_url": "https://api.github.com/users/StackDoubleFlow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StackDoubleFlow/subscriptions", "organizations_url": "https://api.github.com/users/StackDoubleFlow/orgs", "repos_url": "https://api.github.com/users/StackDoubleFlow/repos", "events_url": "https://api.github.com/users/StackDoubleFlow/events{/privacy}", "received_events_url": "https://api.github.com/users/StackDoubleFlow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dedfb9c2140dcc770054b1515d6099e42d35004d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dedfb9c2140dcc770054b1515d6099e42d35004d", "html_url": "https://github.com/rust-lang/rust/commit/dedfb9c2140dcc770054b1515d6099e42d35004d"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "2091730af22672758311fb41df19fb3be433e499", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=0b6dce43096aff3eb8a3e0e43442441185129025", "patch": "@@ -1588,6 +1588,9 @@ fn detect_self_contained_mingw(sess: &Session) -> bool {\n /// We only provide such support for a very limited number of targets.\n fn self_contained(sess: &Session, crate_type: CrateType) -> bool {\n     if let Some(self_contained) = sess.opts.cg.link_self_contained {\n+        if sess.target.link_self_contained == LinkSelfContainedDefault::False {\n+            sess.emit_err(errors::UnsupportedLinkSelfContained);\n+        }\n         return self_contained;\n     }\n "}, {"sha": "ade50af0aee8d7dabcc31b835100c55db03f2418", "filename": "compiler/rustc_codegen_ssa/src/errors.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_codegen_ssa%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_codegen_ssa%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ferrors.rs?ref=0b6dce43096aff3eb8a3e0e43442441185129025", "patch": "@@ -530,3 +530,7 @@ pub enum AppleSdkRootError<'a> {\n pub struct ReadFileError {\n     pub message: std::io::Error,\n }\n+\n+#[derive(Diagnostic)]\n+#[diag(codegen_ssa_unsupported_link_self_contained)]\n+pub struct UnsupportedLinkSelfContained;"}, {"sha": "70ce559526c3619dbbd9fd8592610f699c8e07db", "filename": "compiler/rustc_error_messages/locales/en-US/codegen_ssa.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_ssa.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_ssa.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_ssa.ftl?ref=0b6dce43096aff3eb8a3e0e43442441185129025", "patch": "@@ -184,3 +184,5 @@ codegen_ssa_unsupported_arch = unsupported arch `{$arch}` for os `{$os}`\n codegen_ssa_apple_sdk_error_sdk_path = failed to get {$sdk_name} SDK path: {error}\n \n codegen_ssa_read_file = failed to read file: {message}\n+\n+codegen_ssa_unsupported_link_self_contained = option `-C link-self-contained` is not supported on this target"}, {"sha": "6f0bbf0672d449d555a32beae5bad63e1b0bfe96", "filename": "compiler/rustc_target/src/spec/wasm32_wasi.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_wasi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_wasi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_wasi.rs?ref=0b6dce43096aff3eb8a3e0e43442441185129025", "patch": "@@ -72,7 +72,8 @@\n //! best we can with this target. Don't start relying on too much here unless\n //! you know what you're getting in to!\n \n-use super::{crt_objects, wasm_base, Cc, LinkerFlavor, Target};\n+use super::crt_objects::{self, LinkSelfContainedDefault};\n+use super::{wasm_base, Cc, LinkerFlavor, Target};\n \n pub fn target() -> Target {\n     let mut options = wasm_base::options();\n@@ -83,6 +84,9 @@ pub fn target() -> Target {\n     options.pre_link_objects_self_contained = crt_objects::pre_wasi_self_contained();\n     options.post_link_objects_self_contained = crt_objects::post_wasi_self_contained();\n \n+    // FIXME: Figure out cases in which WASM needs to link with a native toolchain.\n+    options.link_self_contained = LinkSelfContainedDefault::True;\n+\n     // Right now this is a bit of a workaround but we're currently saying that\n     // the target by default has a static crt which we're taking as a signal\n     // for \"use the bundled crt\". If that's turned off then the system's crt"}, {"sha": "625d3b37c4f2682d67ffd785ecc8b2a9a63f5a0b", "filename": "compiler/rustc_target/src/spec/wasm_base.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b6dce43096aff3eb8a3e0e43442441185129025/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs?ref=0b6dce43096aff3eb8a3e0e43442441185129025", "patch": "@@ -1,4 +1,3 @@\n-use super::crt_objects::LinkSelfContainedDefault;\n use super::{cvs, Cc, LinkerFlavor, PanicStrategy, RelocModel, TargetOptions, TlsModel};\n \n pub fn options() -> TargetOptions {\n@@ -95,9 +94,6 @@ pub fn options() -> TargetOptions {\n \n         pre_link_args,\n \n-        // FIXME: Figure out cases in which WASM needs to link with a native toolchain.\n-        link_self_contained: LinkSelfContainedDefault::True,\n-\n         // This has no effect in LLVM 8 or prior, but in LLVM 9 and later when\n         // PIC code is implemented this has quite a drastic effect if it stays\n         // at the default, `pic`. In an effort to keep wasm binaries as minimal"}, {"sha": "7e355b7fccfc4485a5f11e11d10165ce8148f607", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b6dce43096aff3eb8a3e0e43442441185129025/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/0b6dce43096aff3eb8a3e0e43442441185129025/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=0b6dce43096aff3eb8a3e0e43442441185129025", "patch": "@@ -210,8 +210,8 @@ metrics.\n \n ## link-self-contained\n \n-On targets that support it this flag controls whether the linker will use libraries and objects\n-shipped with Rust instead or those in the system.\n+On `windows-gnu`, `linux-musl`, and `wasi` targets, this flag controls whether the\n+linker will use libraries and objects shipped with Rust instead or those in the system.\n It takes one of the following values:\n \n * no value: rustc will use heuristic to disable self-contained mode if system has necessary tools."}]}