{"sha": "20ea8cba53d63ae7183634b4a26986df87798107", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZWE4Y2JhNTNkNjNhZTcxODM2MzRiNGEyNjk4NmRmODc3OTgxMDc=", "commit": {"author": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-08T22:54:16Z"}, "committer": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-09T17:59:00Z"}, "message": "Update E0038 to the new error format", "tree": {"sha": "2a0438182a6468829df743d11d217a94c8fc7bc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a0438182a6468829df743d11d217a94c8fc7bc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20ea8cba53d63ae7183634b4a26986df87798107", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJXqhnpAAoJEKvW6Q9Rv3S14S0H/3EesxeTcvmSAgptDMtmK09X\nvKFP0uk8cubXnLCHb8FZ+bUJiE5EKKBrOBGWyR7ME3ADxLhgHb4R0ZTLym3yVam6\nC73c6xTASo1uYpDx+qazDO2mTrQN7a4kK4wKQLsysUjkGP4uviF4auXyinfcMyMb\ni/CDHFcoAwHoHgp0kFwk9u0zJ0uCNNtr1ZQflBw9xek/YpUiQnToBzxyFerfP/iU\nmHgOB1nVkl+3RpM6alyNaQa/mHw1T59b1vpNeKlNR14OOpSI1ZlBUAKysSF4ePSx\nV3IzO23ay2vohBlLstsSdGLkfepDYxFTpPEwXXKKWr4VKlOD5G3lwJA06JYo8EU=\n=2MGz\n-----END PGP SIGNATURE-----", "payload": "tree 2a0438182a6468829df743d11d217a94c8fc7bc4\nparent b42a384a8078d79b299f2029b6c183b5e9288062\nauthor Panashe M. Fundira <fundirap@gmail.com> 1470696856 -0400\ncommitter Panashe M. Fundira <fundirap@gmail.com> 1470765540 -0400\n\nUpdate E0038 to the new error format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20ea8cba53d63ae7183634b4a26986df87798107", "html_url": "https://github.com/rust-lang/rust/commit/20ea8cba53d63ae7183634b4a26986df87798107", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20ea8cba53d63ae7183634b4a26986df87798107/comments", "author": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b42a384a8078d79b299f2029b6c183b5e9288062", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42a384a8078d79b299f2029b6c183b5e9288062", "html_url": "https://github.com/rust-lang/rust/commit/b42a384a8078d79b299f2029b6c183b5e9288062"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "4725272d2b69ae51d762663297639665d3c46d3a", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -670,10 +670,15 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         let mut err = match warning_node_id {\n             Some(_) => None,\n             None => {\n-                Some(struct_span_err!(\n-                    self.sess, span, E0038,\n-                    \"the trait `{}` cannot be made into an object\",\n-                    self.item_path_str(trait_def_id)))\n+                let trait_str = self.item_path_str(trait_def_id);\n+                let mut db = struct_span_err!(\n+                            self.sess, span, E0038,\n+                            \"the trait `{}` cannot be made into an object\",\n+                            trait_str);\n+                db.span_label(span,\n+                              &format!(\"the trait `{}` cannot be made \\\n+                              into an object\", trait_str));\n+                Some(db)\n             }\n         };\n "}, {"sha": "6cf3f1ebf19e4526d1c8b6b37fe6af2a9b4bd894", "filename": "src/test/compile-fail/E0038.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2FE0038.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2FE0038.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0038.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -12,7 +12,10 @@ trait Trait {\n     fn foo(&self) -> Self;\n }\n \n-fn call_foo(x: Box<Trait>) { //~ ERROR E0038\n+fn call_foo(x: Box<Trait>) {\n+    //~^ ERROR E0038\n+    //~| NOTE the trait `Trait` cannot be made into an object\n+    //~| NOTE method `foo` references the `Self` type in its arguments or return type\n     let y = x.foo();\n }\n "}, {"sha": "3e44053875552cbf8fbc194c2939969c89a65365", "filename": "src/test/compile-fail/issue-20692.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -15,10 +15,12 @@ fn f<T: Array>(x: &T) {\n     //~^ ERROR `Array` cannot be made into an object\n     //~| NOTE the trait cannot require that `Self : Sized`\n     //~| NOTE requirements on the impl of `std::ops::CoerceUnsized<&Array>`\n+    //~| NOTE the trait `Array` cannot be made into an object\n     as\n     &Array;\n     //~^ ERROR `Array` cannot be made into an object\n     //~| NOTE the trait cannot require that `Self : Sized`\n+    //~| NOTE the trait `Array` cannot be made into an object\n }\n \n fn main() {}"}, {"sha": "ded685152d49b63c83a0371c41e6cabcc301e369", "filename": "src/test/compile-fail/issue-26056.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -28,6 +28,7 @@ impl<K> Map for K {\n fn main() {\n     let _ = &()\n         as &Map<Key=u32,MapValue=u32>;\n-    //~^ ERROR the trait `Map` cannot be made into an object\n+    //~^ ERROR E0038\n     //~| NOTE the trait cannot use `Self` as a type parameter\n+    //~| NOTE the trait `Map` cannot be made into an object\n }"}, {"sha": "6174d45b898d6971e00405c141930ba98590622c", "filename": "src/test/compile-fail/object-safety-generics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-generics.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -24,12 +24,14 @@ trait Quux {\n fn make_bar<T:Bar>(t: &T) -> &Bar {\n         //~^ ERROR E0038\n         //~| NOTE method `bar` has generic type parameters\n+        //~| NOTE the trait `Bar` cannot be made into an object\n     t\n }\n \n fn make_bar_explicit<T:Bar>(t: &T) -> &Bar {\n     //~^ ERROR E0038\n-    //~^^ NOTE method `bar` has generic type parameters\n+    //~| NOTE method `bar` has generic type parameters\n+    //~| NOTE the trait `Bar` cannot be made into an object\n     t as &Bar\n }\n "}, {"sha": "d85614fa5b538845359fa196638ff58dea68f82e", "filename": "src/test/compile-fail/object-safety-mentions-Self.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-mentions-Self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-mentions-Self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-mentions-Self.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -27,12 +27,14 @@ trait Quux {\n fn make_bar<T:Bar>(t: &T) -> &Bar {\n         //~^ ERROR E0038\n         //~| NOTE method `bar` references the `Self` type in its arguments or return type\n+        //~| NOTE the trait `Bar` cannot be made into an object\n     loop { }\n }\n \n fn make_baz<T:Baz>(t: &T) -> &Baz {\n         //~^ ERROR E0038\n         //~| NOTE method `bar` references the `Self` type in its arguments or return type\n+        //~| NOTE the trait `Baz` cannot be made into an object\n     t\n }\n "}, {"sha": "accd7fa87ac29bf435af31c3f2307f7995625b61", "filename": "src/test/compile-fail/object-safety-sized.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-sized.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -18,6 +18,7 @@ trait Bar : Sized {\n fn make_bar<T:Bar>(t: &T) -> &Bar {\n         //~^ ERROR E0038\n         //~| NOTE the trait cannot require that `Self : Sized`\n+        //~| NOTE the trait `Bar` cannot be made into an object\n     t\n }\n "}, {"sha": "74d1ad62f14c3be3fb4d8c0d0c21bb4a77c652e7", "filename": "src/test/compile-fail/object-safety-supertrait-mentions-Self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-supertrait-mentions-Self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ea8cba53d63ae7183634b4a26986df87798107/src%2Ftest%2Fcompile-fail%2Fobject-safety-supertrait-mentions-Self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-supertrait-mentions-Self.rs?ref=20ea8cba53d63ae7183634b4a26986df87798107", "patch": "@@ -25,6 +25,7 @@ fn make_bar<T:Bar<u32>>(t: &T) -> &Bar<u32> {\n fn make_baz<T:Baz>(t: &T) -> &Baz {\n     //~^ ERROR E0038\n     //~| NOTE the trait cannot use `Self` as a type parameter in the supertrait listing\n+    //~| NOTE the trait `Baz` cannot be made into an object\n     t\n }\n "}]}