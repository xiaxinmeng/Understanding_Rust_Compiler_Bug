{"sha": "48060f1a63aa8b1ae04b34c3597f691d4b5e13db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MDYwZjFhNjNhYThiMWFlMDRiMzRjMzU5N2Y2OTFkNGI1ZTEzZGI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-19T02:38:47Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-19T02:38:47Z"}, "message": "rustdoc: Show the correct source filename, without `.html`\n\nPreviously the title would be\n\n    lib.rs.html -- source\n\nif `lib.rs` was the actual source filename. Now the title is\n\n    lib.rs \u2013 source\n\n(note the en dash).", "tree": {"sha": "a407ec4b0cf7a6fe88118f206cadd2450963bc58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a407ec4b0cf7a6fe88118f206cadd2450963bc58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48060f1a63aa8b1ae04b34c3597f691d4b5e13db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48060f1a63aa8b1ae04b34c3597f691d4b5e13db", "html_url": "https://github.com/rust-lang/rust/commit/48060f1a63aa8b1ae04b34c3597f691d4b5e13db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48060f1a63aa8b1ae04b34c3597f691d4b5e13db/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1496c6e606dd908dd651ac2cce89815e10d7fc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1496c6e606dd908dd651ac2cce89815e10d7fc5", "html_url": "https://github.com/rust-lang/rust/commit/b1496c6e606dd908dd651ac2cce89815e10d7fc5"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "8dc30895762d919e16fed802a74803325bc46552", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/48060f1a63aa8b1ae04b34c3597f691d4b5e13db/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48060f1a63aa8b1ae04b34c3597f691d4b5e13db/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=48060f1a63aa8b1ae04b34c3597f691d4b5e13db", "patch": "@@ -8,7 +8,7 @@ use crate::html::layout;\n use crate::html::render::{SharedContext, BASIC_KEYWORDS};\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_span::source_map::FileName;\n-use std::ffi::OsStr;\n+use std::ffi::{OsStr, OsString};\n use std::fs;\n use std::path::{Component, Path, PathBuf};\n \n@@ -84,7 +84,7 @@ impl<'a> SourceCollector<'a> {\n         };\n \n         // Remove the utf-8 BOM if any\n-        if contents.starts_with(\"\\u{feff}\") {\n+        if contents.starts_with('\\u{feff}') {\n             contents.drain(..3);\n         }\n \n@@ -99,16 +99,15 @@ impl<'a> SourceCollector<'a> {\n             href.push('/');\n         });\n         self.scx.ensure_dir(&cur)?;\n-        let mut fname = p.file_name().expect(\"source has no filename\").to_os_string();\n-        fname.push(\".html\");\n+\n+        let src_fname =\n+            String::from(p.file_name().expect(\"source has no filename\").to_string_lossy());\n+        let fname = OsString::from(src_fname.clone() + \".html\");\n         cur.push(&fname);\n         href.push_str(&fname.to_string_lossy());\n \n-        let title = format!(\n-            \"{} -- source\",\n-            cur.file_name().expect(\"failed to get file name\").to_string_lossy()\n-        );\n-        let desc = format!(\"Source to the Rust file `{}`.\", filename);\n+        let title = format!(\"{} \u2013 source\", src_fname,);\n+        let desc = format!(\"Source of the Rust file `{}`.\", filename);\n         let page = layout::Page {\n             title: &title,\n             css_class: \"source\","}]}