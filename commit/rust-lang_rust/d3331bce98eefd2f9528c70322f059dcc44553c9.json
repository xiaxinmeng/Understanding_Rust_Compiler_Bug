{"sha": "d3331bce98eefd2f9528c70322f059dcc44553c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMzMxYmNlOThlZWZkMmY5NTI4YzcwMzIyZjA1OWRjYzQ0NTUzYzk=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-29T02:05:04Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-29T02:05:25Z"}, "message": "rt: strings should escape chars like '\\n' as '\\n'", "tree": {"sha": "153888bd1ceabad4f6ff3894536792f6885e5ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/153888bd1ceabad4f6ff3894536792f6885e5ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3331bce98eefd2f9528c70322f059dcc44553c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3331bce98eefd2f9528c70322f059dcc44553c9", "html_url": "https://github.com/rust-lang/rust/commit/d3331bce98eefd2f9528c70322f059dcc44553c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3331bce98eefd2f9528c70322f059dcc44553c9/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "012dec5e5756bdc01e771f5152d71eafa9c8441e", "url": "https://api.github.com/repos/rust-lang/rust/commits/012dec5e5756bdc01e771f5152d71eafa9c8441e", "html_url": "https://github.com/rust-lang/rust/commit/012dec5e5756bdc01e771f5152d71eafa9c8441e"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "ef53a7ca7faf2128abea16099609443199b8fa47", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d3331bce98eefd2f9528c70322f059dcc44553c9/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d3331bce98eefd2f9528c70322f059dcc44553c9/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=d3331bce98eefd2f9528c70322f059dcc44553c9", "patch": "@@ -447,10 +447,19 @@ log::walk_string2(const std::pair<ptr,ptr> &data) {\n     ptr subdp = data.first;\n     while (subdp < data.second) {\n         char ch = *subdp;\n-        if (isprint(ch))\n-            out << ch;\n-        else if (ch)\n-            out << \"\\\\x\" << std::setw(2) << std::setfill('0') << (int)ch;\n+        switch(ch) {\n+        case '\\n': out << \"\\\\n\"; break;\n+        case '\\r': out << \"\\\\r\"; break;\n+        case '\\t': out << \"\\\\t\"; break;\n+        case '\\\\': out << \"\\\\\\\\\"; break;\n+        case '\"': out << \"\\\\\\\"\"; break;\n+        default:\n+            if (isprint(ch)) {\n+                out << ch;\n+            } else if (ch) {\n+                out << \"\\\\x\" << std::setw(2) << std::setfill('0') << (int)ch;\n+            }\n+        }\n         ++subdp;\n     }\n "}]}