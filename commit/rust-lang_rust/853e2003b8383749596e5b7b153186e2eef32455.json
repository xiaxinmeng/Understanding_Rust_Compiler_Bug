{"sha": "853e2003b8383749596e5b7b153186e2eef32455", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1M2UyMDAzYjgzODM3NDk1OTZlNWI3YjE1MzE4NmUyZWVmMzI0NTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-15T23:41:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-17T19:37:17Z"}, "message": "rt: Make the stack canary just a word on the stk_seg struct", "tree": {"sha": "d40153901e6b2bc8c8448f7a1c58adb440c8d385", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d40153901e6b2bc8c8448f7a1c58adb440c8d385"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/853e2003b8383749596e5b7b153186e2eef32455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/853e2003b8383749596e5b7b153186e2eef32455", "html_url": "https://github.com/rust-lang/rust/commit/853e2003b8383749596e5b7b153186e2eef32455", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/853e2003b8383749596e5b7b153186e2eef32455/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2796ab6de9eefb3d009a410e45f5c154469c94b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2796ab6de9eefb3d009a410e45f5c154469c94b7", "html_url": "https://github.com/rust-lang/rust/commit/2796ab6de9eefb3d009a410e45f5c154469c94b7"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "37acc438672a307f0a114e6c138581a46be399b8", "filename": "src/rt/rust_stack.cpp", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/853e2003b8383749596e5b7b153186e2eef32455/src%2Frt%2Frust_stack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/853e2003b8383749596e5b7b153186e2eef32455/src%2Frt%2Frust_stack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.cpp?ref=853e2003b8383749596e5b7b153186e2eef32455", "patch": "@@ -3,6 +3,12 @@\n #include \"vg/valgrind.h\"\n #include \"vg/memcheck.h\"\n \n+#ifdef _LP64\n+const uintptr_t canary_value = 0xABCDABCDABCDABCD;\n+#else\n+const uintptr_t canary_value = 0xABCDABCD;\n+#endif\n+\n void\n register_valgrind_stack(stk_seg *stk) {\n     stk->valgrind_id =\n@@ -17,8 +23,7 @@ prepare_valgrind_stack(stk_seg *stk) {\n     // old stack segments, since the act of popping the stack previously\n     // caused valgrind to consider the whole thing inaccessible.\n     size_t sz = stk->end - (uintptr_t)&stk->data[0];\n-    VALGRIND_MAKE_MEM_UNDEFINED(stk->data + sizeof(stack_canary),\n-                                sz - sizeof(stack_canary));\n+    VALGRIND_MAKE_MEM_UNDEFINED(stk->data, sz);\n #endif\n }\n \n@@ -29,12 +34,10 @@ deregister_valgrind_stack(stk_seg *stk) {\n \n void\n add_stack_canary(stk_seg *stk) {\n-    memcpy(stk->data, stack_canary, sizeof(stack_canary));\n-    assert(sizeof(stack_canary) == 16 && \"Stack canary was not the expected size\");\n+    stk->canary = canary_value;\n }\n \n void\n check_stack_canary(stk_seg *stk) {\n-    assert(!memcmp(stk->data, stack_canary, sizeof(stack_canary))\n-      && \"Somebody killed the canary\");\n+    assert(stk->canary == canary_value && \"Somebody killed the canary\");\n }"}, {"sha": "e8be2f2c0837fc910f7059272203f4ab544bc63a", "filename": "src/rt/rust_stack.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/853e2003b8383749596e5b7b153186e2eef32455/src%2Frt%2Frust_stack.h", "raw_url": "https://github.com/rust-lang/rust/raw/853e2003b8383749596e5b7b153186e2eef32455/src%2Frt%2Frust_stack.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.h?ref=853e2003b8383749596e5b7b153186e2eef32455", "patch": "@@ -10,15 +10,11 @@ struct stk_seg {\n     uint32_t pad;\n #endif\n \n+    uintptr_t canary;\n+\n     uint8_t data[];\n };\n \n-// A value that goes at the end of the stack and must not be touched\n-const uint8_t stack_canary[] = {0xAB, 0xCD, 0xAB, 0xCD,\n-                                0xAB, 0xCD, 0xAB, 0xCD,\n-                                0xAB, 0xCD, 0xAB, 0xCD,\n-                                0xAB, 0xCD, 0xAB, 0xCD};\n-\n // Used by create_stack\n void\n register_valgrind_stack(stk_seg *stk);\n@@ -34,7 +30,7 @@ add_stack_canary(stk_seg *stk);\n template <class T>\n stk_seg *\n create_stack(T allocer, size_t sz) {\n-  size_t total_sz = sizeof(stk_seg) + sz + sizeof(stack_canary);\n+  size_t total_sz = sizeof(stk_seg) + sz;\n   stk_seg *stk = (stk_seg *)allocer->malloc(total_sz, \"stack\");\n   memset(stk, 0, sizeof(stk_seg));\n   stk->end = (uintptr_t) &stk->data[sz];"}]}