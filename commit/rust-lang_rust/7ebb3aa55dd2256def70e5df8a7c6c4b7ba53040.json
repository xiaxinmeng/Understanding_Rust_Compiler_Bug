{"sha": "7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYmIzYWE1NWRkMjI1NmRlZjcwZTVkZjhhN2M2YzRiN2JhNTMwNDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-01T21:43:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-01T21:43:44Z"}, "message": "Auto merge of #5402 - pmk21:allow-let-underscore-must-use, r=flip1995\n\nAllow let_underscore_must_use to be ignored\n\nchangelog: none\nFixes #5366", "tree": {"sha": "15a49c0b58157d2cd258f7d9c5f9ae99da8eb0a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15a49c0b58157d2cd258f7d9c5f9ae99da8eb0a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040", "html_url": "https://github.com/rust-lang/rust/commit/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42796e11c5187be4e2ad962db17f333a52c3a88a", "url": "https://api.github.com/repos/rust-lang/rust/commits/42796e11c5187be4e2ad962db17f333a52c3a88a", "html_url": "https://github.com/rust-lang/rust/commit/42796e11c5187be4e2ad962db17f333a52c3a88a"}, {"sha": "c9978b69bdd169777ec0befeeb75d2c7bd560526", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9978b69bdd169777ec0befeeb75d2c7bd560526", "html_url": "https://github.com/rust-lang/rust/commit/c9978b69bdd169777ec0befeeb75d2c7bd560526"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "a68f7edd8370f57adf4aae8e619d5d63adc4ecd6", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040", "patch": "@@ -1,5 +1,5 @@\n use if_chain::if_chain;\n-use rustc_hir::{PatKind, Stmt, StmtKind};\n+use rustc_hir::{Local, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -66,13 +66,12 @@ const SYNC_GUARD_PATHS: [&[&str]; 3] = [\n ];\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetUnderscore {\n-    fn check_stmt(&mut self, cx: &LateContext<'_, '_>, stmt: &Stmt<'_>) {\n-        if in_external_macro(cx.tcx.sess, stmt.span) {\n+    fn check_local(&mut self, cx: &LateContext<'_, '_>, local: &Local<'_>) {\n+        if in_external_macro(cx.tcx.sess, local.span) {\n             return;\n         }\n \n         if_chain! {\n-            if let StmtKind::Local(ref local) = stmt.kind;\n             if let PatKind::Wild = local.pat.kind;\n             if let Some(ref init) = local.init;\n             then {\n@@ -81,7 +80,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetUnderscore {\n                     span_lint_and_help(\n                         cx,\n                         LET_UNDERSCORE_LOCK,\n-                        stmt.span,\n+                        local.span,\n                         \"non-binding let on a synchronization lock\",\n                         \"consider using an underscore-prefixed named \\\n                             binding or dropping explicitly with `std::mem::drop`\"\n@@ -90,15 +89,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetUnderscore {\n                     span_lint_and_help(\n                         cx,\n                         LET_UNDERSCORE_MUST_USE,\n-                        stmt.span,\n+                        local.span,\n                         \"non-binding let on an expression with `#[must_use]` type\",\n                         \"consider explicitly using expression value\"\n                     )\n                 } else if is_must_use_func_call(cx, init) {\n                     span_lint_and_help(\n                         cx,\n                         LET_UNDERSCORE_MUST_USE,\n-                        stmt.span,\n+                        local.span,\n                         \"non-binding let on a result of a `#[must_use]` function\",\n                         \"consider explicitly using function result\"\n                     )"}, {"sha": "27dda606067aa7fa8760316cb468c33111d4254e", "filename": "tests/ui/let_underscore_must_use.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040/tests%2Fui%2Flet_underscore_must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040/tests%2Fui%2Flet_underscore_must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_must_use.rs?ref=7ebb3aa55dd2256def70e5df8a7c6c4b7ba53040", "patch": "@@ -88,4 +88,7 @@ fn main() {\n     let _ = a.map(|_| ());\n \n     let _ = a;\n+\n+    #[allow(clippy::let_underscore_must_use)]\n+    let _ = a;\n }"}]}