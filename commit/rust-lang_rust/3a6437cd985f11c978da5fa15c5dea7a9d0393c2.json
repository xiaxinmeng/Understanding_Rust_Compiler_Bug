{"sha": "3a6437cd985f11c978da5fa15c5dea7a9d0393c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNjQzN2NkOTg1ZjExYzk3OGRhNWZhMTVjNWRlYTdhOWQwMzkzYzI=", "commit": {"author": {"name": "nasso", "email": "nassomails@gmail.com", "date": "2020-10-11T15:47:34Z"}, "committer": {"name": "nasso", "email": "nassomails@gmail.com", "date": "2020-10-13T08:46:22Z"}, "message": "Remove unnecessary refs", "tree": {"sha": "e5eac192d8ba9c9cc2f571ec8ed5aeaa68db0894", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5eac192d8ba9c9cc2f571ec8ed5aeaa68db0894"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a6437cd985f11c978da5fa15c5dea7a9d0393c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a6437cd985f11c978da5fa15c5dea7a9d0393c2", "html_url": "https://github.com/rust-lang/rust/commit/3a6437cd985f11c978da5fa15c5dea7a9d0393c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a6437cd985f11c978da5fa15c5dea7a9d0393c2/comments", "author": {"login": "nasso", "id": 11479594, "node_id": "MDQ6VXNlcjExNDc5NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/11479594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasso", "html_url": "https://github.com/nasso", "followers_url": "https://api.github.com/users/nasso/followers", "following_url": "https://api.github.com/users/nasso/following{/other_user}", "gists_url": "https://api.github.com/users/nasso/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasso/subscriptions", "organizations_url": "https://api.github.com/users/nasso/orgs", "repos_url": "https://api.github.com/users/nasso/repos", "events_url": "https://api.github.com/users/nasso/events{/privacy}", "received_events_url": "https://api.github.com/users/nasso/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nasso", "id": 11479594, "node_id": "MDQ6VXNlcjExNDc5NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/11479594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasso", "html_url": "https://github.com/nasso", "followers_url": "https://api.github.com/users/nasso/followers", "following_url": "https://api.github.com/users/nasso/following{/other_user}", "gists_url": "https://api.github.com/users/nasso/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasso/subscriptions", "organizations_url": "https://api.github.com/users/nasso/orgs", "repos_url": "https://api.github.com/users/nasso/repos", "events_url": "https://api.github.com/users/nasso/events{/privacy}", "received_events_url": "https://api.github.com/users/nasso/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45f67625291af6432c42b99a3b68b2b77fb8ad9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/45f67625291af6432c42b99a3b68b2b77fb8ad9c", "html_url": "https://github.com/rust-lang/rust/commit/45f67625291af6432c42b99a3b68b2b77fb8ad9c"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "b7b9bc5e1c0793fb86a87864f6fde7b08ae35957", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3a6437cd985f11c978da5fa15c5dea7a9d0393c2/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a6437cd985f11c978da5fa15c5dea7a9d0393c2/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=3a6437cd985f11c978da5fa15c5dea7a9d0393c2", "patch": "@@ -1365,15 +1365,15 @@ enum Setting {\n impl Setting {\n     fn display(&self, root_path: &str, suffix: &str) -> String {\n         match *self {\n-            Setting::Section { ref description, ref sub_settings } => format!(\n+            Setting::Section { description, ref sub_settings } => format!(\n                 \"<div class='setting-line'>\\\n                      <div class='title'>{}</div>\\\n                      <div class='sub-settings'>{}</div>\n                  </div>\",\n                 description,\n                 sub_settings.iter().map(|s| s.display(root_path, suffix)).collect::<String>()\n             ),\n-            Setting::Toggle { ref js_data_name, ref description, ref default_value } => format!(\n+            Setting::Toggle { js_data_name, description, default_value } => format!(\n                 \"<div class='setting-line'>\\\n                      <label class='toggle'>\\\n                      <input type='checkbox' id='{}' {}>\\\n@@ -1382,15 +1382,10 @@ impl Setting {\n                      <div>{}</div>\\\n                  </div>\",\n                 js_data_name,\n-                if *default_value { \" checked\" } else { \"\" },\n+                if default_value { \" checked\" } else { \"\" },\n                 description,\n             ),\n-            Setting::Select {\n-                ref js_data_name,\n-                ref description,\n-                ref default_value,\n-                ref options,\n-            } => format!(\n+            Setting::Select { js_data_name, description, default_value, ref options } => format!(\n                 \"<div class='setting-line'>\\\n                      <div>{}</div>\\\n                      <label class='select-wrapper'>\\\n@@ -1405,7 +1400,7 @@ impl Setting {\n                     .map(|opt| format!(\n                         \"<option value=\\\"{}\\\" {}>{}</option>\",\n                         opt.0,\n-                        if &opt.0 == *default_value { \"selected\" } else { \"\" },\n+                        if &opt.0 == default_value { \"selected\" } else { \"\" },\n                         opt.1,\n                     ))\n                     .collect::<String>(),"}]}