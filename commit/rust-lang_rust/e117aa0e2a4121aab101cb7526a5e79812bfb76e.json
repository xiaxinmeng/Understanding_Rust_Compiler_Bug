{"sha": "e117aa0e2a4121aab101cb7526a5e79812bfb76e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMTdhYTBlMmE0MTIxYWFiMTAxY2I3NTI2YTVlNzk4MTJiZmI3NmU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-18T01:51:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-24T21:21:57Z"}, "message": "Stop logging task failure to task loggers\n\nThe isn't an ideal patch, and the comment why is in the code. Basically uvio\nuses task::unkillable which touches the kill flag for a task, and if the task is\nfailing due to mismangement of the kill flag, then there will be serious\nproblems when the task tries to print that it's failing.", "tree": {"sha": "dd297d5c5cff5bc64d6ed88fc2849cf73e072370", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd297d5c5cff5bc64d6ed88fc2849cf73e072370"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e117aa0e2a4121aab101cb7526a5e79812bfb76e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e117aa0e2a4121aab101cb7526a5e79812bfb76e", "html_url": "https://github.com/rust-lang/rust/commit/e117aa0e2a4121aab101cb7526a5e79812bfb76e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e117aa0e2a4121aab101cb7526a5e79812bfb76e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61ed2cfb5516f76487509766b1054275f1340f70", "url": "https://api.github.com/repos/rust-lang/rust/commits/61ed2cfb5516f76487509766b1054275f1340f70", "html_url": "https://github.com/rust-lang/rust/commit/61ed2cfb5516f76487509766b1054275f1340f70"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "b3c65ce4749ded7d9e997fd493484eff9d172170", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e117aa0e2a4121aab101cb7526a5e79812bfb76e/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e117aa0e2a4121aab101cb7526a5e79812bfb76e/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=e117aa0e2a4121aab101cb7526a5e79812bfb76e", "patch": "@@ -546,7 +546,6 @@ pub fn begin_unwind(msg: *c_char, file: *c_char, line: size_t) -> ! {\n     use rt::in_green_task_context;\n     use rt::task::Task;\n     use rt::local::Local;\n-    use rt::logging::Logger;\n     use str::Str;\n     use c_str::CString;\n     use unstable::intrinsics;\n@@ -573,16 +572,19 @@ pub fn begin_unwind(msg: *c_char, file: *c_char, line: size_t) -> ! {\n         // have been failing due to a lack of memory in the first place...\n         let task: *mut Task = Local::unsafe_borrow();\n         let n = (*task).name.as_ref().map(|n| n.as_slice()).unwrap_or(\"<unnamed>\");\n+\n+        // XXX: this should no get forcibly printed to the console, this should\n+        //      either be sent to the parent task (ideally), or get printed to\n+        //      the task's logger. Right now the logger is actually a uvio\n+        //      instance, which uses unkillable blocks internally for various\n+        //      reasons. This will cause serious trouble if the task is failing\n+        //      due to mismanagment of its own kill flag, so calling our own\n+        //      logger in its current state is a bit of a problem.\n         match file.as_str() {\n             Some(file) => {\n-                format_args!(|args| { (*task).logger.log(args) },\n-                             \"task '{}' failed at '{}', {}:{}\",\n-                             n, msg, file, line);\n-            }\n-            None => {\n-                format_args!(|args| { (*task).logger.log(args) },\n-                             \"task '{}' failed at '{}'\", n, msg);\n+                rterrln!(\"task '{}' failed at '{}', {}:{}\", n, msg, file, line);\n             }\n+            None => rterrln!(\"task '{}' failed at '{}'\", n, msg),\n         }\n         if (*task).unwinder.unwinding {\n             rtabort!(\"unwinding again\");"}, {"sha": "e859f8e4fdb3517ea2f125dbe2c5a719ca978b6a", "filename": "src/libstd/rt/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e117aa0e2a4121aab101cb7526a5e79812bfb76e/src%2Flibstd%2Frt%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e117aa0e2a4121aab101cb7526a5e79812bfb76e/src%2Flibstd%2Frt%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Futil.rs?ref=e117aa0e2a4121aab101cb7526a5e79812bfb76e", "patch": "@@ -72,8 +72,8 @@ pub fn default_sched_threads() -> uint {\n pub fn dumb_println(args: &fmt::Arguments) {\n     use rt::io::native::stdio::stderr;\n     use rt::io::{Writer, io_error, ResourceUnavailable};\n-    let mut out = stderr();\n \n+    let mut out = stderr();\n     let mut again = true;\n     do io_error::cond.trap(|e| {\n         again = e.kind == ResourceUnavailable;"}]}