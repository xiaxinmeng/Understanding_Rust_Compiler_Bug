{"sha": "9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNTgzNjlmNmJhOGUwMWYxOTY1ZThhYTM5ZThjN2ZjMjVmODYxY2M=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-18T23:28:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-18T23:28:16Z"}, "message": "Treat static slices and rptrs as sendable.", "tree": {"sha": "e7dfa894da8e1d593441229eb2cfe20a13c99343", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7dfa894da8e1d593441229eb2cfe20a13c99343"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc", "html_url": "https://github.com/rust-lang/rust/commit/9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e653d493fb8df74bd0583c4f32c882a590135ef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e653d493fb8df74bd0583c4f32c882a590135ef1", "html_url": "https://github.com/rust-lang/rust/commit/e653d493fb8df74bd0583c4f32c882a590135ef1"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "f0f5a4165cd3dc7f68001c8bfef67bc43069e441", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=9b58369f6ba8e01f1965e8aa39e8c7fc25f861cc", "patch": "@@ -1950,7 +1950,11 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n       // Trait instances are (for now) like shared boxes, basically\n       ty_trait(_, _, _) => kind_safe_for_default_mode() | kind_owned(),\n \n-      // Region pointers are copyable but NOT owned nor sendable\n+      // Static region pointers are copyable and sendable, but not owned\n+      ty_rptr(re_static, mt) =>\n+      kind_safe_for_default_mode() | mutable_type_kind(cx, mt),\n+\n+      // General region pointers are copyable but NOT owned nor sendable\n       ty_rptr(_, _) => kind_safe_for_default_mode(),\n \n       // Unique boxes and vecs have the kind of their contained type,\n@@ -1972,6 +1976,9 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n       ty_evec(tm, vstore_box) => {\n         remove_send(kind_safe_for_default_mode() | mutable_type_kind(cx, tm))\n       }\n+      ty_evec(tm, vstore_slice(re_static)) => {\n+        kind_safe_for_default_mode() | mutable_type_kind(cx, tm)\n+      }\n       ty_evec(tm, vstore_slice(_)) => {\n         remove_owned_send(kind_safe_for_default_mode() |\n                           mutable_type_kind(cx, tm))\n@@ -1984,6 +1991,9 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n       ty_estr(vstore_box) => {\n         kind_safe_for_default_mode() | kind_const() | kind_owned()\n       }\n+      ty_estr(vstore_slice(re_static)) => {\n+        kind_safe_for_default_mode() | kind_send_copy() | kind_const()\n+      }\n       ty_estr(vstore_slice(_)) => {\n         kind_safe_for_default_mode() | kind_const()\n       }"}]}