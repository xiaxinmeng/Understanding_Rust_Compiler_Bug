{"sha": "d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMmExMzZiMjI0N2FiNWNmNWIzMmU0NGE4OTBiM2E4NzFjMGNlOTA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-10T21:41:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-16T06:22:06Z"}, "message": "std: Fix float tests", "tree": {"sha": "c4aa19d88d434b137082df893ac216e770e679a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4aa19d88d434b137082df893ac216e770e679a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "html_url": "https://github.com/rust-lang/rust/commit/d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c36525200240b1fae7e6871790b60aec856c2147", "url": "https://api.github.com/repos/rust-lang/rust/commits/c36525200240b1fae7e6871790b60aec856c2147", "html_url": "https://github.com/rust-lang/rust/commit/c36525200240b1fae7e6871790b60aec856c2147"}], "stats": {"total": 67, "additions": 19, "deletions": 48}, "files": [{"sha": "95c6e15bd7239f7b3890d9c9d4375ab54cc9b1e3", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "patch": "@@ -43,32 +43,6 @@ mod num;\n mod float;\n pub mod rt;\n \n-#[cfg(stage0)]\n-#[allow(missing_doc)]\n-pub mod parse {\n-    #[deriving(Eq)]\n-    pub enum Alignment {\n-        AlignLeft,\n-        AlignRight,\n-        AlignUnknown,\n-    }\n-\n-    pub enum PluralKeyword {\n-        Zero,\n-        One,\n-        Two,\n-        Few,\n-        Many,\n-    }\n-\n-    pub enum Flag {\n-        FlagSignPlus,\n-        FlagSignMinus,\n-        FlagAlternate,\n-        FlagSignAwareZeroPad,\n-    }\n-}\n-\n pub type Result = result::Result<(), FormatError>;\n \n /// dox\n@@ -98,7 +72,7 @@ pub struct Formatter<'a> {\n     /// Optionally specified precision for numeric types\n     pub precision: Option<uint>,\n \n-    /// dox\n+    #[allow(missing_doc)]\n     #[cfg(stage0)]\n     pub buf: &'a mut FormatWriter,\n     #[cfg(not(stage0))]"}, {"sha": "4e19b92bcfce96470d0ba400a52910d5dff5adab", "filename": "src/libstd/fmt.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibstd%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibstd%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt.rs?ref=d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "patch": "@@ -492,9 +492,6 @@ use str::{StrAllocating};\n use str;\n use slice::Vector;\n \n-#[cfg(stage0)]\n-pub use core::fmt::parse;\n-\n pub use core::fmt::{Formatter, Result, FormatWriter, Show, rt};\n pub use core::fmt::{Show, Bool, Char, Signed, Unsigned, Octal, Binary};\n pub use core::fmt::{LowerHex, UpperHex, String, Pointer};"}, {"sha": "8d3fae7e8b1b6677bc48b0c1abefd8e58dd41008", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "patch": "@@ -734,18 +734,18 @@ mod tests {\n         // are supported in floating-point literals\n         let f1: f32 = from_str_hex(\"1p-123\").unwrap();\n         let f2: f32 = from_str_hex(\"1p-111\").unwrap();\n-        assert_eq!(Float::ldexp(1f32, -123), f1);\n-        assert_eq!(Float::ldexp(1f32, -111), f2);\n+        assert_eq!(FloatMath::ldexp(1f32, -123), f1);\n+        assert_eq!(FloatMath::ldexp(1f32, -111), f2);\n \n-        assert_eq!(Float::ldexp(0f32, -123), 0f32);\n-        assert_eq!(Float::ldexp(-0f32, -123), -0f32);\n+        assert_eq!(FloatMath::ldexp(0f32, -123), 0f32);\n+        assert_eq!(FloatMath::ldexp(-0f32, -123), -0f32);\n \n         let inf: f32 = Float::infinity();\n         let neg_inf: f32 = Float::neg_infinity();\n         let nan: f32 = Float::nan();\n-        assert_eq!(Float::ldexp(inf, -123), inf);\n-        assert_eq!(Float::ldexp(neg_inf, -123), neg_inf);\n-        assert!(Float::ldexp(nan, -123).is_nan());\n+        assert_eq!(FloatMath::ldexp(inf, -123), inf);\n+        assert_eq!(FloatMath::ldexp(neg_inf, -123), neg_inf);\n+        assert!(FloatMath::ldexp(nan, -123).is_nan());\n     }\n \n     #[test]\n@@ -758,8 +758,8 @@ mod tests {\n         let (x2, exp2) = f2.frexp();\n         assert_eq!((x1, exp1), (0.5f32, -122));\n         assert_eq!((x2, exp2), (0.5f32, -110));\n-        assert_eq!(Float::ldexp(x1, exp1), f1);\n-        assert_eq!(Float::ldexp(x2, exp2), f2);\n+        assert_eq!(FloatMath::ldexp(x1, exp1), f1);\n+        assert_eq!(FloatMath::ldexp(x2, exp2), f2);\n \n         assert_eq!(0f32.frexp(), (0f32, 0));\n         assert_eq!((-0f32).frexp(), (-0f32, 0));"}, {"sha": "6b5561f5698f08585f5bb49c3312facf8adb7736", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d12a136b2247ab5cf5b32e44a890b3a871c0ce90/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=d12a136b2247ab5cf5b32e44a890b3a871c0ce90", "patch": "@@ -734,18 +734,18 @@ mod tests {\n         // are supported in floating-point literals\n         let f1: f64 = from_str_hex(\"1p-123\").unwrap();\n         let f2: f64 = from_str_hex(\"1p-111\").unwrap();\n-        assert_eq!(Float::ldexp(1f64, -123), f1);\n-        assert_eq!(Float::ldexp(1f64, -111), f2);\n+        assert_eq!(FloatMath::ldexp(1f64, -123), f1);\n+        assert_eq!(FloatMath::ldexp(1f64, -111), f2);\n \n-        assert_eq!(Float::ldexp(0f64, -123), 0f64);\n-        assert_eq!(Float::ldexp(-0f64, -123), -0f64);\n+        assert_eq!(FloatMath::ldexp(0f64, -123), 0f64);\n+        assert_eq!(FloatMath::ldexp(-0f64, -123), -0f64);\n \n         let inf: f64 = Float::infinity();\n         let neg_inf: f64 = Float::neg_infinity();\n         let nan: f64 = Float::nan();\n-        assert_eq!(Float::ldexp(inf, -123), inf);\n-        assert_eq!(Float::ldexp(neg_inf, -123), neg_inf);\n-        assert!(Float::ldexp(nan, -123).is_nan());\n+        assert_eq!(FloatMath::ldexp(inf, -123), inf);\n+        assert_eq!(FloatMath::ldexp(neg_inf, -123), neg_inf);\n+        assert!(FloatMath::ldexp(nan, -123).is_nan());\n     }\n \n     #[test]\n@@ -758,8 +758,8 @@ mod tests {\n         let (x2, exp2) = f2.frexp();\n         assert_eq!((x1, exp1), (0.5f64, -122));\n         assert_eq!((x2, exp2), (0.5f64, -110));\n-        assert_eq!(Float::ldexp(x1, exp1), f1);\n-        assert_eq!(Float::ldexp(x2, exp2), f2);\n+        assert_eq!(FloatMath::ldexp(x1, exp1), f1);\n+        assert_eq!(FloatMath::ldexp(x2, exp2), f2);\n \n         assert_eq!(0f64.frexp(), (0f64, 0));\n         assert_eq!((-0f64).frexp(), (-0f64, 0));"}]}