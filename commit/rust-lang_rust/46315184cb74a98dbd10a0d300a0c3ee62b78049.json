{"sha": "46315184cb74a98dbd10a0d300a0c3ee62b78049", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MzE1MTg0Y2I3NGE5OGRiZDEwYTBkMzAwYTBjM2VlNjJiNzgwNDk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-02-04T23:22:41Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-02-06T01:11:02Z"}, "message": "std: Add support for accept4 on Linux\n\nThis is necessary to atomically accept a socket and set the CLOEXEC flag at the\nsame time. Support only appeared in Linux 2.6.28 so we have to dynamically\ndetermine which syscall we're supposed to call in this case.", "tree": {"sha": "2a83c03adb395ed5ce803b1db2d216453728f9e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a83c03adb395ed5ce803b1db2d216453728f9e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46315184cb74a98dbd10a0d300a0c3ee62b78049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46315184cb74a98dbd10a0d300a0c3ee62b78049", "html_url": "https://github.com/rust-lang/rust/commit/46315184cb74a98dbd10a0d300a0c3ee62b78049", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46315184cb74a98dbd10a0d300a0c3ee62b78049/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a31e1c09f89daeefa06ca9336912e9bcadb0c1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a31e1c09f89daeefa06ca9336912e9bcadb0c1d", "html_url": "https://github.com/rust-lang/rust/commit/1a31e1c09f89daeefa06ca9336912e9bcadb0c1d"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "507cc0f4ea46191e930fc0ced1ba266dc7843910", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/46315184cb74a98dbd10a0d300a0c3ee62b78049/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46315184cb74a98dbd10a0d300a0c3ee62b78049/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=46315184cb74a98dbd10a0d300a0c3ee62b78049", "patch": "@@ -12,7 +12,7 @@ use prelude::v1::*;\n \n use ffi::CStr;\n use io;\n-use libc::{self, c_int, size_t};\n+use libc::{self, c_int, size_t, sockaddr, socklen_t};\n use net::{SocketAddr, Shutdown};\n use str;\n use sys::fd::FileDesc;\n@@ -78,8 +78,28 @@ impl Socket {\n         }\n     }\n \n-    pub fn accept(&self, storage: *mut libc::sockaddr,\n-                  len: *mut libc::socklen_t) -> io::Result<Socket> {\n+    pub fn accept(&self, storage: *mut sockaddr, len: *mut socklen_t)\n+                  -> io::Result<Socket> {\n+        // Unfortunately the only known way right now to accept a socket and\n+        // atomically set the CLOEXEC flag is to use the `accept4` syscall on\n+        // Linux. This was added in 2.6.28, however, and because we support\n+        // 2.6.18 we must detect this support dynamically.\n+        if cfg!(target_os = \"linux\") {\n+            weak! {\n+                fn accept4(c_int, *mut sockaddr, *mut socklen_t, c_int) -> c_int\n+            }\n+            if let Some(accept) = accept4.get() {\n+                let res = cvt_r(|| unsafe {\n+                    accept(self.0.raw(), storage, len, SOCK_CLOEXEC)\n+                });\n+                match res {\n+                    Ok(fd) => return Ok(Socket(FileDesc::new(fd))),\n+                    Err(ref e) if e.raw_os_error() == Some(libc::ENOSYS) => {}\n+                    Err(e) => return Err(e),\n+                }\n+            }\n+        }\n+\n         let fd = try!(cvt_r(|| unsafe {\n             libc::accept(self.0.raw(), storage, len)\n         }));"}, {"sha": "e6f85c08d1246cf06ee0f88ad9935b49cbf83262", "filename": "src/libstd/sys/unix/weak.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46315184cb74a98dbd10a0d300a0c3ee62b78049/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46315184cb74a98dbd10a0d300a0c3ee62b78049/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fweak.rs?ref=46315184cb74a98dbd10a0d300a0c3ee62b78049", "patch": "@@ -61,7 +61,11 @@ impl<F> Weak<F> {\n             if self.addr.load(Ordering::SeqCst) == 1 {\n                 self.addr.store(fetch(self.name), Ordering::SeqCst);\n             }\n-            mem::transmute::<&AtomicUsize, Option<&F>>(&self.addr)\n+            if self.addr.load(Ordering::SeqCst) == 0 {\n+                None\n+            } else {\n+                mem::transmute::<&AtomicUsize, Option<&F>>(&self.addr)\n+            }\n         }\n     }\n }"}]}