{"sha": "5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "node_id": "C_kwDOAAsO6NoAKDUxMTViZGMyZTI4MjllOWM5YTdjZTEwNTE2YmQyNjQ2OTA0OWUwYTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-04T16:31:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-04T16:31:05Z"}, "message": "Rollup merge of #94524 - bjorn3:remove_num_cpus, r=Mark-Simulacrum\n\nRemove num_cpus dependency from bootstrap, build-manifest and rustc_s\u2026\n\n\u2026ession\n\n`std::threads::available_parallelism` was stabilized in rust 1.59.\n\nr? ```````````````````````````@Mark-Simulacrum```````````````````````````", "tree": {"sha": "87a1138d9a25eeb5eae806a30ecff0287051c6d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87a1138d9a25eeb5eae806a30ecff0287051c6d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiIj7JCRBK7hj4Ov3rIwAAr2oIAH0B1QzL9jvmG1YyPFW7Pp5G\nzfwoEqz8oJNAeGnuUFG+L4EZnq5zDNLMIN/Qd4rQFQrfZLeV27I1RSfsIqbLQymh\n/0YtkX52439U4x5VGSEtQIU8ruE9gU2BA2RqZsBtTGoFxuqEwCrBYmwTPewRrdbW\nwuXiq+VB0nVxaJv1vJ+X/6RDR6+Fp3nexktZMIvyBxuG2tugSyl4PaNQcK/K06gs\nF6VyxAuJJxWmQhgvNhtnQuWjBdDqU/HsNtW0wt+vsa5zxooa3WC6YKiAma5Xp/VO\nM/V4otbn/kEPFhc46zTjoKA1TnsaV3NP8fQYHkltKiKX+6S75CWWZZ/LCHU1fNI=\n=/5it\n-----END PGP SIGNATURE-----\n", "payload": "tree 87a1138d9a25eeb5eae806a30ecff0287051c6d9\nparent 904c6ca95c65b71715491b9e32f634734661db94\nparent 2d854f9c340df887e30896f49270ae81feb3e227\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646411465 +0100\ncommitter GitHub <noreply@github.com> 1646411465 +0100\n\nRollup merge of #94524 - bjorn3:remove_num_cpus, r=Mark-Simulacrum\n\nRemove num_cpus dependency from bootstrap, build-manifest and rustc_s\u2026\n\n\u2026ession\n\n`std::threads::available_parallelism` was stabilized in rust 1.59.\n\nr? ```````````````````````````@Mark-Simulacrum```````````````````````````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "html_url": "https://github.com/rust-lang/rust/commit/5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "904c6ca95c65b71715491b9e32f634734661db94", "url": "https://api.github.com/repos/rust-lang/rust/commits/904c6ca95c65b71715491b9e32f634734661db94", "html_url": "https://github.com/rust-lang/rust/commit/904c6ca95c65b71715491b9e32f634734661db94"}, {"sha": "2d854f9c340df887e30896f49270ae81feb3e227", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d854f9c340df887e30896f49270ae81feb3e227", "html_url": "https://github.com/rust-lang/rust/commit/2d854f9c340df887e30896f49270ae81feb3e227"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "de582f702adcceebdc1031222f5db3a02ba093e6", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -221,7 +221,6 @@ dependencies = [\n  \"getopts\",\n  \"ignore\",\n  \"libc\",\n- \"num_cpus\",\n  \"once_cell\",\n  \"opener\",\n  \"pretty_assertions\",\n@@ -249,7 +248,6 @@ dependencies = [\n  \"anyhow\",\n  \"flate2\",\n  \"hex 0.4.2\",\n- \"num_cpus\",\n  \"rayon\",\n  \"serde\",\n  \"serde_json\",\n@@ -4242,7 +4240,6 @@ name = \"rustc_session\"\n version = \"0.0.0\"\n dependencies = [\n  \"getopts\",\n- \"num_cpus\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\","}, {"sha": "6b1eaa4d399d9d291133d36e7de2d46c93464b22", "filename": "compiler/rustc_session/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/compiler%2Frustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/compiler%2Frustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2FCargo.toml?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -15,6 +15,5 @@ rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_fs_util = { path = \"../rustc_fs_util\" }\n-num_cpus = \"1.0\"\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_lint_defs = { path = \"../rustc_lint_defs\" }"}, {"sha": "c42a1530451d673f3d58df0dcf075713929673e0", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -551,7 +551,7 @@ mod parse {\n     crate fn parse_threads(slot: &mut usize, v: Option<&str>) -> bool {\n         match v.and_then(|s| s.parse().ok()) {\n             Some(0) => {\n-                *slot = ::num_cpus::get();\n+                *slot = std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get);\n                 true\n             }\n             Some(i) => {"}, {"sha": "02efc08cc791f798d09622cef685ae25ec26844c", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -37,7 +37,6 @@ test = false\n build_helper = { path = \"../build_helper\" }\n cmake = \"0.1.38\"\n filetime = \"0.2\"\n-num_cpus = \"1.0\"\n getopts = \"0.2.19\"\n cc = \"1.0.69\"\n libc = \"0.2\""}, {"sha": "ce76ccd57551d18f9c994391a8f81ff1f75534b3", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -1187,7 +1187,7 @@ fn set<T>(field: &mut T, val: Option<T>) {\n \n fn threads_from_config(v: u32) -> u32 {\n     match v {\n-        0 => num_cpus::get() as u32,\n+        0 => std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get) as u32,\n         n => n,\n     }\n }"}, {"sha": "74528f2752f5fbca85fcc949be59faa982642ae8", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -208,7 +208,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         let j_msg = format!(\n             \"number of jobs to run in parallel; \\\n              defaults to {} (this host's logical CPU count)\",\n-            num_cpus::get()\n+            std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get)\n         );\n         opts.optopt(\"j\", \"jobs\", &j_msg, \"JOBS\");\n         opts.optflag(\"h\", \"help\", \"print this help message\");"}, {"sha": "a1f0bfd8f26647cee1361c163f7789fcc58d8901", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -922,7 +922,9 @@ impl Build {\n     /// Returns the number of parallel jobs that have been configured for this\n     /// build.\n     fn jobs(&self) -> u32 {\n-        self.config.jobs.unwrap_or_else(|| num_cpus::get() as u32)\n+        self.config.jobs.unwrap_or_else(|| {\n+            std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get) as u32\n+        })\n     }\n \n     fn debuginfo_map_to(&self, which: GitRepo) -> Option<String> {"}, {"sha": "c437bde5ae69a47233ef3a16678dac8aff9d51a3", "filename": "src/tools/build-manifest/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2FCargo.toml?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -13,4 +13,3 @@ tar = \"0.4.29\"\n sha2 = \"0.10.1\"\n rayon = \"1.5.1\"\n hex = \"0.4.2\"\n-num_cpus = \"1.13.0\""}, {"sha": "378efeb644375a41b7fa0b9a7940a8bcb01dc7d2", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5115bdc2e2829e9c9a7ce10516bd26469049e0a9/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=5115bdc2e2829e9c9a7ce10516bd26469049e0a9", "patch": "@@ -208,7 +208,7 @@ fn main() {\n     let num_threads = if let Some(num) = env::var_os(\"BUILD_MANIFEST_NUM_THREADS\") {\n         num.to_str().unwrap().parse().expect(\"invalid number for BUILD_MANIFEST_NUM_THREADS\")\n     } else {\n-        num_cpus::get()\n+        std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get)\n     };\n     rayon::ThreadPoolBuilder::new()\n         .num_threads(num_threads)"}]}