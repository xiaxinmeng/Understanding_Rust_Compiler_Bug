{"sha": "4a6fcc51a063a49c1b7a330828c857849d1e3119", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhNmZjYzUxYTA2M2E0OWMxYjdhMzMwODI4Yzg1Nzg0OWQxZTMxMTk=", "commit": {"author": {"name": "Joseph Crail", "email": "jbcrail@gmail.com", "date": "2014-07-03T05:30:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-03T19:54:51Z"}, "message": "Rename set_broadast() to set_broadcast().", "tree": {"sha": "238e85d1a1d129fdcbbfb9e5de74a629f375d727", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/238e85d1a1d129fdcbbfb9e5de74a629f375d727"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a6fcc51a063a49c1b7a330828c857849d1e3119", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6fcc51a063a49c1b7a330828c857849d1e3119", "html_url": "https://github.com/rust-lang/rust/commit/4a6fcc51a063a49c1b7a330828c857849d1e3119", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a6fcc51a063a49c1b7a330828c857849d1e3119/comments", "author": {"login": "jbcrail", "id": 6038, "node_id": "MDQ6VXNlcjYwMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/6038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbcrail", "html_url": "https://github.com/jbcrail", "followers_url": "https://api.github.com/users/jbcrail/followers", "following_url": "https://api.github.com/users/jbcrail/following{/other_user}", "gists_url": "https://api.github.com/users/jbcrail/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbcrail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbcrail/subscriptions", "organizations_url": "https://api.github.com/users/jbcrail/orgs", "repos_url": "https://api.github.com/users/jbcrail/repos", "events_url": "https://api.github.com/users/jbcrail/events{/privacy}", "received_events_url": "https://api.github.com/users/jbcrail/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3fa23bcb64064d50c2a9e3b5870bc82081359d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3fa23bcb64064d50c2a9e3b5870bc82081359d9", "html_url": "https://github.com/rust-lang/rust/commit/e3fa23bcb64064d50c2a9e3b5870bc82081359d9"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "21903eb26439cc30c79b60d90acdd8ff29bf51a9", "filename": "src/libstd/io/net/udp.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a6fcc51a063a49c1b7a330828c857849d1e3119/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a6fcc51a063a49c1b7a330828c857849d1e3119/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Fudp.rs?ref=4a6fcc51a063a49c1b7a330828c857849d1e3119", "patch": "@@ -165,14 +165,20 @@ impl UdpSocket {\n \n     /// Sets the broadcast flag on or off\n     #[experimental]\n-    pub fn set_broadast(&mut self, broadcast: bool) -> IoResult<()> {\n+    pub fn set_broadcast(&mut self, broadcast: bool) -> IoResult<()> {\n         if broadcast {\n             self.obj.hear_broadcasts()\n         } else {\n             self.obj.ignore_broadcasts()\n         }.map_err(IoError::from_rtio_error)\n     }\n \n+    /// Sets the broadcast flag on or off\n+    #[deprecated=\"renamed to `set_broadcast`\"]\n+    pub fn set_broadast(&mut self, broadcast: bool) -> IoResult<()> {\n+        self.set_broadcast(broadcast)\n+    }\n+\n     /// Sets the read/write timeout for this socket.\n     ///\n     /// For more information, see `TcpStream::set_timeout`"}]}