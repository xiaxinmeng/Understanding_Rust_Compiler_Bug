{"sha": "dbf58716dfe1dd502ea37d5a613847406a9736c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZjU4NzE2ZGZlMWRkNTAyZWEzN2Q1YTYxMzg0NzQwNmE5NzM2Yzk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-05T20:48:26Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-05T20:48:29Z"}, "message": "std: URLs without schemes parse as errors. Closes #3112", "tree": {"sha": "319410b82bf670fab4d96f7dca50157733fd196f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/319410b82bf670fab4d96f7dca50157733fd196f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbf58716dfe1dd502ea37d5a613847406a9736c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf58716dfe1dd502ea37d5a613847406a9736c9", "html_url": "https://github.com/rust-lang/rust/commit/dbf58716dfe1dd502ea37d5a613847406a9736c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbf58716dfe1dd502ea37d5a613847406a9736c9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a52f6d26db810b947f5ff515ffae18a31e9479c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a52f6d26db810b947f5ff515ffae18a31e9479c0", "html_url": "https://github.com/rust-lang/rust/commit/a52f6d26db810b947f5ff515ffae18a31e9479c0"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "ac9d4b389f97baf82df36c7bb21751331f7f2912", "filename": "src/libstd/net_url.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dbf58716dfe1dd502ea37d5a613847406a9736c9/src%2Flibstd%2Fnet_url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf58716dfe1dd502ea37d5a613847406a9736c9/src%2Flibstd%2Fnet_url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_url.rs?ref=dbf58716dfe1dd502ea37d5a613847406a9736c9", "patch": "@@ -353,7 +353,7 @@ fn get_scheme(rawurl: ~str) -> result::result<(~str, ~str), @~str> {\n           }\n         }\n     };\n-    return result::ok((copy rawurl, ~\"\"));\n+    return result::err(@~\"url: Scheme must be terminated with a colon.\");\n }\n \n // returns userinfo, host, port, and unparsed part, or an error\n@@ -779,6 +779,11 @@ mod tests {\n         assert option::unwrap(copy u.fragment) == ~\"something\";\n     }\n \n+    #[test]\n+    fn test_no_scheme() {\n+        assert result::is_err(get_scheme(~\"noschemehere.html\"));\n+    }\n+\n     #[test]\n     fn test_invalid_scheme_errors() {\n         assert result::is_err(from_str(~\"99://something\"));"}]}