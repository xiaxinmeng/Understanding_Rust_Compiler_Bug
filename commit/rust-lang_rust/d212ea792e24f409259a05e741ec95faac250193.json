{"sha": "d212ea792e24f409259a05e741ec95faac250193", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMTJlYTc5MmUyNGY0MDkyNTlhMDVlNzQxZWM5NWZhYWMyNTAxOTM=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-11-27T11:36:14Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-11-27T11:36:14Z"}, "message": "Remove intermediate vectors from add_bounds", "tree": {"sha": "c985565ec5f1c2ad5de6b3f45ab648e7ba1e41ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c985565ec5f1c2ad5de6b3f45ab648e7ba1e41ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d212ea792e24f409259a05e741ec95faac250193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d212ea792e24f409259a05e741ec95faac250193", "html_url": "https://github.com/rust-lang/rust/commit/d212ea792e24f409259a05e741ec95faac250193", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d212ea792e24f409259a05e741ec95faac250193/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cfa7b4ec9d314a412f79c1748bd2dfa7575b2e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cfa7b4ec9d314a412f79c1748bd2dfa7575b2e3", "html_url": "https://github.com/rust-lang/rust/commit/8cfa7b4ec9d314a412f79c1748bd2dfa7575b2e3"}], "stats": {"total": 19, "additions": 5, "deletions": 14}, "files": [{"sha": "b4e7a95600def24edf5b90c4690c2848d95bdc66", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d212ea792e24f409259a05e741ec95faac250193/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d212ea792e24f409259a05e741ec95faac250193/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=d212ea792e24f409259a05e741ec95faac250193", "patch": "@@ -815,34 +815,25 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         ast_bounds: &[hir::GenericBound<'_>],\n         bounds: &mut Bounds<'tcx>,\n     ) {\n-        let mut trait_bounds = Vec::new();\n-        let mut region_bounds = Vec::new();\n-\n         let constness = self.default_constness_for_trait_bounds();\n         for ast_bound in ast_bounds {\n             match *ast_bound {\n                 hir::GenericBound::Trait(ref b, hir::TraitBoundModifier::None) => {\n-                    trait_bounds.push((b, constness))\n+                    self.instantiate_poly_trait_ref(b, constness, param_ty, bounds);\n                 }\n                 hir::GenericBound::Trait(ref b, hir::TraitBoundModifier::MaybeConst) => {\n-                    trait_bounds.push((b, Constness::NotConst))\n+                    self.instantiate_poly_trait_ref(b, Constness::NotConst, param_ty, bounds);\n                 }\n                 hir::GenericBound::Trait(_, hir::TraitBoundModifier::Maybe) => {}\n                 hir::GenericBound::LangItemTrait(lang_item, span, hir_id, args) => self\n                     .instantiate_lang_item_trait_ref(\n                         lang_item, span, hir_id, args, param_ty, bounds,\n                     ),\n-                hir::GenericBound::Outlives(ref l) => region_bounds.push(l),\n+                hir::GenericBound::Outlives(ref l) => {\n+                    bounds.region_bounds.push((self.ast_region_to_region(l, None), l.span))\n+                }\n             }\n         }\n-\n-        for (bound, constness) in trait_bounds {\n-            let _ = self.instantiate_poly_trait_ref(bound, constness, param_ty, bounds);\n-        }\n-\n-        bounds.region_bounds.extend(\n-            region_bounds.into_iter().map(|r| (self.ast_region_to_region(r, None), r.span)),\n-        );\n     }\n \n     /// Translates a list of bounds from the HIR into the `Bounds` data structure."}]}