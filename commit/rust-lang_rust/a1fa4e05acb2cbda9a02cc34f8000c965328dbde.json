{"sha": "a1fa4e05acb2cbda9a02cc34f8000c965328dbde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZmE0ZTA1YWNiMmNiZGE5YTAyY2MzNGY4MDAwYzk2NTMyOGRiZGU=", "commit": {"author": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2020-08-16T00:41:59Z"}, "committer": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2020-08-17T16:01:04Z"}, "message": "Remove unnecessary rebinding of def ids.", "tree": {"sha": "5aa1165711f94b421ac1a998e7389c37896c7d0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aa1165711f94b421ac1a998e7389c37896c7d0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1fa4e05acb2cbda9a02cc34f8000c965328dbde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1fa4e05acb2cbda9a02cc34f8000c965328dbde", "html_url": "https://github.com/rust-lang/rust/commit/a1fa4e05acb2cbda9a02cc34f8000c965328dbde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1fa4e05acb2cbda9a02cc34f8000c965328dbde/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "154b74e8f959581d37d1a1ae860ee1bf7b682f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/154b74e8f959581d37d1a1ae860ee1bf7b682f34", "html_url": "https://github.com/rust-lang/rust/commit/154b74e8f959581d37d1a1ae860ee1bf7b682f34"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "47f680932f14ea86506516a58549dac2af4c9236", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a1fa4e05acb2cbda9a02cc34f8000c965328dbde/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1fa4e05acb2cbda9a02cc34f8000c965328dbde/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=a1fa4e05acb2cbda9a02cc34f8000c965328dbde", "patch": "@@ -2228,18 +2228,15 @@ impl ClashingExternDeclarations {\n                         };\n \n                         match (a_kind, b_kind) {\n-                            (Adt(_, a_substs), Adt(_, b_substs)) => {\n+                            (Adt(a_def, a_substs), Adt(b_def, b_substs)) => {\n                                 let a = a.subst(cx.tcx, a_substs);\n                                 let b = b.subst(cx.tcx, b_substs);\n                                 debug!(\"Comparing {:?} and {:?}\", a, b);\n \n-                                if let (Adt(a_def, ..), Adt(b_def, ..)) = (&a.kind, &b.kind) {\n-                                    // Grab a flattened representation of all fields.\n-                                    let a_fields =\n-                                        a_def.variants.iter().flat_map(|v| v.fields.iter());\n-                                    let b_fields =\n-                                        b_def.variants.iter().flat_map(|v| v.fields.iter());\n-                                    compare_layouts(a, b)\n+                                // Grab a flattened representation of all fields.\n+                                let a_fields = a_def.variants.iter().flat_map(|v| v.fields.iter());\n+                                let b_fields = b_def.variants.iter().flat_map(|v| v.fields.iter());\n+                                compare_layouts(a, b)\n                             && a_fields.eq_by(\n                                 b_fields,\n                                 |&ty::FieldDef { did: a_did, .. },\n@@ -2253,9 +2250,6 @@ impl ClashingExternDeclarations {\n                                     )\n                                 },\n                             )\n-                                } else {\n-                                    unreachable!()\n-                                }\n                             }\n                             (Array(a_ty, a_const), Array(b_ty, b_const)) => {\n                                 // For arrays, we also check the constness of the type."}]}