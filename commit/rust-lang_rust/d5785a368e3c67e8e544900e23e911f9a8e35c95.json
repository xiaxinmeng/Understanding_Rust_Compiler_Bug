{"sha": "d5785a368e3c67e8e544900e23e911f9a8e35c95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1Nzg1YTM2OGUzYzY3ZThlNTQ0OTAwZTIzZTkxMWY5YThlMzVjOTU=", "commit": {"author": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2016-11-30T02:25:08Z"}, "committer": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2016-11-30T02:33:23Z"}, "message": "rustdoc: fix up --playground-url", "tree": {"sha": "15d57d91a83e63b5a4a23b0460c6b9edfed38cf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15d57d91a83e63b5a4a23b0460c6b9edfed38cf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5785a368e3c67e8e544900e23e911f9a8e35c95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5785a368e3c67e8e544900e23e911f9a8e35c95", "html_url": "https://github.com/rust-lang/rust/commit/d5785a368e3c67e8e544900e23e911f9a8e35c95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5785a368e3c67e8e544900e23e911f9a8e35c95/comments", "author": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "943bf963004b07fbb8d31be3244b155ce00716fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/943bf963004b07fbb8d31be3244b155ce00716fb", "html_url": "https://github.com/rust-lang/rust/commit/943bf963004b07fbb8d31be3244b155ce00716fb"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "17ed95841604fdf5467dcb21f8ecc1f7f085a3fa", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d5785a368e3c67e8e544900e23e911f9a8e35c95/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5785a368e3c67e8e544900e23e911f9a8e35c95/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=d5785a368e3c67e8e544900e23e911f9a8e35c95", "patch": "@@ -428,6 +428,7 @@ pub fn derive_id(candidate: String) -> String {\n /// Generates the documentation for `crate` into the directory `dst`\n pub fn run(mut krate: clean::Crate,\n            external_html: &ExternalHtml,\n+           playground_url: Option<String>,\n            dst: PathBuf,\n            passes: FxHashSet<String>,\n            css_file_extension: Option<PathBuf>,\n@@ -452,12 +453,11 @@ pub fn run(mut krate: clean::Crate,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n-    markdown::PLAYGROUND.with(|slot| {\n-        if slot.borrow().is_some() {\n-            let url = slot.borrow().as_ref().unwrap().1.clone();\n+    if let Some(url) = playground_url {\n+        markdown::PLAYGROUND.with(|slot| {\n             *slot.borrow_mut() = Some((Some(krate.name.clone()), url));\n-        }\n-    });\n+        });\n+    }\n \n     // Crawl the crate attributes looking for attributes which control how we're\n     // going to emit HTML"}, {"sha": "2108d3e3dccce76b952b2b461d18165e3ec28814", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d5785a368e3c67e8e544900e23e911f9a8e35c95/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5785a368e3c67e8e544900e23e911f9a8e35c95/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=d5785a368e3c67e8e544900e23e911f9a8e35c95", "patch": "@@ -234,10 +234,6 @@ pub fn main_args(args: &[String]) -> isize {\n         }\n     };\n \n-    if let Some(playground) = matches.opt_str(\"playground-url\") {\n-        html::markdown::PLAYGROUND.with(|s| { *s.borrow_mut() = Some((None, playground)); });\n-    }\n-\n     let test_args = matches.opt_strs(\"test-args\");\n     let test_args: Vec<String> = test_args.iter()\n                                           .flat_map(|s| s.split_whitespace())\n@@ -266,6 +262,7 @@ pub fn main_args(args: &[String]) -> isize {\n         None => return 3\n     };\n     let crate_name = matches.opt_str(\"crate-name\");\n+    let playground_url = matches.opt_str(\"playground-url\");\n \n     match (should_test, markdown_input) {\n         (true, true) => {\n@@ -287,7 +284,7 @@ pub fn main_args(args: &[String]) -> isize {\n         info!(\"going to format\");\n         match output_format.as_ref().map(|s| &**s) {\n             Some(\"html\") | None => {\n-                html::render::run(krate, &external_html,\n+                html::render::run(krate, &external_html, playground_url,\n                                   output.unwrap_or(PathBuf::from(\"doc\")),\n                                   passes.into_iter().collect(),\n                                   css_file_extension,"}, {"sha": "29267960a4a815c500f877e2ab930e165c1b4ca1", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5785a368e3c67e8e544900e23e911f9a8e35c95/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5785a368e3c67e8e544900e23e911f9a8e35c95/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=d5785a368e3c67e8e544900e23e911f9a8e35c95", "patch": "@@ -63,7 +63,8 @@ pub fn render(input: &str, mut output: PathBuf, matches: &getopts::Matches,\n         Err(LoadStringError::ReadFail) => return 1,\n         Err(LoadStringError::BadUtf8) => return 2,\n     };\n-    if let Some(playground) = matches.opt_str(\"markdown-playground-url\") {\n+    if let Some(playground) = matches.opt_str(\"markdown-playground-url\").or(\n+                              matches.opt_str(\"playground-url\")) {\n         markdown::PLAYGROUND.with(|s| { *s.borrow_mut() = Some((None, playground)); });\n     }\n "}]}