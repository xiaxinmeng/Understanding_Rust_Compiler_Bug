{"sha": "0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "node_id": "C_kwDOAAsO6NoAKDAwOThjZDRlODM1NzRhOWU4NzcxYjJhYzY0M2Q4NWU1ZTA3ZTQ0YTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-04T17:18:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-04T17:18:17Z"}, "message": "Rollup merge of #108865 - Zoxc:library-dummy-crate, r=jyn514\n\nAdd a `sysroot` crate to represent the standard library crates\n\nThis adds a dummy crate named `sysroot` to represent the standard library target instead of using the `test` crate. This allows the removal of `proc_macro` as a dependency of `test` allowing these 2 crates to build in parallel saving around 9 seconds locally.", "tree": {"sha": "1ddf66a75bb076d254e3bf210c44a47c0c9b5a18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ddf66a75bb076d254e3bf210c44a47c0c9b5a18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkU+jZCRBK7hj4Ov3rIwAAevEIABNYAxpLEjtaDtdkVh+NHlaZ\nui7H3sTq58FhRkiXMk/rayz71kc0H64aRjXEnTz7i7m/gt/l9WcDfr779Tjjcvht\nTVtBoNuU7dXPM9bCtDp/X+456bMBjeM6mUn/lr+EAu/QNxQ7Sh3i4Xpt2xY/YgvG\norn5K376h3fF6VzODFVOs340vDAhWT5s59v4p5RjqzWnwqrIsnSVOOjCJrhIpE9f\nVvETu9K7exw+qbzo4z5u9LJcgeJrdRIQUxlGpopNSaO6NgHzoUFGhibNzzwtCWuk\nSqy7zvawoKob6WxRENlbLkPrNxR4DRa4BdPnbd45hyq2Bq7QMWAEQiJdllahwtk=\n=wsfN\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ddf66a75bb076d254e3bf210c44a47c0c9b5a18\nparent eac35583d2ffb5ed9e564dee0822c9a244058ee0\nparent fd4c81f4c19e3b1eb0710e50e04fb1f980b7e7ab\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683220697 +0200\ncommitter GitHub <noreply@github.com> 1683220697 +0200\n\nRollup merge of #108865 - Zoxc:library-dummy-crate, r=jyn514\n\nAdd a `sysroot` crate to represent the standard library crates\n\nThis adds a dummy crate named `sysroot` to represent the standard library target instead of using the `test` crate. This allows the removal of `proc_macro` as a dependency of `test` allowing these 2 crates to build in parallel saving around 9 seconds locally.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "html_url": "https://github.com/rust-lang/rust/commit/0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eac35583d2ffb5ed9e564dee0822c9a244058ee0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eac35583d2ffb5ed9e564dee0822c9a244058ee0", "html_url": "https://github.com/rust-lang/rust/commit/eac35583d2ffb5ed9e564dee0822c9a244058ee0"}, {"sha": "fd4c81f4c19e3b1eb0710e50e04fb1f980b7e7ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4c81f4c19e3b1eb0710e50e04fb1f980b7e7ab", "html_url": "https://github.com/rust-lang/rust/commit/fd4c81f4c19e3b1eb0710e50e04fb1f980b7e7ab"}], "stats": {"total": 72, "additions": 44, "deletions": 28}, "files": [{"sha": "e69b36cb98346aadc1537821acb3747a908797f0", "filename": "Cargo.lock", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -4739,6 +4739,15 @@ dependencies = [\n  \"unicode-xid\",\n ]\n \n+[[package]]\n+name = \"sysroot\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"proc_macro\",\n+ \"std\",\n+ \"test\",\n+]\n+\n [[package]]\n name = \"tar\"\n version = \"0.4.38\"\n@@ -4823,7 +4832,6 @@ dependencies = [\n  \"getopts\",\n  \"panic_abort\",\n  \"panic_unwind\",\n- \"proc_macro\",\n  \"std\",\n ]\n "}, {"sha": "7aaa34a68e66f96ba1c216e987699e5f82ab2369", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -2,7 +2,7 @@\n members = [\n   \"compiler/rustc\",\n   \"library/std\",\n-  \"library/test\",\n+  \"library/sysroot\",\n   \"src/rustdoc-json-types\",\n   \"src/tools/build_helper\",\n   \"src/tools/cargotest\","}, {"sha": "5356ee277cc2cfa309fd7e02c2b84a1b4cb5c19a", "filename": "library/sysroot/Cargo.toml", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/library%2Fsysroot%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/library%2Fsysroot%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fsysroot%2FCargo.toml?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -0,0 +1,27 @@\n+[package]\n+name = \"sysroot\"\n+version = \"0.0.0\"\n+edition = \"2021\"\n+\n+# this is a dummy crate to ensure that all required crates appear in the sysroot\n+[dependencies]\n+proc_macro = { path = \"../proc_macro\" }\n+std = { path = \"../std\" }\n+test = { path = \"../test\" }\n+\n+# Forward features to the `std` crate as necessary\n+[features]\n+default = [\"std_detect_file_io\", \"std_detect_dlsym_getauxval\", \"panic-unwind\"]\n+backtrace = [\"std/backtrace\"]\n+compiler-builtins-c = [\"std/compiler-builtins-c\"]\n+compiler-builtins-mem = [\"std/compiler-builtins-mem\"]\n+compiler-builtins-no-asm = [\"std/compiler-builtins-no-asm\"]\n+compiler-builtins-mangled-names = [\"std/compiler-builtins-mangled-names\"]\n+llvm-libunwind = [\"std/llvm-libunwind\"]\n+system-llvm-libunwind = [\"std/system-llvm-libunwind\"]\n+panic-unwind = [\"std/panic_unwind\"]\n+panic_immediate_abort = [\"std/panic_immediate_abort\"]\n+profiler = [\"std/profiler\"]\n+std_detect_file_io = [\"std/std_detect_file_io\"]\n+std_detect_dlsym_getauxval = [\"std/std_detect_dlsym_getauxval\"]\n+std_detect_env_override = [\"std/std_detect_env_override\"]"}, {"sha": "71ceb580a40c34f641ed9256e5ae5176fa5d5b80", "filename": "library/sysroot/src/lib.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/library%2Fsysroot%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/library%2Fsysroot%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fsysroot%2Fsrc%2Flib.rs?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -0,0 +1 @@\n+// This is intentionally empty since this crate is only used to depend on other library crates."}, {"sha": "91a1abde059f693711807e8216eec9a8d7d6b5cb", "filename": "library/test/Cargo.toml", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/library%2Ftest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/library%2Ftest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2FCargo.toml?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -12,23 +12,3 @@ std = { path = \"../std\" }\n core = { path = \"../core\" }\n panic_unwind = { path = \"../panic_unwind\" }\n panic_abort = { path = \"../panic_abort\" }\n-\n-# not actually used but needed to always have proc_macro in the sysroot\n-proc_macro = { path = \"../proc_macro\" }\n-\n-# Forward features to the `std` crate as necessary\n-[features]\n-default = [\"std_detect_file_io\", \"std_detect_dlsym_getauxval\", \"panic-unwind\"]\n-backtrace = [\"std/backtrace\"]\n-compiler-builtins-c = [\"std/compiler-builtins-c\"]\n-compiler-builtins-mem = [\"std/compiler-builtins-mem\"]\n-compiler-builtins-no-asm = [\"std/compiler-builtins-no-asm\"]\n-compiler-builtins-mangled-names = [\"std/compiler-builtins-mangled-names\"]\n-llvm-libunwind = [\"std/llvm-libunwind\"]\n-system-llvm-libunwind = [\"std/system-llvm-libunwind\"]\n-panic-unwind = [\"std/panic_unwind\"]\n-panic_immediate_abort = [\"std/panic_immediate_abort\"]\n-profiler = [\"std/profiler\"]\n-std_detect_file_io = [\"std/std_detect_file_io\"]\n-std_detect_dlsym_getauxval = [\"std/std_detect_dlsym_getauxval\"]\n-std_detect_env_override = [\"std/std_detect_env_override\"]"}, {"sha": "956b82385f6f5344a5f7a8c8654ac76edd3d6dee", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -79,7 +79,7 @@ impl Step for Std {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.all_krates(\"test\").path(\"library\")\n+        run.all_krates(\"sysroot\").path(\"library\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "0d9fd56b03814afe623b9bdb08d8ceb79e355ad8", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -81,7 +81,7 @@ macro_rules! clean_crate_tree {\n \n clean_crate_tree! {\n     Rustc, Mode::Rustc, \"rustc-main\";\n-    Std, Mode::Std, \"test\";\n+    Std, Mode::Std, \"sysroot\";\n }\n \n fn clean_default(build: &Build, all: bool) {"}, {"sha": "966ae00fa1d866e915a6216f6f2b50b229ea5876", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -56,7 +56,7 @@ impl Step for Std {\n         // When downloading stage1, the standard library has already been copied to the sysroot, so\n         // there's no need to rebuild it.\n         let builder = run.builder;\n-        run.crate_or_deps(\"test\")\n+        run.crate_or_deps(\"sysroot\")\n             .path(\"library\")\n             .lazy_default_condition(Box::new(|| !builder.download_rustc()))\n     }\n@@ -364,7 +364,7 @@ pub fn std_cargo(builder: &Builder<'_>, target: TargetSelection, stage: u32, car\n             .arg(\"--features\")\n             .arg(features)\n             .arg(\"--manifest-path\")\n-            .arg(builder.src.join(\"library/test/Cargo.toml\"));\n+            .arg(builder.src.join(\"library/sysroot/Cargo.toml\"));\n \n         // Help the libc crate compile by assisting it in finding various\n         // sysroot native libraries."}, {"sha": "8f5d9bb66e1034fc094badd09725a9ca386587c9", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -438,7 +438,7 @@ impl Step for Std {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        run.all_krates(\"test\").path(\"library\").default_condition(builder.config.docs)\n+        run.all_krates(\"sysroot\").path(\"library\").default_condition(builder.config.docs)\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "cfccb51662785f9bfa7f28d083edc8b878863f77", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0098cd4e83574a9e8771b2ac643d85e5e07e44a9/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=0098cd4e83574a9e8771b2ac643d85e5e07e44a9", "patch": "@@ -2145,7 +2145,7 @@ impl Step for Crate {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.crate_or_deps(\"test\")\n+        run.crate_or_deps(\"sysroot\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}]}