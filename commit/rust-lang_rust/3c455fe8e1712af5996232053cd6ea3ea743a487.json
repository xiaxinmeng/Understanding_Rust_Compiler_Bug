{"sha": "3c455fe8e1712af5996232053cd6ea3ea743a487", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNDU1ZmU4ZTE3MTJhZjU5OTYyMzIwNTNjZDZlYTNlYTc0M2E0ODc=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2020-04-18T13:26:45Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2020-04-19T19:14:19Z"}, "message": "MIR: use span instead of NodeId to determine if optimized_mir should be run", "tree": {"sha": "524a95353e86395f37e5cd242ff79dd2c141e743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/524a95353e86395f37e5cd242ff79dd2c141e743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c455fe8e1712af5996232053cd6ea3ea743a487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c455fe8e1712af5996232053cd6ea3ea743a487", "html_url": "https://github.com/rust-lang/rust/commit/3c455fe8e1712af5996232053cd6ea3ea743a487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c455fe8e1712af5996232053cd6ea3ea743a487/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28742a1146f10a4f09369baad027a464acb7a766", "url": "https://api.github.com/repos/rust-lang/rust/commits/28742a1146f10a4f09369baad027a464acb7a766", "html_url": "https://github.com/rust-lang/rust/commit/28742a1146f10a4f09369baad027a464acb7a766"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "173c2a3f1d8641b2201c05aa9d7f5f57b8799d81", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c455fe8e1712af5996232053cd6ea3ea743a487/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c455fe8e1712af5996232053cd6ea3ea743a487/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=3c455fe8e1712af5996232053cd6ea3ea743a487", "patch": "@@ -94,17 +94,15 @@ impl Inliner<'tcx> {\n                     continue;\n                 }\n \n-                let self_node_id = self.tcx.hir().as_local_node_id(self.source.def_id()).unwrap();\n-                let callee_node_id = self.tcx.hir().as_local_node_id(callsite.callee);\n+                let callee_hir_id = self.tcx.hir().as_local_hir_id(callsite.callee);\n \n-                let callee_body = if let Some(callee_node_id) = callee_node_id {\n+                let callee_body = if let Some(callee_hir_id) = callee_hir_id {\n+                    let self_hir_id = self.tcx.hir().as_local_hir_id(self.source.def_id()).unwrap();\n                     // Avoid a cycle here by only using `optimized_mir` only if we have\n-                    // a lower node id than the callee. This ensures that the callee will\n+                    // a lower `HirId` than the callee. This ensures that the callee will\n                     // not inline us. This trick only works without incremental compilation.\n                     // So don't do it if that is enabled.\n-                    if !self.tcx.dep_graph.is_fully_enabled()\n-                        && self_node_id.as_u32() < callee_node_id.as_u32()\n-                    {\n+                    if !self.tcx.dep_graph.is_fully_enabled() && self_hir_id < callee_hir_id {\n                         self.tcx.optimized_mir(callsite.callee)\n                     } else {\n                         continue;"}]}