{"sha": "c4cd4e19d976240443ef31968e7b763cf83d6fdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0Y2Q0ZTE5ZDk3NjI0MDQ0M2VmMzE5NjhlN2I3NjNjZjgzZDZmZGI=", "commit": {"author": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2017-02-02T11:24:50Z"}, "committer": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2017-02-02T11:24:50Z"}, "message": "Wrap 80 columns", "tree": {"sha": "aeddfc860eb2188570c1cd33e83f03d1d8f3879a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aeddfc860eb2188570c1cd33e83f03d1d8f3879a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4cd4e19d976240443ef31968e7b763cf83d6fdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4cd4e19d976240443ef31968e7b763cf83d6fdb", "html_url": "https://github.com/rust-lang/rust/commit/c4cd4e19d976240443ef31968e7b763cf83d6fdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4cd4e19d976240443ef31968e7b763cf83d6fdb/comments", "author": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac", "html_url": "https://github.com/rust-lang/rust/commit/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "811f7b4196768f3185e841168d9dca528675287d", "filename": "src/doc/book/structs.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c4cd4e19d976240443ef31968e7b763cf83d6fdb/src%2Fdoc%2Fbook%2Fstructs.md", "raw_url": "https://github.com/rust-lang/rust/raw/c4cd4e19d976240443ef31968e7b763cf83d6fdb/src%2Fdoc%2Fbook%2Fstructs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fstructs.md?ref=c4cd4e19d976240443ef31968e7b763cf83d6fdb", "patch": "@@ -117,7 +117,9 @@ fn main() {\n }\n ```\n \n-We can initializing a data structure (struct, enum, union) with named fields, by writing `fieldname` as a shorthand for `fieldname: fieldname`. This allows a compact syntax for initialization, with less duplication:\n+We can initializing a data structure (struct, enum, union) with named fields,\n+by writing `fieldname` as a shorthand for `fieldname: fieldname`. This allows a\n+compact syntax for initialization, with less duplication:\n \n ```\n #![feature(field_init_shorthand)]\n@@ -133,7 +135,7 @@ fn main() {\n     let name = \"Peter\";\n     let age = 27;\n     let peter = Person { name, age };\n-    \n+\n     // Print debug struct\n     println!(\"{:?}\", peter);\n }"}, {"sha": "6f2ce5fd8d1c50db48ba1daa061dddfa5a68f599", "filename": "src/doc/reference.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c4cd4e19d976240443ef31968e7b763cf83d6fdb/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/c4cd4e19d976240443ef31968e7b763cf83d6fdb/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=c4cd4e19d976240443ef31968e7b763cf83d6fdb", "patch": "@@ -2759,9 +2759,13 @@ Point3d {y: 0, z: 10, .. base};\n \n #### Struct field init shorthand\n \n-When initializing a data structure (struct, enum, union) with named fields, allow writing `fieldname` as a shorthand for `fieldname: fieldname`. This allows a compact syntax for initialization, with less duplication.\n+When initializing a data structure (struct, enum, union) with named fields,\n+allow writing `fieldname` as a shorthand for `fieldname: fieldname`. This\n+allows a compact syntax for initialization, with less duplication.\n \n-In the initializer for a `struct` with named fields, a `union` with named fields, or an enum variant with named fields, accept an identifier `field` as a shorthand for `field: field`.\n+In the initializer for a `struct` with named fields, a `union` with named\n+fields, or an enum variant with named fields, accept an identifier `field` as a\n+shorthand for `field: field`.\n \n Example:\n "}]}