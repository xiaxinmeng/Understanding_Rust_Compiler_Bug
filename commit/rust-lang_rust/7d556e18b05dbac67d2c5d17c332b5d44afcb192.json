{"sha": "7d556e18b05dbac67d2c5d17c332b5d44afcb192", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNTU2ZTE4YjA1ZGJhYzY3ZDJjNWQxN2MzMzJiNWQ0NGFmY2IxOTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-11T23:40:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-11T23:41:16Z"}, "message": "Fix deriving for single-variant enums", "tree": {"sha": "d15ccd96524b3c6d0db0700ad7f17fa7aed68218", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d15ccd96524b3c6d0db0700ad7f17fa7aed68218"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d556e18b05dbac67d2c5d17c332b5d44afcb192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d556e18b05dbac67d2c5d17c332b5d44afcb192", "html_url": "https://github.com/rust-lang/rust/commit/7d556e18b05dbac67d2c5d17c332b5d44afcb192", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d556e18b05dbac67d2c5d17c332b5d44afcb192/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e38e334de13d878da91991c4c5e9014a06f93cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e38e334de13d878da91991c4c5e9014a06f93cb", "html_url": "https://github.com/rust-lang/rust/commit/6e38e334de13d878da91991c4c5e9014a06f93cb"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "d41e7e3153636074b9219556482867ada01cf784", "filename": "src/libsyntax/ext/deriving.rs", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7d556e18b05dbac67d2c5d17c332b5d44afcb192/src%2Flibsyntax%2Fext%2Fderiving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d556e18b05dbac67d2c5d17c332b5d44afcb192/src%2Flibsyntax%2Fext%2Fderiving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving.rs?ref=7d556e18b05dbac67d2c5d17c332b5d44afcb192", "patch": "@@ -698,26 +698,30 @@ fn expand_deriving_eq_enum_method(cx: ext_ctxt,\n         };\n         other_arms.push(move matching_arm);\n \n-        // Create the nonmatching pattern.\n-        let nonmatching_pat = @{\n-            id: cx.next_id(),\n-            node: pat_wild,\n-            span: span\n-        };\n-\n-        // Create the nonmatching pattern body.\n-        let nonmatching_expr = build::mk_bool(cx, span, !is_eq);\n-        let nonmatching_body_block = build::mk_simple_block(cx,\n-                                                            span,\n-                                                            nonmatching_expr);\n-\n-        // Create the nonmatching arm.\n-        let nonmatching_arm = {\n-            pats: ~[ nonmatching_pat ],\n-            guard: None,\n-            body: move nonmatching_body_block\n-        };\n-        other_arms.push(move nonmatching_arm);\n+        // Maybe generate a non-matching case. If there is only one\n+        // variant then there will always be a match.\n+        if enum_definition.variants.len() > 1 {\n+            // Create the nonmatching pattern.\n+            let nonmatching_pat = @{\n+                id: cx.next_id(),\n+                node: pat_wild,\n+                span: span\n+            };\n+\n+            // Create the nonmatching pattern body.\n+            let nonmatching_expr = build::mk_bool(cx, span, !is_eq);\n+            let nonmatching_body_block = build::mk_simple_block(cx,\n+                                                                span,\n+                                                                nonmatching_expr);\n+\n+            // Create the nonmatching arm.\n+            let nonmatching_arm = {\n+                pats: ~[ nonmatching_pat ],\n+                guard: None,\n+                body: move nonmatching_body_block\n+            };\n+            other_arms.push(move nonmatching_arm);\n+        }\n \n         // Create the self pattern.\n         let self_pat = create_enum_variant_pattern(cx,"}, {"sha": "40055a61380e7eccd7749b82952f0b65f1d52600", "filename": "src/test/run-pass/deriving-enum-single-variant.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d556e18b05dbac67d2c5d17c332b5d44afcb192/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d556e18b05dbac67d2c5d17c332b5d44afcb192/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs?ref=7d556e18b05dbac67d2c5d17c332b5d44afcb192", "patch": "@@ -0,0 +1,8 @@\n+type task_id = int;\n+\n+#[deriving_eq]\n+pub enum Task {\n+    TaskHandle(task_id)\n+}\n+\n+fn main() { }"}]}