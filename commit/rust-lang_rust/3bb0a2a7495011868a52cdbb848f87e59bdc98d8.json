{"sha": "3bb0a2a7495011868a52cdbb848f87e59bdc98d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYjBhMmE3NDk1MDExODY4YTUyY2RiYjg0OGY4N2U1OWJkYzk4ZDg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-02-04T03:08:02Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-02-04T03:08:02Z"}, "message": "Do not reorder items with '#[macro_use]'\n\nReordering items with `#[macro_use]` could change the semantic of source code.\nThere could exist other attributes that requires special treatment.", "tree": {"sha": "a452155d6a0d5a97bdfd41779cb5e93cc50dec57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a452155d6a0d5a97bdfd41779cb5e93cc50dec57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bb0a2a7495011868a52cdbb848f87e59bdc98d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb0a2a7495011868a52cdbb848f87e59bdc98d8", "html_url": "https://github.com/rust-lang/rust/commit/3bb0a2a7495011868a52cdbb848f87e59bdc98d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bb0a2a7495011868a52cdbb848f87e59bdc98d8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9273a724209849be96ded894f8eed5300b4daa1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9273a724209849be96ded894f8eed5300b4daa1f", "html_url": "https://github.com/rust-lang/rust/commit/9273a724209849be96ded894f8eed5300b4daa1f"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "c28eed561a54a1469a931f491f866d11b5d2161d", "filename": "src/visitor.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3bb0a2a7495011868a52cdbb848f87e59bdc98d8/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb0a2a7495011868a52cdbb848f87e59bdc98d8/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=3bb0a2a7495011868a52cdbb848f87e59bdc98d8", "patch": "@@ -11,7 +11,7 @@\n use std::cmp;\n \n use syntax::{ast, visit};\n-use syntax::attr::HasAttrs;\n+use syntax::attr::{self, HasAttrs};\n use syntax::codemap::{self, BytePos, CodeMap, Pos, Span};\n use syntax::parse::ParseSess;\n \n@@ -49,11 +49,15 @@ fn is_mod_decl(item: &ast::Item) -> bool {\n     }\n }\n \n+fn contains_macro_use_attr(attrs: &[ast::Attribute], span: Span) -> bool {\n+    attr::contains_name(&filter_inline_attrs(attrs, span), \"macro_use\")\n+}\n+\n /// Returns true for `mod foo;` without any inline attributes.\n /// We cannot reorder modules with attributes because doing so can break the code.\n /// e.g. `#[macro_use]`.\n fn is_mod_decl_without_attr(item: &ast::Item) -> bool {\n-    is_mod_decl(item) && filter_inline_attrs(&item.attrs, item.span()).is_empty()\n+    is_mod_decl(item) && !contains_macro_use_attr(&item.attrs, item.span())\n }\n \n fn is_use_item(item: &ast::Item) -> bool {\n@@ -63,13 +67,21 @@ fn is_use_item(item: &ast::Item) -> bool {\n     }\n }\n \n+fn is_use_item_without_attr(item: &ast::Item) -> bool {\n+    is_use_item(item) && !contains_macro_use_attr(&item.attrs, item.span())\n+}\n+\n fn is_extern_crate(item: &ast::Item) -> bool {\n     match item.node {\n         ast::ItemKind::ExternCrate(..) => true,\n         _ => false,\n     }\n }\n \n+fn is_extern_crate_without_attr(item: &ast::Item) -> bool {\n+    is_extern_crate(item) && !contains_macro_use_attr(&item.attrs, item.span())\n+}\n+\n /// Creates a string slice corresponding to the specified span.\n pub struct SnippetProvider<'a> {\n     /// A pointer to the content of the file we are formatting.\n@@ -676,11 +688,15 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             // subsequent items that have the same item kind to be reordered within\n             // `format_imports`. Otherwise, just format the next item for output.\n             {\n-                try_reorder_items_with!(reorder_imports, reorder_imports_in_group, is_use_item);\n+                try_reorder_items_with!(\n+                    reorder_imports,\n+                    reorder_imports_in_group,\n+                    is_use_item_without_attr\n+                );\n                 try_reorder_items_with!(\n                     reorder_extern_crates,\n                     reorder_extern_crates_in_group,\n-                    is_extern_crate\n+                    is_extern_crate_without_attr\n                 );\n                 try_reorder_items_with!(reorder_modules, reorder_modules, is_mod_decl_without_attr);\n             }"}]}