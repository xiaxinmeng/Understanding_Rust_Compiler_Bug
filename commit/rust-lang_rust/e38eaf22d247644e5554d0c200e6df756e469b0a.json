{"sha": "e38eaf22d247644e5554d0c200e6df756e469b0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOGVhZjIyZDI0NzY0NGU1NTU0ZDBjMjAwZTZkZjc1NmU0NjliMGE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-08-15T03:07:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-15T03:07:13Z"}, "message": "Rollup merge of #75513 - estebank:confused-parser, r=davidtwco\n\nRecover gracefully from `struct` parse errors\n\nCurrently the parser tries to recover from finding a keyword where a field name was expected, but this causes extra knock down parse errors that are completely irrelevant. Instead, bail out early in the parsing of the field and consume the remaining tokens in the block. This can reduce output significantly.\n\n_Improvements based on the narrative in https://fasterthanli.me/articles/i-am-a-java-csharp-c-or-cplusplus-dev-time-to-do-some-rust_", "tree": {"sha": "7bb376f1bd26749a2cf976e4b15c3634daf41d64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bb376f1bd26749a2cf976e4b15c3634daf41d64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e38eaf22d247644e5554d0c200e6df756e469b0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfN1FiCRBK7hj4Ov3rIwAAdHIIAI6OwWIPKcpMtbmIsXv+u+1w\n/U5ATjRpv7bicz0REji12OLM0RVOZW1SBjDiyLxPURXetsFY90CIbCZjNUgp0Gck\nB0VFQqSqTrLAPMmAZRc7PARLIrBm2tLiNu06l3cqlhPWOuOi2yPOKAm8sxSPM9Nr\ndXBugsuHCQvsDduxX/qNg3HyGp4SmCrSvMVoAVPEkPR5aw7gHWiWta8mCEjpPRyo\nhDTuP39MPYOTNdxcyiPJYBu0TLvWHE//JK8+ThPz4r4Pv9mWYbLb5xTM6LnNVaia\n77mBDA7KsmiWPrtoZelpBbf5gUbb24k3R4gXywZB8PupQPidVDrQc+kMSD9Lk4I=\n=wlPM\n-----END PGP SIGNATURE-----\n", "payload": "tree 7bb376f1bd26749a2cf976e4b15c3634daf41d64\nparent 28b11abc2f336288379b6e635e65e23809616487\nparent 2e9b45e1dd8d3a248e2aea60314787650e3abcc9\nauthor Tyler Mandry <tmandry@gmail.com> 1597460833 -0700\ncommitter GitHub <noreply@github.com> 1597460833 -0700\n\nRollup merge of #75513 - estebank:confused-parser, r=davidtwco\n\nRecover gracefully from `struct` parse errors\n\nCurrently the parser tries to recover from finding a keyword where a field name was expected, but this causes extra knock down parse errors that are completely irrelevant. Instead, bail out early in the parsing of the field and consume the remaining tokens in the block. This can reduce output significantly.\n\n_Improvements based on the narrative in https://fasterthanli.me/articles/i-am-a-java-csharp-c-or-cplusplus-dev-time-to-do-some-rust_\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e38eaf22d247644e5554d0c200e6df756e469b0a", "html_url": "https://github.com/rust-lang/rust/commit/e38eaf22d247644e5554d0c200e6df756e469b0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e38eaf22d247644e5554d0c200e6df756e469b0a/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28b11abc2f336288379b6e635e65e23809616487", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b11abc2f336288379b6e635e65e23809616487", "html_url": "https://github.com/rust-lang/rust/commit/28b11abc2f336288379b6e635e65e23809616487"}, {"sha": "2e9b45e1dd8d3a248e2aea60314787650e3abcc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9b45e1dd8d3a248e2aea60314787650e3abcc9", "html_url": "https://github.com/rust-lang/rust/commit/2e9b45e1dd8d3a248e2aea60314787650e3abcc9"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "bba65534f1be306cd6276aea94dbe647a2b1cd6d", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=e38eaf22d247644e5554d0c200e6df756e469b0a", "patch": "@@ -1313,7 +1313,7 @@ impl<'a> Parser<'a> {\n         vis: Visibility,\n         attrs: Vec<Attribute>,\n     ) -> PResult<'a, StructField> {\n-        let name = self.parse_ident()?;\n+        let name = self.parse_ident_common(false)?;\n         self.expect(&token::Colon)?;\n         let ty = self.parse_ty()?;\n         Ok(StructField {"}, {"sha": "090a17b413dda582e9ea71ff3d427f3fc66088ae", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.rs?ref=e38eaf22d247644e5554d0c200e6df756e469b0a", "patch": "@@ -2,7 +2,6 @@ pub(crate) struct Bar<T> {\n   foo: T,\n \n trait T { //~ ERROR expected identifier, found keyword `trait`\n-//~^ ERROR expected `:`, found `T`\n     fn foo(&self);\n }\n "}, {"sha": "a47d5506ef0b83718091e55dcd14fb26afd2c27a", "filename": "src/test/ui/parser/mismatched-braces/missing-close-brace-in-struct.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-braces%2Fmissing-close-brace-in-struct.stderr?ref=e38eaf22d247644e5554d0c200e6df756e469b0a", "patch": "@@ -1,5 +1,5 @@\n error: this file contains an unclosed delimiter\n-  --> $DIR/missing-close-brace-in-struct.rs:14:65\n+  --> $DIR/missing-close-brace-in-struct.rs:13:65\n    |\n LL | pub(crate) struct Bar<T> {\n    |                          - unclosed delimiter\n@@ -13,11 +13,5 @@ error: expected identifier, found keyword `trait`\n LL | trait T {\n    | ^^^^^ expected identifier, found keyword\n \n-error: expected `:`, found `T`\n-  --> $DIR/missing-close-brace-in-struct.rs:4:7\n-   |\n-LL | trait T {\n-   |       ^ expected `:`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n "}, {"sha": "6d64de296f15001130b56ccd8fe76f868325108a", "filename": "src/test/ui/parser/removed-syntax-field-let.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.rs?ref=e38eaf22d247644e5554d0c200e6df756e469b0a", "patch": "@@ -1,7 +1,6 @@\n struct S {\n     let foo: (),\n     //~^  ERROR expected identifier, found keyword `let`\n-    //~^^ ERROR expected `:`, found `foo`\n }\n \n fn main() {}"}, {"sha": "10be2e045b2b883f9626bd18e247442b4d060a7b", "filename": "src/test/ui/parser/removed-syntax-field-let.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38eaf22d247644e5554d0c200e6df756e469b0a/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.stderr?ref=e38eaf22d247644e5554d0c200e6df756e469b0a", "patch": "@@ -4,11 +4,5 @@ error: expected identifier, found keyword `let`\n LL |     let foo: (),\n    |     ^^^ expected identifier, found keyword\n \n-error: expected `:`, found `foo`\n-  --> $DIR/removed-syntax-field-let.rs:2:9\n-   |\n-LL |     let foo: (),\n-   |         ^^^ expected `:`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}]}