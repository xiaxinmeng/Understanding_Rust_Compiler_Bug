{"sha": "4ced7a9637c10196883733fa81ac67d02269a76e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZWQ3YTk2MzdjMTAxOTY4ODM3MzNmYTgxYWM2N2QwMjI2OWE3NmU=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-09-04T18:26:39Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-10-01T20:21:52Z"}, "message": "Add some notes about macro scoping", "tree": {"sha": "a174488beab341ba22049ca0a61a5934c33c628a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a174488beab341ba22049ca0a61a5934c33c628a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ced7a9637c10196883733fa81ac67d02269a76e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ced7a9637c10196883733fa81ac67d02269a76e", "html_url": "https://github.com/rust-lang/rust/commit/4ced7a9637c10196883733fa81ac67d02269a76e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ced7a9637c10196883733fa81ac67d02269a76e/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8bdba77fca16ebf5ad6c63a37a8dd8fd2afda8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8bdba77fca16ebf5ad6c63a37a8dd8fd2afda8e", "html_url": "https://github.com/rust-lang/rust/commit/c8bdba77fca16ebf5ad6c63a37a8dd8fd2afda8e"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "83571b60d3ae2e829a41a401f9aa3ee0db75afe0", "filename": "src/doc/guide-macros.md", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/4ced7a9637c10196883733fa81ac67d02269a76e/src%2Fdoc%2Fguide-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/4ced7a9637c10196883733fa81ac67d02269a76e/src%2Fdoc%2Fguide-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-macros.md?ref=4ced7a9637c10196883733fa81ac67d02269a76e", "patch": "@@ -448,6 +448,66 @@ fn main() {\n The two `'x` names did not clash, which would have caused the loop\n to print \"I am never printed\" and to run forever.\n \n+# Scoping and macro import/export\n+\n+Macros occupy a single global namespace. The interaction with Rust's system of\n+modules and crates is somewhat complex.\n+\n+Definition and expansion of macros both happen in a single depth-first,\n+lexical-order traversal of a crate's source. So a macro defined at module scope\n+is visible to any subsequent code in the same module, which includes the body\n+of any subsequent child `mod` items.\n+\n+If a module has the `macro_escape` attribute, its macros are also visible in\n+its parent module after the child's `mod` item. If the parent also has\n+`macro_escape` then the macros will be visible in the grandparent after the\n+parent's `mod` item, and so forth.\n+\n+Independent of `macro_escape`, the `macro_export` attribute controls visibility\n+between crates.  Any `macro_rules!` definition with the `macro_export`\n+attribute will be visible to other crates that have loaded this crate with\n+`phase(plugin)`. There is currently no way for the importing crate to control\n+which macros are imported.\n+\n+An example:\n+\n+```rust\n+# #![feature(macro_rules)]\n+macro_rules! m1 (() => (()))\n+\n+// visible here: m1\n+\n+mod foo {\n+    // visible here: m1\n+\n+    #[macro_export]\n+    macro_rules! m2 (() => (()))\n+\n+    // visible here: m1, m2\n+}\n+\n+// visible here: m1\n+\n+macro_rules! m3 (() => (()))\n+\n+// visible here: m1, m3\n+\n+#[macro_escape]\n+mod bar {\n+    // visible here: m1, m3\n+\n+    macro_rules! m4 (() => (()))\n+\n+    // visible here: m1, m3, m4\n+}\n+\n+// visible here: m1, m3, m4\n+# fn main() { }\n+```\n+\n+When this library is loaded with `#[phase(plugin)] extern crate`, only `m2`\n+will be imported.\n+\n # A final note\n \n Macros, as currently implemented, are not for the faint of heart. Even"}]}