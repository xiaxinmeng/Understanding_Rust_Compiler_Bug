{"sha": "e57deaace54648bf4e35bf121f23f92df4e6e0c6", "node_id": "C_kwDOAAsO6NoAKGU1N2RlYWFjZTU0NjQ4YmY0ZTM1YmYxMjFmMjNmOTJkZjRlNmUwYzY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-17T16:16:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-17T16:16:52Z"}, "message": "Auto merge of #10659 - timvisee:fix-size-of-val, r=Manishearth\n\nSuggest `std::mem::size_of_val` instead of `std::mem::size_of_value`\n\nThis fixes the incorrect suggestion to use `std::mem::size_of_value`. It should be [`std::mem::size_of_val`](https://doc.rust-lang.org/std/mem/fn.size_of_val.html).\n\nchangelog: [`manual_slice_size_calculation`]: suggest `std::mem::size_of_val` rather than `std::mem::size_of_value`", "tree": {"sha": "226394980d5fbeb68d871f6c715922bf0d0319f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/226394980d5fbeb68d871f6c715922bf0d0319f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e57deaace54648bf4e35bf121f23f92df4e6e0c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e57deaace54648bf4e35bf121f23f92df4e6e0c6", "html_url": "https://github.com/rust-lang/rust/commit/e57deaace54648bf4e35bf121f23f92df4e6e0c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e57deaace54648bf4e35bf121f23f92df4e6e0c6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90cb0fa2f379d7fdf8bfd97306e97c6a0d6fbbc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/90cb0fa2f379d7fdf8bfd97306e97c6a0d6fbbc6", "html_url": "https://github.com/rust-lang/rust/commit/90cb0fa2f379d7fdf8bfd97306e97c6a0d6fbbc6"}, {"sha": "4fb38cfb297cd6ae71a883cf9c98f7083c8cdbcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb38cfb297cd6ae71a883cf9c98f7083c8cdbcf", "html_url": "https://github.com/rust-lang/rust/commit/4fb38cfb297cd6ae71a883cf9c98f7083c8cdbcf"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ba01fd08530392fc2b36de7ef4b02ad387b8e6db", "filename": "clippy_lints/src/manual_slice_size_calculation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e57deaace54648bf4e35bf121f23f92df4e6e0c6/clippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e57deaace54648bf4e35bf121f23f92df4e6e0c6/clippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs?ref=e57deaace54648bf4e35bf121f23f92df4e6e0c6", "patch": "@@ -38,7 +38,7 @@ declare_lint_pass!(ManualSliceSizeCalculation => [MANUAL_SLICE_SIZE_CALCULATION]\n \n impl<'tcx> LateLintPass<'tcx> for ManualSliceSizeCalculation {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n-        // Does not apply inside const because size_of_value is not cost in stable.\n+        // Does not apply inside const because size_of_val is not cost in stable.\n         if !in_constant(cx, expr.hir_id)\n             && let ExprKind::Binary(ref op, left, right) = expr.kind\n             && BinOpKind::Mul == op.node\n@@ -50,7 +50,7 @@ impl<'tcx> LateLintPass<'tcx> for ManualSliceSizeCalculation {\n                 expr.span,\n                 \"manual slice size calculation\",\n                 None,\n-                \"consider using std::mem::size_of_value instead\");\n+                \"consider using std::mem::size_of_val instead\");\n         }\n     }\n }"}, {"sha": "7698d9782f0cde45df9c85eade581e8586e924d0", "filename": "tests/ui/manual_slice_size_calculation.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e57deaace54648bf4e35bf121f23f92df4e6e0c6/tests%2Fui%2Fmanual_slice_size_calculation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e57deaace54648bf4e35bf121f23f92df4e6e0c6/tests%2Fui%2Fmanual_slice_size_calculation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_slice_size_calculation.stderr?ref=e57deaace54648bf4e35bf121f23f92df4e6e0c6", "patch": "@@ -4,7 +4,7 @@ error: manual slice size calculation\n LL |     let _ = s_i32.len() * size_of::<i32>(); // WARNING\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: consider using std::mem::size_of_value instead\n+   = help: consider using std::mem::size_of_val instead\n    = note: `-D clippy::manual-slice-size-calculation` implied by `-D warnings`\n \n error: manual slice size calculation\n@@ -13,39 +13,39 @@ error: manual slice size calculation\n LL |     let _ = size_of::<i32>() * s_i32.len(); // WARNING\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: consider using std::mem::size_of_value instead\n+   = help: consider using std::mem::size_of_val instead\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:13:13\n    |\n LL |     let _ = size_of::<i32>() * s_i32.len() * 5; // WARNING\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: consider using std::mem::size_of_value instead\n+   = help: consider using std::mem::size_of_val instead\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:17:13\n    |\n LL |     let _ = len * size_of::<i32>(); // WARNING\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: consider using std::mem::size_of_value instead\n+   = help: consider using std::mem::size_of_val instead\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:18:13\n    |\n LL |     let _ = s_i32.len() * size; // WARNING\n    |             ^^^^^^^^^^^^^^^^^^\n    |\n-   = help: consider using std::mem::size_of_value instead\n+   = help: consider using std::mem::size_of_val instead\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:19:13\n    |\n LL |     let _ = len * size; // WARNING\n    |             ^^^^^^^^^^\n    |\n-   = help: consider using std::mem::size_of_value instead\n+   = help: consider using std::mem::size_of_val instead\n \n error: aborting due to 6 previous errors\n "}]}