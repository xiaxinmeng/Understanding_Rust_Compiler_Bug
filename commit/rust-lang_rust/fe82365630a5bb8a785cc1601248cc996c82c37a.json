{"sha": "fe82365630a5bb8a785cc1601248cc996c82c37a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlODIzNjU2MzBhNWJiOGE3ODVjYzE2MDEyNDhjYzk5NmM4MmMzN2E=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-10T14:32:45Z"}, "committer": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-13T17:23:27Z"}, "message": "Fix MIR pretty printer for non-local DefIds", "tree": {"sha": "2b01418744c3642db0f4db4fa57d59880c69115b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b01418744c3642db0f4db4fa57d59880c69115b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe82365630a5bb8a785cc1601248cc996c82c37a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe82365630a5bb8a785cc1601248cc996c82c37a", "html_url": "https://github.com/rust-lang/rust/commit/fe82365630a5bb8a785cc1601248cc996c82c37a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe82365630a5bb8a785cc1601248cc996c82c37a/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e0241c63755ea28045d512b742f50b307874419", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e0241c63755ea28045d512b742f50b307874419", "html_url": "https://github.com/rust-lang/rust/commit/7e0241c63755ea28045d512b742f50b307874419"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "f46e94eea96c75828f2d5032b24c91df0ffcc6ed", "filename": "compiler/rustc_mir/src/util/pretty.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fe82365630a5bb8a785cc1601248cc996c82c37a/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe82365630a5bb8a785cc1601248cc996c82c37a/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs?ref=fe82365630a5bb8a785cc1601248cc996c82c37a", "patch": "@@ -289,19 +289,19 @@ pub fn write_mir_pretty<'tcx>(\n             }\n             Ok(())\n         };\n-        match tcx.hir().body_const_context(def_id.expect_local()) {\n-            None => render_body(w, tcx.optimized_mir(def_id))?,\n-            // For `const fn` we want to render the optimized MIR. If you want the mir used in\n-            // ctfe, you can dump the MIR after the `Deaggregator` optimization pass.\n-            Some(rustc_hir::ConstContext::ConstFn) => {\n-                render_body(w, tcx.optimized_mir(def_id))?;\n-                writeln!(w)?;\n-                writeln!(w, \"// MIR FOR CTFE\")?;\n-                // Do not use `render_body`, as that would render the promoteds again, but these\n-                // are shared between mir_for_ctfe and optimized_mir\n-                write_mir_fn(tcx, tcx.mir_for_ctfe(def_id), &mut |_, _| Ok(()), w)?;\n-            }\n-            Some(_) => render_body(w, tcx.mir_for_ctfe(def_id))?,\n+\n+        // For `const fn` we want to render both the optimized MIR and the MIR for ctfe.\n+        if tcx.is_const_fn_raw(def_id) {\n+            render_body(w, tcx.optimized_mir(def_id))?;\n+            writeln!(w)?;\n+            writeln!(w, \"// MIR FOR CTFE\")?;\n+            // Do not use `render_body`, as that would render the promoteds again, but these\n+            // are shared between mir_for_ctfe and optimized_mir\n+            write_mir_fn(tcx, tcx.mir_for_ctfe(def_id), &mut |_, _| Ok(()), w)?;\n+        } else {\n+            let instance_mir =\n+                tcx.instance_mir(ty::InstanceDef::Item(ty::WithOptConstParam::unknown(def_id)));\n+            render_body(w, instance_mir)?;\n         }\n     }\n     Ok(())"}]}