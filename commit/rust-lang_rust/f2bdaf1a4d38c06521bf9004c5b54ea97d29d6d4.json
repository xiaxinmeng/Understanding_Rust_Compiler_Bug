{"sha": "f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4", "node_id": "C_kwDOAAsO6NoAKGYyYmRhZjFhNGQzOGMwNjUyMWJmOTAwNGM1YjU0ZWE5N2QyOWQ2ZDQ", "commit": {"author": {"name": "raldone01", "email": "raldone01@gmail.com", "date": "2023-02-03T20:26:14Z"}, "committer": {"name": "raldone01", "email": "raldone01@gmail.com", "date": "2023-05-25T18:15:39Z"}, "message": "Remove structural match from `TypeId`.", "tree": {"sha": "fee0dc1e3f3e89054a5a030b581518c3314fd264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fee0dc1e3f3e89054a5a030b581518c3314fd264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4", "html_url": "https://github.com/rust-lang/rust/commit/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4/comments", "author": {"login": "raldone01", "id": 27293675, "node_id": "MDQ6VXNlcjI3MjkzNjc1", "avatar_url": "https://avatars.githubusercontent.com/u/27293675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raldone01", "html_url": "https://github.com/raldone01", "followers_url": "https://api.github.com/users/raldone01/followers", "following_url": "https://api.github.com/users/raldone01/following{/other_user}", "gists_url": "https://api.github.com/users/raldone01/gists{/gist_id}", "starred_url": "https://api.github.com/users/raldone01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raldone01/subscriptions", "organizations_url": "https://api.github.com/users/raldone01/orgs", "repos_url": "https://api.github.com/users/raldone01/repos", "events_url": "https://api.github.com/users/raldone01/events{/privacy}", "received_events_url": "https://api.github.com/users/raldone01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raldone01", "id": 27293675, "node_id": "MDQ6VXNlcjI3MjkzNjc1", "avatar_url": "https://avatars.githubusercontent.com/u/27293675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raldone01", "html_url": "https://github.com/raldone01", "followers_url": "https://api.github.com/users/raldone01/followers", "following_url": "https://api.github.com/users/raldone01/following{/other_user}", "gists_url": "https://api.github.com/users/raldone01/gists{/gist_id}", "starred_url": "https://api.github.com/users/raldone01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raldone01/subscriptions", "organizations_url": "https://api.github.com/users/raldone01/orgs", "repos_url": "https://api.github.com/users/raldone01/repos", "events_url": "https://api.github.com/users/raldone01/events{/privacy}", "received_events_url": "https://api.github.com/users/raldone01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cade26637fe1c23965ce644299ed5200db7c92dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/cade26637fe1c23965ce644299ed5200db7c92dd", "html_url": "https://github.com/rust-lang/rust/commit/cade26637fe1c23965ce644299ed5200db7c92dd"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "7969f4055dd2bbc8810cb85a4a1f505758489a80", "filename": "library/core/src/any.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4/library%2Fcore%2Fsrc%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4/library%2Fcore%2Fsrc%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fany.rs?ref=f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4", "patch": "@@ -662,12 +662,20 @@ impl dyn Any + Send + Sync {\n /// While `TypeId` implements `Hash`, `PartialOrd`, and `Ord`, it is worth\n /// noting that the hashes and ordering will vary between Rust releases. Beware\n /// of relying on them inside of your code!\n-#[derive(Clone, Copy, Debug, Hash, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Clone, Copy, Debug, Hash, Eq, PartialOrd, Ord)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct TypeId {\n     t: u64,\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl PartialEq for TypeId {\n+    #[inline]\n+    fn eq(&self, other: &Self) -> bool {\n+        self.t == other.t\n+    }\n+}\n+\n impl TypeId {\n     /// Returns the `TypeId` of the type this generic function has been\n     /// instantiated with."}]}