{"sha": "47c18957242e34ddb8b12f27c8efd396171fef6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YzE4OTU3MjQyZTM0ZGRiOGIxMmYyN2M4ZWZkMzk2MTcxZmVmNmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-18T01:19:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-19T01:18:15Z"}, "message": "rt: Don't store the name of the task state in rust_task_list", "tree": {"sha": "d0225a9073c770e61dbe8e71050cf9223306e9a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0225a9073c770e61dbe8e71050cf9223306e9a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c18957242e34ddb8b12f27c8efd396171fef6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c18957242e34ddb8b12f27c8efd396171fef6d", "html_url": "https://github.com/rust-lang/rust/commit/47c18957242e34ddb8b12f27c8efd396171fef6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c18957242e34ddb8b12f27c8efd396171fef6d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05466c61380366cfd1969bb9f4eb26cff2acaedd", "url": "https://api.github.com/repos/rust-lang/rust/commits/05466c61380366cfd1969bb9f4eb26cff2acaedd", "html_url": "https://github.com/rust-lang/rust/commit/05466c61380366cfd1969bb9f4eb26cff2acaedd"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "998dcb80759b43ceb812230f88f670593647e92a", "filename": "src/rt/rust_task_list.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_list.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_list.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_list.cpp?ref=47c18957242e34ddb8b12f27c8efd396171fef6d", "patch": "@@ -1,12 +1,12 @@\n #include \"rust_internal.h\"\n \n-rust_task_list::rust_task_list (rust_task_thread *thread, const char* name) :\n-    thread(thread), name(name) {\n+rust_task_list::rust_task_list (rust_task_thread *thread) :\n+    thread(thread) {\n }\n \n void\n rust_task_list::delete_all() {\n-    DLOG(thread, task, \"deleting all %s tasks\", name);\n+    DLOG(thread, task, \"deleting all tasks\");\n     while (is_empty() == false) {\n         rust_task *task = pop_value();\n         DLOG(thread, task, \"deleting task \" PTR, task);"}, {"sha": "d5aa0c5162a818a478b9a83e862c1301b6f5a247", "filename": "src/rt/rust_task_list.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_list.h", "raw_url": "https://github.com/rust-lang/rust/raw/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_list.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_list.h?ref=47c18957242e34ddb8b12f27c8efd396171fef6d", "patch": "@@ -9,8 +9,7 @@ class rust_task_list : public indexed_list<rust_task>,\n                        public kernel_owned<rust_task_list> {\n public:\n     rust_task_thread *thread;\n-    const char* name;\n-    rust_task_list (rust_task_thread *thread, const char* name);\n+    rust_task_list (rust_task_thread *thread);\n     void delete_all();\n };\n "}, {"sha": "6997309fee35979e76ea00b7fabd384897973d5e", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=47c18957242e34ddb8b12f27c8efd396171fef6d", "patch": "@@ -27,10 +27,10 @@ rust_task_thread::rust_task_thread(rust_scheduler *sched,\n     id(id),\n     should_exit(false),\n     cached_c_stack(NULL),\n-    newborn_tasks(this, \"newborn\"),\n-    running_tasks(this, \"running\"),\n-    blocked_tasks(this, \"blocked\"),\n-    dead_tasks(this, \"dead\"),\n+    newborn_tasks(this),\n+    running_tasks(this),\n+    blocked_tasks(this),\n+    dead_tasks(this),\n     kernel(sched->kernel),\n     sched(sched),\n     srv(srv),\n@@ -248,7 +248,7 @@ rust_task_thread::start_main_loop() {\n              \", state: %s\",\n              scheduled_task->name,\n              (uintptr_t)scheduled_task,\n-             state_list(scheduled_task->get_state())->name);\n+             state_name(scheduled_task->get_state()));\n \n         place_task_in_tls(scheduled_task);\n \n@@ -262,7 +262,7 @@ rust_task_thread::start_main_loop() {\n              \" in state '%s', worker id=%d\" PRIxPTR,\n              scheduled_task->name,\n              (uintptr_t)scheduled_task,\n-             state_list(scheduled_task->get_state())->name,\n+             state_name(scheduled_task->get_state()),\n              id);\n \n         reap_dead_tasks();\n@@ -316,20 +316,35 @@ rust_task_thread::state_list(rust_task_state state) {\n     }\n }\n \n+const char *\n+rust_task_thread::state_name(rust_task_state state) {\n+    switch (state) {\n+    case task_state_newborn:\n+        return \"newborn\";\n+    case task_state_running:\n+        return \"running\";\n+    case task_state_blocked:\n+        return \"blocked\";\n+    case task_state_dead:\n+        return \"dead\";\n+    default:\n+        assert(false);\n+        return \"\";\n+    }\n+}\n+\n void \n rust_task_thread::transition(rust_task *task,\n                              rust_task_state src, rust_task_state dst,\n                              rust_cond *cond, const char* cond_name) {\n     scoped_lock with(lock);\n-    rust_task_list *src_list = state_list(src);\n-    rust_task_list *dst_list = state_list(dst);\n     DLOG(this, task,\n          \"task %s \" PTR \" state change '%s' -> '%s' while in '%s'\",\n-         name, (uintptr_t)this, src_list->name, dst_list->name,\n-         state_list(task->get_state())->name);\n+         name, (uintptr_t)this, state_name(src), state_name(dst),\n+         state_name(task->get_state()));\n     I(this, task->get_state() == src);\n-    src_list->remove(task);\n-    dst_list->append(task);\n+    state_list(src)->remove(task);\n+    state_list(dst)->append(task);\n     task->set_state(dst, cond, cond_name);\n \n     lock.signal();"}, {"sha": "8bfed4221ce71851d7a7775460f2370bff568e4b", "filename": "src/rt/rust_task_thread.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_thread.h", "raw_url": "https://github.com/rust-lang/rust/raw/47c18957242e34ddb8b12f27c8efd396171fef6d/src%2Frt%2Frust_task_thread.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.h?ref=47c18957242e34ddb8b12f27c8efd396171fef6d", "patch": "@@ -54,6 +54,7 @@ struct rust_task_thread : public kernel_owned<rust_task_thread>,\n     void unprepare_c_stack();\n \n     rust_task_list *state_list(rust_task_state state);\n+    const char *state_name(rust_task_state state);\n \n public:\n     rust_kernel *kernel;"}]}