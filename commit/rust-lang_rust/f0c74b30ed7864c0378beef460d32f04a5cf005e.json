{"sha": "f0c74b30ed7864c0378beef460d32f04a5cf005e", "node_id": "C_kwDOAAsO6NoAKGYwYzc0YjMwZWQ3ODY0YzAzNzhiZWVmNDYwZDMyZjA0YTVjZjAwNWU", "commit": {"author": {"name": "bvanjoi", "email": "bohan-zhang@foxmail.com", "date": "2023-04-06T14:35:36Z"}, "committer": {"name": "bvanjoi", "email": "bohan-zhang@foxmail.com", "date": "2023-04-06T15:20:12Z"}, "message": "fix(ide): highlight escapes in char", "tree": {"sha": "37eb932e10d83378051b3de90c3c466ce395118b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37eb932e10d83378051b3de90c3c466ce395118b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0c74b30ed7864c0378beef460d32f04a5cf005e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0c74b30ed7864c0378beef460d32f04a5cf005e", "html_url": "https://github.com/rust-lang/rust/commit/f0c74b30ed7864c0378beef460d32f04a5cf005e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0c74b30ed7864c0378beef460d32f04a5cf005e/comments", "author": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e57725aa9ff093af5825503bcd0f28aca341a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e57725aa9ff093af5825503bcd0f28aca341a1", "html_url": "https://github.com/rust-lang/rust/commit/e9e57725aa9ff093af5825503bcd0f28aca341a1"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "5821bb1202f17fc8e99af95361f2d721b21aa630", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=f0c74b30ed7864c0378beef460d32f04a5cf005e", "patch": "@@ -21,8 +21,11 @@ use syntax::{\n \n use crate::{\n     syntax_highlighting::{\n-        escape::highlight_escape_string, format::highlight_format_string, highlights::Highlights,\n-        macro_::MacroHighlighter, tags::Highlight,\n+        escape::{highlight_escape_char, highlight_escape_string},\n+        format::highlight_format_string,\n+        highlights::Highlights,\n+        macro_::MacroHighlighter,\n+        tags::Highlight,\n     },\n     FileId, HlMod, HlOperator, HlPunct, HlTag,\n };\n@@ -427,6 +430,14 @@ fn traverse(\n                 if let Some(byte_string) = ast::ByteString::cast(token) {\n                     highlight_escape_string(hl, &byte_string, range.start());\n                 }\n+            } else if ast::Char::can_cast(token.kind())\n+                && ast::Char::can_cast(descended_token.kind())\n+            {\n+                let Some(char) = ast::Char::cast(token) else {\n+                    continue;\n+                };\n+\n+                highlight_escape_char(hl, &char, range.start())\n             }\n         }\n "}, {"sha": "211e3588095cf455815c0ba596cacef99d310f8e", "filename": "crates/ide/src/syntax_highlighting/escape.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fescape.rs?ref=f0c74b30ed7864c0378beef460d32f04a5cf005e", "patch": "@@ -1,8 +1,8 @@\n //! Syntax highlighting for escape sequences\n use crate::syntax_highlighting::highlights::Highlights;\n use crate::{HlRange, HlTag};\n-use syntax::ast::IsString;\n-use syntax::TextSize;\n+use syntax::ast::{Char, IsString};\n+use syntax::{AstToken, TextRange, TextSize};\n \n pub(super) fn highlight_escape_string<T: IsString>(\n     stack: &mut Highlights,\n@@ -23,3 +23,23 @@ pub(super) fn highlight_escape_string<T: IsString>(\n         }\n     });\n }\n+\n+pub(super) fn highlight_escape_char(stack: &mut Highlights, char: &Char, start: TextSize) {\n+    if char.value().is_none() {\n+        return;\n+    }\n+\n+    let text = char.text();\n+    if !text.starts_with('\\'') || !text.ends_with('\\'') {\n+        return;\n+    }\n+\n+    let text = &text[1..text.len() - 1];\n+    if !text.starts_with('\\\\') {\n+        return;\n+    }\n+\n+    let range =\n+        TextRange::new(start + TextSize::from(1), start + TextSize::from(text.len() as u32 + 1));\n+    stack.add(HlRange { range, highlight: HlTag::EscapeSequence.into(), binding_hash: None })\n+}"}, {"sha": "d34f5cffbf12a3d2100d0cc8c53e2a815351b0d9", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=f0c74b30ed7864c0378beef460d32f04a5cf005e", "patch": "@@ -93,6 +93,16 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'</span><span class=\"escape_sequence\">\\n</span><span class=\"char_literal\">'</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'</span><span class=\"escape_sequence\">\\t</span><span class=\"char_literal\">'</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'\\e'</span><span class=\"semicolon\">;</span> <span class=\"comment\">// invalid escape</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'e'</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">' '</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'</span><span class=\"escape_sequence\">\\u{48}</span><span class=\"char_literal\">'</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'</span><span class=\"escape_sequence\">\\u{4823}</span><span class=\"char_literal\">'</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'</span><span class=\"escape_sequence\">\\x65</span><span class=\"char_literal\">'</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"char_literal\">'</span><span class=\"escape_sequence\">\\x00</span><span class=\"char_literal\">'</span><span class=\"semicolon\">;</span>\n+\n     <span class=\"macro\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"escape_sequence\">{{</span><span class=\"string_literal\">Hello</span><span class=\"escape_sequence\">}}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"comment\">// from https://doc.rust-lang.org/std/fmt/index.html</span>\n     <span class=\"macro\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>                 <span class=\"comment\">// =&gt; \"Hello\"</span>"}, {"sha": "12205d47e5d8e3aa72e5de69a503566bdf5cae45", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c74b30ed7864c0378beef460d32f04a5cf005e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=f0c74b30ed7864c0378beef460d32f04a5cf005e", "patch": "@@ -439,6 +439,16 @@ macro_rules! toho {\n }\n \n fn main() {\n+    let a = '\\n';\n+    let a = '\\t';\n+    let a = '\\e'; // invalid escape\n+    let a = 'e';\n+    let a = ' ';\n+    let a = '\\u{48}';\n+    let a = '\\u{4823}';\n+    let a = '\\x65';\n+    let a = '\\x00';\n+\n     println!(\"Hello {{Hello}}\");\n     // from https://doc.rust-lang.org/std/fmt/index.html\n     println!(\"Hello\");                 // => \"Hello\""}]}