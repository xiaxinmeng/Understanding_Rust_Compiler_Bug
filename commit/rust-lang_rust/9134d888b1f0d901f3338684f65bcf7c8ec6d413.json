{"sha": "9134d888b1f0d901f3338684f65bcf7c8ec6d413", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMzRkODg4YjFmMGQ5MDFmMzMzODY4NGY2NWJjZjdjOGVjNmQ0MTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-04T10:11:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-04T10:11:53Z"}, "message": "Merge #4291\n\n4291: Add test marks r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "7b43d53f11203a9ae7e79b2731353122fb0dee48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b43d53f11203a9ae7e79b2731353122fb0dee48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9134d888b1f0d901f3338684f65bcf7c8ec6d413", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJer+ppCRBK7hj4Ov3rIwAAdHIIAB/dJusx4JMPKAaYj8J2Eiyu\nz/PkXVSu9JtD/T92WJNxusWeI0Pj8UMAK229OFNBroQYYquWoGWyEZT9nCETfowg\nJF13qTZo3z0t+Q2YGt8HLDtIZmHhJ+GpQfa40mHHQyu7upHSmrosR57WHvi9VvsZ\n3u2wM1p/ptwzJtsHLtRWOFiqeT4ndQPu5/X5dKMjzTu3bzfduuMEXaLNPFhHhnM3\ny2GkGU1HmTfPi53FObtUHGog60mtxG0DjKQ1VMZfTYEBIEAhTaAyy5CLncGSkJSA\nX7bUn6EVS15MaIbNLSe7ljH/r+pHAF+I4QpVfrjKHunQfxMUL0el98zhXDA9EhE=\n=MO2o\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b43d53f11203a9ae7e79b2731353122fb0dee48\nparent 3b1d98308596e43299b1c7435a395b0a4d1db425\nparent 13bce1a1641cbcf57ae24677c238e2c1ca393dea\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1588587113 +0000\ncommitter GitHub <noreply@github.com> 1588587113 +0000\n\nMerge #4291\n\n4291: Add test marks r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9134d888b1f0d901f3338684f65bcf7c8ec6d413", "html_url": "https://github.com/rust-lang/rust/commit/9134d888b1f0d901f3338684f65bcf7c8ec6d413", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9134d888b1f0d901f3338684f65bcf7c8ec6d413/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1d98308596e43299b1c7435a395b0a4d1db425", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1d98308596e43299b1c7435a395b0a4d1db425", "html_url": "https://github.com/rust-lang/rust/commit/3b1d98308596e43299b1c7435a395b0a4d1db425"}, {"sha": "13bce1a1641cbcf57ae24677c238e2c1ca393dea", "url": "https://api.github.com/repos/rust-lang/rust/commits/13bce1a1641cbcf57ae24677c238e2c1ca393dea", "html_url": "https://github.com/rust-lang/rust/commit/13bce1a1641cbcf57ae24677c238e2c1ca393dea"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "51ca4dde3f0017f19b5c338af1a11d7b78b6ee8f", "filename": "crates/ra_ide/src/marks.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9134d888b1f0d901f3338684f65bcf7c8ec6d413/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9134d888b1f0d901f3338684f65bcf7c8ec6d413/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmarks.rs?ref=9134d888b1f0d901f3338684f65bcf7c8ec6d413", "patch": "@@ -11,4 +11,6 @@ test_utils::marks!(\n     self_fulfilling_completion\n     test_struct_field_completion_in_func_call\n     test_struct_field_completion_in_record_lit\n+    test_rename_struct_field_for_shorthand\n+    test_rename_local_for_field_shorthand\n );"}, {"sha": "916edaef27e1d0fdbfd01a5955ee77f5f9c4559a", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9134d888b1f0d901f3338684f65bcf7c8ec6d413/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9134d888b1f0d901f3338684f65bcf7c8ec6d413/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=9134d888b1f0d901f3338684f65bcf7c8ec6d413", "patch": "@@ -7,14 +7,13 @@ use ra_syntax::{\n     algo::find_node_at_offset, ast, lex_single_valid_syntax_kind, AstNode, SyntaxKind, SyntaxNode,\n };\n use ra_text_edit::TextEdit;\n+use test_utils::tested_by;\n \n use crate::{\n-    FilePosition, FileSystemEdit, RangeInfo, Reference, ReferenceKind, SourceChange,\n-    SourceFileEdit, TextRange,\n+    references::find_all_refs, FilePosition, FileSystemEdit, RangeInfo, Reference, ReferenceKind,\n+    SourceChange, SourceFileEdit, TextRange,\n };\n \n-use super::find_all_refs;\n-\n pub(crate) fn rename(\n     db: &RootDatabase,\n     position: FilePosition,\n@@ -52,11 +51,13 @@ fn source_edit_from_reference(reference: Reference, new_name: &str) -> SourceFil\n     let file_id = reference.file_range.file_id;\n     let range = match reference.kind {\n         ReferenceKind::FieldShorthandForField => {\n+            tested_by!(test_rename_struct_field_for_shorthand);\n             replacement_text.push_str(new_name);\n             replacement_text.push_str(\": \");\n             TextRange::new(reference.file_range.range.start(), reference.file_range.range.start())\n         }\n         ReferenceKind::FieldShorthandForLocal => {\n+            tested_by!(test_rename_local_for_field_shorthand);\n             replacement_text.push_str(\": \");\n             replacement_text.push_str(new_name);\n             TextRange::new(reference.file_range.range.end(), reference.file_range.range.end())\n@@ -147,7 +148,7 @@ fn rename_reference(\n mod tests {\n     use insta::assert_debug_snapshot;\n     use ra_text_edit::TextEditBuilder;\n-    use test_utils::assert_eq_text;\n+    use test_utils::{assert_eq_text, covers};\n \n     use crate::{\n         mock_analysis::analysis_and_position, mock_analysis::single_file_with_position, FileId,\n@@ -379,6 +380,7 @@ mod tests {\n \n     #[test]\n     fn test_rename_struct_field_for_shorthand() {\n+        covers!(test_rename_struct_field_for_shorthand);\n         test_rename(\n             r#\"\n     struct Foo {\n@@ -408,6 +410,7 @@ mod tests {\n \n     #[test]\n     fn test_rename_local_for_field_shorthand() {\n+        covers!(test_rename_local_for_field_shorthand);\n         test_rename(\n             r#\"\n     struct Foo {"}]}