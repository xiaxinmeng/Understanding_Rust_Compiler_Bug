{"sha": "48499c7494d47f505a640157816cea2690b8d407", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NDk5Yzc0OTRkNDdmNTA1YTY0MDE1NzgxNmNlYTI2OTBiOGQ0MDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-26T22:36:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-26T22:36:10Z"}, "message": "auto merge of #9484 : alexcrichton/rust/fix-cfg-inner-item, r=pcwalton\n\nIf an item is skipped due to it being unreachable or for some optimization, then\r\nit shouldn't be encoded into the metadata (because it wasn't present in the\r\nfirst place).", "tree": {"sha": "8296cc4658168255594837f85ad3acd22f692093", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8296cc4658168255594837f85ad3acd22f692093"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48499c7494d47f505a640157816cea2690b8d407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48499c7494d47f505a640157816cea2690b8d407", "html_url": "https://github.com/rust-lang/rust/commit/48499c7494d47f505a640157816cea2690b8d407", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48499c7494d47f505a640157816cea2690b8d407/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f210a1671883d5fe97a2b06ebbe9270fa9a6943a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f210a1671883d5fe97a2b06ebbe9270fa9a6943a", "html_url": "https://github.com/rust-lang/rust/commit/f210a1671883d5fe97a2b06ebbe9270fa9a6943a"}, {"sha": "daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "url": "https://api.github.com/repos/rust-lang/rust/commits/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde", "html_url": "https://github.com/rust-lang/rust/commit/daee1b4d5c6e1db8563c57ff5529b62d0a29fbde"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "bfa7beace8ced7c2c4a388b760c6acf1251ebbf4", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/48499c7494d47f505a640157816cea2690b8d407/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48499c7494d47f505a640157816cea2690b8d407/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=48499c7494d47f505a640157816cea2690b8d407", "patch": "@@ -25,6 +25,7 @@ use syntax::ast;\n use syntax::ast::Name;\n use syntax::ast_util;\n use syntax::codemap::Span;\n+use syntax::visit::Visitor;\n \n pub fn trans_block(bcx: @mut Block, b: &ast::Block, dest: expr::Dest) -> @mut Block {\n     let _icx = push_ctxt(\"trans_block\");\n@@ -64,12 +65,22 @@ pub fn trans_if(bcx: @mut Block,\n     // Drop branches that are known to be impossible\n     if is_const(cond_val) && !is_undef(cond_val) {\n         if const_to_uint(cond_val) == 1 {\n+            match els {\n+                Some(elexpr) => {\n+                    let mut trans = TransItemVisitor { ccx: bcx.fcx.ccx };\n+                    trans.visit_expr(elexpr, ());\n+                }\n+                None => {}\n+            }\n             // if true { .. } [else { .. }]\n             return do with_scope(bcx, thn.info(), \"if_true_then\") |bcx| {\n                 let bcx_out = trans_block(bcx, thn, dest);\n                 trans_block_cleanups(bcx_out, block_cleanups(bcx))\n             }\n         } else {\n+            let mut trans = TransItemVisitor { ccx: bcx.fcx.ccx } ;\n+            trans.visit_block(thn, ());\n+\n             match els {\n                 // if false { .. } else { .. }\n                 Some(elexpr) => {"}, {"sha": "4331a1da2a26b62af83e6fc372a618609b08f045", "filename": "src/test/auxiliary/cfg_inner_static.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/48499c7494d47f505a640157816cea2690b8d407/src%2Ftest%2Fauxiliary%2Fcfg_inner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48499c7494d47f505a640157816cea2690b8d407/src%2Ftest%2Fauxiliary%2Fcfg_inner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcfg_inner_static.rs?ref=48499c7494d47f505a640157816cea2690b8d407", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// this used to just ICE on compiling\n+pub fn foo() {\n+    if cfg!(foo) {\n+        static a: int = 3;\n+        a\n+    } else { 3 };\n+}"}, {"sha": "2d06a10a05f2aa77f1c4c25c672c0ae5f2afe831", "filename": "src/test/run-pass/cfg_inner_static.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/48499c7494d47f505a640157816cea2690b8d407/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48499c7494d47f505a640157816cea2690b8d407/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs?ref=48499c7494d47f505a640157816cea2690b8d407", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:cfg_inner_static.rs\n+// xfail-fast\n+\n+extern mod cfg_inner_static;\n+\n+fn main() {\n+    cfg_inner_static::foo();\n+}"}]}