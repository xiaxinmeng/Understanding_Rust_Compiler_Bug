{"sha": "26458711118011645cfddef11d9e786c04cb727a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NDU4NzExMTE4MDExNjQ1Y2ZkZGVmMTFkOWU3ODZjMDRjYjcyN2E=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-30T23:05:13Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-30T23:09:39Z"}, "message": "Use appropriate terminology based on heuristic", "tree": {"sha": "6c759eff37fe884a96da630fd4843ec4e238b95b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c759eff37fe884a96da630fd4843ec4e238b95b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26458711118011645cfddef11d9e786c04cb727a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26458711118011645cfddef11d9e786c04cb727a", "html_url": "https://github.com/rust-lang/rust/commit/26458711118011645cfddef11d9e786c04cb727a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26458711118011645cfddef11d9e786c04cb727a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0952856e6c78ec00fd2bc1bfc3a162d883446f50", "url": "https://api.github.com/repos/rust-lang/rust/commits/0952856e6c78ec00fd2bc1bfc3a162d883446f50", "html_url": "https://github.com/rust-lang/rust/commit/0952856e6c78ec00fd2bc1bfc3a162d883446f50"}], "stats": {"total": 87, "additions": 58, "deletions": 29}, "files": [{"sha": "51bc53395a8e843dc5d911613231aaf6da93912d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -6134,9 +6134,6 @@ impl<'a> Parser<'a> {\n \n     fn consume_block(&mut self, delim: token::DelimToken) {\n         let mut brace_depth = 0;\n-        if !self.eat(&token::OpenDelim(delim)) {\n-            return;\n-        }\n         loop {\n             if self.eat(&token::OpenDelim(delim)) {\n                 brace_depth += 1;\n@@ -6147,7 +6144,7 @@ impl<'a> Parser<'a> {\n                     brace_depth -= 1;\n                     continue;\n                 }\n-            } else if self.eat(&token::Eof) || self.eat(&token::CloseDelim(token::NoDelim)) {\n+            } else if self.token == token::Eof || self.eat(&token::CloseDelim(token::NoDelim)) {\n                 return;\n             } else {\n                 self.bump();\n@@ -7397,17 +7394,27 @@ impl<'a> Parser<'a> {\n                 return Err(err);\n             } else if self.look_ahead(1, |t| *t == token::OpenDelim(token::Paren)) {\n                 let ident = self.parse_ident().unwrap();\n+                self.bump();  // `(`\n+                let kw_name = if let Ok(Some(_)) = self.parse_self_arg() {\n+                    \"method\"\n+                } else {\n+                    \"function\"\n+                };\n                 self.consume_block(token::Paren);\n-                let (kw, kw_name, ambiguous) = if self.check(&token::RArrow) ||\n-                    self.check(&token::OpenDelim(token::Brace))\n-                {\n-                    (\"fn\", \"method\", false)\n+                let (kw, kw_name, ambiguous) = if self.check(&token::RArrow) {\n+                    self.eat_to_tokens(&[&token::OpenDelim(token::Brace)]);\n+                    self.bump();  // `{`\n+                    (\"fn\", kw_name, false)\n+                } else if self.check(&token::OpenDelim(token::Brace)) {\n+                    self.bump();  // `{`\n+                    (\"fn\", kw_name, false)\n                 } else if self.check(&token::Colon) {\n                     let kw = \"struct\";\n                     (kw, kw, false)\n                 } else {\n-                    (\"fn` or `struct\", \"method or struct\", true)\n+                    (\"fn` or `struct\", \"function or struct\", true)\n                 };\n+                self.consume_block(token::Brace);\n \n                 let msg = format!(\"missing `{}` for {} definition\", kw, kw_name);\n                 let mut err = self.diagnostic().struct_span_err(sp, &msg);\n@@ -7437,13 +7444,17 @@ impl<'a> Parser<'a> {\n             } else if self.look_ahead(1, |t| *t == token::Lt) {\n                 let ident = self.parse_ident().unwrap();\n                 self.eat_to_tokens(&[&token::Gt]);\n-                self.bump();\n-                let (kw, kw_name, ambiguous) = if self.check(&token::OpenDelim(token::Paren)) {\n-                    (\"fn\", \"method\", false)\n+                self.bump();  // `>`\n+                let (kw, kw_name, ambiguous) = if self.eat(&token::OpenDelim(token::Paren)) {\n+                    if let Ok(Some(_)) = self.parse_self_arg() {\n+                        (\"fn\", \"method\", false)\n+                    } else {\n+                        (\"fn\", \"function\", false)\n+                    }\n                 } else if self.check(&token::OpenDelim(token::Brace)) {\n                     (\"struct\", \"struct\", false)\n                 } else {\n-                    (\"fn` or `struct\", \"method or struct\", true)\n+                    (\"fn` or `struct\", \"function or struct\", true)\n                 };\n                 let msg = format!(\"missing `{}` for {} definition\", kw, kw_name);\n                 let mut err = self.diagnostic().struct_span_err(sp, &msg);"}, {"sha": "648b1067add0db25f6e495bf0067335ae828e0e9", "filename": "src/test/ui/pub/pub-ident-fn-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-2.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n pub foo(s: usize) { bar() }\n-//~^ ERROR missing `fn` for method definition\n+//~^ ERROR missing `fn` for function definition\n \n fn main() {\n     foo(2);"}, {"sha": "ed7430fd3941907e3075df330bbb2c62a55cf64b", "filename": "src/test/ui/pub/pub-ident-fn-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-2.stderr?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -1,9 +1,9 @@\n-error: missing `fn` for method definition\n+error: missing `fn` for function definition\n   --> $DIR/pub-ident-fn-2.rs:11:4\n    |\n LL | pub foo(s: usize) { bar() }\n    |    ^\n-help: add `fn` here to parse `foo` as a public method\n+help: add `fn` here to parse `foo` as a public function\n    |\n LL | pub fn foo(s: usize) { bar() }\n    |     ^^"}, {"sha": "e528e86fbc6e9e99430c361738b8f5d6550a78b2", "filename": "src/test/ui/pub/pub-ident-fn-or-struct-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct-2.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n pub S();\n-//~^ ERROR missing `fn` or `struct` for method or struct definition\n+//~^ ERROR missing `fn` or `struct` for function or struct definition\n \n fn main() {}"}, {"sha": "d423b838f051438fbb984f45fbf9f16883796d22", "filename": "src/test/ui/pub/pub-ident-fn-or-struct-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct-2.stderr?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -1,4 +1,4 @@\n-error: missing `fn` or `struct` for method or struct definition\n+error: missing `fn` or `struct` for function or struct definition\n   --> $DIR/pub-ident-fn-or-struct-2.rs:11:4\n    |\n LL | pub S();"}, {"sha": "d5254bf2066c287152b6981a101dee1fb74e7020", "filename": "src/test/ui/pub/pub-ident-fn-or-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n pub S (foo) bar\n-//~^ ERROR missing `fn` or `struct` for method or struct definition\n+//~^ ERROR missing `fn` or `struct` for function or struct definition\n \n fn main() {}"}, {"sha": "b8b5e8a4bbf74efe6211f68b0015f071bd4a7653", "filename": "src/test/ui/pub/pub-ident-fn-or-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-or-struct.stderr?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -1,4 +1,4 @@\n-error: missing `fn` or `struct` for method or struct definition\n+error: missing `fn` or `struct` for function or struct definition\n   --> $DIR/pub-ident-fn-or-struct.rs:11:4\n    |\n LL | pub S (foo) bar"}, {"sha": "1ee8c84f13bd3b78f2a753b0bd0dabedb82b621b", "filename": "src/test/ui/pub/pub-ident-fn-with-lifetime-2.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime-2.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -0,0 +1,6 @@\n+pub   bar<'a>(&self, _s: &'a usize) -> bool { true }\n+//~^ ERROR missing `fn` for method definition\n+\n+fn main() {\n+    bar(2);\n+}"}, {"sha": "c403774df8ede0362c014ee566f6e2631bc1ee56", "filename": "src/test/ui/pub/pub-ident-fn-with-lifetime-2.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime-2.stderr?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -0,0 +1,12 @@\n+error: missing `fn` for method definition\n+  --> $DIR/pub-ident-fn-with-lifetime-2.rs:1:4\n+   |\n+LL | pub   bar<'a>(&self, _s: &'a usize) -> bool { true }\n+   |    ^^^\n+help: add `fn` here to parse `bar` as a public method\n+   |\n+LL | pub fn bar<'a>(&self, _s: &'a usize) -> bool { true }\n+   |     ^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "84f7bdc1fb14796d9bd4642eacc072fcb5a86934", "filename": "src/test/ui/pub/pub-ident-fn-with-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -1,5 +1,5 @@\n pub   foo<'a>(_s: &'a usize) -> bool { true }\n-//~^ ERROR missing `fn` for method definition\n+//~^ ERROR missing `fn` for function definition\n \n fn main() {\n     foo(2);"}, {"sha": "858238096408f0068c201cd1ac060186a5675248", "filename": "src/test/ui/pub/pub-ident-fn-with-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn-with-lifetime.stderr?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -1,9 +1,9 @@\n-error: missing `fn` for method definition\n+error: missing `fn` for function definition\n   --> $DIR/pub-ident-fn-with-lifetime.rs:1:4\n    |\n LL | pub   foo<'a>(_s: &'a usize) -> bool { true }\n    |    ^^^\n-help: add `fn` here to parse `foo` as a public method\n+help: add `fn` here to parse `foo` as a public function\n    |\n LL | pub fn foo<'a>(_s: &'a usize) -> bool { true }\n    |     ^^"}, {"sha": "667e02114a1a880699bd1eac3c9a8ab5628c26c4", "filename": "src/test/ui/pub/pub-ident-fn.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.fixed?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -11,7 +11,7 @@\n // run-rustfix\n \n pub fn foo(_s: usize) -> bool { true }\n-//~^ ERROR missing `fn` for method definition\n+//~^ ERROR missing `fn` for function definition\n \n fn main() {\n     foo(2);"}, {"sha": "91bbf58fe77e8cf0b45239be1dd059e72d4e98d4", "filename": "src/test/ui/pub/pub-ident-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -11,7 +11,7 @@\n // run-rustfix\n \n pub   foo(_s: usize) -> bool { true }\n-//~^ ERROR missing `fn` for method definition\n+//~^ ERROR missing `fn` for function definition\n \n fn main() {\n     foo(2);"}, {"sha": "1df6dd85ffec58c4fbc64febe4de8b10488cdbc0", "filename": "src/test/ui/pub/pub-ident-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-fn.stderr?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -1,9 +1,9 @@\n-error: missing `fn` for method definition\n+error: missing `fn` for function definition\n   --> $DIR/pub-ident-fn.rs:13:4\n    |\n LL | pub   foo(_s: usize) -> bool { true }\n    |    ^^^\n-help: add `fn` here to parse `foo` as a public method\n+help: add `fn` here to parse `foo` as a public function\n    |\n LL | pub fn foo(_s: usize) -> bool { true }\n    |     ^^"}, {"sha": "c86a9f2fdd655f00f36f69049d0c35f365dc03d9", "filename": "src/test/ui/pub/pub-ident-with-lifetime-incomplete.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-with-lifetime-incomplete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-with-lifetime-incomplete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-with-lifetime-incomplete.rs?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -2,4 +2,4 @@ fn main() {\n }\n \n pub   foo<'a>\n-//~^ ERROR missing `fn` or `struct` for method or struct definition\n+//~^ ERROR missing `fn` or `struct` for function or struct definition"}, {"sha": "0e0b127054d1d547d366d1e2b77aed1cf3164ae0", "filename": "src/test/ui/pub/pub-ident-with-lifetime-incomplete.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-with-lifetime-incomplete.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26458711118011645cfddef11d9e786c04cb727a/src%2Ftest%2Fui%2Fpub%2Fpub-ident-with-lifetime-incomplete.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-ident-with-lifetime-incomplete.stderr?ref=26458711118011645cfddef11d9e786c04cb727a", "patch": "@@ -1,4 +1,4 @@\n-error: missing `fn` or `struct` for method or struct definition\n+error: missing `fn` or `struct` for function or struct definition\n   --> $DIR/pub-ident-with-lifetime-incomplete.rs:4:4\n    |\n LL | pub   foo<'a>"}]}