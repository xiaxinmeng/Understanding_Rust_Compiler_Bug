{"sha": "07f4171b1803f562118671255d73b97f20d24e07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZjQxNzFiMTgwM2Y1NjIxMTg2NzEyNTVkNzNiOTdmMjBkMjRlMDc=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-01-06T20:35:19Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-01-12T12:25:58Z"}, "message": "Minor fix", "tree": {"sha": "1aead3e38a7722019180b6bf5baa9bc317305507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aead3e38a7722019180b6bf5baa9bc317305507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07f4171b1803f562118671255d73b97f20d24e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07f4171b1803f562118671255d73b97f20d24e07", "html_url": "https://github.com/rust-lang/rust/commit/07f4171b1803f562118671255d73b97f20d24e07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07f4171b1803f562118671255d73b97f20d24e07/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c4416543ab14c9a0a246907f41be0658f97c6fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4416543ab14c9a0a246907f41be0658f97c6fc", "html_url": "https://github.com/rust-lang/rust/commit/4c4416543ab14c9a0a246907f41be0658f97c6fc"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "9b6cc15e8a481fdc1d733a05d1e499e2e8a61ace", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/07f4171b1803f562118671255d73b97f20d24e07/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07f4171b1803f562118671255d73b97f20d24e07/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=07f4171b1803f562118671255d73b97f20d24e07", "patch": "@@ -13,7 +13,6 @@ use crate::{db::RootDatabase, FileRange};\n use hir::{db::AstDatabase, InFile};\n use itertools::Itertools;\n \n-// FIXME: restore macro support\n pub(crate) fn extend_selection(db: &RootDatabase, frange: FileRange) -> TextRange {\n     let src = db.parse(frange.file_id).tree();\n     let root = InFile::new(frange.file_id.into(), src.syntax());\n@@ -93,8 +92,7 @@ fn try_extend_selection(\n         return Some(node.text_range());\n     }\n \n-    // Using shallowest node with same range allows us to traverse siblings.\n-    let node = node.ancestors().take_while(|n| n.text_range() == node.text_range()).last().unwrap();\n+    let node = shallowest_node(&node.into()).unwrap();\n \n     if node.parent().map(|n| list_kinds.contains(&n.kind())) == Some(true) {\n         if let Some(range) = extend_list_item(&node) {\n@@ -129,7 +127,7 @@ fn extend_tokens_from_range(\n         .fold1(|x, y| union_range(x, y))?;\n \n     let src = db.parse_or_expand(expansion.file_id())?;\n-    let parent = shallow_node(&find_covering_element(&src, range))?.parent()?;\n+    let parent = shallowest_node(&find_covering_element(&src, range))?.parent()?;\n \n     // compute parent mapped token range\n     let range = macro_call\n@@ -162,7 +160,8 @@ fn union_range(range: TextRange, r: TextRange) -> TextRange {\n     TextRange::from_to(start, end)\n }\n \n-fn shallow_node(node: &SyntaxElement) -> Option<SyntaxNode> {\n+/// Find the shallowest node with same range, which allows us to traverse siblings.\n+fn shallowest_node(node: &SyntaxElement) -> Option<SyntaxNode> {\n     node.ancestors().take_while(|n| n.text_range() == node.text_range()).last()\n }\n "}]}