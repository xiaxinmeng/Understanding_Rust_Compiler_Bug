{"sha": "e06579bc0935ed1dcbddef41bc1b6a8850a2059c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNjU3OWJjMDkzNWVkMWRjYmRkZWY0MWJjMWI2YTg4NTBhMjA1OWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-12T00:22:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-12T00:22:46Z"}, "message": "auto merge of #7056 : alexcrichton/rust/issue-4727, r=catamorphism\n\nCloses #4727", "tree": {"sha": "e0bb9d0588de8dee119c5b1133860bb17dc16124", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0bb9d0588de8dee119c5b1133860bb17dc16124"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e06579bc0935ed1dcbddef41bc1b6a8850a2059c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e06579bc0935ed1dcbddef41bc1b6a8850a2059c", "html_url": "https://github.com/rust-lang/rust/commit/e06579bc0935ed1dcbddef41bc1b6a8850a2059c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e06579bc0935ed1dcbddef41bc1b6a8850a2059c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f900dc7d1517bbc821989d68f3392d4aae96f93", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f900dc7d1517bbc821989d68f3392d4aae96f93", "html_url": "https://github.com/rust-lang/rust/commit/3f900dc7d1517bbc821989d68f3392d4aae96f93"}, {"sha": "78404af882c5d6bc8c4c5584d0981f7b6cf877e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/78404af882c5d6bc8c4c5584d0981f7b6cf877e2", "html_url": "https://github.com/rust-lang/rust/commit/78404af882c5d6bc8c4c5584d0981f7b6cf877e2"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "b8cce8055d3ec3b262eaa25250cb99980500b574", "filename": "src/librustpkg/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e06579bc0935ed1dcbddef41bc1b6a8850a2059c/src%2Flibrustpkg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06579bc0935ed1dcbddef41bc1b6a8850a2059c/src%2Flibrustpkg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftests.rs?ref=e06579bc0935ed1dcbddef41bc1b6a8850a2059c", "patch": "@@ -280,7 +280,7 @@ fn test_package_version() {\n \n // FIXME #7006: Fails on linux for some reason\n #[test]\n-#[ignore(cfg(target_os = \"linux\"))]\n+#[ignore]\n fn test_package_request_version() {\n     let temp_pkg_id = PkgId::new(\"github.com/catamorphism/test_pkg_version#0.3\");\n     let temp = mk_empty_workspace(&LocalPath(Path(\"test_pkg_version\")), &ExactRevision(~\"0.3\"));"}, {"sha": "b15bceddb1c2104a311cc4bfcea72352c2a6353c", "filename": "src/libstd/unstable/finally.rs", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/e06579bc0935ed1dcbddef41bc1b6a8850a2059c/src%2Flibstd%2Funstable%2Ffinally.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06579bc0935ed1dcbddef41bc1b6a8850a2059c/src%2Flibstd%2Funstable%2Ffinally.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Ffinally.rs?ref=e06579bc0935ed1dcbddef41bc1b6a8850a2059c", "patch": "@@ -31,17 +31,20 @@ pub trait Finally<T> {\n     fn finally(&self, dtor: &fn()) -> T;\n }\n \n-impl<'self,T> Finally<T> for &'self fn() -> T {\n-    fn finally(&self, dtor: &fn()) -> T {\n-        let _d = Finallyalizer {\n-            dtor: dtor\n-        };\n-\n-        (*self)()\n+macro_rules! finally_fn {\n+    ($fnty:ty) => {\n+        impl<T> Finally<T> for $fnty {\n+            fn finally(&self, dtor: &fn()) -> T {\n+                let _d = Finallyalizer {\n+                    dtor: dtor\n+                };\n+                (*self)()\n+            }\n+        }\n     }\n }\n \n-impl<T> Finally<T> for ~fn() -> T {\n+impl<'self,T> Finally<T> for &'self fn() -> T {\n     fn finally(&self, dtor: &fn()) -> T {\n         let _d = Finallyalizer {\n             dtor: dtor\n@@ -51,15 +54,9 @@ impl<T> Finally<T> for ~fn() -> T {\n     }\n }\n \n-impl<T> Finally<T> for @fn() -> T {\n-    fn finally(&self, dtor: &fn()) -> T {\n-        let _d = Finallyalizer {\n-            dtor: dtor\n-        };\n-\n-        (*self)()\n-    }\n-}\n+finally_fn!(~fn() -> T)\n+finally_fn!(@fn() -> T)\n+finally_fn!(extern \"Rust\" fn() -> T)\n \n struct Finallyalizer<'self> {\n     dtor: &'self fn()\n@@ -108,10 +105,7 @@ fn test_retval() {\n \n #[test]\n fn test_compact() {\n-    // FIXME #4727: Should be able to use a fn item instead\n-    // of a closure for do_some_fallible_work,\n-    // but it's a type error.\n-    let do_some_fallible_work: &fn() = || { };\n+    fn do_some_fallible_work() {}\n     fn but_always_run_this_function() { }\n     do_some_fallible_work.finally(\n         but_always_run_this_function);\n@@ -136,4 +130,4 @@ fn test_managed() {\n     };\n     assert_eq!(do managed.finally {}, 10);\n     assert_eq!(*i, 20);\n-}\n\\ No newline at end of file\n+}"}]}