{"sha": "d2fd20152b9d523cb603ddb59e779c29a287ee43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZmQyMDE1MmI5ZDUyM2NiNjAzZGRiNTllNzc5YzI5YTI4N2VlNDM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-11-08T21:20:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-08T21:20:57Z"}, "message": "Rollup merge of #37601 - brson:book-without-tiers, r=steveklabnik\n\nbook: Removed platform compatibility table, link to the forge\n\nThe content is duplicated, and it doesn't need to be in this location.\nIt's mostly trivia that doesn't apply to most of the audience.\n\nThe forge is up to date.\n\nr? @steveklabnik cc @alexcrichton", "tree": {"sha": "fab80dc603cd9c8fe725b2e1b99094eaf5ab8a6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fab80dc603cd9c8fe725b2e1b99094eaf5ab8a6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2fd20152b9d523cb603ddb59e779c29a287ee43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2fd20152b9d523cb603ddb59e779c29a287ee43", "html_url": "https://github.com/rust-lang/rust/commit/d2fd20152b9d523cb603ddb59e779c29a287ee43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2fd20152b9d523cb603ddb59e779c29a287ee43/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6b65866670a48d1002f67dd0da41102c4b91119", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b65866670a48d1002f67dd0da41102c4b91119", "html_url": "https://github.com/rust-lang/rust/commit/e6b65866670a48d1002f67dd0da41102c4b91119"}, {"sha": "74e3faa03a875f1269f8946932fa02db98aa803f", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e3faa03a875f1269f8946932fa02db98aa803f", "html_url": "https://github.com/rust-lang/rust/commit/74e3faa03a875f1269f8946932fa02db98aa803f"}], "stats": {"total": 111, "additions": 12, "deletions": 99}, "files": [{"sha": "2eab449dbd421094809e0a3c0eee33172e57759d", "filename": "src/doc/book/getting-started.md", "status": "modified", "additions": 12, "deletions": 99, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/d2fd20152b9d523cb603ddb59e779c29a287ee43/src%2Fdoc%2Fbook%2Fgetting-started.md", "raw_url": "https://github.com/rust-lang/rust/raw/d2fd20152b9d523cb603ddb59e779c29a287ee43/src%2Fdoc%2Fbook%2Fgetting-started.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fgetting-started.md?ref=d2fd20152b9d523cb603ddb59e779c29a287ee43", "patch": "@@ -4,112 +4,25 @@ This first chapter of the book will get us going with Rust and its tooling.\n First, we\u2019ll install Rust. Then, the classic \u2018Hello World\u2019 program. Finally,\n we\u2019ll talk about Cargo, Rust\u2019s build system and package manager.\n \n+We\u2019ll be showing off a number of commands using a terminal, and those lines all\n+start with `$`. You don't need to type in the `$`s, they are there to indicate\n+the start of each command. We\u2019ll see many tutorials and examples around the web\n+that follow this convention: `$` for commands run as our regular user, and `#`\n+for commands we should be running as an administrator.\n+\n # Installing Rust\n \n The first step to using Rust is to install it. Generally speaking, you\u2019ll need\n an Internet connection to run the commands in this section, as we\u2019ll be\n downloading Rust from the Internet.\n \n-We\u2019ll be showing off a number of commands using a terminal, and those lines all\n-start with `$`. You don't need to type in the `$`s, they are there to indicate\n-the start of each command. We\u2019ll see many tutorials and examples around the web\n-that follow this convention: `$` for commands run as our regular user, and `#`\n-for commands we should be running as an administrator.\n+The Rust compiler runs on, and compiles to, a great number of platforms, but is\n+best supported on Linux, Mac, and Windows, on the x86 and x86-64 CPU\n+architecture. There are official builds of the Rust compiler and standard\n+library for these platforms and more. [For full details on Rust platform support\n+see the website][platform-support].\n \n-## Platform support\n-\n-The Rust compiler runs on, and compiles to, a great number of platforms, though\n-not all platforms are equally supported. Rust's support levels are organized\n-into three tiers, each with a different set of guarantees.\n-\n-Platforms are identified by their \"target triple\" which is the string to inform\n-the compiler what kind of output should be produced. The columns below indicate\n-whether the corresponding component works on the specified platform.\n-\n-### Tier 1\n-\n-Tier 1 platforms can be thought of as \"guaranteed to build and work\".\n-Specifically they will each satisfy the following requirements:\n-\n-* Automated testing is set up to run tests for the platform.\n-* Landing changes to the `rust-lang/rust` repository's master branch is gated on\n-  tests passing.\n-* Official release artifacts are provided for the platform.\n-* Documentation for how to use and how to build the platform is available.\n-\n-|  Target                       | std |rustc|cargo| notes                      |\n-|-------------------------------|-----|-----|-----|----------------------------|\n-| `i686-apple-darwin`           |  \u2713  |  \u2713  |  \u2713  | 32-bit OSX (10.7+, Lion+)  |\n-| `i686-pc-windows-gnu`         |  \u2713  |  \u2713  |  \u2713  | 32-bit MinGW (Windows 7+)  |\n-| `i686-pc-windows-msvc`        |  \u2713  |  \u2713  |  \u2713  | 32-bit MSVC (Windows 7+)   |\n-| `i686-unknown-linux-gnu`      |  \u2713  |  \u2713  |  \u2713  | 32-bit Linux (2.6.18+)     |\n-| `x86_64-apple-darwin`         |  \u2713  |  \u2713  |  \u2713  | 64-bit OSX (10.7+, Lion+)  |\n-| `x86_64-pc-windows-gnu`       |  \u2713  |  \u2713  |  \u2713  | 64-bit MinGW (Windows 7+)  |\n-| `x86_64-pc-windows-msvc`      |  \u2713  |  \u2713  |  \u2713  | 64-bit MSVC (Windows 7+)   |\n-| `x86_64-unknown-linux-gnu`    |  \u2713  |  \u2713  |  \u2713  | 64-bit Linux (2.6.18+)     |\n-\n-### Tier 2\n-\n-Tier 2 platforms can be thought of as \"guaranteed to build\". Automated tests\n-are not run so it's not guaranteed to produce a working build, but platforms\n-often work to quite a good degree and patches are always welcome! Specifically,\n-these platforms are required to have each of the following:\n-\n-* Automated building is set up, but may not be running tests.\n-* Landing changes to the `rust-lang/rust` repository's master branch is gated on\n-  platforms **building**. Note that this means for some platforms only the\n-  standard library is compiled, but for others the full bootstrap is run.\n-* Official release artifacts are provided for the platform.\n-\n-|  Target                       | std |rustc|cargo| notes                      |\n-|-------------------------------|-----|-----|-----|----------------------------|\n-| `aarch64-apple-ios`           |  \u2713  |     |     | ARM64 iOS                  |\n-| `aarch64-unknown-linux-gnu`   |  \u2713  |  \u2713  |  \u2713  | ARM64 Linux (2.6.18+)      |\n-| `arm-linux-androideabi`       |  \u2713  |     |     | ARM Android                |\n-| `arm-unknown-linux-gnueabi`   |  \u2713  |  \u2713  |  \u2713  | ARM Linux (2.6.18+)        |\n-| `arm-unknown-linux-gnueabihf` |  \u2713  |  \u2713  |  \u2713  | ARM Linux (2.6.18+)        |\n-| `armv7-apple-ios`             |  \u2713  |     |     | ARM iOS                    |\n-|`armv7-unknown-linux-gnueabihf`|  \u2713  |  \u2713  |  \u2713  | ARMv7 Linux (2.6.18+)      |\n-| `armv7s-apple-ios`            |  \u2713  |     |     | ARM iOS                    |\n-| `i386-apple-ios`              |  \u2713  |     |     | 32-bit x86 iOS             |\n-| `i586-pc-windows-msvc`        |  \u2713  |     |     | 32-bit Windows w/o SSE     |\n-| `mips-unknown-linux-gnu`      |  \u2713  |     |     | MIPS Linux (2.6.18+)       |\n-| `mips-unknown-linux-musl`     |  \u2713  |     |     | MIPS Linux with MUSL       |\n-| `mipsel-unknown-linux-gnu`    |  \u2713  |     |     | MIPS (LE) Linux (2.6.18+)  |\n-| `mipsel-unknown-linux-musl`   |  \u2713  |     |     | MIPS (LE) Linux with MUSL  |\n-| `powerpc-unknown-linux-gnu`   |  \u2713  |     |     | PowerPC Linux (2.6.18+)    |\n-| `powerpc64-unknown-linux-gnu` |  \u2713  |     |     | PPC64 Linux (2.6.18+)      |\n-|`powerpc64le-unknown-linux-gnu`|  \u2713  |     |     | PPC64LE Linux (2.6.18+)    |\n-| `x86_64-apple-ios`            |  \u2713  |     |     | 64-bit x86 iOS             |\n-| `x86_64-rumprun-netbsd`       |  \u2713  |     |     | 64-bit NetBSD Rump Kernel  |\n-| `x86_64-unknown-freebsd`      |  \u2713  |  \u2713  |  \u2713  | 64-bit FreeBSD             |\n-| `x86_64-unknown-linux-musl`   |  \u2713  |     |     | 64-bit Linux with MUSL     |\n-| `x86_64-unknown-netbsd`       |  \u2713  |  \u2713  |  \u2713  | 64-bit NetBSD              |\n-\n-### Tier 3\n-\n-Tier 3 platforms are those which Rust has support for, but landing changes is\n-not gated on the platform either building or passing tests. Working builds for\n-these platforms may be spotty as their reliability is often defined in terms of\n-community contributions. Additionally, release artifacts and installers are not\n-provided, but there may be community infrastructure producing these in\n-unofficial locations.\n-\n-|  Target                       | std |rustc|cargo| notes                      |\n-|-------------------------------|-----|-----|-----|----------------------------|\n-| `aarch64-linux-android`       |  \u2713  |     |     | ARM64 Android              |\n-| `armv7-linux-androideabi`     |  \u2713  |     |     | ARM-v7a Android            |\n-| `i686-linux-android`          |  \u2713  |     |     | 32-bit x86 Android         |\n-| `i686-pc-windows-msvc` (XP)   |  \u2713  |     |     | Windows XP support         |\n-| `i686-unknown-freebsd`        |  \u2713  |  \u2713  |  \u2713  | 32-bit FreeBSD             |\n-| `x86_64-pc-windows-msvc` (XP) |  \u2713  |     |     | Windows XP support         |\n-| `x86_64-sun-solaris`          |  \u2713  |  \u2713  |     | 64-bit Solaris/SunOS       |\n-| `x86_64-unknown-bitrig`       |  \u2713  |  \u2713  |     | 64-bit Bitrig              |\n-| `x86_64-unknown-dragonfly`    |  \u2713  |  \u2713  |     | 64-bit DragonFlyBSD        |\n-| `x86_64-unknown-openbsd`      |  \u2713  |  \u2713  |     | 64-bit OpenBSD             |\n-\n-Note that this table can be expanded over time, this isn't the exhaustive set of\n-tier 3 platforms that will ever be!\n+[platform-support]: https://forge.rust-lang.org/platform-support.html\n \n ## Installing on Linux or Mac\n "}]}