{"sha": "d4a493078ad0e79a8b401af40274089d8235827f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YTQ5MzA3OGFkMGU3OWE4YjQwMWFmNDAyNzQwODlkODIzNTgyN2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-24T09:48:44Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-24T09:48:44Z"}, "message": "Simplify", "tree": {"sha": "cc03ea687aa084bba4e21c14477890bf4a0f9f12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc03ea687aa084bba4e21c14477890bf4a0f9f12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4a493078ad0e79a8b401af40274089d8235827f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a493078ad0e79a8b401af40274089d8235827f", "html_url": "https://github.com/rust-lang/rust/commit/d4a493078ad0e79a8b401af40274089d8235827f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4a493078ad0e79a8b401af40274089d8235827f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c749fe223bf5a41709a4bc91d0f56dafc4201658", "url": "https://api.github.com/repos/rust-lang/rust/commits/c749fe223bf5a41709a4bc91d0f56dafc4201658", "html_url": "https://github.com/rust-lang/rust/commit/c749fe223bf5a41709a4bc91d0f56dafc4201658"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "5bad3911f944c0570f7df58d2646276d8da5222d", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d4a493078ad0e79a8b401af40274089d8235827f/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a493078ad0e79a8b401af40274089d8235827f/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=d4a493078ad0e79a8b401af40274089d8235827f", "patch": "@@ -105,10 +105,13 @@ impl MockAnalysis {\n     pub fn with_files_and_position(fixture: &str) -> (MockAnalysis, FilePosition) {\n         let mut position = None;\n         let mut res = MockAnalysis::new();\n-        for entry in Fixture::parse(fixture) {\n+        for mut entry in Fixture::parse(fixture) {\n             if entry.text.contains(CURSOR_MARKER) {\n                 assert!(position.is_none(), \"only one marker (<|>) per fixture is allowed\");\n-                position = Some(res.add_file_fixture_with_position(entry));\n+                let (offset, text) = extract_offset(&entry.text);\n+                entry.text = text;\n+                let file_id = res.add_file_fixture(entry);\n+                position = Some(FilePosition { file_id, offset });\n             } else {\n                 res.add_file_fixture(entry);\n             }\n@@ -123,19 +126,12 @@ impl MockAnalysis {\n         file_id\n     }\n \n-    fn add_file_fixture_with_position(&mut self, mut fixture: Fixture) -> FilePosition {\n-        let (offset, text) = extract_offset(&fixture.text);\n-        fixture.text = text;\n-        let file_id = self.next_id();\n-        self.files.push(MockFileData::from(fixture));\n-        FilePosition { file_id, offset }\n-    }\n-\n     pub fn add_file(&mut self, path: &str, text: &str) -> FileId {\n         let file_id = self.next_id();\n         self.files.push(MockFileData::new(path.to_string(), text.to_string()));\n         file_id\n     }\n+\n     fn add_file_with_range(&mut self, path: &str, text: &str) -> FileRange {\n         let (range, text) = extract_range(text);\n         let file_id = self.next_id();"}]}