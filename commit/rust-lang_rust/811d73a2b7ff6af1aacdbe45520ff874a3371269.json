{"sha": "811d73a2b7ff6af1aacdbe45520ff874a3371269", "node_id": "C_kwDOAAsO6NoAKDgxMWQ3M2EyYjdmZjZhZjFhYWNkYmU0NTUyMGZmODc0YTMzNzEyNjk", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:16:29Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:16:29Z"}, "message": "Test `#[expect]` for `redundant_clone`", "tree": {"sha": "7330c8a0cee8ead45ffda8339dee194e302516cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7330c8a0cee8ead45ffda8339dee194e302516cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/811d73a2b7ff6af1aacdbe45520ff874a3371269", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmK2/J0ACgkQ9cWdDmae\nUwIUlxAAwToEcbHSlb7nzWYs+9WdUZMpMS6lMv3wg9Dga6sZht5pid3ncJIlLwLR\n9i3oP4zdOVQqfWfgzTUokOJ36Y38gRO8jvY+TznDOjjjmRmJYFJ0rKmmQzvx2NOl\nf4ryfUYPYKBjmuy+//EX206i2HQsfxu0o48lGotuCEEQJFG0KEqi+7FZY+z9cO26\nifVyYV4Y5lRe2fbGJuzEW6d45QobpLq2b+x6ej0Ln791zQQVh750KK6D/iX0/EPR\nuEjqhj0Z1vschLJRwF1QDSnxDIJmnu9KlllJ5rriT/CeGhuqiM8vKfY7obU9MnpM\nmIieYL5VXsXmpkaFwbbq0ktAzEZQ549IUaGy4ToYGPLghOeyDd8AV1APjVWgNYHp\nJgGK+qXJWhsKNRwdEl1kAFBsxGTuqjPCx+/wubbYRI6yQ7Dh4M2FLGtwWP9cI9bi\nIDJg+ilkqbA135b++BftrJRp57LzELQac1N+xH4LVWsZ62TrAHXE1KvNOvPCcatu\n/Y0PT+cPHFYurUlijgMruP1PXtrjJrD51qOTpZLZ9UMI8o++3RkpnK6YrK7GlIbJ\nvH4lctQmdY12zB6/dO7JlKYBxGCe87Iq/P9RzTKsQ4/CtPJdHsp6gITn0e96NSw0\ngAsqqqD9nbFVL8S9dowSlX7YunWQqtjTVbYcyNdLa/mP8czBPco=\n=i4rA\n-----END PGP SIGNATURE-----", "payload": "tree 7330c8a0cee8ead45ffda8339dee194e302516cf\nparent e7c55a478fd78cae940b0b43fbdbd4b4c7c6567b\nauthor xFrednet <xFrednet@gmail.com> 1656159389 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1656159389 +0200\n\nTest `#[expect]` for `redundant_clone`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/811d73a2b7ff6af1aacdbe45520ff874a3371269", "html_url": "https://github.com/rust-lang/rust/commit/811d73a2b7ff6af1aacdbe45520ff874a3371269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/811d73a2b7ff6af1aacdbe45520ff874a3371269/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7c55a478fd78cae940b0b43fbdbd4b4c7c6567b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c55a478fd78cae940b0b43fbdbd4b4c7c6567b", "html_url": "https://github.com/rust-lang/rust/commit/e7c55a478fd78cae940b0b43fbdbd4b4c7c6567b"}], "stats": {"total": 70, "additions": 40, "deletions": 30}, "files": [{"sha": "da52c0acf93b0fd463f70b4af1f448ece365acfb", "filename": "tests/ui/redundant_clone.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/811d73a2b7ff6af1aacdbe45520ff874a3371269/tests%2Fui%2Fredundant_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/811d73a2b7ff6af1aacdbe45520ff874a3371269/tests%2Fui%2Fredundant_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.fixed?ref=811d73a2b7ff6af1aacdbe45520ff874a3371269", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n // rustfix-only-machine-applicable\n \n+#![feature(lint_reasons)]\n #![allow(clippy::implicit_clone, clippy::drop_non_drop)]\n use std::ffi::OsString;\n use std::path::Path;\n@@ -29,6 +30,10 @@ fn main() {\n     #[allow(clippy::redundant_clone)]\n     let _s = String::new().to_string();\n \n+    // Check that lint level works\n+    #[expect(clippy::redundant_clone)]\n+    let _s = String::new().to_string();\n+\n     let tup = (String::from(\"foo\"),);\n     let _t = tup.0;\n "}, {"sha": "5867d019dbb7d4742713541a5c81af848c24233a", "filename": "tests/ui/redundant_clone.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/811d73a2b7ff6af1aacdbe45520ff874a3371269/tests%2Fui%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811d73a2b7ff6af1aacdbe45520ff874a3371269/tests%2Fui%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.rs?ref=811d73a2b7ff6af1aacdbe45520ff874a3371269", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n // rustfix-only-machine-applicable\n \n+#![feature(lint_reasons)]\n #![allow(clippy::implicit_clone, clippy::drop_non_drop)]\n use std::ffi::OsString;\n use std::path::Path;\n@@ -29,6 +30,10 @@ fn main() {\n     #[allow(clippy::redundant_clone)]\n     let _s = String::new().to_string();\n \n+    // Check that lint level works\n+    #[expect(clippy::redundant_clone)]\n+    let _s = String::new().to_string();\n+\n     let tup = (String::from(\"foo\"),);\n     let _t = tup.0.clone();\n "}, {"sha": "aa1dd7cbb45cdb9f3e5aaf8ad0ffc4df8f5cdb52", "filename": "tests/ui/redundant_clone.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/811d73a2b7ff6af1aacdbe45520ff874a3371269/tests%2Fui%2Fredundant_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/811d73a2b7ff6af1aacdbe45520ff874a3371269/tests%2Fui%2Fredundant_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.stderr?ref=811d73a2b7ff6af1aacdbe45520ff874a3371269", "patch": "@@ -1,180 +1,180 @@\n error: redundant clone\n-  --> $DIR/redundant_clone.rs:9:42\n+  --> $DIR/redundant_clone.rs:10:42\n    |\n LL |     let _s = [\"lorem\", \"ipsum\"].join(\" \").to_string();\n    |                                          ^^^^^^^^^^^^ help: remove this\n    |\n    = note: `-D clippy::redundant-clone` implied by `-D warnings`\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:9:14\n+  --> $DIR/redundant_clone.rs:10:14\n    |\n LL |     let _s = [\"lorem\", \"ipsum\"].join(\" \").to_string();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:12:15\n+  --> $DIR/redundant_clone.rs:13:15\n    |\n LL |     let _s = s.clone();\n    |               ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:12:14\n+  --> $DIR/redundant_clone.rs:13:14\n    |\n LL |     let _s = s.clone();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:15:15\n+  --> $DIR/redundant_clone.rs:16:15\n    |\n LL |     let _s = s.to_string();\n    |               ^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:15:14\n+  --> $DIR/redundant_clone.rs:16:14\n    |\n LL |     let _s = s.to_string();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:18:15\n+  --> $DIR/redundant_clone.rs:19:15\n    |\n LL |     let _s = s.to_owned();\n    |               ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:18:14\n+  --> $DIR/redundant_clone.rs:19:14\n    |\n LL |     let _s = s.to_owned();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:20:42\n+  --> $DIR/redundant_clone.rs:21:42\n    |\n LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_owned();\n    |                                          ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:20:14\n+  --> $DIR/redundant_clone.rs:21:14\n    |\n LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_owned();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:22:42\n+  --> $DIR/redundant_clone.rs:23:42\n    |\n LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n    |                                          ^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:22:14\n+  --> $DIR/redundant_clone.rs:23:14\n    |\n LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:24:29\n+  --> $DIR/redundant_clone.rs:25:29\n    |\n LL |     let _s = OsString::new().to_owned();\n    |                             ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:24:14\n+  --> $DIR/redundant_clone.rs:25:14\n    |\n LL |     let _s = OsString::new().to_owned();\n    |              ^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:26:29\n+  --> $DIR/redundant_clone.rs:27:29\n    |\n LL |     let _s = OsString::new().to_os_string();\n    |                             ^^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:26:14\n+  --> $DIR/redundant_clone.rs:27:14\n    |\n LL |     let _s = OsString::new().to_os_string();\n    |              ^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:33:19\n+  --> $DIR/redundant_clone.rs:38:19\n    |\n LL |     let _t = tup.0.clone();\n    |                   ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:33:14\n+  --> $DIR/redundant_clone.rs:38:14\n    |\n LL |     let _t = tup.0.clone();\n    |              ^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:65:25\n+  --> $DIR/redundant_clone.rs:70:25\n    |\n LL |     if b { (a.clone(), a.clone()) } else { (Alpha, a) }\n    |                         ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:65:24\n+  --> $DIR/redundant_clone.rs:70:24\n    |\n LL |     if b { (a.clone(), a.clone()) } else { (Alpha, a) }\n    |                        ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:122:15\n+  --> $DIR/redundant_clone.rs:127:15\n    |\n LL |     let _s = s.clone();\n    |               ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:122:14\n+  --> $DIR/redundant_clone.rs:127:14\n    |\n LL |     let _s = s.clone();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:123:15\n+  --> $DIR/redundant_clone.rs:128:15\n    |\n LL |     let _t = t.clone();\n    |               ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:123:14\n+  --> $DIR/redundant_clone.rs:128:14\n    |\n LL |     let _t = t.clone();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:133:19\n+  --> $DIR/redundant_clone.rs:138:19\n    |\n LL |         let _f = f.clone();\n    |                   ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:133:18\n+  --> $DIR/redundant_clone.rs:138:18\n    |\n LL |         let _f = f.clone();\n    |                  ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:145:14\n+  --> $DIR/redundant_clone.rs:150:14\n    |\n LL |     let y = x.clone().join(\"matthias\");\n    |              ^^^^^^^^ help: remove this\n    |\n note: cloned value is neither consumed nor mutated\n-  --> $DIR/redundant_clone.rs:145:13\n+  --> $DIR/redundant_clone.rs:150:13\n    |\n LL |     let y = x.clone().join(\"matthias\");\n    |             ^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:199:11\n+  --> $DIR/redundant_clone.rs:204:11\n    |\n LL |     foo(&x.clone(), move || {\n    |           ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:199:10\n+  --> $DIR/redundant_clone.rs:204:10\n    |\n LL |     foo(&x.clone(), move || {\n    |          ^"}]}