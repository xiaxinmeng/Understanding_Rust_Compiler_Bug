{"sha": "0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNDk4ZGE0N2UyNjViNWJiN2E0ZjU5YmJlZDUzYmM4NDNiZDgzY2M=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-30T19:43:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-30T19:43:45Z"}, "message": "rustc: Allow attributes on methods. Closes #1709", "tree": {"sha": "faa59e85a242835d965df27778221b19aa4db5ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faa59e85a242835d965df27778221b19aa4db5ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "html_url": "https://github.com/rust-lang/rust/commit/0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba3d2435556ae4ea72eeb6095e95b5c14a3c1f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba3d2435556ae4ea72eeb6095e95b5c14a3c1f7", "html_url": "https://github.com/rust-lang/rust/commit/6ba3d2435556ae4ea72eeb6095e95b5c14a3c1f7"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "1436f9b08f452543f69ff768e5caddc7c38e0e82", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "patch": "@@ -299,7 +299,8 @@ type ty_field_ = {ident: ident, mt: mt};\n \n type ty_field = spanned<ty_field_>;\n \n-type ty_method = {ident: ident, decl: fn_decl, tps: [ty_param], span: span};\n+type ty_method = {ident: ident, attrs: [attribute],\n+                  decl: fn_decl, tps: [ty_param], span: span};\n \n enum int_ty { ty_i, ty_char, ty_i8, ty_i16, ty_i32, ty_i64, }\n \n@@ -399,7 +400,8 @@ enum ret_style {\n     return_val, // everything else\n }\n \n-type method = {ident: ident, tps: [ty_param], decl: fn_decl, body: blk,\n+type method = {ident: ident, attrs: [attribute],\n+               tps: [ty_param], decl: fn_decl, body: blk,\n                id: node_id, span: span};\n \n type _mod = {view_items: [@view_item], items: [@item]};"}, {"sha": "1c81eda7df5ced05c4fb42c29dafb72f2871249e", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "patch": "@@ -282,6 +282,7 @@ fn parse_ty_fn(proto: ast::proto, p: parser) -> ast::ty_ {\n \n fn parse_ty_methods(p: parser) -> [ast::ty_method] {\n     parse_seq(token::LBRACE, token::RBRACE, seq_sep_none(), {|p|\n+        let attrs = parse_outer_attributes(p);\n         let flo = p.span.lo;\n         expect_word(p, \"fn\");\n         let ident = parse_method_name(p);\n@@ -290,7 +291,7 @@ fn parse_ty_methods(p: parser) -> [ast::ty_method] {\n         expect(p, token::SEMI);\n         alt f {\n           ast::ty_fn(_, d) {\n-            {ident: ident, decl: d, tps: tps,\n+            {ident: ident, attrs: attrs, decl: d, tps: tps,\n              span: ast_util::mk_sp(flo, fhi)}\n           }\n         }\n@@ -1849,13 +1850,15 @@ fn parse_method_name(p: parser) -> ast::ident {\n }\n \n fn parse_method(p: parser) -> @ast::method {\n+    let attrs = parse_outer_attributes(p);\n     let lo = p.span.lo;\n     expect_word(p, \"fn\");\n     let ident = parse_method_name(p);\n     let tps = parse_ty_params(p);\n     let decl = parse_fn_decl(p, ast::impure_fn);\n-    let body = parse_block(p);\n-    @{ident: ident, tps: tps, decl: decl, body: body,\n+    let (inner_attrs, body) = parse_inner_attrs_and_block(p, true);\n+    let attrs = attrs + inner_attrs;\n+    @{ident: ident, attrs: attrs, tps: tps, decl: decl, body: body,\n       id: p.get_id(), span: ast_util::mk_sp(lo, body.span.hi)}\n }\n "}, {"sha": "c361beb21ce87a37d0568525c15d131a3c718823", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "patch": "@@ -510,16 +510,18 @@ fn print_item(s: ps, &&item: @ast::item) {\n         for meth in methods {\n             hardbreak_if_not_bol(s);\n             maybe_print_comment(s, meth.span.lo);\n+            print_outer_attributes(s, meth.attrs);\n             print_fn(s, meth.decl, meth.ident, meth.tps);\n             word(s.s, \" \");\n-            print_block(s, meth.body);\n+            print_block_with_attrs(s, meth.body, meth.attrs);\n         }\n         bclose(s, item.span);\n       }\n       ast::item_iface(tps, methods) {\n         head(s, \"iface\");\n         word(s.s, item.ident);\n         print_type_params(s, tps);\n+        word(s.s, \" \");\n         bopen(s);\n         for meth in methods { print_ty_method(s, meth); }\n         bclose(s, item.span);\n@@ -566,11 +568,10 @@ fn print_variant(s: ps, v: ast::variant) {\n \n fn print_ty_method(s: ps, m: ast::ty_method) {\n     hardbreak_if_not_bol(s);\n-    cbox(s, indent_unit);\n     maybe_print_comment(s, m.span.lo);\n+    print_outer_attributes(s, m.attrs);\n     print_ty_fn(s, none, m.decl, some(m.ident), some(m.tps));\n     word(s.s, \";\");\n-    end(s);\n }\n \n fn print_outer_attributes(s: ps, attrs: [ast::attribute]) {"}, {"sha": "32230dfca028506d8b290cb3e9d533ce6827d329", "filename": "src/test/run-pass/method-attributes.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Ftest%2Frun-pass%2Fmethod-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e498da47e265b5bb7a4f59bbed53bc843bd83cc/src%2Ftest%2Frun-pass%2Fmethod-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmethod-attributes.rs?ref=0e498da47e265b5bb7a4f59bbed53bc843bd83cc", "patch": "@@ -0,0 +1,24 @@\n+// pp-exact - Make sure we print all the attributes\n+\n+#[frobable]\n+iface frobable {\n+    #[frob_attr]\n+    fn frob();\n+    #[defrob_attr]\n+    fn defrob();\n+}\n+\n+#[int_frobable]\n+impl frobable for int {\n+    #[frob_attr1]\n+    fn frob() {\n+        #[frob_attr2];\n+    }\n+\n+    #[defrob_attr1]\n+    fn defrob() {\n+        #[defrob_attr2];\n+    }\n+}\n+\n+fn main() { }"}]}