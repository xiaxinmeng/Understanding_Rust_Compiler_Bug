{"sha": "861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MTY0NGYyYWY1NDIxZjVhYTU1ZDRlN2ZkZGZjOGRiYTU0YmNiNzA=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-18T23:04:43Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-24T05:42:23Z"}, "message": "address nits", "tree": {"sha": "06c9817cddb97291eeb781d1f82f8062ee621a03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06c9817cddb97291eeb781d1f82f8062ee621a03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "html_url": "https://github.com/rust-lang/rust/commit/861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f899a66591c1a4bc68b51fc6d1f207d2d49a087", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f899a66591c1a4bc68b51fc6d1f207d2d49a087", "html_url": "https://github.com/rust-lang/rust/commit/9f899a66591c1a4bc68b51fc6d1f207d2d49a087"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "be1841794512b99fe9c88a66f2e7f2d8f58a9fef", "filename": "src/librustc_front/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Flibrustc_front%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Flibrustc_front%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Flowering.rs?ref=861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "patch": "@@ -142,7 +142,7 @@ impl<'a, 'hir> LoweringContext<'a> {\n         }\n     }\n \n-    // panics if this LoweringContext's NodeIdAssigner is not a Session\n+    // Panics if this LoweringContext's NodeIdAssigner is not able to emit diagnostics.\n     fn diagnostic(&self) -> &Handler {\n         self.id_assigner.diagnostic()\n     }"}, {"sha": "4782d3fb3b97c1dcd24ae7b5903c26da989d4186", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "patch": "@@ -2076,8 +2076,8 @@ impl<'a> Parser<'a> {\n         if end.is_none() && limits == RangeLimits::Closed {\n             Err(self.span_fatal_help(self.span,\n                                      \"inclusive range with no end\",\n-                                     \"currently, inclusive ranges must be bounded at the end \\\n-                                      (`...b` or `a...b`) -- see tracking issue #28237\"))\n+                                     \"inclusive ranges must be bounded at the end \\\n+                                      (`...b` or `a...b`)\"))\n         } else {\n             Ok(ExprKind::Range(start, end, limits))\n         }\n@@ -3016,7 +3016,8 @@ impl<'a> Parser<'a> {\n                         this.parse_assoc_expr_with(op.precedence() + 1,\n                             LhsExpr::NotYetParsed)\n                 }),\n-                // no operators are currently handled here\n+                // We currently have no non-associative operators that are not handled above by\n+                // the special cases. The code is here only for future convenience.\n                 Fixity::None => self.with_res(\n                     restrictions - Restrictions::RESTRICTION_STMT_EXPR,\n                     |this| {"}, {"sha": "94e048fed655eb51b91f277f3adb53042dd3a3a4", "filename": "src/test/compile-fail/impossible_range.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Ftest%2Fcompile-fail%2Fimpossible_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Ftest%2Fcompile-fail%2Fimpossible_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpossible_range.rs?ref=861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "patch": "@@ -19,9 +19,9 @@ pub fn main() {\n     0..1;\n \n     ...; //~ERROR inclusive range with no end\n-         //~^HELP 28237\n+         //~^HELP bounded at the end\n     0...; //~ERROR inclusive range with no end\n-          //~^HELP 28237\n+          //~^HELP bounded at the end\n     ...1;\n     0...1;\n }"}, {"sha": "ce97372c668451ab68a2a8a0a39a82059fe1820a", "filename": "src/test/parse-fail/range_inclusive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Ftest%2Fparse-fail%2Frange_inclusive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/861644f2af5421f5aa55d4e7fddfc8dba54bcb70/src%2Ftest%2Fparse-fail%2Frange_inclusive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Frange_inclusive.rs?ref=861644f2af5421f5aa55d4e7fddfc8dba54bcb70", "patch": "@@ -14,6 +14,6 @@\n \n pub fn main() {\n     for _ in 1... {} //~ERROR inclusive range with no end\n-                     //~^HELP 28237\n+                     //~^HELP bounded at the end\n }\n "}]}