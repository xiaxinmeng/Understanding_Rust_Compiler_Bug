{"sha": "e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOGZkZGEyNDNjODkwYmM4ZjRjZTkzZWI4MmZkMWJmNzUwZWJiZTc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-26T20:11:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-26T20:11:29Z"}, "message": "Rollup merge of #72342 - jsgf:warn-unused-deps, r=petrochenkov\n\nWarn about unused crate deps\n\nImplements #57274 by adding -Wunused-crate-dependencies. This will warn about any `--extern` option on the command line which isn't referenced by the crate source either via `use` or `extern crate`.\n\nCrates which are added for some side effect but are otherwise unreferenced - such as for symbols they define - the warning can be suppressed with `use somecrate as _;`.\n\nIf a crate has multiple aliases (eg using `foo = { package = \"bar\" }` in `Cargo.toml`), then it will warn about each unused alias.\n\nThis does not consider crate added by some other means than `--extern`, including the standard library. It also doesn't consider any crate without `add_prelude` set (though I'm not sure about this).\n\nUnfortunately this probably [does not yet work well with Cargo](https://github.com/rust-lang/rust/issues/57274#issuecomment-624839355) as it will over-specify crates, causing spurious warnings. As a result, this lint is \"allow\" by default and must be explicitly enabled either via `#![warn(unused_crate_deps)]` or with `-Wunused-crate-deps`.", "tree": {"sha": "a9654d285094708c102d3a980c6013c0d75bf612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9654d285094708c102d3a980c6013c0d75bf612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJezXfyCRBK7hj4Ov3rIwAAdHIIAH36t5xBz1ewP+nMAGqeHLLM\nGcZtbCpgW7QA3w2K6QBObA5t4DQH85PKfkjVsOmfP8ZtcNpfFd2OcYKkRLfcI1DI\nbMeIySwVdAvNQq4XGKIgSo4wxS3kIr1wLhWwPtFbQ4MOafL7uEWzhyPSuZj8MTaV\nzwDDIp7TFh8N+k4wfqSuhGa3SlnIGvQalch4IyJHloMBB5oQaWOKbpgFkauHvQE5\n0m/VO8ndy6Tl2jU8S09yMibYmK40EOHlRSm1aq7mjeX7yAiS6nTwUPtZMdISwnWL\n1VWvT1dNE/NK5H5K0D3m4iOKApLI54fBZtgtQWf0nJR7WGfLFD8wI87BdjnzmKU=\n=TX7k\n-----END PGP SIGNATURE-----\n", "payload": "tree a9654d285094708c102d3a980c6013c0d75bf612\nparent 0747f586ebada402e2b2d5cb14ab40d5f33518a6\nparent ffa493ab57fbb44f16efae2515abdde6876cc5c9\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590523889 +0200\ncommitter GitHub <noreply@github.com> 1590523889 +0200\n\nRollup merge of #72342 - jsgf:warn-unused-deps, r=petrochenkov\n\nWarn about unused crate deps\n\nImplements #57274 by adding -Wunused-crate-dependencies. This will warn about any `--extern` option on the command line which isn't referenced by the crate source either via `use` or `extern crate`.\n\nCrates which are added for some side effect but are otherwise unreferenced - such as for symbols they define - the warning can be suppressed with `use somecrate as _;`.\n\nIf a crate has multiple aliases (eg using `foo = { package = \"bar\" }` in `Cargo.toml`), then it will warn about each unused alias.\n\nThis does not consider crate added by some other means than `--extern`, including the standard library. It also doesn't consider any crate without `add_prelude` set (though I'm not sure about this).\n\nUnfortunately this probably [does not yet work well with Cargo](https://github.com/rust-lang/rust/issues/57274#issuecomment-624839355) as it will over-specify crates, causing spurious warnings. As a result, this lint is \"allow\" by default and must be explicitly enabled either via `#![warn(unused_crate_deps)]` or with `-Wunused-crate-deps`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "html_url": "https://github.com/rust-lang/rust/commit/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0747f586ebada402e2b2d5cb14ab40d5f33518a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0747f586ebada402e2b2d5cb14ab40d5f33518a6", "html_url": "https://github.com/rust-lang/rust/commit/0747f586ebada402e2b2d5cb14ab40d5f33518a6"}, {"sha": "ffa493ab57fbb44f16efae2515abdde6876cc5c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffa493ab57fbb44f16efae2515abdde6876cc5c9", "html_url": "https://github.com/rust-lang/rust/commit/ffa493ab57fbb44f16efae2515abdde6876cc5c9"}], "stats": {"total": 188, "additions": 188, "deletions": 0}, "files": [{"sha": "ee27342541c93178a4b4fcf432866cdc19c32a00", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -276,6 +276,7 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n         UNUSED_ALLOCATION,\n         UNUSED_DOC_COMMENTS,\n         UNUSED_EXTERN_CRATES,\n+        UNUSED_CRATE_DEPENDENCIES,\n         UNUSED_FEATURES,\n         UNUSED_LABELS,\n         UNUSED_PARENS,"}, {"sha": "db29e9538999a4276cb3c8a377065275c490a690", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -5,6 +5,7 @@ use crate::rmeta::{CrateDep, CrateMetadata, CrateNumMap, CrateRoot, MetadataBlob\n \n use rustc_ast::expand::allocator::{global_allocator_spans, AllocatorKind};\n use rustc_ast::{ast, attr};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::struct_span_err;\n@@ -18,6 +19,7 @@ use rustc_middle::middle::cstore::{\n };\n use rustc_middle::ty::TyCtxt;\n use rustc_session::config::{self, CrateType};\n+use rustc_session::lint;\n use rustc_session::output::validate_crate_name;\n use rustc_session::search_paths::PathKind;\n use rustc_session::{CrateDisambiguator, Session};\n@@ -49,6 +51,7 @@ pub struct CrateLoader<'a> {\n     local_crate_name: Symbol,\n     // Mutable output.\n     cstore: CStore,\n+    used_extern_options: FxHashSet<Symbol>,\n }\n \n pub enum LoadedMacro {\n@@ -205,6 +208,7 @@ impl<'a> CrateLoader<'a> {\n                 allocator_kind: None,\n                 has_global_allocator: false,\n             },\n+            used_extern_options: Default::default(),\n         }\n     }\n \n@@ -445,6 +449,9 @@ impl<'a> CrateLoader<'a> {\n         dep_kind: DepKind,\n         dep: Option<(&'b CratePaths, &'b CrateDep)>,\n     ) -> CrateNum {\n+        if dep.is_none() {\n+            self.used_extern_options.insert(name);\n+        }\n         self.maybe_resolve_crate(name, span, dep_kind, dep).unwrap_or_else(|err| err.report())\n     }\n \n@@ -839,6 +846,26 @@ impl<'a> CrateLoader<'a> {\n         });\n     }\n \n+    fn report_unused_deps(&mut self, krate: &ast::Crate) {\n+        // Make a point span rather than covering the whole file\n+        let span = krate.span.shrink_to_lo();\n+        // Complain about anything left over\n+        for (name, _) in self.sess.opts.externs.iter() {\n+            if !self.used_extern_options.contains(&Symbol::intern(name)) {\n+                self.sess.parse_sess.buffer_lint(\n+                    lint::builtin::UNUSED_CRATE_DEPENDENCIES,\n+                    span,\n+                    ast::CRATE_NODE_ID,\n+                    &format!(\n+                        \"external crate `{}` unused in `{}`: remove the dependency or add `use {} as _;`\",\n+                        name,\n+                        self.local_crate_name,\n+                        name),\n+                );\n+            }\n+        }\n+    }\n+\n     pub fn postprocess(&mut self, krate: &ast::Crate) {\n         self.inject_profiler_runtime();\n         self.inject_allocator_crate(krate);\n@@ -847,6 +874,8 @@ impl<'a> CrateLoader<'a> {\n         if log_enabled!(log::Level::Info) {\n             dump_crates(&self.cstore);\n         }\n+\n+        self.report_unused_deps(krate);\n     }\n \n     pub fn process_extern_crate("}, {"sha": "e55ddc26a944196721f95a50f41eb9e9ce676277", "filename": "src/librustc_session/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint%2Fbuiltin.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -71,6 +71,12 @@ declare_lint! {\n     \"extern crates that are never used\"\n }\n \n+declare_lint! {\n+    pub UNUSED_CRATE_DEPENDENCIES,\n+    Allow,\n+    \"crate dependencies that are never used\"\n+}\n+\n declare_lint! {\n     pub UNUSED_QUALIFICATIONS,\n     Allow,\n@@ -529,6 +535,7 @@ declare_lint_pass! {\n         UNCONDITIONAL_PANIC,\n         UNUSED_IMPORTS,\n         UNUSED_EXTERN_CRATES,\n+        UNUSED_CRATE_DEPENDENCIES,\n         UNUSED_QUALIFICATIONS,\n         UNKNOWN_LINTS,\n         UNUSED_VARIABLES,"}, {"sha": "1d3824e7a44f69d27f0db29e04a9ffdd5e95a0b3", "filename": "src/test/ui/unused-crate-deps/auxiliary/bar.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fauxiliary%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fauxiliary%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fauxiliary%2Fbar.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1 @@\n+pub const BAR: &str = \"bar\";"}, {"sha": "0ef03eb9edf0f9444030eef105d1697712672817", "filename": "src/test/ui/unused-crate-deps/auxiliary/foo.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fauxiliary%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fauxiliary%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fauxiliary%2Ffoo.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,5 @@\n+// edition:2018\n+// aux-crate:bar=bar.rs\n+\n+pub const FOO: &str = \"foo\";\n+pub use bar::BAR;"}, {"sha": "c1545dca99f57b3a0fa9f891c3281dc16eaa1577", "filename": "src/test/ui/unused-crate-deps/libfib.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Flibfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Flibfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Flibfib.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,21 @@\n+// Test warnings for a library crate\n+\n+// check-pass\n+// aux-crate:bar=bar.rs\n+// compile-flags:--crate-type lib -Wunused-crate-dependencies\n+\n+pub fn fib(n: u32) -> Vec<u32> {\n+//~^ WARNING external crate `bar` unused in\n+let mut prev = 0;\n+    let mut cur = 1;\n+    let mut v = vec![];\n+\n+    for _ in 0..n {\n+        v.push(prev);\n+        let n = prev + cur;\n+        prev = cur;\n+        cur = n;\n+    }\n+\n+    v\n+}"}, {"sha": "15833126bd6201ddda75e3b529eb26f8dc08473c", "filename": "src/test/ui/unused-crate-deps/libfib.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Flibfib.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Flibfib.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Flibfib.stderr?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,10 @@\n+warning: external crate `bar` unused in `libfib`: remove the dependency or add `use bar as _;`\n+  --> $DIR/libfib.rs:7:1\n+   |\n+LL | pub fn fib(n: u32) -> Vec<u32> {\n+   | ^\n+   |\n+   = note: requested on the command line with `-W unused-crate-dependencies`\n+\n+warning: 1 warning emitted\n+"}, {"sha": "8904d04bc14f75ba1c1a084dd89195b2b92215f3", "filename": "src/test/ui/unused-crate-deps/suppress.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fsuppress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fsuppress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fsuppress.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,11 @@\n+// Suppress by using crate\n+\n+// edition:2018\n+// check-pass\n+// aux-crate:bar=bar.rs\n+\n+#![warn(unused_crate_dependencies)]\n+\n+use bar as _;\n+\n+fn main() {}"}, {"sha": "1b7cb9b970e4908d0ca713e952b4e808ecd55975", "filename": "src/test/ui/unused-crate-deps/unused-aliases.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Funused-aliases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Funused-aliases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Funused-aliases.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,13 @@\n+// Warn about unused aliased for the crate\n+\n+// edition:2018\n+// check-pass\n+// aux-crate:bar=bar.rs\n+// aux-crate:barbar=bar.rs\n+\n+#![warn(unused_crate_dependencies)]\n+//~^ WARNING external crate `barbar` unused in\n+\n+use bar as _;\n+\n+fn main() {}"}, {"sha": "c8c6c4507b0c51427136d656ba9de8cdbdcd3a43", "filename": "src/test/ui/unused-crate-deps/unused-aliases.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Funused-aliases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Funused-aliases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Funused-aliases.stderr?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,14 @@\n+warning: external crate `barbar` unused in `unused_aliases`: remove the dependency or add `use barbar as _;`\n+  --> $DIR/unused-aliases.rs:8:1\n+   |\n+LL | #![warn(unused_crate_dependencies)]\n+   | ^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused-aliases.rs:8:9\n+   |\n+LL | #![warn(unused_crate_dependencies)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: 1 warning emitted\n+"}, {"sha": "f15c87fa0b2499647edd82dcd7879dd7b0716863", "filename": "src/test/ui/unused-crate-deps/use_extern_crate_2015.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fuse_extern_crate_2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fuse_extern_crate_2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fuse_extern_crate_2015.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,13 @@\n+// Suppress by using crate\n+\n+// edition:2015\n+// check-pass\n+// aux-crate:bar=bar.rs\n+\n+#![warn(unused_crate_dependencies)]\n+\n+extern crate bar;\n+\n+fn main() {\n+    println!(\"bar {}\", bar::BAR);\n+}"}, {"sha": "1acb307ab21b3714fd35f4cb22fa6b3964fbe94c", "filename": "src/test/ui/unused-crate-deps/warn-attr.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-attr.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,10 @@\n+// Check for unused crate dep, no path\n+\n+// edition:2018\n+// check-pass\n+// aux-crate:bar=bar.rs\n+\n+#![warn(unused_crate_dependencies)]\n+//~^ WARNING external crate `bar` unused in\n+\n+fn main() {}"}, {"sha": "0d38315704b11fb25e6bc7be22774c0714d4f4d4", "filename": "src/test/ui/unused-crate-deps/warn-attr.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-attr.stderr?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,14 @@\n+warning: external crate `bar` unused in `warn_attr`: remove the dependency or add `use bar as _;`\n+  --> $DIR/warn-attr.rs:7:1\n+   |\n+LL | #![warn(unused_crate_dependencies)]\n+   | ^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/warn-attr.rs:7:9\n+   |\n+LL | #![warn(unused_crate_dependencies)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: 1 warning emitted\n+"}, {"sha": "c609529a6c6fbea18c446692a4ac6709081b5e5e", "filename": "src/test/ui/unused-crate-deps/warn-cmdline-static.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline-static.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,10 @@\n+// Check for unused crate dep, no path\n+\n+// edition:2018\n+// check-pass\n+// compile-flags: -Wunused-crate-dependencies\n+// aux-crate:bar=bar.rs\n+// no-prefer-dynamic\n+\n+fn main() {}\n+//~^ WARNING external crate `bar` unused in"}, {"sha": "65956461d643928fa5a319c7ae533f3dc7e15ded", "filename": "src/test/ui/unused-crate-deps/warn-cmdline-static.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline-static.stderr?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,10 @@\n+warning: external crate `bar` unused in `warn_cmdline_static`: remove the dependency or add `use bar as _;`\n+  --> $DIR/warn-cmdline-static.rs:9:1\n+   |\n+LL | fn main() {}\n+   | ^\n+   |\n+   = note: requested on the command line with `-W unused-crate-dependencies`\n+\n+warning: 1 warning emitted\n+"}, {"sha": "3bae61c3ea2ccd2c67a247c3cbc04a85de0b8d1f", "filename": "src/test/ui/unused-crate-deps/warn-cmdline.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline.rs?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,9 @@\n+// Check for unused crate dep, no path\n+\n+// edition:2018\n+// check-pass\n+// compile-flags: -Wunused-crate-dependencies\n+// aux-crate:bar=bar.rs\n+\n+fn main() {}\n+//~^ WARNING external crate `bar` unused in"}, {"sha": "ea675ba9a1eb184560f8379ea4571e2d2b1e9ec4", "filename": "src/test/ui/unused-crate-deps/warn-cmdline.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fwarn-cmdline.stderr?ref=e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "patch": "@@ -0,0 +1,10 @@\n+warning: external crate `bar` unused in `warn_cmdline`: remove the dependency or add `use bar as _;`\n+  --> $DIR/warn-cmdline.rs:8:1\n+   |\n+LL | fn main() {}\n+   | ^\n+   |\n+   = note: requested on the command line with `-W unused-crate-dependencies`\n+\n+warning: 1 warning emitted\n+"}]}