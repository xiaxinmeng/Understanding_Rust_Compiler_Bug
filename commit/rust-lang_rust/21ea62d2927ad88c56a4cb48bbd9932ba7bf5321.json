{"sha": "21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZWE2MmQyOTI3YWQ4OGM1NmE0Y2I0OGJiZDk5MzJiYTdiZjUzMjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-15T13:42:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-15T13:42:57Z"}, "message": "Don't parse child modules when doing diagnostics", "tree": {"sha": "909f5a76dd04943a6d3217232eec8262563e43ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/909f5a76dd04943a6d3217232eec8262563e43ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "html_url": "https://github.com/rust-lang/rust/commit/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a9e4ec7e181c9cb17fe574073c2b718611ccec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a9e4ec7e181c9cb17fe574073c2b718611ccec3", "html_url": "https://github.com/rust-lang/rust/commit/4a9e4ec7e181c9cb17fe574073c2b718611ccec3"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "500b34c170f5bc2ef22ed35b4b71f09b21bbd5cc", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "patch": "@@ -7,7 +7,6 @@ use hir_def::{\n     builtin_type::BuiltinType,\n     docs::Documentation,\n     expr::{BindingAnnotation, Pat, PatId},\n-    nameres::ModuleSource,\n     per_ns::PerNs,\n     resolver::HasResolver,\n     type_ref::{Mutability, TypeRef},\n@@ -193,13 +192,14 @@ impl Module {\n \n     pub fn diagnostics(self, db: &impl HirDatabase, sink: &mut DiagnosticSink) {\n         let _p = profile(\"Module::diagnostics\");\n-        db.crate_def_map(self.id.krate).add_diagnostics(db, self.id.local_id, sink);\n+        let crate_def_map = db.crate_def_map(self.id.krate);\n+        crate_def_map.add_diagnostics(db, self.id.local_id, sink);\n         for decl in self.declarations(db) {\n             match decl {\n                 crate::ModuleDef::Function(f) => f.diagnostics(db, sink),\n                 crate::ModuleDef::Module(m) => {\n                     // Only add diagnostics from inline modules\n-                    if let ModuleSource::Module(_) = m.definition_source(db).value {\n+                    if crate_def_map[m.id.local_id].origin.is_inline() {\n                         m.diagnostics(db, sink)\n                     }\n                 }"}, {"sha": "e1a6a46df2c9327a8c21739a6c2ffdfdf65c0d22", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "patch": "@@ -145,6 +145,13 @@ impl ModuleOrigin {\n         }\n     }\n \n+    pub fn is_inline(&self) -> bool {\n+        match self {\n+            ModuleOrigin::Inline { .. } => true,\n+            ModuleOrigin::CrateRoot { .. } | ModuleOrigin::File { .. } => false,\n+        }\n+    }\n+\n     /// Returns a node which defines this module.\n     /// That is, a file or a `mod foo {}` with items.\n     fn definition_source(&self, db: &impl DefDatabase) -> InFile<ModuleSource> {"}]}