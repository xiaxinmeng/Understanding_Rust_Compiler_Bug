{"sha": "1fa842c8c9e9fed28a45fe1e3b109f2f902d128c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYTg0MmM4YzllOWZlZDI4YTQ1ZmUxZTNiMTA5ZjJmOTAyZDEyOGM=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-07-31T02:34:49Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-07-31T02:49:20Z"}, "message": "Update expect tests", "tree": {"sha": "8dffd4bbc3c18ee83c9462006dede7b1ec7cef91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dffd4bbc3c18ee83c9462006dede7b1ec7cef91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c", "html_url": "https://github.com/rust-lang/rust/commit/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9522a06fd444c670202fd64c91d1ba62e332ff70", "url": "https://api.github.com/repos/rust-lang/rust/commits/9522a06fd444c670202fd64c91d1ba62e332ff70", "html_url": "https://github.com/rust-lang/rust/commit/9522a06fd444c670202fd64c91d1ba62e332ff70"}], "stats": {"total": 591, "additions": 423, "deletions": 168}, "files": [{"sha": "8284ab757b55db15fd7e554e84aacf8cd98f8ae5", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=1fa842c8c9e9fed28a45fe1e3b109f2f902d128c", "patch": "@@ -212,9 +212,7 @@ impl ModuleDef {\n             ModuleDef::EnumVariant(ev) => {\n                 GenericDefId::from(GenericDef::from(ev.clone())).resolver(db)\n             }\n-            ModuleDef::Const(c) => {\n-                GenericDefId::from(GenericDef::from(c.clone())).resolver(db)\n-            }\n+            ModuleDef::Const(c) => GenericDefId::from(GenericDef::from(c.clone())).resolver(db),\n             ModuleDef::Static(s) => StaticId::from(s.clone()).resolver(db),\n             ModuleDef::Trait(t) => TraitId::from(t.clone()).resolver(db),\n             ModuleDef::TypeAlias(t) => ModuleId::from(t.module(db)).resolver(db),"}, {"sha": "a82fe6714bbea354dcaa55c3f3c52bf90b8748a9", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 416, "deletions": 164, "changes": 580, "blob_url": "https://github.com/rust-lang/rust/blob/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=1fa842c8c9e9fed28a45fe1e3b109f2f902d128c", "patch": "@@ -704,9 +704,10 @@ fn main() {\n \"#,\n             expect![[r#\"\n                 *iter*\n-                ```rust\n+\n+                ````rust\n                 Iter<Scan<OtherStruct<OtherStruct<i32>>, |&mut u32, &u32, &mut u32| -> Option<u32>, u32>>\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -722,9 +723,14 @@ fn main() { let foo_test = fo<|>o(); }\n \"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 pub fn foo() -> u32\n-                ```\n+                ````\n             \"#]],\n         );\n \n@@ -766,9 +772,14 @@ fn main() { let foo_test = fo<|>o(); }\n         \"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 pub fn foo<'a, T: AsRef<str>>(b: &'a T) -> &'a str\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -783,9 +794,14 @@ fn main() { }\n \"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 pub fn foo(a: u32, b: u32) -> u32\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -803,13 +819,14 @@ fn main() {\n \"#,\n             expect![[r#\"\n                 *field_a*\n-                ```rust\n-                Foo\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::Foo\n+                ````\n+\n+                ````rust\n                 field_a: u32\n-                ```\n+                ````\n             \"#]],\n         );\n \n@@ -824,13 +841,14 @@ fn main() {\n \"#,\n             expect![[r#\"\n                 *field_a*\n-                ```rust\n-                Foo\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::Foo\n+                ````\n+\n+                ````rust\n                 field_a: u32\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -841,18 +859,28 @@ fn main() {\n             r#\"const foo<|>: u32 = 0;\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 const foo: u32\n-                ```\n+                ````\n             \"#]],\n         );\n         check(\n             r#\"static foo<|>: u32 = 0;\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 static foo: u32\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -868,9 +896,10 @@ fn main() {\n }\"#,\n             expect![[r#\"\n                 *zz*\n-                ```rust\n+\n+                ````rust\n                 Test<i32, u8>\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -886,13 +915,14 @@ fn main() { So<|>me(12); }\n \"#,\n             expect![[r#\"\n                 *Some*\n-                ```rust\n-                Option\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::Option\n+                ````\n+\n+                ````rust\n                 Some\n-                ```\n+                ````\n             \"#]],\n         );\n \n@@ -905,9 +935,10 @@ fn main() { let b<|>ar = Some(12); }\n \"#,\n             expect![[r#\"\n                 *bar*\n-                ```rust\n+\n+                ````rust\n                 Option<i32>\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -923,14 +954,16 @@ enum Option<T> {\n \"#,\n             expect![[r#\"\n                 *None*\n-                ```rust\n-                Option\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::Option\n+                ````\n+\n+                ````rust\n                 None\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n                 The None variant\n             \"#]],\n@@ -948,14 +981,16 @@ fn main() {\n \"#,\n             expect![[r#\"\n                 *Some*\n-                ```rust\n-                Option\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::Option\n+                ````\n+\n+                ````rust\n                 Some\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n                 The Some variant\n             \"#]],\n@@ -968,9 +1003,10 @@ fn main() {\n             r#\"fn func(foo: i32) { fo<|>o; }\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n                 i32\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -981,9 +1017,10 @@ fn main() {\n             r#\"fn func(fo<|>o: i32) {}\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n                 i32\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -994,9 +1031,10 @@ fn main() {\n             r#\"fn func(foo: i32) { if true { <|>foo; }; }\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n                 i32\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -1007,9 +1045,10 @@ fn main() {\n             r#\"fn func(<|>foo: i32) {}\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n                 i32\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -1028,9 +1067,10 @@ fn main() { let foo_<|>test = Thing::new(); }\n             \"#,\n             expect![[r#\"\n                 *foo_test*\n-                ```rust\n+\n+                ````rust\n                 Thing\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -1051,13 +1091,14 @@ fn main() { let foo_test = wrapper::Thing::new<|>(); }\n \"#,\n             expect![[r#\"\n                 *new*\n-                ```rust\n-                wrapper::Thing\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::wrapper::Thing\n+                ````\n+\n+                ````rust\n                 fn new() -> Thing\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -1081,9 +1122,14 @@ fn main() {\n \"#,\n             expect![[r#\"\n                 *C*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 const C: u32\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -1158,9 +1204,10 @@ fn y() {\n \"#,\n             expect![[r#\"\n                 *x*\n-                ```rust\n+\n+                ````rust\n                 i32\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -1175,9 +1222,14 @@ fn f() { fo<|>o!(); }\n \"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 macro_rules! foo\n-                ```\n+                ````\n             \"#]],\n         )\n     }\n@@ -1205,9 +1257,14 @@ id! {\n \"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 fn foo()\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -1221,9 +1278,10 @@ fn foo(bar:u32) { let a = id!(ba<|>r); }\n \"#,\n             expect![[r#\"\n                 *bar*\n-                ```rust\n+\n+                ````rust\n                 u32\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -1238,9 +1296,10 @@ fn foo(bar:u32) { let a = id!(ba<|>r); }\n \"#,\n             expect![[r#\"\n                 *bar*\n-                ```rust\n+\n+                ````rust\n                 u32\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -1296,9 +1355,14 @@ fn foo() {\n \"#,\n             expect![[r#\"\n                 *bar*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 fn bar() -> bool\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -1328,12 +1392,18 @@ fn bar() { fo<|>o(); }\n \",\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 fn foo()\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n-                <- `\u3000` here\n+                \\<- `\u3000` here\n             \"#]],\n         );\n     }\n@@ -1344,27 +1414,42 @@ fn bar() { fo<|>o(); }\n             r#\"async fn foo<|>() {}\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 async fn foo()\n-                ```\n+                ````\n             \"#]],\n         );\n         check(\n             r#\"pub const unsafe fn foo<|>() {}\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 pub const unsafe fn foo()\n-                ```\n+                ````\n             \"#]],\n         );\n         check(\n             r#\"pub(crate) async unsafe extern \"C\" fn foo<|>() {}\"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 pub(crate) async unsafe extern \"C\" fn foo()\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -1399,9 +1484,14 @@ fn my() {}\n \"#,\n             expect![[r#\"\n                 *my*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 mod my\n-                ```\n+                ````\n             \"#]],\n         );\n     }\n@@ -1417,10 +1507,16 @@ fn foo() { let bar = Ba<|>r; }\n \"#,\n             expect![[r#\"\n                 *Bar*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 struct Bar\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n                 bar docs\n             \"#]],\n@@ -1438,10 +1534,16 @@ fn foo() { let bar = Ba<|>r; }\n \"#,\n             expect![[r#\"\n                 *Bar*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 struct Bar\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n                 bar docs\n             \"#]],\n@@ -1461,10 +1563,16 @@ fn foo() { let bar = Ba<|>r; }\n \"#,\n             expect![[r#\"\n                 *Bar*\n-                ```rust\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n                 struct Bar\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n                 bar docs 0\n \n@@ -1484,9 +1592,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [Foo](struct.Foo.html)\n             pub struct B<|>ar\n             \",\n-            expect![[\n-                \"pub struct Bar\\n```\\n___\\n\\n[Foo](https://docs.rs/test/*/test/struct.Foo.html)\"\n-            ]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1499,7 +1619,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [struct Foo](struct.Foo.html)\n             pub struct B<|>ar\n             \",\n-            expect![[\"pub struct Bar\\n```\\n___\\n\\n[struct Foo](https://docs.rs/test/*/test/struct.Foo.html)\"]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [struct Foo](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1514,7 +1648,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [Foo](foo::Foo)\n             pub struct B<|>ar\n             \",\n-            expect![[\"pub struct Bar\\n```\\n___\\n\\n[Foo](https://docs.rs/test/*/test/foo/struct.Foo.html)\"]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [Foo](https://docs.rs/test/*/test/foo/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1527,9 +1675,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [Foo]\n             pub struct B<|>ar\n             \",\n-            expect![[\n-                \"pub struct Bar\\n```\\n___\\n\\n[Foo](https://docs.rs/test/*/test/struct.Foo.html)\"\n-            ]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1542,9 +1702,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [`Foo`]\n             pub struct B<|>ar\n             \",\n-            expect![[\n-                \"pub struct Bar\\n```\\n___\\n\\n[`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\"\n-            ]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1558,9 +1730,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [Foo()]\n             pub struct B<|>ar\n             \",\n-            expect![[\n-                \"pub struct Bar\\n```\\n___\\n\\n[Foo](https://docs.rs/test/*/test/struct.Foo.html)\"\n-            ]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1573,9 +1757,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [`struct Foo`]\n             pub struct B<|>ar\n             \",\n-            expect![[\n-                \"pub struct Bar\\n```\\n___\\n\\n[`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\"\n-            ]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1588,9 +1784,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [`struct@Foo`]\n             pub struct B<|>ar\n             \",\n-            expect![[\n-                \"pub struct Bar\\n```\\n___\\n\\n[`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\"\n-            ]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1605,9 +1813,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [foo]: Foo\n             pub struct B<|>ar\n             \",\n-            expect![[\n-                \"pub struct Bar\\n```\\n___\\n\\n[my Foo](https://docs.rs/test/*/test/struct.Foo.html)\"\n-            ]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [my Foo](https://docs.rs/test/*/test/struct.Foo.html)\n+            \"#]],\n         );\n     }\n \n@@ -1620,7 +1840,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [external](https://www.google.com)\n             pub struct B<|>ar\n             \",\n-            expect![[\"pub struct Bar\\n```\\n___\\n\\n[external](https://www.google.com)\"]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [external](https://www.google.com)\n+            \"#]],\n         );\n     }\n \n@@ -1634,7 +1868,21 @@ fn foo() { let bar = Ba<|>r; }\n             /// [baz](Baz)\n             pub struct B<|>ar\n             \",\n-            expect![[\"pub struct Bar\\n```\\n___\\n\\n[baz](Baz)\"]],\n+            expect![[r#\"\n+                *Bar*\n+\n+                ````rust\n+                test\n+                ````\n+\n+                ````rust\n+                pub struct Bar\n+                ````\n+\n+                ---\n+\n+                [baz](Baz)\n+            \"#]],\n         );\n     }\n \n@@ -1660,16 +1908,18 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n \"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n-                Bar\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::Bar\n+                ````\n+\n+                ````rust\n                 fn foo(&self)\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n-                 Do the foo\n+                Do the foo\n             \"#]],\n         );\n     }\n@@ -1696,14 +1946,16 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n \"#,\n             expect![[r#\"\n                 *foo*\n-                ```rust\n-                Bar\n-                ```\n \n-                ```rust\n+                ````rust\n+                test::Bar\n+                ````\n+\n+                ````rust\n                 fn foo(&self)\n-                ```\n-                ___\n+                ````\n+\n+                ---\n \n                 Do the foo\n             \"#]],\n@@ -1878,7 +2130,7 @@ fn main() { let s<|>t = S{ f1:0 }; }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -1917,7 +2169,7 @@ fn main() { let s<|>t = S{ f1:Arg(0) }; }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -1936,7 +2188,7 @@ fn main() { let s<|>t = S{ f1:Arg(0) }; }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"Arg\",\n+                                mod_path: \"test::Arg\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -1975,7 +2227,7 @@ fn main() { let s<|>t = S{ f1: S{ f1: Arg(0) } }; }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -1994,7 +2246,7 @@ fn main() { let s<|>t = S{ f1: S{ f1: Arg(0) } }; }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"Arg\",\n+                                mod_path: \"test::Arg\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2036,7 +2288,7 @@ fn main() { let s<|>t = (A(1), B(2), M::C(3) ); }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"A\",\n+                                mod_path: \"test::A\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2055,7 +2307,7 @@ fn main() { let s<|>t = (A(1), B(2), M::C(3) ); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"B\",\n+                                mod_path: \"test::B\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2074,7 +2326,7 @@ fn main() { let s<|>t = (A(1), B(2), M::C(3) ); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"M::C\",\n+                                mod_path: \"test::M::C\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2113,7 +2365,7 @@ fn main() { let s<|>t = foo(); }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2153,7 +2405,7 @@ fn main() { let s<|>t = foo(); }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2172,7 +2424,7 @@ fn main() { let s<|>t = foo(); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2212,7 +2464,7 @@ fn main() { let s<|>t = foo(); }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2231,7 +2483,7 @@ fn main() { let s<|>t = foo(); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"Bar\",\n+                                mod_path: \"test::Bar\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2274,7 +2526,7 @@ fn main() { let s<|>t = foo(); }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2293,7 +2545,7 @@ fn main() { let s<|>t = foo(); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"Bar\",\n+                                mod_path: \"test::Bar\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2312,7 +2564,7 @@ fn main() { let s<|>t = foo(); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"S1\",\n+                                mod_path: \"test::S1\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2331,7 +2583,7 @@ fn main() { let s<|>t = foo(); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"S2\",\n+                                mod_path: \"test::S2\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2368,7 +2620,7 @@ fn foo(ar<|>g: &impl Foo) {}\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2408,7 +2660,7 @@ fn foo(ar<|>g: &impl Foo + Bar<S>) {}\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2427,7 +2679,7 @@ fn foo(ar<|>g: &impl Foo + Bar<S>) {}\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"Bar\",\n+                                mod_path: \"test::Bar\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2446,7 +2698,7 @@ fn foo(ar<|>g: &impl Foo + Bar<S>) {}\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2484,7 +2736,7 @@ fn foo(ar<|>g: &impl Foo<S>) {}\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2503,7 +2755,7 @@ fn foo(ar<|>g: &impl Foo<S>) {}\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2546,7 +2798,7 @@ fn main() { let s<|>t = foo(); }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"B\",\n+                                mod_path: \"test::B\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2565,7 +2817,7 @@ fn main() { let s<|>t = foo(); }\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2602,7 +2854,7 @@ fn foo(ar<|>g: &dyn Foo) {}\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2640,7 +2892,7 @@ fn foo(ar<|>g: &dyn Foo<S>) {}\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2659,7 +2911,7 @@ fn foo(ar<|>g: &dyn Foo<S>) {}\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2700,7 +2952,7 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"ImplTrait\",\n+                                mod_path: \"test::ImplTrait\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2719,7 +2971,7 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"B\",\n+                                mod_path: \"test::B\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2738,7 +2990,7 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"DynTrait\",\n+                                mod_path: \"test::DynTrait\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2757,7 +3009,7 @@ fn foo(a<|>rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                 },\n                             },\n                             HoverGotoTypeData {\n-                                mod_path: \"S\",\n+                                mod_path: \"test::S\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,\n@@ -2805,7 +3057,7 @@ fn main() { let s<|>t = test().get(); }\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"Foo\",\n+                                mod_path: \"test::Foo\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n                                         1,"}, {"sha": "14f0c672dbb8a7704e2bddd14a4c0d0356e92f8e", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa842c8c9e9fed28a45fe1e3b109f2f902d128c/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=1fa842c8c9e9fed28a45fe1e3b109f2f902d128c", "patch": "@@ -53,9 +53,11 @@ fn rust_files_are_tidy() {\n fn check_licenses() {\n     let expected = \"\n 0BSD OR MIT OR Apache-2.0\n+Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT\n Apache-2.0 OR BSL-1.0\n Apache-2.0 OR MIT\n Apache-2.0/MIT\n+Apache-2.0\n BSD-2-Clause\n BSD-3-Clause\n CC0-1.0\n@@ -82,7 +84,10 @@ Zlib\n         .collect::<Vec<_>>();\n     licenses.sort();\n     licenses.dedup();\n-    assert_eq!(licenses, expected);\n+    assert_eq!(\n+        licenses.iter().filter(|license| !expected.contains(license)).collect::<Vec<_>>(),\n+        Vec::<&&str>::new()\n+    );\n }\n \n fn check_todo(path: &Path, text: &str) {"}]}