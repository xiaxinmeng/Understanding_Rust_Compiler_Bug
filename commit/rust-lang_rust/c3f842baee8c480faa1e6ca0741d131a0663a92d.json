{"sha": "c3f842baee8c480faa1e6ca0741d131a0663a92d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZjg0MmJhZWU4YzQ4MGZhYTFlNmNhMDc0MWQxMzFhMDY2M2E5MmQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-10-28T00:21:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-28T00:21:27Z"}, "message": "Rollup merge of #78391 - JulianKnodt:mc_test, r=lcnr\n\nAdd const_fn in generics test\n\nAdds a test that constant functions in generic parameters work properly. I was surprised this works, but I also to turbofish the constant in main, otherwise it didn't infer properly:\n```\nlet v: ConstU32<3> = ...\n```\nDid not work as I expected, which I can highlight in the test if that's the intended behaviour.\n\nr? @lcnr", "tree": {"sha": "db5bbad6314ecb5587dc7c35216869dc75866f7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db5bbad6314ecb5587dc7c35216869dc75866f7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3f842baee8c480faa1e6ca0741d131a0663a92d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfmLmJCRBK7hj4Ov3rIwAAdHIIABTtxk4HKPs0afh/t9DYuAwA\njpY3ENiYLTH9ZGZ/mmLqztANOa6ZY4OAT3V+lXjxwOa682zUrXOE9buYWaQx8IbT\n1iBZW430+gvjEhrLEOX3xPzmtR2sVJii2DXfVlCjPYLLvW8hlDJtJcky2ZAnaVNj\n7WwUmG3bB3yZb9mzrUG3BwKYM4UUsFUi+jb54Zuux59SF+/3wPaj4dzFZhpsI5tn\nWkp2FGr96qobdCO1YiCH6dNM5/utLRxAT039q2E77GQpZnzsPSRAuZwlckAKnKXT\nMIEDzaaZtq7bQ+DJ6lwpLTMS7PaLT2D0W6uQZjzOyqHA6DG1zABCacSrzyhh6wg=\n=lkjD\n-----END PGP SIGNATURE-----\n", "payload": "tree db5bbad6314ecb5587dc7c35216869dc75866f7b\nparent 892ebe9afe9d299a5ff22b9dec1a84a653b85f78\nparent 23c4a46efffebec56648d1b87204466acf1eb15f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1603844487 +0100\ncommitter GitHub <noreply@github.com> 1603844487 +0100\n\nRollup merge of #78391 - JulianKnodt:mc_test, r=lcnr\n\nAdd const_fn in generics test\n\nAdds a test that constant functions in generic parameters work properly. I was surprised this works, but I also to turbofish the constant in main, otherwise it didn't infer properly:\n```\nlet v: ConstU32<3> = ...\n```\nDid not work as I expected, which I can highlight in the test if that's the intended behaviour.\n\nr? @lcnr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f842baee8c480faa1e6ca0741d131a0663a92d", "html_url": "https://github.com/rust-lang/rust/commit/c3f842baee8c480faa1e6ca0741d131a0663a92d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3f842baee8c480faa1e6ca0741d131a0663a92d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "892ebe9afe9d299a5ff22b9dec1a84a653b85f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/892ebe9afe9d299a5ff22b9dec1a84a653b85f78", "html_url": "https://github.com/rust-lang/rust/commit/892ebe9afe9d299a5ff22b9dec1a84a653b85f78"}, {"sha": "23c4a46efffebec56648d1b87204466acf1eb15f", "url": "https://api.github.com/repos/rust-lang/rust/commits/23c4a46efffebec56648d1b87204466acf1eb15f", "html_url": "https://github.com/rust-lang/rust/commit/23c4a46efffebec56648d1b87204466acf1eb15f"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "3370666cc5cd0450a21dcfc90c30b048f07fff95", "filename": "src/test/ui/const-generics/min_const_generics/const_fn_in_generics.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c3f842baee8c480faa1e6ca0741d131a0663a92d/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fconst_fn_in_generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f842baee8c480faa1e6ca0741d131a0663a92d/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fconst_fn_in_generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fconst_fn_in_generics.rs?ref=c3f842baee8c480faa1e6ca0741d131a0663a92d", "patch": "@@ -0,0 +1,17 @@\n+// run-pass\n+\n+#![feature(min_const_generics)]\n+\n+const fn identity<const T: u32>() -> u32 { T }\n+\n+#[derive(Eq, PartialEq, Debug)]\n+pub struct ConstU32<const U: u32>;\n+\n+pub fn new() -> ConstU32<{ identity::<3>() }> {\n+  ConstU32::<{ identity::<3>() }>\n+}\n+\n+fn main() {\n+  let v = new();\n+  assert_eq!(v, ConstU32::<3>);\n+}"}]}