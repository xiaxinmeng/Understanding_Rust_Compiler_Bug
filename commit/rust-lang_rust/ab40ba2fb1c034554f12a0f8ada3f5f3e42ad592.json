{"sha": "ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "node_id": "C_kwDOAAsO6NoAKGFiNDBiYTJmYjFjMDM0NTU0ZjEyYTBmOGFkYTNmNWYzZTQyYWQ1OTI", "commit": {"author": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-19T19:09:01Z"}, "committer": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-27T03:28:31Z"}, "message": "add EarlyBinder::no_bound_vars", "tree": {"sha": "80ec7ac5605991eaacbddc5bfcb1267e7962b6f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80ec7ac5605991eaacbddc5bfcb1267e7962b6f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "html_url": "https://github.com/rust-lang/rust/commit/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/comments", "author": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2414dfaa4a01a60ec65c44879e103c3fc3152bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2414dfaa4a01a60ec65c44879e103c3fc3152bb", "html_url": "https://github.com/rust-lang/rust/commit/c2414dfaa4a01a60ec65c44879e103c3fc3152bb"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "70cf28267d70c8447b8dc8b717045d36b8225c95", "filename": "compiler/rustc_codegen_cranelift/src/main_shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmain_shim.rs?ref=ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "patch": "@@ -46,7 +46,7 @@ pub(crate) fn maybe_create_entry_wrapper(\n         is_main_fn: bool,\n         sigpipe: u8,\n     ) {\n-        let main_ret_ty = tcx.fn_sig(rust_main_def_id).subst_identity().output();\n+        let main_ret_ty = tcx.fn_sig(rust_main_def_id).no_bound_vars().unwrap().output();\n         // Given that `main()` has no arguments,\n         // then its return type cannot have\n         // late-bound regions, since late-bound"}, {"sha": "02b502d948c2c890b83430bb45ee9a5791646a49", "filename": "compiler/rustc_codegen_ssa/src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs?ref=ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "patch": "@@ -436,7 +436,7 @@ pub fn maybe_create_entry_wrapper<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n             cx.type_func(&[], cx.type_int())\n         };\n \n-        let main_ret_ty = cx.tcx().fn_sig(rust_main_def_id).subst_identity().output();\n+        let main_ret_ty = cx.tcx().fn_sig(rust_main_def_id).no_bound_vars().unwrap().output();\n         // Given that `main()` has no arguments,\n         // then its return type cannot have\n         // late-bound regions, since late-bound"}, {"sha": "cf1bb5f8ac8db27900054ae4415777b520f93e52", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "patch": "@@ -758,6 +758,11 @@ impl<'tcx, T: TypeFoldable<'tcx>> ty::EarlyBinder<T> {\n     pub fn subst_identity(self) -> T {\n         self.0\n     }\n+\n+    /// Returns the inner value, but only if it contains no bound vars.\n+    pub fn no_bound_vars(self) -> Option<T> {\n+        if !self.0.needs_subst() { Some(self.0) } else { None }\n+    }\n }\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "305f0427e501be6477a03c6adba62c77322ca4e5", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "patch": "@@ -1296,7 +1296,7 @@ impl<'v> RootCollector<'_, 'v> {\n         };\n \n         let start_def_id = self.tcx.require_lang_item(LangItem::Start, None);\n-        let main_ret_ty = self.tcx.fn_sig(main_def_id).subst_identity().output();\n+        let main_ret_ty = self.tcx.fn_sig(main_def_id).no_bound_vars().unwrap().output();\n \n         // Given that `main()` has no arguments,\n         // then its return type cannot have"}, {"sha": "96ab8b0d98e6348c794782bc00eb99be510d74bf", "filename": "src/tools/miri/src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/src%2Ftools%2Fmiri%2Fsrc%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592/src%2Ftools%2Fmiri%2Fsrc%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Feval.rs?ref=ab40ba2fb1c034554f12a0f8ada3f5f3e42ad592", "patch": "@@ -357,7 +357,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n     match entry_type {\n         EntryFnType::Main { .. } => {\n             let start_id = tcx.lang_items().start_fn().unwrap();\n-            let main_ret_ty = tcx.fn_sig(entry_id).subst_identity().output();\n+            let main_ret_ty = tcx.fn_sig(entry_id).no_bound_vars().unwrap().output();\n             let main_ret_ty = main_ret_ty.no_bound_vars().unwrap();\n             let start_instance = ty::Instance::resolve(\n                 tcx,"}]}