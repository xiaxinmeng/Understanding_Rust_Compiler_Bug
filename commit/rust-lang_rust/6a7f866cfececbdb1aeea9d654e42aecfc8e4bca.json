{"sha": "6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhN2Y4NjZjZmVjZWNiZGIxYWVlYTlkNjU0ZTQyYWVjZmM4ZTRiY2E=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-24T10:49:01Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-05T09:12:43Z"}, "message": "Format source codes", "tree": {"sha": "28e992b99c70dcc0f2d7e8508c72633d782b05cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e992b99c70dcc0f2d7e8508c72633d782b05cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "html_url": "https://github.com/rust-lang/rust/commit/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8586bac2ab83b41956fdb2a22c8a3ea25602a80", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8586bac2ab83b41956fdb2a22c8a3ea25602a80", "html_url": "https://github.com/rust-lang/rust/commit/f8586bac2ab83b41956fdb2a22c8a3ea25602a80"}], "stats": {"total": 101, "additions": 69, "deletions": 32}, "files": [{"sha": "1696577f023a13872a721ba4e6238379f8677f23", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -3035,8 +3035,7 @@ impl<'a> ToExpr for ast::StructField {\n         None\n     }\n \n-    #[allow(unused_variables)]\n-    fn can_be_overflowed(&self, context: &RewriteContext, len: usize) -> bool {\n+    fn can_be_overflowed(&self, _: &RewriteContext, _: usize) -> bool {\n         false\n     }\n }"}, {"sha": "7df4dbb739943b41c9747b10f2056c7a25214d0a", "filename": "src/file_lines.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/src%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/src%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffile_lines.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -167,7 +167,9 @@ impl FileLines {\n }\n \n /// FileLines files iterator.\n-pub struct Files<'a>(Option<::std::collections::hash_map::Keys<'a, String, Vec<Range>>>);\n+pub struct Files<'a>(\n+    Option<::std::collections::hash_map::Keys<'a, String, Vec<Range>>>,\n+);\n \n impl<'a> iter::Iterator for Files<'a> {\n     type Item = &'a String;"}, {"sha": "a70d72e7b2666dae66a415ecf5e522ea6aa441fb", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -1419,6 +1419,11 @@ fn rewrite_struct_field_type(\n         .map(|ty| format!(\"{}{}\", spacing, ty))\n }\n \n+impl Rewrite for ast::StructField {\n+    fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n+        rewrite_struct_field(context, self, shape, 0)\n+    }\n+}\n \n pub fn rewrite_struct_field(\n     context: &RewriteContext,"}, {"sha": "509bcbf6d64e1280228480d784977b33fe8d9d57", "filename": "tests/target/configs-struct_field_align_threshold-20.rs", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fconfigs-struct_field_align_threshold-20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fconfigs-struct_field_align_threshold-20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_field_align_threshold-20.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -73,14 +73,19 @@ struct Bar;\n \n struct NewType(Type, OtherType);\n \n-struct NewInt<T: Copy>(pub i32, SomeType /* inline comment */, T /* sup */);\n-\n-struct Qux<'a,\n-           N: Clone + 'a,\n-           E: Clone + 'a,\n-           G: Labeller<'a, N, E> + GraphWalk<'a, N, E>,\n-           W: Write + Copy>\n-(\n+struct NewInt<T: Copy>(\n+    pub i32,\n+    SomeType, // inline comment\n+    T, // sup\n+);\n+\n+struct Qux<\n+    'a,\n+    N: Clone + 'a,\n+    E: Clone + 'a,\n+    G: Labeller<'a, N, E> + GraphWalk<'a, N, E>,\n+    W: Write + Copy,\n+>(\n     AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, // Comment\n     BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB,\n     #[AnAttr]\n@@ -94,7 +99,7 @@ struct Tuple(\n     // Comment 1\n     AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n     // Comment 2\n-    BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\n+    BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB,\n );\n \n // With a where clause and generics.\n@@ -139,7 +144,10 @@ struct Baz {\n }\n \n // Will this be a one-liner?\n-struct Tuple(A /* Comment */, B);\n+struct Tuple(\n+    A, // Comment\n+    B,\n+);\n \n pub struct State<F: FnMut() -> time::Timespec> {\n     now: F,\n@@ -186,19 +194,27 @@ struct Foo<T>(\n     TTTTTTTTTTTTTTTTT,\n     UUUUUUUUUUUUUUUUUUUUUUUU,\n     TTTTTTTTTTTTTTTTTTT,\n-    UUUUUUUUUUUUUUUUUUU\n+    UUUUUUUUUUUUUUUUUUU,\n );\n-struct Foo<T>(TTTTTTTTTTTTTTTTTT, UUUUUUUUUUUUUUUUUUUUUUUU, TTTTTTTTTTTTTTTTTTT)\n+struct Foo<T>(\n+    TTTTTTTTTTTTTTTTTT,\n+    UUUUUUUUUUUUUUUUUUUUUUUU,\n+    TTTTTTTTTTTTTTTTTTT,\n+)\n where\n     T: PartialEq;\n-struct Foo<T>(TTTTTTTTTTTTTTTTT, UUUUUUUUUUUUUUUUUUUUUUUU, TTTTTTTTTTTTTTTTTTTTT)\n+struct Foo<T>(\n+    TTTTTTTTTTTTTTTTT,\n+    UUUUUUUUUUUUUUUUUUUUUUUU,\n+    TTTTTTTTTTTTTTTTTTTTT,\n+)\n where\n     T: PartialEq;\n struct Foo<T>(\n     TTTTTTTTTTTTTTTTT,\n     UUUUUUUUUUUUUUUUUUUUUUUU,\n     TTTTTTTTTTTTTTTTTTT,\n-    UUUUUUUUUUUUUUUUUUU\n+    UUUUUUUUUUUUUUUUUUU,\n )\n where\n     T: PartialEq;\n@@ -208,7 +224,7 @@ struct Foo<T>(\n     // Baz\n     TTTTTTTTTTTTTTTTTTT,\n     // Qux (FIXME #572 - doc comment)\n-    UUUUUUUUUUUUUUUUUUU\n+    UUUUUUUUUUUUUUUUUUU,\n );\n \n mod m {\n@@ -223,7 +239,7 @@ mod m {\n struct Foo<T>(\n     TTTTTTTTTTTTTTTTTTT,\n     /// Qux\n-    UUUUUUUUUUUUUUUUUUU\n+    UUUUUUUUUUUUUUUUUUU,\n );\n \n struct Issue677 {"}, {"sha": "1f482075df476087a7adc94b90654aeda97926ba", "filename": "tests/target/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -29,7 +29,7 @@ fn main() {\n     kaas!(\n         // comments\n         a, // post macro\n-        b /* another */\n+        b // another\n     );\n \n     trailingcomma!(a, b, c,);"}, {"sha": "d8dea8896f2b67eb4924e5edfa428e686f46bfab", "filename": "tests/target/multiple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiple.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -40,7 +40,7 @@ where\n \n fn baz<\n     'a: 'b, // comment on 'a\n-    T: SomsssssssssssssssssssssssssssssssssssssssssssssssssssssseType, /* comment on T */\n+    T: SomsssssssssssssssssssssssssssssssssssssssssssssssssssssseType, // comment on T\n >(\n     a: A,\n     b: B, // comment on b"}, {"sha": "0d2ba797eb793fc12d79229ce7bf884a0b5d6f98", "filename": "tests/target/paths.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpaths.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -14,7 +14,10 @@ fn main() {\n             supports_clipboard,\n         );\n \n-    Quux::<ParamOne /* Comment 1 */, ParamTwo /* Comment 2 */>::some_func();\n+    Quux::<\n+        ParamOne, // Comment 1\n+        ParamTwo, // Comment 2\n+    >::some_func();\n \n     <*mut JSObject>::relocate(entry);\n "}, {"sha": "e63bc2c47c2b45f31d8d33962001d1b86ac13440", "filename": "tests/target/struct_tuple_visual.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fstruct_tuple_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fstruct_tuple_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_tuple_visual.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -10,7 +10,7 @@ fn foo() {\n         // Comment\n         foo(), // Comment\n         // Comment\n-        bar(), /* Comment */\n+        bar(), // Comment\n     );\n \n     Foo(Bar, f());\n@@ -24,7 +24,7 @@ fn foo() {\n \n     Baz(\n         xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n-        zzzzz, /* test */\n+        zzzzz, // test\n     );\n \n     A("}, {"sha": "dcb21bb195b50a8729c7f93c7a3ea4c371dadffc", "filename": "tests/target/structs.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstructs.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -41,7 +41,11 @@ struct Bar;\n \n struct NewType(Type, OtherType);\n \n-struct NewInt<T: Copy>(pub i32, SomeType /* inline comment */, T /* sup */);\n+struct NewInt<T: Copy>(\n+    pub i32,\n+    SomeType, // inline comment\n+    T, // sup\n+);\n \n struct Qux<\n     'a,\n@@ -108,7 +112,10 @@ struct Baz {\n }\n \n // Will this be a one-liner?\n-struct Tuple(A /* Comment */, B);\n+struct Tuple(\n+    A, // Comment\n+    B,\n+);\n \n pub struct State<F: FnMut() -> time::Timespec> {\n     now: F,\n@@ -157,10 +164,18 @@ struct Foo<T>(\n     TTTTTTTTTTTTTTTTTTT,\n     UUUUUUUUUUUUUUUUUUU,\n );\n-struct Foo<T>(TTTTTTTTTTTTTTTTTT, UUUUUUUUUUUUUUUUUUUUUUUU, TTTTTTTTTTTTTTTTTTT)\n+struct Foo<T>(\n+    TTTTTTTTTTTTTTTTTT,\n+    UUUUUUUUUUUUUUUUUUUUUUUU,\n+    TTTTTTTTTTTTTTTTTTT,\n+)\n where\n     T: PartialEq;\n-struct Foo<T>(TTTTTTTTTTTTTTTTT, UUUUUUUUUUUUUUUUUUUUUUUU, TTTTTTTTTTTTTTTTTTTTT)\n+struct Foo<T>(\n+    TTTTTTTTTTTTTTTTT,\n+    UUUUUUUUUUUUUUUUUUUUUUUU,\n+    TTTTTTTTTTTTTTTTTTTTT,\n+)\n where\n     T: PartialEq;\n struct Foo<T>("}, {"sha": "93fcc0f2cb1712870e34610ce3d1110a7cee75c4", "filename": "tests/target/trailing_commas.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Ftrailing_commas.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7f866cfececbdb1aeea9d654e42aecfc8e4bca/tests%2Ftarget%2Ftrailing_commas.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrailing_commas.rs?ref=6a7f866cfececbdb1aeea9d654e42aecfc8e4bca", "patch": "@@ -48,10 +48,7 @@ struct Pair<\n \n struct TupPair<\n     S, T,\n->(\n-    S,\n-    T,\n-)\n+>(S, T,)\n where\n     T: P,\n     S: P + Q;"}]}