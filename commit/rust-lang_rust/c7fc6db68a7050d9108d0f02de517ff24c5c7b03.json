{"sha": "c7fc6db68a7050d9108d0f02de517ff24c5c7b03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZmM2ZGI2OGE3MDUwZDkxMDhkMGYwMmRlNTE3ZmYyNGM1YzdiMDM=", "commit": {"author": {"name": "Ryan Thomas", "email": "ryan@ryant.org", "date": "2017-07-06T19:25:53Z"}, "committer": {"name": "Ryan Thomas", "email": "ryan@ryant.org", "date": "2017-07-06T19:32:47Z"}, "message": "Add annotations to the resize fn #39791\n\nThis adds the `inline(never)` and `cold` annotations to the\nHashMap::resize function.", "tree": {"sha": "b321eb97d226af4c5c0ba9f874d9faa107907a95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b321eb97d226af4c5c0ba9f874d9faa107907a95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7fc6db68a7050d9108d0f02de517ff24c5c7b03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7fc6db68a7050d9108d0f02de517ff24c5c7b03", "html_url": "https://github.com/rust-lang/rust/commit/c7fc6db68a7050d9108d0f02de517ff24c5c7b03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7fc6db68a7050d9108d0f02de517ff24c5c7b03/comments", "author": {"login": "rthomas", "id": 564080, "node_id": "MDQ6VXNlcjU2NDA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/564080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rthomas", "html_url": "https://github.com/rthomas", "followers_url": "https://api.github.com/users/rthomas/followers", "following_url": "https://api.github.com/users/rthomas/following{/other_user}", "gists_url": "https://api.github.com/users/rthomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/rthomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rthomas/subscriptions", "organizations_url": "https://api.github.com/users/rthomas/orgs", "repos_url": "https://api.github.com/users/rthomas/repos", "events_url": "https://api.github.com/users/rthomas/events{/privacy}", "received_events_url": "https://api.github.com/users/rthomas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rthomas", "id": 564080, "node_id": "MDQ6VXNlcjU2NDA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/564080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rthomas", "html_url": "https://github.com/rthomas", "followers_url": "https://api.github.com/users/rthomas/followers", "following_url": "https://api.github.com/users/rthomas/following{/other_user}", "gists_url": "https://api.github.com/users/rthomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/rthomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rthomas/subscriptions", "organizations_url": "https://api.github.com/users/rthomas/orgs", "repos_url": "https://api.github.com/users/rthomas/repos", "events_url": "https://api.github.com/users/rthomas/events{/privacy}", "received_events_url": "https://api.github.com/users/rthomas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54fc9e4ea587ad3ebb3ccb5c409ccfa9e4b09b3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/54fc9e4ea587ad3ebb3ccb5c409ccfa9e4b09b3d", "html_url": "https://github.com/rust-lang/rust/commit/54fc9e4ea587ad3ebb3ccb5c409ccfa9e4b09b3d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "746e18047f945c5915d80a486239831cd3abfc7c", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7fc6db68a7050d9108d0f02de517ff24c5c7b03/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7fc6db68a7050d9108d0f02de517ff24c5c7b03/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=c7fc6db68a7050d9108d0f02de517ff24c5c7b03", "patch": "@@ -754,6 +754,8 @@ impl<K, V, S> HashMap<K, V, S>\n     ///   1) Ensure `new_raw_cap` is enough for all the elements, accounting\n     ///      for the load factor.\n     ///   2) Ensure `new_raw_cap` is a power of two or zero.\n+    #[inline(never)]\n+    #[cold]\n     fn resize(&mut self, new_raw_cap: usize) {\n         assert!(self.table.size() <= new_raw_cap);\n         assert!(new_raw_cap.is_power_of_two() || new_raw_cap == 0);"}]}