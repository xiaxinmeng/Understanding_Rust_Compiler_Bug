{"sha": "4cb86c908989087dca7d3ad2b5c9029c62aaf852", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYjg2YzkwODk4OTA4N2RjYTdkM2FkMmI1YzkwMjljNjJhYWY4NTI=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-09-25T04:31:52Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-02T01:06:37Z"}, "message": "comment fixes", "tree": {"sha": "b35ffeba54ad1c4c4f92981d4900eed178068442", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b35ffeba54ad1c4c4f92981d4900eed178068442"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cb86c908989087dca7d3ad2b5c9029c62aaf852", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cb86c908989087dca7d3ad2b5c9029c62aaf852", "html_url": "https://github.com/rust-lang/rust/commit/4cb86c908989087dca7d3ad2b5c9029c62aaf852", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cb86c908989087dca7d3ad2b5c9029c62aaf852/comments", "author": null, "committer": null, "parents": [{"sha": "bb3c03049dbef28d18a7ca17b5b9d25f7c276b8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb3c03049dbef28d18a7ca17b5b9d25f7c276b8e", "html_url": "https://github.com/rust-lang/rust/commit/bb3c03049dbef28d18a7ca17b5b9d25f7c276b8e"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "dfd8168985c028805f659ea662a1f1d239b5855d", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4cb86c908989087dca7d3ad2b5c9029c62aaf852/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb86c908989087dca7d3ad2b5c9029c62aaf852/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=4cb86c908989087dca7d3ad2b5c9029c62aaf852", "patch": "@@ -1776,6 +1776,10 @@ impl<'tcx> TyS<'tcx> {\n     #[inline]\n     pub fn is_bool(&self) -> bool { self.kind == Bool }\n \n+    /// Returns `true` if this type is a `str`.\n+    #[inline]\n+    pub fn is_str(&self) -> bool { self.sty == Str }\n+\n     #[inline]\n     pub fn is_param(&self, index: u32) -> bool {\n         match self.kind {"}, {"sha": "89055628342b13c07f181843c63562e58e66e862", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4cb86c908989087dca7d3ad2b5c9029c62aaf852/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb86c908989087dca7d3ad2b5c9029c62aaf852/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=4cb86c908989087dca7d3ad2b5c9029c62aaf852", "patch": "@@ -518,17 +518,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 }\n \n-                fn is_str_ref(ty: Ty<'_>) -> bool {\n-                    match ty.sty {\n-                        ty::Str => true,\n-                        ty::Ref(_, ty, _) => is_str_ref(&ty),\n-                        _ => false,\n-                    }\n-                }\n-                if item_name.as_str() == \"as_str\" && is_str_ref(&actual) {\n+                if item_name.as_str() == \"as_str\" && actual.peel_refs().is_str() {\n                     err.span_suggestion(\n                         span,\n-                        \"try to remove `as_str`\",\n+                        \"try removing `as_str`\",\n                         String::new(),\n                         Applicability::MaybeIncorrect,\n                     );"}, {"sha": "47196aa2c8ea0a3e5b90b563120f9d48943db3b6", "filename": "src/test/ui/suggestions/remove-as_str.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4cb86c908989087dca7d3ad2b5c9029c62aaf852/src%2Ftest%2Fui%2Fsuggestions%2Fremove-as_str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4cb86c908989087dca7d3ad2b5c9029c62aaf852/src%2Ftest%2Fui%2Fsuggestions%2Fremove-as_str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremove-as_str.stderr?ref=4cb86c908989087dca7d3ad2b5c9029c62aaf852", "patch": "@@ -2,25 +2,25 @@ error[E0599]: no method named `as_str` found for type `&str` in the current scop\n   --> $DIR/remove-as_str.rs:2:7\n    |\n LL |     s.as_str();\n-   |       ^^^^^^ help: try to remove `as_str`\n+   |       ^^^^^^ help: try removing `as_str`\n \n error[E0599]: no method named `as_str` found for type `&'a str` in the current scope\n   --> $DIR/remove-as_str.rs:7:7\n    |\n LL |     s.as_str();\n-   |       ^^^^^^ help: try to remove `as_str`\n+   |       ^^^^^^ help: try removing `as_str`\n \n error[E0599]: no method named `as_str` found for type `&mut str` in the current scope\n   --> $DIR/remove-as_str.rs:12:7\n    |\n LL |     s.as_str();\n-   |       ^^^^^^ help: try to remove `as_str`\n+   |       ^^^^^^ help: try removing `as_str`\n \n error[E0599]: no method named `as_str` found for type `&&str` in the current scope\n   --> $DIR/remove-as_str.rs:17:7\n    |\n LL |     s.as_str();\n-   |       ^^^^^^ help: try to remove `as_str`\n+   |       ^^^^^^ help: try removing `as_str`\n \n error: aborting due to 4 previous errors\n "}]}