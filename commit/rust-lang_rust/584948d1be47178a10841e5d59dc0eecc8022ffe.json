{"sha": "584948d1be47178a10841e5d59dc0eecc8022ffe", "node_id": "C_kwDOAAsO6NoAKDU4NDk0OGQxYmU0NzE3OGExMDg0MWU1ZDU5ZGMwZWVjYzgwMjJmZmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-10T11:09:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-10T11:09:56Z"}, "message": "Rollup merge of #93756 - tmandry:llvm-build-config, r=Mark-Simulacrum\n\nSupport custom options for LLVM build\n\nThe LLVM build has a lot of options that rustbuild doesn't need to know about. We should allow the user to customize the LLVM build directly.\n\nHere are some [example customizations][recipe] we'd like to do.\n\n[recipe]: https://fuchsia.googlesource.com/infra/recipes/+/90105e5e4e37b0441c8dde538df54a55f79b3d22/recipes/contrib/clang_toolchain.py#579", "tree": {"sha": "d87a1801474ab641cdcb9d3c739aa436efcb990a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d87a1801474ab641cdcb9d3c739aa436efcb990a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/584948d1be47178a10841e5d59dc0eecc8022ffe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiBPKECRBK7hj4Ov3rIwAAMxgIABYo0iWThmIU/ycoka2/6Oud\ntCQw27/lCCTj8vTSL0cXlUnCjHiR+PhkgYDCj/sbWP0KwvAZKRkZrHb1DVmpYwg+\nHew6DNFTiONmkPSEddJ1nwxcky/NEOLutrrLAA/avxJcSj0+IrcuM9MX8crA2gW6\nGFJg62UVv/yMxKsS8HKATJAAzfT/ThhIiYgtRU9TXLFTpBzvv2zqT+GJSAXPL23y\nc4mLbciLEmlcDS3Fkd2wPzQRmcc68lNQG2WKGept1aefB3ZZ9P38OgHdUR0imBZz\naasypuEKN21XdeaMoITNqQ7WFArM9xPhwtqu4g4gy80Jbrh+/a1d+fV7mRx6td8=\n=oBPq\n-----END PGP SIGNATURE-----\n", "payload": "tree d87a1801474ab641cdcb9d3c739aa436efcb990a\nparent 03332b0a212e56cc14ad5bd9aa7b26cad2f593fc\nparent 69cd826a85fe046ea102f3144f66b5b4b1b8accf\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644491396 +0100\ncommitter GitHub <noreply@github.com> 1644491396 +0100\n\nRollup merge of #93756 - tmandry:llvm-build-config, r=Mark-Simulacrum\n\nSupport custom options for LLVM build\n\nThe LLVM build has a lot of options that rustbuild doesn't need to know about. We should allow the user to customize the LLVM build directly.\n\nHere are some [example customizations][recipe] we'd like to do.\n\n[recipe]: https://fuchsia.googlesource.com/infra/recipes/+/90105e5e4e37b0441c8dde538df54a55f79b3d22/recipes/contrib/clang_toolchain.py#579\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/584948d1be47178a10841e5d59dc0eecc8022ffe", "html_url": "https://github.com/rust-lang/rust/commit/584948d1be47178a10841e5d59dc0eecc8022ffe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/584948d1be47178a10841e5d59dc0eecc8022ffe/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03332b0a212e56cc14ad5bd9aa7b26cad2f593fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/03332b0a212e56cc14ad5bd9aa7b26cad2f593fc", "html_url": "https://github.com/rust-lang/rust/commit/03332b0a212e56cc14ad5bd9aa7b26cad2f593fc"}, {"sha": "69cd826a85fe046ea102f3144f66b5b4b1b8accf", "url": "https://api.github.com/repos/rust-lang/rust/commits/69cd826a85fe046ea102f3144f66b5b4b1b8accf", "html_url": "https://github.com/rust-lang/rust/commit/69cd826a85fe046ea102f3144f66b5b4b1b8accf"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "ad48cc881f3e665252869c0b9b02b40450312ff4", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/584948d1be47178a10841e5d59dc0eecc8022ffe/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/584948d1be47178a10841e5d59dc0eecc8022ffe/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=584948d1be47178a10841e5d59dc0eecc8022ffe", "patch": "@@ -157,6 +157,9 @@ changelog-seen = 2\n # Whether to build the clang compiler.\n #clang = false\n \n+# Custom CMake defines to set when building LLVM.\n+#build-config = {}\n+\n # =============================================================================\n # General build configuration options\n # ============================================================================="}, {"sha": "d6f77fe6cd6d0c06e54ea744d7a7d746044a1dc9", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/584948d1be47178a10841e5d59dc0eecc8022ffe/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/584948d1be47178a10841e5d59dc0eecc8022ffe/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=584948d1be47178a10841e5d59dc0eecc8022ffe", "patch": "@@ -108,6 +108,7 @@ pub struct Config {\n     pub llvm_polly: bool,\n     pub llvm_clang: bool,\n     pub llvm_from_ci: bool,\n+    pub llvm_build_config: HashMap<String, String>,\n \n     pub use_lld: bool,\n     pub lld_enabled: bool,\n@@ -477,6 +478,7 @@ derive_merge! {\n         polly: Option<bool>,\n         clang: Option<bool>,\n         download_ci_llvm: Option<StringOrBool>,\n+        build_config: Option<HashMap<String, String>>,\n     }\n }\n \n@@ -807,6 +809,7 @@ impl Config {\n             config.llvm_allow_old_toolchain = llvm.allow_old_toolchain.unwrap_or(false);\n             config.llvm_polly = llvm.polly.unwrap_or(false);\n             config.llvm_clang = llvm.clang.unwrap_or(false);\n+            config.llvm_build_config = llvm.build_config.clone().unwrap_or(Default::default());\n             config.llvm_from_ci = match llvm.download_ci_llvm {\n                 Some(StringOrBool::String(s)) => {\n                     assert!(s == \"if-available\", \"unknown option `{}` for download-ci-llvm\", s);\n@@ -876,6 +879,7 @@ impl Config {\n                 check_ci_llvm!(llvm.allow_old_toolchain);\n                 check_ci_llvm!(llvm.polly);\n                 check_ci_llvm!(llvm.clang);\n+                check_ci_llvm!(llvm.build_config);\n                 check_ci_llvm!(llvm.plugins);\n \n                 // CI-built LLVM can be either dynamic or static."}, {"sha": "14de1531f73ab0ca28e924ce2e10a0dca19aa51e", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/584948d1be47178a10841e5d59dc0eecc8022ffe/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/584948d1be47178a10841e5d59dc0eecc8022ffe/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=584948d1be47178a10841e5d59dc0eecc8022ffe", "patch": "@@ -353,6 +353,10 @@ impl Step for Llvm {\n \n         configure_cmake(builder, target, &mut cfg, true);\n \n+        for (key, val) in &builder.config.llvm_build_config {\n+            cfg.define(key, val);\n+        }\n+\n         // FIXME: we don't actually need to build all LLVM tools and all LLVM\n         //        libraries here, e.g., we just want a few components and a few\n         //        tools. Figure out how to filter them down and only build the right"}]}