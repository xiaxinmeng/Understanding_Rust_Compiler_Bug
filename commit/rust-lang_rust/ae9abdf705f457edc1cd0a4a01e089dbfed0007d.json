{"sha": "ae9abdf705f457edc1cd0a4a01e089dbfed0007d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOWFiZGY3MDVmNDU3ZWRjMWNkMGE0YTAxZTA4OWRiZmVkMDAwN2Q=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-01T07:01:23Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-01T08:35:52Z"}, "message": "Rollup merge of #27419 - cpjreynolds:master, r=Gankro\n\nCorrects formatting of bullet-ed sentences and changes 'pervasive use raw pointers' to 'pervasive use of raw pointers'.", "tree": {"sha": "d76524837f1e6081bbf1352507230d857c2e5371", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d76524837f1e6081bbf1352507230d857c2e5371"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae9abdf705f457edc1cd0a4a01e089dbfed0007d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae9abdf705f457edc1cd0a4a01e089dbfed0007d", "html_url": "https://github.com/rust-lang/rust/commit/ae9abdf705f457edc1cd0a4a01e089dbfed0007d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae9abdf705f457edc1cd0a4a01e089dbfed0007d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21dd5e62a225f90e4d7a182d8029af5d54222212", "url": "https://api.github.com/repos/rust-lang/rust/commits/21dd5e62a225f90e4d7a182d8029af5d54222212", "html_url": "https://github.com/rust-lang/rust/commit/21dd5e62a225f90e4d7a182d8029af5d54222212"}, {"sha": "d10953e5a2a50912a62b7cbab6775caccaecbdf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d10953e5a2a50912a62b7cbab6775caccaecbdf2", "html_url": "https://github.com/rust-lang/rust/commit/d10953e5a2a50912a62b7cbab6775caccaecbdf2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "334d5c9dd55e3045b1884a1ff66c126a23176a34", "filename": "src/doc/tarpl/send-and-sync.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ae9abdf705f457edc1cd0a4a01e089dbfed0007d/src%2Fdoc%2Ftarpl%2Fsend-and-sync.md", "raw_url": "https://github.com/rust-lang/rust/raw/ae9abdf705f457edc1cd0a4a01e089dbfed0007d/src%2Fdoc%2Ftarpl%2Fsend-and-sync.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftarpl%2Fsend-and-sync.md?ref=ae9abdf705f457edc1cd0a4a01e089dbfed0007d", "patch": "@@ -5,8 +5,8 @@ multiply alias a location in memory while mutating it. Unless these types use\n synchronization to manage this access, they are absolutely not thread safe. Rust\n captures this with through the `Send` and `Sync` traits.\n \n-* A type is Send if it is safe to send it to another thread. A type is Sync if\n-* it is safe to share between threads (`&T` is Send).\n+* A type is Send if it is safe to send it to another thread.\n+* A type is Sync if it is safe to share between threads (`&T` is Send).\n \n Send and Sync are fundamental to Rust's concurrency story. As such, a\n substantial amount of special tooling exists to make them work right. First and\n@@ -24,9 +24,9 @@ pretty much all types you'll ever interact with are Send and Sync.\n \n Major exceptions include:\n \n-* raw pointers are neither Send nor Sync (because they have no safety guards)\n-* `UnsafeCell` isn't Sync (and therefore `Cell` and `RefCell` aren't) `Rc` isn't\n-* Send or Sync (because the refcount is shared and unsynchronized)\n+* raw pointers are neither Send nor Sync (because they have no safety guards).\n+* `UnsafeCell` isn't Sync (and therefore `Cell` and `RefCell` aren't).\n+* `Rc` isn't Send or Sync (because the refcount is shared and unsynchronized).\n \n `Rc` and `UnsafeCell` are very fundamentally not thread-safe: they enable\n unsynchronized shared mutable state. However raw pointers are, strictly\n@@ -70,7 +70,7 @@ possible cause trouble by being incorrectly Send or Sync.\n Most uses of raw pointers should be encapsulated behind a sufficient abstraction\n that Send and Sync can be derived. For instance all of Rust's standard\n collections are Send and Sync (when they contain Send and Sync types) in spite\n-of their pervasive use raw pointers to manage allocations and complex ownership.\n+of their pervasive use of raw pointers to manage allocations and complex ownership.\n Similarly, most iterators into these collections are Send and Sync because they\n largely behave like an `&` or `&mut` into the collection.\n "}]}