{"sha": "8393d99c356e51128e0125aa23a7824d6ff513b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzOTNkOTljMzU2ZTUxMTI4ZTAxMjVhYTIzYTc4MjRkNmZmNTEzYjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-24T17:39:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-24T17:39:00Z"}, "message": "Auto merge of #33833 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 7 pull requests\n\n- Successful merges: #33692, #33759, #33779, #33781, #33797, #33810, #33832\n- Failed merges:", "tree": {"sha": "ccda07c630297b9a42f3c3fa439c0bbf9ccdc0b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccda07c630297b9a42f3c3fa439c0bbf9ccdc0b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8393d99c356e51128e0125aa23a7824d6ff513b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8393d99c356e51128e0125aa23a7824d6ff513b2", "html_url": "https://github.com/rust-lang/rust/commit/8393d99c356e51128e0125aa23a7824d6ff513b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8393d99c356e51128e0125aa23a7824d6ff513b2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd6e8d45e183861d44ed91a99f0a50403b2776a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd6e8d45e183861d44ed91a99f0a50403b2776a3", "html_url": "https://github.com/rust-lang/rust/commit/dd6e8d45e183861d44ed91a99f0a50403b2776a3"}, {"sha": "46138352e68070af94d5379f9a1f28c24dec1e96", "url": "https://api.github.com/repos/rust-lang/rust/commits/46138352e68070af94d5379f9a1f28c24dec1e96", "html_url": "https://github.com/rust-lang/rust/commit/46138352e68070af94d5379f9a1f28c24dec1e96"}], "stats": {"total": 383, "additions": 353, "deletions": 30}, "files": [{"sha": "9823a0b6d6355b7d5d3509549514f060fbad54d5", "filename": "src/doc/book/no-stdlib.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Fdoc%2Fbook%2Fno-stdlib.md", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Fdoc%2Fbook%2Fno-stdlib.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fno-stdlib.md?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -84,4 +84,4 @@ which do not trigger a panic can be assured that this function is never\n called. The second function, `panic_fmt`, is also used by the failure\n mechanisms of the compiler.\n \n-[unwind]: https://github.com/rust-lang/rust/blob/master/src/libstd/sys/common/unwind/gcc.rs\n+[unwind]: https://github.com/rust-lang/rust/blob/master/src/libpanic_unwind/gcc.rs"}, {"sha": "b6a123bb3674c9adb0728b002a6cd9d4df94bf8b", "filename": "src/doc/book/primitive-types.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Fdoc%2Fbook%2Fprimitive-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Fdoc%2Fbook%2Fprimitive-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fprimitive-types.md?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -175,8 +175,6 @@ You can use a combo of `&` and `[]` to create a slice from various things. The\n detail later in this section. The `[]`s, with a range, let you define the\n length of the slice:\n \n-[references]: references-and-borrowing.html\n-\n ```rust\n let a = [0, 1, 2, 3, 4];\n let complete = &a[..]; // A slice containing all of the elements in a"}, {"sha": "40b9b0e01ab9b7f6aabcad4c1f307ce4a76a0e4a", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 123, "deletions": 27, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -978,18 +978,18 @@ are generic.\n This will cause an error:\n \n ```compile_fail\n-#![feature(simd)]\n+#![feature(repr_simd)]\n \n-#[simd]\n+#[repr(simd)]\n struct Bad<T>(T, T, T);\n ```\n \n This will not:\n \n ```\n-#![feature(simd)]\n+#![feature(repr_simd)]\n \n-#[simd]\n+#[repr(simd)]\n struct Good(u32, u32, u32);\n ```\n \"##,\n@@ -1026,18 +1026,18 @@ will trigger this error.\n This will cause an error:\n \n ```compile_fail\n-#![feature(simd)]\n+#![feature(repr_simd)]\n \n-#[simd]\n+#[repr(simd)]\n struct Bad(u16, u32, u32);\n ```\n \n This will not:\n \n ```\n-#![feature(simd)]\n+#![feature(repr_simd)]\n \n-#[simd]\n+#[repr(simd)]\n struct Good(u32, u32, u32);\n ```\n \"##,\n@@ -1049,18 +1049,18 @@ must be machine types so SIMD operations can be applied to them.\n This will cause an error:\n \n ```compile_fail\n-#![feature(simd)]\n+#![feature(repr_simd)]\n \n-#[simd]\n+#[repr(simd)]\n struct Bad(String);\n ```\n \n This will not:\n \n ```\n-#![feature(simd)]\n+#![feature(repr_simd)]\n \n-#[simd]\n+#[repr(simd)]\n struct Good(u32, u32, u32);\n ```\n \"##,\n@@ -2387,39 +2387,135 @@ impl Copy for &'static Bar { } // error\n \"##,\n \n E0207: r##\"\n-You declared an unused type parameter when implementing a trait on an object.\n-Erroneous code example:\n+Any type parameter or lifetime parameter of an `impl` must meet at least one of\n+the following criteria:\n+\n+ - it appears in the self type of the impl\n+ - for a trait impl, it appears in the trait reference\n+ - it is bound as an associated type\n+\n+### Error example 1\n+\n+Suppose we have a struct `Foo` and we would like to define some methods for it.\n+The following definition leads to a compiler error:\n \n ```compile_fail\n-trait MyTrait {\n-    fn get(&self) -> usize;\n+struct Foo;\n+\n+impl<T: Default> Foo {\n+// error: the type parameter `T` is not constrained by the impl trait, self\n+// type, or predicates [E0207]\n+    fn get(&self) -> T {\n+        <T as Default>::default()\n+    }\n }\n+```\n+\n+The problem is that the parameter `T` does not appear in the self type (`Foo`)\n+of the impl. In this case, we can fix the error by moving the type parameter\n+from the `impl` to the method `get`:\n \n+\n+```\n struct Foo;\n \n-impl<T> MyTrait for Foo {\n-    fn get(&self) -> usize {\n-        0\n+// Move the type parameter from the impl to the method\n+impl Foo {\n+    fn get<T: Default>(&self) -> T {\n+        <T as Default>::default()\n     }\n }\n ```\n \n-Please check your object definition and remove unused type\n-parameter(s). Example:\n+### Error example 2\n+\n+As another example, suppose we have a `Maker` trait and want to establish a\n+type `FooMaker` that makes `Foo`s:\n+\n+```compile_fail\n+trait Maker {\n+    type Item;\n+    fn make(&mut self) -> Self::Item;\n+}\n+\n+struct Foo<T> {\n+    foo: T\n+}\n+\n+struct FooMaker;\n \n+impl<T: Default> Maker for FooMaker {\n+// error: the type parameter `T` is not constrained by the impl trait, self\n+// type, or predicates [E0207]\n+    type Item = Foo<T>;\n+\n+    fn make(&mut self) -> Foo<T> {\n+        Foo { foo: <T as Default>::default() }\n+    }\n+}\n ```\n-trait MyTrait {\n-    fn get(&self) -> usize;\n+\n+This fails to compile because `T` does not appear in the trait or in the\n+implementing type.\n+\n+One way to work around this is to introduce a phantom type parameter into\n+`FooMaker`, like so:\n+\n+```\n+use std::marker::PhantomData;\n+\n+trait Maker {\n+    type Item;\n+    fn make(&mut self) -> Self::Item;\n }\n \n-struct Foo;\n+struct Foo<T> {\n+    foo: T\n+}\n \n-impl MyTrait for Foo {\n-    fn get(&self) -> usize {\n-        0\n+// Add a type parameter to `FooMaker`\n+struct FooMaker<T> {\n+    phantom: PhantomData<T>,\n+}\n+\n+impl<T: Default> Maker for FooMaker<T> {\n+    type Item = Foo<T>;\n+\n+    fn make(&mut self) -> Foo<T> {\n+        Foo {\n+            foo: <T as Default>::default(),\n+        }\n     }\n }\n ```\n+\n+Another way is to do away with the associated type in `Maker` and use an input\n+type parameter instead:\n+\n+```\n+// Use a type parameter instead of an associated type here\n+trait Maker<Item> {\n+    fn make(&mut self) -> Item;\n+}\n+\n+struct Foo<T> {\n+    foo: T\n+}\n+\n+struct FooMaker;\n+\n+impl<T: Default> Maker<Foo<T>> for FooMaker {\n+    fn make(&mut self) -> Foo<T> {\n+        Foo { foo: <T as Default>::default() }\n+    }\n+}\n+```\n+\n+### Additional information\n+\n+For more information, please see [RFC 447].\n+\n+[RFC 447]: https://github.com/rust-lang/rfcs/blob/master/text/0447-no-unused-impl-parameters.md\n \"##,\n \n E0210: r##\""}, {"sha": "14661dbaec4c5ea234f88950be37073ae4613101", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -125,6 +125,7 @@\n             break;\n \n         case \"+\":\n+            ev.preventDefault();\n             toggleAllDocs();\n             break;\n "}, {"sha": "86ec7db14b5c17d50621bddb8b45bf289ec56647", "filename": "src/test/compile-fail/E0062.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0062.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0062.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0062.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo {\n+    x: i32\n+}\n+\n+fn main() {\n+    let x = Foo {\n+        x: 0,\n+        x: 0, //~ ERROR E0062\n+    };\n+}"}, {"sha": "c94f807d807cae0612729248de0fb4bf01fb3323", "filename": "src/test/compile-fail/E0063.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0063.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0063.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0063.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo {\n+    x: i32,\n+    y: i32\n+}\n+\n+fn main() {\n+    let x = Foo { x: 0 }; //~ ERROR E0063\n+}"}, {"sha": "a3fc30ee1c71ab8813637c84e880cf154117934f", "filename": "src/test/compile-fail/E0067.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0067.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0067.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0067.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::collections::LinkedList;\n+\n+fn main() {\n+    LinkedList::new() += 1; //~ ERROR E0368\n+                            //~^ ERROR E0067\n+}"}, {"sha": "d164d86348784255b86e9bf57dd5efb746eb1de7", "filename": "src/test/compile-fail/E0069.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0069.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0069.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0069.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo() -> u8 {\n+    return; //~ ERROR E0069\n+}\n+\n+fn main() {\n+}"}, {"sha": "ba66bd03aef9db9a3d3bb533fac67473e6fb6c03", "filename": "src/test/compile-fail/E0070.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0070.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0070.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0070.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+const SOME_CONST : i32 = 12;\n+\n+fn some_other_func() {}\n+\n+fn some_function() {\n+    SOME_CONST = 14; //~ ERROR E0070\n+    1 = 3; //~ ERROR E0070\n+    some_other_func() = 4; //~ ERROR E0070\n+                           //~^ ERROR E0308\n+}\n+\n+fn main() {\n+}"}, {"sha": "658c8fb1551149fd909d0464a66fd109795eb006", "filename": "src/test/compile-fail/E0071.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0071.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0071.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0071.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo { FirstValue(i32) }\n+\n+fn main() {\n+    let u = Foo::FirstValue { value: 0 }; //~ ERROR E0071\n+    let t = u32 { value: 4 }; //~ ERROR E0071\n+}"}, {"sha": "2f96ba1046d7487c1116e86621f8987e8e364293", "filename": "src/test/compile-fail/E0072.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0072.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0072.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0072.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct ListNode { //~ ERROR E0072\n+    head: u8,\n+    tail: Option<ListNode>,\n+}\n+\n+fn main() {\n+}"}, {"sha": "d7783904e2e98fd9d2c271c92ca1f51f10d867b0", "filename": "src/test/compile-fail/E0075.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0075.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0075.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0075.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(repr_simd)]\n+\n+#[repr(simd)]\n+struct Bad; //~ ERROR E0075\n+\n+fn main() {\n+}"}, {"sha": "b0f02a03e00518c71850695e0a1e289aa36b4083", "filename": "src/test/compile-fail/E0076.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0076.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0076.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0076.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(repr_simd)]\n+\n+#[repr(simd)]\n+struct Bad(u16, u32, u32); //~ ERROR E0076\n+\n+fn main() {\n+}"}, {"sha": "b074e90b2c01fdb95c99b87aa4c604510d59f12d", "filename": "src/test/compile-fail/E0077.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0077.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0077.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0077.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(repr_simd)]\n+\n+#[repr(simd)]\n+struct Bad(String); //~ ERROR E0077\n+\n+fn main() {\n+}"}, {"sha": "23957c72ff00eadd4ab402b8c0717bb947b11eb4", "filename": "src/test/compile-fail/E0079.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0079.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0079.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0079.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo {\n+    Q = \"32\" //~ ERROR E0079\n+}\n+\n+fn main() {\n+}"}, {"sha": "0329209d44bc742b9f03ce48b6108a1a1096fe83", "filename": "src/test/compile-fail/E0080.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0080.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0080.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0080.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Enum {\n+    X = (1 << 500), //~ ERROR E0080\n+    Y = (1 / 0) //~ ERROR E0080\n+}\n+\n+fn main() {\n+}"}, {"sha": "b63265564b334674ff9a86000f065cc92a10aef7", "filename": "src/test/compile-fail/E0081.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8393d99c356e51128e0125aa23a7824d6ff513b2/src%2Ftest%2Fcompile-fail%2FE0081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0081.rs?ref=8393d99c356e51128e0125aa23a7824d6ff513b2", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Enum {\n+    P = 3,\n+    X = 3, //~ ERROR E0081\n+    Y = 5\n+}\n+\n+fn main() {\n+}"}]}