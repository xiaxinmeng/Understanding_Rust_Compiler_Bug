{"sha": "fd1d3603d46422bef6531a2d74401361ba1d822b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMWQzNjAzZDQ2NDIyYmVmNjUzMWEyZDc0NDAxMzYxYmExZDgyMmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-23T11:01:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-23T11:01:05Z"}, "message": "Auto merge of #34925 - jseyfried:nested_macros, r=eddyb\n\nSupport nested `macro_rules!`\n\nFixes #6994.\nr? @eddyb", "tree": {"sha": "b06deb4e8b78caff6903dc36671e590ff269200f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b06deb4e8b78caff6903dc36671e590ff269200f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd1d3603d46422bef6531a2d74401361ba1d822b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd1d3603d46422bef6531a2d74401361ba1d822b", "html_url": "https://github.com/rust-lang/rust/commit/fd1d3603d46422bef6531a2d74401361ba1d822b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd1d3603d46422bef6531a2d74401361ba1d822b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad264f7f39b6113fb87a489d72d31abbc03ab148", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad264f7f39b6113fb87a489d72d31abbc03ab148", "html_url": "https://github.com/rust-lang/rust/commit/ad264f7f39b6113fb87a489d72d31abbc03ab148"}, {"sha": "485e2df1b1fbd4acde8dbc5bfbdf7fed3acc227c", "url": "https://api.github.com/repos/rust-lang/rust/commits/485e2df1b1fbd4acde8dbc5bfbdf7fed3acc227c", "html_url": "https://github.com/rust-lang/rust/commit/485e2df1b1fbd4acde8dbc5bfbdf7fed3acc227c"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "c143e190c6fc16ce814c785d88aab8e0d5889974", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fd1d3603d46422bef6531a2d74401361ba1d822b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1d3603d46422bef6531a2d74401361ba1d822b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=fd1d3603d46422bef6531a2d74401361ba1d822b", "patch": "@@ -258,6 +258,7 @@ pub struct Parser<'a> {\n     pub tokens_consumed: usize,\n     pub restrictions: Restrictions,\n     pub quote_depth: usize, // not (yet) related to the quasiquoter\n+    parsing_token_tree: bool,\n     pub reader: Box<Reader+'a>,\n     /// The set of seen errors about obsolete syntax. Used to suppress\n     /// extra detail when the same error is seen twice\n@@ -374,6 +375,7 @@ impl<'a> Parser<'a> {\n             tokens_consumed: 0,\n             restrictions: Restrictions::empty(),\n             quote_depth: 0,\n+            parsing_token_tree: false,\n             obsolete_set: HashSet::new(),\n             mod_path_stack: Vec::new(),\n             filename: filename,\n@@ -2663,7 +2665,7 @@ impl<'a> Parser<'a> {\n     }\n \n     pub fn check_unknown_macro_variable(&mut self) {\n-        if self.quote_depth == 0 {\n+        if self.quote_depth == 0 && !self.parsing_token_tree {\n             match self.token {\n                 token::SubstNt(name) =>\n                     self.fatal(&format!(\"unknown macro variable `{}`\", name)).emit(),\n@@ -2723,6 +2725,7 @@ impl<'a> Parser<'a> {\n                 Err(err)\n             },\n             token::OpenDelim(delim) => {\n+                let parsing_token_tree = ::std::mem::replace(&mut self.parsing_token_tree, true);\n                 // The span for beginning of the delimited section\n                 let pre_span = self.span;\n \n@@ -2787,6 +2790,7 @@ impl<'a> Parser<'a> {\n                     _ => {}\n                 }\n \n+                self.parsing_token_tree = parsing_token_tree;\n                 Ok(TokenTree::Delimited(span, Rc::new(Delimited {\n                     delim: delim,\n                     open_span: open_span,"}, {"sha": "c982e8ac6f83e2927c8e81a63b11d4152786df34", "filename": "src/test/run-pass/macro-of-higher-order.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fd1d3603d46422bef6531a2d74401361ba1d822b/src%2Ftest%2Frun-pass%2Fmacro-of-higher-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1d3603d46422bef6531a2d74401361ba1d822b/src%2Ftest%2Frun-pass%2Fmacro-of-higher-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-of-higher-order.rs?ref=fd1d3603d46422bef6531a2d74401361ba1d822b", "patch": "@@ -16,7 +16,16 @@ macro_rules! higher_order {\n     });\n }\n \n+macro_rules! outer {\n+    ($x:expr; $fragment:ident) => {\n+        macro_rules! inner { ($y:$fragment) => { $x + $y } }\n+    }\n+}\n+\n fn main() {\n     let val = higher_order!(subst ($x:expr, $y:expr, $foo:expr) => (($x + $y, $foo)));\n     assert_eq!(val, (3, \"foo\"));\n+\n+    outer!(2; expr);\n+    assert_eq!(inner!(3), 5);\n }"}]}