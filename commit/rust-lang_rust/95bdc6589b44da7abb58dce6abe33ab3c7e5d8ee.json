{"sha": "95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YmRjNjU4OWI0NGRhN2FiYjU4ZGNlNmFiZTMzYWIzYzdlNWQ4ZWU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-22T15:45:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-22T15:45:38Z"}, "message": "Rollup merge of #53558 - davidtwco:issue-53547, r=estebank\n\nNormalize source line and column numbers.\n\nFixes #53547.\n\nr? @eddyb", "tree": {"sha": "a08c2d1824911e37105ecb0c32a50fe8183e34eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a08c2d1824911e37105ecb0c32a50fe8183e34eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbfYUiCRBK7hj4Ov3rIwAAdHIIAGAqOXS04NDPUfYQOY1wsR+3\n7niqZC7meOTHOqYXRYPlZv/B2M0VTcQQiFXnB1zSRqsJzvsl+Vv5+kCZalEywlgc\nSIPSnrw1kODbGairyIkpAanzuSXxkjW359lAenHmuCCdJmeDa6fgYdA94F3mXbZs\nzIXCd7mvk4Ewq+bcxh2vHdX3c1etASO7vJQ8S5E50zNjtGarlx2mFuL0brXiilZv\n24aLvpT/p3mKYYffZHKpDvu4OBY99cfK151Gze3KT+OYJdkj7jH/4PsQiUGpjHuZ\nWRndO7n9In3alMSXhiYTMfK3g7sWOOoEhklsi/QXSKD67M6cJRUYAyTpKGxqsoQ=\n=6RPg\n-----END PGP SIGNATURE-----\n", "payload": "tree a08c2d1824911e37105ecb0c32a50fe8183e34eb\nparent e53a575ddb3c59ee7b5b1692ddf79a967abcbb10\nparent 6e24868384408da8b542f70085f7a45a3c383fc7\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1534952738 +0200\ncommitter GitHub <noreply@github.com> 1534952738 +0200\n\nRollup merge of #53558 - davidtwco:issue-53547, r=estebank\n\nNormalize source line and column numbers.\n\nFixes #53547.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee", "html_url": "https://github.com/rust-lang/rust/commit/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e53a575ddb3c59ee7b5b1692ddf79a967abcbb10", "url": "https://api.github.com/repos/rust-lang/rust/commits/e53a575ddb3c59ee7b5b1692ddf79a967abcbb10", "html_url": "https://github.com/rust-lang/rust/commit/e53a575ddb3c59ee7b5b1692ddf79a967abcbb10"}, {"sha": "6e24868384408da8b542f70085f7a45a3c383fc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e24868384408da8b542f70085f7a45a3c383fc7", "html_url": "https://github.com/rust-lang/rust/commit/6e24868384408da8b542f70085f7a45a3c383fc7"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "16d87f7e31c9bb126b81f7ac4a0580d9fc1ef2c6", "filename": "src/test/ui/consts/const-size_of-cycle.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr?ref=95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee", "patch": "@@ -2,13 +2,13 @@ error[E0391]: cycle detected when computing layout of `Foo`\n    |\n note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: [u8; _] }`...\n note: ...which requires const-evaluating `Foo::bytes::{{constant}}`...\n-  --> $SRC_DIR/libcore/mem.rs:323:14\n+  --> $SRC_DIR/libcore/mem.rs:LL:COL\n    |\n LL |     unsafe { intrinsics::size_of::<T>() }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: ...which again requires computing layout of `Foo`, completing the cycle\n note: cycle used when const-evaluating `Foo::bytes::{{constant}}`\n-  --> $SRC_DIR/libcore/mem.rs:323:14\n+  --> $SRC_DIR/libcore/mem.rs:LL:COL\n    |\n LL |     unsafe { intrinsics::size_of::<T>() }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "7ad16b1f8f237c0eeb2510d8e59f754b5e274b70", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr?ref=95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee", "patch": "@@ -30,7 +30,7 @@ error[E0643]: method `hash` has incompatible signature for trait\n LL |     fn hash(&self, hasher: &mut impl Hasher) {}\n    |                                 ^^^^^^^^^^^ expected generic parameter, found `impl Trait`\n    | \n-  ::: $SRC_DIR/libcore/hash/mod.rs:185:13\n+  ::: $SRC_DIR/libcore/hash/mod.rs:LL:COL\n    |\n LL |     fn hash<H: Hasher>(&self, state: &mut H);\n    |             - declaration in trait here"}, {"sha": "24b575aae12f9f44c6a5c90e13b3a10ccce1c9ad", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=95bdc6589b44da7abb58dce6abe33ab3c7e5d8ee", "patch": "@@ -2963,6 +2963,13 @@ impl<'test> TestCx<'test> {\n             normalized = normalized.replace(\"\\\\n\", \"\\n\");\n         }\n \n+        // If there are `$SRC_DIR` normalizations with line and column numbers, then replace them\n+        // with placeholders as we do not want tests needing updated when compiler source code\n+        // changes.\n+        // eg. $SRC_DIR/libcore/mem.rs:323:14 becomes $SRC_DIR/libcore/mem.rs:LL:COL\n+        normalized = Regex::new(\"SRC_DIR(.+):\\\\d+:\\\\d+\").unwrap()\n+            .replace_all(&normalized, \"SRC_DIR$1:LL:COL\").into_owned();\n+\n         normalized = normalized.replace(\"\\\\\\\\\", \"\\\\\") // denormalize for paths on windows\n               .replace(\"\\\\\", \"/\") // normalize for paths on windows\n               .replace(\"\\r\\n\", \"\\n\") // normalize for linebreaks on windows"}]}