{"sha": "7ef54c7ecd625376de092cbd741621987673c45f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZjU0YzdlY2Q2MjUzNzZkZTA5MmNiZDc0MTYyMTk4NzY3M2M0NWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-15T02:54:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-18T23:59:37Z"}, "message": "core: Begin uv file system bindings", "tree": {"sha": "dd57a33370576e7eae36e0839da21acf8753e11c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd57a33370576e7eae36e0839da21acf8753e11c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ef54c7ecd625376de092cbd741621987673c45f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef54c7ecd625376de092cbd741621987673c45f", "html_url": "https://github.com/rust-lang/rust/commit/7ef54c7ecd625376de092cbd741621987673c45f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ef54c7ecd625376de092cbd741621987673c45f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57e85b5f947387195cec1338fcb94b7cfb88bd86", "url": "https://api.github.com/repos/rust-lang/rust/commits/57e85b5f947387195cec1338fcb94b7cfb88bd86", "html_url": "https://github.com/rust-lang/rust/commit/57e85b5f947387195cec1338fcb94b7cfb88bd86"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "aab6d898ea881c1502d9e5396140c6b51bc41dce", "filename": "src/libcore/rt/uv.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7ef54c7ecd625376de092cbd741621987673c45f/src%2Flibcore%2Frt%2Fuv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ef54c7ecd625376de092cbd741621987673c45f/src%2Flibcore%2Frt%2Fuv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fuv.rs?ref=7ef54c7ecd625376de092cbd741621987673c45f", "patch": "@@ -498,6 +498,42 @@ impl NativeHandle<*uvll::uv_write_t> for WriteRequest {\n     }\n }\n \n+type FsCallback = ~fn(FsRequest, Option<UvError>);\n+impl Callback for FsCallback { }\n+\n+pub struct FsRequest(*uvll::uv_fs_t);\n+\n+impl Request for FsRequest;\n+\n+impl FsRequest {\n+    static fn new() -> FsRequest {\n+        let fs_req = unsafe { malloc_req(UV_FS) };\n+        fail_unless!(fs_req.is_not_null());\n+        let fs_req = fs_req as *uvll::uv_write_t;\n+        uvll::set_data_for_uv_req(fs_req, null::<()>());\n+        Native(fs_req)\n+    }\n+\n+    fn delete(self) {\n+        unsafe { free_req(self.native_handle() as *c_void) }\n+    }\n+\n+    fn open(&mut self, loop_: &EventLoop, cb: FsCallback) {\n+    }\n+\n+    fn close(&mut self, loop_: &EventLoop, cb: FsCallback) {\n+    }\n+}\n+\n+impl NativeHandle<*uvll::uv_fs_t> for FsRequest {\n+    static fn from_native_handle(handle: *uvll:: uv_fs_t) -> FsRequest {\n+        FsRequest(handle)\n+    }\n+    fn native_handle(&self) -> *uvll::uv_fs_t {\n+        match self { &FsRequest(ptr) => ptr }\n+    }\n+}\n+\n // XXX: Need to define the error constants like EOF so they can be\n // compared to the UvError type\n "}]}