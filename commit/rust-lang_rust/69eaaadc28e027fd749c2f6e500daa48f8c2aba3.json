{"sha": "69eaaadc28e027fd749c2f6e500daa48f8c2aba3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZWFhYWRjMjhlMDI3ZmQ3NDljMmY2ZTUwMGRhYTQ4ZjhjMmFiYTM=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-20T18:53:19Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Fix merge error.", "tree": {"sha": "2fd93c390eb98268b6c373cb4feae58d7e6c1164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fd93c390eb98268b6c373cb4feae58d7e6c1164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69eaaadc28e027fd749c2f6e500daa48f8c2aba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69eaaadc28e027fd749c2f6e500daa48f8c2aba3", "html_url": "https://github.com/rust-lang/rust/commit/69eaaadc28e027fd749c2f6e500daa48f8c2aba3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69eaaadc28e027fd749c2f6e500daa48f8c2aba3/comments", "author": null, "committer": null, "parents": [{"sha": "452e36efb3840f4b44c70c3939e3a88f27e47710", "url": "https://api.github.com/repos/rust-lang/rust/commits/452e36efb3840f4b44c70c3939e3a88f27e47710", "html_url": "https://github.com/rust-lang/rust/commit/452e36efb3840f4b44c70c3939e3a88f27e47710"}], "stats": {"total": 14, "additions": 0, "deletions": 14}, "files": [{"sha": "3853f6559959655023dd9dcaaa0d044cce0efa5a", "filename": "src/machine.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69eaaadc28e027fd749c2f6e500daa48f8c2aba3/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69eaaadc28e027fd749c2f6e500daa48f8c2aba3/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=69eaaadc28e027fd749c2f6e500daa48f8c2aba3", "patch": "@@ -545,20 +545,6 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         ecx.active_thread_stack_mut()\n     }\n \n-    #[inline(always)]\n-    fn stack<'a>(\n-        ecx: &'a InterpCx<'mir, 'tcx, Self>,\n-    ) -> &'a [Frame<'mir, 'tcx, Self::PointerTag, Self::FrameExtra>] {\n-        &ecx.machine.stack\n-    }\n-\n-    #[inline(always)]\n-    fn stack_mut<'a>(\n-        ecx: &'a mut InterpCx<'mir, 'tcx, Self>,\n-    ) -> &'a mut Vec<Frame<'mir, 'tcx, Self::PointerTag, Self::FrameExtra>> {\n-        &mut ecx.machine.stack\n-    }\n-\n     #[inline(always)]\n     fn after_stack_push(ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx> {\n         if ecx.memory.extra.stacked_borrows.is_some() {"}]}