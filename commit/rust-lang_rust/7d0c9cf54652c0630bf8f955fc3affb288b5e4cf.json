{"sha": "7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMGM5Y2Y1NDY1MmMwNjMwYmY4Zjk1NWZjM2FmZmIyODhiNWU0Y2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-13T15:40:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-13T15:40:47Z"}, "message": "Optional patterns in trait methods", "tree": {"sha": "31938c2f1178ff242cf8f9a89e7d17b4a505018e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31938c2f1178ff242cf8f9a89e7d17b4a505018e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "html_url": "https://github.com/rust-lang/rust/commit/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c146331b1c92c3a6d58217b61f95e69155a3a4f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c146331b1c92c3a6d58217b61f95e69155a3a4f8", "html_url": "https://github.com/rust-lang/rust/commit/c146331b1c92c3a6d58217b61f95e69155a3a4f8"}], "stats": {"total": 236, "additions": 92, "deletions": 144}, "files": [{"sha": "e62b1665483de17a40f3d8984b88e8b7a3797c24", "filename": "crates/libsyntax2/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "patch": "@@ -284,7 +284,7 @@ pub(super) fn block_expr(p: &mut Parser) -> CompletedMarker {\n                 // test block_items\n                 // fn a() { fn b() {} }\n                 let m = p.start();\n-                match items::maybe_item(p) {\n+                match items::maybe_item(p, items::ItemFlavor::Mod) {\n                     items::MaybeItem::Item(kind) => {\n                         m.complete(p, kind);\n                     }"}, {"sha": "fc02f0c5c3436c8032ca332a96042f7695ec0b83", "filename": "crates/libsyntax2/src/grammar/items/mod.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs?ref=7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "patch": "@@ -14,13 +14,17 @@ mod use_item;\n pub(super) fn mod_contents(p: &mut Parser, stop_on_r_curly: bool) {\n     attributes::inner_attributes(p);\n     while !p.at(EOF) && !(stop_on_r_curly && p.at(R_CURLY)) {\n-        item_or_macro(p, stop_on_r_curly)\n+        item_or_macro(p, stop_on_r_curly, ItemFlavor::Mod)\n     }\n }\n \n-pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool) {\n+pub(super) enum ItemFlavor {\n+    Mod, Trait\n+}\n+\n+pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool, flavor: ItemFlavor) {\n     let m = p.start();\n-    match maybe_item(p) {\n+    match maybe_item(p, flavor) {\n         MaybeItem::Item(kind) => {\n             m.complete(p, kind);\n         }\n@@ -60,7 +64,7 @@ pub(super) enum MaybeItem {\n     Modifiers,\n }\n \n-pub(super) fn maybe_item(p: &mut Parser) -> MaybeItem {\n+pub(super) fn maybe_item(p: &mut Parser, flavor: ItemFlavor) -> MaybeItem {\n     attributes::outer_attributes(p);\n     visibility(p);\n     if let Some(kind) = items_without_modifiers(p) {\n@@ -107,7 +111,7 @@ pub(super) fn maybe_item(p: &mut Parser) -> MaybeItem {\n         // test unsafe_fn\n         // unsafe fn foo() {}\n         FN_KW => {\n-            function(p);\n+            function(p, flavor);\n             FN_DEF\n         }\n \n@@ -217,7 +221,7 @@ fn extern_block(p: &mut Parser) {\n     p.expect(R_CURLY);\n }\n \n-fn function(p: &mut Parser) {\n+fn function(p: &mut Parser, flavor: ItemFlavor) {\n     assert!(p.at(FN_KW));\n     p.bump();\n \n@@ -227,7 +231,12 @@ fn function(p: &mut Parser) {\n     type_params::type_param_list(p);\n \n     if p.at(L_PAREN) {\n-        params::param_list(p);\n+        match flavor {\n+            ItemFlavor::Mod =>\n+                params::param_list(p),\n+            ItemFlavor::Trait =>\n+                params::param_list_opt_patterns(p),\n+        }\n     } else {\n         p.error(\"expected function arguments\");\n     }"}, {"sha": "daecaff5cd89006926caea7687583dc45a0d67c9", "filename": "crates/libsyntax2/src/grammar/items/traits.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "patch": "@@ -20,7 +20,7 @@ pub(super) fn trait_def(p: &mut Parser) {\n     //     fn bar(&self);\n     // }\n     while !p.at(EOF) && !p.at(R_CURLY) {\n-        item_or_macro(p, true);\n+        item_or_macro(p, true, ItemFlavor::Trait);\n     }\n     p.expect(R_CURLY);\n }\n@@ -55,7 +55,7 @@ pub(super) fn impl_item(p: &mut Parser) {\n     //     fn bar(&self) {}\n     // }\n     while !p.at(EOF) && !p.at(R_CURLY) {\n-        item_or_macro(p, true);\n+        item_or_macro(p, true, ItemFlavor::Mod);\n     }\n     p.expect(R_CURLY);\n }"}, {"sha": "88282ca1ae27fda0adc18214beb5764ff000d012", "filename": "crates/libsyntax2/tests/data/parser/ok/0030_traits.txt", "status": "modified", "additions": 73, "deletions": 134, "changes": 207, "blob_url": "https://github.com/rust-lang/rust/blob/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0030_traits.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7d0c9cf54652c0630bf8f955fc3affb288b5e4cf/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0030_traits.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0030_traits.txt?ref=7d0c9cf54652c0630bf8f955fc3affb288b5e4cf", "patch": "@@ -1,5 +1,5 @@\n FILE@[0; 164)\n-  TRAIT_DEF@[0; 164)\n+  TRAIT_DEF@[0; 66)\n     VISIBILITY@[0; 3)\n       PUB_KW@[0; 3)\n     WHITESPACE@[3; 4)\n@@ -10,142 +10,81 @@ FILE@[0; 164)\n     WHITESPACE@[22; 23)\n     L_CURLY@[23; 24)\n     WHITESPACE@[24; 29)\n-    FN_DEF@[29; 164)\n+    FN_DEF@[29; 64)\n       FN_KW@[29; 31)\n       WHITESPACE@[31; 32)\n       NAME@[32; 45)\n         IDENT@[32; 45) \"write_message\"\n-      PARAM_LIST@[45; 164)\n+      PARAM_LIST@[45; 63)\n         L_PAREN@[45; 46)\n-        PARAM@[46; 63)\n-          REF_PAT@[46; 62)\n+        PARAM@[46; 62)\n+          REFERENCE_TYPE@[46; 62)\n             AMP@[46; 47)\n-            BIND_PAT@[47; 62)\n-              NAME@[47; 62)\n-                IDENT@[47; 62) \"FrontendMessage\"\n-                err: `expected COLON`\n-                err: `expected type`\n-          ERROR@[62; 63)\n-            R_PAREN@[62; 63)\n-            err: `expected COMMA`\n-            err: `expected pattern`\n-        PARAM@[63; 66)\n-          ERROR@[63; 64)\n-            SEMI@[63; 64)\n-            err: `expected COLON`\n-          WHITESPACE@[64; 65)\n-          err: `expected type`\n-          ERROR@[65; 66)\n-            R_CURLY@[65; 66)\n-            err: `expected COMMA`\n-        WHITESPACE@[66; 68)\n-        err: `expected pattern`\n-        PARAM@[68; 82)\n-          ERROR@[68; 73)\n-            TRAIT_KW@[68; 73)\n-            err: `expected COLON`\n-          WHITESPACE@[73; 74)\n-          PATH_TYPE@[74; 82)\n-            PATH@[74; 82)\n-              PATH_SEGMENT@[74; 82)\n-                NAME_REF@[74; 82)\n-                  IDENT@[74; 82) \"Runnable\"\n-                  err: `expected COMMA`\n-        WHITESPACE@[82; 83)\n-        err: `expected pattern`\n-        PARAM@[83; 91)\n-          ERROR@[83; 84)\n-            L_CURLY@[83; 84)\n-            err: `expected COLON`\n-          WHITESPACE@[84; 89)\n-          FN_POINTER_TYPE@[89; 91)\n-            FN_KW@[89; 91)\n-            err: `expected parameters`\n-            err: `expected COMMA`\n-        WHITESPACE@[91; 92)\n-        PARAM@[92; 102)\n-          TUPLE_STRUCT_PAT@[92; 101)\n-            PATH@[92; 99)\n-              PATH_SEGMENT@[92; 99)\n-                NAME_REF@[92; 99)\n-                  IDENT@[92; 99) \"handler\"\n-            L_PAREN@[99; 100)\n-            R_PAREN@[100; 101)\n-            err: `expected COLON`\n-            err: `expected type`\n-          ERROR@[101; 102)\n-            SEMI@[101; 102)\n-            err: `expected COMMA`\n-        WHITESPACE@[102; 103)\n-        err: `expected pattern`\n-        PARAM@[103; 111)\n-          ERROR@[103; 104)\n-            R_CURLY@[103; 104)\n-            err: `expected COLON`\n-          WHITESPACE@[104; 106)\n-          err: `expected type`\n-          ERROR@[106; 111)\n-            TRAIT_KW@[106; 111)\n-            err: `expected COMMA`\n-        WHITESPACE@[111; 112)\n-        PARAM@[112; 164)\n-          STRUCT_PAT@[112; 163)\n-            PATH@[112; 125)\n-              PATH_SEGMENT@[112; 125)\n-                NAME_REF@[112; 125)\n-                  IDENT@[112; 125) \"TraitWithExpr\"\n-            WHITESPACE@[125; 126)\n-            L_CURLY@[126; 127)\n-            WHITESPACE@[127; 132)\n-            err: `expected a name`\n-            BIND_PAT@[132; 134)\n-              ERROR@[132; 134)\n-                FN_KW@[132; 134)\n-                err: `expected COMMA`\n-            WHITESPACE@[134; 135)\n-            BIND_PAT@[135; 147)\n-              NAME@[135; 147)\n-                IDENT@[135; 147) \"fn_with_expr\"\n-                err: `expected COMMA`\n-                err: `expected a name`\n-            BIND_PAT@[147; 148)\n-              ERROR@[147; 148)\n-                L_PAREN@[147; 148)\n-                err: `expected COMMA`\n-            IDENT@[148; 149) \"x\"\n-            COLON@[149; 150)\n-            WHITESPACE@[150; 151)\n-            SLICE_PAT@[151; 159)\n-              L_BRACK@[151; 152)\n-              BIND_PAT@[152; 155)\n-                NAME@[152; 155)\n-                  IDENT@[152; 155) \"i32\"\n-                  err: `expected COMMA`\n-                  err: `expected pattern`\n-              ERROR@[155; 156)\n-                SEMI@[155; 156)\n-                err: `expected COMMA`\n-              WHITESPACE@[156; 157)\n-              LITERAL@[157; 158)\n-                INT_NUMBER@[157; 158) \"1\"\n-              R_BRACK@[158; 159)\n-              err: `expected COMMA`\n-              err: `expected a name`\n-            BIND_PAT@[159; 160)\n-              ERROR@[159; 160)\n-                R_PAREN@[159; 160)\n-                err: `expected COMMA`\n-                err: `expected a name`\n-            BIND_PAT@[160; 161)\n-              ERROR@[160; 161)\n-                SEMI@[160; 161)\n-            WHITESPACE@[161; 162)\n-            R_CURLY@[162; 163)\n-            err: `expected COLON`\n-          WHITESPACE@[163; 164)\n-          err: `expected type`\n-          err: `expected COMMA`\n-          err: `expected R_PAREN`\n-          err: `expected block`\n-          err: `expected R_CURLY`\n-          ERROR@[164; 164)\n+            PATH_TYPE@[47; 62)\n+              PATH@[47; 62)\n+                PATH_SEGMENT@[47; 62)\n+                  NAME_REF@[47; 62)\n+                    IDENT@[47; 62) \"FrontendMessage\"\n+        R_PAREN@[62; 63)\n+      SEMI@[63; 64)\n+    WHITESPACE@[64; 65)\n+    R_CURLY@[65; 66)\n+  WHITESPACE@[66; 68)\n+  TRAIT_DEF@[68; 104)\n+    TRAIT_KW@[68; 73)\n+    WHITESPACE@[73; 74)\n+    NAME@[74; 82)\n+      IDENT@[74; 82) \"Runnable\"\n+    WHITESPACE@[82; 83)\n+    L_CURLY@[83; 84)\n+    WHITESPACE@[84; 89)\n+    FN_DEF@[89; 102)\n+      FN_KW@[89; 91)\n+      WHITESPACE@[91; 92)\n+      NAME@[92; 99)\n+        IDENT@[92; 99) \"handler\"\n+      PARAM_LIST@[99; 101)\n+        L_PAREN@[99; 100)\n+        R_PAREN@[100; 101)\n+      SEMI@[101; 102)\n+    WHITESPACE@[102; 103)\n+    R_CURLY@[103; 104)\n+  WHITESPACE@[104; 106)\n+  TRAIT_DEF@[106; 163)\n+    TRAIT_KW@[106; 111)\n+    WHITESPACE@[111; 112)\n+    NAME@[112; 125)\n+      IDENT@[112; 125) \"TraitWithExpr\"\n+    WHITESPACE@[125; 126)\n+    L_CURLY@[126; 127)\n+    WHITESPACE@[127; 132)\n+    FN_DEF@[132; 161)\n+      FN_KW@[132; 134)\n+      WHITESPACE@[134; 135)\n+      NAME@[135; 147)\n+        IDENT@[135; 147) \"fn_with_expr\"\n+      PARAM_LIST@[147; 160)\n+        L_PAREN@[147; 148)\n+        PARAM@[148; 159)\n+          BIND_PAT@[148; 149)\n+            NAME@[148; 149)\n+              IDENT@[148; 149) \"x\"\n+          COLON@[149; 150)\n+          WHITESPACE@[150; 151)\n+          ARRAY_TYPE@[151; 159)\n+            L_BRACK@[151; 152)\n+            PATH_TYPE@[152; 155)\n+              PATH@[152; 155)\n+                PATH_SEGMENT@[152; 155)\n+                  NAME_REF@[152; 155)\n+                    IDENT@[152; 155) \"i32\"\n+            SEMI@[155; 156)\n+            WHITESPACE@[156; 157)\n+            LITERAL@[157; 158)\n+              INT_NUMBER@[157; 158) \"1\"\n+            R_BRACK@[158; 159)\n+        R_PAREN@[159; 160)\n+      SEMI@[160; 161)\n+    WHITESPACE@[161; 162)\n+    R_CURLY@[162; 163)\n+  WHITESPACE@[163; 164)"}]}