{"sha": "73c95431ee98fde159a7e8e068cdd406bd8810d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYzk1NDMxZWU5OGZkZTE1OWE3ZThlMDY4Y2RkNDA2YmQ4ODEwZDA=", "commit": {"author": {"name": "Marco Concetto Rudilosso", "email": "marcoconcettorudilosso@gmail.com", "date": "2017-10-16T20:09:07Z"}, "committer": {"name": "Marco Concetto Rudilosso", "email": "marcoconcettorudilosso@gmail.com", "date": "2017-10-21T21:50:21Z"}, "message": "removed unused import", "tree": {"sha": "e89b752d6834ce1f849d7d3a8278bc1ea92cacc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e89b752d6834ce1f849d7d3a8278bc1ea92cacc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73c95431ee98fde159a7e8e068cdd406bd8810d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73c95431ee98fde159a7e8e068cdd406bd8810d0", "html_url": "https://github.com/rust-lang/rust/commit/73c95431ee98fde159a7e8e068cdd406bd8810d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73c95431ee98fde159a7e8e068cdd406bd8810d0/comments", "author": {"login": "Maaarcocr", "id": 9624267, "node_id": "MDQ6VXNlcjk2MjQyNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/9624267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maaarcocr", "html_url": "https://github.com/Maaarcocr", "followers_url": "https://api.github.com/users/Maaarcocr/followers", "following_url": "https://api.github.com/users/Maaarcocr/following{/other_user}", "gists_url": "https://api.github.com/users/Maaarcocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maaarcocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maaarcocr/subscriptions", "organizations_url": "https://api.github.com/users/Maaarcocr/orgs", "repos_url": "https://api.github.com/users/Maaarcocr/repos", "events_url": "https://api.github.com/users/Maaarcocr/events{/privacy}", "received_events_url": "https://api.github.com/users/Maaarcocr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Maaarcocr", "id": 9624267, "node_id": "MDQ6VXNlcjk2MjQyNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/9624267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maaarcocr", "html_url": "https://github.com/Maaarcocr", "followers_url": "https://api.github.com/users/Maaarcocr/followers", "following_url": "https://api.github.com/users/Maaarcocr/following{/other_user}", "gists_url": "https://api.github.com/users/Maaarcocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maaarcocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maaarcocr/subscriptions", "organizations_url": "https://api.github.com/users/Maaarcocr/orgs", "repos_url": "https://api.github.com/users/Maaarcocr/repos", "events_url": "https://api.github.com/users/Maaarcocr/events{/privacy}", "received_events_url": "https://api.github.com/users/Maaarcocr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d870a96f286a27997136954739ab536a9f1b8392", "url": "https://api.github.com/repos/rust-lang/rust/commits/d870a96f286a27997136954739ab536a9f1b8392", "html_url": "https://github.com/rust-lang/rust/commit/d870a96f286a27997136954739ab536a9f1b8392"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "cba139133cf3e22b0d430b3fd59bbfed492a22b8", "filename": "src/librustc/traits/trans/mod.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/73c95431ee98fde159a7e8e068cdd406bd8810d0/src%2Flibrustc%2Ftraits%2Ftrans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c95431ee98fde159a7e8e068cdd406bd8810d0/src%2Flibrustc%2Ftraits%2Ftrans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ftrans%2Fmod.rs?ref=73c95431ee98fde159a7e8e068cdd406bd8810d0", "patch": "@@ -13,16 +13,14 @@\n // seems likely that they should eventually be merged into more\n // general routines.\n \n-use dep_graph::{DepGraph, DepKind, DepTrackingMap, DepTrackingMapConfig};\n+use dep_graph::{DepKind, DepTrackingMapConfig};\n use infer::TransNormalize;\n-use std::cell::RefCell;\n use std::marker::PhantomData;\n use syntax_pos::DUMMY_SP;\n use traits::{FulfillmentContext, Obligation, ObligationCause, SelectionContext, Vtable};\n use ty::{self, Ty, TyCtxt};\n use ty::subst::{Subst, Substs};\n use ty::fold::{TypeFoldable, TypeFolder};\n-use util::common::MemoizationMap;\n \n /// Attempts to resolve an obligation to a vtable.. The result is\n /// a shallow vtable resolution -- meaning that we do not\n@@ -136,20 +134,6 @@ impl<'a, 'gcx> TypeFolder<'gcx, 'gcx> for AssociatedTypeNormalizer<'a, 'gcx> {\n     }\n }\n \n-/// Specializes caches used in trans -- in particular, they assume all\n-/// types are fully monomorphized and that free regions can be erased.\n-pub struct TransTraitCaches<'tcx> {\n-    project_cache: RefCell<DepTrackingMap<ProjectionCache<'tcx>>>,\n-}\n-\n-impl<'tcx> TransTraitCaches<'tcx> {\n-    pub fn new(graph: DepGraph) -> Self {\n-        TransTraitCaches {\n-            project_cache: RefCell::new(DepTrackingMap::new(graph)),\n-        }\n-    }\n-}\n-\n // Implement DepTrackingMapConfig for `trait_cache`\n pub struct TraitSelectionCache<'tcx> {\n     data: PhantomData<&'tcx ()>"}, {"sha": "03033b6a06d68a125aa578716d7a9895fd15fceb", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73c95431ee98fde159a7e8e068cdd406bd8810d0/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c95431ee98fde159a7e8e068cdd406bd8810d0/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=73c95431ee98fde159a7e8e068cdd406bd8810d0", "patch": "@@ -851,9 +851,6 @@ pub struct GlobalCtxt<'tcx> {\n \n     pub sess: &'tcx Session,\n \n-\n-    pub trans_trait_caches: traits::trans::TransTraitCaches<'tcx>,\n-\n     pub dep_graph: DepGraph,\n \n     /// Common types, pre-interned for your convenience.\n@@ -1137,7 +1134,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         tls::enter_global(GlobalCtxt {\n             sess: s,\n             cstore,\n-            trans_trait_caches: traits::trans::TransTraitCaches::new(dep_graph.clone()),\n             global_arenas: arenas,\n             global_interners: interners,\n             dep_graph: dep_graph.clone(),"}]}