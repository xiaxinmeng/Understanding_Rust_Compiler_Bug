{"sha": "be069a687a4e1c231b8ae8c68ac0444fa6fee249", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMDY5YTY4N2E0ZTFjMjMxYjhhZThjNjhhYzA0NDRmYTZmZWUyNDk=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-25T05:16:47Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-01T05:30:40Z"}, "message": "Remove `krate.version`; fix `crate_version` in JSON\n\nPreviously, `JsonRenderer::after_krate` called `krate.version.clone()`.\nThe problem was it did that after the version was already moved into the\ncache, so it would always be None. The fix was to get the version from\nthe cache instead.", "tree": {"sha": "f661c9084748900a2d1d622e8abdd4d7fc55cd5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f661c9084748900a2d1d622e8abdd4d7fc55cd5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be069a687a4e1c231b8ae8c68ac0444fa6fee249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be069a687a4e1c231b8ae8c68ac0444fa6fee249", "html_url": "https://github.com/rust-lang/rust/commit/be069a687a4e1c231b8ae8c68ac0444fa6fee249", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be069a687a4e1c231b8ae8c68ac0444fa6fee249/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "163b01aa140299ca5934031e5edf17cb23184941", "url": "https://api.github.com/repos/rust-lang/rust/commits/163b01aa140299ca5934031e5edf17cb23184941", "html_url": "https://github.com/rust-lang/rust/commit/163b01aa140299ca5934031e5edf17cb23184941"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "09ba0e2740f1b0bcec69d6a17f26eb75c8649de8", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=be069a687a4e1c231b8ae8c68ac0444fa6fee249", "patch": "@@ -50,7 +50,6 @@ thread_local!(crate static MAX_DEF_IDX: RefCell<FxHashMap<CrateNum, DefIndex>> =\n #[derive(Clone, Debug)]\n crate struct Crate {\n     crate name: Symbol,\n-    crate version: Option<String>,\n     crate src: FileName,\n     crate module: Option<Item>,\n     crate externs: Vec<(CrateNum, ExternalCrate)>,"}, {"sha": "a64e8c21c462e80aba0ee0b02b8afb8be8c88d23", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=be069a687a4e1c231b8ae8c68ac0444fa6fee249", "patch": "@@ -77,7 +77,6 @@ crate fn krate(cx: &mut DocContext<'_>) -> Crate {\n \n     Crate {\n         name,\n-        version: None,\n         src,\n         module: Some(module),\n         externs,"}, {"sha": "f20296f4fe1480f333117bdb15c51805fc1f100b", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=be069a687a4e1c231b8ae8c68ac0444fa6fee249", "patch": "@@ -144,7 +144,6 @@ impl Cache {\n         dst: &Path,\n     ) -> clean::Crate {\n         // Crawl the crate to build various caches used for the output\n-        self.crate_version = krate.version.take();\n         debug!(?self.crate_version);\n         self.traits = krate.external_traits.take();\n         self.masked_crates = mem::take(&mut krate.masked_crates);"}, {"sha": "e6edf33d23c8d08056ebf69dc087e5c879bfe5f9", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=be069a687a4e1c231b8ae8c68ac0444fa6fee249", "patch": "@@ -199,7 +199,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n \n     fn after_krate(\n         &mut self,\n-        krate: &clean::Crate,\n+        _krate: &clean::Crate,\n         _diag: &rustc_errors::Handler,\n     ) -> Result<(), Error> {\n         debug!(\"Done with crate\");\n@@ -210,7 +210,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         #[allow(rustc::default_hash_types)]\n         let output = types::Crate {\n             root: types::Id(String::from(\"0:0\")),\n-            crate_version: krate.version.clone(),\n+            crate_version: self.cache.crate_version.clone(),\n             includes_private: self.cache.document_private,\n             index: index.into_iter().collect(),\n             paths: self"}, {"sha": "5bb66f7f6fd7c1b257f4277c49643b4d63ee718b", "filename": "src/test/rustdoc-json/nested.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Ftest%2Frustdoc-json%2Fnested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be069a687a4e1c231b8ae8c68ac0444fa6fee249/src%2Ftest%2Frustdoc-json%2Fnested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fnested.rs?ref=be069a687a4e1c231b8ae8c68ac0444fa6fee249", "patch": "@@ -1,6 +1,8 @@\n // edition:2018\n+// compile-flags: --crate-version 1.0.0\n \n-// @is nested.json \"$.index[*][?(@.name=='nested')].kind\" \\\"module\\\"\n+// @is nested.json \"$.crate_version\" \\\"1.0.0\\\"\n+// @is - \"$.index[*][?(@.name=='nested')].kind\" \\\"module\\\"\n // @is - \"$.index[*][?(@.name=='nested')].inner.is_crate\" true\n // @count - \"$.index[*][?(@.name=='nested')].inner.items[*]\" 1\n "}]}