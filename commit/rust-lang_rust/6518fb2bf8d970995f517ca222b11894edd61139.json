{"sha": "6518fb2bf8d970995f517ca222b11894edd61139", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MThmYjJiZjhkOTcwOTk1ZjUxN2NhMjIyYjExODk0ZWRkNjExMzk=", "commit": {"author": {"name": "Andrea Pretto", "email": "eulerdisk@gmail.com", "date": "2019-02-12T20:14:51Z"}, "committer": {"name": "Andrea Pretto", "email": "eulerdisk@gmail.com", "date": "2019-02-12T20:18:55Z"}, "message": "auto_import: import in enclosing module instead of file", "tree": {"sha": "2236bd993243c5c1b008fa4873b656ba93b15615", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2236bd993243c5c1b008fa4873b656ba93b15615"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6518fb2bf8d970995f517ca222b11894edd61139", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6518fb2bf8d970995f517ca222b11894edd61139", "html_url": "https://github.com/rust-lang/rust/commit/6518fb2bf8d970995f517ca222b11894edd61139", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6518fb2bf8d970995f517ca222b11894edd61139/comments", "author": {"login": "eulerdisk", "id": 10089822, "node_id": "MDQ6VXNlcjEwMDg5ODIy", "avatar_url": "https://avatars.githubusercontent.com/u/10089822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eulerdisk", "html_url": "https://github.com/eulerdisk", "followers_url": "https://api.github.com/users/eulerdisk/followers", "following_url": "https://api.github.com/users/eulerdisk/following{/other_user}", "gists_url": "https://api.github.com/users/eulerdisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eulerdisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eulerdisk/subscriptions", "organizations_url": "https://api.github.com/users/eulerdisk/orgs", "repos_url": "https://api.github.com/users/eulerdisk/repos", "events_url": "https://api.github.com/users/eulerdisk/events{/privacy}", "received_events_url": "https://api.github.com/users/eulerdisk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eulerdisk", "id": 10089822, "node_id": "MDQ6VXNlcjEwMDg5ODIy", "avatar_url": "https://avatars.githubusercontent.com/u/10089822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eulerdisk", "html_url": "https://github.com/eulerdisk", "followers_url": "https://api.github.com/users/eulerdisk/followers", "following_url": "https://api.github.com/users/eulerdisk/following{/other_user}", "gists_url": "https://api.github.com/users/eulerdisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eulerdisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eulerdisk/subscriptions", "organizations_url": "https://api.github.com/users/eulerdisk/orgs", "repos_url": "https://api.github.com/users/eulerdisk/repos", "events_url": "https://api.github.com/users/eulerdisk/events{/privacy}", "received_events_url": "https://api.github.com/users/eulerdisk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "468e1d4c5e908022b858e0704abf6e01a6893829", "url": "https://api.github.com/repos/rust-lang/rust/commits/468e1d4c5e908022b858e0704abf6e01a6893829", "html_url": "https://github.com/rust-lang/rust/commit/468e1d4c5e908022b858e0704abf6e01a6893829"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "52c2a0b2b9505874318bf5b9dfa6c160dd5f648a", "filename": "crates/ra_assists/src/auto_import.rs", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/6518fb2bf8d970995f517ca222b11894edd61139/crates%2Fra_assists%2Fsrc%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6518fb2bf8d970995f517ca222b11894edd61139/crates%2Fra_assists%2Fsrc%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fauto_import.rs?ref=6518fb2bf8d970995f517ca222b11894edd61139", "patch": "@@ -1,6 +1,6 @@\n use hir::db::HirDatabase;\n use ra_syntax::{\n-    ast, AstNode, SyntaxNode, Direction, TextRange,\n+    ast::{ self, NameOwner }, AstNode, SyntaxNode, Direction, TextRange,\n     SyntaxKind::{ PATH, PATH_SEGMENT, COLONCOLON, COMMA }\n };\n use crate::assist_ctx::{AssistCtx, Assist, AssistBuilder};\n@@ -513,9 +513,20 @@ pub(crate) fn auto_import(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist\n         return None;\n     }\n \n-    ctx.add_action(format!(\"import {} in the current file\", fmt_segments(&segments)), |edit| {\n-        apply_auto_import(current_file.syntax(), path, &segments, edit);\n-    });\n+    if let Some(module) = path.syntax().ancestors().find_map(ast::Module::cast) {\n+        if let (Some(item_list), Some(name)) = (module.item_list(), module.name()) {\n+            ctx.add_action(\n+                format!(\"import {} in mod {}\", fmt_segments(&segments), name.text()),\n+                |edit| {\n+                    apply_auto_import(item_list.syntax(), path, &segments, edit);\n+                },\n+            );\n+        }\n+    } else {\n+        ctx.add_action(format!(\"import {} in the current file\", fmt_segments(&segments)), |edit| {\n+            apply_auto_import(current_file.syntax(), path, &segments, edit);\n+        });\n+    }\n \n     ctx.build()\n }\n@@ -762,4 +773,27 @@ use std::fmt<|>;\n \",\n         );\n     }\n+\n+    #[test]\n+    fn test_auto_import_file_add_use_no_anchor_in_mod_mod() {\n+        check_assist(\n+            auto_import,\n+            \"\n+mod foo {\n+    mod bar {\n+        std::fmt::Debug<|>\n+    }\n+}\n+    \",\n+            \"\n+mod foo {\n+    mod bar {\n+        use std::fmt::Debug;\n+\n+        Debug<|>\n+    }\n+}\n+    \",\n+        );\n+    }\n }"}]}