{"sha": "b643a0b67942a0f2bd9450c43749aa9beac43895", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NDNhMGI2Nzk0MmEwZjJiZDk0NTBjNDM3NDlhYTliZWFjNDM4OTU=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-07-01T21:08:50Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-07-01T21:08:50Z"}, "message": "doc: add missing space", "tree": {"sha": "14b5aca7e9abb8fa8b93b7eac84fcda581437c8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14b5aca7e9abb8fa8b93b7eac84fcda581437c8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b643a0b67942a0f2bd9450c43749aa9beac43895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b643a0b67942a0f2bd9450c43749aa9beac43895", "html_url": "https://github.com/rust-lang/rust/commit/b643a0b67942a0f2bd9450c43749aa9beac43895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b643a0b67942a0f2bd9450c43749aa9beac43895/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a599c8cef871d842eea0a6217cfce23093d09cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a599c8cef871d842eea0a6217cfce23093d09cf", "html_url": "https://github.com/rust-lang/rust/commit/8a599c8cef871d842eea0a6217cfce23093d09cf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "38221f76c4de5a0a3a19e5357cb2ae53d2a57df1", "filename": "src/libcore/any.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b643a0b67942a0f2bd9450c43749aa9beac43895/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b643a0b67942a0f2bd9450c43749aa9beac43895/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=b643a0b67942a0f2bd9450c43749aa9beac43895", "patch": "@@ -16,7 +16,7 @@\n //! `Any` itself can be used to get a `TypeId`, and has more features when used\n //! as a trait object. As `&Any` (a borrowed trait object), it has the `is` and\n //! `as_ref` methods, to test if the contained value is of a given type, and to\n-//! get a reference to the inner value as a type. As`&mut Any`, there is also\n+//! get a reference to the inner value as a type. As `&mut Any`, there is also\n //! the `as_mut` method, for getting a mutable reference to the inner value.\n //! `Box<Any>` adds the `move` method, which will unwrap a `Box<T>` from the\n //! object.  See the extension traits (`*Ext`) for the full details."}]}