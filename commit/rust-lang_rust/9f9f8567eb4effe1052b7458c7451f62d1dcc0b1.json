{"sha": "9f9f8567eb4effe1052b7458c7451f62d1dcc0b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOWY4NTY3ZWI0ZWZmZTEwNTJiNzQ1OGM3NDUxZjYyZDFkY2MwYjE=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-06-29T18:13:59Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-13T13:37:09Z"}, "message": "Fix rustdoc after rebase", "tree": {"sha": "ea6e7364ca6262de8e3ea987a55f35f064804fa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea6e7364ca6262de8e3ea987a55f35f064804fa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f9f8567eb4effe1052b7458c7451f62d1dcc0b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9f8567eb4effe1052b7458c7451f62d1dcc0b1", "html_url": "https://github.com/rust-lang/rust/commit/9f9f8567eb4effe1052b7458c7451f62d1dcc0b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f9f8567eb4effe1052b7458c7451f62d1dcc0b1/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "533a389962c7bfff1bd38e2395cf63ea0af5b8ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/533a389962c7bfff1bd38e2395cf63ea0af5b8ae", "html_url": "https://github.com/rust-lang/rust/commit/533a389962c7bfff1bd38e2395cf63ea0af5b8ae"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "ce1ad1dddc853bb6b4629c67620a08b0c1dec255", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f9f8567eb4effe1052b7458c7451f62d1dcc0b1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9f8567eb4effe1052b7458c7451f62d1dcc0b1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=9f9f8567eb4effe1052b7458c7451f62d1dcc0b1", "patch": "@@ -1682,6 +1682,7 @@ impl Clean<Type> for hir::Ty {\n     fn clean(&self, cx: &DocContext) -> Type {\n         use rustc::hir::*;\n         match self.node {\n+            TyEmpty => Bottom,\n             TyPtr(ref m) => RawPointer(m.mutbl.clean(cx), box m.ty.clean(cx)),\n             TyRptr(ref l, ref m) =>\n                 BorrowedRef {lifetime: l.clean(cx), mutability: m.mutbl.clean(cx),\n@@ -1790,6 +1791,7 @@ impl Clean<Type> for hir::Ty {\n impl<'tcx> Clean<Type> for ty::Ty<'tcx> {\n     fn clean(&self, cx: &DocContext) -> Type {\n         match self.sty {\n+            ty::TyEmpty => Bottom,\n             ty::TyBool => Primitive(Bool),\n             ty::TyChar => Primitive(Char),\n             ty::TyInt(ast::IntTy::Is) => Primitive(Isize),"}]}