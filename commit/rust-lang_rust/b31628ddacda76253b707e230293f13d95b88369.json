{"sha": "b31628ddacda76253b707e230293f13d95b88369", "node_id": "C_kwDOAAsO6NoAKGIzMTYyOGRkYWNkYTc2MjUzYjcwN2UyMzAyOTNmMTNkOTViODgzNjk", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-14T23:09:33Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-14T23:27:04Z"}, "message": "Don't hardcode the path to `bootstrap_out`\n\nThe `rust-dev` dist component puts binaries in `bootstrap/bin`, but we expected them to be in\n`bootstrap/debug` to match cargo's behavior.  Rather than making the dist component inconsistent\nwith other components, make bootstrap slightly smarter and allow using any path as long as all the\nbinaries are in the same directory.\n\nAs a bonus, this greatly simplifies the logic, and makes it possible for the shell scripts to start\navoiding python.\n\nCo-authored-by: Joshua Nelson <github@jyn.dev>", "tree": {"sha": "b5c1690f0a6011db483289f09d562846d8eece00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5c1690f0a6011db483289f09d562846d8eece00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b31628ddacda76253b707e230293f13d95b88369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b31628ddacda76253b707e230293f13d95b88369", "html_url": "https://github.com/rust-lang/rust/commit/b31628ddacda76253b707e230293f13d95b88369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b31628ddacda76253b707e230293f13d95b88369/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55c040e52964e4ad81b4b2af3c91068a80b92f11", "url": "https://api.github.com/repos/rust-lang/rust/commits/55c040e52964e4ad81b4b2af3c91068a80b92f11", "html_url": "https://github.com/rust-lang/rust/commit/55c040e52964e4ad81b4b2af3c91068a80b92f11"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "2f2b3aed98ef1ea0691da266686db1a1260baecf", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b31628ddacda76253b707e230293f13d95b88369/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b31628ddacda76253b707e230293f13d95b88369/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=b31628ddacda76253b707e230293f13d95b88369", "patch": "@@ -456,19 +456,15 @@ impl Build {\n             .expect(\"failed to read src/version\");\n         let version = version.trim();\n \n-        let bootstrap_out = if std::env::var(\"BOOTSTRAP_PYTHON\").is_ok() {\n-            out.join(\"bootstrap\").join(\"debug\")\n-        } else {\n-            let workspace_target_dir = std::env::var(\"CARGO_TARGET_DIR\")\n-                .map(PathBuf::from)\n-                .unwrap_or_else(|_| src.join(\"target\"));\n-            let bootstrap_out = workspace_target_dir.join(\"debug\");\n-            if !bootstrap_out.join(\"rustc\").exists() && !cfg!(test) {\n-                // this restriction can be lifted whenever https://github.com/rust-lang/rfcs/pull/3028 is implemented\n-                panic!(\"run `cargo build --bins` before `cargo run`\")\n-            }\n-            bootstrap_out\n-        };\n+        let bootstrap_out = std::env::current_exe()\n+            .expect(\"could not determine path to running process\")\n+            .parent()\n+            .unwrap()\n+            .to_path_buf();\n+        if !bootstrap_out.join(\"rustc\").exists() && !cfg!(test) {\n+            // this restriction can be lifted whenever https://github.com/rust-lang/rfcs/pull/3028 is implemented\n+            panic!(\"run `cargo build --bins` before `cargo run`\")\n+        }\n \n         let mut build = Build {\n             initial_rustc: config.initial_rustc.clone(),"}]}