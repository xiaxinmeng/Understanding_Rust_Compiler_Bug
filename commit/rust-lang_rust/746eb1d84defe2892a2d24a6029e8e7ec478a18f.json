{"sha": "746eb1d84defe2892a2d24a6029e8e7ec478a18f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NmViMWQ4NGRlZmUyODkyYTJkMjRhNjAyOWU4ZTdlYzQ3OGExOGY=", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-09-11T15:23:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-11T15:23:41Z"}, "message": "Rollup merge of #88733 - Noble-Mushtak:88577, r=estebank\n\nFix ICE for functions with more than 65535 arguments\n\nThis pull request fixes #88577 by changing the `param_idx` field in the `Param` variant of `WellFormedLoc` from `u16` to `u32`, thus allowing for more than 65,535 arguments in a function. Note that I also added a regression test, but needed to add `// ignore-tidy-filelength` because the test is more than 8000 lines long.", "tree": {"sha": "074197ecd3cd755f37fab6480d69480100cda09c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/074197ecd3cd755f37fab6480d69480100cda09c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/746eb1d84defe2892a2d24a6029e8e7ec478a18f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhPMn9CRBK7hj4Ov3rIwAAhwMIADVbdUovnXNk+YW93veTE/05\nJUDXOtUq6zoZCgCbhej1zY4ac8cRGVuuRezDxV8loFVg/fYO3b9l3nUrLd4d48QA\nxuBBcNi+ASPQR/rQpq9cYAZdJRDrvsaM+ljVGiXC41PlHYOR3Ehc07W5evHj4/pa\n3RQluBgq4jfHlqurflu06K3sl82Bt/DosEEAviYzb4jTt7ZdkzcyyBuVityoew0+\nebZ+nuPqwtUIJTr72KeMPDuV2W1IKuXrLO7/gM88JROzCkyDmBejO5bzutwnGtvS\nVtX86ffEhqTS+/tAYWdfabN34CVB3LxyKq8j2d2qT3t/6+ug9eBI83NKYL8DmLs=\n=hxbZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 074197ecd3cd755f37fab6480d69480100cda09c\nparent 7b514cdcfed05f6f09dfb529ea6669cff2796593\nparent 804ccfaaabf6658b80d7b99828609986692a81ef\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1631373821 -0700\ncommitter GitHub <noreply@github.com> 1631373821 -0700\n\nRollup merge of #88733 - Noble-Mushtak:88577, r=estebank\n\nFix ICE for functions with more than 65535 arguments\n\nThis pull request fixes #88577 by changing the `param_idx` field in the `Param` variant of `WellFormedLoc` from `u16` to `u32`, thus allowing for more than 65,535 arguments in a function. Note that I also added a regression test, but needed to add `// ignore-tidy-filelength` because the test is more than 8000 lines long.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/746eb1d84defe2892a2d24a6029e8e7ec478a18f", "html_url": "https://github.com/rust-lang/rust/commit/746eb1d84defe2892a2d24a6029e8e7ec478a18f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/746eb1d84defe2892a2d24a6029e8e7ec478a18f/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b514cdcfed05f6f09dfb529ea6669cff2796593", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b514cdcfed05f6f09dfb529ea6669cff2796593", "html_url": "https://github.com/rust-lang/rust/commit/7b514cdcfed05f6f09dfb529ea6669cff2796593"}, {"sha": "804ccfaaabf6658b80d7b99828609986692a81ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/804ccfaaabf6658b80d7b99828609986692a81ef", "html_url": "https://github.com/rust-lang/rust/commit/804ccfaaabf6658b80d7b99828609986692a81ef"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "e9dce953c73888e3e80ea8258117bc3ac7a81878", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/746eb1d84defe2892a2d24a6029e8e7ec478a18f/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/746eb1d84defe2892a2d24a6029e8e7ec478a18f/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=746eb1d84defe2892a2d24a6029e8e7ec478a18f", "patch": "@@ -422,11 +422,25 @@ impl<'a> AstValidator<'a> {\n     }\n \n     fn check_fn_decl(&self, fn_decl: &FnDecl, self_semantic: SelfSemantic) {\n+        self.check_decl_num_args(fn_decl);\n         self.check_decl_cvaradic_pos(fn_decl);\n         self.check_decl_attrs(fn_decl);\n         self.check_decl_self_param(fn_decl, self_semantic);\n     }\n \n+    /// Emits fatal error if function declaration has more than `u16::MAX` arguments\n+    /// Error is fatal to prevent errors during typechecking\n+    fn check_decl_num_args(&self, fn_decl: &FnDecl) {\n+        let max_num_args: usize = u16::MAX.into();\n+        if fn_decl.inputs.len() > max_num_args {\n+            let Param { span, .. } = fn_decl.inputs[0];\n+            self.err_handler().span_fatal(\n+                span,\n+                &format!(\"function can not have more than {} arguments\", max_num_args),\n+            );\n+        }\n+    }\n+\n     fn check_decl_cvaradic_pos(&self, fn_decl: &FnDecl) {\n         match &*fn_decl.inputs {\n             [Param { ty, span, .. }] => {"}, {"sha": "e50cc586515a626d4a64284cc57c1c60bbbc7ff7", "filename": "src/test/ui/type/type-check/issue-88577-check-fn-with-more-than-65535-arguments.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/746eb1d84defe2892a2d24a6029e8e7ec478a18f/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fissue-88577-check-fn-with-more-than-65535-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/746eb1d84defe2892a2d24a6029e8e7ec478a18f/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fissue-88577-check-fn-with-more-than-65535-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fissue-88577-check-fn-with-more-than-65535-arguments.rs?ref=746eb1d84defe2892a2d24a6029e8e7ec478a18f", "patch": "@@ -0,0 +1,12 @@\n+macro_rules! many_args {\n+    ([$($t:tt)*]#$($h:tt)*) => {\n+        many_args!{[$($t)*$($t)*]$($h)*}\n+    };\n+    ([$($t:tt)*]) => {\n+        fn _f($($t: ()),*) {} //~ ERROR function can not have more than 65535 arguments\n+    }\n+}\n+\n+many_args!{[_]########## ######}\n+\n+fn main() {}"}, {"sha": "615fd2ccb04af04942a0d40d12aeffb7274f0a48", "filename": "src/test/ui/type/type-check/issue-88577-check-fn-with-more-than-65535-arguments.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/746eb1d84defe2892a2d24a6029e8e7ec478a18f/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fissue-88577-check-fn-with-more-than-65535-arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/746eb1d84defe2892a2d24a6029e8e7ec478a18f/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fissue-88577-check-fn-with-more-than-65535-arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fissue-88577-check-fn-with-more-than-65535-arguments.stderr?ref=746eb1d84defe2892a2d24a6029e8e7ec478a18f", "patch": "@@ -0,0 +1,13 @@\n+error: function can not have more than 65535 arguments\n+  --> $DIR/issue-88577-check-fn-with-more-than-65535-arguments.rs:6:24\n+   |\n+LL |           fn _f($($t: ()),*) {}\n+   |  ________________________^\n+LL | |     }\n+LL | | }\n+LL | |\n+LL | | many_args!{[_]########## ######}\n+   | |____________^\n+\n+error: aborting due to previous error\n+"}]}