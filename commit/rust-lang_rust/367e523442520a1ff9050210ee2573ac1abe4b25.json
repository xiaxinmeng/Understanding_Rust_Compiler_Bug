{"sha": "367e523442520a1ff9050210ee2573ac1abe4b25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2N2U1MjM0NDI1MjBhMWZmOTA1MDIxMGVlMjU3M2FjMWFiZTRiMjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-25T13:04:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-25T13:04:47Z"}, "message": "Require semi after exprs", "tree": {"sha": "89d535ef0d429747c087bed1b3c1f25676d5c8dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89d535ef0d429747c087bed1b3c1f25676d5c8dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/367e523442520a1ff9050210ee2573ac1abe4b25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/367e523442520a1ff9050210ee2573ac1abe4b25", "html_url": "https://github.com/rust-lang/rust/commit/367e523442520a1ff9050210ee2573ac1abe4b25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/367e523442520a1ff9050210ee2573ac1abe4b25/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a80c07bdffc8aa9e1645339c004c12c94e60e402", "url": "https://api.github.com/repos/rust-lang/rust/commits/a80c07bdffc8aa9e1645339c004c12c94e60e402", "html_url": "https://github.com/rust-lang/rust/commit/a80c07bdffc8aa9e1645339c004c12c94e60e402"}], "stats": {"total": 84, "additions": 70, "deletions": 14}, "files": [{"sha": "fb702a39871a7f11505b1775e65d391bc908c87c", "filename": "crates/libsyntax2/src/grammar/expressions/mod.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs?ref=367e523442520a1ff9050210ee2573ac1abe4b25", "patch": "@@ -51,10 +51,15 @@ pub(crate) fn block(p: &mut Parser) {\n                     // fn foo() { pub 92; } //FIXME\n                     items::MaybeItem::None => {\n                         let is_blocklike = expressions::expr_stmt(p) == BlockLike::Block;\n-                        if p.eat(SEMI) || (is_blocklike && !p.at(R_CURLY)) {\n-                            m.complete(p, EXPR_STMT);\n-                        } else {\n+                        if p.at(R_CURLY) {\n                             m.abandon(p);\n+                        } else {\n+                            if is_blocklike {\n+                                p.eat(SEMI);\n+                            } else {\n+                                p.expect(SEMI);\n+                            }\n+                            m.complete(p, EXPR_STMT);\n                         }\n                     }\n                 }"}, {"sha": "400442c515c4e1d6a8f65712b6649e5775424bd3", "filename": "crates/libsyntax2/tests/data/parser/err/0010_unsafe_lambda_block.txt", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0010_unsafe_lambda_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0010_unsafe_lambda_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0010_unsafe_lambda_block.txt?ref=367e523442520a1ff9050210ee2573ac1abe4b25", "patch": "@@ -11,17 +11,19 @@ ROOT@[0; 42)\n     BLOCK@[10; 41)\n       L_CURLY@[10; 11)\n       WHITESPACE@[11; 16)\n-      LAMBDA_EXPR@[16; 24)\n-        PARAM_LIST@[16; 18)\n-          PIPE@[16; 17)\n-          PIPE@[17; 18)\n-        WHITESPACE@[18; 19)\n-        THIN_ARROW@[19; 21)\n-        WHITESPACE@[21; 22)\n-        TUPLE_TYPE@[22; 24)\n-          L_PAREN@[22; 23)\n-          R_PAREN@[23; 24)\n-          err: `expected a block`\n+      EXPR_STMT@[16; 24)\n+        LAMBDA_EXPR@[16; 24)\n+          PARAM_LIST@[16; 18)\n+            PIPE@[16; 17)\n+            PIPE@[17; 18)\n+          WHITESPACE@[18; 19)\n+          THIN_ARROW@[19; 21)\n+          WHITESPACE@[21; 22)\n+          TUPLE_TYPE@[22; 24)\n+            L_PAREN@[22; 23)\n+            R_PAREN@[23; 24)\n+            err: `expected a block`\n+            err: `expected SEMI`\n       WHITESPACE@[24; 25)\n       EXPR_STMT@[25; 39)\n         BLOCK_EXPR@[25; 38)"}, {"sha": "9ae8576861908f85650385a43889dee5231bb631", "filename": "crates/libsyntax2/tests/data/parser/err/0016_missing_semi.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0016_missing_semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0016_missing_semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0016_missing_semi.rs?ref=367e523442520a1ff9050210ee2573ac1abe4b25", "patch": "@@ -0,0 +1,6 @@\n+fn foo() {\n+    foo(\n+        1, 2\n+    )\n+    return 92;\n+}"}, {"sha": "a3163adcbfbd04f2bcfa2360c00c586825f61602", "filename": "crates/libsyntax2/tests/data/parser/err/0016_missing_semi.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0016_missing_semi.txt", "raw_url": "https://github.com/rust-lang/rust/raw/367e523442520a1ff9050210ee2573ac1abe4b25/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0016_missing_semi.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0016_missing_semi.txt?ref=367e523442520a1ff9050210ee2573ac1abe4b25", "patch": "@@ -0,0 +1,43 @@\n+ROOT@[0; 56)\n+  FN_DEF@[0; 55)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK@[9; 55)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      EXPR_STMT@[15; 38)\n+        CALL_EXPR@[15; 38)\n+          PATH_EXPR@[15; 18)\n+            PATH@[15; 18)\n+              PATH_SEGMENT@[15; 18)\n+                NAME_REF@[15; 18)\n+                  IDENT@[15; 18) \"foo\"\n+          ARG_LIST@[18; 38)\n+            L_PAREN@[18; 19)\n+            WHITESPACE@[19; 28)\n+            LITERAL@[28; 29)\n+              INT_NUMBER@[28; 29) \"1\"\n+            COMMA@[29; 30)\n+            WHITESPACE@[30; 31)\n+            LITERAL@[31; 32)\n+              INT_NUMBER@[31; 32) \"2\"\n+            WHITESPACE@[32; 37)\n+            R_PAREN@[37; 38)\n+            err: `expected SEMI`\n+      WHITESPACE@[38; 43)\n+      EXPR_STMT@[43; 53)\n+        RETURN_EXPR@[43; 52)\n+          RETURN_KW@[43; 49)\n+          WHITESPACE@[49; 50)\n+          LITERAL@[50; 52)\n+            INT_NUMBER@[50; 52) \"92\"\n+        SEMI@[52; 53)\n+      WHITESPACE@[53; 54)\n+      R_CURLY@[54; 55)\n+  WHITESPACE@[55; 56)"}]}