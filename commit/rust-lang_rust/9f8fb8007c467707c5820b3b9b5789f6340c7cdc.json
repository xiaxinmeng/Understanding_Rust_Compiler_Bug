{"sha": "9f8fb8007c467707c5820b3b9b5789f6340c7cdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOGZiODAwN2M0Njc3MDdjNTgyMGIzYjliNTc4OWY2MzQwYzdjZGM=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-01-13T11:09:30Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-01-13T11:09:30Z"}, "message": "Add run-rustfix to excessive_precision test", "tree": {"sha": "9cfaf58cca1f011818966786bbedebbd9ee22815", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cfaf58cca1f011818966786bbedebbd9ee22815"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f8fb8007c467707c5820b3b9b5789f6340c7cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8fb8007c467707c5820b3b9b5789f6340c7cdc", "html_url": "https://github.com/rust-lang/rust/commit/9f8fb8007c467707c5820b3b9b5789f6340c7cdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f8fb8007c467707c5820b3b9b5789f6340c7cdc/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29211be896f0560789f397033bcc79d321e44e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/29211be896f0560789f397033bcc79d321e44e16", "html_url": "https://github.com/rust-lang/rust/commit/29211be896f0560789f397033bcc79d321e44e16"}], "stats": {"total": 102, "additions": 83, "deletions": 19}, "files": [{"sha": "1646dff9064df4d9fb27a785db979418f747488c", "filename": "tests/ui/excessive_precision.fixed", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/9f8fb8007c467707c5820b3b9b5789f6340c7cdc/tests%2Fui%2Fexcessive_precision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9f8fb8007c467707c5820b3b9b5789f6340c7cdc/tests%2Fui%2Fexcessive_precision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.fixed?ref=9f8fb8007c467707c5820b3b9b5789f6340c7cdc", "patch": "@@ -0,0 +1,63 @@\n+// run-rustfix\n+#![warn(clippy::excessive_precision)]\n+#![allow(dead_code, unused_variables, clippy::print_literal)]\n+\n+fn main() {\n+    // Consts\n+    const GOOD32: f32 = 0.123_456;\n+    const GOOD32_SM: f32 = 0.000_000_000_1;\n+    const GOOD32_DOT: f32 = 10_000_000_000.0;\n+    const GOOD32_EDGE: f32 = 1.000_000_8;\n+    const GOOD64: f64 = 0.123_456_789_012;\n+    const GOOD64_SM: f32 = 0.000_000_000_000_000_1;\n+    const GOOD64_DOT: f32 = 10_000_000_000_000_000.0;\n+\n+    const BAD32_1: f32 = 0.123_456_79;\n+    const BAD32_2: f32 = 0.123_456_79;\n+    const BAD32_3: f32 = 0.1;\n+    const BAD32_EDGE: f32 = 1.000_001;\n+\n+    const BAD64_1: f64 = 0.123_456_789_012_345_66;\n+    const BAD64_2: f64 = 0.123_456_789_012_345_66;\n+    const BAD64_3: f64 = 0.1;\n+\n+    // Literal as param\n+    println!(\"{:?}\", 8.888_888_888_888_89);\n+\n+    // // TODO add inferred type tests for f32\n+    // Locals\n+    let good32: f32 = 0.123_456_f32;\n+    let good32_2: f32 = 0.123_456;\n+\n+    let good64: f64 = 0.123_456_789_012;\n+    let good64_suf: f64 = 0.123_456_789_012f64;\n+    let good64_inf = 0.123_456_789_012;\n+\n+    let bad32: f32 = 1.123_456_8;\n+    let bad32_suf: f32 = 1.123_456_8;\n+    let bad32_inf = 1.123_456_8;\n+\n+    let bad64: f64 = 0.123_456_789_012_345_66;\n+    let bad64_suf: f64 = 0.123_456_789_012_345_66;\n+    let bad64_inf = 0.123_456_789_012_345_66;\n+\n+    // Vectors\n+    let good_vec32: Vec<f32> = vec![0.123_456];\n+    let good_vec64: Vec<f64> = vec![0.123_456_789];\n+\n+    let bad_vec32: Vec<f32> = vec![0.123_456_79];\n+    let bad_vec64: Vec<f64> = vec![0.123_456_789_123_456_78];\n+\n+    // Exponential float notation\n+    let good_e32: f32 = 1e-10;\n+    let bad_e32: f32 = 1.123_456_8e-10;\n+\n+    let good_bige32: f32 = 1E-10;\n+    let bad_bige32: f32 = 1.123_456_8E-10;\n+\n+    // Inferred type\n+    let good_inferred: f32 = 1f32 * 1_000_000_000.;\n+\n+    // issue #2840\n+    let num = 0.000_000_000_01e-10f64;\n+}"}, {"sha": "ce4722a90f9002edd571d1d2123861905f5726c3", "filename": "tests/ui/excessive_precision.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f8fb8007c467707c5820b3b9b5789f6340c7cdc/tests%2Fui%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f8fb8007c467707c5820b3b9b5789f6340c7cdc/tests%2Fui%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.rs?ref=9f8fb8007c467707c5820b3b9b5789f6340c7cdc", "patch": "@@ -1,5 +1,6 @@\n+// run-rustfix\n #![warn(clippy::excessive_precision)]\n-#![allow(clippy::print_literal)]\n+#![allow(dead_code, unused_variables, clippy::print_literal)]\n \n fn main() {\n     // Consts"}, {"sha": "12f8a61b75c5a0f25420b142c2074c460d706c4c", "filename": "tests/ui/excessive_precision.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/9f8fb8007c467707c5820b3b9b5789f6340c7cdc/tests%2Fui%2Fexcessive_precision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f8fb8007c467707c5820b3b9b5789f6340c7cdc/tests%2Fui%2Fexcessive_precision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.stderr?ref=9f8fb8007c467707c5820b3b9b5789f6340c7cdc", "patch": "@@ -1,109 +1,109 @@\n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:14:26\n+  --> $DIR/excessive_precision.rs:15:26\n    |\n LL |     const BAD32_1: f32 = 0.123_456_789_f32;\n    |                          ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n    |\n    = note: `-D clippy::excessive-precision` implied by `-D warnings`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:15:26\n+  --> $DIR/excessive_precision.rs:16:26\n    |\n LL |     const BAD32_2: f32 = 0.123_456_789;\n    |                          ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:16:26\n+  --> $DIR/excessive_precision.rs:17:26\n    |\n LL |     const BAD32_3: f32 = 0.100_000_000_000_1;\n    |                          ^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.1`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:17:29\n+  --> $DIR/excessive_precision.rs:18:29\n    |\n LL |     const BAD32_EDGE: f32 = 1.000_000_9;\n    |                             ^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.000_001`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:19:26\n+  --> $DIR/excessive_precision.rs:20:26\n    |\n LL |     const BAD64_1: f64 = 0.123_456_789_012_345_67f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:20:26\n+  --> $DIR/excessive_precision.rs:21:26\n    |\n LL |     const BAD64_2: f64 = 0.123_456_789_012_345_67;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:21:26\n+  --> $DIR/excessive_precision.rs:22:26\n    |\n LL |     const BAD64_3: f64 = 0.100_000_000_000_000_000_1;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.1`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:24:22\n+  --> $DIR/excessive_precision.rs:25:22\n    |\n LL |     println!(\"{:?}\", 8.888_888_888_888_888_888_888);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `8.888_888_888_888_89`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:35:22\n+  --> $DIR/excessive_precision.rs:36:22\n    |\n LL |     let bad32: f32 = 1.123_456_789;\n    |                      ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:36:26\n+  --> $DIR/excessive_precision.rs:37:26\n    |\n LL |     let bad32_suf: f32 = 1.123_456_789_f32;\n    |                          ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:37:21\n+  --> $DIR/excessive_precision.rs:38:21\n    |\n LL |     let bad32_inf = 1.123_456_789_f32;\n    |                     ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:39:22\n+  --> $DIR/excessive_precision.rs:40:22\n    |\n LL |     let bad64: f64 = 0.123_456_789_012_345_67;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:40:26\n+  --> $DIR/excessive_precision.rs:41:26\n    |\n LL |     let bad64_suf: f64 = 0.123_456_789_012_345_67f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:41:21\n+  --> $DIR/excessive_precision.rs:42:21\n    |\n LL |     let bad64_inf = 0.123_456_789_012_345_67;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:47:36\n+  --> $DIR/excessive_precision.rs:48:36\n    |\n LL |     let bad_vec32: Vec<f32> = vec![0.123_456_789];\n    |                                    ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:48:36\n+  --> $DIR/excessive_precision.rs:49:36\n    |\n LL |     let bad_vec64: Vec<f64> = vec![0.123_456_789_123_456_789];\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_123_456_78`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:52:24\n+  --> $DIR/excessive_precision.rs:53:24\n    |\n LL |     let bad_e32: f32 = 1.123_456_788_888e-10;\n    |                        ^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8e-10`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:55:27\n+  --> $DIR/excessive_precision.rs:56:27\n    |\n LL |     let bad_bige32: f32 = 1.123_456_788_888E-10;\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8E-10`"}]}