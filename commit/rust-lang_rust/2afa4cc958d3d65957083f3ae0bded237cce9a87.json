{"sha": "2afa4cc958d3d65957083f3ae0bded237cce9a87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZmE0Y2M5NThkM2Q2NTk1NzA4M2YzYWUwYmRlZDIzN2NjZTlhODc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-27T12:29:23Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-27T12:29:23Z"}, "message": "Use DebugStruct::finish_non_exhaustive() in std.", "tree": {"sha": "4b8de9e1a21719743462e365ad244d661d7b4043", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b8de9e1a21719743462e365ad244d661d7b4043"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2afa4cc958d3d65957083f3ae0bded237cce9a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2afa4cc958d3d65957083f3ae0bded237cce9a87", "html_url": "https://github.com/rust-lang/rust/commit/2afa4cc958d3d65957083f3ae0bded237cce9a87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2afa4cc958d3d65957083f3ae0bded237cce9a87/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "html_url": "https://github.com/rust-lang/rust/commit/feaac19f1710ebcfecc783d51f52a9b0d8e998f5"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "3dcc5cd2b5911f1651734d7ab923b33419983b9c", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -1793,7 +1793,7 @@ impl<'a, K, V, S> RawVacantEntryMut<'a, K, V, S> {\n #[unstable(feature = \"hash_raw_entry\", issue = \"56167\")]\n impl<K, V, S> Debug for RawEntryBuilderMut<'_, K, V, S> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"RawEntryBuilder\").finish()\n+        f.debug_struct(\"RawEntryBuilder\").finish_non_exhaustive()\n     }\n }\n \n@@ -1813,21 +1813,21 @@ impl<K: Debug, V: Debug, S> Debug for RawOccupiedEntryMut<'_, K, V, S> {\n         f.debug_struct(\"RawOccupiedEntryMut\")\n             .field(\"key\", self.key())\n             .field(\"value\", self.get())\n-            .finish()\n+            .finish_non_exhaustive()\n     }\n }\n \n #[unstable(feature = \"hash_raw_entry\", issue = \"56167\")]\n impl<K, V, S> Debug for RawVacantEntryMut<'_, K, V, S> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"RawVacantEntryMut\").finish()\n+        f.debug_struct(\"RawVacantEntryMut\").finish_non_exhaustive()\n     }\n }\n \n #[unstable(feature = \"hash_raw_entry\", issue = \"56167\")]\n impl<K, V, S> Debug for RawEntryBuilder<'_, K, V, S> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"RawEntryBuilder\").finish()\n+        f.debug_struct(\"RawEntryBuilder\").finish_non_exhaustive()\n     }\n }\n \n@@ -1867,7 +1867,10 @@ pub struct OccupiedEntry<'a, K: 'a, V: 'a> {\n #[stable(feature = \"debug_hash_map\", since = \"1.12.0\")]\n impl<K: Debug, V: Debug> Debug for OccupiedEntry<'_, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"OccupiedEntry\").field(\"key\", self.key()).field(\"value\", self.get()).finish()\n+        f.debug_struct(\"OccupiedEntry\")\n+            .field(\"key\", self.key())\n+            .field(\"value\", self.get())\n+            .finish_non_exhaustive()\n     }\n }\n \n@@ -1903,7 +1906,7 @@ impl<K: Debug, V: Debug> Debug for OccupiedError<'_, K, V> {\n             .field(\"key\", self.entry.key())\n             .field(\"old_value\", self.entry.get())\n             .field(\"new_value\", &self.value)\n-            .finish()\n+            .finish_non_exhaustive()\n     }\n }\n "}, {"sha": "8da6ced03a8cd9afb64bd9f42ae8a73dd5d34047", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -1154,7 +1154,7 @@ impl fmt::Debug for Metadata {\n             .field(\"modified\", &self.modified())\n             .field(\"accessed\", &self.accessed())\n             .field(\"created\", &self.created())\n-            .finish()\n+            .finish_non_exhaustive()\n     }\n }\n "}, {"sha": "d7b620d6f9177f297c1ed391f7aef70e3b87a55c", "filename": "library/std/src/io/buffered/linewriter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Flinewriter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Flinewriter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Flinewriter.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -227,6 +227,6 @@ where\n                 \"buffer\",\n                 &format_args!(\"{}/{}\", self.inner.buffer().len(), self.inner.capacity()),\n             )\n-            .finish()\n+            .finish_non_exhaustive()\n     }\n }"}, {"sha": "ca86e569bc1278a845bb0368b577f52906c2b9ad", "filename": "library/std/src/lazy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flazy.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -515,7 +515,7 @@ pub struct SyncLazy<T, F = fn() -> T> {\n #[unstable(feature = \"once_cell\", issue = \"74465\")]\n impl<T: fmt::Debug, F> fmt::Debug for SyncLazy<T, F> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"Lazy\").field(\"cell\", &self.cell).field(\"init\", &\"..\").finish()\n+        f.debug_struct(\"Lazy\").field(\"cell\", &self.cell).finish_non_exhaustive()\n     }\n }\n "}, {"sha": "5690de681cab94b677c55e12e947f29f7ddd5a68", "filename": "library/std/src/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -234,7 +234,7 @@ impl fmt::Debug for Child {\n             .field(\"stdin\", &self.stdin)\n             .field(\"stdout\", &self.stdout)\n             .field(\"stderr\", &self.stderr)\n-            .finish()\n+            .finish_non_exhaustive()\n     }\n }\n "}, {"sha": "c8f0a6b99fe6b37ce0c00bd6b5db590cec742a33", "filename": "library/std/src/sync/mpsc/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -864,7 +864,7 @@ impl<T> Drop for Sender<T> {\n #[stable(feature = \"mpsc_debug\", since = \"1.8.0\")]\n impl<T> fmt::Debug for Sender<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"Sender\").finish()\n+        f.debug_struct(\"Sender\").finish_non_exhaustive()\n     }\n }\n \n@@ -991,7 +991,7 @@ impl<T> Drop for SyncSender<T> {\n #[stable(feature = \"mpsc_debug\", since = \"1.8.0\")]\n impl<T> fmt::Debug for SyncSender<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"SyncSender\").finish()\n+        f.debug_struct(\"SyncSender\").finish_non_exhaustive()\n     }\n }\n \n@@ -1470,7 +1470,7 @@ impl<T> Drop for Receiver<T> {\n #[stable(feature = \"mpsc_debug\", since = \"1.8.0\")]\n impl<T> fmt::Debug for Receiver<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"Receiver\").finish()\n+        f.debug_struct(\"Receiver\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "ed0f03e4b710b60faf57d7de28f34d53524364e6", "filename": "library/std/src/sys/wasi/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -130,7 +130,7 @@ impl FileType {\n \n impl fmt::Debug for ReadDir {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"ReadDir\").finish()\n+        f.debug_struct(\"ReadDir\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "ffdf4be1584574df92104cf77514bc2564aa921b", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2afa4cc958d3d65957083f3ae0bded237cce9a87/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=2afa4cc958d3d65957083f3ae0bded237cce9a87", "patch": "@@ -1176,7 +1176,10 @@ impl Thread {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Debug for Thread {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"Thread\").field(\"id\", &self.id()).field(\"name\", &self.name()).finish()\n+        f.debug_struct(\"Thread\")\n+            .field(\"id\", &self.id())\n+            .field(\"name\", &self.name())\n+            .finish_non_exhaustive()\n     }\n }\n "}]}