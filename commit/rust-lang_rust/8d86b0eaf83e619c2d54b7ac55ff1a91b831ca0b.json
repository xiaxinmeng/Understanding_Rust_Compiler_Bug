{"sha": "8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkODZiMGVhZjgzZTYxOWMyZDU0YjdhYzU1ZmYxYTkxYjgzMWNhMGI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-27T16:35:32Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-27T16:35:32Z"}, "message": "Do not use 'cargo manifest' anymore as it is deprecated", "tree": {"sha": "a889255cce5db1cf1636130a40748725f4c9060c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a889255cce5db1cf1636130a40748725f4c9060c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b", "html_url": "https://github.com/rust-lang/rust/commit/8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a59654b4191b4ed1c71575e7fdfe0dac5c8b4a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a59654b4191b4ed1c71575e7fdfe0dac5c8b4a3", "html_url": "https://github.com/rust-lang/rust/commit/0a59654b4191b4ed1c71575e7fdfe0dac5c8b4a3"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "e8ee918b1205372805e893bd08da95652f576fd9", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=8d86b0eaf83e619c2d54b7ac55ff1a91b831ca0b", "patch": "@@ -208,29 +208,9 @@ impl WorkspaceHitlist {\n // Returns a vector of all compile targets of a crate\n fn get_targets(workspace_hitlist: &WorkspaceHitlist) -> Result<Vec<Target>, std::io::Error> {\n     let mut targets: Vec<Target> = vec![];\n-    if *workspace_hitlist == WorkspaceHitlist::None {\n-        let output = Command::new(\"cargo\").arg(\"read-manifest\").output()?;\n-        if output.status.success() {\n-            // None of the unwraps should fail if output of `cargo read-manifest` is correct\n-            let data = &String::from_utf8(output.stdout).unwrap();\n-            let json: Value = json::from_str(data).unwrap();\n-            let json_obj = json.as_object().unwrap();\n-            let jtargets = json_obj.get(\"targets\").unwrap().as_array().unwrap();\n-            for jtarget in jtargets {\n-                targets.push(target_from_json(jtarget));\n-            }\n \n-            return Ok(targets);\n         }\n-        return Err(std::io::Error::new(\n-            std::io::ErrorKind::NotFound,\n-            str::from_utf8(&output.stderr).unwrap(),\n-        ));\n     }\n-    // This happens when cargo-fmt is not used inside a crate or\n-    // is used inside a workspace.\n-    // To ensure backward compatability, we only use `cargo metadata` for workspaces.\n-    // TODO: Is it possible only use metadata or read-manifest\n     let output = Command::new(\"cargo\")\n         .arg(\"metadata\")\n         .arg(\"--no-deps\")\n@@ -275,12 +255,6 @@ fn get_targets(workspace_hitlist: &WorkspaceHitlist) -> Result<Vec<Target>, std:\n                 targets.push(target_from_json(jtarget));\n             }\n         }\n-        return Ok(targets);\n-    }\n-    Err(std::io::Error::new(\n-        std::io::ErrorKind::NotFound,\n-        str::from_utf8(&output.stderr).unwrap(),\n-    ))\n }\n \n fn target_from_json(jtarget: &Value) -> Target {"}]}