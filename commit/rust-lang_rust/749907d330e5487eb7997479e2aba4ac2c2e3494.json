{"sha": "749907d330e5487eb7997479e2aba4ac2c2e3494", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0OTkwN2QzMzBlNTQ4N2ViNzk5NzQ3OWUyYWJhNGFjMmMyZTM0OTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T07:38:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T07:38:53Z"}, "message": "simplify", "tree": {"sha": "0668eeb5ba9cbc8e1eb1b6e6ae3de70cf6aaa2a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0668eeb5ba9cbc8e1eb1b6e6ae3de70cf6aaa2a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/749907d330e5487eb7997479e2aba4ac2c2e3494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/749907d330e5487eb7997479e2aba4ac2c2e3494", "html_url": "https://github.com/rust-lang/rust/commit/749907d330e5487eb7997479e2aba4ac2c2e3494", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/749907d330e5487eb7997479e2aba4ac2c2e3494/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "febbc9acdd0166530499b9b129ee703fcbfbe978", "url": "https://api.github.com/repos/rust-lang/rust/commits/febbc9acdd0166530499b9b129ee703fcbfbe978", "html_url": "https://github.com/rust-lang/rust/commit/febbc9acdd0166530499b9b129ee703fcbfbe978"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "fdb4718ba697b2bb8c87446147024c026c8ed316", "filename": "crates/libsyntax2/src/grammar/expressions/atom.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=749907d330e5487eb7997479e2aba4ac2c2e3494", "patch": "@@ -18,7 +18,7 @@ pub(crate) const LITERAL_FIRST: TokenSet =\n                STRING, RAW_STRING, BYTE_STRING, RAW_BYTE_STRING];\n \n pub(crate) fn literal(p: &mut Parser) -> Option<CompletedMarker> {\n-    if !LITERAL_FIRST.contains(p.current()) {\n+    if !p.at_ts(LITERAL_FIRST) {\n         return None;\n     }\n     let m = p.start();\n@@ -108,7 +108,7 @@ fn tuple_expr(p: &mut Parser) -> CompletedMarker {\n     let mut saw_expr = false;\n     while !p.at(EOF) && !p.at(R_PAREN) {\n         saw_expr = true;\n-        if !EXPR_FIRST.contains(p.current()) {\n+        if !p.at_ts(EXPR_FIRST) {\n             p.error(\"expected expression\");\n             break;\n         }\n@@ -147,7 +147,7 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n         if p.at(R_BRACK) {\n             break;\n         }\n-        if !EXPR_FIRST.contains(p.current()) {\n+        if !p.at_ts(EXPR_FIRST) {\n             p.error(\"expected expression\");\n             break;\n         }\n@@ -360,7 +360,7 @@ fn return_expr(p: &mut Parser) -> CompletedMarker {\n     assert!(p.at(RETURN_KW));\n     let m = p.start();\n     p.bump();\n-    if EXPR_FIRST.contains(p.current()) {\n+    if p.at_ts(EXPR_FIRST) {\n         expr(p);\n     }\n     m.complete(p, RETURN_EXPR)\n@@ -395,7 +395,7 @@ fn break_expr(p: &mut Parser) -> CompletedMarker {\n     let m = p.start();\n     p.bump();\n     p.eat(LIFETIME);\n-    if EXPR_FIRST.contains(p.current()) {\n+    if p.at_ts(EXPR_FIRST) {\n         expr(p);\n     }\n     m.complete(p, BREAK_EXPR)"}, {"sha": "d5ee91ad844dca18d1b59b189d85c38206d41904", "filename": "crates/libsyntax2/src/grammar/expressions/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs?ref=749907d330e5487eb7997479e2aba4ac2c2e3494", "patch": "@@ -236,7 +236,7 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<CompletedMarker> {\n         DOTDOT => {\n             m = p.start();\n             p.bump();\n-            if EXPR_FIRST.contains(p.current()) {\n+            if p.at_ts(EXPR_FIRST) {\n                 expr_bp(p, r, 2);\n             }\n             return Some(m.complete(p, RANGE_EXPR));\n@@ -376,7 +376,7 @@ fn arg_list(p: &mut Parser) {\n     let m = p.start();\n     p.bump();\n     while !p.at(R_PAREN) && !p.at(EOF) {\n-        if !EXPR_FIRST.contains(p.current()) {\n+        if !p.at_ts(EXPR_FIRST) {\n             p.error(\"expected expression\");\n             break;\n         }"}, {"sha": "903c2593998417e963f88272bdb547e5d721494a", "filename": "crates/libsyntax2/src/grammar/params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fparams.rs?ref=749907d330e5487eb7997479e2aba4ac2c2e3494", "patch": "@@ -48,7 +48,7 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n         opt_self_param(p);\n     }\n     while !p.at(EOF) && !p.at(ket) {\n-        if !VALUE_PARAMETER_FIRST.contains(p.current()) {\n+        if !p.at_ts(VALUE_PARAMETER_FIRST) {\n             p.error(\"expected value parameter\");\n             break;\n         }"}, {"sha": "6dd3ab2fa145402b68a9ee95cf07dc53b4acfba8", "filename": "crates/libsyntax2/src/grammar/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=749907d330e5487eb7997479e2aba4ac2c2e3494", "patch": "@@ -102,7 +102,7 @@ fn tuple_pat_fields(p: &mut Parser) {\n         match p.current() {\n             DOTDOT => p.bump(),\n             _ => {\n-                if !PATTERN_FIRST.contains(p.current()) {\n+                if !p.at_ts(PATTERN_FIRST) {\n                     p.error(\"expected a pattern\");\n                     break;\n                 }"}, {"sha": "7d97159dd060d43e06e1bdb372589600bbda758d", "filename": "crates/libsyntax2/src/parser_api.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749907d330e5487eb7997479e2aba4ac2c2e3494/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs?ref=749907d330e5487eb7997479e2aba4ac2c2e3494", "patch": "@@ -35,6 +35,11 @@ impl<'t> Parser<'t> {\n         self.current() == kind\n     }\n \n+    /// Checks if the current token is `kind`.\n+    pub(crate) fn at_ts(&self, kinds: TokenSet) -> bool {\n+        kinds.contains(self.current())\n+    }\n+\n     pub(crate) fn next2(&self) -> Option<(SyntaxKind, SyntaxKind)> {\n         self.0.next2()\n     }"}]}