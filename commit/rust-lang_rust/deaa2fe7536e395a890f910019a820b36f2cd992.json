{"sha": "deaa2fe7536e395a890f910019a820b36f2cd992", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYWEyZmU3NTM2ZTM5NWE4OTBmOTEwMDE5YTgyMGIzNmYyY2Q5OTI=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-04-20T07:08:25Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-04-20T07:08:25Z"}, "message": "Make the feature whitelists constants\n\nThis simplifies the code a bit and makes the types nicer, too.", "tree": {"sha": "bdacc7cb02297537eaf1a021a22ef41f3954b838", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdacc7cb02297537eaf1a021a22ef41f3954b838"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deaa2fe7536e395a890f910019a820b36f2cd992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deaa2fe7536e395a890f910019a820b36f2cd992", "html_url": "https://github.com/rust-lang/rust/commit/deaa2fe7536e395a890f910019a820b36f2cd992", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deaa2fe7536e395a890f910019a820b36f2cd992/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ad85610e4eae8b7281c85186dff8edb23b5d21c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad85610e4eae8b7281c85186dff8edb23b5d21c", "html_url": "https://github.com/rust-lang/rust/commit/1ad85610e4eae8b7281c85186dff8edb23b5d21c"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "69d146059c9c010ad0426b76f2403aaea68e5acf", "filename": "src/librustc_driver/target_features.rs", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/deaa2fe7536e395a890f910019a820b36f2cd992/src%2Flibrustc_driver%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deaa2fe7536e395a890f910019a820b36f2cd992/src%2Flibrustc_driver%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftarget_features.rs?ref=deaa2fe7536e395a890f910019a820b36f2cd992", "patch": "@@ -16,6 +16,28 @@ use syntax::parse::token::InternedString;\n use syntax::parse::token::intern_and_get_ident as intern;\n use libc::c_char;\n \n+// WARNING: the features must be known to LLVM or the feature\n+// detection code will walk past the end of the feature array,\n+// leading to crashes.\n+\n+const ARM_WHITELIST: &'static [&'static str] = &[\n+    \"neon\\0\",\n+    \"vfp2\\0\",\n+    \"vfp3\\0\",\n+    \"vfp4\\0\",\n+];\n+\n+const X86_WHITELIST: &'static [&'static str] = &[\n+    \"avx\\0\",\n+    \"avx2\\0\",\n+    \"sse\\0\",\n+    \"sse2\\0\",\n+    \"sse3\\0\",\n+    \"sse4.1\\0\",\n+    \"sse4.2\\0\",\n+    \"ssse3\\0\",\n+];\n+\n /// Add `target_feature = \"...\"` cfgs for a variety of platform\n /// specific features (SSE, NEON etc.).\n ///\n@@ -24,32 +46,10 @@ use libc::c_char;\n pub fn add_configuration(cfg: &mut ast::CrateConfig, sess: &Session) {\n     let target_machine = create_target_machine(sess);\n \n-    // WARNING: the features must be known to LLVM or the feature\n-    // detection code will walk past the end of the feature array,\n-    // leading to crashes.\n-\n-    let arm_whitelist = [\n-        \"neon\\0\",\n-        \"vfp2\\0\",\n-        \"vfp3\\0\",\n-        \"vfp4\\0\",\n-    ];\n-\n-    let x86_whitelist = [\n-        \"avx\\0\",\n-        \"avx2\\0\",\n-        \"sse\\0\",\n-        \"sse2\\0\",\n-        \"sse3\\0\",\n-        \"sse4.1\\0\",\n-        \"sse4.2\\0\",\n-        \"ssse3\\0\",\n-    ];\n-\n     let whitelist = match &*sess.target.target.arch {\n-        \"arm\" => &arm_whitelist[..],\n-        \"x86\" | \"x86_64\" => &x86_whitelist[..],\n-        _ => &[][..],\n+        \"arm\" => ARM_WHITELIST,\n+        \"x86\" | \"x86_64\" => X86_WHITELIST,\n+        _ => &[],\n     };\n \n     let tf = InternedString::new(\"target_feature\");"}]}