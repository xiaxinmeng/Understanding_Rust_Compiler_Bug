{"sha": "3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYWUwZTQ3OWUwYjkxMzhiZTljNTNhZjE3OGJiNmViMTJkZmU5ZjE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-08T21:33:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-08T21:33:40Z"}, "message": "Rollup merge of #70565 - Zoxc:inlines-query-system, r=davidtwco\n\nAdd inline attributes for functions used in the query system", "tree": {"sha": "6eb3d324c60ed56e8da4c2fa7840ad74aa24a773", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eb3d324c60ed56e8da4c2fa7840ad74aa24a773"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejkM0CRBK7hj4Ov3rIwAAdHIIAC6PdC8VH2gKCdlQend1aNJj\ncwh7V+95a2pz7mnFzXKOuBg9oUR+L9o77F5BwmJDZ/lC06ovd5+3klmPqeQdy1S7\nZVXQBcivg9Nn1S4pYyR7+BhlO74GDsykppMWHoFzRG9HyKeioQ2YOWVkWzqe6yvL\naEzACtXQ/o7F5MGRWvAZ+vnCdxTFPDkwIAE79IiPRU1EUNrYjDVGkQ1iYYrkoty/\nGtb8WIBYFa4xunOAby+xfDOU9FWlYbutAeDaERpxoctUhDFjnfxjmpBt33IgaChm\nXWLBaPmqXVhkSgfDCH9ofGhxiCvsZ3R/f7Bd8bVY+PiV5H5sfge83wHUXxnIKBs=\n=8mg0\n-----END PGP SIGNATURE-----\n", "payload": "tree 6eb3d324c60ed56e8da4c2fa7840ad74aa24a773\nparent cf0432a5f59df8b9915fc1a9eba1e82b93bd16c7\nparent 87cdfb6e71b0ebe3e41e04d8840a20d7428197be\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586381620 +0200\ncommitter GitHub <noreply@github.com> 1586381620 +0200\n\nRollup merge of #70565 - Zoxc:inlines-query-system, r=davidtwco\n\nAdd inline attributes for functions used in the query system\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "html_url": "https://github.com/rust-lang/rust/commit/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf0432a5f59df8b9915fc1a9eba1e82b93bd16c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf0432a5f59df8b9915fc1a9eba1e82b93bd16c7", "html_url": "https://github.com/rust-lang/rust/commit/cf0432a5f59df8b9915fc1a9eba1e82b93bd16c7"}, {"sha": "87cdfb6e71b0ebe3e41e04d8840a20d7428197be", "url": "https://api.github.com/repos/rust-lang/rust/commits/87cdfb6e71b0ebe3e41e04d8840a20d7428197be", "html_url": "https://github.com/rust-lang/rust/commit/87cdfb6e71b0ebe3e41e04d8840a20d7428197be"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "4ae7532d992b9b18098bd4d1176f3bd58395b73e", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "patch": "@@ -140,6 +140,7 @@ mod hack {\n     use crate::string::ToString;\n     use crate::vec::Vec;\n \n+    #[inline]\n     pub fn into_vec<T>(b: Box<[T]>) -> Vec<T> {\n         unsafe {\n             let len = b.len();"}, {"sha": "fa2b51058a3781380241e79f59e07b0d524e387f", "filename": "src/librustc_query_system/dep_graph/graph.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Flibrustc_query_system%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Flibrustc_query_system%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fdep_graph%2Fgraph.rs?ref=3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "patch": "@@ -1112,6 +1112,7 @@ impl DepNodeColorMap {\n         DepNodeColorMap { values: (0..size).map(|_| AtomicU32::new(COMPRESSED_NONE)).collect() }\n     }\n \n+    #[inline]\n     fn get(&self, index: SerializedDepNodeIndex) -> Option<DepNodeColor> {\n         match self.values[index].load(Ordering::Acquire) {\n             COMPRESSED_NONE => None,"}, {"sha": "9da13f236643b72f13281a3e2461aa989f150c32", "filename": "src/librustc_query_system/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs?ref=3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "patch": "@@ -51,6 +51,7 @@ pub struct QueryState<CTX: QueryContext, C: QueryCache> {\n }\n \n impl<CTX: QueryContext, C: QueryCache> QueryState<CTX, C> {\n+    #[inline]\n     pub(super) fn get_lookup<'tcx>(\n         &'tcx self,\n         key: &C::Key,"}, {"sha": "29e99c0afd27f0a3b6daa0ed049769aac322271e", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "patch": "@@ -253,6 +253,7 @@ impl<T: 'static> LocalKey<T> {\n     /// This function will still `panic!()` if the key is uninitialized and the\n     /// key's initializer panics.\n     #[stable(feature = \"thread_local_try_with\", since = \"1.26.0\")]\n+    #[inline]\n     pub fn try_with<F, R>(&'static self, f: F) -> Result<R, AccessError>\n     where\n         F: FnOnce(&T) -> R,"}]}