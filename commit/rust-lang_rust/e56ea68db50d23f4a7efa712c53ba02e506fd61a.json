{"sha": "e56ea68db50d23f4a7efa712c53ba02e506fd61a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NmVhNjhkYjUwZDIzZjRhN2VmYTcxMmM1M2JhMDJlNTA2ZmQ2MWE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-05T13:55:20Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-05T13:55:20Z"}, "message": "Add compile_fail test for SyncOnceCell's dropck issue.", "tree": {"sha": "3ee8c1a62be92b10c4c910393585a1cacf68d060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ee8c1a62be92b10c4c910393585a1cacf68d060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e56ea68db50d23f4a7efa712c53ba02e506fd61a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e56ea68db50d23f4a7efa712c53ba02e506fd61a", "html_url": "https://github.com/rust-lang/rust/commit/e56ea68db50d23f4a7efa712c53ba02e506fd61a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e56ea68db50d23f4a7efa712c53ba02e506fd61a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "578e7143936158a0130f17bedcc946cae62583f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/578e7143936158a0130f17bedcc946cae62583f3", "html_url": "https://github.com/rust-lang/rust/commit/578e7143936158a0130f17bedcc946cae62583f3"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "d171231b0f1e63f1fc1c53731c85e8433b37520d", "filename": "library/std/src/lazy.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e56ea68db50d23f4a7efa712c53ba02e506fd61a/library%2Fstd%2Fsrc%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e56ea68db50d23f4a7efa712c53ba02e506fd61a/library%2Fstd%2Fsrc%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flazy.rs?ref=e56ea68db50d23f4a7efa712c53ba02e506fd61a", "patch": "@@ -47,7 +47,25 @@ pub struct SyncOnceCell<T> {\n     once: Once,\n     // Whether or not the value is initialized is tracked by `state_and_queue`.\n     value: UnsafeCell<MaybeUninit<T>>,\n-    // Make sure dropck understands we're dropping T in our Drop impl.\n+    /// `PhantomData` to make sure dropck understands we're dropping T in our Drop impl.\n+    ///\n+    /// ```compile_fail,E0597\n+    /// #![feature(once_cell)]\n+    ///\n+    /// use std::lazy::SyncOnceCell;\n+    ///\n+    /// struct A<'a>(&'a str);\n+    ///\n+    /// impl<'a> Drop for A<'a> {\n+    ///     fn drop(&mut self) {}\n+    /// }\n+    ///\n+    /// let cell = SyncOnceCell::new();\n+    /// {\n+    ///     let s = String::new();\n+    ///     let _ = cell.set(A(&s));\n+    /// }\n+    /// ```\n     _marker: PhantomData<T>,\n }\n "}]}