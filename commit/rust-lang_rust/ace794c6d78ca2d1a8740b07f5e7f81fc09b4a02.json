{"sha": "ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02", "node_id": "C_kwDOAAsO6NoAKGFjZTc5NGM2ZDc4Y2EyZDFhODc0MGIwN2Y1ZTdmODFmYzA5YjRhMDI", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-05-21T23:06:06Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-05-25T17:08:49Z"}, "message": "Always capture slice when pattern requires checking the length", "tree": {"sha": "d8fb21fcde38401658bb757025a4a8989f6e2ed6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8fb21fcde38401658bb757025a4a8989f6e2ed6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02", "html_url": "https://github.com/rust-lang/rust/commit/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d871b0617a4b3d6610b7cee0ab5310dcb542c62", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d871b0617a4b3d6610b7cee0ab5310dcb542c62", "html_url": "https://github.com/rust-lang/rust/commit/9d871b0617a4b3d6610b7cee0ab5310dcb542c62"}], "stats": {"total": 300, "additions": 209, "deletions": 91}, "files": [{"sha": "e14e8ac2ce0007fe4ff53c2f83cdedebcfc2f1cb", "filename": "compiler/rustc_hir_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02", "patch": "@@ -438,12 +438,19 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n                         // to borrow discr.\n                         needs_to_be_read = true;\n                     }\n-                    PatKind::Or(_)\n-                    | PatKind::Box(_)\n-                    | PatKind::Slice(..)\n-                    | PatKind::Ref(..)\n-                    | PatKind::Wild => {\n-                        // If the PatKind is Or, Box, Slice or Ref, the decision is made later\n+                    PatKind::Slice(lhs, wild, rhs) => {\n+                        // We don't need to test the length if the pattern is `[..]`\n+                        if matches!((lhs, wild, rhs), (&[], Some(_), &[]))\n+                            // Arrays have a statically known size, so\n+                            // there is no need to read their length\n+                            || discr_place.place.base_ty.is_array()\n+                        {\n+                        } else {\n+                            needs_to_be_read = true;\n+                        }\n+                    }\n+                    PatKind::Or(_) | PatKind::Box(_) | PatKind::Ref(..) | PatKind::Wild => {\n+                        // If the PatKind is Or, Box, or Ref, the decision is made later\n                         // as these patterns contains subpatterns\n                         // If the PatKind is Wild, the decision is made based on the other patterns being\n                         // examined"}, {"sha": "41b09ba03702b69909cba21681ce4106ab33a74b", "filename": "tests/ui/closures/2229_closure_analysis/match/patterns-capture-analysis.rs", "status": "modified", "additions": 59, "deletions": 13, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch%2Fpatterns-capture-analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch%2Fpatterns-capture-analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch%2Fpatterns-capture-analysis.rs?ref=ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02", "patch": "@@ -1,16 +1,14 @@\n // edition:2021\n \n #![feature(rustc_attrs)]\n+#![feature(stmt_expr_attributes)]\n \n // Should capture the discriminant since a variant of a multivariant enum is\n // mentioned in the match arm; the discriminant is captured by the closure regardless\n // of if it creates a binding\n fn test_1_should_capture() {\n     let variant = Some(2229);\n     let c =  #[rustc_capture_analysis]\n-    //~^ ERROR: attributes on expressions are experimental\n-    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n-\n     || {\n     //~^ First Pass analysis includes:\n     //~| Min Capture analysis includes:\n@@ -29,8 +27,6 @@ fn test_1_should_capture() {\n fn test_2_should_not_capture() {\n     let variant = Some(2229);\n     let c =  #[rustc_capture_analysis]\n-    //~^ ERROR: attributes on expressions are experimental\n-    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n     //~^ First Pass analysis includes:\n         match variant {\n@@ -50,8 +46,6 @@ enum SingleVariant {\n fn test_3_should_not_capture_single_variant() {\n     let variant = SingleVariant::Points(1);\n     let c =  #[rustc_capture_analysis]\n-    //~^ ERROR: attributes on expressions are experimental\n-    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n     //~^ First Pass analysis includes:\n         match variant {\n@@ -66,8 +60,6 @@ fn test_3_should_not_capture_single_variant() {\n fn test_6_should_capture_single_variant() {\n     let variant = SingleVariant::Points(1);\n     let c =  #[rustc_capture_analysis]\n-    //~^ ERROR: attributes on expressions are experimental\n-    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n     //~^ First Pass analysis includes:\n     //~| Min Capture analysis includes:\n@@ -88,8 +80,6 @@ fn test_6_should_capture_single_variant() {\n fn test_4_should_not_capture_array() {\n     let array: [i32; 3] = [0; 3];\n     let c =  #[rustc_capture_analysis]\n-    //~^ ERROR: attributes on expressions are experimental\n-    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n     //~^ First Pass analysis includes:\n         match array {\n@@ -112,8 +102,6 @@ enum MVariant {\n fn test_5_should_capture_multi_variant() {\n     let variant = MVariant::A;\n     let c =  #[rustc_capture_analysis]\n-    //~^ ERROR: attributes on expressions are experimental\n-    //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n     //~^ First Pass analysis includes:\n     //~| Min Capture analysis includes:\n@@ -127,11 +115,69 @@ fn test_5_should_capture_multi_variant() {\n     c();\n }\n \n+// Even though all patterns are wild, we need to read the discriminant\n+// in order to test the slice length\n+fn test_7_should_capture_slice_len() {\n+    let slice: &[i32] = &[1, 2, 3];\n+    let c =  #[rustc_capture_analysis]\n+    || {\n+    //~^ First Pass analysis includes:\n+    //~| Min Capture analysis includes:\n+        match slice {\n+            //~^ NOTE: Capturing slice[] -> ImmBorrow\n+            //~| NOTE: Min Capture slice[] -> ImmBorrow\n+            [_,_,_] => {},\n+            _ => {}\n+        }\n+    };\n+    c();\n+    let c =  #[rustc_capture_analysis]\n+    || {\n+    //~^ First Pass analysis includes:\n+    //~| Min Capture analysis includes:\n+        match slice {\n+            //~^ NOTE: Capturing slice[] -> ImmBorrow\n+            //~| NOTE: Min Capture slice[] -> ImmBorrow\n+            [] => {},\n+            _ => {}\n+        }\n+    };\n+    c();\n+    let c =  #[rustc_capture_analysis]\n+    || {\n+    //~^ First Pass analysis includes:\n+    //~| Min Capture analysis includes:\n+        match slice {\n+            //~^ NOTE: Capturing slice[] -> ImmBorrow\n+            //~| NOTE: Min Capture slice[] -> ImmBorrow\n+            [_, .. ,_] => {},\n+            _ => {}\n+        }\n+    };\n+    c();\n+}\n+\n+// Wild pattern that doesn't bind, so no capture\n+fn test_8_capture_slice_wild() {\n+    let slice: &[i32] = &[1, 2, 3];\n+    let c =  #[rustc_capture_analysis]\n+    || {\n+    //~^ First Pass analysis includes:\n+        match slice {\n+            [..] => {},\n+            _ => {}\n+        }\n+    };\n+    c();\n+}\n+\n fn main() {\n     test_1_should_capture();\n     test_2_should_not_capture();\n     test_3_should_not_capture_single_variant();\n     test_6_should_capture_single_variant();\n     test_4_should_not_capture_array();\n     test_5_should_capture_multi_variant();\n+    test_7_should_capture_slice_len();\n+    test_8_capture_slice_wild();\n }"}, {"sha": "e137af1a0bd4080175b2f95ecdf66a46b7bf8de2", "filename": "tests/ui/closures/2229_closure_analysis/match/patterns-capture-analysis.stderr", "status": "modified", "additions": 137, "deletions": 72, "changes": 209, "blob_url": "https://github.com/rust-lang/rust/blob/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch%2Fpatterns-capture-analysis.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch%2Fpatterns-capture-analysis.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch%2Fpatterns-capture-analysis.stderr?ref=ace794c6d78ca2d1a8740b07f5e7f81fc09b4a02", "patch": "@@ -1,59 +1,5 @@\n-error[E0658]: attributes on expressions are experimental\n-  --> $DIR/patterns-capture-analysis.rs:10:14\n-   |\n-LL |     let c =  #[rustc_capture_analysis]\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n-   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n-\n-error[E0658]: attributes on expressions are experimental\n-  --> $DIR/patterns-capture-analysis.rs:31:14\n-   |\n-LL |     let c =  #[rustc_capture_analysis]\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n-   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n-\n-error[E0658]: attributes on expressions are experimental\n-  --> $DIR/patterns-capture-analysis.rs:52:14\n-   |\n-LL |     let c =  #[rustc_capture_analysis]\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n-   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n-\n-error[E0658]: attributes on expressions are experimental\n-  --> $DIR/patterns-capture-analysis.rs:68:14\n-   |\n-LL |     let c =  #[rustc_capture_analysis]\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n-   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n-\n-error[E0658]: attributes on expressions are experimental\n-  --> $DIR/patterns-capture-analysis.rs:90:14\n-   |\n-LL |     let c =  #[rustc_capture_analysis]\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n-   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n-\n-error[E0658]: attributes on expressions are experimental\n-  --> $DIR/patterns-capture-analysis.rs:114:14\n-   |\n-LL |     let c =  #[rustc_capture_analysis]\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #15701 <https://github.com/rust-lang/rust/issues/15701> for more information\n-   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n-\n error: First Pass analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:14:5\n+  --> $DIR/patterns-capture-analysis.rs:12:5\n    |\n LL | /     || {\n LL | |\n@@ -65,13 +11,13 @@ LL | |     };\n    | |_____^\n    |\n note: Capturing variant[] -> ImmBorrow\n-  --> $DIR/patterns-capture-analysis.rs:17:15\n+  --> $DIR/patterns-capture-analysis.rs:15:15\n    |\n LL |         match variant {\n    |               ^^^^^^^\n \n error: Min Capture analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:14:5\n+  --> $DIR/patterns-capture-analysis.rs:12:5\n    |\n LL | /     || {\n LL | |\n@@ -83,13 +29,13 @@ LL | |     };\n    | |_____^\n    |\n note: Min Capture variant[] -> ImmBorrow\n-  --> $DIR/patterns-capture-analysis.rs:17:15\n+  --> $DIR/patterns-capture-analysis.rs:15:15\n    |\n LL |         match variant {\n    |               ^^^^^^^\n \n error: First Pass analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:34:5\n+  --> $DIR/patterns-capture-analysis.rs:30:5\n    |\n LL | /     || {\n LL | |\n@@ -100,7 +46,7 @@ LL | |     };\n    | |_____^\n \n error: First Pass analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:55:5\n+  --> $DIR/patterns-capture-analysis.rs:49:5\n    |\n LL | /     || {\n LL | |\n@@ -111,7 +57,7 @@ LL | |     };\n    | |_____^\n \n error: First Pass analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:71:5\n+  --> $DIR/patterns-capture-analysis.rs:63:5\n    |\n LL | /     || {\n LL | |\n@@ -123,18 +69,18 @@ LL | |     };\n    | |_____^\n    |\n note: Capturing variant[] -> ImmBorrow\n-  --> $DIR/patterns-capture-analysis.rs:74:15\n+  --> $DIR/patterns-capture-analysis.rs:66:15\n    |\n LL |         match variant {\n    |               ^^^^^^^\n note: Capturing variant[(0, 0)] -> ImmBorrow\n-  --> $DIR/patterns-capture-analysis.rs:74:15\n+  --> $DIR/patterns-capture-analysis.rs:66:15\n    |\n LL |         match variant {\n    |               ^^^^^^^\n \n error: Min Capture analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:71:5\n+  --> $DIR/patterns-capture-analysis.rs:63:5\n    |\n LL | /     || {\n LL | |\n@@ -146,13 +92,13 @@ LL | |     };\n    | |_____^\n    |\n note: Min Capture variant[] -> ImmBorrow\n-  --> $DIR/patterns-capture-analysis.rs:74:15\n+  --> $DIR/patterns-capture-analysis.rs:66:15\n    |\n LL |         match variant {\n    |               ^^^^^^^\n \n error: First Pass analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:93:5\n+  --> $DIR/patterns-capture-analysis.rs:83:5\n    |\n LL | /     || {\n LL | |\n@@ -163,7 +109,7 @@ LL | |     };\n    | |_____^\n \n error: First Pass analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:117:5\n+  --> $DIR/patterns-capture-analysis.rs:105:5\n    |\n LL | /     || {\n LL | |\n@@ -175,13 +121,13 @@ LL | |     };\n    | |_____^\n    |\n note: Capturing variant[] -> ImmBorrow\n-  --> $DIR/patterns-capture-analysis.rs:120:15\n+  --> $DIR/patterns-capture-analysis.rs:108:15\n    |\n LL |         match variant {\n    |               ^^^^^^^\n \n error: Min Capture analysis includes:\n-  --> $DIR/patterns-capture-analysis.rs:117:5\n+  --> $DIR/patterns-capture-analysis.rs:105:5\n    |\n LL | /     || {\n LL | |\n@@ -193,11 +139,130 @@ LL | |     };\n    | |_____^\n    |\n note: Min Capture variant[] -> ImmBorrow\n-  --> $DIR/patterns-capture-analysis.rs:120:15\n+  --> $DIR/patterns-capture-analysis.rs:108:15\n    |\n LL |         match variant {\n    |               ^^^^^^^\n \n-error: aborting due to 15 previous errors\n+error: First Pass analysis includes:\n+  --> $DIR/patterns-capture-analysis.rs:123:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         match slice {\n+...  |\n+LL | |         }\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing slice[] -> ImmBorrow\n+  --> $DIR/patterns-capture-analysis.rs:126:15\n+   |\n+LL |         match slice {\n+   |               ^^^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/patterns-capture-analysis.rs:123:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         match slice {\n+...  |\n+LL | |         }\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture slice[] -> ImmBorrow\n+  --> $DIR/patterns-capture-analysis.rs:126:15\n+   |\n+LL |         match slice {\n+   |               ^^^^^\n+\n+error: First Pass analysis includes:\n+  --> $DIR/patterns-capture-analysis.rs:135:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         match slice {\n+...  |\n+LL | |         }\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing slice[] -> ImmBorrow\n+  --> $DIR/patterns-capture-analysis.rs:138:15\n+   |\n+LL |         match slice {\n+   |               ^^^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/patterns-capture-analysis.rs:135:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         match slice {\n+...  |\n+LL | |         }\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture slice[] -> ImmBorrow\n+  --> $DIR/patterns-capture-analysis.rs:138:15\n+   |\n+LL |         match slice {\n+   |               ^^^^^\n+\n+error: First Pass analysis includes:\n+  --> $DIR/patterns-capture-analysis.rs:147:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         match slice {\n+...  |\n+LL | |         }\n+LL | |     };\n+   | |_____^\n+   |\n+note: Capturing slice[] -> ImmBorrow\n+  --> $DIR/patterns-capture-analysis.rs:150:15\n+   |\n+LL |         match slice {\n+   |               ^^^^^\n+\n+error: Min Capture analysis includes:\n+  --> $DIR/patterns-capture-analysis.rs:147:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |\n+LL | |         match slice {\n+...  |\n+LL | |         }\n+LL | |     };\n+   | |_____^\n+   |\n+note: Min Capture slice[] -> ImmBorrow\n+  --> $DIR/patterns-capture-analysis.rs:150:15\n+   |\n+LL |         match slice {\n+   |               ^^^^^\n+\n+error: First Pass analysis includes:\n+  --> $DIR/patterns-capture-analysis.rs:164:5\n+   |\n+LL | /     || {\n+LL | |\n+LL | |         match slice {\n+LL | |             [..] => {},\n+LL | |             _ => {}\n+LL | |         }\n+LL | |     };\n+   | |_____^\n+\n+error: aborting due to 16 previous errors\n \n-For more information about this error, try `rustc --explain E0658`."}]}