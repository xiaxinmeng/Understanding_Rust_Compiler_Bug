{"sha": "0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "node_id": "C_kwDOAAsO6NoAKDBlNjUwMDNjOWUwZWE5N2Q3ZmNmYmRiMDFjY2ExODE1NThiNWZhMTU", "commit": {"author": {"name": "Andr\u00e9 Vennberg", "email": "andre.vennberg@gmail.com", "date": "2023-01-14T17:23:40Z"}, "committer": {"name": "Andr\u00e9 Vennberg", "email": "andre.vennberg@gmail.com", "date": "2023-01-14T17:23:40Z"}, "message": "Fix some missed double spaces.", "tree": {"sha": "262e5df655d9c8cded61fa29244a3d5e936c9651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/262e5df655d9c8cded61fa29244a3d5e936c9651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "html_url": "https://github.com/rust-lang/rust/commit/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/comments", "author": {"login": "anden3", "id": 1500580, "node_id": "MDQ6VXNlcjE1MDA1ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1500580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anden3", "html_url": "https://github.com/anden3", "followers_url": "https://api.github.com/users/anden3/followers", "following_url": "https://api.github.com/users/anden3/following{/other_user}", "gists_url": "https://api.github.com/users/anden3/gists{/gist_id}", "starred_url": "https://api.github.com/users/anden3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anden3/subscriptions", "organizations_url": "https://api.github.com/users/anden3/orgs", "repos_url": "https://api.github.com/users/anden3/repos", "events_url": "https://api.github.com/users/anden3/events{/privacy}", "received_events_url": "https://api.github.com/users/anden3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anden3", "id": 1500580, "node_id": "MDQ6VXNlcjE1MDA1ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1500580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anden3", "html_url": "https://github.com/anden3", "followers_url": "https://api.github.com/users/anden3/followers", "following_url": "https://api.github.com/users/anden3/following{/other_user}", "gists_url": "https://api.github.com/users/anden3/gists{/gist_id}", "starred_url": "https://api.github.com/users/anden3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anden3/subscriptions", "organizations_url": "https://api.github.com/users/anden3/orgs", "repos_url": "https://api.github.com/users/anden3/repos", "events_url": "https://api.github.com/users/anden3/events{/privacy}", "received_events_url": "https://api.github.com/users/anden3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da3623abab0bb548b539a8a61ba5b813f5395db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/da3623abab0bb548b539a8a61ba5b813f5395db8", "html_url": "https://github.com/rust-lang/rust/commit/da3623abab0bb548b539a8a61ba5b813f5395db8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c6e42336ef8ca42a8cac048f084202ae46340c00", "filename": "compiler/rustc_borrowck/src/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs?ref=0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "patch": "@@ -235,7 +235,7 @@ impl<'tcx> InferCtxtExt<'tcx> for InferCtxt<'tcx> {\n     /// # Parameters\n     ///\n     /// - `def_id`, the `impl Trait` type\n-    /// - `substs`, the substs  used to instantiate this opaque type\n+    /// - `substs`, the substs used to instantiate this opaque type\n     /// - `instantiated_ty`, the inferred type C1 -- fully resolved, lifted version of\n     ///   `opaque_defn.concrete_ty`\n     #[instrument(level = \"debug\", skip(self))]"}, {"sha": "b910bd888c0727cf562daaaf34d6c7aebeccf768", "filename": "compiler/rustc_middle/src/ty/typeck_results.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftypeck_results.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftypeck_results.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftypeck_results.rs?ref=0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "patch": "@@ -193,7 +193,7 @@ pub struct TypeckResults<'tcx> {\n     pub generator_interior_types: ty::Binder<'tcx, Vec<GeneratorInteriorTypeCause<'tcx>>>,\n \n     /// We sometimes treat byte string literals (which are of type `&[u8; N]`)\n-    /// as `&[u8]`, depending on the pattern  in which they are used.\n+    /// as `&[u8]`, depending on the pattern in which they are used.\n     /// This hashset records all instances where we behave\n     /// like this to allow `const_to_pat` to reliably handle this situation.\n     pub treat_byte_string_as_slice: ItemLocalSet,"}, {"sha": "e73a17ced7deb2598f52a013189ee3392e379547", "filename": "compiler/rustc_parse/src/parser/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs?ref=0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "patch": "@@ -469,7 +469,7 @@ impl<'a> Parser<'a> {\n     /// Try to recover the more general form `intersect ::= $pat_lhs @ $pat_rhs`.\n     ///\n     /// Allowed binding patterns generated by `binding ::= ref? mut? $ident @ $pat_rhs`\n-    /// should already have been parsed by now  at this point,\n+    /// should already have been parsed by now at this point,\n     /// if the next token is `@` then we can try to parse the more general form.\n     ///\n     /// Consult `parse_pat_ident` for the `binding` grammar."}, {"sha": "70cd883be09b3d7d57989931b1a58d8a101ab585", "filename": "compiler/rustc_target/src/asm/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e65003c9e0ea97d7fcfbdb01cca181558b5fa15/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs?ref=0e65003c9e0ea97d7fcfbdb01cca181558b5fa15", "patch": "@@ -462,7 +462,7 @@ impl InlineAsmRegClass {\n     }\n \n     /// Returns a suggested template modifier to use for this type and an\n-    /// example of a  register named formatted with it.\n+    /// example of a register named formatted with it.\n     ///\n     /// Such suggestions are useful if a type smaller than the full register\n     /// size is used and a modifier can be used to point to the subregister of"}]}