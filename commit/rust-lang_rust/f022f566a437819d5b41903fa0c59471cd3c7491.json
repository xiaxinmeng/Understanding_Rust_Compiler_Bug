{"sha": "f022f566a437819d5b41903fa0c59471cd3c7491", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMjJmNTY2YTQzNzgxOWQ1YjQxOTAzZmEwYzU5NDcxY2QzYzc0OTE=", "commit": {"author": {"name": "Elliott Slaughter", "email": "eslaughter@mozilla.com", "date": "2012-08-31T17:43:57Z"}, "committer": {"name": "Elliott Slaughter", "email": "eslaughter@mozilla.com", "date": "2012-08-31T22:10:52Z"}, "message": "rt: Fix box annihilator to deallocate exchange heap boxes properly.", "tree": {"sha": "4b6b6fd5054ae013c44303efda858a24adb457dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b6b6fd5054ae013c44303efda858a24adb457dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f022f566a437819d5b41903fa0c59471cd3c7491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f022f566a437819d5b41903fa0c59471cd3c7491", "html_url": "https://github.com/rust-lang/rust/commit/f022f566a437819d5b41903fa0c59471cd3c7491", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f022f566a437819d5b41903fa0c59471cd3c7491/comments", "author": null, "committer": null, "parents": [{"sha": "f8323ac6156fd3234a94351a4104a1203bd83df1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8323ac6156fd3234a94351a4104a1203bd83df1", "html_url": "https://github.com/rust-lang/rust/commit/f8323ac6156fd3234a94351a4104a1203bd83df1"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "be93b7d42391ecdaaa9dc148bc7bc25c00be9175", "filename": "src/rt/rust_box_annihilator.cpp", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f022f566a437819d5b41903fa0c59471cd3c7491/src%2Frt%2Frust_box_annihilator.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f022f566a437819d5b41903fa0c59471cd3c7491/src%2Frt%2Frust_box_annihilator.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_box_annihilator.cpp?ref=f022f566a437819d5b41903fa0c59471cd3c7491", "patch": "@@ -197,7 +197,13 @@ annihilator::do_annihilate(rust_task *task, rust_opaque_box *box) {\n     annihilator annihilator(task, true, tydesc->shape,\n                             tydesc->shape_tables, p);\n     annihilator.walk();\n-    task->boxed.free(box);\n+    // NB: A reference count of -1 indicates that this box lives on the\n+    // exchange heap. Otherwise it lives on the task-local heap.\n+    if (box->ref_count + 1 == 0) {\n+        task->kernel->free(box);\n+    } else {\n+        task->boxed.free(box);\n+    }\n }\n \n void"}]}