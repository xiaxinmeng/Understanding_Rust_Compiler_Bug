{"sha": "bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "node_id": "C_kwDOAAsO6NoAKGJmYjEzZWM2OTFkYzYwZWVjNDlmNThjN2NjYmUwYjM0YzI2ODAyODA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-29T21:54:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-29T21:54:37Z"}, "message": "Rollup merge of #96390 - GuillaumeGomez:es6-part2, r=notriddle\n\nSwitch JS code to ES6 - part 2\n\nPart of #93058.\n\nIt's based on https://github.com/rust-lang/rust/pull/96361 so it needs to wait for it to be merged first.\n\nr? `@notriddle`", "tree": {"sha": "16df37175ba47495398b8711e8f270047155e0cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16df37175ba47495398b8711e8f270047155e0cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJibF6dCRBK7hj4Ov3rIwAAI8EIAFwJEEc3IJnlhVRr0sWE8EaW\n7WnICagrVxKK5kVlRYLAMzdYvggNOGtXdHAJqI8DugpMwQSBAoDiKN5QulqSyoKe\nEN21l4oTXohIXmXa66hKnzKYLbvahNVok6GyBeLiFaMyqxdU7Ws3i4F6dU9RAdJu\n/MDaZiA5wfhCtqt922ydNOsBEF8jnmVunq0fznkHT63wlQv54tLP/a2UJXxNcm/Z\nVQ2ZW9VydQHPgTIHA6LDJaUjIM4lJK6SZK4CJtkmgGw93m4DyhEUkRoge/6/1oGk\nSJrzshjn4+QSZYzew71Io/TpjcLIDWE4aLLl7cujkROatYUEYVg68AU8ajyL7Pg=\n=N7W2\n-----END PGP SIGNATURE-----\n", "payload": "tree 16df37175ba47495398b8711e8f270047155e0cd\nparent 1c8966e5e9dc099b55206f34af81242d03bdb413\nparent 4e0be6ddeb7e05c5b9998f011175c22bca11d68e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1651269277 +0200\ncommitter GitHub <noreply@github.com> 1651269277 +0200\n\nRollup merge of #96390 - GuillaumeGomez:es6-part2, r=notriddle\n\nSwitch JS code to ES6 - part 2\n\nPart of #93058.\n\nIt's based on https://github.com/rust-lang/rust/pull/96361 so it needs to wait for it to be merged first.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "html_url": "https://github.com/rust-lang/rust/commit/bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c8966e5e9dc099b55206f34af81242d03bdb413", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c8966e5e9dc099b55206f34af81242d03bdb413", "html_url": "https://github.com/rust-lang/rust/commit/1c8966e5e9dc099b55206f34af81242d03bdb413"}, {"sha": "4e0be6ddeb7e05c5b9998f011175c22bca11d68e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0be6ddeb7e05c5b9998f011175c22bca11d68e", "html_url": "https://github.com/rust-lang/rust/commit/4e0be6ddeb7e05c5b9998f011175c22bca11d68e"}], "stats": {"total": 478, "additions": 233, "deletions": 245}, "files": [{"sha": "de881dbd0812a633beecfe0770515421bb874a84", "filename": "src/librustdoc/html/static/js/externs.js", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fexterns.js", "raw_url": "https://github.com/rust-lang/rust/raw/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fexterns.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fexterns.js?ref=bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "patch": "@@ -1,9 +1,12 @@\n // This file contains type definitions that are processed by the Closure Compiler but are\n // not put into the JavaScript we include as part of the documentation. It is used for\n // type checking. See README.md in this directory for more info.\n+/* eslint-env es6 */\n+/* eslint no-var: \"error\" */\n+/* eslint prefer-const: \"error\" */\n \n /* eslint-disable */\n-var searchState;\n+let searchState;\n function initSearch(searchIndex){}\n \n /**\n@@ -15,7 +18,7 @@ function initSearch(searchIndex){}\n  *     generics: Array<QueryElement>,\n  * }}\n  */\n-var QueryElement;\n+let QueryElement;\n \n /**\n  * @typedef {{\n@@ -25,7 +28,7 @@ var QueryElement;\n  *      userQuery: string,\n  * }}\n  */\n-var ParserState;\n+let ParserState;\n \n /**\n  * @typedef {{\n@@ -38,7 +41,7 @@ var ParserState;\n  *     foundElems: number,\n  * }}\n  */\n-var ParsedQuery;\n+let ParsedQuery;\n \n /**\n  * @typedef {{\n@@ -53,7 +56,7 @@ var ParsedQuery;\n  *    type: (Array<?>|null)\n  * }}\n  */\n-var Row;\n+let Row;\n \n /**\n  * @typedef {{\n@@ -63,7 +66,7 @@ var Row;\n  *    query: ParsedQuery,\n  * }}\n  */\n-var ResultsTable;\n+let ResultsTable;\n \n /**\n  * @typedef {{\n@@ -80,4 +83,4 @@ var ResultsTable;\n  *     ty: number,\n  * }}\n  */\n-var Results;\n+let Results;"}, {"sha": "9e5de9a843ab1a081a61429cce8f17a2849653a8", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 124, "deletions": 145, "changes": 269, "blob_url": "https://github.com/rust-lang/rust/blob/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "patch": "@@ -1,3 +1,6 @@\n+/* eslint-env es6 */\n+/* eslint no-var: \"error\" */\n+/* eslint prefer-const: \"error\" */\n // Local js definitions:\n /* global addClass, getSettingValue, hasClass, searchState */\n /* global onEach, onEachLazy, removeClass */\n@@ -11,7 +14,7 @@ if (!String.prototype.startsWith) {\n }\n if (!String.prototype.endsWith) {\n     String.prototype.endsWith = function(suffix, length) {\n-        var l = length || this.length;\n+        const l = length || this.length;\n         return this.indexOf(suffix, l - suffix.length) !== -1;\n     };\n }\n@@ -40,7 +43,7 @@ if (!DOMTokenList.prototype.remove) {\n // Get a value from the rustdoc-vars div, which is used to convey data from\n // Rust to the JS. If there is no such element, return null.\n function getVar(name) {\n-    var el = document.getElementById(\"rustdoc-vars\");\n+    const el = document.getElementById(\"rustdoc-vars\");\n     if (el) {\n         return el.attributes[\"data-\" + name].value;\n     } else {\n@@ -59,7 +62,7 @@ function resourcePath(basename, extension) {\n     window.currentCrate = getVar(\"current-crate\");\n     window.searchJS =  resourcePath(\"search\", \".js\");\n     window.searchIndexJS = resourcePath(\"search-index\", \".js\");\n-    var sidebarVars = document.getElementById(\"sidebar-vars\");\n+    const sidebarVars = document.getElementById(\"sidebar-vars\");\n     if (sidebarVars) {\n         window.sidebarCurrent = {\n             name: sidebarVars.attributes[\"data-name\"].value,\n@@ -68,8 +71,8 @@ function resourcePath(basename, extension) {\n         };\n         // FIXME: It would be nicer to generate this text content directly in HTML,\n         // but with the current code it's hard to get the right information in the right place.\n-        var mobileLocationTitle = document.querySelector(\".mobile-topbar h2.location\");\n-        var locationTitle = document.querySelector(\".sidebar h2.location\");\n+        const mobileLocationTitle = document.querySelector(\".mobile-topbar h2.location\");\n+        const locationTitle = document.querySelector(\".sidebar h2.location\");\n         if (mobileLocationTitle && locationTitle) {\n             mobileLocationTitle.innerHTML = locationTitle.innerHTML;\n         }\n@@ -91,16 +94,16 @@ function getVirtualKey(ev) {\n         return ev.key;\n     }\n \n-    var c = ev.charCode || ev.keyCode;\n+    const c = ev.charCode || ev.keyCode;\n     if (c == 27) {\n         return \"Escape\";\n     }\n     return String.fromCharCode(c);\n }\n \n-var THEME_PICKER_ELEMENT_ID = \"theme-picker\";\n-var THEMES_ELEMENT_ID = \"theme-choices\";\n-var MAIN_ID = \"main-content\";\n+const THEME_PICKER_ELEMENT_ID = \"theme-picker\";\n+const THEMES_ELEMENT_ID = \"theme-choices\";\n+const MAIN_ID = \"main-content\";\n \n function getThemesElement() {\n     return document.getElementById(THEMES_ELEMENT_ID);\n@@ -116,17 +119,17 @@ function getNakedUrl() {\n }\n \n function showThemeButtonState() {\n-    var themePicker = getThemePickerElement();\n-    var themeChoices = getThemesElement();\n+    const themePicker = getThemePickerElement();\n+    const themeChoices = getThemesElement();\n \n     themeChoices.style.display = \"block\";\n     themePicker.style.borderBottomRightRadius = \"0\";\n     themePicker.style.borderBottomLeftRadius = \"0\";\n }\n \n function hideThemeButtonState() {\n-    var themePicker = getThemePickerElement();\n-    var themeChoices = getThemesElement();\n+    const themePicker = getThemePickerElement();\n+    const themeChoices = getThemesElement();\n \n     themeChoices.style.display = \"none\";\n     themePicker.style.borderBottomRightRadius = \"3px\";\n@@ -138,9 +141,9 @@ function hideThemeButtonState() {\n     if (!document.location.href.startsWith(\"file:///\")) {\n         return;\n     }\n-    var themeChoices = getThemesElement();\n-    var themePicker = getThemePickerElement();\n-    var availableThemes = getVar(\"themes\").split(\",\");\n+    const themeChoices = getThemesElement();\n+    const themePicker = getThemePickerElement();\n+    const availableThemes = getVar(\"themes\").split(\",\");\n \n     removeClass(themeChoices.parentElement, \"hidden\");\n \n@@ -153,8 +156,8 @@ function hideThemeButtonState() {\n     }\n \n     function handleThemeButtonsBlur(e) {\n-        var active = document.activeElement;\n-        var related = e.relatedTarget;\n+        const active = document.activeElement;\n+        const related = e.relatedTarget;\n \n         if (active.id !== THEME_PICKER_ELEMENT_ID &&\n             (!active.parentNode || active.parentNode.id !== THEMES_ELEMENT_ID) &&\n@@ -168,7 +171,7 @@ function hideThemeButtonState() {\n     themePicker.onclick = switchThemeButtonState;\n     themePicker.onblur = handleThemeButtonsBlur;\n     availableThemes.forEach(function(item) {\n-        var but = document.createElement(\"button\");\n+        const but = document.createElement(\"button\");\n         but.textContent = item;\n         but.onclick = function() {\n             switchTheme(window.currentTheme, window.mainTheme, item, true);\n@@ -236,10 +239,10 @@ function hideThemeButtonState() {\n             }\n         },\n         getQueryStringParams: function() {\n-            var params = {};\n+            const params = {};\n             window.location.search.substring(1).split(\"&\").\n                 map(function(s) {\n-                    var pair = s.split(\"=\");\n+                    const pair = s.split(\"=\");\n                     params[decodeURIComponent(pair[0])] =\n                         typeof pair[1] === \"undefined\" ? null : decodeURIComponent(pair[1]);\n                 });\n@@ -249,17 +252,17 @@ function hideThemeButtonState() {\n             return window.history && typeof window.history.pushState === \"function\";\n         },\n         setup: function() {\n-            var search_input = searchState.input;\n+            const search_input = searchState.input;\n             if (!searchState.input) {\n                 return;\n             }\n             function loadScript(url) {\n-                var script = document.createElement('script');\n+                const script = document.createElement('script');\n                 script.src = url;\n                 document.head.append(script);\n             }\n \n-            var searchLoaded = false;\n+            let searchLoaded = false;\n             function loadSearch() {\n                 if (!searchLoaded) {\n                     searchLoaded = true;\n@@ -278,9 +281,9 @@ function hideThemeButtonState() {\n                 loadSearch();\n             }\n \n-            var params = searchState.getQueryStringParams();\n+            const params = searchState.getQueryStringParams();\n             if (params.search !== undefined) {\n-                var search = searchState.outputElement();\n+                const search = searchState.outputElement();\n                 search.innerHTML = \"<h3 class=\\\"search-loading\\\">\" +\n                     searchState.loadingText + \"</h3>\";\n                 searchState.showResults(search);\n@@ -291,26 +294,26 @@ function hideThemeButtonState() {\n \n     function getPageId() {\n         if (window.location.hash) {\n-            var tmp = window.location.hash.replace(/^#/, \"\");\n+            const tmp = window.location.hash.replace(/^#/, \"\");\n             if (tmp.length > 0) {\n                 return tmp;\n             }\n         }\n         return null;\n     }\n \n-    var toggleAllDocsId = \"toggle-all-docs\";\n-    var main = document.getElementById(MAIN_ID);\n-    var savedHash = \"\";\n+    const toggleAllDocsId = \"toggle-all-docs\";\n+    const main = document.getElementById(MAIN_ID);\n+    let savedHash = \"\";\n \n     function handleHashes(ev) {\n-        var elem;\n-        var search = searchState.outputElement();\n+        let elem;\n+        const search = searchState.outputElement();\n         if (ev !== null && search && !hasClass(search, \"hidden\") && ev.newURL) {\n             // This block occurs when clicking on an element in the navbar while\n             // in a search.\n             searchState.hideResults(search);\n-            var hash = ev.newURL.slice(ev.newURL.indexOf(\"#\") + 1);\n+            const hash = ev.newURL.slice(ev.newURL.indexOf(\"#\") + 1);\n             if (searchState.browserSupportsHistoryApi()) {\n                 // `window.location.search`` contains all the query parameters, not just `search`.\n                 history.replaceState(null, \"\",\n@@ -333,7 +336,7 @@ function hideThemeButtonState() {\n \n     function onHashChange(ev) {\n         // If we're in mobile mode, we should hide the sidebar in any case.\n-        var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n+        const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n         removeClass(sidebar, \"shown\");\n         handleHashes(ev);\n     }\n@@ -386,8 +389,8 @@ function hideThemeButtonState() {\n     }\n \n     function handleEscape(ev) {\n-        var help = getHelpElement(false);\n-        var search = searchState.outputElement();\n+        const help = getHelpElement(false);\n+        const search = searchState.outputElement();\n         if (help && !hasClass(help, \"hidden\")) {\n             displayHelp(false, ev, help);\n         } else if (search && !hasClass(search, \"hidden\")) {\n@@ -399,13 +402,15 @@ function hideThemeButtonState() {\n         hideThemeButtonState();\n     }\n \n-    var disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n+    const disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n     function handleShortcut(ev) {\n         // Don't interfere with browser shortcuts\n         if (ev.ctrlKey || ev.altKey || ev.metaKey || disableShortcuts) {\n             return;\n         }\n \n+        let themePicker;\n+\n         if (document.activeElement.tagName === \"INPUT\") {\n             switch (getVirtualKey(ev)) {\n             case \"Escape\":\n@@ -439,7 +444,7 @@ function hideThemeButtonState() {\n             case \"T\":\n                 displayHelp(false, ev);\n                 ev.preventDefault();\n-                var themePicker = getThemePickerElement();\n+                themePicker = getThemePickerElement();\n                 themePicker.click();\n                 themePicker.focus();\n                 break;\n@@ -453,8 +458,8 @@ function hideThemeButtonState() {\n     }\n \n     function handleThemeKeyDown(ev) {\n-        var active = document.activeElement;\n-        var themes = getThemesElement();\n+        const active = document.activeElement;\n+        const themes = getThemesElement();\n         switch (getVirtualKey(ev)) {\n         case \"ArrowUp\":\n             ev.preventDefault();\n@@ -499,60 +504,35 @@ function hideThemeButtonState() {\n     document.addEventListener(\"keypress\", handleShortcut);\n     document.addEventListener(\"keydown\", handleShortcut);\n \n-    (function() {\n-        var x = document.getElementsByClassName(\"version-selector\");\n-        if (x.length > 0) {\n-            x[0].onchange = function() {\n-                var i, match,\n-                    url = document.location.href,\n-                    stripped = \"\",\n-                    len = window.rootPath.match(/\\.\\.\\//g).length + 1;\n-\n-                for (i = 0; i < len; ++i) {\n-                    match = url.match(/\\/[^/]*$/);\n-                    if (i < len - 1) {\n-                        stripped = match[0] + stripped;\n-                    }\n-                    url = url.substring(0, url.length - match[0].length);\n-                }\n-\n-                var selectedVersion = document.getElementsByClassName(\"version-selector\")[0].value;\n-                url += \"/\" + selectedVersion + stripped;\n-\n-                document.location.href = url;\n-            };\n-        }\n-    }());\n-\n     // delayed sidebar rendering.\n     window.initSidebarItems = function(items) {\n-        var sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n-        var others;\n-        var current = window.sidebarCurrent;\n+        const sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n+        let others;\n+        const current = window.sidebarCurrent;\n \n         function addSidebarCrates(crates) {\n             if (!hasClass(document.body, \"crate\")) {\n                 // We only want to list crates on the crate page.\n                 return;\n             }\n             // Draw a convenient sidebar of known crates if we have a listing\n-            var div = document.createElement(\"div\");\n+            const div = document.createElement(\"div\");\n             div.className = \"block crate\";\n             div.innerHTML = \"<h3>Crates</h3>\";\n-            var ul = document.createElement(\"ul\");\n+            const ul = document.createElement(\"ul\");\n             div.appendChild(ul);\n \n-            for (var i = 0; i < crates.length; ++i) {\n-                var klass = \"crate\";\n-                if (window.rootPath !== \"./\" && crates[i] === window.currentCrate) {\n+            for (const crate of crates) {\n+                let klass = \"crate\";\n+                if (window.rootPath !== \"./\" && crate === window.currentCrate) {\n                     klass += \" current\";\n                 }\n-                var link = document.createElement(\"a\");\n-                link.href = window.rootPath + crates[i] + \"/index.html\";\n+                const link = document.createElement(\"a\");\n+                link.href = window.rootPath + crate + \"/index.html\";\n                 link.className = klass;\n-                link.textContent = crates[i];\n+                link.textContent = crate;\n \n-                var li = document.createElement(\"li\");\n+                const li = document.createElement(\"li\");\n                 li.appendChild(link);\n                 ul.appendChild(li);\n             }\n@@ -568,39 +548,38 @@ function hideThemeButtonState() {\n          *                          \"Modules\", or \"Macros\".\n          */\n         function block(shortty, id, longty) {\n-            var filtered = items[shortty];\n+            const filtered = items[shortty];\n             if (!filtered) {\n                 return;\n             }\n \n-            var div = document.createElement(\"div\");\n+            const div = document.createElement(\"div\");\n             div.className = \"block \" + shortty;\n-            var h3 = document.createElement(\"h3\");\n+            const h3 = document.createElement(\"h3\");\n             h3.innerHTML = `<a href=\"index.html#${id}\">${longty}</a>`;\n             div.appendChild(h3);\n-            var ul = document.createElement(\"ul\");\n+            const ul = document.createElement(\"ul\");\n \n-            for (var i = 0, len = filtered.length; i < len; ++i) {\n-                var item = filtered[i];\n-                var name = item[0];\n-                var desc = item[1]; // can be null\n+            for (const item of filtered) {\n+                const name = item[0];\n+                const desc = item[1]; // can be null\n \n-                var klass = shortty;\n+                let klass = shortty;\n                 if (name === current.name && shortty === current.ty) {\n                     klass += \" current\";\n                 }\n-                var path;\n+                let path;\n                 if (shortty === \"mod\") {\n                     path = name + \"/index.html\";\n                 } else {\n                     path = shortty + \".\" + name + \".html\";\n                 }\n-                var link = document.createElement(\"a\");\n+                const link = document.createElement(\"a\");\n                 link.href = current.relpath + path;\n                 link.title = desc;\n                 link.className = klass;\n                 link.textContent = name;\n-                var li = document.createElement(\"li\");\n+                const li = document.createElement(\"li\");\n                 li.appendChild(link);\n                 ul.appendChild(li);\n             }\n@@ -613,7 +592,7 @@ function hideThemeButtonState() {\n             others.className = \"others\";\n             sidebar.appendChild(others);\n \n-            var isModule = hasClass(document.body, \"mod\");\n+            const isModule = hasClass(document.body, \"mod\");\n             if (!isModule) {\n                 block(\"primitive\", \"primitives\", \"Primitive Types\");\n                 block(\"mod\", \"modules\", \"Modules\");\n@@ -638,18 +617,18 @@ function hideThemeButtonState() {\n     };\n \n     window.register_implementors = function(imp) {\n-        var implementors = document.getElementById(\"implementors-list\");\n-        var synthetic_implementors = document.getElementById(\"synthetic-implementors-list\");\n+        const implementors = document.getElementById(\"implementors-list\");\n+        const synthetic_implementors = document.getElementById(\"synthetic-implementors-list\");\n+        const inlined_types = new Set();\n \n         if (synthetic_implementors) {\n             // This `inlined_types` variable is used to avoid having the same implementation\n             // showing up twice. For example \"String\" in the \"Sync\" doc page.\n             //\n             // By the way, this is only used by and useful for traits implemented automatically\n             // (like \"Send\" and \"Sync\").\n-            var inlined_types = new Set();\n             onEachLazy(synthetic_implementors.getElementsByClassName(\"impl\"), function(el) {\n-                var aliases = el.getAttribute(\"data-aliases\");\n+                const aliases = el.getAttribute(\"data-aliases\");\n                 if (!aliases) {\n                     return;\n                 }\n@@ -659,48 +638,48 @@ function hideThemeButtonState() {\n             });\n         }\n \n-        var currentNbImpls = implementors.getElementsByClassName(\"impl\").length;\n-        var traitName = document.querySelector(\"h1.fqn > .in-band > .trait\").textContent;\n-        var baseIdName = \"impl-\" + traitName + \"-\";\n-        var libs = Object.getOwnPropertyNames(imp);\n-        for (var i = 0, llength = libs.length; i < llength; ++i) {\n-            if (libs[i] === window.currentCrate) { continue; }\n-            var structs = imp[libs[i]];\n+        let currentNbImpls = implementors.getElementsByClassName(\"impl\").length;\n+        const traitName = document.querySelector(\"h1.fqn > .in-band > .trait\").textContent;\n+        const baseIdName = \"impl-\" + traitName + \"-\";\n+        const libs = Object.getOwnPropertyNames(imp);\n+        for (const lib of libs) {\n+            if (lib === window.currentCrate) {\n+                continue;\n+            }\n+            const structs = imp[lib];\n \n             struct_loop:\n-            for (var j = 0, slength = structs.length; j < slength; ++j) {\n-                var struct = structs[j];\n-\n-                var list = struct.synthetic ? synthetic_implementors : implementors;\n+            for (const struct of structs) {\n+                const list = struct.synthetic ? synthetic_implementors : implementors;\n \n                 if (struct.synthetic) {\n-                    for (var k = 0, stlength = struct.types.length; k < stlength; k++) {\n-                        if (inlined_types.has(struct.types[k])) {\n+                    for (const struct_type of struct.types) {\n+                        if (inlined_types.has(struct_type)) {\n                             continue struct_loop;\n                         }\n-                        inlined_types.add(struct.types[k]);\n+                        inlined_types.add(struct_type);\n                     }\n                 }\n \n-                var code = document.createElement(\"h3\");\n+                const code = document.createElement(\"h3\");\n                 code.innerHTML = struct.text;\n                 addClass(code, \"code-header\");\n                 addClass(code, \"in-band\");\n \n                 onEachLazy(code.getElementsByTagName(\"a\"), function(elem) {\n-                    var href = elem.getAttribute(\"href\");\n+                    const href = elem.getAttribute(\"href\");\n \n                     if (href && href.indexOf(\"http\") !== 0) {\n                         elem.setAttribute(\"href\", window.rootPath + href);\n                     }\n                 });\n \n-                var currentId = baseIdName + currentNbImpls;\n-                var anchor = document.createElement(\"a\");\n+                const currentId = baseIdName + currentNbImpls;\n+                const anchor = document.createElement(\"a\");\n                 anchor.href = \"#\" + currentId;\n                 addClass(anchor, \"anchor\");\n \n-                var display = document.createElement(\"div\");\n+                const display = document.createElement(\"div\");\n                 display.id = currentId;\n                 addClass(display, \"impl\");\n                 display.appendChild(anchor);\n@@ -725,11 +704,11 @@ function hideThemeButtonState() {\n     }\n \n     function toggleAllDocs() {\n-        var innerToggle = document.getElementById(toggleAllDocsId);\n+        const innerToggle = document.getElementById(toggleAllDocsId);\n         if (!innerToggle) {\n             return;\n         }\n-        var sectionIsCollapsed = false;\n+        let sectionIsCollapsed = false;\n         if (hasClass(innerToggle, \"will-expand\")) {\n             removeClass(innerToggle, \"will-expand\");\n             onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n@@ -759,17 +738,17 @@ function hideThemeButtonState() {\n     }\n \n     (function() {\n-        var toggles = document.getElementById(toggleAllDocsId);\n+        const toggles = document.getElementById(toggleAllDocsId);\n         if (toggles) {\n             toggles.onclick = toggleAllDocs;\n         }\n \n-        var hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n-        var hideImplementations = getSettingValue(\"auto-hide-trait-implementations\") === \"true\";\n-        var hideLargeItemContents = getSettingValue(\"auto-hide-large-items\") !== \"false\";\n+        const hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n+        const hideImplementations = getSettingValue(\"auto-hide-trait-implementations\") === \"true\";\n+        const hideLargeItemContents = getSettingValue(\"auto-hide-large-items\") !== \"false\";\n \n         function setImplementorsTogglesOpen(id, open) {\n-            var list = document.getElementById(id);\n+            const list = document.getElementById(id);\n             if (list !== null) {\n                 onEachLazy(list.getElementsByClassName(\"implementors-toggle\"), function(e) {\n                     e.open = open;\n@@ -792,23 +771,23 @@ function hideThemeButtonState() {\n \n         });\n \n-        var pageId = getPageId();\n+        const pageId = getPageId();\n         if (pageId !== null) {\n             expandSection(pageId);\n         }\n     }());\n \n     (function() {\n         // To avoid checking on \"rustdoc-line-numbers\" value on every loop...\n-        var lineNumbersFunc = function() {};\n+        let lineNumbersFunc = function() {};\n         if (getSettingValue(\"line-numbers\") === \"true\") {\n             lineNumbersFunc = function(x) {\n-                var count = x.textContent.split(\"\\n\").length;\n-                var elems = [];\n-                for (var i = 0; i < count; ++i) {\n+                const count = x.textContent.split(\"\\n\").length;\n+                const elems = [];\n+                for (let i = 0; i < count; ++i) {\n                     elems.push(i + 1);\n                 }\n-                var node = document.createElement(\"pre\");\n+                const node = document.createElement(\"pre\");\n                 addClass(node, \"line-number\");\n                 node.innerHTML = elems.join(\"\\n\");\n                 x.parentNode.insertBefore(node, x);\n@@ -835,12 +814,12 @@ function hideThemeButtonState() {\n     }());\n \n     function hideSidebar() {\n-        var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n+        const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n         removeClass(sidebar, \"shown\");\n     }\n \n     function handleClick(id, f) {\n-        var elem = document.getElementById(id);\n+        const elem = document.getElementById(id);\n         if (elem) {\n             elem.addEventListener(\"click\", f);\n         }\n@@ -879,10 +858,10 @@ function hideThemeButtonState() {\n         };\n     });\n \n-    var sidebar_menu_toggle = document.getElementsByClassName(\"sidebar-menu-toggle\")[0];\n+    const sidebar_menu_toggle = document.getElementsByClassName(\"sidebar-menu-toggle\")[0];\n     if (sidebar_menu_toggle) {\n         sidebar_menu_toggle.addEventListener(\"click\", function() {\n-            var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n+            const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n             if (!hasClass(sidebar, \"shown\")) {\n                 addClass(sidebar, \"shown\");\n             } else {\n@@ -891,8 +870,8 @@ function hideThemeButtonState() {\n         });\n     }\n \n-    var buildHelperPopup = function() {\n-        var popup = document.createElement(\"aside\");\n+    let buildHelperPopup = function() {\n+        const popup = document.createElement(\"aside\");\n         addClass(popup, \"hidden\");\n         popup.id = \"help\";\n \n@@ -903,13 +882,13 @@ function hideThemeButtonState() {\n             }\n         });\n \n-        var book_info = document.createElement(\"span\");\n+        const book_info = document.createElement(\"span\");\n         book_info.className = \"top\";\n         book_info.innerHTML = \"You can find more information in \\\n             <a href=\\\"https://doc.rust-lang.org/rustdoc/\\\">the rustdoc book</a>.\";\n \n-        var container = document.createElement(\"div\");\n-        var shortcuts = [\n+        const container = document.createElement(\"div\");\n+        const shortcuts = [\n             [\"?\", \"Show this help dialog\"],\n             [\"S\", \"Focus the search field\"],\n             [\"T\", \"Focus the theme picker menu\"],\n@@ -927,11 +906,11 @@ function hideThemeButtonState() {\n                     })\n                     .join(\"\") + \"</dt><dd>\" + x[1] + \"</dd>\";\n         }).join(\"\");\n-        var div_shortcuts = document.createElement(\"div\");\n+        const div_shortcuts = document.createElement(\"div\");\n         addClass(div_shortcuts, \"shortcuts\");\n         div_shortcuts.innerHTML = \"<h2>Keyboard Shortcuts</h2><dl>\" + shortcuts + \"</dl></div>\";\n \n-        var infos = [\n+        const infos = [\n             \"Prefix searches with a type followed by a colon (e.g., <code>fn:</code>) to \\\n              restrict the search to a given item kind.\",\n             \"Accepted kinds are: <code>fn</code>, <code>mod</code>, <code>struct</code>, \\\n@@ -947,17 +926,17 @@ function hideThemeButtonState() {\n         ].map(function(x) {\n             return \"<p>\" + x + \"</p>\";\n         }).join(\"\");\n-        var div_infos = document.createElement(\"div\");\n+        const div_infos = document.createElement(\"div\");\n         addClass(div_infos, \"infos\");\n         div_infos.innerHTML = \"<h2>Search Tricks</h2>\" + infos;\n \n         container.appendChild(book_info);\n         container.appendChild(div_shortcuts);\n         container.appendChild(div_infos);\n \n-        var rustdoc_version = document.createElement(\"span\");\n+        const rustdoc_version = document.createElement(\"span\");\n         rustdoc_version.className = \"bottom\";\n-        var rustdoc_version_code = document.createElement(\"code\");\n+        const rustdoc_version_code = document.createElement(\"code\");\n         rustdoc_version_code.innerText = \"rustdoc \" + getVar(\"rustdoc-version\");\n         rustdoc_version.appendChild(rustdoc_version_code);\n \n@@ -975,19 +954,19 @@ function hideThemeButtonState() {\n }());\n \n (function () {\n-    var reset_button_timeout = null;\n+    let reset_button_timeout = null;\n \n     window.copy_path = function(but) {\n-        var parent = but.parentElement;\n-        var path = [];\n+        const parent = but.parentElement;\n+        const path = [];\n \n         onEach(parent.childNodes, function(child) {\n             if (child.tagName === 'A') {\n                 path.push(child.textContent);\n             }\n         });\n \n-        var el = document.createElement('textarea');\n+        const el = document.createElement('textarea');\n         el.value = path.join('::');\n         el.setAttribute('readonly', '');\n         // To not make it appear on the screen.\n@@ -1002,7 +981,7 @@ function hideThemeButtonState() {\n         // There is always one children, but multiple childNodes.\n         but.children[0].style.display = 'none';\n \n-        var tmp;\n+        let tmp;\n         if (but.childNodes.length < 2) {\n             tmp = document.createTextNode('\u2713');\n             but.appendChild(tmp);"}, {"sha": "865ed7190f36e86ee85fb8dbffabdeb02e75d1fb", "filename": "src/librustdoc/html/static/js/scrape-examples.js", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "raw_url": "https://github.com/rust-lang/rust/raw/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js?ref=bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "patch": "@@ -1,24 +1,27 @@\n-/* global addClass, hasClass, removeClass, onEach */\n+/* eslint-env es6 */\n+/* eslint no-var: \"error\" */\n+/* eslint prefer-const: \"error\" */\n+/* global addClass, hasClass, removeClass, onEachLazy */\n \n (function () {\n     // Number of lines shown when code viewer is not expanded\n     const MAX_LINES = 10;\n \n     // Scroll code block to the given code location\n     function scrollToLoc(elt, loc) {\n-        var lines = elt.querySelector('.line-numbers');\n-        var scrollOffset;\n+        const lines = elt.querySelector('.line-numbers');\n+        let scrollOffset;\n \n         // If the block is greater than the size of the viewer,\n         // then scroll to the top of the block. Otherwise scroll\n         // to the middle of the block.\n         if (loc[1] - loc[0] > MAX_LINES) {\n-            var line = Math.max(0, loc[0] - 1);\n+            const line = Math.max(0, loc[0] - 1);\n             scrollOffset = lines.children[line].offsetTop;\n         } else {\n-            var wrapper = elt.querySelector(\".code-wrapper\");\n-            var halfHeight = wrapper.offsetHeight / 2;\n-            var offsetMid = (lines.children[loc[0]].offsetTop\n+            const wrapper = elt.querySelector(\".code-wrapper\");\n+            const halfHeight = wrapper.offsetHeight / 2;\n+            const offsetMid = (lines.children[loc[0]].offsetTop\n                              + lines.children[loc[1]].offsetTop) / 2;\n             scrollOffset = offsetMid - halfHeight;\n         }\n@@ -28,21 +31,21 @@\n     }\n \n     function updateScrapedExample(example) {\n-        var locs = JSON.parse(example.attributes.getNamedItem(\"data-locs\").textContent);\n-        var locIndex = 0;\n-        var highlights = example.querySelectorAll('.highlight');\n-        var link = example.querySelector('.scraped-example-title a');\n+        const locs = JSON.parse(example.attributes.getNamedItem(\"data-locs\").textContent);\n+        let locIndex = 0;\n+        const highlights = Array.prototype.slice.call(example.querySelectorAll('.highlight'));\n+        const link = example.querySelector('.scraped-example-title a');\n \n         if (locs.length > 1) {\n             // Toggle through list of examples in a given file\n-            var onChangeLoc = function(changeIndex) {\n+            const onChangeLoc = function(changeIndex) {\n                 removeClass(highlights[locIndex], 'focus');\n                 changeIndex();\n                 scrollToLoc(example, locs[locIndex][0]);\n                 addClass(highlights[locIndex], 'focus');\n \n-                var url = locs[locIndex][1];\n-                var title = locs[locIndex][2];\n+                const url = locs[locIndex][1];\n+                const title = locs[locIndex][2];\n \n                 link.href = url;\n                 link.innerHTML = title;\n@@ -63,7 +66,7 @@\n                 });\n         }\n \n-        var expandButton = example.querySelector('.expand');\n+        const expandButton = example.querySelector('.expand');\n         if (expandButton) {\n             expandButton.addEventListener('click', function () {\n                 if (hasClass(example, \"expanded\")) {\n@@ -79,24 +82,24 @@\n         scrollToLoc(example, locs[0][0]);\n     }\n \n-    var firstExamples = document.querySelectorAll('.scraped-example-list > .scraped-example');\n-    onEach(firstExamples, updateScrapedExample);\n-    onEach(document.querySelectorAll('.more-examples-toggle'), function(toggle) {\n+    const firstExamples = document.querySelectorAll('.scraped-example-list > .scraped-example');\n+    onEachLazy(firstExamples, updateScrapedExample);\n+    onEachLazy(document.querySelectorAll('.more-examples-toggle'), function(toggle) {\n         // Allow users to click the left border of the <details> section to close it,\n         // since the section can be large and finding the [+] button is annoying.\n-        toggle.querySelectorAll('.toggle-line, .hide-more').forEach(button => {\n+        onEachLazy(toggle.querySelectorAll('.toggle-line, .hide-more'), button => {\n             button.addEventListener('click', function() {\n                 toggle.open = false;\n             });\n         });\n \n-        var moreExamples = toggle.querySelectorAll('.scraped-example');\n+        const moreExamples = toggle.querySelectorAll('.scraped-example');\n         toggle.querySelector('summary').addEventListener('click', function() {\n             // Wrapping in setTimeout ensures the update happens after the elements are actually\n             // visible. This is necessary since updateScrapedExample calls scrollToLoc which\n             // depends on offsetHeight, a property that requires an element to be visible to\n             // compute correctly.\n-            setTimeout(function() { onEach(moreExamples, updateScrapedExample); });\n+            setTimeout(function() { onEachLazy(moreExamples, updateScrapedExample); });\n         }, {once: true});\n     });\n })();"}, {"sha": "a6f7dd74af6b0f91a7dd1d2ff7a6d6b991f99c05", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "patch": "@@ -112,10 +112,6 @@ window.initSearch = function(rawSearchIndex) {\n      *  @type {Array<Row>}\n      */\n     let searchIndex;\n-    /**\n-     *  @type {Array<string>}\n-     */\n-    let searchWords = [];\n     let currentResults;\n     const ALIASES = {};\n     const params = searchState.getQueryStringParams();\n@@ -2129,7 +2125,10 @@ window.initSearch = function(rawSearchIndex) {\n         search(undefined, true);\n     }\n \n-    searchWords = buildIndex(rawSearchIndex);\n+    /**\n+     *  @type {Array<string>}\n+     */\n+    const searchWords = buildIndex(rawSearchIndex);\n     registerSearchEvents();\n \n     function runSearchIfNeeded() {"}, {"sha": "7bc6f6cfe043d12f157766549bb57aa03083e8cf", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "patch": "@@ -1,7 +1,7 @@\n-// Local js definitions:\n /* eslint-env es6 */\n /* eslint no-var: \"error\" */\n /* eslint prefer-const: \"error\" */\n+// Local js definitions:\n /* global getSettingValue, getVirtualKey, onEachLazy, updateLocalStorage, updateSystemTheme */\n /* global addClass, removeClass */\n "}, {"sha": "c48a847665ef5a440ba999fc55270edc9bafc0bc", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 45, "deletions": 44, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "patch": "@@ -1,3 +1,7 @@\n+/* eslint-env es6 */\n+/* eslint no-var: \"error\" */\n+/* eslint prefer-const: \"error\" */\n+\n // From rust:\n /* global search, sourcesIndex */\n \n@@ -7,23 +11,23 @@\n (function() {\n \n function getCurrentFilePath() {\n-    var parts = window.location.pathname.split(\"/\");\n-    var rootPathParts = window.rootPath.split(\"/\");\n+    const parts = window.location.pathname.split(\"/\");\n+    const rootPathParts = window.rootPath.split(\"/\");\n \n-    for (var i = 0, len = rootPathParts.length; i < len; ++i) {\n-        if (rootPathParts[i] === \"..\") {\n+    for (const rootPathPart of rootPathParts) {\n+        if (rootPathPart === \"..\") {\n             parts.pop();\n         }\n     }\n-    var file = window.location.pathname.substring(parts.join(\"/\").length);\n+    let file = window.location.pathname.substring(parts.join(\"/\").length);\n     if (file.startsWith(\"/\")) {\n         file = file.substring(1);\n     }\n     return file.substring(0, file.length - 5);\n }\n \n function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n-    var name = document.createElement(\"div\");\n+    const name = document.createElement(\"div\");\n     name.className = \"name\";\n \n     fullPath += elem[\"name\"] + \"/\";\n@@ -37,31 +41,28 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n     };\n     name.innerText = elem[\"name\"];\n \n-    var i, len;\n-\n-    var children = document.createElement(\"div\");\n+    const children = document.createElement(\"div\");\n     children.className = \"children\";\n-    var folders = document.createElement(\"div\");\n+    const folders = document.createElement(\"div\");\n     folders.className = \"folders\";\n     if (elem.dirs) {\n-        for (i = 0, len = elem.dirs.length; i < len; ++i) {\n-            if (createDirEntry(elem.dirs[i], folders, fullPath, currentFile,\n-                               hasFoundFile)) {\n+        for (const dir of elem.dirs) {\n+            if (createDirEntry(dir, folders, fullPath, currentFile, hasFoundFile)) {\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n             }\n         }\n     }\n     children.appendChild(folders);\n \n-    var files = document.createElement(\"div\");\n+    const files = document.createElement(\"div\");\n     files.className = \"files\";\n     if (elem.files) {\n-        for (i = 0, len = elem.files.length; i < len; ++i) {\n-            var file = document.createElement(\"a\");\n-            file.innerText = elem.files[i];\n-            file.href = window.rootPath + \"src/\" + fullPath + elem.files[i] + \".html\";\n-            if (!hasFoundFile && currentFile === fullPath + elem.files[i]) {\n+        for (const file_text of elem.files) {\n+            const file = document.createElement(\"a\");\n+            file.innerText = file_text;\n+            file.href = window.rootPath + \"src/\" + fullPath + file_text + \".html\";\n+            if (!hasFoundFile && currentFile === fullPath + file_text) {\n                 file.className = \"selected\";\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n@@ -77,8 +78,8 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n }\n \n function toggleSidebar() {\n-    var sidebar = document.querySelector(\"nav.sidebar\");\n-    var child = this.children[0];\n+    const sidebar = document.querySelector(\"nav.sidebar\");\n+    const child = this.children[0];\n     if (child.innerText === \">\") {\n         sidebar.classList.add(\"expanded\");\n         child.innerText = \"<\";\n@@ -91,11 +92,11 @@ function toggleSidebar() {\n }\n \n function createSidebarToggle() {\n-    var sidebarToggle = document.createElement(\"div\");\n+    const sidebarToggle = document.createElement(\"div\");\n     sidebarToggle.id = \"sidebar-toggle\";\n     sidebarToggle.onclick = toggleSidebar;\n \n-    var inner = document.createElement(\"div\");\n+    const inner = document.createElement(\"div\");\n \n     if (getCurrentValue(\"source-sidebar-show\") === \"true\") {\n         inner.innerText = \"<\";\n@@ -113,23 +114,23 @@ function createSourceSidebar() {\n     if (!window.rootPath.endsWith(\"/\")) {\n         window.rootPath += \"/\";\n     }\n-    var container = document.querySelector(\"nav.sidebar\");\n+    const container = document.querySelector(\"nav.sidebar\");\n \n-    var sidebarToggle = createSidebarToggle();\n+    const sidebarToggle = createSidebarToggle();\n     container.insertBefore(sidebarToggle, container.firstChild);\n \n-    var sidebar = document.createElement(\"div\");\n+    const sidebar = document.createElement(\"div\");\n     sidebar.id = \"source-sidebar\";\n     if (getCurrentValue(\"source-sidebar-show\") !== \"true\") {\n         container.classList.remove(\"expanded\");\n     } else {\n         container.classList.add(\"expanded\");\n     }\n \n-    var currentFile = getCurrentFilePath();\n-    var hasFoundFile = false;\n+    const currentFile = getCurrentFilePath();\n+    let hasFoundFile = false;\n \n-    var title = document.createElement(\"div\");\n+    const title = document.createElement(\"div\");\n     title.className = \"title\";\n     title.innerText = \"Files\";\n     sidebar.appendChild(title);\n@@ -141,13 +142,13 @@ function createSourceSidebar() {\n \n     container.appendChild(sidebar);\n     // Focus on the current file in the source files sidebar.\n-    var selected_elem = sidebar.getElementsByClassName(\"selected\")[0];\n+    const selected_elem = sidebar.getElementsByClassName(\"selected\")[0];\n     if (typeof selected_elem !== \"undefined\") {\n         selected_elem.focus();\n     }\n }\n \n-var lineNumbersRegex = /^#?(\\d+)(?:-(\\d+))?$/;\n+const lineNumbersRegex = /^#?(\\d+)(?:-(\\d+))?$/;\n \n function highlightSourceLines(match) {\n     if (typeof match === \"undefined\") {\n@@ -156,21 +157,21 @@ function highlightSourceLines(match) {\n     if (!match) {\n         return;\n     }\n-    var from = parseInt(match[1], 10);\n-    var to = from;\n+    let from = parseInt(match[1], 10);\n+    let to = from;\n     if (typeof match[2] !== \"undefined\") {\n         to = parseInt(match[2], 10);\n     }\n     if (to < from) {\n-        var tmp = to;\n+        const tmp = to;\n         to = from;\n         from = tmp;\n     }\n-    var elem = document.getElementById(from);\n+    let elem = document.getElementById(from);\n     if (!elem) {\n         return;\n     }\n-    var x = document.getElementById(from);\n+    const x = document.getElementById(from);\n     if (x) {\n         x.scrollIntoView();\n     }\n@@ -179,7 +180,7 @@ function highlightSourceLines(match) {\n             removeClass(i_e, \"line-highlighted\");\n         });\n     });\n-    for (var i = from; i <= to; ++i) {\n+    for (let i = from; i <= to; ++i) {\n         elem = document.getElementById(i);\n         if (!elem) {\n             break;\n@@ -188,11 +189,11 @@ function highlightSourceLines(match) {\n     }\n }\n \n-var handleSourceHighlight = (function() {\n-    var prev_line_id = 0;\n+const handleSourceHighlight = (function() {\n+    let prev_line_id = 0;\n \n-    var set_fragment = function(name) {\n-        var x = window.scrollX,\n+    const set_fragment = function(name) {\n+        const x = window.scrollX,\n             y = window.scrollY;\n         if (searchState.browserSupportsHistoryApi()) {\n             history.replaceState(null, null, \"#\" + name);\n@@ -205,13 +206,13 @@ var handleSourceHighlight = (function() {\n     };\n \n     return function(ev) {\n-        var cur_line_id = parseInt(ev.target.id, 10);\n+        let cur_line_id = parseInt(ev.target.id, 10);\n         ev.preventDefault();\n \n         if (ev.shiftKey && prev_line_id) {\n             // Swap selection if needed\n             if (prev_line_id > cur_line_id) {\n-                var tmp = prev_line_id;\n+                const tmp = prev_line_id;\n                 prev_line_id = cur_line_id;\n                 cur_line_id = tmp;\n             }\n@@ -226,7 +227,7 @@ var handleSourceHighlight = (function() {\n }());\n \n window.addEventListener(\"hashchange\", function() {\n-    var match = window.location.hash.match(lineNumbersRegex);\n+    const match = window.location.hash.match(lineNumbersRegex);\n     if (match) {\n         return highlightSourceLines(match);\n     }"}, {"sha": "ae670ed989426ea5ffe146756f5e8d93de75f603", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 25, "deletions": 22, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/bfb13ec691dc60eec49f58c7ccbe0b34c2680280/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "patch": "@@ -1,38 +1,42 @@\n-var darkThemes = [\"dark\", \"ayu\"];\n+/* eslint-env es6 */\n+/* eslint no-var: \"error\" */\n+/* eslint prefer-const: \"error\" */\n+\n+const darkThemes = [\"dark\", \"ayu\"];\n window.currentTheme = document.getElementById(\"themeStyle\");\n window.mainTheme = document.getElementById(\"mainThemeStyle\");\n \n-var settingsDataset = (function () {\n-    var settingsElement = document.getElementById(\"default-settings\");\n+const settingsDataset = (function () {\n+    const settingsElement = document.getElementById(\"default-settings\");\n     if (settingsElement === null) {\n         return null;\n     }\n-    var dataset = settingsElement.dataset;\n+    const dataset = settingsElement.dataset;\n     if (dataset === undefined) {\n         return null;\n     }\n     return dataset;\n })();\n \n function getSettingValue(settingName) {\n-    var current = getCurrentValue(settingName);\n+    const current = getCurrentValue(settingName);\n     if (current !== null) {\n         return current;\n     }\n     if (settingsDataset !== null) {\n         // See the comment for `default_settings.into_iter()` etc. in\n         // `Options::from_matches` in `librustdoc/config.rs`.\n-        var def = settingsDataset[settingName.replace(/-/g,'_')];\n+        const def = settingsDataset[settingName.replace(/-/g,'_')];\n         if (def !== undefined) {\n             return def;\n         }\n     }\n     return null;\n }\n \n-var localStoredTheme = getSettingValue(\"theme\");\n+const localStoredTheme = getSettingValue(\"theme\");\n \n-var savedHref = [];\n+const savedHref = [];\n \n // eslint-disable-next-line no-unused-vars\n function hasClass(elem, className) {\n@@ -63,17 +67,16 @@ function removeClass(elem, className) {\n  */\n function onEach(arr, func, reversed) {\n     if (arr && arr.length > 0 && func) {\n-        var length = arr.length;\n-        var i;\n         if (reversed) {\n-            for (i = length - 1; i >= 0; --i) {\n+            const length = arr.length;\n+            for (let i = length - 1; i >= 0; --i) {\n                 if (func(arr[i])) {\n                     return true;\n                 }\n             }\n         } else {\n-            for (i = 0; i < length; ++i) {\n-                if (func(arr[i])) {\n+            for (const elem of arr) {\n+                if (func(elem)) {\n                     return true;\n                 }\n             }\n@@ -121,7 +124,7 @@ function getCurrentValue(name) {\n }\n \n function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {\n-    var newHref = mainStyleElem.href.replace(\n+    const newHref = mainStyleElem.href.replace(\n         /\\/rustdoc([^/]*)\\.css/, \"/\" + newTheme + \"$1\" + \".css\");\n \n     // If this new value comes from a system setting or from the previously\n@@ -134,7 +137,7 @@ function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {\n         return;\n     }\n \n-    var found = false;\n+    let found = false;\n     if (savedHref.length === 0) {\n         onEachLazy(document.getElementsByTagName(\"link\"), function(el) {\n             savedHref.push(el.href);\n@@ -161,17 +164,17 @@ function useSystemTheme(value) {\n     updateLocalStorage(\"use-system-theme\", value);\n \n     // update the toggle if we're on the settings page\n-    var toggle = document.getElementById(\"use-system-theme\");\n+    const toggle = document.getElementById(\"use-system-theme\");\n     if (toggle && toggle instanceof HTMLInputElement) {\n         toggle.checked = value;\n     }\n }\n \n-var updateSystemTheme = (function() {\n+const updateSystemTheme = (function() {\n     if (!window.matchMedia) {\n         // fallback to the CSS computed value\n         return function() {\n-            var cssTheme = getComputedStyle(document.documentElement)\n+            const cssTheme = getComputedStyle(document.documentElement)\n                 .getPropertyValue('content');\n \n             switchTheme(\n@@ -184,16 +187,16 @@ var updateSystemTheme = (function() {\n     }\n \n     // only listen to (prefers-color-scheme: dark) because light is the default\n-    var mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n+    const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n \n     function handlePreferenceChange(mql) {\n-        let use = function(theme) {\n+        const use = function(theme) {\n             switchTheme(window.currentTheme, window.mainTheme, theme, true);\n         };\n         // maybe the user has disabled the setting in the meantime!\n         if (getSettingValue(\"use-system-theme\") !== \"false\") {\n-            var lightTheme = getSettingValue(\"preferred-light-theme\") || \"light\";\n-            var darkTheme = getSettingValue(\"preferred-dark-theme\") || \"dark\";\n+            const lightTheme = getSettingValue(\"preferred-light-theme\") || \"light\";\n+            const darkTheme = getSettingValue(\"preferred-dark-theme\") || \"dark\";\n \n             if (mql.matches) {\n                 use(darkTheme);"}]}