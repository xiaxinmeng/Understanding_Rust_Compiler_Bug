{"sha": "5ff6cdca7ec664c7f96653e6c028b524757d60c4", "node_id": "C_kwDOAAsO6NoAKDVmZjZjZGNhN2VjNjY0YzdmOTY2NTNlNmMwMjhiNTI0NzU3ZDYwYzQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-29T05:14:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-29T05:14:20Z"}, "message": "Rollup merge of #107422 - Nilstrieb:erase-the-ice, r=compiler-errors\n\nAlso erase substs for new infcx in pin move error\n\nThe code originally correctly erased the regions of the type it passed to the newly created infcx. But after the `fn_sig` query was made to return an `EarlyBinder<T>`, some substs that were around were substituted there without erasing their regions. They were then passed into the newly cerated infcx, which caused the ICE.\n\nFixes #107419\n\nr? compiler-errors who reviewed the original PR adding this diagnostic", "tree": {"sha": "82e4887950def7221b09bd84282f766e0708224d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82e4887950def7221b09bd84282f766e0708224d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ff6cdca7ec664c7f96653e6c028b524757d60c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj1gCsCRBK7hj4Ov3rIwAAWA0IAKYFAGgFKH3Ziag09wJNDuPP\n3PY1GPYmRGDNtALBOrG2mnyZ4q3KrU7m3aHQHkX45DgeclWO2yk+B3PSx39Rbt9S\nr1WsgtKGpDYAjuA27p5LImJUMnjVBjCPhPcJv5yYXxv2g6Mh+4ArUYzvfSRnRbvk\nzdT1Hghsm2pJd83JYcoPdjXk+gsV1dxsuvepCuAN4a38mHlCHSvzOGfEHl0xibRk\nTdf4shlpHPlsS6yzXMyO4PBUXj7UbrgRnE6q8WRhlSXeeyJTohyh1WPHoHvZ+dcF\n0/SH43z5yft8ZkaUCF++Znsjbn55KJky+Lp18ojuGy6Iuv8C/TN24VCXjqGRlBo=\n=aY/S\n-----END PGP SIGNATURE-----\n", "payload": "tree 82e4887950def7221b09bd84282f766e0708224d\nparent 74655dc50762ec6f28bfedf1e87aea5bdade29eb\nparent 832751fe1df232e36b283fa136b4e26475e55c00\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1674969260 +0100\ncommitter GitHub <noreply@github.com> 1674969260 +0100\n\nRollup merge of #107422 - Nilstrieb:erase-the-ice, r=compiler-errors\n\nAlso erase substs for new infcx in pin move error\n\nThe code originally correctly erased the regions of the type it passed to the newly created infcx. But after the `fn_sig` query was made to return an `EarlyBinder<T>`, some substs that were around were substituted there without erasing their regions. They were then passed into the newly cerated infcx, which caused the ICE.\n\nFixes #107419\n\nr? compiler-errors who reviewed the original PR adding this diagnostic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff6cdca7ec664c7f96653e6c028b524757d60c4", "html_url": "https://github.com/rust-lang/rust/commit/5ff6cdca7ec664c7f96653e6c028b524757d60c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ff6cdca7ec664c7f96653e6c028b524757d60c4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74655dc50762ec6f28bfedf1e87aea5bdade29eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/74655dc50762ec6f28bfedf1e87aea5bdade29eb", "html_url": "https://github.com/rust-lang/rust/commit/74655dc50762ec6f28bfedf1e87aea5bdade29eb"}, {"sha": "832751fe1df232e36b283fa136b4e26475e55c00", "url": "https://api.github.com/repos/rust-lang/rust/commits/832751fe1df232e36b283fa136b4e26475e55c00", "html_url": "https://github.com/rust-lang/rust/commit/832751fe1df232e36b283fa136b4e26475e55c00"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "8c579bac7e8eb471c8dc8690eb7f7c3a7c62c5d1", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ff6cdca7ec664c7f96653e6c028b524757d60c4/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff6cdca7ec664c7f96653e6c028b524757d60c4/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=5ff6cdca7ec664c7f96653e6c028b524757d60c4", "patch": "@@ -1128,8 +1128,12 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                 \"{place_name} {partially_str}moved due to this method call{loop_message}\",\n                             ),\n                         );\n+\n                         let infcx = tcx.infer_ctxt().build();\n+                        // Erase and shadow everything that could be passed to the new infcx.\n                         let ty = tcx.erase_regions(moved_place.ty(self.body, tcx).ty);\n+                        let method_substs = tcx.erase_regions(method_substs);\n+\n                         if let ty::Adt(def, substs) = ty.kind()\n                             && Some(def.did()) == tcx.lang_items().pin_type()\n                             && let ty::Ref(_, _, hir::Mutability::Mut) = substs.type_at(0).kind()"}, {"sha": "0b9a3bae9619ce82cfd4af40de89fba768657a4f", "filename": "tests/ui/moves/pin-mut-reborrow-infer-var-issue-107419.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5ff6cdca7ec664c7f96653e6c028b524757d60c4/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5ff6cdca7ec664c7f96653e6c028b524757d60c4/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.fixed?ref=5ff6cdca7ec664c7f96653e6c028b524757d60c4", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+use std::pin::Pin;\n+\n+fn foo(_: &mut ()) {}\n+\n+fn main() {\n+    let mut uwu = ();\n+    let mut r = Pin::new(&mut uwu);\n+    foo(r.as_mut().get_mut());\n+    foo(r.get_mut()); //~ ERROR use of moved value\n+}"}, {"sha": "0e952b06ee118164e148c4e5ca2a3a56a5f974f6", "filename": "tests/ui/moves/pin-mut-reborrow-infer-var-issue-107419.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5ff6cdca7ec664c7f96653e6c028b524757d60c4/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff6cdca7ec664c7f96653e6c028b524757d60c4/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.rs?ref=5ff6cdca7ec664c7f96653e6c028b524757d60c4", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+use std::pin::Pin;\n+\n+fn foo(_: &mut ()) {}\n+\n+fn main() {\n+    let mut uwu = ();\n+    let mut r = Pin::new(&mut uwu);\n+    foo(r.get_mut());\n+    foo(r.get_mut()); //~ ERROR use of moved value\n+}"}, {"sha": "7e513b73c21b219b9c61c10efeccaea093205266", "filename": "tests/ui/moves/pin-mut-reborrow-infer-var-issue-107419.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5ff6cdca7ec664c7f96653e6c028b524757d60c4/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ff6cdca7ec664c7f96653e6c028b524757d60c4/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmoves%2Fpin-mut-reborrow-infer-var-issue-107419.stderr?ref=5ff6cdca7ec664c7f96653e6c028b524757d60c4", "patch": "@@ -0,0 +1,20 @@\n+error[E0382]: use of moved value: `r`\n+  --> $DIR/pin-mut-reborrow-infer-var-issue-107419.rs:10:9\n+   |\n+LL |     let mut r = Pin::new(&mut uwu);\n+   |         ----- move occurs because `r` has type `Pin<&mut ()>`, which does not implement the `Copy` trait\n+LL |     foo(r.get_mut());\n+   |           --------- `r` moved due to this method call\n+LL |     foo(r.get_mut());\n+   |         ^ value used here after move\n+   |\n+note: `Pin::<&'a mut T>::get_mut` takes ownership of the receiver `self`, which moves `r`\n+  --> $SRC_DIR/core/src/pin.rs:LL:COL\n+help: consider reborrowing the `Pin` instead of moving it\n+   |\n+LL |     foo(r.as_mut().get_mut());\n+   |           +++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}]}