{"sha": "e7abf34c1984196aadc3b3ee6e95887e22b68dea", "node_id": "C_kwDOAAsO6NoAKGU3YWJmMzRjMTk4NDE5NmFhZGMzYjNlZTZlOTU4ODdlMjJiNjhkZWE", "commit": {"author": {"name": "Mathew Horner", "email": "mathewhorner456@gmail.com", "date": "2022-09-16T01:25:29Z"}, "committer": {"name": "Mathew Horner", "email": "mathewhorner456@gmail.com", "date": "2022-09-16T01:25:29Z"}, "message": "Fix add reference action on macros.", "tree": {"sha": "e5459a36809bf87e22e175deb86f032aff8ac783", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5459a36809bf87e22e175deb86f032aff8ac783"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7abf34c1984196aadc3b3ee6e95887e22b68dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7abf34c1984196aadc3b3ee6e95887e22b68dea", "html_url": "https://github.com/rust-lang/rust/commit/e7abf34c1984196aadc3b3ee6e95887e22b68dea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7abf34c1984196aadc3b3ee6e95887e22b68dea/comments", "author": {"login": "mdx97", "id": 33100798, "node_id": "MDQ6VXNlcjMzMTAwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/33100798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdx97", "html_url": "https://github.com/mdx97", "followers_url": "https://api.github.com/users/mdx97/followers", "following_url": "https://api.github.com/users/mdx97/following{/other_user}", "gists_url": "https://api.github.com/users/mdx97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdx97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdx97/subscriptions", "organizations_url": "https://api.github.com/users/mdx97/orgs", "repos_url": "https://api.github.com/users/mdx97/repos", "events_url": "https://api.github.com/users/mdx97/events{/privacy}", "received_events_url": "https://api.github.com/users/mdx97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdx97", "id": 33100798, "node_id": "MDQ6VXNlcjMzMTAwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/33100798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdx97", "html_url": "https://github.com/mdx97", "followers_url": "https://api.github.com/users/mdx97/followers", "following_url": "https://api.github.com/users/mdx97/following{/other_user}", "gists_url": "https://api.github.com/users/mdx97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdx97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdx97/subscriptions", "organizations_url": "https://api.github.com/users/mdx97/orgs", "repos_url": "https://api.github.com/users/mdx97/repos", "events_url": "https://api.github.com/users/mdx97/events{/privacy}", "received_events_url": "https://api.github.com/users/mdx97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b61be297568015de5d038f31a304c7a69679bc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b61be297568015de5d038f31a304c7a69679bc7", "html_url": "https://github.com/rust-lang/rust/commit/2b61be297568015de5d038f31a304c7a69679bc7"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "937f98f47983ad7201a2d864b82f911dc1c8027e", "filename": "crates/ide-diagnostics/src/handlers/type_mismatch.rs", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e7abf34c1984196aadc3b3ee6e95887e22b68dea/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7abf34c1984196aadc3b3ee6e95887e22b68dea/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs?ref=e7abf34c1984196aadc3b3ee6e95887e22b68dea", "patch": "@@ -59,9 +59,6 @@ fn add_reference(\n     d: &hir::TypeMismatch,\n     acc: &mut Vec<Assist>,\n ) -> Option<()> {\n-    let root = ctx.sema.db.parse_or_expand(d.expr.file_id)?;\n-    let expr_node = d.expr.value.to_node(&root);\n-\n     let range = ctx.sema.diagnostics_display_range(d.expr.clone().map(|it| it.into())).range;\n \n     let (_, mutability) = d.expected.as_reference()?;\n@@ -72,7 +69,7 @@ fn add_reference(\n \n     let ampersands = format!(\"&{}\", mutability.as_keyword_for_ref());\n \n-    let edit = TextEdit::insert(expr_node.syntax().text_range().start(), ampersands);\n+    let edit = TextEdit::insert(range.start(), ampersands);\n     let source_change =\n         SourceChange::from_text_edit(d.expr.file_id.original_file(ctx.sema.db), edit);\n     acc.push(fix(\"add_reference_here\", \"Add reference here\", source_change, range));\n@@ -314,6 +311,34 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn test_add_reference_to_macro_call() {\n+        check_fix(\n+            r#\"\n+macro_rules! hello_world {\n+    () => {\n+        \"Hello World\".to_string()\n+    };\n+}\n+fn test(foo: &String) {}\n+fn main() {\n+    test($0hello_world!());\n+}\n+            \"#,\n+            r#\"\n+macro_rules! hello_world {\n+    () => {\n+        \"Hello World\".to_string()\n+    };\n+}\n+fn test(foo: &String) {}\n+fn main() {\n+    test(&hello_world!());\n+}\n+            \"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_add_mutable_reference_to_let_stmt() {\n         check_fix("}]}