{"sha": "61edb0ccb791934fa86000a9e59a23a9fc1f983c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZWRiMGNjYjc5MTkzNGZhODYwMDBhOWU1OWEyM2E5ZmMxZjk4M2M=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-27T14:57:47Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-04T15:04:52Z"}, "message": "Separate the driver into its own crate that uses trans, typeck.", "tree": {"sha": "174394323a70d7c401de7895e4cadc65c4aaaff5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/174394323a70d7c401de7895e4cadc65c4aaaff5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61edb0ccb791934fa86000a9e59a23a9fc1f983c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61edb0ccb791934fa86000a9e59a23a9fc1f983c", "html_url": "https://github.com/rust-lang/rust/commit/61edb0ccb791934fa86000a9e59a23a9fc1f983c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61edb0ccb791934fa86000a9e59a23a9fc1f983c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93eb4333a085008a55e98259e454c5c592a03d45", "url": "https://api.github.com/repos/rust-lang/rust/commits/93eb4333a085008a55e98259e454c5c592a03d45", "html_url": "https://github.com/rust-lang/rust/commit/93eb4333a085008a55e98259e454c5c592a03d45"}], "stats": {"total": 161, "additions": 100, "deletions": 61}, "files": [{"sha": "3a2def389cc24e92e907ad9fbcdf9e5c56393d35", "filename": "mk/crates.mk", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -53,8 +53,8 @@ TARGET_CRATES := libc std flate arena term \\\n                  serialize getopts collections test time rand \\\n                  log regex graphviz core rbml alloc rustrt \\\n                  unicode\n-HOST_CRATES := syntax rustc rustc_typeck rustc_trans rustdoc regex_macros fmt_macros \\\n-\t       rustc_llvm rustc_back\n+RUSTC_CRATES := rustc rustc_typeck rustc_driver rustc_trans rustc_back rustc_llvm \n+HOST_CRATES := syntax $(RUSTC_CRATES) rustdoc regex_macros fmt_macros\n CRATES := $(TARGET_CRATES) $(HOST_CRATES)\n TOOLS := compiletest rustdoc rustc\n \n@@ -67,14 +67,16 @@ DEPS_std := core libc rand alloc collections rustrt unicode \\\n \tnative:rust_builtin native:backtrace\n DEPS_graphviz := std\n DEPS_syntax := std term serialize log fmt_macros arena libc\n+DEPS_rustc_driver := arena flate getopts graphviz libc rustc rustc_back \\\n+                     rustc_typeck log syntax serialize rustc_llvm rustc_trans\n DEPS_rustc_trans := arena flate getopts graphviz libc rustc rustc_back \\\n-                    rustc_typeck log syntax serialize rustc_llvm\n+\t                log syntax serialize rustc_llvm\n DEPS_rustc_typeck := rustc syntax\n DEPS_rustc := syntax flate arena serialize getopts rbml \\\n               time log graphviz rustc_llvm rustc_back\n DEPS_rustc_llvm := native:rustllvm libc std\n DEPS_rustc_back := std syntax rustc_llvm flate log libc\n-DEPS_rustdoc := rustc rustc_trans native:hoedown serialize getopts \\\n+DEPS_rustdoc := rustc rustc_driver native:hoedown serialize getopts \\\n                 test time\n DEPS_flate := std native:miniz\n DEPS_arena := std\n@@ -96,7 +98,7 @@ DEPS_fmt_macros = std\n \n TOOL_DEPS_compiletest := test getopts\n TOOL_DEPS_rustdoc := rustdoc\n-TOOL_DEPS_rustc := rustc_trans\n+TOOL_DEPS_rustc := rustc_driver\n TOOL_SOURCE_compiletest := $(S)src/compiletest/compiletest.rs\n TOOL_SOURCE_rustdoc := $(S)src/driver/driver.rs\n TOOL_SOURCE_rustc := $(S)src/driver/driver.rs\n@@ -115,8 +117,9 @@ ONLY_RLIB_unicode := 1\n DOC_CRATES := $(filter-out rustc, \\\n               $(filter-out rustc_trans, \\\n               $(filter-out rustc_typeck, \\\n-              $(filter-out syntax, $(CRATES)))))\n-COMPILER_DOC_CRATES := rustc rustc_trans rustc_typeck syntax\n+              $(filter-out rustc_driver, \\\n+              $(filter-out syntax, $(CRATES))))))\n+COMPILER_DOC_CRATES := rustc rustc_trans rustc_typeck rustc_driver syntax\n \n # This macro creates some simple definitions for each crate being built, just\n # some munging of all of the parameters above."}, {"sha": "5c29cb4ec72760f3813ff1270b1c8b93d8005a58", "filename": "src/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fdriver.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -12,6 +12,6 @@\n extern crate \"rustdoc\" as this;\n \n #[cfg(rustc)]\n-extern crate \"rustc_trans\" as this;\n+extern crate \"rustc_driver\" as this;\n \n fn main() { this::main() }"}, {"sha": "437b0257a9759f18e3500ec0a79f23ba7a639d23", "filename": "src/librustc_driver/driver.rs", "status": "renamed", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -8,30 +8,29 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use back::link;\n-use back::write;\n-use session::Session;\n-use session::config::{mod, Input, OutputFilenames};\n-use lint;\n-use metadata::creader;\n-use middle::{stability, ty, reachable};\n-use middle::dependency_format;\n-use middle;\n-use plugin::load::Plugins;\n-use plugin::registry::Registry;\n-use plugin;\n+use rustc::session::Session;\n+use rustc::session::config::{mod, Input, OutputFilenames};\n+use rustc::lint;\n+use rustc::metadata::creader;\n+use rustc::middle::{stability, ty, reachable};\n+use rustc::middle::dependency_format;\n+use rustc::middle;\n+use rustc::plugin::load::Plugins;\n+use rustc::plugin::registry::Registry;\n+use rustc::plugin;\n+use rustc::util::common::time;\n+use rustc_trans::back::link;\n+use rustc_trans::back::write;\n+use rustc_trans::save;\n+use rustc_trans::trans;\n use rustc_typeck as typeck;\n-use trans;\n-\n-use util::common::time;\n \n use serialize::{json, Encodable};\n \n use std::io;\n use std::io::fs;\n use std::os;\n use arena::TypedArena;\n-use save;\n use syntax::ast;\n use syntax::ast_map;\n use syntax::attr;", "previous_filename": "src/librustc_trans/driver/driver.rs"}, {"sha": "efad07005b9b908a93d2ec4ce8da036005c39d3d", "filename": "src/librustc_driver/lib.rs", "status": "renamed", "additions": 48, "deletions": 10, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,30 +8,62 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-pub use syntax::diagnostic;\n+//! The Rust compiler.\n+//!\n+//! # Note\n+//!\n+//! This API is completely unstable and subject to change.\n+\n+#![crate_name = \"rustc_driver\"]\n+#![experimental]\n+#![crate_type = \"dylib\"]\n+#![crate_type = \"rlib\"]\n+#![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n+      html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n+      html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n+\n+#![feature(default_type_params, globs, if_let, import_shadowing, macro_rules, phase, quote)]\n+#![feature(slicing_syntax, unsafe_destructor)]\n+#![feature(rustc_diagnostic_macros)]\n+\n+extern crate arena;\n+extern crate flate;\n+extern crate getopts;\n+extern crate graphviz;\n+extern crate libc;\n+extern crate rustc;\n+extern crate rustc_typeck;\n+extern crate rustc_back;\n+extern crate rustc_trans;\n+#[phase(plugin, link)] extern crate log;\n+#[phase(plugin, link)] extern crate syntax;\n+extern crate serialize;\n+extern crate \"rustc_llvm\" as llvm;\n \n-use back::link;\n-use session::{config, Session, build_session};\n-use session::config::Input;\n-use lint::Lint;\n-use lint;\n-use metadata;\n+pub use syntax::diagnostic;\n \n+use rustc_trans::back::link;\n+use rustc::session::{config, Session, build_session};\n+use rustc::session::config::Input;\n+use rustc::lint::Lint;\n+use rustc::lint;\n+use rustc::metadata;\n use rustc::DIAGNOSTICS;\n \n use std::any::AnyRefExt;\n use std::io;\n use std::os;\n use std::task::TaskBuilder;\n \n-use session::early_error;\n+use rustc::session::early_error;\n \n use syntax::ast;\n use syntax::parse;\n use syntax::diagnostic::Emitter;\n use syntax::diagnostics;\n \n-use getopts;\n+#[cfg(test)]\n+pub mod test;\n \n pub mod driver;\n pub mod pretty;\n@@ -507,3 +539,9 @@ pub fn monitor(f: proc():Send) {\n     }\n }\n \n+pub fn main() {\n+    let args = std::os::args();\n+    let result = run(args);\n+    std::os::set_exit_status(result);\n+}\n+", "previous_filename": "src/librustc_trans/driver/mod.rs"}, {"sha": "1fbbc9c05213b3966aea81484bd6a7c7add3bf3d", "filename": "src/librustc_driver/mod.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fmod.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -0,0 +1,10 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+"}, {"sha": "b6441ab4944f7da76e7e6ab8bdc6da20f866a173", "filename": "src/librustc_driver/pretty.rs", "status": "renamed", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -15,19 +15,18 @@ pub use self::PpSourceMode::*;\n pub use self::PpMode::*;\n use self::NodesMatchingUII::*;\n \n-use back::link;\n-\n-use session::Session;\n-use session::config::{mod, Input};\n-use driver::driver::{mod};\n-\n-use middle::ty;\n-use middle::borrowck::{mod, FnPartsWithCFG};\n-use middle::borrowck::graphviz as borrowck_dot;\n-use middle::cfg;\n-use middle::cfg::graphviz::LabelledCFG;\n-\n-use util::ppaux;\n+use rustc_trans::back::link;\n+\n+use driver;\n+\n+use rustc::middle::ty;\n+use rustc::middle::borrowck::{mod, FnPartsWithCFG};\n+use rustc::middle::borrowck::graphviz as borrowck_dot;\n+use rustc::middle::cfg;\n+use rustc::middle::cfg::graphviz::LabelledCFG;\n+use rustc::session::Session;\n+use rustc::session::config::{mod, Input};\n+use rustc::util::ppaux;\n \n use syntax::ast;\n use syntax::ast_map::{mod, blocks, NodePrinter};", "previous_filename": "src/librustc_trans/driver/pretty.rs"}, {"sha": "9244e6909e8a45de4094d1ea9231e9e4e8a3e3ad", "filename": "src/librustc_driver/test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "previous_filename": "src/librustc_trans/test.rs"}, {"sha": "4e25921e0b29bda68f21906847e660d0994a1273", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -32,7 +32,6 @@ extern crate getopts;\n extern crate graphviz;\n extern crate libc;\n extern crate rustc;\n-extern crate rustc_typeck;\n extern crate rustc_back;\n #[phase(plugin, link)] extern crate log;\n #[phase(plugin, link)] extern crate syntax;\n@@ -66,17 +65,7 @@ pub mod back {\n \n pub mod trans;\n pub mod save;\n-pub mod driver;\n \n pub mod lib {\n     pub use llvm;\n }\n-\n-pub fn main() {\n-    let args = std::os::args();\n-    let result = driver::run(args);\n-    std::os::set_exit_status(result);\n-}\n-\n-#[cfg(test)]\n-pub mod test;"}, {"sha": "4cd88bca51e93a75aa2a4cf8d969cc5b6ecea755", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n pub use self::MaybeTyped::*;\n \n-use rustc_trans::driver::driver;\n+use rustc_driver::driver;\n use rustc::session::{mod, config};\n use rustc::middle::{privacy, ty};\n use rustc::lint;"}, {"sha": "1e7de50cf879dcf7cdea4eb1227001dff98b0e8f", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -21,6 +21,7 @@ extern crate getopts;\n extern crate libc;\n extern crate rustc;\n extern crate rustc_trans;\n+extern crate rustc_driver;\n extern crate serialize;\n extern crate syntax;\n extern crate \"test\" as testing;\n@@ -163,7 +164,7 @@ pub fn main_args(args: &[String]) -> int {\n         usage(args[0].as_slice());\n         return 0;\n     } else if matches.opt_present(\"version\") {\n-        match rustc_trans::driver::version(\"rustdoc\", &matches) {\n+        match rustc_driver::version(\"rustdoc\", &matches) {\n             Some(err) => {\n                 println!(\"{}\", err);\n                 return 1"}, {"sha": "7ca7ae4b21149ade1afe461deaf8e821a93ea974", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61edb0ccb791934fa86000a9e59a23a9fc1f983c/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=61edb0ccb791934fa86000a9e59a23a9fc1f983c", "patch": "@@ -19,7 +19,7 @@ use std::string::String;\n use std::collections::{HashSet, HashMap};\n use testing;\n use rustc::session::{mod, config};\n-use rustc_trans::driver::driver;\n+use rustc_driver::driver;\n use syntax::ast;\n use syntax::codemap::{CodeMap, dummy_spanned};\n use syntax::diagnostic;"}]}