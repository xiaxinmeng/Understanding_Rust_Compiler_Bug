{"sha": "eb476c6c70bccb87378462e4854f8b8fa12c40be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNDc2YzZjNzBiY2NiODczNzg0NjJlNDg1NGY4YjhmYTEyYzQwYmU=", "commit": {"author": {"name": "Marc Dominik Migge", "email": "marcmigge@gmx.net", "date": "2021-01-18T19:18:56Z"}, "committer": {"name": "Marc Dominik Migge", "email": "marcmigge@gmx.net", "date": "2021-01-18T19:18:56Z"}, "message": "Split up tests for unit arg expressions", "tree": {"sha": "b196e8b1c6922f5fb033e57bff6b34cfbb9b64eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b196e8b1c6922f5fb033e57bff6b34cfbb9b64eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb476c6c70bccb87378462e4854f8b8fa12c40be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb476c6c70bccb87378462e4854f8b8fa12c40be", "html_url": "https://github.com/rust-lang/rust/commit/eb476c6c70bccb87378462e4854f8b8fa12c40be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb476c6c70bccb87378462e4854f8b8fa12c40be/comments", "author": {"login": "mdm", "id": 75325, "node_id": "MDQ6VXNlcjc1MzI1", "avatar_url": "https://avatars.githubusercontent.com/u/75325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdm", "html_url": "https://github.com/mdm", "followers_url": "https://api.github.com/users/mdm/followers", "following_url": "https://api.github.com/users/mdm/following{/other_user}", "gists_url": "https://api.github.com/users/mdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdm/subscriptions", "organizations_url": "https://api.github.com/users/mdm/orgs", "repos_url": "https://api.github.com/users/mdm/repos", "events_url": "https://api.github.com/users/mdm/events{/privacy}", "received_events_url": "https://api.github.com/users/mdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdm", "id": 75325, "node_id": "MDQ6VXNlcjc1MzI1", "avatar_url": "https://avatars.githubusercontent.com/u/75325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdm", "html_url": "https://github.com/mdm", "followers_url": "https://api.github.com/users/mdm/followers", "following_url": "https://api.github.com/users/mdm/following{/other_user}", "gists_url": "https://api.github.com/users/mdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdm/subscriptions", "organizations_url": "https://api.github.com/users/mdm/orgs", "repos_url": "https://api.github.com/users/mdm/repos", "events_url": "https://api.github.com/users/mdm/events{/privacy}", "received_events_url": "https://api.github.com/users/mdm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c347d3d0686d8892512dcc1e13102d15afcc6dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c347d3d0686d8892512dcc1e13102d15afcc6dd", "html_url": "https://github.com/rust-lang/rust/commit/0c347d3d0686d8892512dcc1e13102d15afcc6dd"}], "stats": {"total": 134, "additions": 78, "deletions": 56}, "files": [{"sha": "cce543006d77f0b68d0abe7b433d51ac6c4a9167", "filename": "tests/ui/unit_arg.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.rs?ref=eb476c6c70bccb87378462e4854f8b8fa12c40be", "patch": "@@ -60,17 +60,6 @@ fn bad() {\n     // in this case, the suggestion can be inlined, no need for a surrounding block\n     // foo(()); foo(()) instead of { foo(()); foo(()) }\n     foo(foo(()));\n-    foo(if true {\n-        1;\n-    });\n-    foo(match Some(1) {\n-        Some(_) => {\n-            1;\n-        },\n-        None => {\n-            0;\n-        },\n-    });\n }\n \n fn ok() {\n@@ -84,11 +73,6 @@ fn ok() {\n     question_mark();\n     let named_unit_arg = ();\n     foo(named_unit_arg);\n-    foo(if true { 1 } else { 0 });\n-    foo(match Some(1) {\n-        Some(_) => 1,\n-        None => 0,\n-    });\n }\n \n fn question_mark() -> Result<(), ()> {"}, {"sha": "8e3f1811c6599e514027072a32e5bb49b8598265", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 2, "deletions": 40, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=eb476c6c70bccb87378462e4854f8b8fa12c40be", "patch": "@@ -166,45 +166,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:63:5\n-   |\n-LL | /     foo(if true {\n-LL | |         1;\n-LL | |     });\n-   | |______^\n-   |\n-help: move the expression in front of the call and replace it with the unit literal `()`\n-   |\n-LL |     if true {\n-LL |         1;\n-LL |     };\n-LL |     foo(());\n-   |\n-\n-error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:66:5\n-   |\n-LL | /     foo(match Some(1) {\n-LL | |         Some(_) => {\n-LL | |             1;\n-LL | |         },\n-...  |\n-LL | |         },\n-LL | |     });\n-   | |______^\n-   |\n-help: move the expression in front of the call and replace it with the unit literal `()`\n-   |\n-LL |     match Some(1) {\n-LL |         Some(_) => {\n-LL |             1;\n-LL |         },\n-LL |         None => {\n-LL |             0;\n- ...\n-\n-error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:113:5\n+  --> $DIR/unit_arg.rs:97:5\n    |\n LL |     Some(foo(1))\n    |     ^^^^^^^^^^^^\n@@ -215,5 +177,5 @@ LL |     foo(1);\n LL |     Some(())\n    |\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "a6807cb2e973c9a080a9e284e973d55e91da1a86", "filename": "tests/ui/unit_arg_expressions.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_expressions.rs?ref=eb476c6c70bccb87378462e4854f8b8fa12c40be", "patch": "@@ -0,0 +1,35 @@\n+#![warn(clippy::unit_arg)]\n+#![allow(clippy::no_effect)]\n+\n+use std::fmt::Debug;\n+\n+fn foo<T: Debug>(t: T) {\n+    println!(\"{:?}\", t);\n+}\n+\n+fn bad() {\n+    foo(if true {\n+        1;\n+    });\n+    foo(match Some(1) {\n+        Some(_) => {\n+            1;\n+        },\n+        None => {\n+            0;\n+        },\n+    });\n+}\n+\n+fn ok() {\n+    foo(if true { 1 } else { 0 });\n+    foo(match Some(1) {\n+        Some(_) => 1,\n+        None => 0,\n+    });\n+}\n+\n+fn main() {\n+    bad();\n+    ok();\n+}"}, {"sha": "9fb08106b723371b492b0db900987259d7b26078", "filename": "tests/ui/unit_arg_expressions.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_expressions.stderr?ref=eb476c6c70bccb87378462e4854f8b8fa12c40be", "patch": "@@ -0,0 +1,41 @@\n+error: passing a unit value to a function\n+  --> $DIR/unit_arg_expressions.rs:11:5\n+   |\n+LL | /     foo(if true {\n+LL | |         1;\n+LL | |     });\n+   | |______^\n+   |\n+   = note: `-D clippy::unit-arg` implied by `-D warnings`\n+help: move the expression in front of the call and replace it with the unit literal `()`\n+   |\n+LL |     if true {\n+LL |         1;\n+LL |     };\n+LL |     foo(());\n+   |\n+\n+error: passing a unit value to a function\n+  --> $DIR/unit_arg_expressions.rs:14:5\n+   |\n+LL | /     foo(match Some(1) {\n+LL | |         Some(_) => {\n+LL | |             1;\n+LL | |         },\n+...  |\n+LL | |         },\n+LL | |     });\n+   | |______^\n+   |\n+help: move the expression in front of the call and replace it with the unit literal `()`\n+   |\n+LL |     match Some(1) {\n+LL |         Some(_) => {\n+LL |             1;\n+LL |         },\n+LL |         None => {\n+LL |             0;\n+ ...\n+\n+error: aborting due to 2 previous errors\n+"}]}