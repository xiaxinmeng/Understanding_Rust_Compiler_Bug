{"sha": "3e39f0bc0e96f76610104918edaa5912f4f352df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMzlmMGJjMGU5NmY3NjYxMDEwNDkxOGVkYWE1OTEyZjRmMzUyZGY=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2015-01-29T22:03:36Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2015-02-03T22:34:42Z"}, "message": "Rename std::path to std::old_path\n\nAs part of [RFC 474](https://github.com/rust-lang/rfcs/pull/474), this\ncommit renames `std::path` to `std::old_path`, leaving the existing path\nAPI in place to ease migration to the new one. Updating should be as\nsimple as adjusting imports, and the prelude still maps to the old path\nAPIs for now.\n\n[breaking-change]", "tree": {"sha": "19f32ce01fd97eb21b2e272a260f32a0dba6d499", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19f32ce01fd97eb21b2e272a260f32a0dba6d499"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e39f0bc0e96f76610104918edaa5912f4f352df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e39f0bc0e96f76610104918edaa5912f4f352df", "html_url": "https://github.com/rust-lang/rust/commit/3e39f0bc0e96f76610104918edaa5912f4f352df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e39f0bc0e96f76610104918edaa5912f4f352df/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b2ed14906fd9f9daa27cc7d1dad263d2f5ff450", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b2ed14906fd9f9daa27cc7d1dad263d2f5ff450", "html_url": "https://github.com/rust-lang/rust/commit/3b2ed14906fd9f9daa27cc7d1dad263d2f5ff450"}], "stats": {"total": 75, "additions": 38, "deletions": 37}, "files": [{"sha": "161f6c78921630e68c952fdeb90de7fe4627620c", "filename": "src/libcore/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibcore%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibcore%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ferror.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -51,7 +51,7 @@\n //! use std::error::FromError;\n //! use std::old_io::{File, IoError};\n //! use std::os::{MemoryMap, MapError};\n-//! use std::path::Path;\n+//! use std::old_path::Path;\n //!\n //! enum MyError {\n //!     Io(IoError),"}, {"sha": "1c931856fa17c5a9e9c9d82be30304d8e41fe715", "filename": "src/libgraphviz/maybe_owned_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibgraphviz%2Fmaybe_owned_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibgraphviz%2Fmaybe_owned_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Fmaybe_owned_vec.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -17,7 +17,7 @@ use std::cmp::Ordering;\n use std::default::Default;\n use std::fmt;\n use std::iter::FromIterator;\n-use std::path::BytesContainer;\n+use std::old_path::BytesContainer;\n use std::slice;\n \n // Note 1: It is not clear whether the flexibility of providing both"}, {"sha": "bffee9d49334da43c3bedcb1d7743a7e66523f1b", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -306,7 +306,7 @@ impl Target {\n         use std::env;\n         use std::ffi::OsString;\n         use std::old_io::File;\n-        use std::path::Path;\n+        use std::old_path::Path;\n         use serialize::json;\n \n         fn load_file(path: &Path) -> Result<Target, String> {"}, {"sha": "0ced4066f625b7150238385cdc832b92b5ea159f", "filename": "src/librustc_trans/trans/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -1590,7 +1590,7 @@ fn compile_unit_metadata(cx: &CrateContext) -> DIDescriptor {\n                     Some(ref p) if p.is_relative() => {\n                         // prepend \"./\" if necessary\n                         let dotdot = b\"..\";\n-                        let prefix: &[u8] = &[dotdot[0], ::std::path::SEP_BYTE];\n+                        let prefix: &[u8] = &[dotdot[0], ::std::old_path::SEP_BYTE];\n                         let mut path_bytes = p.as_vec().to_vec();\n \n                         if &path_bytes[..2] != prefix &&"}, {"sha": "57eaf042aa02edc676697cb3173d92d881dd0209", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -49,7 +49,7 @@ use rustc::middle::stability;\n use std::rc::Rc;\n use std::u32;\n use std::str::Str as StrTrait; // Conflicts with Str variant\n-use std::path::Path as FsPath; // Conflicts with Path struct\n+use std::old_path::Path as FsPath; // Conflicts with Path struct\n \n use core::DocContext;\n use doctree;"}, {"sha": "517907bcf58e347c3e94b7f876e66026a7aef97d", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -14,7 +14,7 @@\n Core encoding and decoding interfaces.\n */\n \n-use std::path;\n+use std::old_path;\n use std::rc::Rc;\n use std::cell::{Cell, RefCell};\n use std::sync::Arc;\n@@ -538,29 +538,29 @@ macro_rules! tuple {\n \n tuple! { T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, }\n \n-impl Encodable for path::posix::Path {\n+impl Encodable for old_path::posix::Path {\n     fn encode<S: Encoder>(&self, e: &mut S) -> Result<(), S::Error> {\n         self.as_vec().encode(e)\n     }\n }\n \n-impl Decodable for path::posix::Path {\n-    fn decode<D: Decoder>(d: &mut D) -> Result<path::posix::Path, D::Error> {\n+impl Decodable for old_path::posix::Path {\n+    fn decode<D: Decoder>(d: &mut D) -> Result<old_path::posix::Path, D::Error> {\n         let bytes: Vec<u8> = try!(Decodable::decode(d));\n-        Ok(path::posix::Path::new(bytes))\n+        Ok(old_path::posix::Path::new(bytes))\n     }\n }\n \n-impl Encodable for path::windows::Path {\n+impl Encodable for old_path::windows::Path {\n     fn encode<S: Encoder>(&self, e: &mut S) -> Result<(), S::Error> {\n         self.as_vec().encode(e)\n     }\n }\n \n-impl Decodable for path::windows::Path {\n-    fn decode<D: Decoder>(d: &mut D) -> Result<path::windows::Path, D::Error> {\n+impl Decodable for old_path::windows::Path {\n+    fn decode<D: Decoder>(d: &mut D) -> Result<old_path::windows::Path, D::Error> {\n         let bytes: Vec<u8> = try!(Decodable::decode(d));\n-        Ok(path::windows::Path::new(bytes))\n+        Ok(old_path::windows::Path::new(bytes))\n     }\n }\n "}, {"sha": "559a68542efc890492144a2ec5289b739e059b68", "filename": "src/libstd/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -57,7 +57,7 @@ pub fn current_dir() -> IoResult<Path> {\n ///\n /// ```rust\n /// use std::env;\n-/// use std::path::Path;\n+/// use std::old_path::Path;\n ///\n /// let root = Path::new(\"/\");\n /// assert!(env::set_current_dir(&root).is_ok());"}, {"sha": "bd4763d7bd475eb6e99f417604ce27664c5cfcd5", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -251,6 +251,7 @@ pub mod old_io;\n pub mod os;\n pub mod env;\n pub mod path;\n+pub mod old_path;\n pub mod rand;\n pub mod time;\n "}, {"sha": "88ca6667d55deba1e56b8446824b6a9f73c48ddc", "filename": "src/libstd/old_io/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Ffs.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -61,8 +61,8 @@ use old_io;\n use iter::{Iterator, Extend};\n use option::Option;\n use option::Option::{Some, None};\n-use path::{Path, GenericPath};\n-use path;\n+use old_path::{Path, GenericPath};\n+use old_path;\n use result::Result::{Err, Ok};\n use slice::SliceExt;\n use string::String;\n@@ -782,7 +782,7 @@ pub trait PathExtensions {\n     fn is_dir(&self) -> bool;\n }\n \n-impl PathExtensions for path::Path {\n+impl PathExtensions for old_path::Path {\n     fn stat(&self) -> IoResult<FileStat> { stat(self) }\n     fn lstat(&self) -> IoResult<FileStat> { lstat(self) }\n     fn exists(&self) -> bool {"}, {"sha": "8c4a10a55d489d86865f8ca661754fefc97d56b5", "filename": "src/libstd/old_io/net/pipe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Fnet%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Fnet%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fnet%2Fpipe.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -23,7 +23,7 @@\n use prelude::v1::*;\n \n use ffi::CString;\n-use path::BytesContainer;\n+use old_path::BytesContainer;\n use old_io::{Listener, Acceptor, IoResult, TimedOut, standard_error};\n use sys::pipe::UnixAcceptor as UnixAcceptorImp;\n use sys::pipe::UnixListener as UnixListenerImp;"}, {"sha": "27af957e18e18614c591e47fd2911a9672cdd8f2", "filename": "src/libstd/old_io/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fprocess.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -25,7 +25,7 @@ use old_io::{IoResult, IoError};\n use old_io;\n use libc;\n use os;\n-use path::BytesContainer;\n+use old_path::BytesContainer;\n use sync::mpsc::{channel, Receiver};\n use sys::fs::FileDesc;\n use sys::process::Process as ProcessImp;"}, {"sha": "a227116dfae997b4c3818f888fba4abf3a30e8bb", "filename": "src/libstd/old_io/tempfile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_io%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Ftempfile.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -17,7 +17,7 @@ use old_io;\n use ops::Drop;\n use option::Option::{None, Some};\n use option::Option;\n-use path::{Path, GenericPath};\n+use old_path::{Path, GenericPath};\n use rand::{Rng, thread_rng};\n use result::Result::{Ok, Err};\n use str::StrExt;"}, {"sha": "0d80258d7e04f1f3b590e30db7057f2b97bed0b9", "filename": "src/libstd/old_path/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_path%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_path%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_path%2Fmod.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "previous_filename": "src/libstd/path/mod.rs"}, {"sha": "8bcdd89623d8fb91a0e8b10e2f38287f73cece51", "filename": "src/libstd/old_path/posix.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_path%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_path%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_path%2Fposix.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -445,7 +445,7 @@ mod tests {\n     use clone::Clone;\n     use iter::IteratorExt;\n     use option::Option::{self, Some, None};\n-    use path::GenericPath;\n+    use old_path::GenericPath;\n     use slice::{AsSlice, SliceExt};\n     use str::{self, Str, StrExt};\n     use string::ToString;", "previous_filename": "src/libstd/path/posix.rs"}, {"sha": "2e25403220d8264c99d15083fb5a28f86acf501d", "filename": "src/libstd/old_path/windows.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_path%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fold_path%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_path%2Fwindows.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -1124,7 +1124,7 @@ mod tests {\n     use clone::Clone;\n     use iter::IteratorExt;\n     use option::Option::{self, Some, None};\n-    use path::GenericPath;\n+    use old_path::GenericPath;\n     use slice::{AsSlice, SliceExt};\n     use str::Str;\n     use string::ToString;", "previous_filename": "src/libstd/path/windows.rs"}, {"sha": "36122b16ea078115b9ae204b9dd0c88bd36fde5a", "filename": "src/libstd/os.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -48,7 +48,7 @@ use old_io::{IoResult, IoError};\n use ops::{Drop, FnOnce};\n use option::Option::{Some, None};\n use option::Option;\n-use path::{Path, GenericPath, BytesContainer};\n+use old_path::{Path, GenericPath, BytesContainer};\n use ptr::PtrExt;\n use ptr;\n use result::Result::{Err, Ok};\n@@ -267,7 +267,7 @@ pub fn split_paths<T: BytesContainer>(unparsed: T) -> Vec<Path> {\n ///\n /// ```rust\n /// use std::os;\n-/// use std::path::Path;\n+/// use std::old_path::Path;\n ///\n /// let key = \"PATH\";\n /// let mut paths = os::getenv_as_bytes(key).map_or(Vec::new(), os::split_paths);\n@@ -470,7 +470,7 @@ pub fn tmpdir() -> Path {\n /// # Example\n /// ```rust\n /// use std::os;\n-/// use std::path::Path;\n+/// use std::old_path::Path;\n ///\n /// // Assume we're in a path like /home/someuser\n /// let rel_path = Path::new(\"..\");\n@@ -500,7 +500,7 @@ pub fn make_absolute(p: &Path) -> IoResult<Path> {\n /// # Example\n /// ```rust\n /// use std::os;\n-/// use std::path::Path;\n+/// use std::old_path::Path;\n ///\n /// let root = Path::new(\"/\");\n /// assert!(os::change_dir(&root).is_ok());"}, {"sha": "d2dc33451200f5f866973f03939eecf2523613c5", "filename": "src/libstd/prelude/v1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fv1.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -56,7 +56,7 @@\n #[doc(no_inline)] pub use vec::Vec;\n \n // NB: remove when path reform lands\n-#[doc(no_inline)] pub use path::{Path, GenericPath};\n+#[doc(no_inline)] pub use old_path::{Path, GenericPath};\n // NB: remove when I/O reform lands\n #[doc(no_inline)] pub use old_io::{Buffer, Writer, Reader, Seek, BufferPrelude};\n // NB: remove when range syntax lands"}, {"sha": "797b9332f17dc4cfa134e8f1ab48e02bf7cb1e58", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -20,7 +20,7 @@ mod imp {\n     use self::OsRngInner::*;\n \n     use old_io::{IoResult, File};\n-    use path::Path;\n+    use old_path::Path;\n     use rand::Rng;\n     use rand::reader::ReaderRng;\n     use result::Result::Ok;"}, {"sha": "6f6b4c58717482522246ca8864b86d6855540871", "filename": "src/libstd/sys/common/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -16,7 +16,7 @@ use prelude::v1::*;\n use sys::{last_error, retry};\n use ffi::CString;\n use num::Int;\n-use path::BytesContainer;\n+use old_path::BytesContainer;\n use collections;\n \n pub mod backtrace;"}, {"sha": "20f86227e8eaf291d384ae40a0f34dbb39259e71", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -20,7 +20,7 @@ use old_io::{self, IoResult, IoError, EndOfFile};\n use libc::{self, pid_t, c_void, c_int};\n use mem;\n use os;\n-use path::BytesContainer;\n+use old_path::BytesContainer;\n use ptr;\n use sync::mpsc::{channel, Sender, Receiver};\n use sys::fs::FileDesc;"}, {"sha": "92e309da34bef34029745a3618743be2d7227e0f", "filename": "src/libstd/sys/windows/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -32,7 +32,7 @@ use libc;\n use mem;\n use ops::Drop;\n use option::Option::{Some};\n-use path::Path;\n+use old_path::Path;\n use ptr;\n use result::Result::{Ok, Err};\n use slice::SliceExt;"}, {"sha": "315c41e779a36c7abfce420642b2cebb1c357a99", "filename": "src/libstd/sys/windows/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -23,7 +23,7 @@ use old_io::process::{ProcessExit, ExitStatus};\n use old_io::{IoResult, IoError};\n use old_io;\n use os;\n-use path::BytesContainer;\n+use old_path::BytesContainer;\n use ptr;\n use str;\n use sync::{StaticMutex, MUTEX_INIT};"}, {"sha": "129c1d20bc04c6ecde9bc9bcd8aafe246538688e", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -25,7 +25,7 @@ use serialize::{Decodable, Decoder, Encodable, Encoder};\n use std::fmt;\n use std::mem;\n use std::ops::Deref;\n-use std::path::BytesContainer;\n+use std::old_path::BytesContainer;\n use std::rc::Rc;\n \n #[allow(non_camel_case_types)]"}, {"sha": "78c575d33bad0a932285d3389d7377bf35933bbf", "filename": "src/test/compile-fail/range-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Ftest%2Fcompile-fail%2Frange-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Ftest%2Fcompile-fail%2Frange-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange-3.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -13,4 +13,4 @@\n pub fn main() {\n     let r = 1..2..3;\n     //~^ ERROR expected one of `.`, `;`, or an operator, found `..`\n-}\n\\ No newline at end of file\n+}"}, {"sha": "a3e27fbbe9aa39938935897dd49df88f17858d99", "filename": "src/test/compile-fail/range-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Ftest%2Fcompile-fail%2Frange-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Ftest%2Fcompile-fail%2Frange-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange-4.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -13,4 +13,4 @@\n pub fn main() {\n     let r = ..1..2;\n     //~^ ERROR expected one of `.`, `;`, or an operator, found `..`\n-}\n\\ No newline at end of file\n+}"}, {"sha": "0f6f0ac6ae7566b76fe5742209ae2876f5d95360", "filename": "src/test/debuginfo/associated-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e39f0bc0e96f76610104918edaa5912f4f352df/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs?ref=3e39f0bc0e96f76610104918edaa5912f4f352df", "patch": "@@ -149,4 +149,4 @@ fn main() {\n     assoc_enum(Enum::Variant2(8i64, 9i32));\n }\n \n-fn zzz() { () }\n\\ No newline at end of file\n+fn zzz() { () }"}]}