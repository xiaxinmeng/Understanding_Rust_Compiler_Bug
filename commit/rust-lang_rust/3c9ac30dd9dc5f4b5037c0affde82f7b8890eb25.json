{"sha": "3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjOWFjMzBkZDlkYzVmNGI1MDM3YzBhZmZkZTgyZjdiODg5MGViMjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-22T01:47:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-22T01:47:38Z"}, "message": "Rollup merge of #60995 - topecongiro:parser-from-stream-and-base-dir, r=michaelwoerister\n\nAdd stream_to_parser_with_base_dir\n\nThis PR adds `stream_to_parser_with_base_dir`, which creates a parser from a token stream and a base directory.\n\nContext: I would like to parse `cfg_if!` macro and get a list of modules defined inside it from rustfmt so that rustfmt can format those modules (cc https://github.com/rust-lang/rustfmt/issues/3253). To do so, I need to create a parser from `TokenStream` and set the directory of `Parser` to the same directory as the parent directory of a file which contains `cfg_if!` invocation. AFAIK there is no way to achieve this, and hence this PR.\n\nAlternatively, I could change the visibility of `Parser.directory` from `crate` to `pub` so that the value can be modified after initializing a parser. I don't have a preference over either approach (or others, as long as it works).", "tree": {"sha": "c1ccd58649f01ec58879b82522b66b4fe6bdfe8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1ccd58649f01ec58879b82522b66b4fe6bdfe8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc5Ko6CRBK7hj4Ov3rIwAAdHIIAH2qrXSz7zetYW2OywsXz90n\n8sgN+GraV5eaVo+UYGwqNBZpwPti860at8JQmru1LxBPmsYIHug141SaQKNbUt2X\nYD5Wc1BwrhpaHBfRhoItJWT1oa14xkPKZyMBa/h2kZAu/2mrCk8aec0eRdfKz6r/\n81BUvrSI7uCYU6o90tv+IQEDbe4bKyIGVMUMB/6DJStEuzG6yRt6DzFoGtvgCFYf\nrV9axfli6YtIdHLIhyD5ZRlFUqu94y8feIJfbrUn/KBtrjj/XtnQVptKckox+Se6\nzb4R/86XJeCJi9iBZcwJnTEXZ1ROaGi1O7dUm50+iI4Yi0fw2HFpdq/RVQDUa9A=\n=nmDU\n-----END PGP SIGNATURE-----\n", "payload": "tree c1ccd58649f01ec58879b82522b66b4fe6bdfe8b\nparent 705b040ea5db5173f575b479b0a55655cbe85474\nparent 1f1a9176e7963b43155ce56d2a4cea3bee4a4f7e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1558489658 +0200\ncommitter GitHub <noreply@github.com> 1558489658 +0200\n\nRollup merge of #60995 - topecongiro:parser-from-stream-and-base-dir, r=michaelwoerister\n\nAdd stream_to_parser_with_base_dir\n\nThis PR adds `stream_to_parser_with_base_dir`, which creates a parser from a token stream and a base directory.\n\nContext: I would like to parse `cfg_if!` macro and get a list of modules defined inside it from rustfmt so that rustfmt can format those modules (cc https://github.com/rust-lang/rustfmt/issues/3253). To do so, I need to create a parser from `TokenStream` and set the directory of `Parser` to the same directory as the parent directory of a file which contains `cfg_if!` invocation. AFAIK there is no way to achieve this, and hence this PR.\n\nAlternatively, I could change the visibility of `Parser.directory` from `crate` to `pub` so that the value can be modified after initializing a parser. I don't have a preference over either approach (or others, as long as it works).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25", "html_url": "https://github.com/rust-lang/rust/commit/3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "705b040ea5db5173f575b479b0a55655cbe85474", "url": "https://api.github.com/repos/rust-lang/rust/commits/705b040ea5db5173f575b479b0a55655cbe85474", "html_url": "https://github.com/rust-lang/rust/commit/705b040ea5db5173f575b479b0a55655cbe85474"}, {"sha": "1f1a9176e7963b43155ce56d2a4cea3bee4a4f7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1a9176e7963b43155ce56d2a4cea3bee4a4f7e", "html_url": "https://github.com/rust-lang/rust/commit/1f1a9176e7963b43155ce56d2a4cea3bee4a4f7e"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "1073fc6f3ab4d3a00e760aa918fdb2a9a92a7772", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=3c9ac30dd9dc5f4b5037c0affde82f7b8890eb25", "patch": "@@ -332,6 +332,23 @@ pub fn stream_to_parser(sess: &ParseSess, stream: TokenStream) -> Parser<'_> {\n     Parser::new(sess, stream, None, true, false)\n }\n \n+/// Given stream, the `ParseSess` and the base directory, produces a parser.\n+///\n+/// Use this function when you are creating a parser from the token stream\n+/// and also care about the current working directory of the parser (e.g.,\n+/// you are trying to resolve modules defined inside a macro invocation).\n+///\n+/// # Note\n+///\n+/// The main usage of this function is outside of rustc, for those who uses\n+/// libsyntax as a library. Please do not remove this function while refactoring\n+/// just because it is not used in rustc codebase!\n+pub fn stream_to_parser_with_base_dir<'a>(sess: &'a ParseSess,\n+                                          stream: TokenStream,\n+                                          base_dir: Directory<'a>) -> Parser<'a> {\n+    Parser::new(sess, stream, Some(base_dir), true, false)\n+}\n+\n /// A sequence separator.\n pub struct SeqSep {\n     /// The seperator token."}]}