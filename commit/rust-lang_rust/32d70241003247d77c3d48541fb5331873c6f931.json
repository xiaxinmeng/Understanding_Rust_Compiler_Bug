{"sha": "32d70241003247d77c3d48541fb5331873c6f931", "node_id": "C_kwDOAAsO6NoAKDMyZDcwMjQxMDAzMjQ3ZDc3YzNkNDg1NDFmYjUzMzE4NzNjNmY5MzE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-01T00:21:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-01T00:21:56Z"}, "message": "Rollup merge of #108400 - csmoe:cgu-instr-perf, r=bjorn3\n\nadd llvm cgu instructions stats to perf\n\nr? ```@bjorn3```", "tree": {"sha": "2888f4d8bad89466b140ad46c64ab330889df244", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2888f4d8bad89466b140ad46c64ab330889df244"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32d70241003247d77c3d48541fb5331873c6f931", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj/pqkCRBK7hj4Ov3rIwAATBoIABgWl0JxInIyuA247FGhafwW\nhEhjBPWCSd89NCmB+1Xljxb0F3NgsRMdWrQkSA6qIL7ENzPOcxJAFNvLfFz2Anb+\nsUiETvy8KInQoAPV9rJFRLUP1jcgRAToK1Zr/27fWYlLNI9kARVttEVppgpuR0im\npEE/BynpoHiBZYvJ4phox214QEqrRnQAzgU5K48+oayu16yH6TiNV8cnQF0BAP8u\nNKhMUGjrvGUI7NYPH2rly1AqMZv2hMmoCqWMKsOW1Pwz+a0OvJrq0JudDXbcHLoC\noX5P/a+knmj8jM4pwUFjjtDs677N2UldWWItIFj02+7apScKcCXeN+c+4CqNXhc=\n=3nDK\n-----END PGP SIGNATURE-----\n", "payload": "tree 2888f4d8bad89466b140ad46c64ab330889df244\nparent 0dfbce1bb06b510102f8df6e5e49a5705ba15153\nparent a30de6e7cb1458e271ead5e40e49dbe709275537\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677630116 +0100\ncommitter GitHub <noreply@github.com> 1677630116 +0100\n\nRollup merge of #108400 - csmoe:cgu-instr-perf, r=bjorn3\n\nadd llvm cgu instructions stats to perf\n\nr? ```@bjorn3```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32d70241003247d77c3d48541fb5331873c6f931", "html_url": "https://github.com/rust-lang/rust/commit/32d70241003247d77c3d48541fb5331873c6f931", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32d70241003247d77c3d48541fb5331873c6f931/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dfbce1bb06b510102f8df6e5e49a5705ba15153", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dfbce1bb06b510102f8df6e5e49a5705ba15153", "html_url": "https://github.com/rust-lang/rust/commit/0dfbce1bb06b510102f8df6e5e49a5705ba15153"}, {"sha": "a30de6e7cb1458e271ead5e40e49dbe709275537", "url": "https://api.github.com/repos/rust-lang/rust/commits/a30de6e7cb1458e271ead5e40e49dbe709275537", "html_url": "https://github.com/rust-lang/rust/commit/a30de6e7cb1458e271ead5e40e49dbe709275537"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "677c00b003662b5b21205a3e8f72038800c06666", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32d70241003247d77c3d48541fb5331873c6f931/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/32d70241003247d77c3d48541fb5331873c6f931/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=32d70241003247d77c3d48541fb5331873c6f931", "patch": "@@ -3810,6 +3810,8 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_symbol_mangling\",\n  \"rustc_target\",\n+ \"serde\",\n+ \"serde_json\",\n  \"smallvec\",\n  \"tempfile\",\n  \"tracing\","}, {"sha": "a7ba2f8b69533d8a7f6048671845ee78f77a8763", "filename": "compiler/rustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2FCargo.toml?ref=32d70241003247d77c3d48541fb5331873c6f931", "patch": "@@ -36,3 +36,5 @@ smallvec = { version = \"1.8.1\", features = [\"union\", \"may_dangle\"] }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n tempfile = \"3.2.0\"\n+serde = { version = \"1\", features = [ \"derive\" ]}\n+serde_json = \"1\""}, {"sha": "a4ae1b01e869d48428d5af05b75df55bc1647d71", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=32d70241003247d77c3d48541fb5331873c6f931", "patch": "@@ -761,6 +761,7 @@ pub(crate) unsafe fn codegen(\n             EmitObj::None => {}\n         }\n \n+        record_llvm_cgu_instructions_stats(&cgcx.prof, llmod);\n         drop(handlers);\n     }\n \n@@ -974,3 +975,23 @@ fn record_artifact_size(\n         self_profiler_ref.artifact_size(artifact_kind, artifact_name.to_string_lossy(), file_size);\n     }\n }\n+\n+fn record_llvm_cgu_instructions_stats(prof: &SelfProfilerRef, llmod: &llvm::Module) {\n+    if !prof.enabled() {\n+        return;\n+    }\n+\n+    let raw_stats =\n+        llvm::build_string(|s| unsafe { llvm::LLVMRustModuleInstructionStats(&llmod, s) })\n+            .expect(\"cannot get module instruction stats\");\n+\n+    #[derive(serde::Deserialize)]\n+    struct InstructionsStats {\n+        module: String,\n+        total: u64,\n+    }\n+\n+    let InstructionsStats { module, total } =\n+        serde_json::from_str(&raw_stats).expect(\"cannot parse llvm cgu instructions stats\");\n+    prof.artifact_size(\"cgu_instructions\", module, total);\n+}"}, {"sha": "1b3ce2e83a979e5e01607546fcb7164854ac6ef8", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=32d70241003247d77c3d48541fb5331873c6f931", "patch": "@@ -2410,6 +2410,8 @@ extern \"C\" {\n     pub fn LLVMRustModuleBufferLen(p: &ModuleBuffer) -> usize;\n     pub fn LLVMRustModuleBufferFree(p: &'static mut ModuleBuffer);\n     pub fn LLVMRustModuleCost(M: &Module) -> u64;\n+    #[allow(improper_ctypes)]\n+    pub fn LLVMRustModuleInstructionStats(M: &Module, Str: &RustString);\n \n     pub fn LLVMRustThinLTOBufferCreate(M: &Module, is_thin: bool) -> &'static mut ThinLTOBuffer;\n     pub fn LLVMRustThinLTOBufferFree(M: &'static mut ThinLTOBuffer);"}, {"sha": "05890628378666e3e1dc77de42e898879e341ffa", "filename": "compiler/rustc_llvm/llvm-wrapper/LLVMWrapper.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_llvm%2Fllvm-wrapper%2FLLVMWrapper.h", "raw_url": "https://github.com/rust-lang/rust/raw/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_llvm%2Fllvm-wrapper%2FLLVMWrapper.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FLLVMWrapper.h?ref=32d70241003247d77c3d48541fb5331873c6f931", "patch": "@@ -14,6 +14,7 @@\n #include \"llvm/Support/Debug.h\"\n #include \"llvm/Support/DynamicLibrary.h\"\n #include \"llvm/Support/FormattedStream.h\"\n+#include \"llvm/Support/JSON.h\"\n #include \"llvm/Support/Host.h\"\n #include \"llvm/Support/Memory.h\"\n #include \"llvm/Support/SourceMgr.h\""}, {"sha": "e3493caaaf74e35b1308166a3696e92eb345d3c2", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/32d70241003247d77c3d48541fb5331873c6f931/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=32d70241003247d77c3d48541fb5331873c6f931", "patch": "@@ -1751,6 +1751,19 @@ LLVMRustModuleCost(LLVMModuleRef M) {\n   return std::distance(std::begin(f), std::end(f));\n }\n \n+extern \"C\" void\n+LLVMRustModuleInstructionStats(LLVMModuleRef M, RustStringRef Str)\n+{\n+  RawRustStringOstream OS(Str);\n+  llvm::json::OStream JOS(OS);\n+  auto Module = unwrap(M);\n+\n+  JOS.object([&] {\n+    JOS.attribute(\"module\", Module->getName());\n+    JOS.attribute(\"total\", Module->getInstructionCount());\n+  });\n+}\n+\n // Vector reductions:\n extern \"C\" LLVMValueRef\n LLVMRustBuildVectorReduceFAdd(LLVMBuilderRef B, LLVMValueRef Acc, LLVMValueRef Src) {"}]}