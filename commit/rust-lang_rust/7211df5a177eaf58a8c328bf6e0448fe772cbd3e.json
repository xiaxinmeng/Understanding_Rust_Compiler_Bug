{"sha": "7211df5a177eaf58a8c328bf6e0448fe772cbd3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMTFkZjVhMTc3ZWFmNThhOGMzMjhiZjZlMDQ0OGZlNzcyY2JkM2U=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T18:46:27Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T18:46:27Z"}, "message": "Remove useless `if_let_chain`", "tree": {"sha": "f506421468f0708096f54bef96f62ec19af3bfd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f506421468f0708096f54bef96f62ec19af3bfd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7211df5a177eaf58a8c328bf6e0448fe772cbd3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7211df5a177eaf58a8c328bf6e0448fe772cbd3e", "html_url": "https://github.com/rust-lang/rust/commit/7211df5a177eaf58a8c328bf6e0448fe772cbd3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7211df5a177eaf58a8c328bf6e0448fe772cbd3e/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f70d04000aa7ca4c23d6839ac0e98d2074cf28b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f70d04000aa7ca4c23d6839ac0e98d2074cf28b", "html_url": "https://github.com/rust-lang/rust/commit/9f70d04000aa7ca4c23d6839ac0e98d2074cf28b"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "b941d9a7fca42c9ca8f244875001ca532934ff61", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7211df5a177eaf58a8c328bf6e0448fe772cbd3e/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7211df5a177eaf58a8c328bf6e0448fe772cbd3e/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=7211df5a177eaf58a8c328bf6e0448fe772cbd3e", "patch": "@@ -70,9 +70,7 @@ impl LintPass for Derive {\n \n impl LateLintPass for Derive {\n     fn check_item(&mut self, cx: &LateContext, item: &Item) {\n-        if_let_chain! {[\n-            let ItemImpl(_, _, _, Some(ref trait_ref), _, _) = item.node\n-        ], {\n+        if let ItemImpl(_, _, _, Some(ref trait_ref), _, _) = item.node {\n             let ty = cx.tcx.lookup_item_type(cx.tcx.map.local_def_id(item.id)).ty;\n             let is_automatically_derived = item.attrs.iter().any(is_automatically_derived);\n \n@@ -81,7 +79,7 @@ impl LateLintPass for Derive {\n             if !is_automatically_derived {\n                 check_copy_clone(cx, item, trait_ref, ty);\n             }\n-        }}\n+        }\n     }\n }\n "}]}