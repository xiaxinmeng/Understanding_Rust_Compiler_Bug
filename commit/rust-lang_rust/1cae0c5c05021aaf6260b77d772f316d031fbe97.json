{"sha": "1cae0c5c05021aaf6260b77d772f316d031fbe97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYWUwYzVjMDUwMjFhYWY2MjYwYjc3ZDc3MmYzMTZkMDMxZmJlOTc=", "commit": {"author": {"name": "Josh Stone", "email": "cuviper@gmail.com", "date": "2016-05-21T23:46:04Z"}, "committer": {"name": "Josh Stone", "email": "cuviper@gmail.com", "date": "2016-05-22T07:09:33Z"}, "message": "bootstrap: mirror mk's local-rebuild changes\n\nThe rustc for a local-rebuild is assumed to use the current bootstrap\nkey and already match the current stage1 features.", "tree": {"sha": "8ee6cd7132c63de3b5e8992bbbd3ddd4d9e7b7a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ee6cd7132c63de3b5e8992bbbd3ddd4d9e7b7a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cae0c5c05021aaf6260b77d772f316d031fbe97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cae0c5c05021aaf6260b77d772f316d031fbe97", "html_url": "https://github.com/rust-lang/rust/commit/1cae0c5c05021aaf6260b77d772f316d031fbe97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cae0c5c05021aaf6260b77d772f316d031fbe97/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3406c55144339dea81839adc9addd931e068084a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3406c55144339dea81839adc9addd931e068084a", "html_url": "https://github.com/rust-lang/rust/commit/3406c55144339dea81839adc9addd931e068084a"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "060fb5b8ef3d6af27b30586a6aa2b0a1c432c5d7", "filename": "src/bootstrap/build/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cae0c5c05021aaf6260b77d772f316d031fbe97/src%2Fbootstrap%2Fbuild%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cae0c5c05021aaf6260b77d772f316d031fbe97/src%2Fbootstrap%2Fbuild%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fconfig.rs?ref=1cae0c5c05021aaf6260b77d772f316d031fbe97", "patch": "@@ -67,6 +67,7 @@ pub struct Config {\n     pub target: Vec<String>,\n     pub rustc: Option<String>,\n     pub cargo: Option<String>,\n+    pub rebuild: bool,\n \n     // libstd features\n     pub debug_jemalloc: bool,\n@@ -315,6 +316,7 @@ impl Config {\n                 (\"RPATH\", self.rust_rpath),\n                 (\"OPTIMIZE_TESTS\", self.rust_optimize_tests),\n                 (\"DEBUGINFO_TESTS\", self.rust_debuginfo_tests),\n+                (\"LOCAL_REBUILD\", self.rebuild),\n             }\n \n             match key {"}, {"sha": "9d5a093ab9e096b9d42dc19775feac49908b6b03", "filename": "src/bootstrap/build/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1cae0c5c05021aaf6260b77d772f316d031fbe97/src%2Fbootstrap%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cae0c5c05021aaf6260b77d772f316d031fbe97/src%2Fbootstrap%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fmod.rs?ref=1cae0c5c05021aaf6260b77d772f316d031fbe97", "patch": "@@ -510,6 +510,14 @@ impl Build {\n              .arg(\"-j\").arg(self.jobs().to_string())\n              .arg(\"--target\").arg(target);\n \n+        let stage;\n+        if compiler.stage == 0 && self.config.rebuild {\n+            // Assume the local-rebuild rustc already has stage1 features.\n+            stage = 1;\n+        } else {\n+            stage = compiler.stage;\n+        }\n+\n         // Customize the compiler we're running. Specify the compiler to cargo\n         // as our shim and then pass it some various options used to configure\n         // how the actual compiler itself is called.\n@@ -518,7 +526,7 @@ impl Build {\n         // src/bootstrap/{rustc,rustdoc.rs}\n         cargo.env(\"RUSTC\", self.out.join(\"bootstrap/debug/rustc\"))\n              .env(\"RUSTC_REAL\", self.compiler_path(compiler))\n-             .env(\"RUSTC_STAGE\", compiler.stage.to_string())\n+             .env(\"RUSTC_STAGE\", stage.to_string())\n              .env(\"RUSTC_DEBUGINFO\", self.config.rust_debuginfo.to_string())\n              .env(\"RUSTC_CODEGEN_UNITS\",\n                   self.config.rust_codegen_units.to_string())\n@@ -744,7 +752,7 @@ impl Build {\n         // In stage0 we're using a previously released stable compiler, so we\n         // use the stage0 bootstrap key. Otherwise we use our own build's\n         // bootstrap key.\n-        let bootstrap_key = if compiler.is_snapshot(self) {\n+        let bootstrap_key = if compiler.is_snapshot(self) && !self.config.rebuild {\n             &self.bootstrap_key_stage0\n         } else {\n             &self.bootstrap_key"}]}