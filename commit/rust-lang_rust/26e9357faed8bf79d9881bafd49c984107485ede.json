{"sha": "26e9357faed8bf79d9881bafd49c984107485ede", "node_id": "C_kwDOAAsO6NoAKDI2ZTkzNTdmYWVkOGJmNzlkOTg4MWJhZmQ0OWM5ODQxMDc0ODVlZGU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-21T21:03:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-21T21:03:20Z"}, "message": "Rollup merge of #93139 - jsha:fix-wrapped-names, r=Nemo157\n\nrustdoc: fix overflow-wrap for table layouts\n\nFor all table layouts, set overflow-wrap: break-word.\n\nFixes #93135\n\nDemo: https://rustdoc.crud.net/jsha/fix-wrapped-names/std/intrinsics/index.html#functions\n\n(Compare vs https://doc.rust-lang.org/nightly/std/intrinsics/index.html - you may have to make your browser narrower to see the effect)\n\nr? `@Nemo157`", "tree": {"sha": "ca06814247b7a193b13d3b8136800f17d58541f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca06814247b7a193b13d3b8136800f17d58541f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26e9357faed8bf79d9881bafd49c984107485ede", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6x+YCRBK7hj4Ov3rIwAA9cwIAEj5/WXZyfx75ljhxufOt9vU\n0I9EFlwYas+p3FvKDCEhOEd6ROSkvb5eBIo1y5DFEhcwJrfjhgiYdEK2uwSkPuPL\n3fByHHiRclGr83wLbe45RfMKtkOFfnpnL2T7WKP3tWR8t3BHyc0bN1h9X//7EvLd\nckom5djsp4UJVTOl4e8QQGw4GVTZqp2JdWMvFuthrjN4zuOJVZBsH2GwDYqsAqu+\nKWh1Ty5pCIthB9JKHW6cbQ23X6GUr2r58dS/obxb4qPzBdkncEqnM2nEagKI+Ewl\nrV7s60VaqeMsZLSGovwTVmMQ+2tAKP3cCWiN+D5oNQlhDtP+kv2BDV2H1HsYxU8=\n=rMRF\n-----END PGP SIGNATURE-----\n", "payload": "tree ca06814247b7a193b13d3b8136800f17d58541f0\nparent 081d65fa4a9fdf6703e93511632582b9fad383ee\nparent 9d178e5e8d7943da8f1b4b645911f300178f5070\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642799000 +0100\ncommitter GitHub <noreply@github.com> 1642799000 +0100\n\nRollup merge of #93139 - jsha:fix-wrapped-names, r=Nemo157\n\nrustdoc: fix overflow-wrap for table layouts\n\nFor all table layouts, set overflow-wrap: break-word.\n\nFixes #93135\n\nDemo: https://rustdoc.crud.net/jsha/fix-wrapped-names/std/intrinsics/index.html#functions\n\n(Compare vs https://doc.rust-lang.org/nightly/std/intrinsics/index.html - you may have to make your browser narrower to see the effect)\n\nr? `@Nemo157`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26e9357faed8bf79d9881bafd49c984107485ede", "html_url": "https://github.com/rust-lang/rust/commit/26e9357faed8bf79d9881bafd49c984107485ede", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26e9357faed8bf79d9881bafd49c984107485ede/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "081d65fa4a9fdf6703e93511632582b9fad383ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/081d65fa4a9fdf6703e93511632582b9fad383ee", "html_url": "https://github.com/rust-lang/rust/commit/081d65fa4a9fdf6703e93511632582b9fad383ee"}, {"sha": "9d178e5e8d7943da8f1b4b645911f300178f5070", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d178e5e8d7943da8f1b4b645911f300178f5070", "html_url": "https://github.com/rust-lang/rust/commit/9d178e5e8d7943da8f1b4b645911f300178f5070"}], "stats": {"total": 73, "additions": 54, "deletions": 19}, "files": [{"sha": "2c937aa0ec9286a0775e5563ddef58387bd9495d", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/26e9357faed8bf79d9881bafd49c984107485ede/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/26e9357faed8bf79d9881bafd49c984107485ede/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=26e9357faed8bf79d9881bafd49c984107485ede", "patch": "@@ -671,7 +671,6 @@ nav.sub {\n \tmargin: .5em 0;\n \twidth: calc(100% - 2px);\n \toverflow-x: auto;\n-\toverflow-wrap: normal;\n \tdisplay: block;\n }\n \n@@ -858,6 +857,31 @@ h2.small-section-header > .anchor {\n \n .block a.current.crate { font-weight: 500; }\n \n+/*  In most contexts we use `overflow-wrap: anywhere` to ensure that we can wrap\n+\tas much as needed on mobile (see\n+\tsrc/test/rustdoc-gui/type-declaration-overflow.goml for an example of why\n+\tthis matters). The `anywhere` value means:\n+\n+\t\"Soft wrap opportunities introduced by the word break are considered when\n+\t calculating min-content intrinsic sizes.\"\n+\n+\thttps://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap#values\n+\n+\tFor table layouts, that becomes a problem: the browser tries to make each\n+\tcolumn as narrow as possible, and `overflow-wrap: anywhere` means it can do\n+\tso by breaking words - even if some other column could be shrunk without\n+\tbreaking words! This shows up, for instance, in the `Structs` / `Modules` /\n+\t`Functions` (etcetera) sections of a module page, and when a docblock\n+\tcontains a table.\n+\n+\tSo, for table layouts, override the default with break-word, which does\n+\t_not_ affect min-content intrinsic sizes.\n+*/\n+table,\n+.item-table {\n+\toverflow-wrap: break-word;\n+}\n+\n .item-table {\n \tdisplay: table;\n }\n@@ -2058,10 +2082,6 @@ details.rustdoc-toggle[open] > summary.hideme::after {\n \t\toverflow-wrap: anywhere;\n \t}\n \n-\t.docblock table code {\n-\t\toverflow-wrap: normal;\n-\t}\n-\n \t.sub-container {\n \t\tflex-direction: column;\n \t}"}, {"sha": "73013c9778f640ac409d016f6154b873b1d89535", "filename": "src/test/rustdoc-gui/src/lib2/lib.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/26e9357faed8bf79d9881bafd49c984107485ede/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e9357faed8bf79d9881bafd49c984107485ede/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs?ref=26e9357faed8bf79d9881bafd49c984107485ede", "patch": "@@ -39,7 +39,6 @@ impl Trait for Foo {\n     const Y: u32 = 0;\n }\n \n-\n impl implementors::Whatever for Foo {\n     type Foo = u32;\n }\n@@ -58,8 +57,10 @@ pub mod sub_mod {\n pub mod long_trait {\n     use std::ops::DerefMut;\n \n-    pub trait ALongNameBecauseItHelpsTestingTheCurrentProblem: DerefMut<Target = u32>\n-        + From<u128> + Send + Sync + AsRef<str> + 'static {}\n+    pub trait ALongNameBecauseItHelpsTestingTheCurrentProblem:\n+        DerefMut<Target = u32> + From<u128> + Send + Sync + AsRef<str> + 'static\n+    {\n+    }\n }\n \n pub mod long_table {\n@@ -88,18 +89,28 @@ pub mod summary_table {\n }\n \n pub mod too_long {\n-pub type ReallyLongTypeNameLongLongLong = Option<unsafe extern \"C\" fn(a: *const u8, b: *const u8) -> *const u8>;\n-\n-pub const ReallyLongTypeNameLongLongLongConstBecauseWhyNotAConstRightGigaGigaSupraLong: u32 = 0;\n-\n-pub struct SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName {\n-    pub a: u32,\n-}\n+    pub type ReallyLongTypeNameLongLongLong =\n+        Option<unsafe extern \"C\" fn(a: *const u8, b: *const u8) -> *const u8>;\n+\n+    pub const ReallyLongTypeNameLongLongLongConstBecauseWhyNotAConstRightGigaGigaSupraLong: u32 = 0;\n+\n+    /// This also has a really long doccomment. Lorem ipsum dolor sit amet,\n+    /// consectetur adipiscing elit. Suspendisse id nibh malesuada, hendrerit\n+    /// massa vel, tincidunt est. Nulla interdum, sem ac efficitur ornare, arcu\n+    /// nunc dignissim nibh, at rutrum diam augue ac mauris. Fusce tincidunt et\n+    /// ligula sed viverra. Aenean sed facilisis dui, non volutpat felis. In\n+    /// vitae est dui. Donec felis nibh, blandit at nibh eu, tempor suscipit\n+    /// nisl. Vestibulum ornare porta libero, eu faucibus purus iaculis ut. Ut\n+    /// quis tincidunt nunc, in mollis purus. Nulla sed interdum quam. Nunc\n+    /// vitae cursus ex.\n+    pub struct SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName {\n+        pub a: u32,\n+    }\n \n-impl SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName {\n-    /// ```\n-    /// let x = SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName { a: 0 };\n-    /// ```\n+    impl SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName {\n+        /// ```\n+        /// let x = SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName { a: 0 };\n+        /// ```\n         pub fn foo(&self) {}\n     }\n }"}, {"sha": "c35b38747dfaf087c94095046b994e79a97c4ba2", "filename": "src/test/rustdoc-gui/type-declation-overflow.goml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26e9357faed8bf79d9881bafd49c984107485ede/src%2Ftest%2Frustdoc-gui%2Ftype-declation-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/26e9357faed8bf79d9881bafd49c984107485ede/src%2Ftest%2Frustdoc-gui%2Ftype-declation-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftype-declation-overflow.goml?ref=26e9357faed8bf79d9881bafd49c984107485ede", "patch": "@@ -7,6 +7,10 @@ assert-property: (\"body\", {\"scrollWidth\": \"1100\"})\n // However, since there is overflow in the type declaration, its scroll width is bigger.\n assert-property: (\".item-decl pre\", {\"scrollWidth\": \"1324\"})\n \n+// In the table-ish view on the module index, the name should not be wrapped more than necessary.\n+goto: file://|DOC_PATH|/lib2/too_long/index.html\n+assert-property: (\".item-table .struct\", {\"offsetWidth\": \"684\"})\n+\n // We now make the same check on type declaration...\n goto: file://|DOC_PATH|/lib2/too_long/type.ReallyLongTypeNameLongLongLong.html\n assert-property: (\"body\", {\"scrollWidth\": \"1100\"})"}]}