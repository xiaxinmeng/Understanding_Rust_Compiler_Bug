{"sha": "7eae8489fc0e08938eb91c5c9ed0f3af919280c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYWU4NDg5ZmMwZTA4OTM4ZWI5MWM1YzllZDBmM2FmOTE5MjgwYzE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-07-13T22:34:45Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:25Z"}, "message": "Touch up  unstable docs for generators", "tree": {"sha": "b7fce04624aeedbed01dc98f184adf0932aae7fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7fce04624aeedbed01dc98f184adf0932aae7fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eae8489fc0e08938eb91c5c9ed0f3af919280c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eae8489fc0e08938eb91c5c9ed0f3af919280c1", "html_url": "https://github.com/rust-lang/rust/commit/7eae8489fc0e08938eb91c5c9ed0f3af919280c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eae8489fc0e08938eb91c5c9ed0f3af919280c1/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e66dccc44104b7411ee3b5fd0fea7e2d48b8d73", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e66dccc44104b7411ee3b5fd0fea7e2d48b8d73", "html_url": "https://github.com/rust-lang/rust/commit/6e66dccc44104b7411ee3b5fd0fea7e2d48b8d73"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "3182aa2dbd75c42787362a8f20ee2cdce08d43fc", "filename": "src/doc/unstable-book/src/language-features/generators.md", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7eae8489fc0e08938eb91c5c9ed0f3af919280c1/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fgenerators.md", "raw_url": "https://github.com/rust-lang/rust/raw/7eae8489fc0e08938eb91c5c9ed0f3af919280c1/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fgenerators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fgenerators.md?ref=7eae8489fc0e08938eb91c5c9ed0f3af919280c1", "patch": "@@ -9,7 +9,10 @@ The tracking issue for this feature is: [#43122]\n The `generators` feature gate in Rust allows you to define generator or\n coroutine literals. A generator is a \"resumable function\" that syntactically\n resembles a closure but compiles to much different semantics in the compiler\n-itself.\n+itself. The primary feature of a generator is that it can be suspended during\n+execution to be resumed at a later date. Generators use the `yield` keyword to\n+\"return\", and then the caller can `resume` a generator to resume execution just\n+after the `yield` keyword.\n \n Generators are an extra-unstable feature in the compiler right now. Added in\n [RFC 2033] they're mostly intended right now as a information/constraint\n@@ -48,7 +51,7 @@ Generators are closure-like literals which can contain a `yield` statement. The\n `yield` statement takes an optional expression of a value to yield out of the\n generator. All generator literals implement the `Generator` trait in the\n `std::ops` module. The `Generator` trait has one main method, `resume`, which\n-resumes execution of the closure at the previous suspension point.\n+resumes execution of the generator at the previous suspension point.\n \n An example of the control flow of generators is that the following example\n prints all numbers in order:\n@@ -86,10 +89,10 @@ The `Generator` trait in `std::ops` currently looks like:\n # #![feature(generator_trait)]\n # use std::ops::State;\n \n-pub trait Generator<Arg = ()> {\n+pub trait Generator {\n     type Yield;\n     type Return;\n-    fn resume(&mut self, arg: Arg) -> State<Self::Yield, Self::Return>;\n+    fn resume(&mut self) -> State<Self::Yield, Self::Return>;\n }\n ```\n \n@@ -146,6 +149,10 @@ closure-like semantics. Namely:\n * Whenever a generator is dropped it will drop all captured environment\n   variables.\n \n+Note that unlike closures generators at this time cannot take any arguments.\n+That is, generators must always look like `|| { ... }`. This restriction may be\n+lifted at a future date, the design is ongoing!\n+\n ### Generators as state machines\n \n In the compiler generators are currently compiled as state machines. Each"}]}