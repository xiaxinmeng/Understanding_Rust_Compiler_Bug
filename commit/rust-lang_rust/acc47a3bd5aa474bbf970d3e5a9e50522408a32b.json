{"sha": "acc47a3bd5aa474bbf970d3e5a9e50522408a32b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYzQ3YTNiZDVhYTQ3NGJiZjk3MGQzZTVhOWU1MDUyMjQwOGEzMmI=", "commit": {"author": {"name": "Markus Unterwaditzer", "email": "markus@unterwaditzer.net", "date": "2015-12-21T23:22:35Z"}, "committer": {"name": "Markus Unterwaditzer", "email": "markus@unterwaditzer.net", "date": "2015-12-21T23:22:35Z"}, "message": "Nightly fixes\n\nAs of\nhttps://github.com/rust-lang/rust/commit/e3da2a90033d233bf6d77e3c725880c12cfc8728#diff-12e06f1e9ca371a11bdc4615f50a4071L59\nHirVec is syntax::ptr::P instead of Vec.", "tree": {"sha": "c0b16658a0d924931884fb8945fe471b7f3874a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0b16658a0d924931884fb8945fe471b7f3874a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acc47a3bd5aa474bbf970d3e5a9e50522408a32b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acc47a3bd5aa474bbf970d3e5a9e50522408a32b", "html_url": "https://github.com/rust-lang/rust/commit/acc47a3bd5aa474bbf970d3e5a9e50522408a32b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acc47a3bd5aa474bbf970d3e5a9e50522408a32b/comments", "author": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "851470639d001c446103e82b00e4730b929ae358", "url": "https://api.github.com/repos/rust-lang/rust/commits/851470639d001c446103e82b00e4730b929ae358", "html_url": "https://github.com/rust-lang/rust/commit/851470639d001c446103e82b00e4730b929ae358"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b1ba47a9b54e78bcada4e10166c0ee9b108bc741", "filename": "src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acc47a3bd5aa474bbf970d3e5a9e50522408a32b/src%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc47a3bd5aa474bbf970d3e5a9e50522408a32b/src%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmap_clone.rs?ref=acc47a3bd5aa474bbf970d3e5a9e50522408a32b", "patch": "@@ -82,7 +82,7 @@ fn expr_eq_ident(expr: &Expr, id: Ident) -> bool {\n     match expr.node {\n         ExprPath(None, ref path) => {\n             let arg_segment = [PathSegment { identifier: id, parameters: PathParameters::none() }];\n-            !path.global && path.segments == arg_segment\n+            !path.global && path.segments[..] == arg_segment\n         }\n         _ => false,\n     }"}, {"sha": "35207cb746cd1bf8dcbcde9a252109b27a930d6f", "filename": "src/methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acc47a3bd5aa474bbf970d3e5a9e50522408a32b/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc47a3bd5aa474bbf970d3e5a9e50522408a32b/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=acc47a3bd5aa474bbf970d3e5a9e50522408a32b", "patch": "@@ -435,9 +435,9 @@ impl OutType {\n     fn matches(&self, ty: &FunctionRetTy) -> bool {\n         match (self, ty) {\n             (&UnitType, &DefaultReturn(_)) => true,\n-            (&UnitType, &Return(ref ty)) if ty.node == TyTup(vec![]) => true,\n+            (&UnitType, &Return(ref ty)) if ty.node == TyTup(vec![].into()) => true,\n             (&BoolType, &Return(ref ty)) if is_bool(ty) => true,\n-            (&AnyType, &Return(ref ty)) if ty.node != TyTup(vec![])  => true,\n+            (&AnyType, &Return(ref ty)) if ty.node != TyTup(vec![].into())  => true,\n             (&RefType, &Return(ref ty)) => {\n                 if let TyRptr(_, _) = ty.node { true } else { false }\n             }"}]}