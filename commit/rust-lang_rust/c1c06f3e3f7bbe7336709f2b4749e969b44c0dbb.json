{"sha": "c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYzA2ZjNlM2Y3YmJlNzMzNjcwOWYyYjQ3NDllOTY5YjQ0YzBkYmI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-26T12:42:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-26T13:49:35Z"}, "message": "Use PassMode::Direct for Abi::Aggregate by default", "tree": {"sha": "1c94252bbf71bc6a38e563d83dfb8042c56ef94c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c94252bbf71bc6a38e563d83dfb8042c56ef94c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb", "html_url": "https://github.com/rust-lang/rust/commit/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb99ea51421a142099f0670156f4ee5353013da9", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb99ea51421a142099f0670156f4ee5353013da9", "html_url": "https://github.com/rust-lang/rust/commit/eb99ea51421a142099f0670156f4ee5353013da9"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "4ce908bdd64a39f2230761f9cad2dff79e510bd4", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb", "patch": "@@ -2843,10 +2843,9 @@ where\n                 let max_by_val_size = Pointer.size(cx) * 2;\n                 let size = arg.layout.size;\n \n-                let is_indirect_not_on_stack =\n-                    matches!(arg.mode, PassMode::Indirect { on_stack: false, .. });\n-                assert!(is_indirect_not_on_stack, \"{:?}\", arg);\n-                if !arg.layout.is_unsized() && size <= max_by_val_size {\n+                if arg.layout.is_unsized() || size > max_by_val_size {\n+                    arg.make_indirect();\n+                } else {\n                     // We want to pass small aggregates as immediates, but using\n                     // a LLVM aggregate type for this leads to bad optimizations,\n                     // so we pick an appropriately sized integer type instead."}, {"sha": "aa1c31bda54dfafaf2d1b069938df4ec7f111df2", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=c1c06f3e3f7bbe7336709f2b4749e969b44c0dbb", "patch": "@@ -32,7 +32,7 @@ pub enum PassMode {\n     Ignore,\n     /// Pass the argument directly.\n     ///\n-    /// The argument has a layout abi of `Scalar` or `Vector`.\n+    /// The argument has a layout abi of `Scalar`, `Vector` or in rare cases `Aggregate`.\n     Direct(ArgAttributes),\n     /// Pass a pair's elements directly in two arguments.\n     ///\n@@ -453,7 +453,7 @@ impl<'a, Ty> ArgAbi<'a, Ty> {\n                 scalar_attrs(&layout, b, a.value.size(cx).align_to(b.value.align(cx).abi)),\n             ),\n             Abi::Vector { .. } => PassMode::Direct(ArgAttributes::new()),\n-            Abi::Aggregate { .. } => Self::indirect_pass_mode(&layout),\n+            Abi::Aggregate { .. } => PassMode::Direct(ArgAttributes::new()),\n         };\n         ArgAbi { layout, pad: None, mode }\n     }"}]}