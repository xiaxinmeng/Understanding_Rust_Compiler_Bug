{"sha": "25cbfcc5be6245ffce5fb39474f777b4885e5f61", "node_id": "C_kwDOAAsO6NoAKDI1Y2JmY2M1YmU2MjQ1ZmZjZTVmYjM5NDc0Zjc3N2I0ODg1ZTVmNjE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T19:11:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T19:11:14Z"}, "message": "delete ancient benchmarks", "tree": {"sha": "d46e21ea13ad469c31a9de3c388fd8887a6958f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d46e21ea13ad469c31a9de3c388fd8887a6958f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25cbfcc5be6245ffce5fb39474f777b4885e5f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25cbfcc5be6245ffce5fb39474f777b4885e5f61", "html_url": "https://github.com/rust-lang/rust/commit/25cbfcc5be6245ffce5fb39474f777b4885e5f61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25cbfcc5be6245ffce5fb39474f777b4885e5f61/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "709e29a16749333c29ba6311f79037df837d1426", "url": "https://api.github.com/repos/rust-lang/rust/commits/709e29a16749333c29ba6311f79037df837d1426", "html_url": "https://github.com/rust-lang/rust/commit/709e29a16749333c29ba6311f79037df837d1426"}], "stats": {"total": 181, "additions": 0, "deletions": 181}, "files": [{"sha": "9a68a69e800f1ba17ba823f9660120aba2e20cd8", "filename": "benches/fibonacci.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Ffibonacci.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Ffibonacci.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Ffibonacci.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,26 +0,0 @@\n-#![feature(test, rustc_private)]\n-\n-extern crate test;\n-use crate::test::Bencher;\n-mod helpers;\n-use crate::helpers::*;\n-\n-#[bench]\n-fn fib(bencher: &mut Bencher) {\n-    bencher.iter(fibonacci_helper::main)\n-}\n-\n-#[bench]\n-fn fib_miri(bencher: &mut Bencher) {\n-    miri_helper::run(\"fibonacci_helper\", bencher);\n-}\n-\n-#[bench]\n-fn fib_iter(bencher: &mut Bencher) {\n-    bencher.iter(fibonacci_helper_iterative::main)\n-}\n-\n-#[bench]\n-fn fib_iter_miri(bencher: &mut Bencher) {\n-    miri_helper::run(\"fibonacci_helper_iterative\", bencher);\n-}"}, {"sha": "586f1ce7da4d4a122003dc7f75c4275e46da0993", "filename": "benches/helpers/fibonacci_helper.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Ffibonacci_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Ffibonacci_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Ffibonacci_helper.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,8 +0,0 @@\n-#[inline(never)]\n-pub fn main() {\n-    assert_eq!(fib(10), 55);\n-}\n-\n-fn fib(n: usize) -> usize {\n-    if n <= 2 { 1 } else { fib(n - 1) + fib(n - 2) }\n-}"}, {"sha": "0c2732828966cdc6a20a89f5bb09b698e399cbc6", "filename": "benches/helpers/fibonacci_helper_iterative.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Ffibonacci_helper_iterative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Ffibonacci_helper_iterative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Ffibonacci_helper_iterative.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,15 +0,0 @@\n-#[inline(never)]\n-pub fn main() {\n-    assert_eq!(fib(10), 55);\n-}\n-\n-fn fib(n: usize) -> usize {\n-    let mut a = 0;\n-    let mut b = 1;\n-    for _ in 0..n {\n-        let c = a;\n-        a = b;\n-        b += c;\n-    }\n-    a\n-}"}, {"sha": "be542c2bc0a6a28ffa2e8c935356410e01fc28c6", "filename": "benches/helpers/miri_helper.rs", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Fmiri_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Fmiri_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fmiri_helper.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,59 +0,0 @@\n-extern crate rustc_driver;\n-extern crate rustc_hir;\n-extern crate rustc_interface;\n-\n-use rustc_driver::Compilation;\n-use rustc_interface::{interface, Queries};\n-\n-use crate::test::Bencher;\n-\n-struct MiriCompilerCalls<'a> {\n-    bencher: &'a mut Bencher,\n-}\n-\n-impl rustc_driver::Callbacks for MiriCompilerCalls<'_> {\n-    fn after_analysis<'tcx>(\n-        &mut self,\n-        compiler: &interface::Compiler,\n-        queries: &'tcx Queries<'tcx>,\n-    ) -> Compilation {\n-        compiler.session().abort_if_errors();\n-\n-        queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n-            let (entry_def_id, entry_type) =\n-                tcx.entry_fn(()).expect(\"no main or start function found\");\n-\n-            self.bencher.iter(|| {\n-                let config = miri::MiriConfig::default();\n-                miri::eval_entry(tcx, entry_def_id, entry_type, config);\n-            });\n-        });\n-\n-        compiler.session().abort_if_errors();\n-\n-        Compilation::Stop\n-    }\n-}\n-\n-fn find_sysroot() -> String {\n-    // Taken from https://github.com/Manishearth/rust-clippy/pull/911.\n-    let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n-    let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-    match (home, toolchain) {\n-        (Some(home), Some(toolchain)) => format!(\"{}/toolchains/{}\", home, toolchain),\n-        _ =>\n-            option_env!(\"RUST_SYSROOT\")\n-                .expect(\"need to specify RUST_SYSROOT env var or use rustup or multirust\")\n-                .to_owned(),\n-    }\n-}\n-\n-pub fn run(filename: &str, bencher: &mut Bencher) {\n-    let args = &[\n-        \"miri\".to_string(),\n-        format!(\"benches/helpers/{}.rs\", filename),\n-        \"--sysroot\".to_string(),\n-        find_sysroot(),\n-    ];\n-    rustc_driver::RunCompiler::new(args, &mut MiriCompilerCalls { bencher }).run().unwrap()\n-}"}, {"sha": "27504a2cc034d7a308241e368a876be2de77b330", "filename": "benches/helpers/mod.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fmod.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,7 +0,0 @@\n-// This module gets included in multiple crates, and they each only use part of it.\n-#![allow(dead_code)]\n-\n-pub mod fibonacci_helper;\n-pub mod fibonacci_helper_iterative;\n-pub mod miri_helper;\n-pub mod smoke_helper;"}, {"sha": "0e8c5980b82bdec0f7072a775997b0837f2d8b14", "filename": "benches/helpers/repeat.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Frepeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Frepeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Frepeat.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,4 +0,0 @@\n-fn main() {\n-    let data: [u8; 1024] = [42; 1024];\n-    assert_eq!(data.len(), 1024);\n-}"}, {"sha": "bd5d6b1e1264b71293c6f3f2d28c8a3088a0a94c", "filename": "benches/helpers/repeat_manual.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Frepeat_manual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Frepeat_manual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Frepeat_manual.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,9 +0,0 @@\n-fn main() {\n-    let mut data: [u8; 1024] = unsafe { std::mem::uninitialized() };\n-    for i in 0..data.len() {\n-        unsafe {\n-            std::ptr::write(&mut data[i], 0);\n-        }\n-    }\n-    assert_eq!(data.len(), 1024);\n-}"}, {"sha": "e81db817aeace2cedf47574cf93b9f64c84bb0d3", "filename": "benches/helpers/smoke_helper.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Fsmoke_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fhelpers%2Fsmoke_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fsmoke_helper.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,2 +0,0 @@\n-#[inline(never)]\n-pub fn main() {}"}, {"sha": "0369b1f74cf59e6da5c87e650503a1c244347812", "filename": "benches/repeat.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Frepeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Frepeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Frepeat.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,16 +0,0 @@\n-#![feature(test, rustc_private)]\n-\n-extern crate test;\n-use crate::test::Bencher;\n-mod helpers;\n-use crate::helpers::*;\n-\n-#[bench]\n-fn repeat(bencher: &mut Bencher) {\n-    miri_helper::run(\"repeat\", bencher);\n-}\n-\n-#[bench]\n-fn repeat_manual(bencher: &mut Bencher) {\n-    miri_helper::run(\"repeat_manual\", bencher);\n-}"}, {"sha": "372cd0b22b7ae7d6a1a844a3340a7b3cd78fb887", "filename": "benches/smoke.rs", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/709e29a16749333c29ba6311f79037df837d1426/benches%2Fsmoke.rs", "raw_url": "https://github.com/rust-lang/rust/raw/709e29a16749333c29ba6311f79037df837d1426/benches%2Fsmoke.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fsmoke.rs?ref=709e29a16749333c29ba6311f79037df837d1426", "patch": "@@ -1,35 +0,0 @@\n-#![feature(test, rustc_private)]\n-\n-extern crate test;\n-use crate::test::Bencher;\n-mod helpers;\n-use crate::helpers::*;\n-\n-#[bench]\n-fn noop(bencher: &mut Bencher) {\n-    bencher.iter(smoke_helper::main)\n-}\n-\n-/*\n-// really slow\n-#[bench]\n-fn noop_miri_full(bencher: &mut Bencher) {\n-    let path = std::env::var(\"RUST_SYSROOT\").expect(\"env variable `RUST_SYSROOT` not set\");\n-    bencher.iter(|| {\n-        let mut process = std::process::Command::new(\"target/release/miri\");\n-        process.arg(\"benches/smoke_helper.rs\")\n-               .arg(\"--sysroot\").arg(&path);\n-        let output = process.output().unwrap();\n-        if !output.status.success() {\n-            println!(\"{}\", String::from_utf8(output.stdout).unwrap());\n-            println!(\"{}\", String::from_utf8(output.stderr).unwrap());\n-            panic!(\"failed to run miri\");\n-        }\n-    })\n-}\n-*/\n-\n-#[bench]\n-fn noop_miri_interpreter(bencher: &mut Bencher) {\n-    miri_helper::run(\"smoke_helper\", bencher);\n-}"}]}