{"sha": "25639101ddd18f5bcc47e924015d9a3143840397", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NjM5MTAxZGRkMThmNWJjYzQ3ZTkyNDAxNWQ5YTMxNDM4NDAzOTc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-04T08:43:25Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-04T08:47:03Z"}, "message": "Don't treat `cfg!()` as a constant.", "tree": {"sha": "6d9665fbc9263326d24e22248b73931c7f8021f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d9665fbc9263326d24e22248b73931c7f8021f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25639101ddd18f5bcc47e924015d9a3143840397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25639101ddd18f5bcc47e924015d9a3143840397", "html_url": "https://github.com/rust-lang/rust/commit/25639101ddd18f5bcc47e924015d9a3143840397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25639101ddd18f5bcc47e924015d9a3143840397/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f746a1c2ae130ef84704c941b962075af6693ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f746a1c2ae130ef84704c941b962075af6693ac", "html_url": "https://github.com/rust-lang/rust/commit/5f746a1c2ae130ef84704c941b962075af6693ac"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "15c27d1a996d74e97abfc58d4f9752405b8f727a", "filename": "clippy_utils/src/consts.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/25639101ddd18f5bcc47e924015d9a3143840397/clippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25639101ddd18f5bcc47e924015d9a3143840397/clippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fconsts.rs?ref=25639101ddd18f5bcc47e924015d9a3143840397", "patch": "@@ -1,6 +1,6 @@\n #![allow(clippy::float_cmp)]\n \n-use crate::{clip, sext, unsext};\n+use crate::{clip, is_direct_expn_of, sext, unsext};\n use if_chain::if_chain;\n use rustc_ast::ast::{self, LitFloatType, LitKind};\n use rustc_data_structures::sync::Lrc;\n@@ -230,7 +230,13 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n         match e.kind {\n             ExprKind::Path(ref qpath) => self.fetch_path(qpath, e.hir_id, self.typeck_results.expr_ty(e)),\n             ExprKind::Block(block, _) => self.block(block),\n-            ExprKind::Lit(ref lit) => Some(lit_to_constant(&lit.node, self.typeck_results.expr_ty_opt(e))),\n+            ExprKind::Lit(ref lit) => {\n+                if is_direct_expn_of(e.span, \"cfg\").is_some() {\n+                    None\n+                } else {\n+                    Some(lit_to_constant(&lit.node, self.typeck_results.expr_ty_opt(e)))\n+                }\n+            },\n             ExprKind::Array(vec) => self.multi(vec).map(Constant::Vec),\n             ExprKind::Tup(tup) => self.multi(tup).map(Constant::Tuple),\n             ExprKind::Repeat(value, _) => {"}]}