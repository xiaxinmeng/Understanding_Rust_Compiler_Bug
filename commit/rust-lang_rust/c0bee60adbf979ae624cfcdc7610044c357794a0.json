{"sha": "c0bee60adbf979ae624cfcdc7610044c357794a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYmVlNjBhZGJmOTc5YWU2MjRjZmNkYzc2MTAwNDRjMzU3Nzk0YTA=", "commit": {"author": {"name": "ubsan", "email": "npmazzuca@gmail.com", "date": "2016-07-10T21:17:02Z"}, "committer": {"name": "ubsan", "email": "npmazzuca@gmail.com", "date": "2016-07-10T21:17:02Z"}, "message": "Make it nicer from @alexandermerritt", "tree": {"sha": "ab3b7adf29c207b3c1d7aee69bb502cdb6aa922b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab3b7adf29c207b3c1d7aee69bb502cdb6aa922b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0bee60adbf979ae624cfcdc7610044c357794a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0bee60adbf979ae624cfcdc7610044c357794a0", "html_url": "https://github.com/rust-lang/rust/commit/c0bee60adbf979ae624cfcdc7610044c357794a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0bee60adbf979ae624cfcdc7610044c357794a0/comments", "author": {"login": "ubsan", "id": 60298436, "node_id": "MDQ6VXNlcjYwMjk4NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/60298436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubsan", "html_url": "https://github.com/ubsan", "followers_url": "https://api.github.com/users/ubsan/followers", "following_url": "https://api.github.com/users/ubsan/following{/other_user}", "gists_url": "https://api.github.com/users/ubsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubsan/subscriptions", "organizations_url": "https://api.github.com/users/ubsan/orgs", "repos_url": "https://api.github.com/users/ubsan/repos", "events_url": "https://api.github.com/users/ubsan/events{/privacy}", "received_events_url": "https://api.github.com/users/ubsan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubsan", "id": 60298436, "node_id": "MDQ6VXNlcjYwMjk4NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/60298436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubsan", "html_url": "https://github.com/ubsan", "followers_url": "https://api.github.com/users/ubsan/followers", "following_url": "https://api.github.com/users/ubsan/following{/other_user}", "gists_url": "https://api.github.com/users/ubsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubsan/subscriptions", "organizations_url": "https://api.github.com/users/ubsan/orgs", "repos_url": "https://api.github.com/users/ubsan/repos", "events_url": "https://api.github.com/users/ubsan/events{/privacy}", "received_events_url": "https://api.github.com/users/ubsan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97003e56991d3e475f2d4bb18a88c768018041e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/97003e56991d3e475f2d4bb18a88c768018041e9", "html_url": "https://github.com/rust-lang/rust/commit/97003e56991d3e475f2d4bb18a88c768018041e9"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d6fb1816b5fa0af9fe12c3dbc573ac891a1cccd3", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c0bee60adbf979ae624cfcdc7610044c357794a0/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0bee60adbf979ae624cfcdc7610044c357794a0/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=c0bee60adbf979ae624cfcdc7610044c357794a0", "patch": "@@ -339,11 +339,11 @@ extern \"rust-intrinsic\" {\n     /// # Alternatives\n     ///\n     /// However, many uses of `transmute` can be achieved through other means.\n-    /// This is unfortunate because either `transmute` isn't guaranteed to work\n-    /// in that case, and only does because of rustc's current implemenation;\n-    /// or, more commonly, `transmute` is just too powerful. It can transform\n+    /// `transmute` can transform\n     /// any type into any other, with just the caveat that they're the same\n-    /// size. Some more or less common uses, and a better way, are as follows:\n+    /// size, and it sometimes results in interesting results. Below are common\n+    /// applications of `transmute` which can be replaced with safe applications\n+    /// of `as`:\n     ///\n     /// Turning a pointer into a `usize`:\n     ///\n@@ -374,7 +374,8 @@ extern \"rust-intrinsic\" {\n     /// let val_transmuted = unsafe {\n     ///     std::mem::transmute::<&mut i32, &mut u32>(ptr)\n     /// };\n-    /// // Now, put together `as` and reborrowing\n+    /// // Now, put together `as` and reborrowing - note the chaining of `as`\n+    /// // `as` is not transitive\n     /// let val_casts = unsafe { &mut *(ptr as *mut i32 as *mut u32) };\n     /// ```\n     ///"}]}