{"sha": "f4c03fd8473c2b5a254789abcb712c90b558f92d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YzAzZmQ4NDczYzJiNWEyNTQ3ODlhYmNiNzEyYzkwYjU1OGY5MmQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-31T15:58:51Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-31T15:58:51Z"}, "message": "syntax: improve a few allocations", "tree": {"sha": "cd954625a031646b799768e1f2693f590ea3f14e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd954625a031646b799768e1f2693f590ea3f14e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4c03fd8473c2b5a254789abcb712c90b558f92d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c03fd8473c2b5a254789abcb712c90b558f92d", "html_url": "https://github.com/rust-lang/rust/commit/f4c03fd8473c2b5a254789abcb712c90b558f92d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4c03fd8473c2b5a254789abcb712c90b558f92d/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0db7abe5b6f3cdfca736f9238689cbea8ef61c7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0db7abe5b6f3cdfca736f9238689cbea8ef61c7e", "html_url": "https://github.com/rust-lang/rust/commit/0db7abe5b6f3cdfca736f9238689cbea8ef61c7e"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "37e7b44694f4881faf2cfd5e762d198f285fc408", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4c03fd8473c2b5a254789abcb712c90b558f92d/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c03fd8473c2b5a254789abcb712c90b558f92d/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=f4c03fd8473c2b5a254789abcb712c90b558f92d", "patch": "@@ -387,6 +387,8 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                         add_derived_markers(&mut self.cx, item.span(), &traits, item.clone());\n                     let derives = derives.entry(invoc.expansion_data.mark).or_default();\n \n+                    derives.reserve(traits.len());\n+                    invocations.reserve(traits.len());\n                     for path in &traits {\n                         let mark = Mark::fresh(self.cx.current_expansion.mark);\n                         derives.push(mark);"}, {"sha": "dd90ef06c39295da68bab608be45b3a0f5937b65", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4c03fd8473c2b5a254789abcb712c90b558f92d/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c03fd8473c2b5a254789abcb712c90b558f92d/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=f4c03fd8473c2b5a254789abcb712c90b558f92d", "patch": "@@ -1384,7 +1384,7 @@ impl<'a> MethodDef<'a> {\n             // let __self2_vi = unsafe {\n             //     std::intrinsics::discriminant_value(&arg2) } as i32;\n             // ```\n-            let mut index_let_stmts: Vec<ast::Stmt> = Vec::new();\n+            let mut index_let_stmts: Vec<ast::Stmt> = Vec::with_capacity(vi_idents.len() + 1);\n \n             // We also build an expression which checks whether all discriminants are equal\n             // discriminant_test = __self0_vi == __self1_vi && __self0_vi == __self2_vi && ..."}]}