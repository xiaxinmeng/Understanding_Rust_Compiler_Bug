{"sha": "79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZDQ1NDBlYTgzYTFkNzk1ZmYwYmZlZGRkZTNhNTlhNGI4OWY5MDU=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-09-30T20:53:03Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-09-30T20:53:15Z"}, "message": "Fold `MethodOrigin`s to resolve inference variables they may contain.\nFixes #17662.", "tree": {"sha": "dc584a381c3c3f54f01fdf7ea09ea3d99bcc96eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc584a381c3c3f54f01fdf7ea09ea3d99bcc96eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "comment_count": 14, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "html_url": "https://github.com/rust-lang/rust/commit/79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "823f10802fc8940aeb094185cecd5958c7f23d53", "url": "https://api.github.com/repos/rust-lang/rust/commits/823f10802fc8940aeb094185cecd5958c7f23d53", "html_url": "https://github.com/rust-lang/rust/commit/823f10802fc8940aeb094185cecd5958c7f23d53"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "1342ff82b8fb42503aa6d0f8ef9de92c5e4dda2c", "filename": "src/librustc/middle/ty_fold.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty_fold.rs?ref=79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "patch": "@@ -251,6 +251,33 @@ impl TypeFoldable for ty::AutoRef {\n     }\n }\n \n+impl TypeFoldable for typeck::MethodOrigin {\n+    fn fold_with<'tcx, F: TypeFolder<'tcx>>(&self, folder: &mut F) -> typeck::MethodOrigin {\n+        match *self {\n+            typeck::MethodStatic(def_id) => {\n+                typeck::MethodStatic(def_id)\n+            }\n+            typeck::MethodStaticUnboxedClosure(def_id) => {\n+                typeck::MethodStaticUnboxedClosure(def_id)\n+            }\n+            typeck::MethodTypeParam(ref param) => {\n+                typeck::MethodTypeParam(typeck::MethodParam {\n+                    trait_ref: param.trait_ref.fold_with(folder),\n+                    method_num: param.method_num\n+                })\n+            }\n+            typeck::MethodTraitObject(ref object) => {\n+                typeck::MethodTraitObject(typeck::MethodObject {\n+                    trait_ref: object.trait_ref.fold_with(folder),\n+                    object_trait_id: object.object_trait_id,\n+                    method_num: object.method_num,\n+                    real_index: object.real_index\n+                })\n+            }\n+        }\n+    }\n+}\n+\n impl TypeFoldable for typeck::vtable_origin {\n     fn fold_with<'tcx, F: TypeFolder<'tcx>>(&self, folder: &mut F) -> typeck::vtable_origin {\n         match *self {"}, {"sha": "6384c65591172b7bef3e15df49724ba43da24de1", "filename": "src/librustc/middle/typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs?ref=79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "patch": "@@ -323,7 +323,7 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n                        method_call,\n                        method.repr(self.tcx()));\n                 let new_method = MethodCallee {\n-                    origin: method.origin,\n+                    origin: self.resolve(&method.origin, reason),\n                     ty: self.resolve(&method.ty, reason),\n                     substs: self.resolve(&method.substs, reason),\n                 };"}, {"sha": "e2c6857fb690e5c56e416c9e49394306387cee80", "filename": "src/test/auxiliary/issue-17662.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Ftest%2Fauxiliary%2Fissue-17662.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Ftest%2Fauxiliary%2Fissue-17662.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-17662.rs?ref=79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait Foo<'a, T> {\n+    fn foo(&self) -> T;\n+}\n+\n+pub fn foo<'a, T>(x: &'a Foo<'a, T>) -> T {\n+    let x: &'a Foo<T> = x;\n+    //            ^ the lifetime parameter of Foo is left to be infered.\n+    x.foo()\n+    // ^ encoding this method call in metadata triggers an ICE.\n+}"}, {"sha": "34bcfeb10dec37bbf905188faecbe36f9d03b9d4", "filename": "src/test/run-pass/issue-17662.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Ftest%2Frun-pass%2Fissue-17662.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d4540ea83a1d795ff0bfeddde3a59a4b89f905/src%2Ftest%2Frun-pass%2Fissue-17662.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17662.rs?ref=79d4540ea83a1d795ff0bfeddde3a59a4b89f905", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-17662.rs\n+\n+extern crate \"issue-17662\" as i;\n+\n+struct Bar<'a>;\n+\n+impl<'a> i::Foo<'a, uint> for Bar<'a> {\n+    fn foo(&self) -> uint { 5u }\n+}\n+\n+pub fn main() {\n+    assert_eq!(i::foo(&Bar), 5);\n+}"}]}