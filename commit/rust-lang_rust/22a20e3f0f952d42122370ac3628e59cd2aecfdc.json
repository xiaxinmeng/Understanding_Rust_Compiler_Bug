{"sha": "22a20e3f0f952d42122370ac3628e59cd2aecfdc", "node_id": "C_kwDOAAsO6NoAKDIyYTIwZTNmMGY5NTJkNDIxMjIzNzBhYzM2MjhlNTljZDJhZWNmZGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-12T16:37:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-12T16:37:07Z"}, "message": "Auto merge of #94711 - ouz-a:master3, r=oli-obk\n\nReturn early to fix ICE\n\nThis fixes #94627, ICE happens because compiler tries to suggest constraining type parameter but the only constraint is implicit `std::Sized` one, so it gets removed and there is nothing to suggest resulting in ICE.", "tree": {"sha": "619b87da87ab77a11675ad344196d89a3a76273b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/619b87da87ab77a11675ad344196d89a3a76273b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22a20e3f0f952d42122370ac3628e59cd2aecfdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22a20e3f0f952d42122370ac3628e59cd2aecfdc", "html_url": "https://github.com/rust-lang/rust/commit/22a20e3f0f952d42122370ac3628e59cd2aecfdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22a20e3f0f952d42122370ac3628e59cd2aecfdc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed2a69c4a9f3e5535461484af6266681fd7d90d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed2a69c4a9f3e5535461484af6266681fd7d90d4", "html_url": "https://github.com/rust-lang/rust/commit/ed2a69c4a9f3e5535461484af6266681fd7d90d4"}, {"sha": "1853ffccbc0d48caa4c948f4b9e116e3ab83a58c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1853ffccbc0d48caa4c948f4b9e116e3ab83a58c", "html_url": "https://github.com/rust-lang/rust/commit/1853ffccbc0d48caa4c948f4b9e116e3ab83a58c"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "7d950b79cdd8da671d4c1835370355b5c02ffcc1", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22a20e3f0f952d42122370ac3628e59cd2aecfdc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22a20e3f0f952d42122370ac3628e59cd2aecfdc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=22a20e3f0f952d42122370ac3628e59cd2aecfdc", "patch": "@@ -512,7 +512,7 @@ pub fn suggest_constraining_type_params<'a>(\n         };\n \n         err.span_suggestion_verbose(span, msg, suggestion, applicability);\n-    } else {\n+    } else if suggestions.len() > 1 {\n         err.multipart_suggestion_verbose(\n             \"consider restricting type parameters\",\n             suggestions.into_iter().map(|(span, suggestion, _)| (span, suggestion)).collect(),"}, {"sha": "69b874bed1b9073d91df4b43e0f090b2dbaa2896", "filename": "src/test/ui/suggestions/constrain-suggest-ice.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/22a20e3f0f952d42122370ac3628e59cd2aecfdc/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22a20e3f0f952d42122370ac3628e59cd2aecfdc/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.rs?ref=22a20e3f0f952d42122370ac3628e59cd2aecfdc", "patch": "@@ -0,0 +1,11 @@\n+struct Bug<S>{ //~ ERROR parameter `S` is never used [E0392]\n+    A: [(); {\n+        let x: [u8; Self::W] = [0; Self::W]; //~ ERROR generic `Self` types are currently not permitted in anonymous constants\n+        //~^ ERROR generic `Self` types are currently not permitted in anonymous constants\n+        //~^^ ERROR the size for values of type `S` cannot be known at compilation time [E0277]\n+        F //~ ERROR cannot find value `F` in this scope [E0425]\n+    }\n+} //~ ERROR mismatched closing delimiter: `}`\n+//~^ ERROR mismatched closing delimiter: `}`\n+\n+fn main() {}"}, {"sha": "477eb2786799a5d9320e5ed5b210dfef659c3af8", "filename": "src/test/ui/suggestions/constrain-suggest-ice.stderr", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/22a20e3f0f952d42122370ac3628e59cd2aecfdc/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/22a20e3f0f952d42122370ac3628e59cd2aecfdc/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.stderr?ref=22a20e3f0f952d42122370ac3628e59cd2aecfdc", "patch": "@@ -0,0 +1,81 @@\n+error: mismatched closing delimiter: `}`\n+  --> $DIR/constrain-suggest-ice.rs:2:8\n+   |\n+LL | struct Bug<S>{\n+   |              - closing delimiter possibly meant for this\n+LL |     A: [(); {\n+   |        ^ unclosed delimiter\n+...\n+LL | }\n+   | ^ mismatched closing delimiter\n+\n+error: mismatched closing delimiter: `}`\n+  --> $DIR/constrain-suggest-ice.rs:2:8\n+   |\n+LL | struct Bug<S>{\n+   |              - closing delimiter possibly meant for this\n+LL |     A: [(); {\n+   |        ^ unclosed delimiter\n+...\n+LL | }\n+   | ^ mismatched closing delimiter\n+\n+error[E0425]: cannot find value `F` in this scope\n+  --> $DIR/constrain-suggest-ice.rs:6:9\n+   |\n+LL |         F\n+   |         ^\n+   |\n+help: a local variable with a similar name exists\n+   |\n+LL |         x\n+   |         ~\n+help: you might be missing a type parameter\n+   |\n+LL | struct Bug<S, F>{\n+   |             +++\n+\n+error: generic `Self` types are currently not permitted in anonymous constants\n+  --> $DIR/constrain-suggest-ice.rs:3:21\n+   |\n+LL |         let x: [u8; Self::W] = [0; Self::W];\n+   |                     ^^^^\n+\n+error: generic `Self` types are currently not permitted in anonymous constants\n+  --> $DIR/constrain-suggest-ice.rs:3:36\n+   |\n+LL |         let x: [u8; Self::W] = [0; Self::W];\n+   |                                    ^^^^\n+\n+error[E0277]: the size for values of type `S` cannot be known at compilation time\n+  --> $DIR/constrain-suggest-ice.rs:3:36\n+   |\n+LL | struct Bug<S>{\n+   |            - this type parameter needs to be `std::marker::Sized`\n+LL |     A: [(); {\n+LL |         let x: [u8; Self::W] = [0; Self::W];\n+   |                                    ^^^^^^^ doesn't have a size known at compile-time\n+   |\n+note: required by a bound in `Bug`\n+  --> $DIR/constrain-suggest-ice.rs:1:12\n+   |\n+LL | struct Bug<S>{\n+   |            ^ required by this bound in `Bug`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | struct Bug<S: ?Sized>{\n+   |             ++++++++\n+\n+error[E0392]: parameter `S` is never used\n+  --> $DIR/constrain-suggest-ice.rs:1:12\n+   |\n+LL | struct Bug<S>{\n+   |            ^ unused parameter\n+   |\n+   = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n+\n+error: aborting due to 7 previous errors\n+\n+Some errors have detailed explanations: E0277, E0392, E0425.\n+For more information about an error, try `rustc --explain E0277`."}]}