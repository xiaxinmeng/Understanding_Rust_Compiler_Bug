{"sha": "d0d800f125ad95ec392ae01d38e66b9c82527f89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZDgwMGYxMjVhZDk1ZWMzOTJhZTAxZDM4ZTY2YjljODI1MjdmODk=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-05-13T18:44:30Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-05-14T06:16:14Z"}, "message": "Get rid of the android-cross-path flag to rustc.\n\nThere's no need to include this specific flag just for android. We can\nalready deal with what it tries to solve by using -C linker=/path/to/cc\nand -C ar=/path/to/ar. The Makefiles for rustc already set this up when\nwe're crosscompiling.\n\nI did add the flag to compiletest though so it can find gdb. Though, I'm\npretty sure we don't run debuginfo tests on android anyways right now.\n\n[breaking-change]", "tree": {"sha": "9fea0f1c56e07e80cf0ccc680fcea4bdec7475a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fea0f1c56e07e80cf0ccc680fcea4bdec7475a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0d800f125ad95ec392ae01d38e66b9c82527f89", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d800f125ad95ec392ae01d38e66b9c82527f89", "html_url": "https://github.com/rust-lang/rust/commit/d0d800f125ad95ec392ae01d38e66b9c82527f89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0d800f125ad95ec392ae01d38e66b9c82527f89/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4414739a5897ff2a4b35de5f7e1436b6e3f3f10", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4414739a5897ff2a4b35de5f7e1436b6e3f3f10", "html_url": "https://github.com/rust-lang/rust/commit/e4414739a5897ff2a4b35de5f7e1436b6e3f3f10"}], "stats": {"total": 66, "additions": 17, "deletions": 49}, "files": [{"sha": "c88c9cec403ec18a14fe3f00783599dcf02269dc", "filename": "man/rustc.1", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -138,9 +138,6 @@ A space-separated list of arguments to pass through to LLVM.\n If specified, the compiler will save more files (.bc, .o, .no-opt.bc) generated\n throughout compilation in the output directory.\n .TP\n-\\fBandroid-cross-path\\fR=path/to/ndk/bin\n-Directory to find the Android NDK cross-compilation tools\n-.TP\n \\fBno-rpath\\fR\n If specified, then the rpath value for dynamic libraries will not be set in\n either dynamic library or executable outputs."}, {"sha": "76c9debba8016be85384c8257a7712b30f083526", "filename": "mk/platform.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -307,7 +307,7 @@ CFG_LDPATH_arm-linux-androideabi :=\n CFG_RUN_arm-linux-androideabi=\n CFG_RUN_TARG_arm-linux-androideabi=\n RUSTC_FLAGS_arm-linux-androideabi :=\n-RUSTC_CROSS_FLAGS_arm-linux-androideabi :=-C android-cross-path=$(CFG_ANDROID_CROSS_PATH)\n+RUSTC_CROSS_FLAGS_arm-linux-androideabi :=\n \n # arm-unknown-linux-gnueabihf configuration\n CROSS_PREFIX_arm-unknown-linux-gnueabihf=arm-linux-gnueabihf-"}, {"sha": "befd1a737f7e67a1a096b3c8f1fcf0a99e1ae028", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -601,6 +601,7 @@ CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n         --stage-id stage$(1)-$(2)\t\t\t\t\t\t\t\\\n         --target $(2)                                       \\\n         --host $(3)                                       \\\n+        --android-cross-path=$(CFG_ANDROID_CROSS_PATH)    \\\n         --adb-path=$(CFG_ADB)                          \\\n         --adb-test-dir=$(CFG_ADB_TEST_DIR)                  \\\n         --host-rustcflags \"$(RUSTC_FLAGS_$(3)) $$(CTEST_RUSTC_FLAGS) -L $$(RT_OUTPUT_DIR_$(3))\" \\"}, {"sha": "9934a48c856554c1096538333e9e5a3b714beec7", "filename": "src/compiletest/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcommon.rs?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -126,6 +126,9 @@ pub struct Config {\n     // Host triple for the compiler being invoked\n     pub host: ~str,\n \n+    // Path to the android tools\n+    pub android_cross_path: Path,\n+\n     // Extra parameter to run adb on arm-linux-androideabi\n     pub adb_path: ~str,\n "}, {"sha": "b393b31017d36910b929c8a566357ea19715c276", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -79,6 +79,7 @@ pub fn parse_config(args: Vec<~str> ) -> Config {\n           optflag(\"\", \"jit\", \"run tests under the JIT\"),\n           optopt(\"\", \"target\", \"the target to build for\", \"TARGET\"),\n           optopt(\"\", \"host\", \"the host to build for\", \"HOST\"),\n+          optopt(\"\", \"android-cross-path\", \"Android NDK standalone path\", \"PATH\"),\n           optopt(\"\", \"adb-path\", \"path to the android debugger\", \"PATH\"),\n           optopt(\"\", \"adb-test-dir\", \"path to tests for the android debugger\", \"PATH\"),\n           optopt(\"\", \"lldb-python-dir\", \"directory containing LLDB's python module\", \"PATH\"),\n@@ -142,6 +143,7 @@ pub fn parse_config(args: Vec<~str> ) -> Config {\n         jit: matches.opt_present(\"jit\"),\n         target: opt_str2(matches.opt_str(\"target\")).to_str(),\n         host: opt_str2(matches.opt_str(\"host\")).to_str(),\n+        android_cross_path: opt_path(matches, \"android-cross-path\"),\n         adb_path: opt_str2(matches.opt_str(\"adb-path\")).to_str(),\n         adb_test_dir:\n             opt_str2(matches.opt_str(\"adb-test-dir\")).to_str(),\n@@ -173,6 +175,7 @@ pub fn log_config(config: &Config) {\n     logv(c, format!(\"jit: {}\", config.jit));\n     logv(c, format!(\"target: {}\", config.target));\n     logv(c, format!(\"host: {}\", config.host));\n+    logv(c, format!(\"android-cross-path: {}\", config.android_cross_path.display()));\n     logv(c, format!(\"adb_path: {}\", config.adb_path));\n     logv(c, format!(\"adb_test_dir: {}\", config.adb_test_dir));\n     logv(c, format!(\"adb_device_status: {}\", config.adb_device_status));"}, {"sha": "dab1185435d9319c850a5e9ff1dcc95ab644f653", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -347,18 +347,10 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 break;\n             }\n \n-            let args = split_maybe_args(&config.target_rustcflags);\n-            let mut tool_path = StrBuf::new();\n-            for arg in args.iter() {\n-                if arg.contains(\"android-cross-path=\") {\n-                    tool_path = StrBuf::from_str(arg.replace(\"android-cross-path=\", \"\"));\n-                    break;\n-                }\n-            }\n-\n-            if tool_path.is_empty() {\n-                fatal(\"cannot found android cross path\".to_owned());\n-            }\n+            let tool_path = match config.android_cross_path.as_str() {\n+                Some(x) => x.to_strbuf(),\n+                None => fatal(\"cannot find android cross path\".to_owned())\n+            };\n \n             let debugger_script = make_out_name(config, testfile, \"debugger.script\");\n             // FIXME (#9639): This needs to handle non-utf8 paths"}, {"sha": "9c821117205422427ae9f68f7321a706833fff17", "filename": "src/etc/zsh/_rust", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fetc%2Fzsh%2F_rust", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Fetc%2Fzsh%2F_rust", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fzsh%2F_rust?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -5,7 +5,6 @@ local -a _rustc_opts_switches _rustc_opts_lint _rustc_opts_debug\n typeset -A opt_args\n \n _rustc_opts_switches=(\n-    --android-cross-path'[The path to the Android NDK]'\n     --ar'[Program to use for managing archives instead of the default.]'\n     -c'[Compile and assemble, but do not link]'\n     --cfg'[Configure the compilation environment]'"}, {"sha": "de6b5925edbdec8c647a48c6ff74a5747c3e886b", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 5, "deletions": 30, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -757,40 +757,15 @@ pub fn get_cc_prog(sess: &Session) -> StrBuf {\n     // instead of hard-coded gcc.\n     // For win32, there is no cc command, so we add a condition to make it use gcc.\n     match sess.targ_cfg.os {\n-        abi::OsWin32 => return \"gcc\".to_strbuf(),\n-        _ => {},\n-    }\n-\n-    get_system_tool(sess, \"cc\")\n+        abi::OsWin32 => \"gcc\",\n+        _ => \"cc\",\n+    }.to_strbuf()\n }\n \n pub fn get_ar_prog(sess: &Session) -> StrBuf {\n     match sess.opts.cg.ar {\n-        Some(ref ar) => return (*ar).clone(),\n-        None => {}\n-    }\n-\n-    get_system_tool(sess, \"ar\")\n-}\n-\n-fn get_system_tool(sess: &Session, tool: &str) -> StrBuf {\n-    match sess.targ_cfg.os {\n-        abi::OsAndroid => match sess.opts.cg.android_cross_path {\n-            Some(ref path) => {\n-                let tool_str = match tool {\n-                    \"cc\" => \"gcc\",\n-                    _ => tool\n-                };\n-                format_strbuf!(\"{}/bin/arm-linux-androideabi-{}\",\n-                               *path,\n-                               tool_str)\n-            }\n-            None => {\n-                sess.fatal(format!(\"need Android NDK path for the '{}' tool \\\n-                                    (-C android-cross-path)\", tool))\n-            }\n-        },\n-        _ => tool.to_strbuf(),\n+        Some(ref ar) => (*ar).clone(),\n+        None => \"ar\".to_strbuf()\n     }\n }\n "}, {"sha": "b60468e85bbf16fc5d569f496638c82a992a45d4", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d800f125ad95ec392ae01d38e66b9c82527f89/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=d0d800f125ad95ec392ae01d38e66b9c82527f89", "patch": "@@ -294,8 +294,6 @@ cgoptions!(\n         \"a list of arguments to pass to llvm (space separated)\"),\n     save_temps: bool = (false, parse_bool,\n         \"save all temporary output files during compilation\"),\n-    android_cross_path: Option<StrBuf> = (None, parse_opt_string,\n-        \"the path to the Android NDK\"),\n     no_rpath: bool = (false, parse_bool,\n         \"disables setting the rpath in libs/exes\"),\n     no_prepopulate_passes: bool = (false, parse_bool,"}]}