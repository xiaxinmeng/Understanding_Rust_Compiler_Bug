{"sha": "2bb5029d748ceee2f0501fbba786944a3ead6019", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYjUwMjlkNzQ4Y2VlZTJmMDUwMWZiYmE3ODY5NDRhM2VhZDYwMTk=", "commit": {"author": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2018-08-09T03:06:18Z"}, "committer": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2018-11-15T13:43:01Z"}, "message": "Use the ELFv2 ABI on powerpc64 musl", "tree": {"sha": "e86887197c2507e89b21f0d791e286a1a6522dbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e86887197c2507e89b21f0d791e286a1a6522dbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bb5029d748ceee2f0501fbba786944a3ead6019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bb5029d748ceee2f0501fbba786944a3ead6019", "html_url": "https://github.com/rust-lang/rust/commit/2bb5029d748ceee2f0501fbba786944a3ead6019", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bb5029d748ceee2f0501fbba786944a3ead6019/comments", "author": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "346e97600bafd916c41c24d01ef8671511d691c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/346e97600bafd916c41c24d01ef8671511d691c2", "html_url": "https://github.com/rust-lang/rust/commit/346e97600bafd916c41c24d01ef8671511d691c2"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "f7ef1390f14deace706a5f8b47883bbd61a8cb23", "filename": "src/librustc_target/abi/call/powerpc64.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2bb5029d748ceee2f0501fbba786944a3ead6019/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bb5029d748ceee2f0501fbba786944a3ead6019/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc64.rs?ref=2bb5029d748ceee2f0501fbba786944a3ead6019", "patch": "@@ -14,11 +14,12 @@\n \n use abi::call::{FnType, ArgType, Reg, RegKind, Uniform};\n use abi::{Align, Endian, HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use spec::HasTargetSpec;\n \n #[derive(Debug, Clone, Copy, PartialEq)]\n enum ABI {\n     ELFv1, // original ABI used for powerpc64 (big-endian)\n-    ELFv2, // newer ABI used for powerpc64le\n+    ELFv2, // newer ABI used for powerpc64le and musl (both endians)\n }\n use self::ABI::*;\n \n@@ -131,11 +132,15 @@ fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<'a, Ty>, abi: ABI)\n \n pub fn compute_abi_info<'a, Ty, C>(cx: &C, fty: &mut FnType<'a, Ty>)\n     where Ty: TyLayoutMethods<'a, C> + Copy,\n-          C: LayoutOf<Ty = Ty, TyLayout = TyLayout<'a, Ty>> + HasDataLayout\n+          C: LayoutOf<Ty = Ty, TyLayout = TyLayout<'a, Ty>> + HasDataLayout + HasTargetSpec\n {\n-    let abi = match cx.data_layout().endian {\n-        Endian::Big => ELFv1,\n-        Endian::Little => ELFv2,\n+    let abi = if cx.target_spec().target_env == \"musl\" {\n+        ELFv2\n+    } else {\n+        match cx.data_layout().endian {\n+            Endian::Big => ELFv1,\n+            Endian::Little => ELFv2\n+        }\n     };\n \n     if !fty.ret.is_ignore() {"}]}