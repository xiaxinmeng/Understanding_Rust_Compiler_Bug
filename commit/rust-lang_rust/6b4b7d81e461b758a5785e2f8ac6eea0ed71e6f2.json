{"sha": "6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2", "node_id": "C_kwDOAAsO6NoAKDZiNGI3ZDgxZTQ2MWI3NThhNTc4NWUyZjhhYzZlZWEwZWQ3MWU2ZjI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-11T15:57:05Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-11T15:57:05Z"}, "message": "internal: Add version info to unsupported proc macro abi error", "tree": {"sha": "94a75da26c7b6030f7ca970f627e88368c3fdb15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94a75da26c7b6030f7ca970f627e88368c3fdb15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2", "html_url": "https://github.com/rust-lang/rust/commit/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "add85397ae3ddb7653ab1b66428985ee7ee2ca3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/add85397ae3ddb7653ab1b66428985ee7ee2ca3f", "html_url": "https://github.com/rust-lang/rust/commit/add85397ae3ddb7653ab1b66428985ee7ee2ca3f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0ce099ae0bab3b5a39b29a431b1bbd836315e679", "filename": "crates/proc-macro-srv/src/abis/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fmod.rs?ref=6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2", "patch": "@@ -117,7 +117,7 @@ impl Abi {\n                 let inner = unsafe { Abi_1_63::from_lib(lib, symbol_name) }?;\n                 Ok(Abi::Abi1_63(inner))\n             }\n-            _ => Err(LoadProcMacroDylibError::UnsupportedABI),\n+            _ => Err(LoadProcMacroDylibError::UnsupportedABI(info.version_string.clone())),\n         }\n     }\n "}, {"sha": "0722cd89d7297b5c4b502b86a66e1299c9ad641b", "filename": "crates/proc-macro-srv/src/dylib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs?ref=6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2", "patch": "@@ -80,14 +80,14 @@ fn load_library(file: &Path) -> Result<Library, libloading::Error> {\n pub enum LoadProcMacroDylibError {\n     Io(io::Error),\n     LibLoading(libloading::Error),\n-    UnsupportedABI,\n+    UnsupportedABI(String),\n }\n \n impl fmt::Display for LoadProcMacroDylibError {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {\n             Self::Io(e) => e.fmt(f),\n-            Self::UnsupportedABI => write!(f, \"unsupported ABI version\"),\n+            Self::UnsupportedABI(v) => write!(f, \"unsupported ABI `{v}`\"),\n             Self::LibLoading(e) => e.fmt(f),\n         }\n     }"}, {"sha": "b4f5ebd157f33d04c1a94a21b76cef917c4ba667", "filename": "crates/proc-macro-srv/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2/crates%2Fproc-macro-srv%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2/crates%2Fproc-macro-srv%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Flib.rs?ref=6b4b7d81e461b758a5785e2f8ac6eea0ed71e6f2", "patch": "@@ -113,12 +113,12 @@ impl ProcMacroSrv {\n \n     fn expander(&mut self, path: &Path) -> Result<&dylib::Expander, String> {\n         let time = fs::metadata(path).and_then(|it| it.modified()).map_err(|err| {\n-            format!(\"Failed to get file metadata for {}: {:?}\", path.display(), err)\n+            format!(\"Failed to get file metadata for {}: {}\", path.display(), err)\n         })?;\n \n         Ok(match self.expanders.entry((path.to_path_buf(), time)) {\n             Entry::Vacant(v) => v.insert(dylib::Expander::new(path).map_err(|err| {\n-                format!(\"Cannot create expander for {}: {:?}\", path.display(), err)\n+                format!(\"Cannot create expander for {}: {}\", path.display(), err)\n             })?),\n             Entry::Occupied(e) => e.into_mut(),\n         })"}]}