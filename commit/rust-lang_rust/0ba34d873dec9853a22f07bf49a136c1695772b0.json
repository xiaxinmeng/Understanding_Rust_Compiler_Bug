{"sha": "0ba34d873dec9853a22f07bf49a136c1695772b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYTM0ZDg3M2RlYzk4NTNhMjJmMDdiZjQ5YTEzNmMxNjk1NzcyYjA=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-29T08:55:03Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-29T10:18:49Z"}, "message": "Beginning of replacing drop with resources", "tree": {"sha": "09123aa55277f83d6cb3c6eb0166ce9d3f944a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09123aa55277f83d6cb3c6eb0166ce9d3f944a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ba34d873dec9853a22f07bf49a136c1695772b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ba34d873dec9853a22f07bf49a136c1695772b0", "html_url": "https://github.com/rust-lang/rust/commit/0ba34d873dec9853a22f07bf49a136c1695772b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ba34d873dec9853a22f07bf49a136c1695772b0/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c09d4a7707e8fd5d7bd94b164a20d157d3d14d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c09d4a7707e8fd5d7bd94b164a20d157d3d14d4", "html_url": "https://github.com/rust-lang/rust/commit/4c09d4a7707e8fd5d7bd94b164a20d157d3d14d4"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "16868115aaa4c40c7701f205f8a57388d89ba97f", "filename": "src/lib/io.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0ba34d873dec9853a22f07bf49a136c1695772b0/src%2Flib%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba34d873dec9853a22f07bf49a136c1695772b0/src%2Flib%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fio.rs?ref=0ba34d873dec9853a22f07bf49a136c1695772b0", "patch": "@@ -55,7 +55,11 @@ fn convert_whence(whence: seek_style) -> int {\n     ret alt whence { seek_set. { 0 } seek_cur. { 1 } seek_end. { 2 } };\n }\n \n-obj FILE_buf_reader(f: os::libc::FILE, must_close: bool) {\n+resource FILE_res(f: os::libc::FILE) {\n+    os::libc::fclose(f);\n+}\n+\n+obj FILE_buf_reader(f: os::libc::FILE, res: option::t[@FILE_res]) {\n     fn read(len: uint) -> vec[u8] {\n         let buf = vec::alloc[u8](len);\n         let read = os::libc::fread(vec::buf[u8](buf), 1u, len, f);\n@@ -71,7 +75,6 @@ obj FILE_buf_reader(f: os::libc::FILE, must_close: bool) {\n     fn tell() -> uint {\n         ret os::libc::ftell(f) as uint;\n     }\n-    drop { if must_close { os::libc::fclose(f); } }\n }\n \n \n@@ -173,13 +176,13 @@ obj new_reader(rdr: buf_reader) {\n }\n \n fn stdin() -> reader {\n-    ret new_reader(FILE_buf_reader(rustrt::rust_get_stdin(), false));\n+    ret new_reader(FILE_buf_reader(rustrt::rust_get_stdin(), option::none));\n }\n \n fn file_reader(path: str) -> reader {\n     let f = os::libc::fopen(str::buf(path), str::buf(\"r\"));\n     if f as uint == 0u { log_err \"error opening \" + path; fail; }\n-    ret new_reader(FILE_buf_reader(f, true));\n+    ret new_reader(FILE_buf_reader(f, option::some(@FILE_res(f))));\n }\n \n \n@@ -237,7 +240,7 @@ type buf_writer =\n         fn tell() -> uint ;\n     };\n \n-obj FILE_writer(f: os::libc::FILE, must_close: bool) {\n+obj FILE_writer(f: os::libc::FILE, res: option::t[@FILE_res]) {\n     fn write(v: vec[u8]) {\n         let len = vec::len[u8](v);\n         let vbuf = vec::buf[u8](v);\n@@ -250,7 +253,6 @@ obj FILE_writer(f: os::libc::FILE, must_close: bool) {\n     fn tell() -> uint {\n         ret os::libc::ftell(f) as uint;\n     }\n-    drop { if must_close { os::libc::fclose(f); } }\n }\n \n obj fd_buf_writer(fd: int, must_close: bool) {\n@@ -372,7 +374,7 @@ fn file_writer(path: str, flags: vec[fileflag]) -> writer {\n fn buffered_file_buf_writer(path: str) -> buf_writer {\n     let f = os::libc::fopen(str::buf(path), str::buf(\"w\"));\n     if f as uint == 0u { log_err \"error opening \" + path; fail; }\n-    ret FILE_writer(f, true);\n+    ret FILE_writer(f, option::some(@FILE_res(f)));\n }\n \n "}, {"sha": "da5c1409e22ae73514d5ac352a68f4a6dacae84a", "filename": "src/lib/run_program.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ba34d873dec9853a22f07bf49a136c1695772b0/src%2Flib%2Frun_program.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba34d873dec9853a22f07bf49a136c1695772b0/src%2Flib%2Frun_program.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Frun_program.rs?ref=0ba34d873dec9853a22f07bf49a136c1695772b0", "patch": "@@ -64,10 +64,10 @@ fn start_program(prog: str, args: vec[str]) -> @program {\n             ret io::new_writer(io::fd_buf_writer(in_fd, false));\n         }\n         fn output() -> io::reader {\n-            ret io::new_reader(io::FILE_buf_reader(out_file, false));\n+            ret io::new_reader(io::FILE_buf_reader(out_file, option::none));\n         }\n         fn err() -> io::reader {\n-            ret io::new_reader(io::FILE_buf_reader(err_file, false));\n+            ret io::new_reader(io::FILE_buf_reader(err_file, option::none));\n         }\n         fn close_input() {\n             let invalid_fd = -1;"}]}