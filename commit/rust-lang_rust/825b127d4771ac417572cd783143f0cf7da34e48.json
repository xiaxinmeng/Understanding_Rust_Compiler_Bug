{"sha": "825b127d4771ac417572cd783143f0cf7da34e48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNWIxMjdkNDc3MWFjNDE3NTcyY2Q3ODMxNDNmMGNmN2RhMzRlNDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-13T02:56:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-13T02:56:13Z"}, "message": "auto merge of #10441 : cmr/rust/bench_bufferedstream, r=alexcrichton\n\nhttps://github.com/mozilla/rust/pull/10424 did optimizations without adding a\nway to measure their effect and ensure no regressions. This fixes that.", "tree": {"sha": "59c287273150a7a52f74edfa8fbf72b329ce8781", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59c287273150a7a52f74edfa8fbf72b329ce8781"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/825b127d4771ac417572cd783143f0cf7da34e48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/825b127d4771ac417572cd783143f0cf7da34e48", "html_url": "https://github.com/rust-lang/rust/commit/825b127d4771ac417572cd783143f0cf7da34e48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/825b127d4771ac417572cd783143f0cf7da34e48/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bfa45cfd9d7c8b2dcc0ea7a42396624e8b5a31b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bfa45cfd9d7c8b2dcc0ea7a42396624e8b5a31b", "html_url": "https://github.com/rust-lang/rust/commit/1bfa45cfd9d7c8b2dcc0ea7a42396624e8b5a31b"}, {"sha": "67692b21b5c66c391f5f85c918149d4a98e321c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/67692b21b5c66c391f5f85c918149d4a98e321c4", "html_url": "https://github.com/rust-lang/rust/commit/67692b21b5c66c391f5f85c918149d4a98e321c4"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "68fda813a1f6977c3f08cb85e5582c92ca9e9d83", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/825b127d4771ac417572cd783143f0cf7da34e48/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825b127d4771ac417572cd783143f0cf7da34e48/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=825b127d4771ac417572cd783143f0cf7da34e48", "patch": "@@ -351,6 +351,27 @@ mod test {\n     use super::*;\n     use io;\n     use super::super::mem::{MemReader, MemWriter};\n+    use Harness = extra::test::BenchHarness;\n+\n+    /// A type, free to create, primarily intended for benchmarking creation of wrappers that, just\n+    /// for construction, don't need a Reader/Writer that does anything useful. Is equivalent to\n+    /// `/dev/null` in semantics.\n+    #[deriving(Clone,Eq,Ord)]\n+    pub struct NullStream;\n+\n+    impl Reader for NullStream {\n+        fn read(&mut self, _: &mut [u8]) -> Option<uint> {\n+            None\n+        }\n+\n+        fn eof(&mut self) -> bool {\n+            true\n+        }\n+    }\n+\n+    impl Writer for NullStream {\n+        fn write(&mut self, _: &[u8]) { }\n+    }\n \n     #[test]\n     fn test_buffered_reader() {\n@@ -470,4 +491,25 @@ mod test {\n         writer.flush();\n         assert_eq!(*writer.inner_ref().inner_ref(), ~[0, 1, 0, '\\n' as u8, 1]);\n     }\n+\n+    #[bench]\n+    fn bench_buffered_reader(bh: &mut Harness) {\n+        do bh.iter {\n+            BufferedReader::new(NullStream);\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_buffered_writer(bh: &mut Harness) {\n+        do bh.iter {\n+            BufferedWriter::new(NullStream);\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_buffered_stream(bh: &mut Harness) {\n+        do bh.iter {\n+            BufferedStream::new(NullStream);\n+        }\n+    }\n }"}]}