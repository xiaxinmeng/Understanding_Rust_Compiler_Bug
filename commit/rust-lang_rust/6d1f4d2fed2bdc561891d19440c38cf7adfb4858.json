{"sha": "6d1f4d2fed2bdc561891d19440c38cf7adfb4858", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMWY0ZDJmZWQyYmRjNTYxODkxZDE5NDQwYzM4Y2Y3YWRmYjQ4NTg=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-09-15T23:17:38Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-09-15T23:17:38Z"}, "message": "Disable the evaluation cache when in intercrate mode\n\nIt's possible to use the same `InferCtxt` with both\nan intercrate and non-intercrate `SelectionContext`. However,\nthe local (inferctxt) evaluation cache is not aware of this\ndistinction, so this kind of `InferCtxt` re-use will pollute\nthe cache wth bad results.\n\nThis commit avoids the issue by disabling the evaluation cache\nentirely during intercrate mode.", "tree": {"sha": "e506ae5b14cc875dc9f8fa34709a9af0bc7836f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e506ae5b14cc875dc9f8fa34709a9af0bc7836f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d1f4d2fed2bdc561891d19440c38cf7adfb4858", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmFCf3sACgkQtAh+UQ6Y\nsWTXGQ/+L+DtpJ2Yn4N2x0n68Tvw/duiSNqoFaiZTnokwqjK8gBaPN62ITV/dKRS\ncQ9Di1tXuiTsI1rIp7fH5/iIx770RK31+NQPGuyKkZZVFFMb+7vJ1ymwvVIUc33k\nuZAefzhnGt1BRJzqi8P9RUawnTMQ/64BzN+nt4Nuk0nDNQF2b/kKzjVuWgpGuLtU\neSys5ahvfO8Ar6+QklW4g+yko9w43FwVgY53K6MR+CiBFv0yqf/wPy+p4kwp8Jo+\n+p5vjw+2Ge/DXYohsgvpfT1gaMDvvFOVUzNrddwFntc0YLK/Gp3fwazGgvVe5DGT\nbKbaHIEui+iXEvcHpfjmmY6TJJmE4D1SG4R7vP38W4G4/DUJCkrO9FuUR6P86gj2\nVl6THCDIcs5/DBTJQb3LNXXLRFOoTfOWm0WRsfj7v8BNctpfXFgQHhFz95zt5/Uo\n99VKZesxKF73IuLK0GggNmPFljX3kpGUA6WFfve0Vs52gNeIL2+hCoNWhlnGifvH\n0ljLbvQJzlTqqkX/dZ17syXz1I49DaV64RHXbNFKAfQgguzyGi5X6z/SgpwNiu5O\nSTONJYPNKXmPcIq6BhoN90eJsR+hEdQaafyXGyFZk4r8/hduSXyI3eOvX3V28u4o\ncjhcINWZxqUf3YOuFaPr8uWy8f0IsY0Wo31o8pw0Zfum+35MThw=\n=Qph5\n-----END PGP SIGNATURE-----", "payload": "tree e506ae5b14cc875dc9f8fa34709a9af0bc7836f2\nparent c3c0f80d6081092faff801542dd82f0e2420152b\nauthor Aaron Hill <aa1ronham@gmail.com> 1631747858 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1631747858 -0500\n\nDisable the evaluation cache when in intercrate mode\n\nIt's possible to use the same `InferCtxt` with both\nan intercrate and non-intercrate `SelectionContext`. However,\nthe local (inferctxt) evaluation cache is not aware of this\ndistinction, so this kind of `InferCtxt` re-use will pollute\nthe cache wth bad results.\n\nThis commit avoids the issue by disabling the evaluation cache\nentirely during intercrate mode.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d1f4d2fed2bdc561891d19440c38cf7adfb4858", "html_url": "https://github.com/rust-lang/rust/commit/6d1f4d2fed2bdc561891d19440c38cf7adfb4858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d1f4d2fed2bdc561891d19440c38cf7adfb4858/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c0f80d6081092faff801542dd82f0e2420152b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c0f80d6081092faff801542dd82f0e2420152b", "html_url": "https://github.com/rust-lang/rust/commit/c3c0f80d6081092faff801542dd82f0e2420152b"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "27acb87d221b99e5e945bae434813f0e64b0c924", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6d1f4d2fed2bdc561891d19440c38cf7adfb4858/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1f4d2fed2bdc561891d19440c38cf7adfb4858/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=6d1f4d2fed2bdc561891d19440c38cf7adfb4858", "patch": "@@ -982,6 +982,14 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         param_env: ty::ParamEnv<'tcx>,\n         trait_ref: ty::ConstnessAnd<ty::PolyTraitRef<'tcx>>,\n     ) -> Option<EvaluationResult> {\n+        // Neither the global nor local cache is aware of intercrate\n+        // mode, so don't do any caching. In particular, we might\n+        // re-use the same `InferCtxt` with both an intercrate\n+        // and non-intercrate `SelectionContext`\n+        if self.intercrate {\n+            return None;\n+        }\n+\n         let tcx = self.tcx();\n         if self.can_use_global_caches(param_env) {\n             if let Some(res) = tcx.evaluation_cache.get(&param_env.and(trait_ref), tcx) {\n@@ -1004,6 +1012,14 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             return;\n         }\n \n+        // Neither the global nor local cache is aware of intercrate\n+        // mode, so don't do any caching. In particular, we might\n+        // re-use the same `InferCtxt` with both an intercrate\n+        // and non-intercrate `SelectionContext`\n+        if self.intercrate {\n+            return;\n+        }\n+\n         if self.can_use_global_caches(param_env) {\n             if !trait_ref.needs_infer() {\n                 debug!(?trait_ref, ?result, \"insert_evaluation_cache global\");"}]}