{"sha": "52a53e8ae78d77b3c3735fbaf00e53152402295e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYTUzZThhZTc4ZDc3YjNjMzczNWZiYWYwMGU1MzE1MjQwMjI5NWU=", "commit": {"author": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2014-04-16T22:32:00Z"}, "committer": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2014-04-17T17:24:52Z"}, "message": "Change error for out of scope type params to be more helpful.", "tree": {"sha": "97b18e3d45ace55b7095dbd5910532c448ee1576", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97b18e3d45ace55b7095dbd5910532c448ee1576"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52a53e8ae78d77b3c3735fbaf00e53152402295e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52a53e8ae78d77b3c3735fbaf00e53152402295e", "html_url": "https://github.com/rust-lang/rust/commit/52a53e8ae78d77b3c3735fbaf00e53152402295e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52a53e8ae78d77b3c3735fbaf00e53152402295e/comments", "author": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14e1fd46290e175692b495d1e024a3975568f417", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e1fd46290e175692b495d1e024a3975568f417", "html_url": "https://github.com/rust-lang/rust/commit/14e1fd46290e175692b495d1e024a3975568f417"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "5831ab850d393f3cc893525a10ff63531626badf", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -3507,8 +3507,9 @@ impl<'a> Resolver<'a> {\n                         // its scope.\n \n                         self.resolve_error(span,\n-                                              \"attempt to use a type \\\n-                                              argument out of scope\");\n+                                              \"can't use type parameters from \\\n+                                              outer function; try using a local \\\n+                                              type parameter instead\");\n                     }\n \n                     return None;\n@@ -3530,8 +3531,9 @@ impl<'a> Resolver<'a> {\n                         // its scope.\n \n                         self.resolve_error(span,\n-                                              \"attempt to use a type \\\n-                                              argument out of scope\");\n+                                              \"can't use type parameters from \\\n+                                              outer function; try using a local \\\n+                                              type parameter instead\");\n                     }\n \n                     return None;"}, {"sha": "c9539b1d9a3f93a781acd2dc9153ff5fb51e2301", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -95,8 +95,9 @@ impl<'a> TypeFolder for SubstFolder<'a> {\n                                               root.repr(self.tcx)),\n                         None => ~\"\"\n                     };\n-                    let m = format!(\"missing type param `{}`{}\",\n-                                    t.repr(self.tcx), root_msg);\n+                    let m = format!(\"can't use type parameters from outer \\\n+                                    function{}; try using a local type \\\n+                                    parameter instead\", root_msg);\n                     match self.span {\n                         Some(span) => self.tcx.sess.span_err(span, m),\n                         None => self.tcx.sess.err(m)"}, {"sha": "4e5dc652fb5d61df1f7e2ef3ee404b4d5ce07e53", "filename": "src/test/compile-fail/bad-type-env-capture.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n fn foo<T>() {\n-    fn bar(b: T) { } //~ ERROR attempt to use a type argument out of scope\n+    fn bar(b: T) { } //~ ERROR can't use type parameters from outer\n     //~^ ERROR use of undeclared type name\n }\n fn main() { }"}, {"sha": "5b3e343deeaaf00f38be0e845001a62d29272e73", "filename": "src/test/compile-fail/issue-3021-c.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -11,8 +11,8 @@\n fn siphash<T>() {\n \n     trait t {\n-        fn g(&self, x: T) -> T;  //~ ERROR attempt to use a type argument out of scope\n-        //~^ ERROR attempt to use a type argument out of scope\n+        fn g(&self, x: T) -> T;  //~ ERROR can't use type parameters from outer function; try using\n+        //~^ ERROR can't use type parameters from outer function; try using\n         //~^^ ERROR use of undeclared type name `T`\n         //~^^^ ERROR use of undeclared type name `T`\n     }"}, {"sha": "be49ca1fe06a73742a8fa5f086b2629736695d2d", "filename": "src/test/compile-fail/issue-3214.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -10,7 +10,7 @@\n \n fn foo<T>() {\n     struct foo {\n-        x: T, //~ ERROR attempt to use a type argument out of scope\n+        x: T, //~ ERROR can't use type parameters from outer function;\n         //~^ ERROR use of undeclared type name\n     }\n "}, {"sha": "7be01b4abb4b9950d21cbb8e81314f0999eb0e8f", "filename": "src/test/compile-fail/issue-5997-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-5997-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-5997-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5997-enum.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -10,7 +10,7 @@\n \n fn f<Z>() -> bool {\n     enum E { V(Z) }\n-    //~^ ERROR missing type param `Z` in the substitution of `Z`\n+    //~^ ERROR can't use type parameters from outer function in the\n \n     true\n }"}, {"sha": "b2a63ed1c7b8f7f6360a135fc7211a76f81f4b64", "filename": "src/test/compile-fail/issue-5997-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-5997-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fissue-5997-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5997-struct.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -10,7 +10,7 @@\n \n fn f<T>() -> bool {\n     struct S(T); //~ ERROR use of undeclared type name `T`\n-    //~^ ERROR attempt to use a type argument out of scope\n+    //~^ ERROR can't use type parameters from outer function; try using\n \n     true\n }"}, {"sha": "0ee2a3add8721252294946f5ad0492c5bdfe67cd", "filename": "src/test/compile-fail/nested-ty-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:attempt to use a type argument out of scope\n+// error-pattern:can't use type parameters from outer function; try using\n fn hd<U>(v: Vec<U> ) -> U {\n     fn hd1(w: [U]) -> U { return w[0]; }\n "}, {"sha": "ac2f9d0379f64d1a63bd3c468ceb032e53bca8c6", "filename": "src/test/compile-fail/type-arg-out-of-scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a53e8ae78d77b3c3735fbaf00e53152402295e/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs?ref=52a53e8ae78d77b3c3735fbaf00e53152402295e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:attempt to use a type argument out of scope\n+// error-pattern:can't use type parameters from outer function; try using\n fn foo<T>(x: T) {\n     fn bar(f: |T| -> T) { }\n }"}]}