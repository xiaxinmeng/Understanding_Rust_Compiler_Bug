{"sha": "899610778bbd7e3c7b6a3e52085b19f3721b483e", "node_id": "C_kwDOAAsO6NoAKDg5OTYxMDc3OGJiZDdlM2M3YjZhM2U1MjA4NWIxOWYzNzIxYjQ4M2U", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-09T22:11:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-09T22:11:32Z"}, "message": "Merge #10731\n\n10731: fix: show the right check-command r=Veykril a=Florian-Schoenherr\n\nCurrenty r.a. only shows this:\r\n![image](https://user-images.githubusercontent.com/65456722/140977478-e6bc8a45-7c25-4578-9406-fb34f1eb0792.png)\r\neven if another command was specified\r\n\r\nThere might be a better way to do this, I tried.\n\nCo-authored-by: Florian-Schoenherr <florian.schoenherr99@gmail.com>", "tree": {"sha": "409895dcd7d36e886b3f9067f34a002406302070", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/409895dcd7d36e886b3f9067f34a002406302070"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/899610778bbd7e3c7b6a3e52085b19f3721b483e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhivIUCRBK7hj4Ov3rIwAANQgIAAgrjMUBZMIupyoF91yOYhwI\nm9hQRE5tPvMpBWreuS8dZLJMK2rlgUZLX8afuP4E+hj4uuOp05crIr+eek0/v5nx\ntbCl75LHKker1emXq//3I84BXAsbiSF7oc7q1nJH35AGlbht0QqtjspxnukxByxf\nk26LOmE2vQsEXuOLdpogdd3rzuUlWUwuCvjk3dUiSitsb9oONSNhGAUBxlluTKS5\nyFfycKwPUSvmgox/qvwRKwgUSLc6uYggubjyTxopHO4jc0cONYiF2BtYLkuRwRsN\n4CHUDhZ3bGN3YGPP/0KVA659aFU8ibBRDAgUpB42qDatnPMRXLLZIVPfLSdFjJA=\n=Xy6v\n-----END PGP SIGNATURE-----\n", "payload": "tree 409895dcd7d36e886b3f9067f34a002406302070\nparent c7475123636a53d361e8989ec4a149c8a4edfa9a\nparent 4fb76743ca659c132e8fbe6279b96d85dfb576bd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1636495892 +0000\ncommitter GitHub <noreply@github.com> 1636495892 +0000\n\nMerge #10731\n\n10731: fix: show the right check-command r=Veykril a=Florian-Schoenherr\n\nCurrenty r.a. only shows this:\r\n![image](https://user-images.githubusercontent.com/65456722/140977478-e6bc8a45-7c25-4578-9406-fb34f1eb0792.png)\r\neven if another command was specified\r\n\r\nThere might be a better way to do this, I tried.\n\nCo-authored-by: Florian-Schoenherr <florian.schoenherr99@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/899610778bbd7e3c7b6a3e52085b19f3721b483e", "html_url": "https://github.com/rust-lang/rust/commit/899610778bbd7e3c7b6a3e52085b19f3721b483e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/899610778bbd7e3c7b6a3e52085b19f3721b483e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7475123636a53d361e8989ec4a149c8a4edfa9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7475123636a53d361e8989ec4a149c8a4edfa9a", "html_url": "https://github.com/rust-lang/rust/commit/c7475123636a53d361e8989ec4a149c8a4edfa9a"}, {"sha": "4fb76743ca659c132e8fbe6279b96d85dfb576bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb76743ca659c132e8fbe6279b96d85dfb576bd", "html_url": "https://github.com/rust-lang/rust/commit/4fb76743ca659c132e8fbe6279b96d85dfb576bd"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "8f00c6f6df35847114ba08483627cdeb4f7ae7f6", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/899610778bbd7e3c7b6a3e52085b19f3721b483e/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899610778bbd7e3c7b6a3e52085b19f3721b483e/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=899610778bbd7e3c7b6a3e52085b19f3721b483e", "patch": "@@ -406,7 +406,19 @@ impl GlobalState {\n                             // When we're running multiple flychecks, we have to include a disambiguator in\n                             // the title, or the editor complains. Note that this is a user-facing string.\n                             let title = if self.flycheck.len() == 1 {\n-                                \"cargo check\".to_string()\n+                                match self.config.flycheck() {\n+                                    Some(flycheck::FlycheckConfig::CargoCommand {\n+                                        command,\n+                                        ..\n+                                    }) => {\n+                                        format!(\"cargo {}\", command)\n+                                    }\n+                                    Some(flycheck::FlycheckConfig::CustomCommand {\n+                                        command,\n+                                        ..\n+                                    }) => command,\n+                                    None => \"cargo check\".to_string(),\n+                                }\n                             } else {\n                                 format!(\"cargo check (#{})\", id + 1)\n                             };"}]}