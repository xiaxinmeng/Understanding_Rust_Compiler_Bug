{"sha": "a2365ea18a8809b611d405b5aeb1cce2b38183e7", "node_id": "C_kwDOAAsO6NoAKGEyMzY1ZWExOGE4ODA5YjYxMWQ0MDViNWFlYjFjY2UyYjM4MTgzZTc", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-25T16:28:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-25T19:46:44Z"}, "message": "fix: fix extract_variable not working on macro_call", "tree": {"sha": "2c1fddc5ec7e5a53c80c5a276d9aa1877721e383", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c1fddc5ec7e5a53c80c5a276d9aa1877721e383"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2365ea18a8809b611d405b5aeb1cce2b38183e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2365ea18a8809b611d405b5aeb1cce2b38183e7", "html_url": "https://github.com/rust-lang/rust/commit/a2365ea18a8809b611d405b5aeb1cce2b38183e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2365ea18a8809b611d405b5aeb1cce2b38183e7/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "142b6dc650deed819d52602f2a30105d668d7308", "url": "https://api.github.com/repos/rust-lang/rust/commits/142b6dc650deed819d52602f2a30105d668d7308", "html_url": "https://github.com/rust-lang/rust/commit/142b6dc650deed819d52602f2a30105d668d7308"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "7a57ab3b9b7cc2b45722653605c480e6881d3ed3", "filename": "crates/ide_assists/src/handlers/extract_variable.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a2365ea18a8809b611d405b5aeb1cce2b38183e7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2365ea18a8809b611d405b5aeb1cce2b38183e7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs?ref=a2365ea18a8809b611d405b5aeb1cce2b38183e7", "patch": "@@ -160,6 +160,9 @@ impl Anchor {\n             .ancestors()\n             .take_while(|it| !ast::Item::can_cast(it.kind()) || ast::MacroCall::can_cast(it.kind()))\n             .find_map(|node| {\n+                if ast::MacroCall::can_cast(node.kind()) {\n+                    return None;\n+                }\n                 if let Some(expr) =\n                     node.parent().and_then(ast::StmtList::cast).and_then(|it| it.tail_expr())\n                 {\n@@ -816,6 +819,32 @@ fn foo() {\n         )\n     }\n \n+    #[test]\n+    fn extract_macro_call() {\n+        check_assist(\n+            extract_variable,\n+            r\"\n+struct Vec;\n+macro_rules! vec {\n+    () => {Vec}\n+}\n+fn main() {\n+    let _ = $0vec![]$0;\n+}\n+\",\n+            r\"\n+struct Vec;\n+macro_rules! vec {\n+    () => {Vec}\n+}\n+fn main() {\n+    let $0vec = vec![];\n+    let _ = vec;\n+}\n+\",\n+        );\n+    }\n+\n     #[test]\n     fn test_extract_var_for_return_not_applicable() {\n         check_assist_not_applicable(extract_variable, \"fn foo() { $0return$0; } \");"}]}