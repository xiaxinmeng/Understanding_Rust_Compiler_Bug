{"sha": "0b252a96b1a69b7724cf3676e6a89c7134f5fe86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMjUyYTk2YjFhNjliNzcyNGNmMzY3NmU2YTg5YzcxMzRmNWZlODY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-01T04:01:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-01T04:01:28Z"}, "message": "De-duplicate code in get_resolved_ty, make recursive, add a case for tup.", "tree": {"sha": "d817aa06fe53f2407889c9ff763ad83e3beff23f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d817aa06fe53f2407889c9ff763ad83e3beff23f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b252a96b1a69b7724cf3676e6a89c7134f5fe86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b252a96b1a69b7724cf3676e6a89c7134f5fe86", "html_url": "https://github.com/rust-lang/rust/commit/0b252a96b1a69b7724cf3676e6a89c7134f5fe86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b252a96b1a69b7724cf3676e6a89c7134f5fe86/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2e7c1a5dc9824a0c849619b4f8691bf726b0bfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e7c1a5dc9824a0c849619b4f8691bf726b0bfa", "html_url": "https://github.com/rust-lang/rust/commit/d2e7c1a5dc9824a0c849619b4f8691bf726b0bfa"}], "stats": {"total": 37, "additions": 9, "deletions": 28}, "files": [{"sha": "5e7d22eca78ded2b2719a71a47f48e7daa6b0358", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 9, "deletions": 28, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0b252a96b1a69b7724cf3676e6a89c7134f5fe86/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/0b252a96b1a69b7724cf3676e6a89c7134f5fe86/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=0b252a96b1a69b7724cf3676e6a89c7134f5fe86", "patch": "@@ -1528,42 +1528,23 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n               | _ -> bug () \"check_auto_tyvar: no slot defn\"\n         in\n \n-        let get_resolved_ty tv id =\n+        let rec get_resolved_ty tv id =\n           let ts = !(resolve_tyvar tv) in\n             match ts with\n                 TYSPEC_resolved ([||], ty) -> ty\n               | TYSPEC_exterior tv ->\n-                  begin\n-                    match !(resolve_tyvar tv) with\n-                        TYSPEC_resolved ([||], ty) ->\n-                          (Ast.TY_exterior ty)\n-                      | _ ->\n-                          err (Some id)\n-                            \"unresolved exterior type in %s (%d)\"\n-                            (tyspec_to_str ts) (int_of_node id)\n-                  end\n+                  Ast.TY_exterior (get_resolved_ty tv id)\n \n               | TYSPEC_mutable tv ->\n-                  begin\n-                    match !(resolve_tyvar tv) with\n-                        TYSPEC_resolved ([||], ty) ->\n-                          (Ast.TY_mutable ty)\n-                      | _ ->\n-                          err (Some id)\n-                            \"unresolved mutable type in %s (%d)\"\n-                            (tyspec_to_str ts) (int_of_node id)\n-                  end\n+                  Ast.TY_mutable (get_resolved_ty tv id)\n \n               | TYSPEC_vector tv ->\n-                  begin\n-                    match !(resolve_tyvar tv) with\n-                        TYSPEC_resolved ([||], ty) ->\n-                          (Ast.TY_vec ty)\n-                      | _ ->\n-                          err (Some id)\n-                            \"unresolved vector-element type in %s (%d)\"\n-                            (tyspec_to_str ts) (int_of_node id)\n-                  end\n+                  Ast.TY_vec (get_resolved_ty tv id)\n+\n+              | TYSPEC_tuple tvs ->\n+                  Ast.TY_tup\n+                    (Array.map\n+                       (fun tv -> get_resolved_ty tv id) tvs)\n \n               | _ -> err (Some id)\n                   \"unresolved type %s (%d)\""}]}