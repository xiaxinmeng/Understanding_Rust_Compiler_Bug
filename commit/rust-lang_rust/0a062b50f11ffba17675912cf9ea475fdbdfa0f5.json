{"sha": "0a062b50f11ffba17675912cf9ea475fdbdfa0f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMDYyYjUwZjExZmZiYTE3Njc1OTEyY2Y5ZWE0NzVmZGJkZmEwZjU=", "commit": {"author": {"name": "Matthew McPherrin", "email": "matthew@mcpherrin.ca", "date": "2013-02-09T01:17:50Z"}, "committer": {"name": "Matthew McPherrin", "email": "matthew@mcpherrin.ca", "date": "2013-02-09T01:17:50Z"}, "message": "Remove trailing whitespace", "tree": {"sha": "be8a9c32de8bcf1610fc73ee3a81bf8c661dd930", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be8a9c32de8bcf1610fc73ee3a81bf8c661dd930"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a062b50f11ffba17675912cf9ea475fdbdfa0f5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a062b50f11ffba17675912cf9ea475fdbdfa0f5", "html_url": "https://github.com/rust-lang/rust/commit/0a062b50f11ffba17675912cf9ea475fdbdfa0f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a062b50f11ffba17675912cf9ea475fdbdfa0f5/comments", "author": {"login": "mcpherrinm", "id": 47425, "node_id": "MDQ6VXNlcjQ3NDI1", "avatar_url": "https://avatars.githubusercontent.com/u/47425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcpherrinm", "html_url": "https://github.com/mcpherrinm", "followers_url": "https://api.github.com/users/mcpherrinm/followers", "following_url": "https://api.github.com/users/mcpherrinm/following{/other_user}", "gists_url": "https://api.github.com/users/mcpherrinm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcpherrinm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcpherrinm/subscriptions", "organizations_url": "https://api.github.com/users/mcpherrinm/orgs", "repos_url": "https://api.github.com/users/mcpherrinm/repos", "events_url": "https://api.github.com/users/mcpherrinm/events{/privacy}", "received_events_url": "https://api.github.com/users/mcpherrinm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcpherrinm", "id": 47425, "node_id": "MDQ6VXNlcjQ3NDI1", "avatar_url": "https://avatars.githubusercontent.com/u/47425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcpherrinm", "html_url": "https://github.com/mcpherrinm", "followers_url": "https://api.github.com/users/mcpherrinm/followers", "following_url": "https://api.github.com/users/mcpherrinm/following{/other_user}", "gists_url": "https://api.github.com/users/mcpherrinm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcpherrinm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcpherrinm/subscriptions", "organizations_url": "https://api.github.com/users/mcpherrinm/orgs", "repos_url": "https://api.github.com/users/mcpherrinm/repos", "events_url": "https://api.github.com/users/mcpherrinm/events{/privacy}", "received_events_url": "https://api.github.com/users/mcpherrinm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46df7985a5f3e1e1a50d0f5f81f32bb1e4be8967", "url": "https://api.github.com/repos/rust-lang/rust/commits/46df7985a5f3e1e1a50d0f5f81f32bb1e4be8967", "html_url": "https://github.com/rust-lang/rust/commit/46df7985a5f3e1e1a50d0f5f81f32bb1e4be8967"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a778649f6f4b0372857deebf2d75dc544eb548d4", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0a062b50f11ffba17675912cf9ea475fdbdfa0f5/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a062b50f11ffba17675912cf9ea475fdbdfa0f5/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=0a062b50f11ffba17675912cf9ea475fdbdfa0f5", "patch": "@@ -31,26 +31,26 @@\n  * file name following -o, and accepts both -h and --help as optional flags.\n  * extern mod std;\n  * use std::getopts::*;\n- * \n+ *\n  *    fn do_work(in: &str, out: Option<~str>) {\n  *      io::println(in);\n  *      io::println(match out {\n  *        Some(move x) => x,\n  *        None => ~\"No Output\"\n  *      });\n  *    }\n- *    \n+ *\n  *    fn print_usage(program: &str, _opts: &[std::getopts::Opt]) {\n  *      io::println(fmt!(\"Usage: %s [options]\", program));\n  *      io::println(\"-o\\t\\tOutput\");\n  *      io::println(\"-h --help\\tUsage\");\n  *    }\n- *   \n+ *\n  *    fn main() {\n  *        let args = os::args();\n- *   \n+ *\n  *        let program = copy args[0];\n- *    \n+ *\n  *        let opts = ~[\n  *            optopt(\"o\"),\n  *            optflag(\"h\"),"}]}