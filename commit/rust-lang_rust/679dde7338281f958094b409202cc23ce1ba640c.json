{"sha": "679dde7338281f958094b409202cc23ce1ba640c", "node_id": "C_kwDOAAsO6NoAKDY3OWRkZTczMzgyODFmOTU4MDk0YjQwOTIwMmNjMjNjZTFiYTY0MGM", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-02-01T05:55:48Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-02-01T06:44:30Z"}, "message": "fix parser mistaking const closures for const item", "tree": {"sha": "83fedae0b6192018aaf086ff83bfe18c9e1479c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83fedae0b6192018aaf086ff83bfe18c9e1479c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/679dde7338281f958094b409202cc23ce1ba640c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/679dde7338281f958094b409202cc23ce1ba640c", "html_url": "https://github.com/rust-lang/rust/commit/679dde7338281f958094b409202cc23ce1ba640c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/679dde7338281f958094b409202cc23ce1ba640c/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad8e1dc2863f63c35ef3ceef3064d0851a1d2582", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8e1dc2863f63c35ef3ceef3064d0851a1d2582", "html_url": "https://github.com/rust-lang/rust/commit/ad8e1dc2863f63c35ef3ceef3064d0851a1d2582"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "701a2a3efcf2a9133570d726222794615e5c574e", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/679dde7338281f958094b409202cc23ce1ba640c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/679dde7338281f958094b409202cc23ce1ba640c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=679dde7338281f958094b409202cc23ce1ba640c", "patch": "@@ -2108,7 +2108,7 @@ impl<'a> Parser<'a> {\n             ClosureBinder::NotPresent\n         };\n \n-        let constness = self.parse_constness(Case::Sensitive);\n+        let constness = self.parse_closure_constness(Case::Sensitive);\n \n         let movability =\n             if self.eat_keyword(kw::Static) { Movability::Static } else { Movability::Movable };"}, {"sha": "bb06ad20118d496da9d6c3393a5a19c8a47bd47f", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/679dde7338281f958094b409202cc23ce1ba640c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/679dde7338281f958094b409202cc23ce1ba640c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=679dde7338281f958094b409202cc23ce1ba640c", "patch": "@@ -739,9 +739,10 @@ impl<'a> Parser<'a> {\n     fn check_const_closure(&self) -> bool {\n         self.is_keyword_ahead(0, &[kw::Const])\n             && self.look_ahead(1, |t| match &t.kind {\n-                token::Ident(kw::Move | kw::Static | kw::Async, _)\n-                | token::OrOr\n-                | token::BinOp(token::Or) => true,\n+                // async closures do not work with const closures, so we do not parse that here.\n+                token::Ident(kw::Move | kw::Static, _) | token::OrOr | token::BinOp(token::Or) => {\n+                    true\n+                }\n                 _ => false,\n             })\n     }\n@@ -1203,8 +1204,18 @@ impl<'a> Parser<'a> {\n \n     /// Parses constness: `const` or nothing.\n     fn parse_constness(&mut self, case: Case) -> Const {\n-        // Avoid const blocks to be parsed as const items\n-        if self.look_ahead(1, |t| t != &token::OpenDelim(Delimiter::Brace))\n+        self.parse_constness_(case, false)\n+    }\n+\n+    /// Parses constness for closures\n+    fn parse_closure_constness(&mut self, case: Case) -> Const {\n+        self.parse_constness_(case, true)\n+    }\n+\n+    fn parse_constness_(&mut self, case: Case, is_closure: bool) -> Const {\n+        // Avoid const blocks and const closures to be parsed as const items\n+        if (self.check_const_closure() == is_closure)\n+            && self.look_ahead(1, |t| t != &token::OpenDelim(Delimiter::Brace))\n             && self.eat_keyword_case(kw::Const, case)\n         {\n             Const::Yes(self.prev_token.uninterpolated_span())"}, {"sha": "10af39b70074882ef906f592ac57975f4df7beba", "filename": "tests/ui/parser/recover-quantified-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/679dde7338281f958094b409202cc23ce1ba640c/tests%2Fui%2Fparser%2Frecover-quantified-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/679dde7338281f958094b409202cc23ce1ba640c/tests%2Fui%2Fparser%2Frecover-quantified-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Frecover-quantified-closure.rs?ref=679dde7338281f958094b409202cc23ce1ba640c", "patch": "@@ -7,6 +7,6 @@ fn main() {\n enum Foo { Bar }\n fn foo(x: impl Iterator<Item = Foo>) {\n     for <Foo>::Bar in x {}\n-    //~^ ERROR expected one of `const`, `move`, `static`, `|`\n+    //~^ ERROR expected one of `move`, `static`, `|`\n     //~^^ ERROR `for<...>` binders for closures are experimental\n }"}, {"sha": "39eec80f658ad9344ab64a8091c32381806b2b81", "filename": "tests/ui/parser/recover-quantified-closure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/679dde7338281f958094b409202cc23ce1ba640c/tests%2Fui%2Fparser%2Frecover-quantified-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/679dde7338281f958094b409202cc23ce1ba640c/tests%2Fui%2Fparser%2Frecover-quantified-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Frecover-quantified-closure.stderr?ref=679dde7338281f958094b409202cc23ce1ba640c", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `const`, `move`, `static`, `|`, or `||`, found `::`\n+error: expected one of `move`, `static`, `|`, or `||`, found `::`\n   --> $DIR/recover-quantified-closure.rs:9:14\n    |\n LL |     for <Foo>::Bar in x {}\n-   |              ^^ expected one of `const`, `move`, `static`, `|`, or `||`\n+   |              ^^ expected one of `move`, `static`, `|`, or `||`\n \n error[E0658]: `for<...>` binders for closures are experimental\n   --> $DIR/recover-quantified-closure.rs:2:5"}, {"sha": "2c99d8bf1c6776899f51bec5ee735810fbafceb6", "filename": "tests/ui/rfc-2632-const-trait-impl/const-closure-parse-not-item.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/679dde7338281f958094b409202cc23ce1ba640c/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-closure-parse-not-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/679dde7338281f958094b409202cc23ce1ba640c/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-closure-parse-not-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-closure-parse-not-item.rs?ref=679dde7338281f958094b409202cc23ce1ba640c", "patch": "@@ -0,0 +1,10 @@\n+// check-pass\n+\n+#![feature(const_trait_impl, const_closures)]\n+#![allow(incomplete_features)]\n+\n+const fn test() -> impl ~const Fn() {\n+    const move || {}\n+}\n+\n+fn main() {}"}]}