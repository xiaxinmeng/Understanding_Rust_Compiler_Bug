{"sha": "a4199b45c246b757b4ac000d0a5a83d7cede9b5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MTk5YjQ1YzI0NmI3NTdiNGFjMDAwZDBhNWE4M2Q3Y2VkZTliNWY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-23T21:53:25Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-26T08:37:16Z"}, "message": "rustc-book: Document `-C relocation-model`", "tree": {"sha": "83a52d34f47b3605a344a6452123c744f217313d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83a52d34f47b3605a344a6452123c744f217313d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4199b45c246b757b4ac000d0a5a83d7cede9b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4199b45c246b757b4ac000d0a5a83d7cede9b5f", "html_url": "https://github.com/rust-lang/rust/commit/a4199b45c246b757b4ac000d0a5a83d7cede9b5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4199b45c246b757b4ac000d0a5a83d7cede9b5f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76d85de22359d7a924b84dde6830650e92e44b89", "url": "https://api.github.com/repos/rust-lang/rust/commits/76d85de22359d7a924b84dde6830650e92e44b89", "html_url": "https://github.com/rust-lang/rust/commit/76d85de22359d7a924b84dde6830650e92e44b89"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "dc5d797ebbcd191dbf5bf10652729c9a18bf7552", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a4199b45c246b757b4ac000d0a5a83d7cede9b5f/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/a4199b45c246b757b4ac000d0a5a83d7cede9b5f/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=a4199b45c246b757b4ac000d0a5a83d7cede9b5f", "patch": "@@ -319,11 +319,46 @@ to a valid `.profdata` file. See the chapter on\n \n ## relocation-model\n \n-This option lets you choose which\n-[relocation](https://en.wikipedia.org/wiki/Relocation_\\(computing\\)) model to\n-use.\n+This option controls generation of\n+[position-independent code (PIC)](https://en.wikipedia.org/wiki/Position-independent_code).\n \n-To find the valid options for this flag, run `rustc --print relocation-models`.\n+Supported values for this option are:\n+\n+#### Primary relocation models\n+\n+- `static` - non-relocatable code, machine instructions may use absolute addressing modes.\n+\n+- `pic` - fully relocatable position independent code,\n+machine instructions need to use relative addressing modes.  \n+Equivalent to the \"uppercase\" `-fPIC` or `-fPIE` options in other compilers,\n+depending on the produced crate types.  \n+This is the default model for majority of supported targets.\n+\n+#### Special relocation models\n+\n+- `dynamic-no-pic` - relocatable external references, non-relocatable code.  \n+Only makes sense on Darwin and is rarely used.  \n+If StackOverflow tells you to use this as an opt-out of PIC or PIE, don't believe it,\n+use `-C relocation-model=static` instead.\n+- `ropi`, `rwpi` and `ropi-rwpi` - relocatable code and read-only data, relocatable read-write data,\n+and combination of both, respectively.  \n+Only makes sense for certain embedded ARM targets.\n+- `default` - relocation model default to the current target.  \n+Only makes sense as an override for some other explicitly specified relocation model\n+previously set on the command line.\n+\n+Supported values can also be discovered by running `rustc --print relocation-models`.\n+\n+#### Linking effects\n+\n+In addition to codegen effects, `relocation-model` has effects during linking.\n+\n+If the relocation model is `pic` and the current target supports position-independent executables\n+(PIE), the linker will be instructed (`-pie`) to produce one.  \n+If the target doesn't support both position-independent and statically linked executables,\n+then `-C target-feature=+crt-static` \"wins\" over `-C relocation-model=pic`,\n+and the linker is instructed (`-static`) to produce a statically linked\n+but not position-independent executable.\n \n ## remark\n "}, {"sha": "2279c16748c12fc4b87cb5fb6e9af17ce85c9422", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a4199b45c246b757b4ac000d0a5a83d7cede9b5f/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4199b45c246b757b4ac000d0a5a83d7cede9b5f/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=a4199b45c246b757b4ac000d0a5a83d7cede9b5f", "patch": "@@ -706,7 +706,8 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n     profile_use: Option<PathBuf> = (None, parse_opt_pathbuf, [TRACKED],\n         \"use the given `.profdata` file for profile-guided optimization\"),\n     relocation_model: Option<RelocModel> = (None, parse_relocation_model, [TRACKED],\n-        \"choose the relocation model to use (`rustc --print relocation-models` for details)\"),\n+        \"control generation of position-independent code (PIC) \\\n+        (`rustc --print relocation-models` for details)\"),\n     remark: Passes = (Passes::Some(Vec::new()), parse_passes, [UNTRACKED],\n         \"print remarks for these optimization passes (space separated, or \\\"all\\\")\"),\n     rpath: bool = (false, parse_bool, [UNTRACKED],"}]}