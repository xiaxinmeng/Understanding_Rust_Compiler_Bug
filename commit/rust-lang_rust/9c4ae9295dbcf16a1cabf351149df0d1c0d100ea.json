{"sha": "9c4ae9295dbcf16a1cabf351149df0d1c0d100ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNGFlOTI5NWRiY2YxNmExY2FiZjM1MTE0OWRmMGQxYzBkMTAwZWE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-04-11T21:23:49Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-04-11T21:24:14Z"}, "message": "Markdownify more doc", "tree": {"sha": "6f401dcc97a2a66834533894c8091f6a3cb0c0bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f401dcc97a2a66834533894c8091f6a3cb0c0bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c4ae9295dbcf16a1cabf351149df0d1c0d100ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c4ae9295dbcf16a1cabf351149df0d1c0d100ea", "html_url": "https://github.com/rust-lang/rust/commit/9c4ae9295dbcf16a1cabf351149df0d1c0d100ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c4ae9295dbcf16a1cabf351149df0d1c0d100ea/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b589b087fc33e60247d3663f3d6eecc9e23bbab3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b589b087fc33e60247d3663f3d6eecc9e23bbab3", "html_url": "https://github.com/rust-lang/rust/commit/b589b087fc33e60247d3663f3d6eecc9e23bbab3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "45f87fba9ddaef68c562f35efdfa9e40e3974547", "filename": "src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c4ae9295dbcf16a1cabf351149df0d1c0d100ea/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c4ae9295dbcf16a1cabf351149df0d1c0d100ea/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=9c4ae9295dbcf16a1cabf351149df0d1c0d100ea", "patch": "@@ -805,7 +805,7 @@ fn get_error_type<'a>(cx: &LateContext, ty: ty::Ty<'a>) -> Option<ty::Ty<'a>> {\n     None\n }\n \n-/// This checks whether a given type is known to implement Debug.\n+/// This checks whether a given type is known to implement `Debug`.\n fn has_debug_impl<'a, 'b>(ty: ty::Ty<'a>, cx: &LateContext<'b, 'a>) -> bool {\n     match cx.tcx.lang_items.debug_trait() {\n         Some(debug) => implements_trait(cx, ty, debug, Vec::new()),"}]}