{"sha": "0a6ce30161fddfd5148507576b761b5e4a63ba99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNmNlMzAxNjFmZGRmZDUxNDg1MDc1NzZiNzYxYjVlNGE2M2JhOTk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-06-24T12:19:22Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-06-24T12:19:22Z"}, "message": "Use `Option::expect` instead of `unwrap_or_else` with `panic!`.", "tree": {"sha": "34e8b5a53aa4d8a463c7605fdccfade3e2d37755", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34e8b5a53aa4d8a463c7605fdccfade3e2d37755"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a6ce30161fddfd5148507576b761b5e4a63ba99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6ce30161fddfd5148507576b761b5e4a63ba99", "html_url": "https://github.com/rust-lang/rust/commit/0a6ce30161fddfd5148507576b761b5e4a63ba99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a6ce30161fddfd5148507576b761b5e4a63ba99/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c63d12dc3abc9ef16ca5ec3cf03f0dfbf09c3a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c63d12dc3abc9ef16ca5ec3cf03f0dfbf09c3a5", "html_url": "https://github.com/rust-lang/rust/commit/8c63d12dc3abc9ef16ca5ec3cf03f0dfbf09c3a5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d83d45518e4044e41d66d53886f986e6808ed905", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a6ce30161fddfd5148507576b761b5e4a63ba99/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6ce30161fddfd5148507576b761b5e4a63ba99/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=0a6ce30161fddfd5148507576b761b5e4a63ba99", "patch": "@@ -482,9 +482,9 @@ pub struct Thread {\n impl Thread {\n     // Used only internally to construct a thread object without spawning\n     fn new(name: Option<String>) -> Thread {\n-        let cname = name.map(|n| CString::new(n).unwrap_or_else(|_| {\n-            panic!(\"thread name may not contain interior null bytes\")\n-        }));\n+        let cname = name.map(|n| {\n+            CString::new(n).expect(\"thread name may not contain interior null bytes\")\n+        });\n         Thread {\n             inner: Arc::new(Inner {\n                 name: cname,"}]}