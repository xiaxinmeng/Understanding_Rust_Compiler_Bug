{"sha": "8355024ed0cda6b041bc0adb2ca17193946b6c8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNTUwMjRlZDBjZGE2YjA0MWJjMGFkYjJjYTE3MTkzOTQ2YjZjOGU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-11T06:26:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-11T06:26:45Z"}, "message": "Rollup merge of #74125 - ayazhafiz:i/74050, r=matthewjasper\n\nCorrectly mark the ending span of a match arm\n\nCloses #74050\n\nr? @matthewjasper", "tree": {"sha": "5f066841a85874260f7958b5de78772a58e1203d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f066841a85874260f7958b5de78772a58e1203d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8355024ed0cda6b041bc0adb2ca17193946b6c8e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfCVulCRBK7hj4Ov3rIwAAdHIIAEczci2wxtnWk+VhhudefiEy\nfCtp9jvAgJoJ7U4V2Sxxqayd1cquRzEQGJ0n4JB9Riq8srrbjpBAoLXNoyr/CxNN\nGoxIk9y3ov7Xyk1gSfKqjPfH4num/iUFd9/bpJG7MfFIgw0yMMC3bGeOYSvg0JoK\n96KI8Pk94ni6bhyEHOmYfn9cN34/ECJZ8gcAWt4R3IEG9IpWJrD1ubYtaw4hYFvo\nFmdsrXWmZSeH3ZtYhx8bprLTnuC9pS7BJTwyw3p3r0SfSZoD9imYkwtriRE+Fe+8\nXh7Dp1622FvhJV0HFYbrVG3aEZYUFTj6aLwd8uUvBcKNU28LMLwlRIfhFhpKFCw=\n=6eLj\n-----END PGP SIGNATURE-----\n", "payload": "tree 5f066841a85874260f7958b5de78772a58e1203d\nparent eb1754efec623c7d712104421a58ef61f6e54fe4\nparent 3c63fba03daedf014b75e12f32f4daec3598f9a3\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594448805 -0700\ncommitter GitHub <noreply@github.com> 1594448805 -0700\n\nRollup merge of #74125 - ayazhafiz:i/74050, r=matthewjasper\n\nCorrectly mark the ending span of a match arm\n\nCloses #74050\n\nr? @matthewjasper\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8355024ed0cda6b041bc0adb2ca17193946b6c8e", "html_url": "https://github.com/rust-lang/rust/commit/8355024ed0cda6b041bc0adb2ca17193946b6c8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8355024ed0cda6b041bc0adb2ca17193946b6c8e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb1754efec623c7d712104421a58ef61f6e54fe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb1754efec623c7d712104421a58ef61f6e54fe4", "html_url": "https://github.com/rust-lang/rust/commit/eb1754efec623c7d712104421a58ef61f6e54fe4"}, {"sha": "3c63fba03daedf014b75e12f32f4daec3598f9a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c63fba03daedf014b75e12f32f4daec3598f9a3", "html_url": "https://github.com/rust-lang/rust/commit/3c63fba03daedf014b75e12f32f4daec3598f9a3"}], "stats": {"total": 202, "additions": 115, "deletions": 87}, "files": [{"sha": "3926122606e6d851e80e30ae96241e935985b288", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -1833,7 +1833,7 @@ impl<'a> Parser<'a> {\n         let require_comma = classify::expr_requires_semi_to_be_stmt(&expr)\n             && self.token != token::CloseDelim(token::Brace);\n \n-        let hi = self.token.span;\n+        let hi = self.prev_token.span;\n \n         if require_comma {\n             let sm = self.sess.source_map();"}, {"sha": "00942cd12b42c6f600f073be48be9cadefb3318a", "filename": "src/test/mir-opt/exponential-or/rustc.match_tuple.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fexponential-or%2Frustc.match_tuple.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fexponential-or%2Frustc.match_tuple.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fexponential-or%2Frustc.match_tuple.SimplifyCfg-initial.after.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -102,8 +102,8 @@ fn match_tuple(_1: (u32, bool, std::option::Option<i32>, u32)) -> u32 {\n         _0 = BitXor(move _9, move _10);  // scope 1 at $DIR/exponential-or.rs:8:83: 8:88\n         StorageDead(_10);                // scope 1 at $DIR/exponential-or.rs:8:87: 8:88\n         StorageDead(_9);                 // scope 1 at $DIR/exponential-or.rs:8:87: 8:88\n-        StorageDead(_8);                 // scope 0 at $DIR/exponential-or.rs:8:88: 8:89\n-        StorageDead(_7);                 // scope 0 at $DIR/exponential-or.rs:8:88: 8:89\n+        StorageDead(_8);                 // scope 0 at $DIR/exponential-or.rs:8:87: 8:88\n+        StorageDead(_7);                 // scope 0 at $DIR/exponential-or.rs:8:87: 8:88\n         goto -> bb10;                    // scope 0 at $DIR/exponential-or.rs:7:5: 10:6\n     }\n "}, {"sha": "1020fc965fe86073589b8d725a0e486a73b8ade6", "filename": "src/test/mir-opt/issue-73223/32bit/rustc.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fissue-73223%2F32bit%2Frustc.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fissue-73223%2F32bit%2Frustc.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-73223%2F32bit%2Frustc.main.SimplifyArmIdentity.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -137,7 +137,7 @@\n           StorageLive(_4);                 // scope 0 at $DIR/issue-73223.rs:3:14: 3:15\n           _4 = ((_2 as Some).0: i32);      // scope 0 at $DIR/issue-73223.rs:3:14: 3:15\n           _1 = _4;                         // scope 2 at $DIR/issue-73223.rs:3:20: 3:21\n-          StorageDead(_4);                 // scope 0 at $DIR/issue-73223.rs:3:21: 3:22\n+          StorageDead(_4);                 // scope 0 at $DIR/issue-73223.rs:3:20: 3:21\n           StorageDead(_2);                 // scope 0 at $DIR/issue-73223.rs:5:6: 5:7\n           StorageLive(_6);                 // scope 1 at $DIR/issue-73223.rs:7:9: 7:14\n           StorageLive(_7);                 // scope 1 at $DIR/issue-73223.rs:7:22: 7:27"}, {"sha": "aa606ed22b6d07202bbc9dfd3ee87b2710b666dd", "filename": "src/test/mir-opt/issue-73223/64bit/rustc.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fissue-73223%2F64bit%2Frustc.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fissue-73223%2F64bit%2Frustc.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-73223%2F64bit%2Frustc.main.SimplifyArmIdentity.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -137,7 +137,7 @@\n           StorageLive(_4);                 // scope 0 at $DIR/issue-73223.rs:3:14: 3:15\n           _4 = ((_2 as Some).0: i32);      // scope 0 at $DIR/issue-73223.rs:3:14: 3:15\n           _1 = _4;                         // scope 2 at $DIR/issue-73223.rs:3:20: 3:21\n-          StorageDead(_4);                 // scope 0 at $DIR/issue-73223.rs:3:21: 3:22\n+          StorageDead(_4);                 // scope 0 at $DIR/issue-73223.rs:3:20: 3:21\n           StorageDead(_2);                 // scope 0 at $DIR/issue-73223.rs:5:6: 5:7\n           StorageLive(_6);                 // scope 1 at $DIR/issue-73223.rs:7:9: 7:14\n           StorageLive(_7);                 // scope 1 at $DIR/issue-73223.rs:7:22: 7:27"}, {"sha": "df6a247bb5ff6dd14c69ba3363449e9981a069ac", "filename": "src/test/mir-opt/match-arm-scopes/rustc.complicated_match.ElaborateDrops.after.mir", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.ElaborateDrops.after.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -61,7 +61,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // mir::Constant\n                                          // + span: $DIR/match-arm-scopes.rs:16:77: 16:78\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n-        drop(_7) -> [return: bb19, unwind: bb10]; // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        drop(_7) -> [return: bb19, unwind: bb10]; // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n     }\n \n     bb6: {\n@@ -90,9 +90,9 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n         StorageDead(_10);                // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n-        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb11;                    // scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n@@ -109,7 +109,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb12: {\n-        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         StorageLive(_5);                 // scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n         _5 = (_2.1: bool);               // scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n         StorageLive(_7);                 // scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n@@ -118,9 +118,9 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb13: {\n-        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb2;                     // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n@@ -150,14 +150,14 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n         StorageDead(_13);                // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n-        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb11;                    // scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n     bb17: {\n-        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         StorageLive(_5);                 // scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n         _5 = (_2.0: bool);               // scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n         StorageLive(_7);                 // scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n@@ -166,17 +166,17 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb18: {\n-        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb3;                     // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb19: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_5);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_7);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_5);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb23;                    // scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n@@ -188,7 +188,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // mir::Constant\n                                          // + span: $DIR/match-arm-scopes.rs:17:41: 17:42\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }\n-        drop(_16) -> [return: bb22, unwind: bb10]; // scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        drop(_16) -> [return: bb22, unwind: bb10]; // scope 0 at $DIR/match-arm-scopes.rs:17:41: 17:42\n     }\n \n     bb21: {\n@@ -200,8 +200,8 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb22: {\n-        StorageDead(_16);                // scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n-        StorageDead(_15);                // scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        StorageDead(_16);                // scope 0 at $DIR/match-arm-scopes.rs:17:41: 17:42\n+        StorageDead(_15);                // scope 0 at $DIR/match-arm-scopes.rs:17:41: 17:42\n         goto -> bb23;                    // scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n "}, {"sha": "dadbc3668cb29bf9200a64bab83ff3d0c55c9e64", "filename": "src/test/mir-opt/match-arm-scopes/rustc.complicated_match.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -74,7 +74,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // mir::Constant\n                                          // + span: $DIR/match-arm-scopes.rs:16:77: 16:78\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n-        drop(_7) -> [return: bb24, unwind: bb14]; // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        drop(_7) -> [return: bb24, unwind: bb14]; // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n     }\n \n     bb9: {\n@@ -110,9 +110,9 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n         StorageDead(_10);                // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n-        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb15;                    // scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n@@ -129,7 +129,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb16: {\n-        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         FakeRead(ForMatchGuard, _3);     // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n@@ -142,9 +142,9 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb17: {\n-        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         falseEdge -> [real: bb3, imaginary: bb4]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n@@ -181,14 +181,14 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n         StorageDead(_13);                // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n-        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb15;                    // scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n     bb22: {\n-        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         FakeRead(ForMatchGuard, _3);     // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n@@ -201,17 +201,17 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb23: {\n-        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         falseEdge -> [real: bb5, imaginary: bb6]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb24: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_5);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_7);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_5);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n+        StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:77: 16:78\n         goto -> bb28;                    // scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n@@ -223,7 +223,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n                                          // mir::Constant\n                                          // + span: $DIR/match-arm-scopes.rs:17:41: 17:42\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }\n-        drop(_16) -> [return: bb27, unwind: bb14]; // scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        drop(_16) -> [return: bb27, unwind: bb14]; // scope 0 at $DIR/match-arm-scopes.rs:17:41: 17:42\n     }\n \n     bb26: {\n@@ -235,8 +235,8 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb27: {\n-        StorageDead(_16);                // scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n-        StorageDead(_15);                // scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        StorageDead(_16);                // scope 0 at $DIR/match-arm-scopes.rs:17:41: 17:42\n+        StorageDead(_15);                // scope 0 at $DIR/match-arm-scopes.rs:17:41: 17:42\n         goto -> bb28;                    // scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n "}, {"sha": "5ff4150d2ac1a1e17c4d3d28be50c541cb410a60", "filename": "src/test/mir-opt/match_false_edges/rustc.full_tested_match.PromoteTemps.after.mir", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -97,7 +97,7 @@ fn full_tested_match() -> () {\n     }\n \n     bb8: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:37: 16:38\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match_false_edges.rs:16:26: 16:27\n         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match_false_edges.rs:16:26: 16:27\n         StorageLive(_5);                 // scope 0 at $DIR/match_false_edges.rs:16:14: 16:15\n@@ -112,14 +112,14 @@ fn full_tested_match() -> () {\n                                          // + span: $DIR/match_false_edges.rs:16:32: 16:33\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n         StorageDead(_8);                 // scope 2 at $DIR/match_false_edges.rs:16:36: 16:37\n-        StorageDead(_5);                 // scope 0 at $DIR/match_false_edges.rs:16:37: 16:38\n-        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:16:37: 16:38\n+        StorageDead(_5);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n+        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n         goto -> bb11;                    // scope 0 at $DIR/match_false_edges.rs:15:13: 19:6\n     }\n \n     bb9: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:37: 16:38\n-        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:16:37: 16:38\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n+        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n         goto -> bb4;                     // scope 0 at $DIR/match_false_edges.rs:16:20: 16:27\n     }\n \n@@ -136,7 +136,7 @@ fn full_tested_match() -> () {\n                                          // + span: $DIR/match_false_edges.rs:17:21: 17:22\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }\n         StorageDead(_10);                // scope 3 at $DIR/match_false_edges.rs:17:25: 17:26\n-        StorageDead(_9);                 // scope 0 at $DIR/match_false_edges.rs:17:26: 17:27\n+        StorageDead(_9);                 // scope 0 at $DIR/match_false_edges.rs:17:25: 17:26\n         goto -> bb11;                    // scope 0 at $DIR/match_false_edges.rs:15:13: 19:6\n     }\n "}, {"sha": "b79416fe31a41de61927d981e07af403c88a5ebb", "filename": "src/test/mir-opt/match_false_edges/rustc.full_tested_match2.PromoteTemps.before.mir", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -62,7 +62,7 @@ fn full_tested_match2() -> () {\n                                          // + span: $DIR/match_false_edges.rs:29:21: 29:22\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }\n         StorageDead(_10);                // scope 3 at $DIR/match_false_edges.rs:29:25: 29:26\n-        StorageDead(_9);                 // scope 0 at $DIR/match_false_edges.rs:29:26: 29:27\n+        StorageDead(_9);                 // scope 0 at $DIR/match_false_edges.rs:29:25: 29:26\n         goto -> bb11;                    // scope 0 at $DIR/match_false_edges.rs:26:13: 30:6\n     }\n \n@@ -89,7 +89,7 @@ fn full_tested_match2() -> () {\n     }\n \n     bb8: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:37: 27:38\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match_false_edges.rs:27:26: 27:27\n         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match_false_edges.rs:27:26: 27:27\n         StorageLive(_5);                 // scope 0 at $DIR/match_false_edges.rs:27:14: 27:15\n@@ -104,14 +104,14 @@ fn full_tested_match2() -> () {\n                                          // + span: $DIR/match_false_edges.rs:27:32: 27:33\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n         StorageDead(_8);                 // scope 2 at $DIR/match_false_edges.rs:27:36: 27:37\n-        StorageDead(_5);                 // scope 0 at $DIR/match_false_edges.rs:27:37: 27:38\n-        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:27:37: 27:38\n+        StorageDead(_5);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n+        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n         goto -> bb11;                    // scope 0 at $DIR/match_false_edges.rs:26:13: 30:6\n     }\n \n     bb9: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:37: 27:38\n-        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:27:37: 27:38\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n+        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n         falseEdge -> [real: bb4, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:27:20: 27:27\n     }\n "}, {"sha": "5b449da93d49394466fdea462babbb31b7707b92", "filename": "src/test/mir-opt/match_false_edges/rustc.main.PromoteTemps.before.mir", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -70,7 +70,7 @@ fn main() -> () {\n                                          // mir::Constant\n                                          // + span: $DIR/match_false_edges.rs:39:15: 39:16\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000004)) }\n-        StorageDead(_14);                // scope 0 at $DIR/match_false_edges.rs:39:16: 39:17\n+        StorageDead(_14);                // scope 0 at $DIR/match_false_edges.rs:39:15: 39:16\n         goto -> bb15;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6\n     }\n \n@@ -97,7 +97,7 @@ fn main() -> () {\n     }\n \n     bb8: {\n-        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:33: 36:34\n+        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n         FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28\n         FakeRead(ForGuardBinding, _7);   // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28\n         StorageLive(_6);                 // scope 0 at $DIR/match_false_edges.rs:36:14: 36:16\n@@ -109,14 +109,14 @@ fn main() -> () {\n                                          // mir::Constant\n                                          // + span: $DIR/match_false_edges.rs:36:32: 36:33\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n-        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:36:33: 36:34\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:33: 36:34\n+        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n         goto -> bb15;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6\n     }\n \n     bb9: {\n-        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:33: 36:34\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:33: 36:34\n+        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n         falseEdge -> [real: bb2, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28\n     }\n \n@@ -130,7 +130,7 @@ fn main() -> () {\n                                          // mir::Constant\n                                          // + span: $DIR/match_false_edges.rs:37:15: 37:16\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }\n-        StorageDead(_9);                 // scope 0 at $DIR/match_false_edges.rs:37:16: 37:17\n+        StorageDead(_9);                 // scope 0 at $DIR/match_false_edges.rs:37:15: 37:16\n         goto -> bb15;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6\n     }\n \n@@ -156,7 +156,7 @@ fn main() -> () {\n     }\n \n     bb13: {\n-        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:34: 38:35\n+        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n         FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n         FakeRead(ForGuardBinding, _11);  // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n         StorageLive(_10);                // scope 0 at $DIR/match_false_edges.rs:38:14: 38:15\n@@ -168,14 +168,14 @@ fn main() -> () {\n                                          // mir::Constant\n                                          // + span: $DIR/match_false_edges.rs:38:33: 38:34\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n-        StorageDead(_10);                // scope 0 at $DIR/match_false_edges.rs:38:34: 38:35\n-        StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:34: 38:35\n+        StorageDead(_10);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n+        StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n         goto -> bb15;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6\n     }\n \n     bb14: {\n-        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:34: 38:35\n-        StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:34: 38:35\n+        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n+        StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n         falseEdge -> [real: bb4, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29\n     }\n "}, {"sha": "16895942cb81ba1f6c0a06b828e77f46b29b4133", "filename": "src/test/mir-opt/match_test/rustc.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -117,7 +117,7 @@ fn main() -> () {\n     }\n \n     bb10: {\n-        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:24: 13:25\n+        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:23: 13:24\n         FakeRead(ForMatchGuard, _8);     // scope 2 at $DIR/match_test.rs:13:18: 13:19\n         _3 = const 0_i32;                // scope 2 at $DIR/match_test.rs:13:23: 13:24\n                                          // ty::Const\n@@ -130,7 +130,7 @@ fn main() -> () {\n     }\n \n     bb11: {\n-        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:24: 13:25\n+        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:23: 13:24\n         falseEdge -> [real: bb3, imaginary: bb6]; // scope 2 at $DIR/match_test.rs:13:18: 13:19\n     }\n "}, {"sha": "f3f2b68e53d5cb03d27d2db51d51672da451f705", "filename": "src/test/mir-opt/no-drop-for-inactive-variant/rustc.unwrap.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fno-drop-for-inactive-variant%2Frustc.unwrap.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fno-drop-for-inactive-variant%2Frustc.unwrap.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fno-drop-for-inactive-variant%2Frustc.unwrap.SimplifyCfg-elaborate-drops.after.mir?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -43,7 +43,7 @@ fn unwrap(_1: std::option::Option<T>) -> T {\n         StorageLive(_3);                 // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:14: 9:15\n         _3 = move ((_1 as Some).0: T);   // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:14: 9:15\n         _0 = move _3;                    // scope 1 at $DIR/no-drop-for-inactive-variant.rs:9:20: 9:21\n-        StorageDead(_3);                 // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:21: 9:22\n+        StorageDead(_3);                 // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:20: 9:21\n         _6 = discriminant(_1);           // scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n         return;                          // scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:2: 12:2\n     }"}, {"sha": "0822d8cc03c60ef12fa82597267e55cbdfe74538", "filename": "src/test/mir-opt/remove_fake_borrows/rustc.match_guard.CleanupNonCodegenStatements.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows%2Frustc.match_guard.CleanupNonCodegenStatements.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows%2Frustc.match_guard.CleanupNonCodegenStatements.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows%2Frustc.match_guard.CleanupNonCodegenStatements.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -53,7 +53,7 @@\n       }\n   \n       bb5: {\n-          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:26: 8:27\n+          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:25: 8:26\n -         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n -         FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n -         FakeRead(ForMatchGuard, _6);     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n@@ -73,7 +73,7 @@\n       }\n   \n       bb6: {\n-          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:26: 8:27\n+          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:25: 8:26\n           goto -> bb1;                     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n       }\n   "}, {"sha": "0de80f72a1e70bbf2e437cb7fe88423609e1bd99", "filename": "src/test/mir-opt/simplify-arm-identity/32bit/rustc.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F32bit%2Frustc.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F32bit%2Frustc.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F32bit%2Frustc.main.SimplifyArmIdentity.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -61,7 +61,7 @@\n           ((_2 as Foo).0: u8) = move _5;   // scope 3 at $DIR/simplify-arm-identity.rs:20:24: 20:35\n           discriminant(_2) = 0;            // scope 3 at $DIR/simplify-arm-identity.rs:20:24: 20:35\n           StorageDead(_5);                 // scope 3 at $DIR/simplify-arm-identity.rs:20:34: 20:35\n-          StorageDead(_4);                 // scope 1 at $DIR/simplify-arm-identity.rs:20:35: 20:36\n+          StorageDead(_4);                 // scope 1 at $DIR/simplify-arm-identity.rs:20:34: 20:35\n           goto -> bb4;                     // scope 1 at $DIR/simplify-arm-identity.rs:19:18: 22:6\n       }\n   "}, {"sha": "4fa0aff8fa0ef47adc7dbc4d99a0eb0aaeb47d45", "filename": "src/test/mir-opt/simplify-arm-identity/64bit/rustc.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F64bit%2Frustc.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F64bit%2Frustc.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F64bit%2Frustc.main.SimplifyArmIdentity.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -61,7 +61,7 @@\n           ((_2 as Foo).0: u8) = move _5;   // scope 3 at $DIR/simplify-arm-identity.rs:20:24: 20:35\n           discriminant(_2) = 0;            // scope 3 at $DIR/simplify-arm-identity.rs:20:24: 20:35\n           StorageDead(_5);                 // scope 3 at $DIR/simplify-arm-identity.rs:20:34: 20:35\n-          StorageDead(_4);                 // scope 1 at $DIR/simplify-arm-identity.rs:20:35: 20:36\n+          StorageDead(_4);                 // scope 1 at $DIR/simplify-arm-identity.rs:20:34: 20:35\n           goto -> bb4;                     // scope 1 at $DIR/simplify-arm-identity.rs:19:18: 22:6\n       }\n   "}, {"sha": "0cddcb061cfc85ff60cff7a83025bb2402cd6c58", "filename": "src/test/mir-opt/simplify-arm/rustc.id.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id.SimplifyArmIdentity.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -33,7 +33,7 @@\n           ((_0 as Some).0: u8) = move _4;  // scope 1 at $DIR/simplify-arm.rs:11:20: 11:27\n           discriminant(_0) = 1;            // scope 1 at $DIR/simplify-arm.rs:11:20: 11:27\n           StorageDead(_4);                 // scope 1 at $DIR/simplify-arm.rs:11:26: 11:27\n-          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:11:27: 11:28\n+          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:11:26: 11:27\n           goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:10:5: 13:6\n       }\n   "}, {"sha": "cd5962c682a5a3440778612318927a1c2af1efb0", "filename": "src/test/mir-opt/simplify-arm/rustc.id.SimplifyBranchSame.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id.SimplifyBranchSame.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id.SimplifyBranchSame.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id.SimplifyBranchSame.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -33,7 +33,7 @@\n           ((_0 as Some).0: u8) = move _4;  // scope 1 at $DIR/simplify-arm.rs:11:20: 11:27\n           discriminant(_0) = 1;            // scope 1 at $DIR/simplify-arm.rs:11:20: 11:27\n           StorageDead(_4);                 // scope 1 at $DIR/simplify-arm.rs:11:26: 11:27\n-          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:11:27: 11:28\n+          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:11:26: 11:27\n           goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:10:5: 13:6\n       }\n   "}, {"sha": "642ccc1ab14b7bc8c53186fa9c45ad8b5897829f", "filename": "src/test/mir-opt/simplify-arm/rustc.id_result.SimplifyArmIdentity.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id_result.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id_result.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id_result.SimplifyArmIdentity.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -29,7 +29,7 @@\n           ((_0 as Err).0: i32) = move _6;  // scope 2 at $DIR/simplify-arm.rs:19:19: 19:25\n           discriminant(_0) = 1;            // scope 2 at $DIR/simplify-arm.rs:19:19: 19:25\n           StorageDead(_6);                 // scope 2 at $DIR/simplify-arm.rs:19:24: 19:25\n-          StorageDead(_5);                 // scope 0 at $DIR/simplify-arm.rs:19:25: 19:26\n+          StorageDead(_5);                 // scope 0 at $DIR/simplify-arm.rs:19:24: 19:25\n           goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:17:5: 20:6\n       }\n   \n@@ -45,7 +45,7 @@\n           ((_0 as Ok).0: u8) = move _4;    // scope 1 at $DIR/simplify-arm.rs:18:18: 18:23\n           discriminant(_0) = 0;            // scope 1 at $DIR/simplify-arm.rs:18:18: 18:23\n           StorageDead(_4);                 // scope 1 at $DIR/simplify-arm.rs:18:22: 18:23\n-          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:18:23: 18:24\n+          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:18:22: 18:23\n           goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:17:5: 20:6\n       }\n   "}, {"sha": "95ce09a39ed502d30da9fa67ddc5ca90491fa653", "filename": "src/test/mir-opt/simplify-arm/rustc.id_result.SimplifyBranchSame.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id_result.SimplifyBranchSame.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id_result.SimplifyBranchSame.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm%2Frustc.id_result.SimplifyBranchSame.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -29,7 +29,7 @@\n           ((_0 as Err).0: i32) = move _6;  // scope 2 at $DIR/simplify-arm.rs:19:19: 19:25\n           discriminant(_0) = 1;            // scope 2 at $DIR/simplify-arm.rs:19:19: 19:25\n           StorageDead(_6);                 // scope 2 at $DIR/simplify-arm.rs:19:24: 19:25\n-          StorageDead(_5);                 // scope 0 at $DIR/simplify-arm.rs:19:25: 19:26\n+          StorageDead(_5);                 // scope 0 at $DIR/simplify-arm.rs:19:24: 19:25\n           goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:17:5: 20:6\n       }\n   \n@@ -45,7 +45,7 @@\n           ((_0 as Ok).0: u8) = move _4;    // scope 1 at $DIR/simplify-arm.rs:18:18: 18:23\n           discriminant(_0) = 0;            // scope 1 at $DIR/simplify-arm.rs:18:18: 18:23\n           StorageDead(_4);                 // scope 1 at $DIR/simplify-arm.rs:18:22: 18:23\n-          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:18:23: 18:24\n+          StorageDead(_3);                 // scope 0 at $DIR/simplify-arm.rs:18:22: 18:23\n           goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:17:5: 20:6\n       }\n   "}, {"sha": "4471f4d206ca2e673f3925cd14af225d5bbf5443", "filename": "src/test/mir-opt/simplify_try_if_let/rustc.{{impl}}-append.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify_try_if_let%2Frustc.%7B%7Bimpl%7D%7D-append.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fmir-opt%2Fsimplify_try_if_let%2Frustc.%7B%7Bimpl%7D%7D-append.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try_if_let%2Frustc.%7B%7Bimpl%7D%7D-append.SimplifyArmIdentity.diff?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -115,7 +115,7 @@\n   \n       bb8: {\n           StorageDead(_5);                 // scope 1 at $DIR/simplify_try_if_let.rs:31:13: 31:14\n-          StorageDead(_4);                 // scope 0 at $DIR/simplify_try_if_let.rs:32:9: 32:10\n+          StorageDead(_4);                 // scope 0 at $DIR/simplify_try_if_let.rs:31:13: 31:14\n           goto -> bb9;                     // scope 0 at $DIR/simplify_try_if_let.rs:21:9: 32:10\n       }\n   "}, {"sha": "cc81214e2701b8dc7aad42ae247a5a9880bb00a3", "filename": "src/test/ui/match/issue-74050-end-span.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fui%2Fmatch%2Fissue-74050-end-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fui%2Fmatch%2Fissue-74050-end-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fissue-74050-end-span.rs?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -0,0 +1,13 @@\n+fn main() {\n+    let mut args = std::env::args_os();\n+    let _arg = match args.next() {\n+        Some(arg) => {\n+            match arg.to_str() {\n+                //~^ ERROR `arg` does not live long enough\n+                Some(s) => s,\n+                None => return,\n+            }\n+        }\n+        None => return,\n+    };\n+}"}, {"sha": "d636a11a91cec18b0ad26820346396c2bf38806e", "filename": "src/test/ui/match/issue-74050-end-span.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fui%2Fmatch%2Fissue-74050-end-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8355024ed0cda6b041bc0adb2ca17193946b6c8e/src%2Ftest%2Fui%2Fmatch%2Fissue-74050-end-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fissue-74050-end-span.stderr?ref=8355024ed0cda6b041bc0adb2ca17193946b6c8e", "patch": "@@ -0,0 +1,15 @@\n+error[E0597]: `arg` does not live long enough\n+  --> $DIR/issue-74050-end-span.rs:5:19\n+   |\n+LL |     let _arg = match args.next() {\n+   |         ---- borrow later stored here\n+LL |         Some(arg) => {\n+LL |             match arg.to_str() {\n+   |                   ^^^ borrowed value does not live long enough\n+...\n+LL |         }\n+   |         - `arg` dropped here while still borrowed\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}]}