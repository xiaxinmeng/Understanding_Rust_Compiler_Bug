{"sha": "64eb18e6759f4375d01d7e3352447ff6b4305184", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZWIxOGU2NzU5ZjQzNzVkMDFkN2UzMzUyNDQ3ZmY2YjQzMDUxODQ=", "commit": {"author": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T08:04:10Z"}, "committer": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T08:04:10Z"}, "message": "move builtin_type_shadow to its own module", "tree": {"sha": "8ecf61ec757bc41fee0faec18aa345524339d05c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ecf61ec757bc41fee0faec18aa345524339d05c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64eb18e6759f4375d01d7e3352447ff6b4305184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64eb18e6759f4375d01d7e3352447ff6b4305184", "html_url": "https://github.com/rust-lang/rust/commit/64eb18e6759f4375d01d7e3352447ff6b4305184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64eb18e6759f4375d01d7e3352447ff6b4305184/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91a8611b4426c7da8c72317516626affb812d20b", "url": "https://api.github.com/repos/rust-lang/rust/commits/91a8611b4426c7da8c72317516626affb812d20b", "html_url": "https://github.com/rust-lang/rust/commit/91a8611b4426c7da8c72317516626affb812d20b"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "9f6b0bdc7a45a83335b51dbce36113e537ec7f80", "filename": "clippy_lints/src/misc_early/builtin_type_shadow.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64eb18e6759f4375d01d7e3352447ff6b4305184/clippy_lints%2Fsrc%2Fmisc_early%2Fbuiltin_type_shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64eb18e6759f4375d01d7e3352447ff6b4305184/clippy_lints%2Fsrc%2Fmisc_early%2Fbuiltin_type_shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fbuiltin_type_shadow.rs?ref=64eb18e6759f4375d01d7e3352447ff6b4305184", "patch": "@@ -0,0 +1,19 @@\n+use clippy_utils::diagnostics::span_lint;\n+use rustc_ast::ast::{GenericParam, GenericParamKind};\n+use rustc_hir::PrimTy;\n+use rustc_lint::EarlyContext;\n+\n+use super::BUILTIN_TYPE_SHADOW;\n+\n+pub(super) fn check(cx: &EarlyContext<'_>, param: &GenericParam) {\n+    if let GenericParamKind::Type { .. } = param.kind {\n+        if let Some(prim_ty) = PrimTy::from_name(param.ident.name) {\n+            span_lint(\n+                cx,\n+                BUILTIN_TYPE_SHADOW,\n+                param.ident.span,\n+                &format!(\"this generic shadows the built-in type `{}`\", prim_ty.name()),\n+            );\n+        }\n+    }\n+}"}, {"sha": "94740093d3b1e018f9462ecd7b6748f43a7c4966", "filename": "clippy_lints/src/misc_early/mod.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/64eb18e6759f4375d01d7e3352447ff6b4305184/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64eb18e6759f4375d01d7e3352447ff6b4305184/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs?ref=64eb18e6759f4375d01d7e3352447ff6b4305184", "patch": "@@ -1,13 +1,14 @@\n+mod builtin_type_shadow;\n+\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet_opt;\n use rustc_ast::ast::{\n-    BindingMode, Expr, ExprKind, GenericParamKind, Generics, Lit, LitFloatType, LitIntType, LitKind, Mutability,\n-    NodeId, Pat, PatKind, UnOp,\n+    BindingMode, Expr, ExprKind, Generics, Lit, LitFloatType, LitIntType, LitKind, Mutability, NodeId, Pat, PatKind,\n+    UnOp,\n };\n use rustc_ast::visit::FnKind;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n-use rustc_hir::PrimTy;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -265,16 +266,7 @@ declare_lint_pass!(MiscEarlyLints => [\n impl EarlyLintPass for MiscEarlyLints {\n     fn check_generics(&mut self, cx: &EarlyContext<'_>, gen: &Generics) {\n         for param in &gen.params {\n-            if let GenericParamKind::Type { .. } = param.kind {\n-                if let Some(prim_ty) = PrimTy::from_name(param.ident.name) {\n-                    span_lint(\n-                        cx,\n-                        BUILTIN_TYPE_SHADOW,\n-                        param.ident.span,\n-                        &format!(\"this generic shadows the built-in type `{}`\", prim_ty.name()),\n-                    );\n-                }\n-            }\n+            builtin_type_shadow::check(cx, param);\n         }\n     }\n "}, {"sha": "69b8b6a0e68c3af97530ff3316c953e96c2d4efc", "filename": "tests/ui/builtin_type_shadow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/64eb18e6759f4375d01d7e3352447ff6b4305184/tests%2Fui%2Fbuiltin_type_shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64eb18e6759f4375d01d7e3352447ff6b4305184/tests%2Fui%2Fbuiltin_type_shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin_type_shadow.rs?ref=64eb18e6759f4375d01d7e3352447ff6b4305184", "previous_filename": "tests/ui/builtin-type-shadow.rs"}, {"sha": "47a8a1e623e8aa0592b2abb24c8f4e88373543c6", "filename": "tests/ui/builtin_type_shadow.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64eb18e6759f4375d01d7e3352447ff6b4305184/tests%2Fui%2Fbuiltin_type_shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64eb18e6759f4375d01d7e3352447ff6b4305184/tests%2Fui%2Fbuiltin_type_shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin_type_shadow.stderr?ref=64eb18e6759f4375d01d7e3352447ff6b4305184", "patch": "@@ -1,13 +1,13 @@\n error: this generic shadows the built-in type `u32`\n-  --> $DIR/builtin-type-shadow.rs:4:8\n+  --> $DIR/builtin_type_shadow.rs:4:8\n    |\n LL | fn foo<u32>(a: u32) -> u32 {\n    |        ^^^\n    |\n    = note: `-D clippy::builtin-type-shadow` implied by `-D warnings`\n \n error[E0308]: mismatched types\n-  --> $DIR/builtin-type-shadow.rs:5:5\n+  --> $DIR/builtin_type_shadow.rs:5:5\n    |\n LL | fn foo<u32>(a: u32) -> u32 {\n    |        ---             --- expected `u32` because of return type", "previous_filename": "tests/ui/builtin-type-shadow.stderr"}]}