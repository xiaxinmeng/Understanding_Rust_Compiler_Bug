{"sha": "49a5c80a3bbe96903be207ec04bb08bfd14cb9e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YTVjODBhM2JiZTk2OTAzYmUyMDdlYzA0YmIwOGJmZDE0Y2I5ZTQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-04-21T21:06:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-21T21:06:21Z"}, "message": "Rollup merge of #84390 - m-ou-se:make-debug-non-exhaustive-without-fields-a-little-bit-less-verbose, r=kennytm\n\nFormat `Struct { .. }` on one line even with `{:#?}`.\n\nThe result of `debug_struct(\"A\").finish_non_exhaustive()` before this change:\n```\nA {\n    ..\n}\n```\nAnd after this change:\n```\nA { .. }\n```\n\nIf there's any fields, the result stays unchanged:\n```\nA {\n    field: value,\n    ..\n}", "tree": {"sha": "9c52361f863d8a15632b50fe638ea535e7e9c2ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c52361f863d8a15632b50fe638ea535e7e9c2ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJggJPOCRBK7hj4Ov3rIwAAkHYIACjZVPB8C1YA5cGZ379o5BJO\nNe9isAe1TG1oPsyICMKU1H+kPbATjPziQ0GuzEXQq1S6VlIM6twiStXNFrixVA1S\nfMnLrJBYAwCpYhA4axIkOE3shibkH3zyL+0I+cM1yFddLNA+zXyecUu/vf1KlTgo\nIdV61pjJnnOB+VkIQNqmV2OaqIOJXkXIwzM548qUmYYlZfK9tdKjzEtqZ5iKb7If\nKJaqzFkwTjliuXXzInAXY9NfFNCrx9IA0b2Y1VXVBR5AoJvl38wok7yXgJGWO/Wj\nJRGKycBmcclbjqaXa8eC5PdzBdz6xFmA7gmQv+fyzGyl+HgWCshTZqgxICXKJF0=\n=6WhG\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c52361f863d8a15632b50fe638ea535e7e9c2ad\nparent 2cddda3af1556fcebd4471c9ddaade92b7ac0024\nparent 82dc73b1aef4a687466e00d87c5791b2a04d28f9\nauthor Mara Bos <m-ou.se@m-ou.se> 1619039181 +0200\ncommitter GitHub <noreply@github.com> 1619039181 +0200\n\nRollup merge of #84390 - m-ou-se:make-debug-non-exhaustive-without-fields-a-little-bit-less-verbose, r=kennytm\n\nFormat `Struct { .. }` on one line even with `{:#?}`.\n\nThe result of `debug_struct(\"A\").finish_non_exhaustive()` before this change:\n```\nA {\n    ..\n}\n```\nAnd after this change:\n```\nA { .. }\n```\n\nIf there's any fields, the result stays unchanged:\n```\nA {\n    field: value,\n    ..\n}\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4", "html_url": "https://github.com/rust-lang/rust/commit/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cddda3af1556fcebd4471c9ddaade92b7ac0024", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cddda3af1556fcebd4471c9ddaade92b7ac0024", "html_url": "https://github.com/rust-lang/rust/commit/2cddda3af1556fcebd4471c9ddaade92b7ac0024"}, {"sha": "82dc73b1aef4a687466e00d87c5791b2a04d28f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/82dc73b1aef4a687466e00d87c5791b2a04d28f9", "html_url": "https://github.com/rust-lang/rust/commit/82dc73b1aef4a687466e00d87c5791b2a04d28f9"}], "stats": {"total": 34, "additions": 10, "deletions": 24}, "files": [{"sha": "b660788c0515fb5b6d1d36f63b3da858b555788b", "filename": "library/core/src/fmt/builders.rs", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4/library%2Fcore%2Fsrc%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4/library%2Fcore%2Fsrc%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fbuilders.rs?ref=49a5c80a3bbe96903be207ec04bb08bfd14cb9e4", "patch": "@@ -188,28 +188,19 @@ impl<'a, 'b: 'a> DebugStruct<'a, 'b> {\n     #[stable(feature = \"debug_non_exhaustive\", since = \"1.53.0\")]\n     pub fn finish_non_exhaustive(&mut self) -> fmt::Result {\n         self.result = self.result.and_then(|_| {\n-            // Draw non-exhaustive dots (`..`), and open brace if necessary (no fields).\n-            if self.is_pretty() {\n-                if !self.has_fields {\n-                    self.fmt.write_str(\" {\\n\")?;\n-                }\n-                let mut slot = None;\n-                let mut state = Default::default();\n-                let mut writer = PadAdapter::wrap(&mut self.fmt, &mut slot, &mut state);\n-                writer.write_str(\"..\\n\")?;\n-            } else {\n-                if self.has_fields {\n-                    self.fmt.write_str(\", ..\")?;\n+            if self.has_fields {\n+                if self.is_pretty() {\n+                    let mut slot = None;\n+                    let mut state = Default::default();\n+                    let mut writer = PadAdapter::wrap(&mut self.fmt, &mut slot, &mut state);\n+                    writer.write_str(\"..\\n\")?;\n+                    self.fmt.write_str(\"}\")\n                 } else {\n-                    self.fmt.write_str(\" { ..\")?;\n+                    self.fmt.write_str(\", .. }\")\n                 }\n-            }\n-            if self.is_pretty() {\n-                self.fmt.write_str(\"}\")?\n             } else {\n-                self.fmt.write_str(\" }\")?;\n+                self.fmt.write_str(\" { .. }\")\n             }\n-            Ok(())\n         });\n         self.result\n     }"}, {"sha": "7580010a28b4a5394ef5665d09f0a0a12a509e62", "filename": "library/core/tests/fmt/builders.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4/library%2Fcore%2Ftests%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a5c80a3bbe96903be207ec04bb08bfd14cb9e4/library%2Fcore%2Ftests%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Ffmt%2Fbuilders.rs?ref=49a5c80a3bbe96903be207ec04bb08bfd14cb9e4", "patch": "@@ -105,12 +105,7 @@ mod debug_struct {\n         }\n \n         assert_eq!(\"Foo { .. }\", format!(\"{:?}\", Foo));\n-        assert_eq!(\n-            \"Foo {\n-    ..\n-}\",\n-            format!(\"{:#?}\", Foo)\n-        );\n+        assert_eq!(\"Foo { .. }\", format!(\"{:#?}\", Foo));\n     }\n \n     #[test]"}]}