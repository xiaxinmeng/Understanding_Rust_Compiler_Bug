{"sha": "ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMjk1N2RlMTM3ZmI4ZDY5NTkzMTBlNWQ4ZjJmYTFkNjAwZDdkMzY=", "commit": {"author": {"name": "TyPR124", "email": "t.ruckinger@gmail.com", "date": "2020-03-16T17:13:07Z"}, "committer": {"name": "TyPR124", "email": "t.ruckinger@gmail.com", "date": "2020-03-16T17:13:07Z"}, "message": "allowing getting &mut OsStr from OsString", "tree": {"sha": "cd37af58b12f29360e87f907bafe19f99df5b585", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd37af58b12f29360e87f907bafe19f99df5b585"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "html_url": "https://github.com/rust-lang/rust/commit/ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef2957de137fb8d6959310e5d8f2fa1d600d7d36/comments", "author": {"login": "TyPR124", "id": 29851190, "node_id": "MDQ6VXNlcjI5ODUxMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29851190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyPR124", "html_url": "https://github.com/TyPR124", "followers_url": "https://api.github.com/users/TyPR124/followers", "following_url": "https://api.github.com/users/TyPR124/following{/other_user}", "gists_url": "https://api.github.com/users/TyPR124/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyPR124/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyPR124/subscriptions", "organizations_url": "https://api.github.com/users/TyPR124/orgs", "repos_url": "https://api.github.com/users/TyPR124/repos", "events_url": "https://api.github.com/users/TyPR124/events{/privacy}", "received_events_url": "https://api.github.com/users/TyPR124/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TyPR124", "id": 29851190, "node_id": "MDQ6VXNlcjI5ODUxMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29851190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyPR124", "html_url": "https://github.com/TyPR124", "followers_url": "https://api.github.com/users/TyPR124/followers", "following_url": "https://api.github.com/users/TyPR124/following{/other_user}", "gists_url": "https://api.github.com/users/TyPR124/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyPR124/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyPR124/subscriptions", "organizations_url": "https://api.github.com/users/TyPR124/orgs", "repos_url": "https://api.github.com/users/TyPR124/repos", "events_url": "https://api.github.com/users/TyPR124/events{/privacy}", "received_events_url": "https://api.github.com/users/TyPR124/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e6de3244cd62cbde367c206bc9972daded5281d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6de3244cd62cbde367c206bc9972daded5281d", "html_url": "https://github.com/rust-lang/rust/commit/8e6de3244cd62cbde367c206bc9972daded5281d"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "2f921ce7a5fe452fb1fed12af7a0e8920ee13a58", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ef2957de137fb8d6959310e5d8f2fa1d600d7d36/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2957de137fb8d6959310e5d8f2fa1d600d7d36/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "patch": "@@ -379,6 +379,14 @@ impl ops::Index<ops::RangeFull> for OsString {\n     }\n }\n \n+#[stable(feature = \"mut_osstr\", since = \"1.44.0\")]\n+impl ops::IndexMut<ops::RangeFull> for OsString {\n+    #[inline]\n+    fn index_mut(&mut self, _index: ops::RangeFull) -> &mut OsStr {\n+        OsStr::from_inner_mut(self.inner.as_mut_slice())\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl ops::Deref for OsString {\n     type Target = OsStr;\n@@ -389,6 +397,14 @@ impl ops::Deref for OsString {\n     }\n }\n \n+#[stable(feature = \"mut_osstr\", since = \"1.44.0\")]\n+impl ops::DerefMut for OsString {\n+    #[inline]\n+    fn deref_mut(&mut self) -> &mut OsStr {\n+        &mut self[..]\n+    }\n+}\n+\n #[stable(feature = \"osstring_default\", since = \"1.9.0\")]\n impl Default for OsString {\n     /// Constructs an empty `OsString`.\n@@ -512,6 +528,11 @@ impl OsStr {\n         unsafe { &*(inner as *const Slice as *const OsStr) }\n     }\n \n+    #[inline]\n+    fn from_inner_mut(inner: &mut Slice) -> &mut OsStr {\n+        unsafe { &mut *(inner as *mut Slice as *mut OsStr) }\n+    }\n+\n     /// Yields a [`&str`] slice if the `OsStr` is valid Unicode.\n     ///\n     /// This conversion may entail doing a check for UTF-8 validity."}, {"sha": "4cff23b2f4a095080959dee8a03eb6dc3c1f0f5a", "filename": "src/libstd/sys/windows/os_str.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef2957de137fb8d6959310e5d8f2fa1d600d7d36/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2957de137fb8d6959310e5d8f2fa1d600d7d36/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs?ref=ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "patch": "@@ -80,6 +80,11 @@ impl Buf {\n         unsafe { mem::transmute(self.inner.as_slice()) }\n     }\n \n+    #[inline]\n+    pub fn as_mut_slice(&mut self) -> &mut Slice {\n+        unsafe { mem::transmute(self.inner.as_mut_slice()) }\n+    }\n+\n     pub fn into_string(self) -> Result<String, Buf> {\n         self.inner.into_string().map_err(|buf| Buf { inner: buf })\n     }"}, {"sha": "5767350336dad94454c0fa39ad9878c6dd3bab55", "filename": "src/libstd/sys_common/os_str_bytes.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef2957de137fb8d6959310e5d8f2fa1d600d7d36/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2957de137fb8d6959310e5d8f2fa1d600d7d36/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs?ref=ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "patch": "@@ -109,6 +109,11 @@ impl Buf {\n         unsafe { mem::transmute(&*self.inner) }\n     }\n \n+    #[inline]\n+    pub fn as_mut_slice(&mut self) -> &mut Slice {\n+        unsafe { mem::transmute(&mut *self.inner) }\n+    }\n+\n     pub fn into_string(self) -> Result<String, Buf> {\n         String::from_utf8(self.inner).map_err(|p| Buf { inner: p.into_bytes() })\n     }"}]}