{"sha": "60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwODQyYzFjMWZkYjY5YmNjYzU4NjEzZTI2ZjFjOTY2MWNhOGJkMzk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-20T19:16:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-20T20:59:07Z"}, "message": "Rollup merge of #38451 - semarie:openbsd-rustbuild, r=alexcrichton\n\nadaptation to rustbuild for openbsd\n\nSince the switch to rustbuild, the build for openbsd is broken:\n  - [X] `ar` inference based on compiler name is wrong (OpenBSD usually use `egcc`, but `ear` doesn't exist)\n  - [X] `make` isn't GNU-make under OpenBSD (and others BSD platforms)\n  - [x] `stdc++` isn't the right stdc++ library to link with (it should be `estdc++`)\n  - [x] corrects tests that don't pass anymore (problems related to rustbuild)\n\nr? @alexcrichton", "tree": {"sha": "f4c8c604dacf2d9b3fd1d491fb1bd3976238340e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4c8c604dacf2d9b3fd1d491fb1bd3976238340e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "html_url": "https://github.com/rust-lang/rust/commit/60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8e7f9530a623ea7ca37c556c2822ae8c3bfa339", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8e7f9530a623ea7ca37c556c2822ae8c3bfa339", "html_url": "https://github.com/rust-lang/rust/commit/a8e7f9530a623ea7ca37c556c2822ae8c3bfa339"}, {"sha": "2c39ee12a99f9548a5e379e8bcea4f7923028fee", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c39ee12a99f9548a5e379e8bcea4f7923028fee", "html_url": "https://github.com/rust-lang/rust/commit/2c39ee12a99f9548a5e379e8bcea4f7923028fee"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "01a19a0cca862dd797f44ff1458ba5f1894b590e", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -87,6 +87,7 @@ dependencies = [\n name = \"compiletest\"\n version = \"0.0.0\"\n dependencies = [\n+ \"build_helper 0.1.0\",\n  \"env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serialize 0.0.0\","}, {"sha": "e7b0afeb8ce630447d596704c771aa8656922cc9", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -13,6 +13,8 @@\n //! This file implements the various regression test suites that we execute on\n //! our CI.\n \n+extern crate build_helper;\n+\n use std::collections::HashSet;\n use std::env;\n use std::fmt;\n@@ -543,7 +545,7 @@ pub fn distcheck(build: &Build) {\n     build.run(&mut cmd);\n     build.run(Command::new(\"./configure\")\n                      .current_dir(&dir));\n-    build.run(Command::new(\"make\")\n+    build.run(Command::new(build_helper::make(&build.config.build))\n                      .arg(\"check\")\n                      .current_dir(&dir));\n }"}, {"sha": "d0d588f46a7549a9402f404b395aebe0a2868dde", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -47,6 +47,8 @@ pub fn cc2ar(cc: &Path, target: &str) -> Option<PathBuf> {\n         None\n     } else if target.contains(\"musl\") {\n         Some(PathBuf::from(\"ar\"))\n+    } else if target.contains(\"openbsd\") {\n+        Some(PathBuf::from(\"ar\"))\n     } else {\n         let parent = cc.parent().unwrap();\n         let file = cc.file_name().unwrap().to_str().unwrap();\n@@ -61,6 +63,16 @@ pub fn cc2ar(cc: &Path, target: &str) -> Option<PathBuf> {\n     }\n }\n \n+pub fn make(host: &str) -> PathBuf {\n+    if host.contains(\"bitrig\") || host.contains(\"dragonfly\") ||\n+        host.contains(\"freebsd\") || host.contains(\"netbsd\") ||\n+        host.contains(\"openbsd\") {\n+        PathBuf::from(\"gmake\")\n+    } else {\n+        PathBuf::from(\"make\")\n+    }\n+}\n+\n pub fn output(cmd: &mut Command) -> String {\n     let output = match cmd.stderr(Stdio::inherit()).output() {\n         Ok(status) => status,"}, {"sha": "60b7875a97c84dd0cb01acadadda12371ce58abe", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -151,7 +151,7 @@ fn main() {\n     cmd.arg(format!(\"--build={}\", build_helper::gnu_target(&host)));\n \n     run(&mut cmd);\n-    let mut make = Command::new(\"make\");\n+    let mut make = Command::new(build_helper::make(&host));\n     make.current_dir(&build_dir)\n         .arg(\"build_lib_static\");\n "}, {"sha": "86c40a0208ad340755cb3630c38378d93a177f7d", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -230,18 +230,25 @@ fn main() {\n         }\n     }\n \n+    // OpenBSD has a particular C++ runtime library name\n+    let stdcppname = if target.contains(\"openbsd\") {\n+        \"estdc++\"\n+    } else {\n+        \"stdc++\"\n+    };\n+\n     // C++ runtime library\n     if !target.contains(\"msvc\") {\n         if let Some(s) = env::var_os(\"LLVM_STATIC_STDCPP\") {\n             assert!(!cxxflags.contains(\"stdlib=libc++\"));\n             let path = PathBuf::from(s);\n             println!(\"cargo:rustc-link-search=native={}\",\n                      path.parent().unwrap().display());\n-            println!(\"cargo:rustc-link-lib=static=stdc++\");\n+            println!(\"cargo:rustc-link-lib=static={}\", stdcppname);\n         } else if cxxflags.contains(\"stdlib=libc++\") {\n             println!(\"cargo:rustc-link-lib=c++\");\n         } else {\n-            println!(\"cargo:rustc-link-lib=stdc++\");\n+            println!(\"cargo:rustc-link-lib={}\", stdcppname);\n         }\n     }\n }"}, {"sha": "b3eba508316981682638773827c3e04d9e5d7a82", "filename": "src/libstd/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -104,7 +104,7 @@ fn build_libbacktrace(host: &str, target: &str) {\n                 .env(\"AR\", &ar)\n                 .env(\"RANLIB\", format!(\"{} s\", ar.display()))\n                 .env(\"CFLAGS\", cflags));\n-    run(Command::new(\"make\")\n+    run(Command::new(build_helper::make(host))\n                 .current_dir(&build_dir)\n                 .arg(format!(\"INCDIR={}\", src_dir.display()))\n                 .arg(\"-j\").arg(env::var(\"NUM_JOBS\").expect(\"NUM_JOBS was not set\")));"}, {"sha": "75c665b04a12325392ce0f5eb59bbec3cd113e0d", "filename": "src/test/run-pass/backtrace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace.rs?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -10,6 +10,7 @@\n \n // ignore-android FIXME #17520\n // ignore-emscripten spawning processes is not supported\n+// ignore-openbsd no support for libbacktrace without filename\n // compile-flags:-g\n \n use std::env;"}, {"sha": "faf0a0eaa81ee5098e7d0ee18be607e4bec58085", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -8,3 +8,4 @@ build = \"build.rs\"\n log = \"0.3\"\n env_logger = { version = \"0.3.5\", default-features = false }\n serialize = { path = \"../../libserialize\" }\n+build_helper = { path = \"../../build_helper\" }"}, {"sha": "9e2416fca81aeabdaf7de92140f0f0c592eac192", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60842c1c1fdb69bccc58613e26f1c9661ca8bd39/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=60842c1c1fdb69bccc58613e26f1c9661ca8bd39", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+extern crate build_helper;\n+\n use common::Config;\n use common::{CompileFail, ParseFail, Pretty, RunFail, RunPass, RunPassValgrind};\n use common::{Codegen, DebugInfoLldb, DebugInfoGdb, Rustdoc, CodegenUnits};\n@@ -2108,7 +2110,7 @@ actual:\\n\\\n         }\n         self.create_dir_racy(&tmpdir);\n \n-        let mut cmd = Command::new(\"make\");\n+        let mut cmd = Command::new(build_helper::make(&self.config.host));\n         cmd.current_dir(&self.testpaths.file)\n            .env(\"TARGET\", &self.config.target)\n            .env(\"PYTHON\", &self.config.docck_python)"}]}