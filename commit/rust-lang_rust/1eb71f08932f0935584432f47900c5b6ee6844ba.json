{"sha": "1eb71f08932f0935584432f47900c5b6ee6844ba", "node_id": "C_kwDOAAsO6NoAKDFlYjcxZjA4OTMyZjA5MzU1ODQ0MzJmNDc5MDBjNWI2ZWU2ODQ0YmE", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-09-16T21:52:04Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-09-17T15:46:04Z"}, "message": "Add back in normalize call", "tree": {"sha": "2f304d6a0806f19c4530000ff094670477f47cc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f304d6a0806f19c4530000ff094670477f47cc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eb71f08932f0935584432f47900c5b6ee6844ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb71f08932f0935584432f47900c5b6ee6844ba", "html_url": "https://github.com/rust-lang/rust/commit/1eb71f08932f0935584432f47900c5b6ee6844ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eb71f08932f0935584432f47900c5b6ee6844ba/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e09242d5b82953652b5a898257d7c8f249d34bea", "url": "https://api.github.com/repos/rust-lang/rust/commits/e09242d5b82953652b5a898257d7c8f249d34bea", "html_url": "https://github.com/rust-lang/rust/commit/e09242d5b82953652b5a898257d7c8f249d34bea"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "1bb6506b3678c379690c94c2011e95d0e5ea8571", "filename": "compiler/rustc_traits/src/type_op.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1eb71f08932f0935584432f47900c5b6ee6844ba/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb71f08932f0935584432f47900c5b6ee6844ba/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs?ref=1eb71f08932f0935584432f47900c5b6ee6844ba", "patch": "@@ -76,15 +76,18 @@ struct AscribeUserTypeCx<'me, 'tcx> {\n \n impl<'me, 'tcx> AscribeUserTypeCx<'me, 'tcx> {\n     fn normalize<T>(&mut self, value: T) -> T\n+    where\n+        T: TypeFoldable<'tcx>,\n+    {\n+        self.normalize_with_cause(value, ObligationCause::misc(self.span, hir::CRATE_HIR_ID))\n+    }\n+\n+    fn normalize_with_cause<T>(&mut self, value: T, cause: ObligationCause<'tcx>) -> T\n     where\n         T: TypeFoldable<'tcx>,\n     {\n         self.infcx\n-            .partially_normalize_associated_types_in(\n-                ObligationCause::misc(self.span, hir::CRATE_HIR_ID),\n-                self.param_env,\n-                value,\n-            )\n+            .partially_normalize_associated_types_in(cause, self.param_env, value)\n             .into_value_registering_obligations(self.infcx, self.fulfill_cx)\n     }\n \n@@ -154,6 +157,8 @@ impl<'me, 'tcx> AscribeUserTypeCx<'me, 'tcx> {\n                 hir::CRATE_HIR_ID,\n                 ObligationCauseCode::AscribeUserTypeProvePredicate(predicate_span),\n             );\n+            let instantiated_predicate =\n+                self.normalize_with_cause(instantiated_predicate, cause.clone());\n             self.prove_predicate(instantiated_predicate, cause);\n         }\n "}]}