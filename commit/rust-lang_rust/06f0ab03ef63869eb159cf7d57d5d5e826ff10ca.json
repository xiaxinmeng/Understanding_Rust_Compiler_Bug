{"sha": "06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ZjBhYjAzZWY2Mzg2OWViMTU5Y2Y3ZDU3ZDVkNWU4MjZmZjEwY2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-19T10:51:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-19T10:51:25Z"}, "message": "Auto merge of #5190 - flip1995:nuke_traveyor, r=phansch,Manishearth,llogiq,flip1995\n\nI like to move it, move it\n\nGHA now runs in the background for 6 days (#5088)\n\nSince then ~~15~~ 19 PRs were successfully merged and Travis+Appveyor agreed on the status in every case. ([GitHub PR search query](https://github.com/rust-lang/rust-clippy/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Amerged+merged%3A%3E%3D2020-02-12T15%3A42%3A00+sort%3Aupdated-desc+NOT+%5Bgh-pages%5D+in%3Atitle))\n\nSome PRs were:\n- #5163\n- #5170\n- #5168\n- #5173\n- #5171\n- #5156\n- #4809\n- #5177\n- #5182\n- #5183\n- #5184\n- #5185\n- #5186\n- #5181\n- #5189\n\nBug with GHA:\n- When a rustc PR gets merged between the `integration_build` and the `integration` job, the `integration` job will fail. This happened once in #5162, but not in the past 6 days. Even if it would happen every 4th PR we would save time, since splitting up the integration build and tests saves 5-7 minutes per run and a complete run takes 15-17 minutes\n- Sometimes the MacOS build takes up to an hour to download the master toolchain. Until now, this happend 2 or 3 times and can be resolved by a `@bors r3try`+canceling the previous run (restarting single jobs is not supported yet)\n\n## Before merging this, https://github.com/rust-lang/rust-central-station/pull/578 has to get merged\n\nThis PR is for starting the discussion and to get consensus (@rust-lang/clippy) on a final move to GHA. If we're ready, I'll contact Pietro, to finalize the move.\n\nchangelog: Clippy completely runs on GHA now :tada:\n\n---\n\nBTW: The deployment already runs on GHA, instead of Travis.", "tree": {"sha": "6aa9435f61a4210e9a1b27f9d3199946c70148b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6aa9435f61a4210e9a1b27f9d3199946c70148b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "html_url": "https://github.com/rust-lang/rust/commit/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2855b2143972df7102333193aa3c83ddce227e36", "url": "https://api.github.com/repos/rust-lang/rust/commits/2855b2143972df7102333193aa3c83ddce227e36", "html_url": "https://github.com/rust-lang/rust/commit/2855b2143972df7102333193aa3c83ddce227e36"}, {"sha": "6835e2d8e0983bd84fbd3795be34eb49118cca42", "url": "https://api.github.com/repos/rust-lang/rust/commits/6835e2d8e0983bd84fbd3795be34eb49118cca42", "html_url": "https://github.com/rust-lang/rust/commit/6835e2d8e0983bd84fbd3795be34eb49118cca42"}], "stats": {"total": 262, "additions": 1, "deletions": 261}, "files": [{"sha": "48cb3f5a1276dfdacef1d54cecd1ded0911738a8", "filename": ".github/deploy_key.enc", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2855b2143972df7102333193aa3c83ddce227e36/.github%2Fdeploy_key.enc", "raw_url": "https://github.com/rust-lang/rust/raw/2855b2143972df7102333193aa3c83ddce227e36/.github%2Fdeploy_key.enc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdeploy_key.enc?ref=2855b2143972df7102333193aa3c83ddce227e36"}, {"sha": "fa02f53340174208e143b423603d27f90d7a916b", "filename": ".travis.yml", "status": "removed", "additions": 0, "deletions": 154, "changes": 154, "blob_url": "https://github.com/rust-lang/rust/blob/2855b2143972df7102333193aa3c83ddce227e36/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/2855b2143972df7102333193aa3c83ddce227e36/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=2855b2143972df7102333193aa3c83ddce227e36", "patch": "@@ -1,154 +0,0 @@\n-dist: xenial\n-language: bash\n-git:\n-  depth: 1\n-  quiet: true\n-\n-branches:\n-  # Don't build these branches\n-  except:\n-    # Used by bors\n-    - trying.tmp\n-    - staging.tmp\n-\n-cache:\n-  directories:\n-    - $HOME/.cargo\n-before_cache:\n-  - cargo install cargo-cache --debug\n-  - find $HOME/.cargo/bin/ ! -type d -exec strip {} \\;\n-  - cargo cache --autoclean\n-\n-env:\n-  global:\n-    - RUST_BACKTRACE=1\n-    - secure: \"OKulfkA5OGd/d1IhvBKzRkHQwMcWjzrzbimo7+5NhkUkWxndAzl+719TB3wWvIh1i2wXXrEXsyZkXM5FtRrHm55v1VKQ5ibjEvFg1w3NIg81iDyoLq186fLqywvxGkOAFPrsePPsBj5USd5xvhwwbrjO6L7/RK6Z8shBwOSc41s=\"\n-\n-before_install:\n-  - export CARGO_TARGET_DIR=\"$TRAVIS_BUILD_DIR/target\"\n-  - |\n-    case \"$TRAVIS_OS_NAME\" in\n-      linux ) HOST=x86_64-unknown-linux-gnu;;\n-      osx ) HOST=x86_64-apple-darwin;;\n-      windows ) HOST=x86_64-pc-windows-msvc;;\n-    esac\n-  - curl -sSL https://sh.rustup.rs | sh -s -- -y --default-host=\"$HOST\" --default-toolchain=nightly --profile=minimal\n-  - export PATH=\"$HOME/.cargo/bin:$PATH\"\n-install:\n-  - |\n-    if [[ -z ${INTEGRATION} ]]; then\n-      if ! rustup component add rustfmt; then\n-        TARGET=$(rustc -Vv | awk '/host/{print $2}')\n-        NIGHTLY=$(curl -s \"https://rust-lang.github.io/rustup-components-history/${TARGET}/rustfmt\")\n-        curl -sSL \"https://static.rust-lang.org/dist/${NIGHTLY}/rustfmt-nightly-${TARGET}.tar.xz\" | \\\n-        tar -xJf - --strip-components=3 -C ~/.cargo/bin\n-        rm -rf ~/.cargo/bin/doc\n-      fi\n-      if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n-        . $HOME/.nvm/nvm.sh\n-        nvm install stable\n-        nvm use stable\n-        npm install remark-cli remark-lint remark-lint-maximum-line-length remark-preset-lint-recommended\n-      elif [[ \"$TRAVIS_OS_NAME\" == \"windows\" ]]; then\n-        choco install windows-sdk-10.1\n-      fi\n-    fi\n-\n-# disabling the integration tests in forks should be done with\n-# if: fork = false\n-# but this is currently buggy travis-ci/travis-ci#9118\n-matrix:\n-  fast_finish: true\n-  include:\n-    # Builds that are executed for every PR\n-    - os: linux\n-    # i686 toolchain could run on x86_64 system.\n-    - os: linux\n-      env: HOST_TOOLCHAIN=i686-unknown-linux-gnu\n-      addons:\n-        apt:\n-          packages:\n-            - gcc-multilib\n-            - libssl-dev:i386     # openssl dev in Cargo.toml\n-      if: branch IN (auto, try)\n-    - os: windows\n-      env: CARGO_INCREMENTAL=0 OS_WINDOWS=true\n-\n-    # Builds that are only executed when a PR is r+ed or a try build is started\n-    # We don't want to run these always because they go towards\n-    # the build limit within the Travis rust-lang account.\n-    # The jobs are approximately sorted by execution time\n-    - os: osx\n-      if: branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/rls\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/cargo\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/chalk\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=Geal/nom\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/rustfmt\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=hyperium/hyper\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-itertools/itertools\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    # FIXME: rustc ICE on `serde_test_suite`\n-    # - env: INTEGRATION=serde-rs/serde\n-    #   if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/stdarch\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-random/rand\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/futures-rs\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=Marwes/combine\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang-nursery/failure\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/log\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=chronotope/chrono\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-  allow_failures:\n-    - os: windows\n-      env: CARGO_INCREMENTAL=0 OS_WINDOWS=true\n-\n-before_script:\n-  - |\n-    if [[ \"$TRAVIS_BRANCH\" == \"auto\" ]] || [[ \"$TRAVIS_BRANCH\" == \"try\" ]]; then\n-      PR=$(echo \"$TRAVIS_COMMIT_MESSAGE\" | grep -o \"#[0-9]*\" | head -1 | sed 's/^#//g')\n-      output=$(curl -H \"Authorization: token $GITHUB_API_TOKEN\" -s \"https://api.github.com/repos/rust-lang/rust-clippy/pulls/$PR\" | \\\n-        python -c \"import sys, json; print(json.load(sys.stdin)['body'])\" | \\\n-        grep \"^changelog: \" | \\\n-        sed \"s/changelog: //g\")\n-      if [[ -z \"$output\" ]]; then\n-        echo \"ERROR: PR body must contain 'changelog: ...'\"\n-        exit 1\n-      elif [[ \"$output\" = \"none\" ]]; then\n-        echo \"WARNING: changelog is 'none'\"\n-      fi\n-    fi\n-  - |\n-    rm rust-toolchain\n-    ./setup-toolchain.sh\n-  - |\n-    SYSROOT=$(rustc --print sysroot)\n-    case \"$TRAVIS_OS_NAME\" in\n-      windows ) export PATH=\"${SYSROOT}/bin:${PATH}\" ;;\n-      linux ) export LD_LIBRARY_PATH=\"${SYSROOT}/lib${LD_LIBRARY_PATH+:${LD_LIBRARY_PATH}}\" ;;\n-      osx )\n-        # See <https://github.com/nteract/nteract/issues/1523#issuecomment-301623519>\n-        sudo mkdir -p /usr/local/lib\n-        sudo find \"$SYSROOT/lib\" -maxdepth 1 -name '*.dylib' -exec ln -s {} /usr/local/lib \\;\n-        ;;\n-    esac\n-\n-script:\n-  - |\n-    if [[ -n ${INTEGRATION} ]]; then\n-      cargo test --test integration --features integration && sleep 5\n-    else\n-      ./ci/base-tests.sh && sleep 5\n-    fi"}, {"sha": "c1a410cf5c82deacf4b2affef8832cc630dbed7c", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "patch": "@@ -18,9 +18,7 @@ build = \"build.rs\"\n edition = \"2018\"\n publish = false\n \n-[badges]\n-travis-ci = { repository = \"rust-lang/rust-clippy\" }\n-appveyor = { repository = \"rust-lang/rust-clippy\" }\n+# [badges]\n # FIXME(flip1995): Add GHA badge once rust-lang/crates.io#1838 is merged\n \n [[bin]]"}, {"sha": "628133a8a6684bf295a6fbf957aeffb27d69ba7c", "filename": "README.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "patch": "@@ -1,7 +1,5 @@\n # Clippy\n \n-[![Build Status](https://travis-ci.com/rust-lang/rust-clippy.svg?branch=master)](https://travis-ci.com/rust-lang/rust-clippy)\n-[![Windows Build status](https://ci.appveyor.com/api/projects/status/id677xpw1dguo7iw?svg=true)](https://ci.appveyor.com/project/rust-lang-libs/rust-clippy)\n [![Clippy Test](https://github.com/rust-lang/rust-clippy/workflows/Clippy%20Test/badge.svg?branch=auto&event=push)](https://github.com/rust-lang/rust-clippy/actions?query=workflow%3A%22Clippy+Test%22+event%3Apush+branch%3Aauto)\n [![License: MIT OR Apache-2.0](https://img.shields.io/crates/l/clippy.svg)](#license)\n "}, {"sha": "bf6133e98a0644b6b616408ce6d1e483d1df2154", "filename": "appveyor.yml", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/2855b2143972df7102333193aa3c83ddce227e36/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/2855b2143972df7102333193aa3c83ddce227e36/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=2855b2143972df7102333193aa3c83ddce227e36", "patch": "@@ -1,47 +0,0 @@\n-environment:\n-  global:\n-    PROJECT_NAME: rust-clippy\n-    RUST_BACKTRACE: 1\n-  matrix:\n-    #- TARGET: i686-pc-windows-gnu\n-    #- TARGET: i686-pc-windows-msvc\n-    #- TARGET: x86_64-pc-windows-gnu\n-    - TARGET: x86_64-pc-windows-msvc\n-\n-branches:\n-  # Only build AppVeyor on r+ and try branch\n-  only:\n-    - auto\n-    - try\n-\n-cache:\n-  - '%USERPROFILE%\\.cargo'\n-# before cache\n-after_test:\n-  - cargo install cargo-cache --debug\n-  - cargo cache --autoclean\n-\n-install:\n-  - curl -sSf -o rustup-init.exe https://win.rustup.rs/\n-  - rustup-init.exe -y --default-host %TARGET% --default-toolchain nightly --profile=minimal\n-  - set PATH=%USERPROFILE%\\.cargo\\bin;%PATH%\n-  - rustup component add rustfmt --toolchain nightly & exit 0 # Format test handles missing rustfmt\n-  - del rust-toolchain\n-  - cargo install rustup-toolchain-install-master\n-  - rustup-toolchain-install-master -f -n master -c rustc-dev\n-  - rustup override set master\n-  - rustc -V\n-  - cargo -V\n-\n-# Build settings, not to be confused with \"before_build\" and \"after_build\".\n-build: false\n-\n-build_script:\n-  - cargo build --features deny-warnings\n-\n-test_script:\n-  - cargo test --features deny-warnings\n-\n-notifications:\n-  - provider: Email\n-    on_build_success: false"}, {"sha": "125a566271d0de686d6f1bda6c034c86cc3a7a05", "filename": "ci/base-tests.sh", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/2855b2143972df7102333193aa3c83ddce227e36/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2855b2143972df7102333193aa3c83ddce227e36/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=2855b2143972df7102333193aa3c83ddce227e36", "patch": "@@ -1,55 +0,0 @@\n-#!/usr/bin/env bash\n-set -ex\n-\n-echo \"Running clippy base tests\"\n-\n-PATH=$PATH:./node_modules/.bin\n-if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n-  remark -f ./*.md -f doc/*.md > /dev/null\n-fi\n-# build clippy in debug mode and run tests\n-cargo build --features deny-warnings\n-cargo test --features deny-warnings\n-\n-(cd clippy_lints && cargo test --features deny-warnings)\n-(cd rustc_tools_util && cargo test --features deny-warnings)\n-(cd clippy_dev && cargo test --features deny-warnings)\n-\n-# make sure clippy can be called via ./path/to/cargo-clippy\n-(\n-  cd clippy_workspace_tests\n-  ../target/debug/cargo-clippy\n-)\n-\n-# Perform various checks for lint registration\n-cargo dev update_lints --check\n-cargo dev --limit-stderr-length\n-\n-# Check running clippy-driver without cargo\n-(\n-  # Check sysroot handling\n-  sysroot=$(./target/debug/clippy-driver --print sysroot)\n-  test \"$sysroot\" = \"$(rustc --print sysroot)\"\n-\n-  if [[ -z \"$OS_WINDOWS\" ]]; then\n-    desired_sysroot=/tmp\n-  else\n-    desired_sysroot=C:/tmp\n-  fi\n-  sysroot=$(./target/debug/clippy-driver --sysroot $desired_sysroot --print sysroot)\n-  test \"$sysroot\" = $desired_sysroot\n-\n-  sysroot=$(SYSROOT=$desired_sysroot ./target/debug/clippy-driver --print sysroot)\n-  test \"$sysroot\" = $desired_sysroot\n-\n-  # Make sure this isn't set - clippy-driver should cope without it\n-  unset CARGO_MANIFEST_DIR\n-\n-  # Run a lint and make sure it produces the expected output. It's also expected to exit with code 1\n-  # FIXME: How to match the clippy invocation in compile-test.rs?\n-  ./target/debug/clippy-driver -Dwarnings -Aunused -Zui-testing --emit metadata --crate-type bin tests/ui/cstring.rs 2> cstring.stderr && exit 1\n-  sed -e 's,tests/ui,$DIR,' -e '/= help/d' cstring.stderr > normalized.stderr\n-  diff normalized.stderr tests/ui/cstring.stderr\n-\n-  # TODO: CLIPPY_CONF_DIR / CARGO_MANIFEST_DIR\n-)"}]}