{"sha": "59eed49115c98da4dca8387a89035e16a9d395c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZWVkNDkxMTVjOThkYTRkY2E4Mzg3YTg5MDM1ZTE2YTlkMzk1YzQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-12T01:09:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-12T01:09:26Z"}, "message": "Rollup merge of #67237 - llogiq:improve-str, r=Dylan-DPC\n\nSome small readability improvements", "tree": {"sha": "cd0d8638fea506d1f75f2d3b0f90ac5c924586c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0d8638fea506d1f75f2d3b0f90ac5c924586c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59eed49115c98da4dca8387a89035e16a9d395c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8ZNGCRBK7hj4Ov3rIwAAdHIIAD2yMpyzF+/TGEE+E9PVi9cM\nzpX8YvmpJAtqeN/Sua9GQhwvBWOMIIHw52WgUQjvO3EdPas9lS05DGkwykdFc93r\n0uJb/kT6RwNEtpLMX6Qe5z5ceFSVnVEe8DVZxk4xcnG2BI3Vm6Pls3UkKgBftiuF\nzisXs4GtDpibUW5c26b2YuhoXFoJsqrKhS4Ruwb3N+HuDjCqT+rsrrRyDsKP8Qe+\nytSqhFHFIWzgplzkSOCwNOxGm61XmIkTg9HAxoqOmYkUIlB5gcMfXEnTNmVp8Mdg\nTLSmPeUaZupYUdmsx5/tpq91uJkn9PfLpp5Bj9aUP3TpaAEX12wRoYBnIulFis0=\n=CmvE\n-----END PGP SIGNATURE-----\n", "payload": "tree cd0d8638fea506d1f75f2d3b0f90ac5c924586c9\nparent 0f286e855f9b1035e76d5f2c8c8fc26cab351632\nparent 7f87dd1bc008d49cc27bee8d5a866e3c2de463b3\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1576112966 +0900\ncommitter GitHub <noreply@github.com> 1576112966 +0900\n\nRollup merge of #67237 - llogiq:improve-str, r=Dylan-DPC\n\nSome small readability improvements\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59eed49115c98da4dca8387a89035e16a9d395c4", "html_url": "https://github.com/rust-lang/rust/commit/59eed49115c98da4dca8387a89035e16a9d395c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59eed49115c98da4dca8387a89035e16a9d395c4/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f286e855f9b1035e76d5f2c8c8fc26cab351632", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f286e855f9b1035e76d5f2c8c8fc26cab351632", "html_url": "https://github.com/rust-lang/rust/commit/0f286e855f9b1035e76d5f2c8c8fc26cab351632"}, {"sha": "7f87dd1bc008d49cc27bee8d5a866e3c2de463b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f87dd1bc008d49cc27bee8d5a866e3c2de463b3", "html_url": "https://github.com/rust-lang/rust/commit/7f87dd1bc008d49cc27bee8d5a866e3c2de463b3"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "5c63eebf595f9e59d32690b46488513db72ddade", "filename": "src/libcore/char/methods.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/59eed49115c98da4dca8387a89035e16a9d395c4/src%2Flibcore%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59eed49115c98da4dca8387a89035e16a9d395c4/src%2Flibcore%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmethods.rs?ref=59eed49115c98da4dca8387a89035e16a9d395c4", "patch": "@@ -553,8 +553,7 @@ impl char {\n     pub fn is_alphabetic(self) -> bool {\n         match self {\n             'a'..='z' | 'A'..='Z' => true,\n-            c if c > '\\x7f' => derived_property::Alphabetic(c),\n-            _ => false,\n+            c => c > '\\x7f' && derived_property::Alphabetic(c),\n         }\n     }\n \n@@ -585,8 +584,7 @@ impl char {\n     pub fn is_lowercase(self) -> bool {\n         match self {\n             'a'..='z' => true,\n-            c if c > '\\x7f' => derived_property::Lowercase(c),\n-            _ => false,\n+            c => c > '\\x7f' && derived_property::Lowercase(c),\n         }\n     }\n \n@@ -617,8 +615,7 @@ impl char {\n     pub fn is_uppercase(self) -> bool {\n         match self {\n             'A'..='Z' => true,\n-            c if c > '\\x7f' => derived_property::Uppercase(c),\n-            _ => false,\n+            c => c > '\\x7f' && derived_property::Uppercase(c),\n         }\n     }\n \n@@ -646,8 +643,7 @@ impl char {\n     pub fn is_whitespace(self) -> bool {\n         match self {\n             ' ' | '\\x09'..='\\x0d' => true,\n-            c if c > '\\x7f' => property::White_Space(c),\n-            _ => false,\n+            c => c > '\\x7f' && property::White_Space(c),\n         }\n     }\n \n@@ -744,8 +740,7 @@ impl char {\n     pub fn is_numeric(self) -> bool {\n         match self {\n             '0'..='9' => true,\n-            c if c > '\\x7f' => general_category::N(c),\n-            _ => false,\n+            c => c > '\\x7f' && general_category::N(c),\n         }\n     }\n "}, {"sha": "1037da14b5f627371d6678d799639d023590dee2", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/59eed49115c98da4dca8387a89035e16a9d395c4/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59eed49115c98da4dca8387a89035e16a9d395c4/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=59eed49115c98da4dca8387a89035e16a9d395c4", "patch": "@@ -296,12 +296,7 @@ unsafe impl<'a> Searcher<'a> for CharSearcher<'a> {\n     fn next_match(&mut self) -> Option<(usize, usize)> {\n         loop {\n             // get the haystack after the last character found\n-            let bytes = if let Some(slice) = self.haystack.as_bytes()\n-                                                 .get(self.finger..self.finger_back) {\n-                slice\n-            } else {\n-                return None;\n-            };\n+            let bytes = self.haystack.as_bytes().get(self.finger..self.finger_back)?;\n             // the last byte of the utf8 encoded needle\n             let last_byte = unsafe { *self.utf8_encoded.get_unchecked(self.utf8_size - 1) };\n             if let Some(index) = memchr::memchr(last_byte, bytes) {"}]}