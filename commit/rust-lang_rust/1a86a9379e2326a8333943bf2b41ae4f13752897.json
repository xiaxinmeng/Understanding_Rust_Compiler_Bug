{"sha": "1a86a9379e2326a8333943bf2b41ae4f13752897", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhODZhOTM3OWUyMzI2YTgzMzM5NDNiZjJiNDFhZTRmMTM3NTI4OTc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-08T08:07:45Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-08T10:26:59Z"}, "message": "Rollup merge of #54007 - japaric:gh53964, r=cramertj\n\ncrates that provide a `panic_handler` are exempt from the `unused_extern_crates` lint\n\nfixes the *first* false positive reported in #53964", "tree": {"sha": "ebce0a272fb21a18c1cabfea7a1168d5f89a5ce5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebce0a272fb21a18c1cabfea7a1168d5f89a5ce5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a86a9379e2326a8333943bf2b41ae4f13752897", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAluTo/kACgkQ/vbIBR0O\nATxsRhAAumW+CTqRLGMuHWaOykF0vLBTKymEvys4e0eZQqBcmXcuHRPrG35XekCZ\nCYqC8WKA0Mvab3Sr+7JU3kixMmZqza3oqW9MK9s9+i3CZqvhoYbJrrqs8/8FNx26\n+hfEbSka7p4N+Ou9H3wvIHGO/m3HqeC/k1ulipdI6EyMGGT5Uwr4WLWa0pQtViae\n5AM+fIa9Uywt4KwUkAfjmGD3g4oMNNXZuMF4HAvUim92K6TELPtVnsfbzOK7IEip\nRLU7n+1jXMF0dYIHjM8RVQYKS2rC1jUFxCbbgjcrobiV5CousGlOpDJo3YtN2hD0\nA9AXo5hAyiiaLDoa2HH2CO+bEJerQG9/oL4hONTCZnAuANu9YTJwYZMEpyeyrDay\nu/HwbYi3rNHiNK4ko83g8lCirD97aZXK/h5xNgNHyOlqUofaLK1PHAg/CTCo8nWY\nkW9DdOtLhpMTsfvO2IFxUdRRoPBhUwQA66xqRc7KWvMfX3WXBlARTmbBmGNc05qU\nNA8iYJfOhXYUWeQtDgiXzCjgr8Imktjq5Vxmk6VBFo/9XRQZgBBmrijDpdF6H57Z\nbDDIUVU4xWKgdvP4rla2DNTSHXggtc2ts2chaJ8pPt0K9I/qhvYYoGxy2nsrrSfN\n1aWTy+vQPW7j3lACMoneD/PQlgAE5wTVU31otUldP/q013E6pHo=\n=XxMF\n-----END PGP SIGNATURE-----", "payload": "tree ebce0a272fb21a18c1cabfea7a1168d5f89a5ce5\nparent 407da0a8a2f56629220bf9421763345d992c2a79\nparent 6c4f3f512e65742367bb84880465460e74a8a24e\nauthor kennytm <kennytm@gmail.com> 1536394065 +0800\ncommitter kennytm <kennytm@gmail.com> 1536402419 +0800\n\nRollup merge of #54007 - japaric:gh53964, r=cramertj\n\ncrates that provide a `panic_handler` are exempt from the `unused_extern_crates` lint\n\nfixes the *first* false positive reported in #53964\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a86a9379e2326a8333943bf2b41ae4f13752897", "html_url": "https://github.com/rust-lang/rust/commit/1a86a9379e2326a8333943bf2b41ae4f13752897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a86a9379e2326a8333943bf2b41ae4f13752897/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "407da0a8a2f56629220bf9421763345d992c2a79", "url": "https://api.github.com/repos/rust-lang/rust/commits/407da0a8a2f56629220bf9421763345d992c2a79", "html_url": "https://github.com/rust-lang/rust/commit/407da0a8a2f56629220bf9421763345d992c2a79"}, {"sha": "6c4f3f512e65742367bb84880465460e74a8a24e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4f3f512e65742367bb84880465460e74a8a24e", "html_url": "https://github.com/rust-lang/rust/commit/6c4f3f512e65742367bb84880465460e74a8a24e"}], "stats": {"total": 74, "additions": 65, "deletions": 9}, "files": [{"sha": "d15568af6aebec8f6ea641da55543a2d38a7904e", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -574,6 +574,7 @@ define_dep_nodes!( <'tcx>\n     [] IsPanicRuntime(CrateNum),\n     [] IsCompilerBuiltins(CrateNum),\n     [] HasGlobalAllocator(CrateNum),\n+    [] HasPanicHandler(CrateNum),\n     [input] ExternCrate(DefId),\n     [eval_always] LintLevels,\n     [] Specializes { impl1: DefId, impl2: DefId },"}, {"sha": "272967282e03b2dce2337f2e3b5b1a036d5f130e", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -159,6 +159,9 @@ pub struct Session {\n     /// Metadata about the allocators for the current crate being compiled\n     pub has_global_allocator: Once<bool>,\n \n+    /// Metadata about the panic handlers for the current crate being compiled\n+    pub has_panic_handler: Once<bool>,\n+\n     /// Cap lint level specified by a driver specifically.\n     pub driver_lint_caps: FxHashMap<lint::LintId, lint::Level>,\n }\n@@ -1160,6 +1163,7 @@ pub fn build_session_(\n             (*GLOBAL_JOBSERVER).clone()\n         },\n         has_global_allocator: Once::new(),\n+        has_panic_handler: Once::new(),\n         driver_lint_caps: FxHashMap(),\n     };\n "}, {"sha": "2bbf5aacc1aca85192da2dffc29bf38a3ad04149", "filename": "src/librustc/ty/query/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -464,6 +464,12 @@ impl<'tcx> QueryDescription<'tcx> for queries::has_global_allocator<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription<'tcx> for queries::has_panic_handler<'tcx> {\n+    fn describe(_: TyCtxt, _: CrateNum) -> String {\n+        \"checking if the crate has_panic_handler\".to_string()\n+    }\n+}\n+\n impl<'tcx> QueryDescription<'tcx> for queries::extern_crate<'tcx> {\n     fn describe(_: TyCtxt, _: DefId) -> String {\n         \"getting crate's ExternCrateData\".to_string()"}, {"sha": "f0ca168e9e4679ce3db3ca4bcafeafcd13ec9b97", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -381,6 +381,7 @@ define_queries! { <'tcx>\n         [fatal_cycle] fn is_panic_runtime: IsPanicRuntime(CrateNum) -> bool,\n         [fatal_cycle] fn is_compiler_builtins: IsCompilerBuiltins(CrateNum) -> bool,\n         [fatal_cycle] fn has_global_allocator: HasGlobalAllocator(CrateNum) -> bool,\n+        [fatal_cycle] fn has_panic_handler: HasPanicHandler(CrateNum) -> bool,\n         [fatal_cycle] fn is_sanitizer_runtime: IsSanitizerRuntime(CrateNum) -> bool,\n         [fatal_cycle] fn is_profiler_runtime: IsProfilerRuntime(CrateNum) -> bool,\n         [fatal_cycle] fn panic_strategy: GetPanicStrategy(CrateNum) -> PanicStrategy,"}, {"sha": "3c26732fbac6719668136be524de7daf92b496f5", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -1168,6 +1168,7 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::IsPanicRuntime => { force!(is_panic_runtime, krate!()); }\n         DepKind::IsCompilerBuiltins => { force!(is_compiler_builtins, krate!()); }\n         DepKind::HasGlobalAllocator => { force!(has_global_allocator, krate!()); }\n+        DepKind::HasPanicHandler => { force!(has_panic_handler, krate!()); }\n         DepKind::ExternCrate => { force!(extern_crate, def_id!()); }\n         DepKind::LintLevels => { force!(lint_levels, LOCAL_CRATE); }\n         DepKind::InScopeTraits => { force!(in_scope_traits_map, def_id!().index); }"}, {"sha": "87a32b5a53e7a0d4365b4c1407dd0817c42d6b03", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -173,6 +173,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     is_panic_runtime => { cdata.root.panic_runtime }\n     is_compiler_builtins => { cdata.root.compiler_builtins }\n     has_global_allocator => { cdata.root.has_global_allocator }\n+    has_panic_handler => { cdata.root.has_panic_handler }\n     is_sanitizer_runtime => { cdata.root.sanitizer_runtime }\n     is_profiler_runtime => { cdata.root.profiler_runtime }\n     panic_strategy => { cdata.root.panic_strategy }"}, {"sha": "aae45c17c6771bd134b95bafcb22eef9d7ecb64f", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -484,6 +484,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         let is_proc_macro = tcx.sess.crate_types.borrow().contains(&CrateType::ProcMacro);\n         let has_default_lib_allocator = attr::contains_name(&attrs, \"default_lib_allocator\");\n         let has_global_allocator = *tcx.sess.has_global_allocator.get();\n+        let has_panic_handler = *tcx.sess.has_panic_handler.try_get().unwrap_or(&false);\n \n         let root = self.lazy(&CrateRoot {\n             name: tcx.crate_name(LOCAL_CRATE),\n@@ -494,6 +495,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             panic_strategy: tcx.sess.panic_strategy(),\n             edition: hygiene::default_edition(),\n             has_global_allocator: has_global_allocator,\n+            has_panic_handler: has_panic_handler,\n             has_default_lib_allocator: has_default_lib_allocator,\n             plugin_registrar_fn: tcx.sess\n                 .plugin_registrar_fn"}, {"sha": "ab22a8e4db9190bfa3bdfbcc89191fc9c36582ef", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -193,6 +193,7 @@ pub struct CrateRoot {\n     pub panic_strategy: PanicStrategy,\n     pub edition: Edition,\n     pub has_global_allocator: bool,\n+    pub has_panic_handler: bool,\n     pub has_default_lib_allocator: bool,\n     pub plugin_registrar_fn: Option<DefIndex>,\n     pub macro_derive_registrar: Option<DefIndex>,"}, {"sha": "a1e4c85f8214144a95ae2a2563723051e4cddb5a", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -1138,6 +1138,11 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n     if let Some(panic_impl_did) = fcx.tcx.lang_items().panic_impl() {\n         if panic_impl_did == fcx.tcx.hir.local_def_id(fn_id) {\n             if let Some(panic_info_did) = fcx.tcx.lang_items().panic_info() {\n+                // at this point we don't care if there are duplicate handlers or if the handler has\n+                // the wrong signature as this value we'll be used when writing metadata and that\n+                // only happens if compilation succeeded\n+                fcx.tcx.sess.has_panic_handler.try_set_same(true);\n+\n                 if declared_ret_ty.sty != ty::Never {\n                     fcx.tcx.sess.span_err(\n                         decl.output.span(),"}, {"sha": "5967bd1ba3eea9dcd93cf23e930083c642aa6198", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -117,6 +117,7 @@ fn unused_crates_lint<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) {\n             !tcx.is_compiler_builtins(cnum)\n                 && !tcx.is_panic_runtime(cnum)\n                 && !tcx.has_global_allocator(cnum)\n+                && !tcx.has_panic_handler(cnum)\n         })\n         .cloned()\n         .collect();"}, {"sha": "c56beb52fdd61ae3e6004f2823e28ee77b6458d6", "filename": "src/test/run-make-fulldeps/issue-53964/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2FMakefile?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -0,0 +1,5 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) panic.rs\n+\t$(RUSTC) -C panic=abort --emit=obj app.rs -L $(TMPDIR)"}, {"sha": "8127b9578bfee96f8d2c383ed794597d1e4804bc", "filename": "src/test/run-make-fulldeps/issue-53964/app.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2Fapp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2Fapp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2Fapp.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -0,0 +1,8 @@\n+#![crate_type = \"bin\"]\n+#![no_main]\n+#![no_std]\n+\n+#![deny(unused_extern_crates)]\n+\n+// `panic` provides a `panic_handler` so it shouldn't trip the `unused_extern_crates` lint\n+extern crate panic;"}, {"sha": "87c7b218822a0cdc323531f4a33736ed7ddeddfd", "filename": "src/test/run-make-fulldeps/issue-53964/panic.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-53964%2Fpanic.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+#![feature(panic_handler)]\n+#![no_std]\n+\n+use core::panic::PanicInfo;\n+\n+#[panic_handler]\n+fn panic(_: &PanicInfo) -> ! {\n+    loop {}\n+}"}, {"sha": "9762db38a1ca659b6c5841468ec5be3203a679d0", "filename": "src/test/ui/removing-extern-crate.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Fui%2Fremoving-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Fui%2Fremoving-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fremoving-extern-crate.rs?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -16,12 +16,12 @@\n #![warn(rust_2018_idioms)]\n #![allow(unused_imports)]\n \n-extern crate std as foo;\n+extern crate removing_extern_crate as foo;\n extern crate core;\n \n mod another {\n-    extern crate std as foo;\n-    extern crate std;\n+    extern crate removing_extern_crate as foo;\n+    extern crate core;\n }\n \n fn main() {}"}, {"sha": "758ec67d178239955770a4b94156ffc40ddd527c", "filename": "src/test/ui/removing-extern-crate.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a86a9379e2326a8333943bf2b41ae4f13752897/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fremoving-extern-crate.stderr?ref=1a86a9379e2326a8333943bf2b41ae4f13752897", "patch": "@@ -1,8 +1,8 @@\n warning: unused extern crate\n   --> $DIR/removing-extern-crate.rs:19:1\n    |\n-LL | extern crate std as foo;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n+LL | extern crate removing_extern_crate as foo;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n note: lint level defined here\n   --> $DIR/removing-extern-crate.rs:16:9\n@@ -20,12 +20,12 @@ LL | extern crate core;\n warning: unused extern crate\n   --> $DIR/removing-extern-crate.rs:23:5\n    |\n-LL |     extern crate std as foo;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n+LL |     extern crate removing_extern_crate as foo;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n \n warning: unused extern crate\n   --> $DIR/removing-extern-crate.rs:24:5\n    |\n-LL |     extern crate std;\n-   |     ^^^^^^^^^^^^^^^^^ help: remove it\n+LL |     extern crate core;\n+   |     ^^^^^^^^^^^^^^^^^^ help: remove it\n "}]}