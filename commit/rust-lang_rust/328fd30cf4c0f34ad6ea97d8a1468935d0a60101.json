{"sha": "328fd30cf4c0f34ad6ea97d8a1468935d0a60101", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOGZkMzBjZjRjMGYzNGFkNmVhOTdkOGExNDY4OTM1ZDBhNjAxMDE=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-29T00:41:20Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-30T01:39:27Z"}, "message": "Allow empty enums to be sent (#2737)", "tree": {"sha": "d3acf71687feb4621fe817f5b092c338b234f30c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3acf71687feb4621fe817f5b092c338b234f30c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/328fd30cf4c0f34ad6ea97d8a1468935d0a60101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/328fd30cf4c0f34ad6ea97d8a1468935d0a60101", "html_url": "https://github.com/rust-lang/rust/commit/328fd30cf4c0f34ad6ea97d8a1468935d0a60101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/328fd30cf4c0f34ad6ea97d8a1468935d0a60101/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a99912cddbc707a93d282055cabb950fbde3f55", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a99912cddbc707a93d282055cabb950fbde3f55", "html_url": "https://github.com/rust-lang/rust/commit/0a99912cddbc707a93d282055cabb950fbde3f55"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "75b45b804cdade6072393d47c57947a7f8c87a46", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/328fd30cf4c0f34ad6ea97d8a1468935d0a60101/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/328fd30cf4c0f34ad6ea97d8a1468935d0a60101/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=328fd30cf4c0f34ad6ea97d8a1468935d0a60101", "patch": "@@ -1569,7 +1569,7 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n         let mut lowest = kind_top();\n         let variants = enum_variants(cx, did);\n         if vec::len(*variants) == 0u {\n-            lowest = kind_noncopyable();\n+            lowest = kind_send_only();\n         } else {\n             for vec::each(*variants) {|variant|\n                 for variant.args.each {|aty|"}]}