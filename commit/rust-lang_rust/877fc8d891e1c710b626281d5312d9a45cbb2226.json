{"sha": "877fc8d891e1c710b626281d5312d9a45cbb2226", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3N2ZjOGQ4OTFlMWM3MTBiNjI2MjgxZDUzMTJkOWE0NWNiYjIyMjY=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-01-30T23:34:52Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-08T01:57:02Z"}, "message": "Pad out enum consts to the expected size; makes enums in tuples work.\n\nThis is wasted space if the const is just an enum, but optimizing that\ncase without breaking everything else is an issue that can be addressed\nseparately.", "tree": {"sha": "82de289822202eb118023eabd485f0b71901ac66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82de289822202eb118023eabd485f0b71901ac66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/877fc8d891e1c710b626281d5312d9a45cbb2226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/877fc8d891e1c710b626281d5312d9a45cbb2226", "html_url": "https://github.com/rust-lang/rust/commit/877fc8d891e1c710b626281d5312d9a45cbb2226", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/877fc8d891e1c710b626281d5312d9a45cbb2226/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52cf61fd3bf928de5ca56957e5e1a2dc88d10848", "url": "https://api.github.com/repos/rust-lang/rust/commits/52cf61fd3bf928de5ca56957e5e1a2dc88d10848", "html_url": "https://github.com/rust-lang/rust/commit/52cf61fd3bf928de5ca56957e5e1a2dc88d10848"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "a9dea596f7df57da0483ed41715de4681a4cf8b7", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/877fc8d891e1c710b626281d5312d9a45cbb2226/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877fc8d891e1c710b626281d5312d9a45cbb2226/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=877fc8d891e1c710b626281d5312d9a45cbb2226", "patch": "@@ -470,12 +470,20 @@ pub fn const_expr(cx: @crate_ctxt, e: @ast::expr) -> ValueRef {\n \n                 // FIXME (#1645): enum body alignment is generaly wrong.\n                 if !degen {\n+                    // Pad out the data to the size of its type_of;\n+                    // this is necessary if the enum is contained\n+                    // within an aggregate (tuple, struct, vector) so\n+                    // that the next element is at the right offset.\n+                    let actual_size =\n+                        machine::llsize_of_real(cx, llvm::LLVMTypeOf(c_args));\n+                    let padding =\n+                        C_null(T_array(T_i8(), size - actual_size));\n                     // A packed_struct has an alignment of 1; thus,\n                     // wrapping one around c_args will misalign it the\n                     // same way we normally misalign enum bodies\n                     // without affecting its internal alignment or\n                     // changing the alignment of the enum.\n-                    C_struct(~[discrim, C_packed_struct(~[c_args])])\n+                    C_struct(~[discrim, C_packed_struct(~[c_args]), padding])\n                 } else if size == 0 {\n                     C_struct(~[discrim])\n                 } else {"}, {"sha": "a55554921c497ad078c26a5f9d79165e5c83f33e", "filename": "src/test/run-pass/const-enum-tuple.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/877fc8d891e1c710b626281d5312d9a45cbb2226/src%2Ftest%2Frun-pass%2Fconst-enum-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877fc8d891e1c710b626281d5312d9a45cbb2226/src%2Ftest%2Frun-pass%2Fconst-enum-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-enum-tuple.rs?ref=877fc8d891e1c710b626281d5312d9a45cbb2226", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum E { V16(u16), V32(u32) }\n+const C: (E, u16, u16) = (V16(0xDEAD), 0x600D, 0xBAD);\n+\n+fn main() {\n+    let (_, n, _) = C;\n+    assert n != 0xBAD;\n+    assert n == 0x600D;\n+}"}]}