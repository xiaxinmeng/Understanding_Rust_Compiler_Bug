{"sha": "cede5e53b3af92c12ae7ba6591fce7f8ca81979f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZGU1ZTUzYjNhZjkyYzEyYWU3YmE2NTkxZmNlN2Y4Y2E4MTk3OWY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-19T20:03:46Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-19T21:30:01Z"}, "message": "rt: Call maybe_gc on mallocs", "tree": {"sha": "441629abbc494baac5e9364af96cc949009820dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/441629abbc494baac5e9364af96cc949009820dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cede5e53b3af92c12ae7ba6591fce7f8ca81979f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cede5e53b3af92c12ae7ba6591fce7f8ca81979f", "html_url": "https://github.com/rust-lang/rust/commit/cede5e53b3af92c12ae7ba6591fce7f8ca81979f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cede5e53b3af92c12ae7ba6591fce7f8ca81979f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "390dd3861933db71339dba01f09a83594a85d3eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/390dd3861933db71339dba01f09a83594a85d3eb", "html_url": "https://github.com/rust-lang/rust/commit/390dd3861933db71339dba01f09a83594a85d3eb"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "9b8743dd03e3820eea296a09379445d02271ffb0", "filename": "src/rt/rust_gc.cpp", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/cede5e53b3af92c12ae7ba6591fce7f8ca81979f/src%2Frt%2Frust_gc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/cede5e53b3af92c12ae7ba6591fce7f8ca81979f/src%2Frt%2Frust_gc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gc.cpp?ref=cede5e53b3af92c12ae7ba6591fce7f8ca81979f", "patch": "@@ -3,6 +3,7 @@\n #include <utility>\n #include <stdint.h>\n \n+#include \"rust_gc.h\"\n #include \"rust_internal.h\"\n \n #ifdef __WIN32__\n@@ -31,38 +32,51 @@ class safe_point_map {\n \n public:\n     safe_point_map() {\n-        const uintptr_t *data;\n-#ifdef __WIN32__\n-        data = (const uintptr_t *)GetProcAddress(GetModuleHandle(NULL),\n-                                                 \"rust_gc_safe_points\");\n-#else\n-        data = (const uintptr_t *)dlsym(RTLD_DEFAULT, \"rust_gc_safe_points\");\n-#endif\n+        const uintptr_t *data = get_safe_point_data();\n         n_safe_points = *data++;\n         index = (const std::pair<void *,const safe_point *> *)data;\n         data += n_safe_points * 2;\n         safe_points = (const safe_point *)data;\n     }\n+\n+    static const uintptr_t *get_safe_point_data() {\n+        static bool init = false;\n+        static const uintptr_t *data;\n+        if (!init) {\n+#ifdef __WIN32__\n+            data = (const uintptr_t *)GetProcAddress(GetModuleHandle(NULL),\n+                                                     \"rust_gc_safe_points\");\n+#else\n+            data = (const uintptr_t *)dlsym(RTLD_DEFAULT,\n+                                            \"rust_gc_safe_points\");\n+#endif\n+            init = true;\n+        }\n+        return data;\n+    }\n };\n \n void\n-gc() {\n+gc(rust_task *task) {\n     safe_point_map map;\n \n     // TODO\n }\n \n void\n-maybe_gc() {\n+maybe_gc(rust_task *task) {\n+    if (safe_point_map::get_safe_point_data() == NULL)\n+        return;\n+\n     // FIXME: We ought to lock this.\n     static int zeal = -1;\n     if (zeal == -1) {\n         char *ev = getenv(\"RUST_GC_ZEAL\");\n-        zeal = ev[0] != '\\0' && ev[0] != '0';\n+        zeal = ev && ev[0] != '\\0' && ev[0] != '0';\n     }\n \n     if (zeal)\n-        gc();\n+        gc(task);\n }\n \n }"}, {"sha": "45349dc0f912e7f845e7aa7914cb1a9c5c423f19", "filename": "src/rt/rust_gc.h", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cede5e53b3af92c12ae7ba6591fce7f8ca81979f/src%2Frt%2Frust_gc.h", "raw_url": "https://github.com/rust-lang/rust/raw/cede5e53b3af92c12ae7ba6591fce7f8ca81979f/src%2Frt%2Frust_gc.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gc.h?ref=cede5e53b3af92c12ae7ba6591fce7f8ca81979f", "patch": "@@ -0,0 +1,10 @@\n+// Rust garbage collection.\n+\n+struct rust_task;\n+\n+namespace gc {\n+\n+void maybe_gc(rust_task *task);\n+\n+}\n+"}, {"sha": "9462db80af13332655242e4ac840d7edd03a3e77", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cede5e53b3af92c12ae7ba6591fce7f8ca81979f/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/cede5e53b3af92c12ae7ba6591fce7f8ca81979f/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=cede5e53b3af92c12ae7ba6591fce7f8ca81979f", "patch": "@@ -1,3 +1,4 @@\n+#include \"rust_gc.h\"\n #include \"rust_internal.h\"\n #include \"rust_upcall.h\"\n \n@@ -130,6 +131,8 @@ upcall_malloc(rust_task *task, size_t nbytes, type_desc *td) {\n         \" with gc-chain head = 0x%\" PRIxPTR,\n         nbytes, td, task->gc_alloc_chain);\n \n+    gc::maybe_gc(task);\n+\n     // TODO: Maybe use dladdr here to find a more useful name for the\n     // type_desc.\n "}]}