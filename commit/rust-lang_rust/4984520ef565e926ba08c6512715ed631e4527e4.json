{"sha": "4984520ef565e926ba08c6512715ed631e4527e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ODQ1MjBlZjU2NWU5MjZiYTA4YzY1MTI3MTVlZDYzMWU0NTI3ZTQ=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-05-22T23:27:11Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-05-22T23:27:11Z"}, "message": "Use default instead of new in AssistDirector", "tree": {"sha": "d0748a2e7c4b233c934df30ca5c36f08c6610832", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0748a2e7c4b233c934df30ca5c36f08c6610832"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4984520ef565e926ba08c6512715ed631e4527e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4984520ef565e926ba08c6512715ed631e4527e4", "html_url": "https://github.com/rust-lang/rust/commit/4984520ef565e926ba08c6512715ed631e4527e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4984520ef565e926ba08c6512715ed631e4527e4/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fce10200a0d666fbd2e2faa84b0526f586485bb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fce10200a0d666fbd2e2faa84b0526f586485bb3", "html_url": "https://github.com/rust-lang/rust/commit/fce10200a0d666fbd2e2faa84b0526f586485bb3"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "bc54814948de475aa46fc93e74768e46d92349ec", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4984520ef565e926ba08c6512715ed631e4527e4/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4984520ef565e926ba08c6512715ed631e4527e4/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=4984520ef565e926ba08c6512715ed631e4527e4", "patch": "@@ -181,7 +181,7 @@ impl Assists {\n         if !self.resolve {\n             return None;\n         }\n-        let mut director = AssistDirector::new();\n+        let mut director = AssistDirector::default();\n         f(&mut director);\n         let changes = director.finish();\n         let file_edits: Vec<SourceFileEdit> =\n@@ -296,10 +296,6 @@ pub(crate) struct AssistDirector {\n }\n \n impl AssistDirector {\n-    fn new() -> AssistDirector {\n-        AssistDirector { builders: FxHashMap::default() }\n-    }\n-\n     pub(crate) fn perform(&mut self, file_id: FileId, f: impl FnOnce(&mut AssistBuilder)) {\n         let mut builder = self.builders.entry(file_id).or_insert(AssistBuilder::new(file_id));\n         f(&mut builder);\n@@ -312,3 +308,9 @@ impl AssistDirector {\n             .collect::<Vec<SourceChange>>()\n     }\n }\n+\n+impl Default for AssistDirector {\n+    fn default() -> Self {\n+        AssistDirector { builders: FxHashMap::default() }\n+    }\n+}"}]}