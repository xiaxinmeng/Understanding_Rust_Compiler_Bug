{"sha": "2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90", "node_id": "C_kwDOAAsO6NoAKDJlMGNhOTQ3MmJhM2VjMTUzMmJiNzUyZjdlYTFmNDc3ZjhjMzRjOTA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T14:48:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T14:48:43Z"}, "message": "add a concrete example", "tree": {"sha": "96aaf5779f927e5bbb176933849e38ed0abd3c0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96aaf5779f927e5bbb176933849e38ed0abd3c0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90", "html_url": "https://github.com/rust-lang/rust/commit/2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6247ffa5afb29fd86d54db8062ff031daa10555", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6247ffa5afb29fd86d54db8062ff031daa10555", "html_url": "https://github.com/rust-lang/rust/commit/f6247ffa5afb29fd86d54db8062ff031daa10555"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "d7ed82e71b6a4bea9160e4a28534c00b5a0a61e0", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=2e0ca9472ba3ec1532bb752f7ea1f477f8c34c90", "patch": "@@ -2550,14 +2550,23 @@ pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n ///\n /// * `dst` must be properly aligned.\n ///\n-/// Additionally, note that changing `*dst` in this way can lead to undefined behavior later if the\n-/// written bytes are not a valid representation of some `T`. For instance, if `dst: *mut bool`, a\n-/// `dst.write_bytes(0xFFu8, 1)` followed by `dst.read()` is undefined behavior since the `read`\n-/// tries to construct a `bool` value from `0xFF` which does not represent any `bool`.\n-///\n /// Note that even if the effectively copied size (`count * size_of::<T>()`) is\n /// `0`, the pointer must be non-null and properly aligned.\n ///\n+/// Additionally, note that changing `*dst` in this way can easily lead to undefined behavior (UB)\n+/// later if the written bytes are not a valid representation of some `T`. For instance, the\n+/// follwing is an **incorrect** use of this function:\n+///\n+/// ```rust,no_run\n+/// unsafe {\n+///     let mut value: u8 = 0;\n+///     let ptr: *mut bool = &mut value as *mut u8 as *mut bool;\n+///     let _bool = ptr.read(); // This is fine, `ptr` points to a valid `bool`.\n+///     ptr.write_bytes(42u8, 1); // This function itself does not cause UB...\n+///     let _bool = ptr.read(); // ...but it makes this operation UB! \u26a0\ufe0f\n+/// }\n+/// ```\n+///\n /// [valid]: crate::ptr#safety\n ///\n /// # Examples"}]}