{"sha": "3159335ac308d9e3a2d3ada3b9354bf160debbdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNTkzMzVhYzMwOGQ5ZTNhMmQzYWRhM2I5MzU0YmYxNjBkZWJiZGM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-01T14:31:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-01T15:03:12Z"}, "message": "avoid broken += operator, bogus use of const", "tree": {"sha": "636443cd5ff7b03e347ccf2ab7b8574634dba4c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/636443cd5ff7b03e347ccf2ab7b8574634dba4c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3159335ac308d9e3a2d3ada3b9354bf160debbdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3159335ac308d9e3a2d3ada3b9354bf160debbdc", "html_url": "https://github.com/rust-lang/rust/commit/3159335ac308d9e3a2d3ada3b9354bf160debbdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3159335ac308d9e3a2d3ada3b9354bf160debbdc/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af2d90af59bb5e28e5d114d8a6004d68fad3bd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af2d90af59bb5e28e5d114d8a6004d68fad3bd5", "html_url": "https://github.com/rust-lang/rust/commit/4af2d90af59bb5e28e5d114d8a6004d68fad3bd5"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "58a477900c3248113495824c2ca5d685d8195516", "filename": "src/test/run-pass/auto-ref-slice-plus-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3159335ac308d9e3a2d3ada3b9354bf160debbdc/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3159335ac308d9e3a2d3ada3b9354bf160debbdc/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs?ref=3159335ac308d9e3a2d3ada3b9354bf160debbdc", "patch": "@@ -23,7 +23,7 @@ impl<'self> MyIter for &'self [int] {\n \n impl<'self> MyIter for &'self str {\n     fn test_imm(&self) { assert_eq!(*self, \"test\") }\n-    fn test_const(&const self) { assert_eq!(self[0], 't') }\n+    fn test_const(&const self) { assert_eq!(self[0], 't' as u8) }\n }\n \n pub fn main() {"}, {"sha": "4aeeda8312cac8f2d6be997057b5b7827bf0c7fa", "filename": "src/test/run-pass/lambda-infer-unresolved.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3159335ac308d9e3a2d3ada3b9354bf160debbdc/src%2Ftest%2Frun-pass%2Flambda-infer-unresolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3159335ac308d9e3a2d3ada3b9354bf160debbdc/src%2Ftest%2Frun-pass%2Flambda-infer-unresolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flambda-infer-unresolved.rs?ref=3159335ac308d9e3a2d3ada3b9354bf160debbdc", "patch": "@@ -17,5 +17,5 @@ struct Refs { refs: ~[int], n: int }\n pub fn main() {\n     let e = @mut Refs{refs: ~[], n: 0};\n     let f: @fn() = || error!(copy e.n);\n-    e.refs += ~[1];\n+    e.refs.push(1);\n }"}, {"sha": "5b01d24aa8be1142c2c5744d4f26e3c44c6b82d6", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3159335ac308d9e3a2d3ada3b9354bf160debbdc/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3159335ac308d9e3a2d3ada3b9354bf160debbdc/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=3159335ac308d9e3a2d3ada3b9354bf160debbdc", "patch": "@@ -513,16 +513,16 @@ impl TyVisitor for my_visitor {\n     fn visit_bot(&self) -> bool { true }\n     fn visit_nil(&self) -> bool { true }\n     fn visit_bool(&self) -> bool {\n-      do self.get::<bool>() |b| {\n-            self.vals += ~[bool::to_str(b)];\n-      };\n-      true\n+        do self.get::<bool>() |b| {\n+            self.vals.push(bool::to_str(b));\n+        };\n+        true\n     }\n     fn visit_int(&self) -> bool {\n-      do self.get::<int>() |i| {\n-            self.vals += ~[int::to_str(i)];\n-      };\n-      true\n+        do self.get::<int>() |i| {\n+            self.vals.push(int::to_str(i));\n+        };\n+        true\n     }\n     fn visit_i8(&self) -> bool { true }\n     fn visit_i16(&self) -> bool { true }"}]}