{"sha": "d88dfd25225ccebffd913021a48d22b27d611292", "node_id": "C_kwDOAAsO6NoAKGQ4OGRmZDI1MjI1Y2NlYmZmZDkxMzAyMWE0OGQyMmIyN2Q2MTEyOTI", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-29T16:22:40Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-05-06T16:11:04Z"}, "message": "use hir_module_items in check_mod_item_types query\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "013865ec28eb2a839543c428d7a6d19230b80b04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/013865ec28eb2a839543c428d7a6d19230b80b04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d88dfd25225ccebffd913021a48d22b27d611292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d88dfd25225ccebffd913021a48d22b27d611292", "html_url": "https://github.com/rust-lang/rust/commit/d88dfd25225ccebffd913021a48d22b27d611292", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d88dfd25225ccebffd913021a48d22b27d611292/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422dd3b8dc4b864020e0369d74ce6f0a919cb936", "url": "https://api.github.com/repos/rust-lang/rust/commits/422dd3b8dc4b864020e0369d74ce6f0a919cb936", "html_url": "https://github.com/rust-lang/rust/commit/422dd3b8dc4b864020e0369d74ce6f0a919cb936"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "eaec8d2e370b74cb5085a7765756b82baaefeaea", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d88dfd25225ccebffd913021a48d22b27d611292/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d88dfd25225ccebffd913021a48d22b27d611292/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=d88dfd25225ccebffd913021a48d22b27d611292", "patch": "@@ -1451,7 +1451,11 @@ pub(super) fn check_type_params_are_used<'tcx>(\n }\n \n pub(super) fn check_mod_item_types(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n-    tcx.hir().visit_item_likes_in_module(module_def_id, &mut CheckItemTypesVisitor { tcx });\n+    let module = tcx.hir_module_items(module_def_id);\n+    for id in module.items() {\n+        let item = tcx.hir().item(id);\n+        check_item_type(tcx, item)\n+    }\n }\n \n pub(super) use wfcheck::check_item_well_formed;"}]}