{"sha": "93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYjk1ZGQzOTRjOWM5OGM5YTAwYmZjYmRjMGQ2YzljOGM1OTc2MmU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-20T18:46:28Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-20T19:12:13Z"}, "message": "fix typo", "tree": {"sha": "0df271860272d44a66fc167fcfd13b9e4d1a8f89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0df271860272d44a66fc167fcfd13b9e4d1a8f89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e", "html_url": "https://github.com/rust-lang/rust/commit/93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69e46f3aa922fa651fe53b36a295011c590f09e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/69e46f3aa922fa651fe53b36a295011c590f09e4", "html_url": "https://github.com/rust-lang/rust/commit/69e46f3aa922fa651fe53b36a295011c590f09e4"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7c2856b75776af9b587822794a9b86d2140ab1a4", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=93b95dd394c9c98c9a00bfcbdc0d6c9c8c59762e", "patch": "@@ -297,7 +297,7 @@ pub mod write {\n             if !sess.no_prepopulate_passes() {\n                 llvm::LLVMRustAddAnalysisPasses(tm, fpm, llmod);\n                 llvm::LLVMRustAddAnalysisPasses(tm, mpm, llmod);\n-                populate_llvm_passess(fpm, mpm, llmod, OptLevel);\n+                populate_llvm_passes(fpm, mpm, llmod, OptLevel);\n             }\n \n             for pass in sess.opts.custom_passes.iter() {\n@@ -422,10 +422,10 @@ pub mod write {\n         }\n     }\n \n-    unsafe fn populate_llvm_passess(fpm: lib::llvm::PassManagerRef,\n-                                    mpm: lib::llvm::PassManagerRef,\n-                                    llmod: ModuleRef,\n-                                    opt: lib::llvm::CodeGenOptLevel) {\n+    unsafe fn populate_llvm_passes(fpm: lib::llvm::PassManagerRef,\n+                                   mpm: lib::llvm::PassManagerRef,\n+                                   llmod: ModuleRef,\n+                                   opt: lib::llvm::CodeGenOptLevel) {\n         // Create the PassManagerBuilder for LLVM. We configure it with\n         // reasonable defaults and prepare it to actually populate the pass\n         // manager."}]}