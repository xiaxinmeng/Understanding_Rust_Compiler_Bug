{"sha": "30abfd65a2105b967e38473cee50d15ac5e1fdc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYWJmZDY1YTIxMDViOTY3ZTM4NDczY2VlNTBkMTVhYzVlMWZkYzc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-12T03:55:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-12T03:55:55Z"}, "message": "Merge pull request #2274 from topecongiro/better-error-msg\n\nAttempt to improve error meassage from rustfmt", "tree": {"sha": "15e36765cca25d96eff4dd951b08a1e12bdb9130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15e36765cca25d96eff4dd951b08a1e12bdb9130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30abfd65a2105b967e38473cee50d15ac5e1fdc7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaL1NLCRBK7hj4Ov3rIwAAdHIIAKTK8Sk8p4Nik51eGYEEmKxZ\n8FEsbLudkkcfkLdN7IisZT16CFC3zotpOb4QUZHiNUWjea1+L1/H8MVTWnQeqwIx\n0MkzCkNpn6yEWGKfVUQ0PeBQDCqmU+iEouFiSMkHzEvocBA6lrTMkV8/fzi5ks62\np8EDM90XDWNlCKaairHBoyRbPjVJuGMyo5AHYM2J3m4hKKKGVED/5i7QX3qKJ4Ty\n2KCWrub8c3M4s+1cM6bTHlrJRA0q+Uri0CSOg2fZhF9YlmY6zFbElVvQkNLsToCa\nlS1Z+j+R4HXeA7HzIcbBFrowWLZ3VLvzmxGDxo1LtEGkq2KSUDGLex28ZnswfDk=\n=5ttb\n-----END PGP SIGNATURE-----\n", "payload": "tree 15e36765cca25d96eff4dd951b08a1e12bdb9130\nparent 6ce082e3f19b8e1b32c378973d44f482595a73d7\nparent 17154c30cbd68db17589acd63bc5f86e5902202d\nauthor Nick Cameron <nrc@ncameron.org> 1513050955 +1300\ncommitter GitHub <noreply@github.com> 1513050955 +1300\n\nMerge pull request #2274 from topecongiro/better-error-msg\n\nAttempt to improve error meassage from rustfmt"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30abfd65a2105b967e38473cee50d15ac5e1fdc7", "html_url": "https://github.com/rust-lang/rust/commit/30abfd65a2105b967e38473cee50d15ac5e1fdc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30abfd65a2105b967e38473cee50d15ac5e1fdc7/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce082e3f19b8e1b32c378973d44f482595a73d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce082e3f19b8e1b32c378973d44f482595a73d7", "html_url": "https://github.com/rust-lang/rust/commit/6ce082e3f19b8e1b32c378973d44f482595a73d7"}, {"sha": "17154c30cbd68db17589acd63bc5f86e5902202d", "url": "https://api.github.com/repos/rust-lang/rust/commits/17154c30cbd68db17589acd63bc5f86e5902202d", "html_url": "https://github.com/rust-lang/rust/commit/17154c30cbd68db17589acd63bc5f86e5902202d"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "f4b9c08182115932eef1ef41f0b5fb5eadd5971e", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/30abfd65a2105b967e38473cee50d15ac5e1fdc7/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30abfd65a2105b967e38473cee50d15ac5e1fdc7/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=30abfd65a2105b967e38473cee50d15ac5e1fdc7", "patch": "@@ -350,7 +350,7 @@ fn main() {\n             }\n         }\n         Err(e) => {\n-            print_usage_to_stderr(&opts, &e.to_string());\n+            eprintln!(\"{}\", e.to_string());\n             1\n         }\n     };\n@@ -364,23 +364,18 @@ fn main() {\n     std::process::exit(exit_code);\n }\n \n-macro_rules! print_usage {\n-    ($print:ident, $opts:ident, $reason:expr) => ({\n-        let msg = format!(\n-            \"{}\\n\\nusage: {} [options] <file>...\",\n-            $reason,\n-            env::args_os().next().unwrap().to_string_lossy()\n-        );\n-        $print!(\"{}\", $opts.usage(&msg));\n-    })\n-}\n-\n fn print_usage_to_stdout(opts: &Options, reason: &str) {\n-    print_usage!(println, opts, reason);\n-}\n-\n-fn print_usage_to_stderr(opts: &Options, reason: &str) {\n-    print_usage!(eprintln, opts, reason);\n+    let sep = if reason.is_empty() {\n+        String::new()\n+    } else {\n+        format!(\"{}\\n\\n\", reason)\n+    };\n+    let msg = format!(\n+        \"{}Format Rust code\\n\\nusage: {} [options] <file>...\",\n+        sep,\n+        env::args_os().next().unwrap().to_string_lossy()\n+    );\n+    println!(\"{}\", opts.usage(&msg));\n }\n \n fn print_version() {"}, {"sha": "ff90a96b91ef1eff1e0098cc4dc88255c79864c4", "filename": "src/config.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/30abfd65a2105b967e38473cee50d15ac5e1fdc7/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30abfd65a2105b967e38473cee50d15ac5e1fdc7/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=30abfd65a2105b967e38473cee50d15ac5e1fdc7", "patch": "@@ -394,22 +394,23 @@ macro_rules! create_config {\n                             $(\n                                 stringify!($i) => (),\n                             )+\n-                                _ => {\n-                                    let msg =\n-                                        &format!(\"Warning: Unknown configuration option `{}`\\n\",\n-                                                 key);\n-                                    err.push_str(msg)\n-                                }\n+                            _ => {\n+                                let msg =\n+                                    &format!(\"Warning: Unknown configuration option `{}`\\n\", key);\n+                                err.push_str(msg)\n+                            }\n                         }\n                     }\n                 }\n                 match parsed.try_into() {\n-                    Ok(parsed_config) =>\n-                        Ok(Config::default().fill_from_parsed_config(parsed_config)),\n+                    Ok(parsed_config) => {\n+                        eprintln!(\"{}\", err);\n+                        Ok(Config::default().fill_from_parsed_config(parsed_config))\n+                    }\n                     Err(e) => {\n                         err.push_str(\"Error: Decoding config file failed:\\n\");\n                         err.push_str(format!(\"{}\\n\", e).as_str());\n-                        err.push_str(\"Please check your config file.\\n\");\n+                        err.push_str(\"Please check your config file.\");\n                         Err(err)\n                     }\n                 }"}]}