{"sha": "adf85d35c70916297729a157f93df08d0c15be6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZjg1ZDM1YzcwOTE2Mjk3NzI5YTE1N2Y5M2RmMDhkMGMxNWJlNmM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-09-20T19:27:48Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-09-20T19:27:48Z"}, "message": "libtest: add a --skip flag to the test runner\n\nThis flag takes a FILTER argument and instructs the test runner to skip\nthe tests whose names contain the word FILTER. --skip can be used\nseveral times.", "tree": {"sha": "661b3dd1abb072e349c01d2d98eb9bd47dc6d618", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/661b3dd1abb072e349c01d2d98eb9bd47dc6d618"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adf85d35c70916297729a157f93df08d0c15be6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adf85d35c70916297729a157f93df08d0c15be6c", "html_url": "https://github.com/rust-lang/rust/commit/adf85d35c70916297729a157f93df08d0c15be6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adf85d35c70916297729a157f93df08d0c15be6c/comments", "author": null, "committer": null, "parents": [{"sha": "2c2552b712386dd01a9d620aff960b98cddb4098", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c2552b712386dd01a9d620aff960b98cddb4098", "html_url": "https://github.com/rust-lang/rust/commit/2c2552b712386dd01a9d620aff960b98cddb4098"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3b97246ea145fa59237ce217d5d6cf77c42647c8", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/adf85d35c70916297729a157f93df08d0c15be6c/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adf85d35c70916297729a157f93df08d0c15be6c/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=adf85d35c70916297729a157f93df08d0c15be6c", "patch": "@@ -303,6 +303,7 @@ pub struct TestOpts {\n     pub color: ColorConfig,\n     pub quiet: bool,\n     pub test_threads: Option<usize>,\n+    pub skip: Vec<String>,\n }\n \n impl TestOpts {\n@@ -318,6 +319,7 @@ impl TestOpts {\n             color: AutoColor,\n             quiet: false,\n             test_threads: None,\n+            skip: vec![],\n         }\n     }\n }\n@@ -337,6 +339,8 @@ fn optgroups() -> Vec<getopts::OptGroup> {\n                                          task, allow printing directly\"),\n       getopts::optopt(\"\", \"test-threads\", \"Number of threads used for running tests \\\n                                            in parallel\", \"n_threads\"),\n+      getopts::optmulti(\"\", \"skip\", \"Skip tests whose names contain FILTER (this flag can \\\n+                                     be used multiple times)\",\"FILTER\"),\n       getopts::optflag(\"q\", \"quiet\", \"Display one character per test instead of one line\"),\n       getopts::optopt(\"\", \"color\", \"Configure coloring of output:\n             auto   = colorize if stdout is a tty and tests are run on serially (default);\n@@ -446,6 +450,7 @@ pub fn parse_opts(args: &[String]) -> Option<OptRes> {\n         color: color,\n         quiet: quiet,\n         test_threads: test_threads,\n+        skip: matches.opt_strs(\"skip\"),\n     };\n \n     Some(Ok(test_opts))\n@@ -1095,6 +1100,11 @@ pub fn filter_tests(opts: &TestOpts, tests: Vec<TestDescAndFn>) -> Vec<TestDescA\n         }\n     };\n \n+    // Skip tests that match any of the skip filters\n+    filtered = filtered.into_iter()\n+        .filter(|t| !opts.skip.iter().any(|sf| t.desc.name.as_slice().contains(&sf[..])))\n+        .collect();\n+\n     // Maybe pull out the ignored test and unignore them\n     filtered = if !opts.run_ignored {\n         filtered"}]}