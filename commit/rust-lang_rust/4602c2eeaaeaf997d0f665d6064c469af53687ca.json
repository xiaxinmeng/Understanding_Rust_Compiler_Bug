{"sha": "4602c2eeaaeaf997d0f665d6064c469af53687ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MDJjMmVlYWFlYWY5OTdkMGY2NjVkNjA2NGM0NjlhZjUzNjg3Y2E=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-30T15:00:17Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-30T15:00:17Z"}, "message": "analysis-stats: allow parallel type inference", "tree": {"sha": "b875fa6c1975bcbd98bfdface040adf06437ad8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b875fa6c1975bcbd98bfdface040adf06437ad8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4602c2eeaaeaf997d0f665d6064c469af53687ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4602c2eeaaeaf997d0f665d6064c469af53687ca", "html_url": "https://github.com/rust-lang/rust/commit/4602c2eeaaeaf997d0f665d6064c469af53687ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4602c2eeaaeaf997d0f665d6064c469af53687ca/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0954d31beeb924510769fe8e201386a7cc3621f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0954d31beeb924510769fe8e201386a7cc3621f8", "html_url": "https://github.com/rust-lang/rust/commit/0954d31beeb924510769fe8e201386a7cc3621f8"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "eb03caa83937d4c3b23f9680e35e1b4b1159b7fb", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4602c2eeaaeaf997d0f665d6064c469af53687ca/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4602c2eeaaeaf997d0f665d6064c469af53687ca/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=4602c2eeaaeaf997d0f665d6064c469af53687ca", "patch": "@@ -1485,6 +1485,7 @@ dependencies = [\n  \"ra_toolchain\",\n  \"ra_tt\",\n  \"rand\",\n+ \"rayon\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\","}, {"sha": "837b6714d503168f41db28c1ae1e6b3cf44b4a03", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=4602c2eeaaeaf997d0f665d6064c469af53687ca", "patch": "@@ -28,6 +28,7 @@ rustc-hash = \"1.1.0\"\n serde = { version = \"1.0.106\", features = [\"derive\"] }\n serde_json = \"1.0.48\"\n threadpool = \"1.7.1\"\n+rayon = \"1.3.1\"\n \n stdx = { path = \"../stdx\" }\n "}, {"sha": "8a0b101174998f4a6355014f37ceb46cfc76653d", "filename": "crates/rust-analyzer/src/bin/args.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs?ref=4602c2eeaaeaf997d0f665d6064c469af53687ca", "patch": "@@ -25,6 +25,7 @@ pub(crate) enum Command {\n     },\n     Stats {\n         randomize: bool,\n+        parallel: bool,\n         memory_usage: bool,\n         only: Option<String>,\n         with_deps: bool,\n@@ -157,10 +158,14 @@ USAGE:\n     rust-analyzer analysis-stats [FLAGS] [OPTIONS] [PATH]\n \n FLAGS:\n+    -o, --only              Only analyze items matching this path\n     -h, --help              Prints help information\n-        --memory-usage\n+        --memory-usage      Collect memory usage statistics (requires `--feature jemalloc`)\n+        --randomize         Randomize order in which crates, modules, and items are processed\n+        --parallel          Run type inference in parallel\n         --load-output-dirs  Load OUT_DIR values by running `cargo check` before analysis\n-        --with-proc-macro    Use ra-proc-macro-srv for proc-macro expanding\n+        --with-proc-macro   Use ra-proc-macro-srv for proc-macro expanding\n+        --with-deps         Also analyze all dependencies\n     -v, --verbose\n     -q, --quiet\n \n@@ -174,6 +179,7 @@ ARGS:\n                 }\n \n                 let randomize = matches.contains(\"--randomize\");\n+                let parallel = matches.contains(\"--parallel\");\n                 let memory_usage = matches.contains(\"--memory-usage\");\n                 let only: Option<String> = matches.opt_value_from_str([\"-o\", \"--only\"])?;\n                 let with_deps: bool = matches.contains(\"--with-deps\");\n@@ -189,6 +195,7 @@ ARGS:\n \n                 Command::Stats {\n                     randomize,\n+                    parallel,\n                     memory_usage,\n                     only,\n                     with_deps,\n@@ -209,7 +216,7 @@ USAGE:\n FLAGS:\n     -h, --help          Prints help information\n     --load-output-dirs  Load OUT_DIR values by running `cargo check` before analysis\n-    --with-proc-macro    Use ra-proc-macro-srv for proc-macro expanding\n+    --with-proc-macro   Use ra-proc-macro-srv for proc-macro expanding\n     -v, --verbose\n \n OPTIONS:"}, {"sha": "0f55c3ee2b2ebc41496500f1c871ba6deee8cc8e", "filename": "crates/rust-analyzer/src/bin/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs?ref=4602c2eeaaeaf997d0f665d6064c469af53687ca", "patch": "@@ -32,6 +32,7 @@ fn main() -> Result<()> {\n         args::Command::Highlight { rainbow } => cli::highlight(rainbow)?,\n         args::Command::Stats {\n             randomize,\n+            parallel,\n             memory_usage,\n             only,\n             with_deps,\n@@ -45,6 +46,7 @@ fn main() -> Result<()> {\n             only.as_ref().map(String::as_ref),\n             with_deps,\n             randomize,\n+            parallel,\n             load_output_dirs,\n             with_proc_macro,\n         )?,"}, {"sha": "14982919dbb79a644291636f3c50ed3806d74cee", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4602c2eeaaeaf997d0f665d6064c469af53687ca/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=4602c2eeaaeaf997d0f665d6064c469af53687ca", "patch": "@@ -5,6 +5,7 @@ use std::{path::Path, time::Instant};\n \n use itertools::Itertools;\n use rand::{seq::SliceRandom, thread_rng};\n+use rayon::prelude::*;\n use rustc_hash::FxHashSet;\n \n use hir::{\n@@ -13,19 +14,31 @@ use hir::{\n };\n use hir_def::FunctionId;\n use hir_ty::{Ty, TypeWalk};\n-use ra_db::SourceDatabaseExt;\n+use ra_db::{\n+    salsa::{self, ParallelDatabase},\n+    SourceDatabaseExt,\n+};\n use ra_syntax::AstNode;\n use stdx::format_to;\n \n use crate::cli::{load_cargo::load_cargo, progress_report::ProgressReport, Result, Verbosity};\n \n+/// Need to wrap Snapshot to provide `Clone` impl for `map_with`\n+struct Snap<DB>(DB);\n+impl<DB: ParallelDatabase> Clone for Snap<salsa::Snapshot<DB>> {\n+    fn clone(&self) -> Snap<salsa::Snapshot<DB>> {\n+        Snap(self.0.snapshot())\n+    }\n+}\n+\n pub fn analysis_stats(\n     verbosity: Verbosity,\n     memory_usage: bool,\n     path: &Path,\n     only: Option<&str>,\n     with_deps: bool,\n     randomize: bool,\n+    parallel: bool,\n     load_output_dirs: bool,\n     with_proc_macro: bool,\n ) -> Result<()> {\n@@ -91,12 +104,26 @@ pub fn analysis_stats(\n         funcs.shuffle(&mut thread_rng());\n     }\n \n-    let inference_time = Instant::now();\n     let mut bar = match verbosity {\n         Verbosity::Quiet | Verbosity::Spammy => ProgressReport::hidden(),\n         _ => ProgressReport::new(funcs.len() as u64),\n     };\n \n+    if parallel {\n+        let inference_time = Instant::now();\n+        let snap = Snap(db.snapshot());\n+        funcs\n+            .par_iter()\n+            .map_with(snap, |snap, &f| {\n+                let f_id = FunctionId::from(f);\n+                snap.0.body(f_id.into());\n+                snap.0.infer(f_id.into());\n+            })\n+            .count();\n+        println!(\"Parallel Inference: {:?}, {}\", inference_time.elapsed(), ra_prof::memory_usage());\n+    }\n+\n+    let inference_time = Instant::now();\n     bar.tick();\n     let mut num_exprs = 0;\n     let mut num_exprs_unknown = 0;"}]}