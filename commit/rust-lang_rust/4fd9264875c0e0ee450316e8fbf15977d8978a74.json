{"sha": "4fd9264875c0e0ee450316e8fbf15977d8978a74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZDkyNjQ4NzVjMGUwZWU0NTAzMTZlOGZiZjE1OTc3ZDg5NzhhNzQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-03T22:12:33Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-03T23:20:59Z"}, "message": "oldmap: &K instead of K for the remove parameter", "tree": {"sha": "f569ed797bd1794d36c1b25cee36be4712451cbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f569ed797bd1794d36c1b25cee36be4712451cbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fd9264875c0e0ee450316e8fbf15977d8978a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fd9264875c0e0ee450316e8fbf15977d8978a74", "html_url": "https://github.com/rust-lang/rust/commit/4fd9264875c0e0ee450316e8fbf15977d8978a74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fd9264875c0e0ee450316e8fbf15977d8978a74/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "119c78073b6a0ab62b90d05d12eac58af2a5cfb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/119c78073b6a0ab62b90d05d12eac58af2a5cfb4", "html_url": "https://github.com/rust-lang/rust/commit/119c78073b6a0ab62b90d05d12eac58af2a5cfb4"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "960bcf88eb7ef7fc3b2ff972f01ffbfa841a1472", "filename": "src/libcargo/cargo.rc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibcargo%2Fcargo.rc", "raw_url": "https://github.com/rust-lang/rust/raw/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibcargo%2Fcargo.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcargo%2Fcargo.rc?ref=4fd9264875c0e0ee450316e8fbf15977d8978a74", "patch": "@@ -1687,7 +1687,7 @@ pub fn cmd_sources(c: &Cargo) {\n     match action {\n         ~\"clear\" => {\n           for c.sources.each_key_ref |&k| {\n-                c.sources.remove(k);\n+                c.sources.remove(&k);\n             }\n \n             info(~\"cleared sources\");\n@@ -1734,7 +1734,7 @@ pub fn cmd_sources(c: &Cargo) {\n             }\n \n             if c.sources.contains_key_ref(&name) {\n-                c.sources.remove(name);\n+                c.sources.remove(&name);\n                 info(fmt!(\"removed source: %s\", name));\n             } else {\n                 error(fmt!(\"no such source: %s\", name));\n@@ -1825,7 +1825,7 @@ pub fn cmd_sources(c: &Cargo) {\n \n             match c.sources.find(name) {\n                 Some(source) => {\n-                    c.sources.remove(name);\n+                    c.sources.remove(&name);\n                     c.sources.insert(newn, source);\n                     info(fmt!(\"renamed source: %s to %s\", name, newn));\n                 }"}, {"sha": "6913cf8e2f5187e83d14b5f94c92f0842f5e46ef", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=4fd9264875c0e0ee450316e8fbf15977d8978a74", "patch": "@@ -1198,7 +1198,7 @@ pub fn compile_guard(bcx: block,\n                 }\n                 TrByRef | TrByImplicitRef => {}\n             }\n-            bcx.fcx.lllocals.remove(binding_info.id);\n+            bcx.fcx.lllocals.remove(&binding_info.id);\n         }\n         return bcx;\n     }"}, {"sha": "1a8e25239b34a28f40b4ccdb6ecf917ed7688e72", "filename": "src/librustc/middle/typeck/infer/region_inference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs?ref=4fd9264875c0e0ee450316e8fbf15977d8978a74", "patch": "@@ -712,11 +712,11 @@ pub impl RegionVarBindings {\n                 assert self.var_spans.len() == *vid + 1;\n                 self.var_spans.pop();\n               }\n-              AddConstraint(constraint) => {\n+              AddConstraint(ref constraint) => {\n                 self.constraints.remove(constraint);\n               }\n               AddCombination(map, ref regions) => {\n-                map.remove((*regions));\n+                map.remove(regions);\n               }\n             }\n         }"}, {"sha": "8e76cc6a7d2a2c3b82393d0b7573b07d3e07d77e", "filename": "src/libstd/oldmap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibstd%2Foldmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Flibstd%2Foldmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foldmap.rs?ref=4fd9264875c0e0ee450316e8fbf15977d8978a74", "patch": "@@ -299,8 +299,8 @@ pub mod chained {\n             option::unwrap(move opt_v)\n         }\n \n-        fn remove(k: K) -> bool {\n-            match self.search_tbl(&k, k.hash_keyed(0,0) as uint) {\n+        fn remove(k: &K) -> bool {\n+            match self.search_tbl(k, k.hash_keyed(0,0) as uint) {\n               NotFound => false,\n               FoundFirst(idx, entry) => {\n                 self.count -= 1u;\n@@ -578,7 +578,7 @@ mod tests {\n         debug!(\"removing evens\");\n         i = 0u;\n         while i < num_to_insert {\n-            let v = hm.remove(i);\n+            let v = hm.remove(&i);\n             assert v;\n             i += 2u;\n         }"}, {"sha": "ecb228e401df17c2004c39c4bd56e99a853cdbae", "filename": "src/test/bench/core-map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Ftest%2Fbench%2Fcore-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Ftest%2Fbench%2Fcore-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-map.rs?ref=4fd9264875c0e0ee450316e8fbf15977d8978a74", "patch": "@@ -64,7 +64,7 @@ fn old_int_benchmarks(rng: @rand::Rng, num_keys: uint, results: &mut Results) {\n \n         do timed(&mut results.delete_ints) {\n             for uint::range(0, num_keys) |i| {\n-                assert map.remove(i);\n+                assert map.remove(&i);\n             }\n         }\n     }\n@@ -103,7 +103,7 @@ fn old_str_benchmarks(rng: @rand::Rng, num_keys: uint, results: &mut Results) {\n         }\n         do timed(&mut results.delete_strings) {\n             for uint::range(0, num_keys) |i| {\n-                assert map.remove(uint::to_str(i, 10));\n+                assert map.remove(&uint::to_str(i, 10));\n             }\n         }\n     }"}, {"sha": "8cf57b19825935786e3adcdbe70d617eab544879", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fd9264875c0e0ee450316e8fbf15977d8978a74/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=4fd9264875c0e0ee450316e8fbf15977d8978a74", "patch": "@@ -138,7 +138,7 @@ fn writer(path: ~str, pport: pipes::Port<Line>, size: uint)\n                     debug!(\"WS %u\", prev);\n                     cout.write(lines.get(prev));\n                     done += 1_u;\n-                    lines.remove(prev);\n+                    lines.remove(&prev);\n                     prev += 1_u;\n                 }\n                 else {"}]}