{"sha": "ca1616c75b64bf7edebefcc70be010e5ac736c97", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMTYxNmM3NWI2NGJmN2VkZWJlZmNjNzBiZTAxMGU1YWM3MzZjOTc=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-08-16T20:00:17Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-09-10T20:28:11Z"}, "message": "Add ui test for issue 88074", "tree": {"sha": "9cf30d9df26839b9e41e54ce1770287de47827f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cf30d9df26839b9e41e54ce1770287de47827f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca1616c75b64bf7edebefcc70be010e5ac736c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca1616c75b64bf7edebefcc70be010e5ac736c97", "html_url": "https://github.com/rust-lang/rust/commit/ca1616c75b64bf7edebefcc70be010e5ac736c97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca1616c75b64bf7edebefcc70be010e5ac736c97/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8dae4f8e51d3085664cf5035b0c7d9c237207c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8dae4f8e51d3085664cf5035b0c7d9c237207c8", "html_url": "https://github.com/rust-lang/rust/commit/d8dae4f8e51d3085664cf5035b0c7d9c237207c8"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "27db7d8c7ab9dbfa0d66d50fd871ebe7969e39af", "filename": "src/test/ui/pattern/issue-88074-pat-range-type-inference.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ca1616c75b64bf7edebefcc70be010e5ac736c97/src%2Ftest%2Fui%2Fpattern%2Fissue-88074-pat-range-type-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca1616c75b64bf7edebefcc70be010e5ac736c97/src%2Ftest%2Fui%2Fpattern%2Fissue-88074-pat-range-type-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-88074-pat-range-type-inference.rs?ref=ca1616c75b64bf7edebefcc70be010e5ac736c97", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+\n+trait Zero {\n+    const ZERO: Self;\n+}\n+\n+impl Zero for i32 {\n+    const ZERO: Self = 0;\n+}\n+\n+fn main() {\n+    match 1 {\n+        Zero::ZERO ..= 1 => {},\n+        _ => {},\n+    }\n+}"}]}