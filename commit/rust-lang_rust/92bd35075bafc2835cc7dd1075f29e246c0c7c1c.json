{"sha": "92bd35075bafc2835cc7dd1075f29e246c0c7c1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYmQzNTA3NWJhZmMyODM1Y2M3ZGQxMDc1ZjI5ZTI0NmMwYzdjMWM=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-06-15T21:25:53Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-06-15T21:25:53Z"}, "message": "Step 2 of cdecl task transition.", "tree": {"sha": "f1cea5448c8ea7c358733bf78997294fdff9d98b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1cea5448c8ea7c358733bf78997294fdff9d98b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92bd35075bafc2835cc7dd1075f29e246c0c7c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92bd35075bafc2835cc7dd1075f29e246c0c7c1c", "html_url": "https://github.com/rust-lang/rust/commit/92bd35075bafc2835cc7dd1075f29e246c0c7c1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92bd35075bafc2835cc7dd1075f29e246c0c7c1c/comments", "author": null, "committer": null, "parents": [{"sha": "6a3f4abc6f4a72f12c4868612684a9925110e722", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3f4abc6f4a72f12c4868612684a9925110e722", "html_url": "https://github.com/rust-lang/rust/commit/6a3f4abc6f4a72f12c4868612684a9925110e722"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "aa5d96a3719cabf0564879963bfb7a44b7265f17", "filename": "src/rt/main.ll.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/92bd35075bafc2835cc7dd1075f29e246c0c7c1c/src%2Frt%2Fmain.ll.in", "raw_url": "https://github.com/rust-lang/rust/raw/92bd35075bafc2835cc7dd1075f29e246c0c7c1c/src%2Frt%2Fmain.ll.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmain.ll.in?ref=92bd35075bafc2835cc7dd1075f29e246c0c7c1c", "patch": "@@ -10,7 +10,7 @@\n @_rust_crate_map_toplevel = external global %0\n \n declare fastcc void @_rust_main(i1* nocapture, %task*, %2* nocapture, %5*);\n-declare i32 @rust_start(i32, i32, i32, i32, i32)\n+declare i32 @rust_start(i32, i32, i32, i32)\n \n %tydesc = type { %tydesc**, i32, i32, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*, i8*, i8)* }\n \n@@ -23,7 +23,6 @@ define void @_rust_main_wrap(i1* nocapture, %task *, %2* nocapture, %5 *)\n }\n \n define i32 @\"MAIN\"(i32, i32) {\n-;  %3 = tail call i32 @rust_start(i32 ptrtoint (void (i1*, %task*, %2*, %5*)* @_rust_main_wrap to i32), i32 %0, i32 %1, i32 ptrtoint (%0* @_rust_crate_map_toplevel to i32))\n-  %3 = tail call i32 @rust_start(i32 0, i32 %0, i32 %1, i32 ptrtoint (%0* @_rust_crate_map_toplevel to i32), i32 ptrtoint (void (i1*, %task*, %2*, %5*)* @_rust_main_wrap to i32))\n+  %3 = tail call i32 @rust_start(i32 ptrtoint (void (i1*, %task*, %2*, %5*)* @_rust_main_wrap to i32), i32 %0, i32 %1, i32 ptrtoint (%0* @_rust_crate_map_toplevel to i32))\n   ret i32 %3\n }"}, {"sha": "bed8a21d991cbaaa7df3b6ed876843ccc71fb13d", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/92bd35075bafc2835cc7dd1075f29e246c0c7c1c/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/92bd35075bafc2835cc7dd1075f29e246c0c7c1c/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=92bd35075bafc2835cc7dd1075f29e246c0c7c1c", "patch": "@@ -71,16 +71,6 @@ command_line_args : public dom_owned<command_line_args>\n     }\n };\n \n-// THIS IS AN UGLY HACK TO MAKE rust_start STILL WORK WITH STAGE0 WHILE WE\n-// TRANSITION TO ALL-CDECL TASK STARTUP FUNCTIONS.\n-void FASTCALL\n-(*real_main)(uintptr_t a, uintptr_t b, uintptr_t c, uintptr_t d) = NULL;\n-\n-void CDECL fake_main(uintptr_t a, uintptr_t b, uintptr_t c, uintptr_t d)\n-{\n-    real_main(a, b, c, d);\n-}\n-\n /**\n  * Main entry point into the Rust runtime. Here we create a Rust service,\n  * initialize the kernel, create the root domain and run it.\n@@ -104,9 +94,9 @@ rust_start(uintptr_t main_fn, int argc, char **argv, void* crate_map,\n         DLOG(dom, dom, \"startup: arg[%d] = '%s'\", i, args->argv[i]);\n     }\n \n-    real_main = (typeof(real_main))main_fn;\n-    if(main_fn) { printf(\"using fastcall main\\n\"); }\n-    dom->root_task->start(main_fn ? (uintptr_t)fake_main : main_fn_cdecl,\n+    if(main_fn) { printf(\"using new cdecl main\\n\"); }\n+    else { printf(\"using old cdecl main\\n\"); }\n+    dom->root_task->start(main_fn ? main_fn : main_fn_cdecl,\n                           (uintptr_t)args->args, sizeof(args->args));\n \n     int ret = dom->start_main_loop();"}]}