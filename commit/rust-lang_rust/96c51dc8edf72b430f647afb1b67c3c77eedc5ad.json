{"sha": "96c51dc8edf72b430f647afb1b67c3c77eedc5ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YzUxZGM4ZWRmNzJiNDMwZjY0N2FmYjFiNjdjM2M3N2VlZGM1YWQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-13T07:55:48Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-13T07:55:48Z"}, "message": "Make sum repr discriminant an arbitrary repr.", "tree": {"sha": "4d6374261d5bfbcd6c5944d3ef3dcc60bb2645af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d6374261d5bfbcd6c5944d3ef3dcc60bb2645af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96c51dc8edf72b430f647afb1b67c3c77eedc5ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96c51dc8edf72b430f647afb1b67c3c77eedc5ad", "html_url": "https://github.com/rust-lang/rust/commit/96c51dc8edf72b430f647afb1b67c3c77eedc5ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96c51dc8edf72b430f647afb1b67c3c77eedc5ad/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dad5edd4f351621fd7b609d70b611858d8d13cd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dad5edd4f351621fd7b609d70b611858d8d13cd1", "html_url": "https://github.com/rust-lang/rust/commit/dad5edd4f351621fd7b609d70b611858d8d13cd1"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "e71bd8d061886efb07dc2c9edc10ec91bc4098ab", "filename": "src/interpreter.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/96c51dc8edf72b430f647afb1b67c3c77eedc5ad/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c51dc8edf72b430f647afb1b67c3c77eedc5ad/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=96c51dc8edf72b430f647afb1b67c3c77eedc5ad", "patch": "@@ -277,10 +277,10 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                         ty::AdtKind::Struct => self.assign_to_product(dest, &dest_repr, operands),\n \n                         ty::AdtKind::Enum => match dest_repr {\n-                            Repr::Sum { discr_size, ref variants, .. } => {\n+                            Repr::Sum { ref discr, ref variants, .. } => {\n                                 // TODO(tsion): Write the discriminant value.\n                                 self.assign_to_product(\n-                                    dest.offset(discr_size),\n+                                    dest.offset(discr.size()),\n                                     &variants[variant_idx],\n                                     operands\n                                 )\n@@ -426,16 +426,16 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n             ty::TyEnum(adt_def, ref subst) => {\n                 let num_variants = adt_def.variants.len();\n \n-                let discr_size = if num_variants <= 1 {\n-                    0\n+                let discr = if num_variants <= 1 {\n+                    Repr::Product { size: 0, fields: vec![] }\n                 } else if num_variants <= 1 << 8 {\n-                    1\n+                    Repr::I8\n                 } else if num_variants <= 1 << 16 {\n-                    2\n+                    Repr::I16\n                 } else if num_variants <= 1 << 32 {\n-                    4\n+                    Repr::I32\n                 } else {\n-                    8\n+                    Repr::I64\n                 };\n \n                 let variants: Vec<Repr> = adt_def.variants.iter().map(|v| {\n@@ -444,7 +444,7 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                 }).collect();\n \n                 Repr::Sum {\n-                    discr_size: discr_size,\n+                    discr: Box::new(discr),\n                     max_variant_size: variants.iter().map(Repr::size).max().unwrap_or(0),\n                     variants: variants,\n                 }"}, {"sha": "a1681d28b81d924be760d86d981e611099e21f85", "filename": "src/memory.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/96c51dc8edf72b430f647afb1b67c3c77eedc5ad/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c51dc8edf72b430f647afb1b67c3c77eedc5ad/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=96c51dc8edf72b430f647afb1b67c3c77eedc5ad", "patch": "@@ -50,13 +50,10 @@ pub enum Repr {\n \n     /// The representation for a sum type, i.e. a Rust enum.\n     Sum {\n-        /// The size of the discriminant in bytes.\n-        discr_size: usize,\n-\n         /// The size of the largest variant in bytes.\n         max_variant_size: usize,\n-\n         variants: Vec<Repr>,\n+        discr: Box<Repr>,\n     },\n \n     // Array {\n@@ -221,7 +218,7 @@ impl Repr {\n             Repr::I32 => 4,\n             Repr::I64 => 8,\n             Repr::Product { size, .. } => size,\n-            Repr::Sum { discr_size, max_variant_size, .. } => discr_size + max_variant_size,\n+            Repr::Sum { ref discr, max_variant_size, .. } => discr.size() + max_variant_size,\n         }\n     }\n }"}]}