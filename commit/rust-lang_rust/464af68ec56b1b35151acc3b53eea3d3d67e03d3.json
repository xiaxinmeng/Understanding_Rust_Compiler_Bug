{"sha": "464af68ec56b1b35151acc3b53eea3d3d67e03d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NGFmNjhlYzU2YjFiMzUxNTFhY2MzYjUzZWVhM2QzZDY3ZTAzZDM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-13T17:23:33Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-13T17:23:33Z"}, "message": "Remove format from syntax_bridge hot path", "tree": {"sha": "c1df12e8441fd640e817f0ba143a2eea700e721a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1df12e8441fd640e817f0ba143a2eea700e721a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/464af68ec56b1b35151acc3b53eea3d3d67e03d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/464af68ec56b1b35151acc3b53eea3d3d67e03d3", "html_url": "https://github.com/rust-lang/rust/commit/464af68ec56b1b35151acc3b53eea3d3d67e03d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/464af68ec56b1b35151acc3b53eea3d3d67e03d3/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ecdba20df41a800222d0fd864843843feb6e875", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ecdba20df41a800222d0fd864843843feb6e875", "html_url": "https://github.com/rust-lang/rust/commit/0ecdba20df41a800222d0fd864843843feb6e875"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "31e9b22e7dc415bc40504f3016dabf80e71a3d21", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/464af68ec56b1b35151acc3b53eea3d3d67e03d3/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/464af68ec56b1b35151acc3b53eea3d3d67e03d3/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=464af68ec56b1b35151acc3b53eea3d3d67e03d3", "patch": "@@ -607,12 +607,13 @@ impl<'a> TreeSink for TtTreeSink<'a> {\n             let text: SmolStr = match self.cursor.token_tree() {\n                 Some(tt::TokenTree::Leaf(leaf)) => {\n                     // Mark the range if needed\n-                    let id = match leaf {\n-                        tt::Leaf::Ident(ident) => ident.id,\n-                        tt::Leaf::Punct(punct) => punct.id,\n-                        tt::Leaf::Literal(lit) => lit.id,\n+                    let (text, id) = match leaf {\n+                        tt::Leaf::Ident(ident) => (ident.text.clone(), ident.id),\n+                        tt::Leaf::Punct(punct) => {\n+                            (SmolStr::new_inline_from_ascii(1, &[punct.char as u8]), punct.id)\n+                        }\n+                        tt::Leaf::Literal(lit) => (lit.text.clone(), lit.id),\n                     };\n-                    let text = SmolStr::new(format!(\"{}\", leaf));\n                     let range = TextRange::offset_len(self.text_pos, TextUnit::of_str(&text));\n                     self.token_map.insert(id, range);\n                     self.cursor = self.cursor.bump();"}]}