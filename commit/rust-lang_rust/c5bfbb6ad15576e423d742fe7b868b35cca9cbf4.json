{"sha": "c5bfbb6ad15576e423d742fe7b868b35cca9cbf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YmZiYjZhZDE1NTc2ZTQyM2Q3NDJmZTdiODY4YjM1Y2NhOWNiZjQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-16T18:02:44Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-20T19:18:20Z"}, "message": "Update const prop", "tree": {"sha": "ace129746fb452e0b9537591bff2cf8efa2aa7fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ace129746fb452e0b9537591bff2cf8efa2aa7fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5bfbb6ad15576e423d742fe7b868b35cca9cbf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5bfbb6ad15576e423d742fe7b868b35cca9cbf4", "html_url": "https://github.com/rust-lang/rust/commit/c5bfbb6ad15576e423d742fe7b868b35cca9cbf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5bfbb6ad15576e423d742fe7b868b35cca9cbf4/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fda0fd859a63b9ba4247a12f4327a8e0ca6ae57", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fda0fd859a63b9ba4247a12f4327a8e0ca6ae57", "html_url": "https://github.com/rust-lang/rust/commit/0fda0fd859a63b9ba4247a12f4327a8e0ca6ae57"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1a0ac4a21dfa0c54ff1094c45fe79cba8c474cb1", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c5bfbb6ad15576e423d742fe7b868b35cca9cbf4/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5bfbb6ad15576e423d742fe7b868b35cca9cbf4/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=c5bfbb6ad15576e423d742fe7b868b35cca9cbf4", "patch": "@@ -331,7 +331,6 @@ struct ConstPropagator<'mir, 'tcx> {\n     // by accessing them through `ecx` instead.\n     source_scopes: IndexVec<SourceScope, SourceScopeData>,\n     local_decls: IndexVec<Local, LocalDecl<'tcx>>,\n-    ret: Option<OpTy<'tcx, ()>>,\n     // Because we have `MutVisitor` we can't obtain the `SourceInfo` from a `Location`. So we store\n     // the last known `SourceInfo` here and just keep revisiting it.\n     source_info: Option<SourceInfo>,\n@@ -403,22 +402,23 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             source_scopes: body.source_scopes.clone(),\n             //FIXME(wesleywiser) we can't steal this because `Visitor::super_visit_body()` needs it\n             local_decls: body.local_decls.clone(),\n-            ret: ret.map(Into::into),\n             source_info: None,\n         }\n     }\n \n     fn get_const(&self, local: Local) -> Option<OpTy<'tcx>> {\n+        let op = self.ecx.access_local(self.ecx.frame(), local, None).ok();\n+\n         if local == RETURN_PLACE {\n             // Try to read the return place as an immediate so that if it is representable as a\n             // scalar, we can handle it as such, but otherwise, just return the value as is.\n-            return match self.ret.map(|ret| self.ecx.try_read_immediate(ret)) {\n+            return match op.map(|ret| self.ecx.try_read_immediate(ret)) {\n                 Some(Ok(Ok(imm))) => Some(imm.into()),\n-                _ => self.ret,\n+                _ => op,\n             };\n         }\n \n-        self.ecx.access_local(self.ecx.frame(), local, None).ok()\n+        op\n     }\n \n     fn remove_const(&mut self, local: Local) {"}]}