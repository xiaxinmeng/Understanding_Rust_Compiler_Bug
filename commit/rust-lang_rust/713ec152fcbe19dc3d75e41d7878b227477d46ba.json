{"sha": "713ec152fcbe19dc3d75e41d7878b227477d46ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxM2VjMTUyZmNiZTE5ZGMzZDc1ZTQxZDc4NzhiMjI3NDc3ZDQ2YmE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-25T19:02:56Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-28T14:06:52Z"}, "message": "Share `IndirectlyMutableLocals` results via reference", "tree": {"sha": "f0bdddc92d995517272f8554682aa40581da7088", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0bdddc92d995517272f8554682aa40581da7088"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/713ec152fcbe19dc3d75e41d7878b227477d46ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/713ec152fcbe19dc3d75e41d7878b227477d46ba", "html_url": "https://github.com/rust-lang/rust/commit/713ec152fcbe19dc3d75e41d7878b227477d46ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/713ec152fcbe19dc3d75e41d7878b227477d46ba/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a14d17c4d7f8a5cc6a068355230c811f0fef19b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a14d17c4d7f8a5cc6a068355230c811f0fef19b", "html_url": "https://github.com/rust-lang/rust/commit/1a14d17c4d7f8a5cc6a068355230c811f0fef19b"}], "stats": {"total": 61, "additions": 35, "deletions": 26}, "files": [{"sha": "52c471ad691e4ff134982ebd788ef6f143f09029", "filename": "src/librustc_mir/transform/check_consts/resolver.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/713ec152fcbe19dc3d75e41d7878b227477d46ba/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713ec152fcbe19dc3d75e41d7878b227477d46ba/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs?ref=713ec152fcbe19dc3d75e41d7878b227477d46ba", "patch": "@@ -4,7 +4,6 @@ use rustc_data_structures::bit_set::BitSet;\n \n use std::cell::RefCell;\n use std::marker::PhantomData;\n-use std::rc::Rc;\n \n use crate::dataflow::{self as old_dataflow, generic as dataflow};\n use super::{Item, Qualif};\n@@ -164,7 +163,7 @@ pub trait QualifResolver<Q> {\n     fn reset(&mut self);\n }\n \n-type IndirectlyMutableResults<'mir, 'tcx> =\n+pub type IndirectlyMutableResults<'mir, 'tcx> =\n     old_dataflow::DataflowResultsCursor<'mir, 'tcx, IndirectlyMutableLocals<'mir, 'tcx>>;\n \n /// A resolver for qualifs that works on arbitrarily complex CFGs.\n@@ -181,7 +180,7 @@ where\n     Q: Qualif,\n {\n     location: Location,\n-    indirectly_mutable_locals: Rc<RefCell<IndirectlyMutableResults<'mir, 'tcx>>>,\n+    indirectly_mutable_locals: &'a RefCell<IndirectlyMutableResults<'mir, 'tcx>>,\n     cursor: dataflow::ResultsCursor<'mir, 'tcx, FlowSensitiveAnalysis<'a, 'mir, 'tcx, Q>>,\n     qualifs_per_local: BitSet<Local>,\n }\n@@ -193,7 +192,7 @@ where\n     pub fn new(\n         _: Q,\n         item: &'a Item<'mir, 'tcx>,\n-        indirectly_mutable_locals: Rc<RefCell<IndirectlyMutableResults<'mir, 'tcx>>>,\n+        indirectly_mutable_locals: &'a RefCell<IndirectlyMutableResults<'mir, 'tcx>>,\n         dead_unwinds: &BitSet<BasicBlock>,\n     ) -> Self {\n         let analysis = FlowSensitiveAnalysis {"}, {"sha": "74bf70f05e6871182beb1597cf5bc5505f29c053", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 30, "deletions": 21, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/713ec152fcbe19dc3d75e41d7878b227477d46ba/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713ec152fcbe19dc3d75e41d7878b227477d46ba/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=713ec152fcbe19dc3d75e41d7878b227477d46ba", "patch": "@@ -11,11 +11,10 @@ use syntax_pos::Span;\n use std::cell::RefCell;\n use std::fmt;\n use std::ops::Deref;\n-use std::rc::Rc;\n \n use crate::dataflow as old_dataflow;\n use super::{Item, Qualif, is_lang_panic_fn};\n-use super::resolver::{QualifResolver, FlowSensitiveResolver};\n+use super::resolver::{FlowSensitiveResolver, IndirectlyMutableResults, QualifResolver};\n use super::qualifs::{HasMutInterior, NeedsDrop};\n use super::ops::{self, NonConstOp};\n \n@@ -127,37 +126,47 @@ impl Deref for Validator<'_, 'mir, 'tcx> {\n     }\n }\n \n+pub fn compute_indirectly_mutable_locals<'mir, 'tcx>(\n+    item: &Item<'mir, 'tcx>,\n+) -> RefCell<IndirectlyMutableResults<'mir, 'tcx>> {\n+    let dead_unwinds = BitSet::new_empty(item.body.basic_blocks().len());\n+\n+    let indirectly_mutable_locals = old_dataflow::do_dataflow(\n+        item.tcx,\n+        item.body,\n+        item.def_id,\n+        &[],\n+        &dead_unwinds,\n+        old_dataflow::IndirectlyMutableLocals::new(item.tcx, item.body, item.param_env),\n+        |_, local| old_dataflow::DebugFormatted::new(&local),\n+    );\n+\n+    let indirectly_mutable_locals = old_dataflow::DataflowResultsCursor::new(\n+        indirectly_mutable_locals,\n+        item.body,\n+    );\n+\n+    RefCell::new(indirectly_mutable_locals)\n+}\n+\n impl Validator<'a, 'mir, 'tcx> {\n-    pub fn new(item: &'a Item<'mir, 'tcx>) -> Self {\n+    pub fn new(\n+        item: &'a Item<'mir, 'tcx>,\n+        indirectly_mutable_locals: &'a RefCell<IndirectlyMutableResults<'mir, 'tcx>>,\n+    ) -> Self {\n         let dead_unwinds = BitSet::new_empty(item.body.basic_blocks().len());\n \n-        let indirectly_mutable_locals = old_dataflow::do_dataflow(\n-            item.tcx,\n-            item.body,\n-            item.def_id,\n-            &[],\n-            &dead_unwinds,\n-            old_dataflow::IndirectlyMutableLocals::new(item.tcx, item.body, item.param_env),\n-            |_, local| old_dataflow::DebugFormatted::new(&local),\n-        );\n-\n-        let indirectly_mutable_locals = old_dataflow::DataflowResultsCursor::new(\n-            indirectly_mutable_locals,\n-            item.body,\n-        );\n-        let indirectly_mutable_locals = Rc::new(RefCell::new(indirectly_mutable_locals));\n-\n         let needs_drop = FlowSensitiveResolver::new(\n             NeedsDrop,\n             item,\n-            indirectly_mutable_locals.clone(),\n+            indirectly_mutable_locals,\n             &dead_unwinds,\n         );\n \n         let has_mut_interior = FlowSensitiveResolver::new(\n             HasMutInterior,\n             item,\n-            indirectly_mutable_locals.clone(),\n+            indirectly_mutable_locals,\n             &dead_unwinds,\n         );\n "}, {"sha": "387540655f07b72665109053a466d1a1e867d84a", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/713ec152fcbe19dc3d75e41d7878b227477d46ba/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713ec152fcbe19dc3d75e41d7878b227477d46ba/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=713ec152fcbe19dc3d75e41d7878b227477d46ba", "patch": "@@ -957,7 +957,8 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n         }\n \n         let item = new_checker::Item::new(self.tcx, self.def_id, self.body);\n-        let mut validator = new_checker::validation::Validator::new(&item);\n+        let mut_borrowed_locals = new_checker::validation::compute_indirectly_mutable_locals(&item);\n+        let mut validator = new_checker::validation::Validator::new(&item, &mut_borrowed_locals);\n \n         validator.suppress_errors = !use_new_validator;\n         self.suppress_errors = use_new_validator;"}]}