{"sha": "be34bc46ed7699c598e4525b07e04067e19e49aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMzRiYzQ2ZWQ3Njk5YzU5OGU0NTI1YjA3ZTA0MDY3ZTE5ZTQ5YWE=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-04T19:47:16Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-04T19:52:03Z"}, "message": "Downgrade unreadable_literal to pedantic", "tree": {"sha": "c7f02548b28bc94288d46046caf5621aa96c4378", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f02548b28bc94288d46046caf5621aa96c4378"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be34bc46ed7699c598e4525b07e04067e19e49aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl6I5WMACgkQ+boUO5X/\nbYLlgA/7BY11nyxnf32oOJqb0CrQHK6BROF3/uj4AefwwcQ3NWiqJWw/vlsF0Wdl\nzHii2NCI+dAnCnIEgJfBhxKTGeqSHC6HmbrbdvaZ8TV/mqJGJY5akKLQXjXgDx+u\n52wGp6yndRDVrGqbq7uenpD+i5N7kAn5ZPbSHtQPEFzNN0R+NZ+emPRMgqIe7Cw6\nXmBblyFVpho0yS9NW7ZdkODVZc9VkDJl1vs69ZydR/h2VBUQHZy/OA/c+5ztFR+I\nSMuu0+Qbtl2Dkvg9ApRBP7JtamgIeaD+2GhJ8cVpmrYDC8ZOSPfGiSCgfGaeO5I1\nRfViRqm82suQQ0qeagfibDXraij8HUC8NvlXUSBUpyJipXv0KPHt0GxhCTFT1h4q\n0WgUpt32i3TW0X4keqKTyX+UZTbRfByrCxP/ygpko75AAlG9fTXsBAyrWjpn7wpe\nEXmIVKnLtVNC8BySuMY+Xo34p7tNFkJML4keaCmt3pq2cgeomjC0qdXUWwAcMM1x\nHDxo3K8obxHN1at6Fsj5IsbmmQEn3Eid01YfGorgPqwB4+J1eEsnFEwDhkAJa83H\nBK4g0m/jzm9jRJscqomin2yijwXHadD4cl+Nma+3o6txxN2SRoKQHwLDfhqPpqxc\nMc8VrTiDL58KeI829DNvYFYyERPvjfACq08STQIgmQI2BIQtHK4=\n=zk2X\n-----END PGP SIGNATURE-----", "payload": "tree c7f02548b28bc94288d46046caf5621aa96c4378\nparent 7907abea272bbf97812683ce03a1ab9c22f0557b\nauthor David Tolnay <dtolnay@gmail.com> 1586029636 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1586029923 -0700\n\nDowngrade unreadable_literal to pedantic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be34bc46ed7699c598e4525b07e04067e19e49aa", "html_url": "https://github.com/rust-lang/rust/commit/be34bc46ed7699c598e4525b07e04067e19e49aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be34bc46ed7699c598e4525b07e04067e19e49aa/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7907abea272bbf97812683ce03a1ab9c22f0557b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7907abea272bbf97812683ce03a1ab9c22f0557b", "html_url": "https://github.com/rust-lang/rust/commit/7907abea272bbf97812683ce03a1ab9c22f0557b"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "2e0a77068acd26d993f652410a2df83878f4bbd9", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be34bc46ed7699c598e4525b07e04067e19e49aa/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be34bc46ed7699c598e4525b07e04067e19e49aa/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=be34bc46ed7699c598e4525b07e04067e19e49aa", "patch": "@@ -1098,6 +1098,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&items_after_statements::ITEMS_AFTER_STATEMENTS),\n         LintId::of(&large_stack_arrays::LARGE_STACK_ARRAYS),\n         LintId::of(&literal_representation::LARGE_DIGIT_GROUPS),\n+        LintId::of(&literal_representation::UNREADABLE_LITERAL),\n         LintId::of(&loops::EXPLICIT_INTO_ITER_LOOP),\n         LintId::of(&loops::EXPLICIT_ITER_LOOP),\n         LintId::of(&macro_use::MACRO_USE_IMPORTS),\n@@ -1219,7 +1220,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&lifetimes::NEEDLESS_LIFETIMES),\n         LintId::of(&literal_representation::INCONSISTENT_DIGIT_GROUPING),\n         LintId::of(&literal_representation::MISTYPED_LITERAL_SUFFIXES),\n-        LintId::of(&literal_representation::UNREADABLE_LITERAL),\n         LintId::of(&loops::EMPTY_LOOP),\n         LintId::of(&loops::EXPLICIT_COUNTER_LOOP),\n         LintId::of(&loops::FOR_KV_MAP),\n@@ -1428,7 +1428,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&len_zero::LEN_ZERO),\n         LintId::of(&let_if_seq::USELESS_LET_IF_SEQ),\n         LintId::of(&literal_representation::INCONSISTENT_DIGIT_GROUPING),\n-        LintId::of(&literal_representation::UNREADABLE_LITERAL),\n         LintId::of(&loops::EMPTY_LOOP),\n         LintId::of(&loops::FOR_KV_MAP),\n         LintId::of(&loops::NEEDLESS_RANGE_LOOP),"}, {"sha": "0a6ffc1130a306f78bc214bb83408403958205fa", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be34bc46ed7699c598e4525b07e04067e19e49aa/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be34bc46ed7699c598e4525b07e04067e19e49aa/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=be34bc46ed7699c598e4525b07e04067e19e49aa", "patch": "@@ -27,7 +27,7 @@ declare_clippy_lint! {\n     /// let x: u64 = 61864918973511;\n     /// ```\n     pub UNREADABLE_LITERAL,\n-    style,\n+    pedantic,\n     \"long integer literal without underscores\"\n }\n "}, {"sha": "e24169bd350613a147b5b466b9702121b221720f", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be34bc46ed7699c598e4525b07e04067e19e49aa/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be34bc46ed7699c598e4525b07e04067e19e49aa/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=be34bc46ed7699c598e4525b07e04067e19e49aa", "patch": "@@ -2294,7 +2294,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     },\n     Lint {\n         name: \"unreadable_literal\",\n-        group: \"style\",\n+        group: \"pedantic\",\n         desc: \"long integer literal without underscores\",\n         deprecation: None,\n         module: \"literal_representation\","}, {"sha": "fb57a0becbb25e81b751bef0e1be0ddb0b559253", "filename": "tests/ui/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.rs?ref=be34bc46ed7699c598e4525b07e04067e19e49aa", "patch": "@@ -1,5 +1,5 @@\n #[warn(clippy::approx_constant)]\n-#[allow(unused, clippy::shadow_unrelated, clippy::similar_names, clippy::unreadable_literal)]\n+#[allow(unused, clippy::shadow_unrelated, clippy::similar_names)]\n fn main() {\n     let my_e = 2.7182;\n     let almost_e = 2.718;"}, {"sha": "ae4d1806af494af782da82b7fd39261839edaa40", "filename": "tests/ui/inconsistent_digit_grouping.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Finconsistent_digit_grouping.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Finconsistent_digit_grouping.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.fixed?ref=be34bc46ed7699c598e4525b07e04067e19e49aa", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #[warn(clippy::inconsistent_digit_grouping)]\n+#[deny(clippy::unreadable_literal)]\n #[allow(unused_variables, clippy::excessive_precision)]\n fn main() {\n     macro_rules! mac1 {"}, {"sha": "a1ac21746f648254ca08e4f337ea1643a4488fca", "filename": "tests/ui/inconsistent_digit_grouping.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Finconsistent_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Finconsistent_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.rs?ref=be34bc46ed7699c598e4525b07e04067e19e49aa", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #[warn(clippy::inconsistent_digit_grouping)]\n+#[deny(clippy::unreadable_literal)]\n #[allow(unused_variables, clippy::excessive_precision)]\n fn main() {\n     macro_rules! mac1 {"}, {"sha": "b8ac915546200718aba29271f5776a380980efe7", "filename": "tests/ui/inconsistent_digit_grouping.stderr", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be34bc46ed7699c598e4525b07e04067e19e49aa/tests%2Fui%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.stderr?ref=be34bc46ed7699c598e4525b07e04067e19e49aa", "patch": "@@ -1,63 +1,67 @@\n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:16\n+  --> $DIR/inconsistent_digit_grouping.rs:26:16\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                ^^^^^^^^ help: consider: `123_456`\n    |\n    = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:26\n+  --> $DIR/inconsistent_digit_grouping.rs:26:26\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                          ^^^^^^^^^^ help: consider: `12_345_678`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:38\n+  --> $DIR/inconsistent_digit_grouping.rs:26:38\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                      ^^^^^^^^ help: consider: `1_234_567`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:48\n+  --> $DIR/inconsistent_digit_grouping.rs:26:48\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                ^^^^^^^^^^^^^^ help: consider: `1_234.567_8_f32`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:64\n+  --> $DIR/inconsistent_digit_grouping.rs:26:64\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                                ^^^^^^^^^^^^^^ help: consider: `1.234_567_8_f32`\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:28:13\n+  --> $DIR/inconsistent_digit_grouping.rs:29:13\n    |\n LL |     let _ = 0x100000;\n    |             ^^^^^^^^ help: consider: `0x0010_0000`\n    |\n-   = note: `-D clippy::unreadable-literal` implied by `-D warnings`\n+note: the lint level is defined here\n+  --> $DIR/inconsistent_digit_grouping.rs:3:8\n+   |\n+LL | #[deny(clippy::unreadable_literal)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:29:13\n+  --> $DIR/inconsistent_digit_grouping.rs:30:13\n    |\n LL |     let _ = 0x1000000;\n    |             ^^^^^^^^^ help: consider: `0x0100_0000`\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:30:13\n+  --> $DIR/inconsistent_digit_grouping.rs:31:13\n    |\n LL |     let _ = 0x10000000;\n    |             ^^^^^^^^^^ help: consider: `0x1000_0000`\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:31:13\n+  --> $DIR/inconsistent_digit_grouping.rs:32:13\n    |\n LL |     let _ = 0x100000000_u64;\n    |             ^^^^^^^^^^^^^^^ help: consider: `0x0001_0000_0000_u64`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:34:18\n+  --> $DIR/inconsistent_digit_grouping.rs:35:18\n    |\n LL |     let _: f32 = 1_23_456.;\n    |                  ^^^^^^^^^ help: consider: `123_456.`"}]}