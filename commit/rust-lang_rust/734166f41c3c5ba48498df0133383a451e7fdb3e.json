{"sha": "734166f41c3c5ba48498df0133383a451e7fdb3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNDE2NmY0MWMzYzViYTQ4NDk4ZGYwMTMzMzgzYTQ1MWU3ZmRiM2U=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-21T01:47:01Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-21T01:48:08Z"}, "message": "Print out return type correctly in typestate error message\n\nIn the \"not all paths return\" error message, typestate was printing\nthe AST type from the fn decl, not the ty::t type. This ended in tears\nwhen the AST return type was \"ty_infer\". Now it looks up the function node\nID's type and uses util::ppaux::ty_to_str instead.\n\nCloses #2163.", "tree": {"sha": "62c39695f9419533da0f02fb4fd5509176f5848d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62c39695f9419533da0f02fb4fd5509176f5848d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/734166f41c3c5ba48498df0133383a451e7fdb3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/734166f41c3c5ba48498df0133383a451e7fdb3e", "html_url": "https://github.com/rust-lang/rust/commit/734166f41c3c5ba48498df0133383a451e7fdb3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/734166f41c3c5ba48498df0133383a451e7fdb3e/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43061f3969d1d961bd4e4d57c06452ca80c1adb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/43061f3969d1d961bd4e4d57c06452ca80c1adb6", "html_url": "https://github.com/rust-lang/rust/commit/43061f3969d1d961bd4e4d57c06452ca80c1adb6"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "a8c06cd322ad24f139522794b698ea093e1ac20d", "filename": "src/rustc/middle/tstate/ck.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/734166f41c3c5ba48498df0133383a451e7fdb3e/src%2Frustc%2Fmiddle%2Ftstate%2Fck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734166f41c3c5ba48498df0133383a451e7fdb3e/src%2Frustc%2Fmiddle%2Ftstate%2Fck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fck.rs?ref=734166f41c3c5ba48498df0133383a451e7fdb3e", "patch": "@@ -7,7 +7,8 @@ import middle::ty;\n import tstate::ann::{precond, prestate,\n                      implies, ann_precond, ann_prestate};\n import aux::*;\n-import syntax::print::pprust::ty_to_str;\n+\n+import util::ppaux::ty_to_str;\n import bitvectors::*;\n import annotate::annotate_crate;\n import collect_locals::mk_f_to_fn_info;\n@@ -116,13 +117,14 @@ fn check_states_against_conditions(fcx: fn_ctxt,\n        !ty::type_is_nil(ty::ty_fn_ret(ty::node_id_to_type(\n            fcx.ccx.tcx, id))) &&\n        f_decl.cf == return_val {\n+        let fn_ty = ty::node_id_to_type(fcx.ccx.tcx, id);\n         fcx.ccx.tcx.sess.span_err(f_body.span,\n-                                  \"in function \" + fcx.name +\n-                                      \", not all control paths \\\n-                                        return a value\");\n+                    #fmt(\"in function `%s`, not all control paths \\\n+                          return a value\", fcx.name));\n         fcx.ccx.tcx.sess.span_fatal(f_decl.output.span,\n-                                    \"see declared return type of '\" +\n-                                    ty_to_str(f_decl.output) + \"'\");\n+                                    #fmt(\"see function return type of `%s`\",\n+                                         ty_to_str(fcx.ccx.tcx,\n+                                           ty::ty_fn_ret(fn_ty))));\n     } else if f_decl.cf == noreturn {\n \n         // check that this really always fails"}, {"sha": "89437289ebc49bd436540924d9eed85f98338329", "filename": "src/test/compile-fail/issue-2163.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/734166f41c3c5ba48498df0133383a451e7fdb3e/src%2Ftest%2Fcompile-fail%2Fissue-2163.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734166f41c3c5ba48498df0133383a451e7fdb3e/src%2Ftest%2Fcompile-fail%2Fissue-2163.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2163.rs?ref=734166f41c3c5ba48498df0133383a451e7fdb3e", "patch": "@@ -0,0 +1,5 @@\n+fn main(s: [str]) {\n+    let a = [];\n+    vec::each(a) { |x| //! ERROR in function `anon`, not all control paths\n+    }                  //! ERROR see function return type of `bool`\n+}"}]}