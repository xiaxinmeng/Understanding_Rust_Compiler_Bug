{"sha": "e9c7fb10b92c47e9bb2713fae5ef74a07efce92d", "node_id": "C_kwDOAAsO6NoAKGU5YzdmYjEwYjkyYzQ3ZTliYjI3MTNmYWU1ZWY3NGEwN2VmY2U5MmQ", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-03-29T14:14:11Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-04T15:34:40Z"}, "message": "Rename `ast::Static` to `ast::StaticItem` to match `ast::ConstItem`", "tree": {"sha": "05d624708e1b45002d64e2473413a6f119a42121", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05d624708e1b45002d64e2473413a6f119a42121"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d", "html_url": "https://github.com/rust-lang/rust/commit/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00", "html_url": "https://github.com/rust-lang/rust/commit/e610ddfa5ef4c6d1cd82c1cb7ab0092b799e7b00"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "11b908e7e53d1c3a79c7f7c92ffa3cafb4767928", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=e9c7fb10b92c47e9bb2713fae5ef74a07efce92d", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::msrvs::{self, Msrv};\n use clippy_utils::source::snippet;\n-use rustc_ast::ast::{Item, ItemKind, Ty, TyKind, Static, ConstItem};\n+use rustc_ast::ast::{Item, ItemKind, Ty, TyKind, StaticItem, ConstItem};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n@@ -106,7 +106,7 @@ impl EarlyLintPass for RedundantStaticLifetimes {\n                 // #2438)\n             }\n \n-            if let ItemKind::Static(box Static { ty: ref var_type,.. }) = item.kind {\n+            if let ItemKind::Static(box StaticItem { ty: ref var_type,.. }) = item.kind {\n                 Self::visit_type(var_type, cx, \"statics have by default a `'static` lifetime\");\n             }\n         }"}, {"sha": "c5b58b0c060c0b32d812d78308d1d841209a28a1", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c7fb10b92c47e9bb2713fae5ef74a07efce92d/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=e9c7fb10b92c47e9bb2713fae5ef74a07efce92d", "patch": "@@ -286,7 +286,7 @@ pub fn eq_item_kind(l: &ItemKind, r: &ItemKind) -> bool {\n     match (l, r) {\n         (ExternCrate(l), ExternCrate(r)) => l == r,\n         (Use(l), Use(r)) => eq_use_tree(l, r),\n-        (Static(box ast::Static{ ty: lt, mutability: lm, expr: le}), Static(box ast::Static { ty: rt, mutability: rm, expr: re})) => lm == rm && eq_ty(lt, rt) && eq_expr_opt(le, re),\n+        (Static(box ast::StaticItem { ty: lt, mutability: lm, expr: le}), Static(box ast::StaticItem { ty: rt, mutability: rm, expr: re})) => lm == rm && eq_ty(lt, rt) && eq_expr_opt(le, re),\n         (Const(box ast::ConstItem { defaultness: ld, ty: lt, expr: le}), Const(box ast::ConstItem { defaultness: rd, ty: rt, expr: re} )) => eq_defaultness(*ld, *rd) && eq_ty(lt, rt) && eq_expr_opt(le, re),\n         (\n             Fn(box ast::Fn {"}]}