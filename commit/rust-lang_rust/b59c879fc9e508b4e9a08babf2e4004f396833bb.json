{"sha": "b59c879fc9e508b4e9a08babf2e4004f396833bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OWM4NzlmYzllNTA4YjRlOWEwOGJhYmYyZTQwMDRmMzk2ODMzYmI=", "commit": {"author": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-02-12T05:24:02Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-08T15:49:04Z"}, "message": "Move option_option to its own module", "tree": {"sha": "73667a77546642ccd73eb31f58903458c998aa80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73667a77546642ccd73eb31f58903458c998aa80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59c879fc9e508b4e9a08babf2e4004f396833bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59c879fc9e508b4e9a08babf2e4004f396833bb", "html_url": "https://github.com/rust-lang/rust/commit/b59c879fc9e508b4e9a08babf2e4004f396833bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59c879fc9e508b4e9a08babf2e4004f396833bb/comments", "author": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbd25e93a4ab7b7d357452f7c59f846e984b5d74", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbd25e93a4ab7b7d357452f7c59f846e984b5d74", "html_url": "https://github.com/rust-lang/rust/commit/fbd25e93a4ab7b7d357452f7c59f846e984b5d74"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "55f1d86bc56b6f5b8e6cb89824effa2ee8c2ab89", "filename": "clippy_lints/src/types/mod.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b59c879fc9e508b4e9a08babf2e4004f396833bb/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c879fc9e508b4e9a08babf2e4004f396833bb/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs?ref=b59c879fc9e508b4e9a08babf2e4004f396833bb", "patch": "@@ -1,6 +1,7 @@\n #![allow(rustc::default_hash_types)]\n \n mod box_vec;\n+mod option_option;\n mod rc_buffer;\n mod redundant_allocation;\n mod utils;\n@@ -327,19 +328,9 @@ impl Types {\n                     triggered |= redundant_allocation::check(cx, hir_ty, qpath, def_id);\n                     triggered |= rc_buffer::check(cx, hir_ty, qpath, def_id);\n                     triggered |= vec_box::check(cx, hir_ty, qpath, def_id, self.vec_box_size_threshold);\n+                    triggered |= option_option::check(cx, hir_ty, qpath, def_id);\n \n-                    if cx.tcx.is_diagnostic_item(sym::option_type, def_id) {\n-                        if is_ty_param_diagnostic_item(cx, qpath, sym::option_type).is_some() {\n-                            span_lint(\n-                                cx,\n-                                OPTION_OPTION,\n-                                hir_ty.span,\n-                                \"consider using `Option<T>` instead of `Option<Option<T>>` or a custom \\\n-                                 enum if you need to distinguish all 3 cases\",\n-                            );\n-                            return; // don't recurse into the type\n-                        }\n-                    } else if match_def_path(cx, def_id, &paths::LINKED_LIST) {\n+                    if match_def_path(cx, def_id, &paths::LINKED_LIST) {\n                         span_lint_and_help(\n                             cx,\n                             LINKEDLIST,"}, {"sha": "42aad70438b5f4dfaee3b4e5a2bd0aa588ba29bd", "filename": "clippy_lints/src/types/option_option.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b59c879fc9e508b4e9a08babf2e4004f396833bb/clippy_lints%2Fsrc%2Ftypes%2Foption_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c879fc9e508b4e9a08babf2e4004f396833bb/clippy_lints%2Fsrc%2Ftypes%2Foption_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Foption_option.rs?ref=b59c879fc9e508b4e9a08babf2e4004f396833bb", "patch": "@@ -0,0 +1,23 @@\n+use rustc_hir::{self as hir, def_id::DefId, QPath};\n+use rustc_lint::LateContext;\n+use rustc_span::symbol::sym;\n+\n+use crate::utils::span_lint;\n+\n+use super::utils;\n+\n+pub(super) fn check(cx: &LateContext<'_>, hir_ty: &hir::Ty<'_>, qpath: &QPath<'_>, def_id: DefId) -> bool {\n+    if cx.tcx.is_diagnostic_item(sym::option_type, def_id) {\n+        if utils::is_ty_param_diagnostic_item(cx, qpath, sym::option_type).is_some() {\n+            span_lint(\n+                cx,\n+                super::OPTION_OPTION,\n+                hir_ty.span,\n+                \"consider using `Option<T>` instead of `Option<Option<T>>` or a custom \\\n+                                 enum if you need to distinguish all 3 cases\",\n+            );\n+            return true;\n+        }\n+    }\n+    false\n+}"}]}