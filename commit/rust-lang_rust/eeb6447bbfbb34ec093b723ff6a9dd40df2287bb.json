{"sha": "eeb6447bbfbb34ec093b723ff6a9dd40df2287bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYjY0NDdiYmZiYjM0ZWMwOTNiNzIzZmY2YTlkZDQwZGYyMjg3YmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-17T13:37:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-30T11:55:29Z"}, "message": "add an `ObligationCauseCode` we'll use later (`ReturnNoExpression`)", "tree": {"sha": "7c68fd5f4f82e3215384e42c539fbc00dd12e11f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c68fd5f4f82e3215384e42c539fbc00dd12e11f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb", "html_url": "https://github.com/rust-lang/rust/commit/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27f4b57602a01c2b49c09b161e1ddca26752fec8", "url": "https://api.github.com/repos/rust-lang/rust/commits/27f4b57602a01c2b49c09b161e1ddca26752fec8", "html_url": "https://github.com/rust-lang/rust/commit/27f4b57602a01c2b49c09b161e1ddca26752fec8"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "152dd6ac3000f71f8b6beb69a5525b64350cd3ff", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=eeb6447bbfbb34ec093b723ff6a9dd40df2287bb", "patch": "@@ -904,6 +904,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             ObligationCauseCode::StartFunctionType |\n             ObligationCauseCode::IntrinsicType |\n             ObligationCauseCode::MethodReceiver |\n+            ObligationCauseCode::ReturnNoExpression |\n             ObligationCauseCode::MiscObligation => {\n             }\n             ObligationCauseCode::SliceOrArrayElem => {"}, {"sha": "47cbccdd2ab107ef673483a8e201cf88ead77ce4", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=eeb6447bbfbb34ec093b723ff6a9dd40df2287bb", "patch": "@@ -173,6 +173,9 @@ pub enum ObligationCauseCode<'tcx> {\n \n     // method receiver\n     MethodReceiver,\n+\n+    // `return` with no expression\n+    ReturnNoExpression,\n }\n \n #[derive(Clone, Debug, PartialEq, Eq)]"}, {"sha": "44ef461327ddbf868837dd5b2b00559a3af4528e", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb6447bbfbb34ec093b723ff6a9dd40df2287bb/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=eeb6447bbfbb34ec093b723ff6a9dd40df2287bb", "patch": "@@ -167,6 +167,7 @@ impl<'a, 'tcx> Lift<'tcx> for traits::ObligationCauseCode<'a> {\n     type Lifted = traits::ObligationCauseCode<'tcx>;\n     fn lift_to_tcx<'b, 'gcx>(&self, tcx: TyCtxt<'b, 'gcx, 'tcx>) -> Option<Self::Lifted> {\n         match *self {\n+            super::ReturnNoExpression => Some(super::ReturnNoExpression),\n             super::MiscObligation => Some(super::MiscObligation),\n             super::SliceOrArrayElem => Some(super::SliceOrArrayElem),\n             super::TupleElem => Some(super::TupleElem),\n@@ -489,6 +490,7 @@ impl<'tcx> TypeFoldable<'tcx> for traits::ObligationCauseCode<'tcx> {\n             super::StructInitializerSized |\n             super::VariableType(_) |\n             super::ReturnType |\n+            super::ReturnNoExpression |\n             super::RepeatVec |\n             super::FieldSized |\n             super::ConstSized |\n@@ -533,6 +535,7 @@ impl<'tcx> TypeFoldable<'tcx> for traits::ObligationCauseCode<'tcx> {\n             super::StructInitializerSized |\n             super::VariableType(_) |\n             super::ReturnType |\n+            super::ReturnNoExpression |\n             super::RepeatVec |\n             super::FieldSized |\n             super::ConstSized |"}]}