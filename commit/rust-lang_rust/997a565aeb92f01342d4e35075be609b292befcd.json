{"sha": "997a565aeb92f01342d4e35075be609b292befcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5N2E1NjVhZWI5MmYwMTM0MmQ0ZTM1MDc1YmU2MDliMjkyYmVmY2Q=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-29T21:24:08Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-29T21:31:17Z"}, "message": "Make the python scripts py3 and pep8 compatible", "tree": {"sha": "5a55777b50dd80b948fd6e46c8074290a8bf5c65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a55777b50dd80b948fd6e46c8074290a8bf5c65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/997a565aeb92f01342d4e35075be609b292befcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/997a565aeb92f01342d4e35075be609b292befcd", "html_url": "https://github.com/rust-lang/rust/commit/997a565aeb92f01342d4e35075be609b292befcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/997a565aeb92f01342d4e35075be609b292befcd/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a39bbaf741f74342c694e59a3e0b1888279131c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a39bbaf741f74342c694e59a3e0b1888279131c", "html_url": "https://github.com/rust-lang/rust/commit/3a39bbaf741f74342c694e59a3e0b1888279131c"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "9f105a2699cc95d86f71333a182a14c19f8e8541", "filename": "util/update_lints.py", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/997a565aeb92f01342d4e35075be609b292befcd/util%2Fupdate_lints.py", "raw_url": "https://github.com/rust-lang/rust/raw/997a565aeb92f01342d4e35075be609b292befcd/util%2Fupdate_lints.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_lints.py?ref=997a565aeb92f01342d4e35075be609b292befcd", "patch": "@@ -1,7 +1,8 @@\n #!/usr/bin/env python\n # Generate a Markdown table of all lints, and put it in README.md.\n # With -n option, only print the new table to stdout.\n-# With -c option, print a warning and set exit status to 1 if a file would be changed.\n+# With -c option, print a warning and set exit status to 1 if a file would be\n+# changed.\n \n import os\n import re\n@@ -18,6 +19,7 @@\n \n wiki_link = 'https://github.com/Manishearth/rust-clippy/wiki'\n \n+\n def collect(lints, fn):\n     \"\"\"Collect all lints from a file.\n "}, {"sha": "842f0ed6d8e4c69e8611e8d6415362d0c989a406", "filename": "util/update_wiki.py", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/997a565aeb92f01342d4e35075be609b292befcd/util%2Fupdate_wiki.py", "raw_url": "https://github.com/rust-lang/rust/raw/997a565aeb92f01342d4e35075be609b292befcd/util%2Fupdate_wiki.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_wiki.py?ref=997a565aeb92f01342d4e35075be609b292befcd", "patch": "@@ -1,8 +1,12 @@\n #!/usr/bin/env python\n # Generate the wiki Home.md page from the contained doc comments\n # requires the checked out wiki in ../rust-clippy.wiki/\n-# with -c option, print a warning and set exit status 1 if the file would be changed.\n-import os, re, sys\n+# with -c option, print a warning and set exit status 1 if the file would be\n+# changed.\n+import os\n+import re\n+import sys\n+\n \n def parse_path(p=\"src\"):\n     d = {}\n@@ -14,10 +18,10 @@ def parse_path(p=\"src\"):\n START = 0\n LINT = 1\n \n+\n def parse_file(d, f):\n     last_comment = []\n     comment = True\n-    lint = None\n \n     with open(f) as rs:\n         for line in rs:\n@@ -35,27 +39,33 @@ def parse_file(d, f):\n                 l = line.strip()\n                 m = re.search(r\"pub\\s+([A-Z_]+)\", l)\n                 if m:\n-                    print \"found %s in %s\" % (m.group(1).lower(), f)\n+                    print(\"found %s in %s\" % (m.group(1).lower(), f))\n                     d[m.group(1).lower()] = last_comment\n                     last_comment = []\n                     comment = True\n                 if \"}\" in l:\n-                    print \"Warning: Missing Lint-Name in\", f\n+                    print(\"Warning: Missing Lint-Name in\", f)\n                     comment = True\n \n PREFIX = \"\"\"Welcome to the rust-clippy wiki!\n \n-Here we aim to collect further explanations on the lints clippy provides. So without further ado:\n+Here we aim to collect further explanations on the lints clippy provides. So \\\n+without further ado:\n \n \"\"\"\n \n WARNING = \"\"\"\n # A word of warning\n \n-Clippy works as a *plugin* to the compiler, which means using an unstable internal API. We have gotten quite good at keeping pace with the API evolution, but the consequence is that clippy absolutely needs to be compiled with the version of `rustc` it will run on, otherwise you will get strange errors of missing symbols.\"\"\"\n+Clippy works as a *plugin* to the compiler, which means using an unstable \\\n+internal API. We have gotten quite good at keeping pace with the API \\\n+evolution, but the consequence is that clippy absolutely needs to be compiled \\\n+with the version of `rustc` it will run on, otherwise you will get strange \\\n+errors of missing symbols.\"\"\"\n+\n \n def write_wiki_page(d, f):\n-    keys = d.keys()\n+    keys = list(d.keys())\n     keys.sort()\n     with open(f, \"w\") as w:\n         w.write(PREFIX)\n@@ -65,6 +75,7 @@ def write_wiki_page(d, f):\n         for k in keys:\n             w.write(\"\\n# `%s`\\n\\n%s\" % (k, \"\".join(d[k])))\n \n+\n def check_wiki_page(d, f):\n     errors = []\n     with open(f) as w:\n@@ -74,17 +85,21 @@ def check_wiki_page(d, f):\n                 v = d.pop(m.group(1), \"()\")\n                 if v == \"()\":\n                     errors.append(\"Missing wiki entry: \" + m.group(1))\n-    keys = d.keys()\n+    keys = list(d.keys())\n     keys.sort()\n     for k in keys:\n         errors.append(\"Spurious wiki entry: \" + k)\n     if errors:\n-        print \"\\n\".join(errors)\n+        print(\"\\n\".join(errors))\n         sys.exit(1)\n \n-if __name__ == \"__main__\":\n+\n+def main():\n     d = parse_path()\n     if \"-c\" in sys.argv:\n         check_wiki_page(d, \"../rust-clippy.wiki/Home.md\")\n     else:\n         write_wiki_page(d, \"../rust-clippy.wiki/Home.md\")\n+\n+if __name__ == \"__main__\":\n+    main()"}]}