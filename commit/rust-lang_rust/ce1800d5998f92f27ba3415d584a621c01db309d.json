{"sha": "ce1800d5998f92f27ba3415d584a621c01db309d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMTgwMGQ1OTk4ZjkyZjI3YmEzNDE1ZDU4NGE2MjFjMDFkYjMwOWQ=", "commit": {"author": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2018-06-19T13:25:38Z"}, "committer": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2018-06-19T13:25:38Z"}, "message": "Check lifetimes in Fn traits in generic bounds.\nAdd tests.", "tree": {"sha": "5b62d07e0632e4eaf39db16471ab9e6eb56a8b9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b62d07e0632e4eaf39db16471ab9e6eb56a8b9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce1800d5998f92f27ba3415d584a621c01db309d", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABAgAGBQJbKQRSAAoJEDlZOfCoAvxLcncP/2FLxZsWAmcbRm3FOc9ty7pi\ngSXJX01Moku1VrsYHI1WMRm80Z2j4UhajM14oQMe0b73gW+TapphExEbOQVWUtGP\nETsM7jSkaFwX631Zx7YNoQHAtiYiTNUK+iizQp7mGkiN5G4eleEfAY3EB9O4o+X8\nVOw40OEd7Q0Rhvxw+qKgKcJghN5houXUkBtvvi6fNK6NMfQhs9i3Hznd44RcJTgd\nCogXpCF9UkcLKH6on0ZWRiVVyCGZFuxS9+qxoEZGJZAcn4p/YR8fPXCBQXG1h7KB\nm4PdWEpontyAkqli/6ZitspDVhC/s5wKq++Y9bloFsx07Mxd+v1KylGh7OAAsmpE\nEQ2qghSASpVnp/9PkXwddZQ7ES9XikbBzlaFPeQS02GFM4MBhzV1afyQJZk7bvXF\nqhF+VxdYAk03Mz4RsKvubpylT2tbdfnPhGz/cUsHwNz9QVsqFsHhDnC+LZH7OOBr\nnUyIxywuokAnsFnL2uQ5TNN60EYzjfjdrmHi1kdtBFhY265g5xmNNHIBQpZzZXgr\ndtmaJWSA5bcR1FvehMovrtmEAjj77lkZ3USEX8CMAU2mNFX2pt+QPymidPUN5pI5\nezxuQ9YL3kXD2udvLDD1e5pRJTy1B0opsfkoLUSB1bU0E5FCLrDaFkCncj9usZGi\no0D3CzNlp5QxVuwPu0JG\n=/OKt\n-----END PGP SIGNATURE-----", "payload": "tree 5b62d07e0632e4eaf39db16471ab9e6eb56a8b9d\nparent d761ba78d8b84e924540f9408a3bd69d30c15ffe\nauthor uHOOCCOOHu <hooccooh1896@gmail.com> 1529414738 +0800\ncommitter uHOOCCOOHu <hooccooh1896@gmail.com> 1529414738 +0800\n\nCheck lifetimes in Fn traits in generic bounds.\nAdd tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1800d5998f92f27ba3415d584a621c01db309d", "html_url": "https://github.com/rust-lang/rust/commit/ce1800d5998f92f27ba3415d584a621c01db309d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce1800d5998f92f27ba3415d584a621c01db309d/comments", "author": null, "committer": null, "parents": [{"sha": "d761ba78d8b84e924540f9408a3bd69d30c15ffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d761ba78d8b84e924540f9408a3bd69d30c15ffe", "html_url": "https://github.com/rust-lang/rust/commit/d761ba78d8b84e924540f9408a3bd69d30c15ffe"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "f84d942e1c92d57868322334aa60fba672e70c59", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce1800d5998f92f27ba3415d584a621c01db309d/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1800d5998f92f27ba3415d584a621c01db309d/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=ce1800d5998f92f27ba3415d584a621c01db309d", "patch": "@@ -103,6 +103,11 @@ fn check_fn_inner<'a, 'tcx>(\n     let mut bounds_lts = Vec::new();\n     for typ in generics.ty_params() {\n         for bound in &typ.bounds {\n+            let mut visitor = RefVisitor::new(cx);\n+            walk_ty_param_bound(&mut visitor, bound);\n+            if visitor.lts.iter().any(|lt| matches!(lt, RefLt::Named(_))) {\n+                return;\n+            }\n             if let TraitTyParamBound(ref trait_ref, _) = *bound {\n                 let params = &trait_ref\n                     .trait_ref"}, {"sha": "3ddf70144f27e377b713ca9487ad50889337e63e", "filename": "tests/ui/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce1800d5998f92f27ba3415d584a621c01db309d/tests%2Fui%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1800d5998f92f27ba3415d584a621c01db309d/tests%2Fui%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.rs?ref=ce1800d5998f92f27ba3415d584a621c01db309d", "patch": "@@ -53,6 +53,10 @@ fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n { unreachable!() }\n \n+fn fn_bound_3<'a, F: FnOnce(&'a ())>(x: &'a (), f: F) {} // no error, referenced\n+\n+fn fn_bound_4<'a, F: FnOnce() -> &'a ()>(x: &'a (), f: F) {} // no error, referenced\n+\n struct X {\n     x: u8,\n }"}, {"sha": "1d974831750b73e0cceba4110c1cd3f40b25705f", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ce1800d5998f92f27ba3415d584a621c01db309d/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce1800d5998f92f27ba3415d584a621c01db309d/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=ce1800d5998f92f27ba3415d584a621c01db309d", "patch": "@@ -45,45 +45,45 @@ error: explicit lifetimes given in parameter types where they could be elided\n    | |__________________^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:61:5\n+  --> $DIR/lifetimes.rs:65:5\n    |\n-61 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n+65 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:65:5\n+  --> $DIR/lifetimes.rs:69:5\n    |\n-65 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n+69 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:81:1\n+  --> $DIR/lifetimes.rs:85:1\n    |\n-81 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n+85 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:101:1\n+   --> $DIR/lifetimes.rs:105:1\n     |\n-101 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n+105 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:105:1\n+   --> $DIR/lifetimes.rs:109:1\n     |\n-105 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n+109 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:116:1\n+   --> $DIR/lifetimes.rs:120:1\n     |\n-116 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n+120 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:120:1\n+   --> $DIR/lifetimes.rs:124:1\n     |\n-120 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n+124 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 14 previous errors"}]}