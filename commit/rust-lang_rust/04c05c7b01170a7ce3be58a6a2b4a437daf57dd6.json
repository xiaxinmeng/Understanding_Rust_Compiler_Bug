{"sha": "04c05c7b01170a7ce3be58a6a2b4a437daf57dd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0YzA1YzdiMDExNzBhN2NlM2JlNThhNmEyYjRhNDM3ZGFmNTdkZDY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-12-18T16:42:46Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-12-18T16:42:46Z"}, "message": "Added doc comments for new UnresolvedNameContext enum.", "tree": {"sha": "9ebb8d11efcc037fb5b239acd70a8d1d452aa77a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ebb8d11efcc037fb5b239acd70a8d1d452aa77a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04c05c7b01170a7ce3be58a6a2b4a437daf57dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04c05c7b01170a7ce3be58a6a2b4a437daf57dd6", "html_url": "https://github.com/rust-lang/rust/commit/04c05c7b01170a7ce3be58a6a2b4a437daf57dd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04c05c7b01170a7ce3be58a6a2b4a437daf57dd6/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "694699503a346822ae8453e93c9f327d01fe6f55", "url": "https://api.github.com/repos/rust-lang/rust/commits/694699503a346822ae8453e93c9f327d01fe6f55", "html_url": "https://github.com/rust-lang/rust/commit/694699503a346822ae8453e93c9f327d01fe6f55"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "3aeb08aa110c88056a3da6e77cbd3ce71db49d4b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/04c05c7b01170a7ce3be58a6a2b4a437daf57dd6/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04c05c7b01170a7ce3be58a6a2b4a437daf57dd6/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=04c05c7b01170a7ce3be58a6a2b4a437daf57dd6", "patch": "@@ -202,9 +202,18 @@ pub enum ResolutionError<'a> {\n     AttemptToUseNonConstantValueInConstant,\n }\n \n+/// Context of where `ResolutionError::UnresolvedName` arose.\n #[derive(Clone, PartialEq, Eq, Debug)]\n pub enum UnresolvedNameContext {\n+    /// `PathIsMod(id)` indicates that a given path, used in\n+    /// expression context, actually resolved to a module rather than\n+    /// a value. The `id` attached to the variant is the node id of\n+    /// the erroneous path expression.\n     PathIsMod(ast::NodeId),\n+\n+    /// `Other` means we have no extra information about the context\n+    /// of the unresolved name error. (Maybe we could eliminate all\n+    /// such cases; but for now, this is an information-free default.)\n     Other,\n }\n "}]}