{"sha": "2c339aeb7bec40777b606889b9bd256fcea1dece", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMzM5YWViN2JlYzQwNzc3YjYwNjg4OWI5YmQyNTZmY2VhMWRlY2U=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-05T20:27:26Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-14T15:04:37Z"}, "message": "Add specific error for unstable const fn features", "tree": {"sha": "4b96eb985c0ec4b3df73de412f5846224f8076f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b96eb985c0ec4b3df73de412f5846224f8076f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c339aeb7bec40777b606889b9bd256fcea1dece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c339aeb7bec40777b606889b9bd256fcea1dece", "html_url": "https://github.com/rust-lang/rust/commit/2c339aeb7bec40777b606889b9bd256fcea1dece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c339aeb7bec40777b606889b9bd256fcea1dece/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47ec2ad5b6887b3d400aee49e2294bd27733d18", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47ec2ad5b6887b3d400aee49e2294bd27733d18", "html_url": "https://github.com/rust-lang/rust/commit/f47ec2ad5b6887b3d400aee49e2294bd27733d18"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "084a6529908df05b78d827221aa9936b329dafed", "filename": "src/librustc_mir/diagnostics.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2c339aeb7bec40777b606889b9bd256fcea1dece/src%2Flibrustc_mir%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c339aeb7bec40777b606889b9bd256fcea1dece/src%2Flibrustc_mir%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdiagnostics.rs?ref=2c339aeb7bec40777b606889b9bd256fcea1dece", "patch": "@@ -2370,6 +2370,37 @@ let value = (&foo(), &foo());\n ```\n \"##,\n \n+E0723: r##\"\n+An feature unstable in `const` contexts was used.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0723\n+trait T {}\n+\n+impl T for () {}\n+\n+const fn foo() -> impl T { // error: `impl Trait` in const fn is unstable\n+    ()\n+}\n+```\n+\n+To enable this feature on a nightly version of rustc, add the `const_fn`\n+feature flag:\n+\n+```compile_fail,E0723\n+#![feature(const_fn)]\n+\n+trait T {}\n+\n+impl T for () {}\n+\n+const fn foo() -> impl T { // error: `impl Trait` in const fn is unstable\n+    ()\n+}\n+```\n+\"##,\n+\n }\n \n register_diagnostics! {"}, {"sha": "2066a50e7fbb8175b93278836f9c761e3e21d807", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2c339aeb7bec40777b606889b9bd256fcea1dece/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c339aeb7bec40777b606889b9bd256fcea1dece/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=2c339aeb7bec40777b606889b9bd256fcea1dece", "patch": "@@ -1206,7 +1206,17 @@ impl MirPass for QualifyAndPromoteConstants {\n                         // enforce `min_const_fn` for stable const fns\n                         use super::qualify_min_const_fn::is_min_const_fn;\n                         if let Err((span, err)) = is_min_const_fn(tcx, def_id, mir) {\n-                            tcx.sess.span_err(span, &err);\n+                            let mut diag = struct_span_err!(\n+                                tcx.sess,\n+                                span,\n+                                E0723,\n+                                \"{} (see issue #57563)\",\n+                                err,\n+                            );\n+                            diag.help(\n+                                \"add #![feature(const_fn)] to the crate attributes to enable\",\n+                            );\n+                            diag.emit();\n                         } else {\n                             // this should not produce any errors, but better safe than sorry\n                             // FIXME(#53819)"}]}