{"sha": "6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4", "node_id": "C_kwDOAAsO6NoAKDZjNGZjODVmOWNlNzJkZmI4OWNlYjNjOGMxMWEyZTg1Njk4ZjZkYTQ", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-08-10T09:31:10Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-08-12T20:22:55Z"}, "message": "Update rustdoc to new slug style", "tree": {"sha": "dfd19d636e1e1a978d5a20feecb7a448c1efe3c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd19d636e1e1a978d5a20feecb7a448c1efe3c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4", "html_url": "https://github.com/rust-lang/rust/commit/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc6cff564ff68046c8e0c2fa967a7227a67097d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6cff564ff68046c8e0c2fa967a7227a67097d2", "html_url": "https://github.com/rust-lang/rust/commit/cc6cff564ff68046c8e0c2fa967a7227a67097d2"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "733454cb2a7471d7634d62aa18843f4e78dced85", "filename": "compiler/rustc_macros/src/diagnostics/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4", "patch": "@@ -38,9 +38,9 @@ use synstructure::Structure;\n /// ```\n ///\n /// ```fluent\n-/// move-out-of-borrow = cannot move out of {$name} because it is borrowed\n+/// move_out_of_borrow = cannot move out of {$name} because it is borrowed\n ///     .label = cannot move out of borrow\n-///     .first-borrow-label = `{$ty}` first borrowed here\n+///     .first_borrow_label = `{$ty}` first borrowed here\n ///     .suggestion = consider cloning here\n /// ```\n ///\n@@ -84,9 +84,9 @@ pub fn session_diagnostic_derive(s: Structure<'_>) -> TokenStream {\n /// ```\n ///\n /// ```fluent\n-/// lint-atomic-ordering-invalid-fail-success = `{$method}`'s success ordering must be at least as strong as its failure ordering\n-///     .fail-label = `{$fail_ordering}` failure ordering\n-///     .success-label = `{$success_ordering}` success ordering\n+/// lint_atomic_ordering_invalid_fail_success = `{$method}`'s success ordering must be at least as strong as its failure ordering\n+///     .fail_label = `{$fail_ordering}` failure ordering\n+///     .success_label = `{$success_ordering}` success ordering\n ///     .suggestion = consider using `{$success_suggestion}` success ordering instead\n /// ```\n ///\n@@ -140,11 +140,11 @@ pub fn lint_diagnostic_derive(s: Structure<'_>) -> TokenStream {\n /// ```\n ///\n /// ```fluent\n-/// parser-expected-identifier = expected identifier\n+/// parser_expected_identifier = expected identifier\n ///\n-/// parser-expected-identifier-found = expected identifier, found {$found}\n+/// parser_expected_identifier-found = expected identifier, found {$found}\n ///\n-/// parser-raw-identifier = escape `{$ident}` to use it as an identifier\n+/// parser_raw_identifier = escape `{$ident}` to use it as an identifier\n /// ```\n ///\n /// Then, later, to add the subdiagnostic:"}, {"sha": "2f9c13cf817ee7d185ba09ac514989feffcb0a96", "filename": "compiler/rustc_macros/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Flib.rs?ref=6c4fc85f9ce72dfb89ceb3c8c11a2e85698f6da4", "patch": "@@ -65,10 +65,10 @@ pub fn newtype_index(input: TokenStream) -> TokenStream {\n /// ..where `typeck.ftl` has the following contents..\n ///\n /// ```fluent\n-/// typeck-field-multiply-specified-in-initializer =\n+/// typeck_field_multiply_specified_in_initializer =\n ///     field `{$ident}` specified more than once\n ///     .label = used more than once\n-///     .label-previous-use = first use of `{$ident}`\n+///     .label_previous_use = first use of `{$ident}`\n /// ```\n /// ...then the macro parse the Fluent resource, emitting a diagnostic if it fails to do so, and\n /// will generate the following code:\n@@ -81,11 +81,11 @@ pub fn newtype_index(input: TokenStream) -> TokenStream {\n /// mod fluent_generated {\n ///     mod typeck {\n ///         pub const field_multiply_specified_in_initializer: DiagnosticMessage =\n-///             DiagnosticMessage::fluent(\"typeck-field-multiply-specified-in-initializer\");\n+///             DiagnosticMessage::fluent(\"typeck_field_multiply_specified_in_initializer\");\n ///         pub const field_multiply_specified_in_initializer_label_previous_use: DiagnosticMessage =\n ///             DiagnosticMessage::fluent_attr(\n-///                 \"typeck-field-multiply-specified-in-initializer\",\n-///                 \"previous-use-label\"\n+///                 \"typeck_field_multiply_specified_in_initializer\",\n+///                 \"previous_use_label\"\n ///             );\n ///     }\n /// }"}]}