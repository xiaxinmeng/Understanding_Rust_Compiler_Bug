{"sha": "825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "node_id": "C_kwDOAAsO6NoAKDgyNWE3Y2M2NWM0YjIxZmQ0ZjFiOGYzYjlhZDIwNDU5NGRlMWU4YzI", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-08-01T14:42:38Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-08-01T14:42:38Z"}, "message": "make `PlaceholderConst` not store the type of the const", "tree": {"sha": "cecde661d63e82a93e92a2729f7d861b466f0683", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cecde661d63e82a93e92a2729f7d861b466f0683"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "html_url": "https://github.com/rust-lang/rust/commit/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f5d8d49eb6111931091f700d07518cd2b80bc18", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5d8d49eb6111931091f700d07518cd2b80bc18", "html_url": "https://github.com/rust-lang/rust/commit/1f5d8d49eb6111931091f700d07518cd2b80bc18"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "30a46de5e5152efda1f76b4301ebe73e384c4a8f", "filename": "compiler/rustc_infer/src/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -511,7 +511,7 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Canonicalizer<'cx, 'tcx> {\n             }\n             ty::ConstKind::Placeholder(placeholder) => {\n                 return self.canonicalize_const_var(\n-                    CanonicalVarInfo { kind: CanonicalVarKind::PlaceholderConst(placeholder) },\n+                    CanonicalVarInfo { kind: CanonicalVarKind::PlaceholderConst(placeholder, ct.ty()) },\n                     ct,\n                 );\n             }\n@@ -695,11 +695,11 @@ impl<'cx, 'tcx> Canonicalizer<'cx, 'tcx> {\n                             ..placeholder\n                         })\n                     }\n-                    CanonicalVarKind::PlaceholderConst(placeholder) => {\n+                    CanonicalVarKind::PlaceholderConst(placeholder, t) => {\n                         CanonicalVarKind::PlaceholderConst(ty::Placeholder {\n                             universe: reverse_universe_map[&placeholder.universe],\n                             ..placeholder\n-                        })\n+                        }, t)\n                     }\n                 },\n             })"}, {"sha": "a9294a85e51894b15688cab9dba92b0babbf802c", "filename": "compiler/rustc_infer/src/infer/canonical/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -144,13 +144,13 @@ impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {\n                 )\n                 .into(),\n \n-            CanonicalVarKind::PlaceholderConst(ty::PlaceholderConst { universe, name }) => {\n+            CanonicalVarKind::PlaceholderConst(ty::PlaceholderConst { universe, name }, ty) => {\n                 let universe_mapped = universe_map(universe);\n                 let placeholder_mapped = ty::PlaceholderConst { universe: universe_mapped, name };\n                 self.tcx\n                     .mk_const(ty::ConstS {\n                         kind: ty::ConstKind::Placeholder(placeholder_mapped),\n-                        ty: name.ty,\n+                        ty,\n                     })\n                     .into()\n             }"}, {"sha": "9bdd437333bb6360beca59f71c2ab89413274f53", "filename": "compiler/rustc_infer/src/infer/higher_ranked/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -97,7 +97,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 self.tcx.mk_const(ty::ConstS {\n                     kind: ty::ConstKind::Placeholder(ty::PlaceholderConst {\n                         universe: next_universe,\n-                        name: ty::BoundConst { var: bound_var, ty },\n+                        name: bound_var,\n                     }),\n                     ty,\n                 })"}, {"sha": "34c22b9fcd2d4df7a21bd999f244244b94484632", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -2069,7 +2069,7 @@ fn replace_param_and_infer_substs_with_placeholder<'tcx>(\n                     ty,\n                     kind: ty::ConstKind::Placeholder(ty::PlaceholderConst {\n                         universe: ty::UniverseIndex::ROOT,\n-                        name: ty::BoundConst { ty, var: ty::BoundVar::from_usize(idx) },\n+                        name: ty::BoundVar::from_usize(idx),\n                     }),\n                 })\n                 .into()"}, {"sha": "200de9079c2188b95b8796917d14c05250547065", "filename": "compiler/rustc_middle/src/infer/canonical.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -105,7 +105,7 @@ impl<'tcx> CanonicalVarInfo<'tcx> {\n             CanonicalVarKind::Region(_) => true,\n             CanonicalVarKind::PlaceholderRegion(..) => false,\n             CanonicalVarKind::Const(..) => true,\n-            CanonicalVarKind::PlaceholderConst(_) => false,\n+            CanonicalVarKind::PlaceholderConst(_, _) => false,\n         }\n     }\n }\n@@ -133,7 +133,7 @@ pub enum CanonicalVarKind<'tcx> {\n     Const(ty::UniverseIndex, Ty<'tcx>),\n \n     /// A \"placeholder\" that represents \"any const\".\n-    PlaceholderConst(ty::PlaceholderConst<'tcx>),\n+    PlaceholderConst(ty::PlaceholderConst<'tcx>, Ty<'tcx>),\n }\n \n impl<'tcx> CanonicalVarKind<'tcx> {\n@@ -148,7 +148,7 @@ impl<'tcx> CanonicalVarKind<'tcx> {\n             CanonicalVarKind::Region(ui) => ui,\n             CanonicalVarKind::PlaceholderRegion(placeholder) => placeholder.universe,\n             CanonicalVarKind::Const(ui, _) => ui,\n-            CanonicalVarKind::PlaceholderConst(placeholder) => placeholder.universe,\n+            CanonicalVarKind::PlaceholderConst(placeholder, _) => placeholder.universe,\n         }\n     }\n }"}, {"sha": "89068032d7cedf12e625069e07c1fd4000e61109", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -1200,7 +1200,7 @@ pub struct BoundConst<'tcx> {\n     pub ty: Ty<'tcx>,\n }\n \n-pub type PlaceholderConst<'tcx> = Placeholder<BoundConst<'tcx>>;\n+pub type PlaceholderConst<'tcx> = Placeholder<BoundVar>;\n \n /// A `DefId` which, in case it is a const argument, is potentially bundled with\n /// the `DefId` of the generic parameter it instantiates."}, {"sha": "c4b7c2ea638c2e4f4281cd95ee219676879d7153", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -746,7 +746,7 @@ impl<'tcx> TypeFolder<'tcx> for BoundVarReplacer<'_, 'tcx> {\n                 let universe = self.universe_for(debruijn);\n                 let p = ty::PlaceholderConst {\n                     universe,\n-                    name: ty::BoundConst { var: bound_const, ty: ct.ty() },\n+                    name: bound_const,\n                 };\n                 self.mapped_consts.insert(p, bound_const);\n                 self.infcx"}, {"sha": "f76386fa720dfaa6b2e9e5dbe95ba8ccae81ba10", "filename": "compiler/rustc_traits/src/chalk/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs?ref=825a7cc65c4b21fd4f1b8f3b9ad204594de1e8c2", "patch": "@@ -76,7 +76,7 @@ pub(crate) fn evaluate_goal<'tcx>(\n                         chalk_ir::UniverseIndex { counter: ui.index() },\n                     ),\n                     CanonicalVarKind::Const(_ui, _ty) => unimplemented!(),\n-                    CanonicalVarKind::PlaceholderConst(_pc) => unimplemented!(),\n+                    CanonicalVarKind::PlaceholderConst(_pc, _ty) => unimplemented!(),\n                 }),\n             ),\n             value: obligation.value.lower_into(interner),"}]}