{"sha": "1217b829e85ec4720ba9a1c43c173d4015eae651", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMTdiODI5ZTg1ZWM0NzIwYmE5YTFjNDNjMTczZDQwMTVlYWU2NTE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-10-14T01:21:54Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-11-25T14:26:16Z"}, "message": "`MemCategorizationContext::pat_ty(BindByRef)` yields type of borrowed val now.\n\nThis is to fix a problem where I could not reliably map attach the\ntype for each loan-path to the loan-path itself because the same\nloan-path was ending up associated with two different types, because\nthe cmt's had diverged in their interpretation of the path.", "tree": {"sha": "c20e16ca35f8b00caf7e8fffff3974f06b0ea437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c20e16ca35f8b00caf7e8fffff3974f06b0ea437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1217b829e85ec4720ba9a1c43c173d4015eae651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1217b829e85ec4720ba9a1c43c173d4015eae651", "html_url": "https://github.com/rust-lang/rust/commit/1217b829e85ec4720ba9a1c43c173d4015eae651", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1217b829e85ec4720ba9a1c43c173d4015eae651/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91b88c54c2d2af73bcf23d383b4d5d524d222b14", "url": "https://api.github.com/repos/rust-lang/rust/commits/91b88c54c2d2af73bcf23d383b4d5d524d222b14", "html_url": "https://github.com/rust-lang/rust/commit/91b88c54c2d2af73bcf23d383b4d5d524d222b14"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "046ab162cfcb05d4c4b3df425cdd788dfb6b14df", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1217b829e85ec4720ba9a1c43c173d4015eae651/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1217b829e85ec4720ba9a1c43c173d4015eae651/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=1217b829e85ec4720ba9a1c43c173d4015eae651", "patch": "@@ -410,7 +410,28 @@ impl<'t,'tcx,TYPER:Typer<'tcx>> MemCategorizationContext<'t,TYPER> {\n     }\n \n     fn pat_ty(&self, pat: &ast::Pat) -> McResult<Ty<'tcx>> {\n-        self.typer.node_ty(pat.id)\n+        let tcx = self.typer.tcx();\n+        let base_ty = self.typer.node_ty(pat.id);\n+        // FIXME (Issue #18207): This code detects whether we are\n+        // looking at a `ref x`, and if so, figures out what the type\n+        // *being borrowed* is.  But ideally we would put in a more\n+        // fundamental fix to this conflated use of the node id.\n+        let ret_ty = match pat.node {\n+            ast::PatIdent(ast::BindByRef(_), _, _) => {\n+                // a bind-by-ref means that the base_ty will be the type of the ident itself,\n+                // but what we want here is the type of the underlying value being borrowed.\n+                // So peel off one-level, turning the &T into T.\n+                base_ty.map(|t| {\n+                    ty::deref(t, false).unwrap_or_else(|| {\n+                        panic!(\"encountered BindByRef with non &-type\");\n+                    }).ty\n+                })\n+            }\n+            _ => base_ty,\n+        };\n+        debug!(\"pat_ty(pat={}) base_ty={} ret_ty={}\",\n+               pat.repr(tcx), base_ty.repr(tcx), ret_ty.repr(tcx));\n+        ret_ty\n     }\n \n     pub fn cat_expr(&self, expr: &ast::Expr) -> McResult<cmt<'tcx>> {"}]}