{"sha": "9fa69473fd34d9d8974ebe722e21fd6feae6c986", "node_id": "C_kwDOAAsO6NoAKDlmYTY5NDczZmQzNGQ5ZDg5NzRlYmU3MjJlMjFmZDZmZWFlNmM5ODY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-03-07T05:02:01Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-03-28T19:48:52Z"}, "message": "Inline and remove `generic_args_may_unify`.\n\nIt has a single callsite.", "tree": {"sha": "2590a9913554417f6faa67aab6e8fd7ca2e176be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2590a9913554417f6faa67aab6e8fd7ca2e176be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fa69473fd34d9d8974ebe722e21fd6feae6c986", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fa69473fd34d9d8974ebe722e21fd6feae6c986", "html_url": "https://github.com/rust-lang/rust/commit/9fa69473fd34d9d8974ebe722e21fd6feae6c986", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fa69473fd34d9d8974ebe722e21fd6feae6c986/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47225e8700d8e10848b4f8df8e551fc7e438240f", "url": "https://api.github.com/repos/rust-lang/rust/commits/47225e8700d8e10848b4f8df8e551fc7e438240f", "html_url": "https://github.com/rust-lang/rust/commit/47225e8700d8e10848b4f8df8e551fc7e438240f"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "0a6e94248e6e69ba4b12937589b0c57d6535eb45", "filename": "compiler/rustc_middle/src/ty/fast_reject.rs", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9fa69473fd34d9d8974ebe722e21fd6feae6c986/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fa69473fd34d9d8974ebe722e21fd6feae6c986/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs?ref=9fa69473fd34d9d8974ebe722e21fd6feae6c986", "patch": "@@ -193,26 +193,19 @@ impl DeepRejectCtxt {\n         obligation_substs: SubstsRef<'tcx>,\n         impl_substs: SubstsRef<'tcx>,\n     ) -> bool {\n-        iter::zip(obligation_substs, impl_substs)\n-            .all(|(obl, imp)| self.generic_args_may_unify(obl, imp))\n-    }\n-\n-    pub fn generic_args_may_unify<'tcx>(\n-        self,\n-        obligation_arg: ty::GenericArg<'tcx>,\n-        impl_arg: ty::GenericArg<'tcx>,\n-    ) -> bool {\n-        match (obligation_arg.unpack(), impl_arg.unpack()) {\n-            // We don't fast reject based on regions for now.\n-            (GenericArgKind::Lifetime(_), GenericArgKind::Lifetime(_)) => true,\n-            (GenericArgKind::Type(obl), GenericArgKind::Type(imp)) => {\n-                self.types_may_unify(obl, imp)\n-            }\n-            (GenericArgKind::Const(obl), GenericArgKind::Const(imp)) => {\n-                self.consts_may_unify(obl, imp)\n+        iter::zip(obligation_substs, impl_substs).all(|(obl, imp)| {\n+            match (obl.unpack(), imp.unpack()) {\n+                // We don't fast reject based on regions for now.\n+                (GenericArgKind::Lifetime(_), GenericArgKind::Lifetime(_)) => true,\n+                (GenericArgKind::Type(obl), GenericArgKind::Type(imp)) => {\n+                    self.types_may_unify(obl, imp)\n+                }\n+                (GenericArgKind::Const(obl), GenericArgKind::Const(imp)) => {\n+                    self.consts_may_unify(obl, imp)\n+                }\n+                _ => bug!(\"kind mismatch: {obl} {imp}\"),\n             }\n-            _ => bug!(\"kind mismatch: {obligation_arg} {impl_arg}\"),\n-        }\n+        })\n     }\n \n     pub fn types_may_unify<'tcx>(self, obligation_ty: Ty<'tcx>, impl_ty: Ty<'tcx>) -> bool {"}]}