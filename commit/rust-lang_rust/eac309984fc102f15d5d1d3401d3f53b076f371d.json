{"sha": "eac309984fc102f15d5d1d3401d3f53b076f371d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhYzMwOTk4NGZjMTAyZjE1ZDVkMWQzNDAxZDNmNTNiMDc2ZjM3MWQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-10-01T07:47:36Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T09:58:59Z"}, "message": "Encode `ScalarInt::bytes` as `u128` instead of `[u8; 16]` to see if that caused the performance regression", "tree": {"sha": "ceae2d5b47b67b7c40515cec34e9dce87a6db461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceae2d5b47b67b7c40515cec34e9dce87a6db461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eac309984fc102f15d5d1d3401d3f53b076f371d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eac309984fc102f15d5d1d3401d3f53b076f371d", "html_url": "https://github.com/rust-lang/rust/commit/eac309984fc102f15d5d1d3401d3f53b076f371d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eac309984fc102f15d5d1d3401d3f53b076f371d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "362123dd7577daa4cf737bc8f50146beedd3d944", "url": "https://api.github.com/repos/rust-lang/rust/commits/362123dd7577daa4cf737bc8f50146beedd3d944", "html_url": "https://github.com/rust-lang/rust/commit/362123dd7577daa4cf737bc8f50146beedd3d944"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "cd6c86916d015cbd1c380a0984ff969620396859", "filename": "compiler/rustc_middle/src/ty/consts/int.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eac309984fc102f15d5d1d3401d3f53b076f371d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eac309984fc102f15d5d1d3401d3f53b076f371d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs?ref=eac309984fc102f15d5d1d3401d3f53b076f371d", "patch": "@@ -3,6 +3,7 @@ use crate::throw_ub;\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n use rustc_macros::HashStable;\n+use rustc_serialize::{Decodable, Decoder, Encodable, Encoder};\n use rustc_target::abi::{Size, TargetDataLayout};\n use std::convert::{TryFrom, TryInto};\n use std::fmt;\n@@ -115,7 +116,7 @@ impl std::fmt::Debug for ConstInt {\n \n // FIXME: reuse in `super::int::ConstInt` and `Scalar::Bits`\n /// The raw bytes of a simple value.\n-#[derive(Clone, Copy, Eq, PartialEq, Ord, PartialOrd, TyEncodable, TyDecodable, Hash)]\n+#[derive(Clone, Copy, Eq, PartialEq, Ord, PartialOrd, Hash)]\n #[derive(HashStable)]\n pub struct ScalarInt {\n     /// The first `size` bytes of `data` are the value.\n@@ -127,6 +128,19 @@ pub struct ScalarInt {\n     size: u8,\n }\n \n+impl<S: Encoder> Encodable<S> for ScalarInt {\n+    fn encode(&self, s: &mut S) -> Result<(), S::Error> {\n+        s.emit_u128(self.data())?;\n+        s.emit_u8(self.size)\n+    }\n+}\n+\n+impl<D: Decoder> Decodable<D> for ScalarInt {\n+    fn decode(d: &mut D) -> Result<ScalarInt, D::Error> {\n+        Ok(ScalarInt { bytes: d.read_u128()?.to_ne_bytes(), size: d.read_u8()? })\n+    }\n+}\n+\n impl ScalarInt {\n     pub const TRUE: ScalarInt = ScalarInt { bytes: 1_u128.to_ne_bytes(), size: 1 };\n "}]}