{"sha": "fecfc0e6cc78d74d5898f168cfeee81256ac9ac7", "node_id": "C_kwDOAAsO6NoAKGZlY2ZjMGU2Y2M3OGQ3NGQ1ODk4ZjE2OGNmZWVlODEyNTZhYzlhYzc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-07T11:53:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-07T11:53:25Z"}, "message": "Auto merge of #89310 - joshtriplett:available-concurrency-affinity, r=m-ou-se\n\nMake `std::thread::available_concurrency` support process-limited number of CPUs\n\nUse `libc::sched_getaffinity` and count the number of CPUs in the returned mask. This handles cases where the process doesn't have access to all CPUs, such as when limited via `taskset` or similar.\n\nThis also covers cgroup cpusets.", "tree": {"sha": "77ba1cbacf4e50cbd7afd041f94088f73dc77cb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77ba1cbacf4e50cbd7afd041f94088f73dc77cb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fecfc0e6cc78d74d5898f168cfeee81256ac9ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fecfc0e6cc78d74d5898f168cfeee81256ac9ac7", "html_url": "https://github.com/rust-lang/rust/commit/fecfc0e6cc78d74d5898f168cfeee81256ac9ac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fecfc0e6cc78d74d5898f168cfeee81256ac9ac7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90a273b785b3bc482b82c4896ba1bdea68745e46", "url": "https://api.github.com/repos/rust-lang/rust/commits/90a273b785b3bc482b82c4896ba1bdea68745e46", "html_url": "https://github.com/rust-lang/rust/commit/90a273b785b3bc482b82c4896ba1bdea68745e46"}, {"sha": "7c9611d124cc0bf127a0d83d75617445f70c422a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9611d124cc0bf127a0d83d75617445f70c422a", "html_url": "https://github.com/rust-lang/rust/commit/7c9611d124cc0bf127a0d83d75617445f70c422a"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "b99eb2e553f08908effdf7385961767f75b30c88", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fecfc0e6cc78d74d5898f168cfeee81256ac9ac7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fecfc0e6cc78d74d5898f168cfeee81256ac9ac7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=fecfc0e6cc78d74d5898f168cfeee81256ac9ac7", "patch": "@@ -275,6 +275,14 @@ pub fn available_parallelism() -> io::Result<NonZeroUsize> {\n             target_os = \"solaris\",\n             target_os = \"illumos\",\n         ))] {\n+            #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n+            {\n+                let mut set: libc::cpu_set_t = unsafe { mem::zeroed() };\n+                if unsafe { libc::sched_getaffinity(0, mem::size_of::<libc::cpu_set_t>(), &mut set) } == 0 {\n+                    let count = unsafe { libc::CPU_COUNT(&set) };\n+                    return Ok(unsafe { NonZeroUsize::new_unchecked(count as usize) });\n+                }\n+            }\n             match unsafe { libc::sysconf(libc::_SC_NPROCESSORS_ONLN) } {\n                 -1 => Err(io::Error::last_os_error()),\n                 0 => Err(io::Error::new_const(io::ErrorKind::NotFound, &\"The number of hardware threads is not known for the target platform\")),"}]}