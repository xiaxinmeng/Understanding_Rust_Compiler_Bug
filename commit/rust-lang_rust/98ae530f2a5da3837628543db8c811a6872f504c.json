{"sha": "98ae530f2a5da3837628543db8c811a6872f504c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YWU1MzBmMmE1ZGEzODM3NjI4NTQzZGI4YzgxMWE2ODcyZjUwNGM=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-07-31T14:17:08Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-08-04T15:24:52Z"}, "message": "Fix missing ?Sized bounds in tests.", "tree": {"sha": "dfbb5d0a67be25ef2c4b315a0f72cb937e4c755b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfbb5d0a67be25ef2c4b315a0f72cb937e4c755b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98ae530f2a5da3837628543db8c811a6872f504c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98ae530f2a5da3837628543db8c811a6872f504c", "html_url": "https://github.com/rust-lang/rust/commit/98ae530f2a5da3837628543db8c811a6872f504c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98ae530f2a5da3837628543db8c811a6872f504c/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f6621fbfaa673ef924d51eee79aac385c41b7ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6621fbfaa673ef924d51eee79aac385c41b7ab", "html_url": "https://github.com/rust-lang/rust/commit/0f6621fbfaa673ef924d51eee79aac385c41b7ab"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "79ff84c633c830af712eaea358f4b62a5f68b78c", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/98ae530f2a5da3837628543db8c811a6872f504c/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae530f2a5da3837628543db8c811a6872f504c/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=98ae530f2a5da3837628543db8c811a6872f504c", "patch": "@@ -147,7 +147,7 @@ mod ops {\n     pub use self::try_trait::Try;\n }\n \n-mov convert {\n+mod convert {\n     pub trait From<T> {}\n     impl<T> From<T> for T {}\n }\n@@ -567,8 +567,8 @@ fn deref_trait() {\n     check_types(\n         r#\"\n //- minicore: deref\n-struct Arc<T>;\n-impl<T> core::ops::Deref for Arc<T> {\n+struct Arc<T: ?Sized>;\n+impl<T: ?Sized> core::ops::Deref for Arc<T> {\n     type Target = T;\n }\n \n@@ -589,9 +589,9 @@ fn deref_trait_with_inference_var() {\n     check_types(\n         r#\"\n //- minicore: deref\n-struct Arc<T>;\n-fn new_arc<T>() -> Arc<T> { Arc }\n-impl<T> core::ops::Deref for Arc<T> {\n+struct Arc<T: ?Sized>;\n+fn new_arc<T: ?Sized>() -> Arc<T> { Arc }\n+impl<T: ?Sized> core::ops::Deref for Arc<T> {\n     type Target = T;\n }\n \n@@ -631,7 +631,7 @@ fn deref_trait_with_question_mark_size() {\n     check_types(\n         r#\"\n //- minicore: deref\n-struct Arc<T>;\n+struct Arc<T: ?Sized>;\n impl<T: ?Sized> core::ops::Deref for Arc<T> {\n     type Target = T;\n }\n@@ -2431,8 +2431,8 @@ fn dyn_trait_through_chalk() {\n     check_types(\n         r#\"\n //- minicore: deref\n-struct Box<T> {}\n-impl<T> core::ops::Deref for Box<T> {\n+struct Box<T: ?Sized> {}\n+impl<T: ?Sized> core::ops::Deref for Box<T> {\n     type Target = T;\n }\n trait Trait {"}]}