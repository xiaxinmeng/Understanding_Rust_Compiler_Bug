{"sha": "85da24527adc45adc6b503d92fca2a29331ddab5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZGEyNDUyN2FkYzQ1YWRjNmI1MDNkOTJmY2EyYTI5MzMxZGRhYjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-14T13:06:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-14T13:06:23Z"}, "message": "Auto merge of #54080 - PramodBisht:issue/53692, r=estebank\n\nAddressed #53692\n\n@sunjay @estebank  @csmoe hopefully this answer #53692\nPlease let me know if you have any suggestion", "tree": {"sha": "7e154ba47dc2359a085353852d840e582eb0c7a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e154ba47dc2359a085353852d840e582eb0c7a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85da24527adc45adc6b503d92fca2a29331ddab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85da24527adc45adc6b503d92fca2a29331ddab5", "html_url": "https://github.com/rust-lang/rust/commit/85da24527adc45adc6b503d92fca2a29331ddab5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85da24527adc45adc6b503d92fca2a29331ddab5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfabe4b88509bfff1eca9060ccc9a4d28ee394e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfabe4b88509bfff1eca9060ccc9a4d28ee394e8", "html_url": "https://github.com/rust-lang/rust/commit/dfabe4b88509bfff1eca9060ccc9a4d28ee394e8"}, {"sha": "af09bf9293ed89b93662bad02006bcabde587a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/af09bf9293ed89b93662bad02006bcabde587a16", "html_url": "https://github.com/rust-lang/rust/commit/af09bf9293ed89b93662bad02006bcabde587a16"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "aa27fe528e1fd19d01542efd73fa8cab098817b2", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/85da24527adc45adc6b503d92fca2a29331ddab5/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85da24527adc45adc6b503d92fca2a29331ddab5/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=85da24527adc45adc6b503d92fca2a29331ddab5", "patch": "@@ -4726,7 +4726,23 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         if receiver.ends_with(&method_call) {\n                             None  // do not suggest code that is already there (#53348)\n                         } else {\n-                            Some(format!(\"{}{}\", receiver, method_call))\n+                            /*\n+                            methods defined in `method_call_list` will overwrite\n+                            `.clone()` in copy of `receiver`\n+                            */\n+                            let method_call_list = [\".to_vec()\", \".to_string()\"];\n+                            if receiver.ends_with(\".clone()\")\n+                                    && method_call_list.contains(&method_call.as_str()){\n+                                // created copy of `receiver` because we don't want other\n+                                // suggestion to get affected\n+                                let mut new_receiver = receiver.clone();\n+                                let max_len = new_receiver.rfind(\".\").unwrap();\n+                                new_receiver.truncate(max_len);\n+                                Some(format!(\"{}{}\", new_receiver, method_call))\n+                            }\n+                            else {\n+                                Some(format!(\"{}{}\", receiver, method_call))\n+                            }\n                         }\n                     }) .collect::<Vec<_>>();\n                 if !suggestions.is_empty() {"}, {"sha": "0b6cc36fa52ef77025931c738f181a7ccb3cba5a", "filename": "src/test/ui/issue-53692.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/85da24527adc45adc6b503d92fca2a29331ddab5/src%2Ftest%2Fui%2Fissue-53692.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85da24527adc45adc6b503d92fca2a29331ddab5/src%2Ftest%2Fui%2Fissue-53692.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-53692.rs?ref=85da24527adc45adc6b503d92fca2a29331ddab5", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+fn main() {\n+        let items = vec![1, 2, 3];\n+        let ref_items: &[i32] = &items;\n+        let items_clone: Vec<i32> = ref_items.clone();\n+\n+        // in that case no suggestion will be triggered\n+        let items_clone_2:Vec<i32> = items.clone();\n+\n+        let s = \"hi\";\n+        let string: String = s.clone();\n+\n+        // in that case no suggestion will be triggered\n+        let s2 = \"hi\";\n+        let string_2: String = s2.to_string();\n+}"}, {"sha": "9cd8a53615529b2fb358f57d4b60f61ca4773f07", "filename": "src/test/ui/issue-53692.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/85da24527adc45adc6b503d92fca2a29331ddab5/src%2Ftest%2Fui%2Fissue-53692.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/85da24527adc45adc6b503d92fca2a29331ddab5/src%2Ftest%2Fui%2Fissue-53692.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-53692.stderr?ref=85da24527adc45adc6b503d92fca2a29331ddab5", "patch": "@@ -0,0 +1,27 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53692.rs:13:37\n+   |\n+LL |         let items_clone: Vec<i32> = ref_items.clone();\n+   |                                     ^^^^^^^^^^^^^^^^^\n+   |                                     |\n+   |                                     expected struct `std::vec::Vec`, found &[i32]\n+   |                                     help: try using a conversion method: `ref_items.to_vec()`\n+   |\n+   = note: expected type `std::vec::Vec<i32>`\n+              found type `&[i32]`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53692.rs:19:30\n+   |\n+LL |         let string: String = s.clone();\n+   |                              ^^^^^^^^^\n+   |                              |\n+   |                              expected struct `std::string::String`, found &str\n+   |                              help: try using a conversion method: `s.to_string()`\n+   |\n+   = note: expected type `std::string::String`\n+              found type `&str`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}