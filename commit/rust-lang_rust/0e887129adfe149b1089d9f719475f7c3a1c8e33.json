{"sha": "0e887129adfe149b1089d9f719475f7c3a1c8e33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlODg3MTI5YWRmZTE0OWIxMDg5ZDlmNzE5NDc1ZjdjM2ExYzhlMzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-21T11:12:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-21T11:12:22Z"}, "message": "Rollup merge of #72371 - Elrendio:char_documentation, r=steveklabnik\n\nFIX - Char documentation for unexperienced users\n\nThis is my first PR on rust and even if I've read [CONTRIBUTING.md](https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#pull-requests) I'm ensure everything is perfect. Sorry if I didn't follow the exact procedure.\n\n**What it does:**\n- Add an example in the char documentation\n\n**Explanation**\nUnexperienced users might not know that punctuation is `Case_Ignorable` and not `Uppercase` and `Lowercase` which mean that when checking if a string is uppercase one might be tempted to write:\n```rust\nmy_string.chars().all(char::is_uppercase)\n```\n\nHowever this will return false for `\"HELLO WORLD\"` which is not intuitive. Since the function `is_case_ignorable` doesn't exists I believe the correct way to check is:\n```rust\n!my_string.chars().any(char::is_lowercase)\n```\n\nThe aim of this example is to prevent unexperienced users to make an error which punctuation chars.", "tree": {"sha": "4097f3ee674562b6368caec53188491d0aee9b99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4097f3ee674562b6368caec53188491d0aee9b99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e887129adfe149b1089d9f719475f7c3a1c8e33", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJexmIWCRBK7hj4Ov3rIwAAdHIIAHbaQ6p5viSRg4go12HTH+Y5\n7s63VJHGcBtQ/JheWDiJl/aXi17dVDYFe5tOMrLK1Lp1DEPsb+5JC+L3jKX088LA\nUOdvSKCgw5YZ9pcH4v6msQKCPv7buBbJw48BZeTeSqLtZSkWKXw1sDJ0bf+US/wX\nPQBUC6WX7SQsAbvsdKxWJ+w8zWNYgeDrJQLq+FI4EIBgjJBk6ZkeNOqd1E651fOS\n1ond+iA8tzBHRZCSK4Le86YMm3sDi+gcX46lGrVS4aVOr1+cyPwZy2egpeuV/Y+m\n3R5lfnkKeOjo1eCm3M1pyHKUuw5VZUaXPBoG3YjPlfcafGKVSDi5S3i9i9OSiks=\n=eD0l\n-----END PGP SIGNATURE-----\n", "payload": "tree 4097f3ee674562b6368caec53188491d0aee9b99\nparent 4f9fe914e23e25010e452a9c3fd3afb0a0070994\nparent f5b49572dde8743d9c4f36d736e560f3b21d0527\nauthor Ralf Jung <post@ralfj.de> 1590059542 +0200\ncommitter GitHub <noreply@github.com> 1590059542 +0200\n\nRollup merge of #72371 - Elrendio:char_documentation, r=steveklabnik\n\nFIX - Char documentation for unexperienced users\n\nThis is my first PR on rust and even if I've read [CONTRIBUTING.md](https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#pull-requests) I'm ensure everything is perfect. Sorry if I didn't follow the exact procedure.\n\n**What it does:**\n- Add an example in the char documentation\n\n**Explanation**\nUnexperienced users might not know that punctuation is `Case_Ignorable` and not `Uppercase` and `Lowercase` which mean that when checking if a string is uppercase one might be tempted to write:\n```rust\nmy_string.chars().all(char::is_uppercase)\n```\n\nHowever this will return false for `\"HELLO WORLD\"` which is not intuitive. Since the function `is_case_ignorable` doesn't exists I believe the correct way to check is:\n```rust\n!my_string.chars().any(char::is_lowercase)\n```\n\nThe aim of this example is to prevent unexperienced users to make an error which punctuation chars.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e887129adfe149b1089d9f719475f7c3a1c8e33", "html_url": "https://github.com/rust-lang/rust/commit/0e887129adfe149b1089d9f719475f7c3a1c8e33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e887129adfe149b1089d9f719475f7c3a1c8e33/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f9fe914e23e25010e452a9c3fd3afb0a0070994", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f9fe914e23e25010e452a9c3fd3afb0a0070994", "html_url": "https://github.com/rust-lang/rust/commit/4f9fe914e23e25010e452a9c3fd3afb0a0070994"}, {"sha": "f5b49572dde8743d9c4f36d736e560f3b21d0527", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5b49572dde8743d9c4f36d736e560f3b21d0527", "html_url": "https://github.com/rust-lang/rust/commit/f5b49572dde8743d9c4f36d736e560f3b21d0527"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "5c5bc9adb5df29fbed1e0338cfbea2ba3e26764d", "filename": "src/libcore/char/methods.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e887129adfe149b1089d9f719475f7c3a1c8e33/src%2Flibcore%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e887129adfe149b1089d9f719475f7c3a1c8e33/src%2Flibcore%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmethods.rs?ref=0e887129adfe149b1089d9f719475f7c3a1c8e33", "patch": "@@ -812,8 +812,9 @@ impl char {\n     /// assert!(!'A'.is_lowercase());\n     /// assert!(!'\u0394'.is_lowercase());\n     ///\n-    /// // The various Chinese scripts do not have case, and so:\n+    /// // The various Chinese scripts and punctuation do not have case, and so:\n     /// assert!(!'\u4e2d'.is_lowercase());\n+    /// assert!(!' '.is_lowercase());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n@@ -843,8 +844,9 @@ impl char {\n     /// assert!('A'.is_uppercase());\n     /// assert!('\u0394'.is_uppercase());\n     ///\n-    /// // The various Chinese scripts do not have case, and so:\n+    /// // The various Chinese scripts and punctuation do not have case, and so:\n     /// assert!(!'\u4e2d'.is_uppercase());\n+    /// assert!(!' '.is_uppercase());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]"}]}