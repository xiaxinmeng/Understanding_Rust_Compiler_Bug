{"sha": "141bf38f23d2737bde70a38a23bbe90fa062c450", "node_id": "C_kwDOAAsO6NoAKDE0MWJmMzhmMjNkMjczN2JkZTcwYTM4YTIzYmJlOTBmYTA2MmM0NTA", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-26T01:55:40Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-26T22:58:17Z"}, "message": "Add instructions for using rust-analyzer for Miri development", "tree": {"sha": "6c188cfee3cf00a1025e54eff24c78a765e2f9b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c188cfee3cf00a1025e54eff24c78a765e2f9b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/141bf38f23d2737bde70a38a23bbe90fa062c450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/141bf38f23d2737bde70a38a23bbe90fa062c450", "html_url": "https://github.com/rust-lang/rust/commit/141bf38f23d2737bde70a38a23bbe90fa062c450", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/141bf38f23d2737bde70a38a23bbe90fa062c450/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "084c660c71bbd5c931ea1e47f9b9633ba3a108ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/084c660c71bbd5c931ea1e47f9b9633ba3a108ac", "html_url": "https://github.com/rust-lang/rust/commit/084c660c71bbd5c931ea1e47f9b9633ba3a108ac"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "caed6e3226d85f750e9c70bece7ad63a5410ed6a", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/141bf38f23d2737bde70a38a23bbe90fa062c450/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/141bf38f23d2737bde70a38a23bbe90fa062c450/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=141bf38f23d2737bde70a38a23bbe90fa062c450", "patch": "@@ -107,6 +107,41 @@ There's a test for the cargo wrapper in the `test-cargo-miri` directory; run\n `./run-test.py` in there to execute it. Like `./miri test`, this respects the\n `MIRI_TEST_TARGET` environment variable to execute the test for another target.\n \n+## Configuring `rust-analyzer`\n+\n+To configure `rust-analyzer` and VS Code for working on Miri, save the following\n+to `.vscode/settings.json` in your local Miri clone:\n+\n+```json\n+{\n+    \"rust-analyzer.checkOnSave.overrideCommand\": [\n+        \"./miri\",\n+        \"check\",\n+        \"--message-format=json\"\n+    ],\n+    \"rust-analyzer.rustfmt.extraArgs\": [\n+        \"+nightly\"\n+    ],\n+    \"rust-analyzer.rustcSource\": \"discover\",\n+    \"rust-analyzer.linkedProjects\": [\n+        \"./Cargo.toml\",\n+        \"./cargo-miri/Cargo.toml\"\n+    ]\n+}\n+```\n+\n+> #### Note\n+>\n+> If you are [building Miri with a locally built rustc][], set\n+> `rust-analyzer.rustcSource` to the relative path from your Miri clone to the\n+> root `Cargo.toml` of the locally built rustc. For example, the path might look\n+> like `../rust/Cargo.toml`.\n+\n+See the rustc-dev-guide's docs on [\"Configuring `rust-analyzer` for `rustc`\"][rdg-r-a]\n+for more information about configuring VS Code and `rust-analyzer`.\n+\n+[rdg-r-a]: https://rustc-dev-guide.rust-lang.org/building/suggested.html#configuring-rust-analyzer-for-rustc\n+\n ## Advanced topic: other build environments\n \n We described above the simplest way to get a working build environment for Miri,\n@@ -132,6 +167,8 @@ rustc. This avoids blocking all Miri development on landing a big PR.\n \n ### Building Miri with a locally built rustc\n \n+[building Miri with a locally built rustc]: #building-miri-with-a-locally-built-rustc\n+\n A big part of the Miri driver lives in rustc, so working on Miri will sometimes\n require using a locally built rustc. The bug you want to fix may actually be on\n the rustc side, or you just need to get more detailed trace of the execution"}]}