{"sha": "a8c19e1b48cd16075c90b7a3a69f57298c83fb34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YzE5ZTFiNDhjZDE2MDc1YzkwYjdhM2E2OWY1NzI5OGM4M2ZiMzQ=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-12-11T05:33:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-11T05:33:02Z"}, "message": "Rollup merge of #79375 - vext01:kernel-copy-temps, r=bjorn3\n\nMake the kernel_copy tests more robust/concurrent.\n\nThese tests write to the same filenames in /tmp and in some cases these files don't get cleaned up properly. This caused issues for us when different users run the tests on the same system, e.g.:\n\n```\n---- sys::unix::kernel_copy::tests::bench_file_to_file_copy stdout ----\nthread 'sys::unix::kernel_copy::tests::bench_file_to_file_copy' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 13, kind: PermissionDenied, message: \"Permission denied\" }', library/std/src/sys/unix/kernel_copy/tests.rs:71:10\n---- sys::unix::kernel_copy::tests::bench_file_to_socket_copy stdout ----\nthread 'sys::unix::kernel_copy::tests::bench_file_to_socket_copy' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 13, kind: PermissionDenied, message: \"Permission denied\" }', library/std/src/sys/unix/kernel_copy/tests.rs\ud83d\udcaf10\n```\n\nUse `std::sys_common::io__test::tmpdir()` to solve this.\n\nCC ``@the8472.``", "tree": {"sha": "ff3645246fd8390f4869529e969d814aa5461331", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff3645246fd8390f4869529e969d814aa5461331"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8c19e1b48cd16075c90b7a3a69f57298c83fb34", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf0wSPCRBK7hj4Ov3rIwAAdHIIAA7KFo4dMzicE404sSqb5dpK\nifXa/rXzytnK+mOldbFCYR1RBFoBST7DANB6vy6rFuukUWHonPHeOUFM9SY8zwX4\nhiHluzWNeKdrRSkK7WkoMLIpEluyWbv0huPxOtB+DN+OBbNte2Ffcvd8F3v4/SLz\nal5lACcI6XBLNOTFAUgLvL/DcFvlCh64X63RPtWXQXwcJ0Z6YTn3pevFhXBj64kK\n48eBscnpjK+6SolqpUGuW0idnxHs1LGk9NBThce80FPFoCniy1MLgfdEGMS554zi\nItl2qcnZ7+IfLGpTJdhUdR+RNatLtsm0YwA/7zTfK0u1U7+YMW8WEylNHcKKgAw=\n=swoc\n-----END PGP SIGNATURE-----\n", "payload": "tree ff3645246fd8390f4869529e969d814aa5461331\nparent 1b4ffe4705c98c490b76eb5631607a10280eacfe\nparent 87c1fdbcfb227c1b7b3b85c146a549a54fea63e8\nauthor Tyler Mandry <tmandry@gmail.com> 1607664782 -0800\ncommitter GitHub <noreply@github.com> 1607664782 -0800\n\nRollup merge of #79375 - vext01:kernel-copy-temps, r=bjorn3\n\nMake the kernel_copy tests more robust/concurrent.\n\nThese tests write to the same filenames in /tmp and in some cases these files don't get cleaned up properly. This caused issues for us when different users run the tests on the same system, e.g.:\n\n```\n---- sys::unix::kernel_copy::tests::bench_file_to_file_copy stdout ----\nthread 'sys::unix::kernel_copy::tests::bench_file_to_file_copy' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 13, kind: PermissionDenied, message: \"Permission denied\" }', library/std/src/sys/unix/kernel_copy/tests.rs:71:10\n---- sys::unix::kernel_copy::tests::bench_file_to_socket_copy stdout ----\nthread 'sys::unix::kernel_copy::tests::bench_file_to_socket_copy' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 13, kind: PermissionDenied, message: \"Permission denied\" }', library/std/src/sys/unix/kernel_copy/tests.rs\ud83d\udcaf10\n```\n\nUse `std::sys_common::io__test::tmpdir()` to solve this.\n\nCC ``@the8472.``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8c19e1b48cd16075c90b7a3a69f57298c83fb34", "html_url": "https://github.com/rust-lang/rust/commit/a8c19e1b48cd16075c90b7a3a69f57298c83fb34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8c19e1b48cd16075c90b7a3a69f57298c83fb34/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b4ffe4705c98c490b76eb5631607a10280eacfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b4ffe4705c98c490b76eb5631607a10280eacfe", "html_url": "https://github.com/rust-lang/rust/commit/1b4ffe4705c98c490b76eb5631607a10280eacfe"}, {"sha": "87c1fdbcfb227c1b7b3b85c146a549a54fea63e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/87c1fdbcfb227c1b7b3b85c146a549a54fea63e8", "html_url": "https://github.com/rust-lang/rust/commit/87c1fdbcfb227c1b7b3b85c146a549a54fea63e8"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "77369cdd35fb63726ed06d178f67fb5d8dffafcd", "filename": "library/std/src/sys/unix/kernel_copy/tests.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a8c19e1b48cd16075c90b7a3a69f57298c83fb34/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8c19e1b48cd16075c90b7a3a69f57298c83fb34/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs?ref=a8c19e1b48cd16075c90b7a3a69f57298c83fb34", "patch": "@@ -1,18 +1,18 @@\n-use crate::env::temp_dir;\n use crate::fs::OpenOptions;\n use crate::io;\n use crate::io::Result;\n use crate::io::SeekFrom;\n use crate::io::{BufRead, Read, Seek, Write};\n use crate::os::unix::io::AsRawFd;\n+use crate::sys_common::io::test::tmpdir;\n \n #[test]\n fn copy_specialization() -> Result<()> {\n     use crate::io::{BufReader, BufWriter};\n \n-    let path = crate::env::temp_dir();\n-    let source_path = path.join(\"copy-spec.source\");\n-    let sink_path = path.join(\"copy-spec.sink\");\n+    let tmp_path = tmpdir();\n+    let source_path = tmp_path.join(\"copy-spec.source\");\n+    let sink_path = tmp_path.join(\"copy-spec.sink\");\n \n     let result: Result<()> = try {\n         let mut source = crate::fs::OpenOptions::new()\n@@ -68,7 +68,8 @@ fn copy_specialization() -> Result<()> {\n #[bench]\n fn bench_file_to_file_copy(b: &mut test::Bencher) {\n     const BYTES: usize = 128 * 1024;\n-    let src_path = temp_dir().join(\"file-copy-bench-src\");\n+    let temp_path = tmpdir();\n+    let src_path = temp_path.join(\"file-copy-bench-src\");\n     let mut src = crate::fs::OpenOptions::new()\n         .create(true)\n         .truncate(true)\n@@ -78,7 +79,7 @@ fn bench_file_to_file_copy(b: &mut test::Bencher) {\n         .unwrap();\n     src.write(&vec![0u8; BYTES]).unwrap();\n \n-    let sink_path = temp_dir().join(\"file-copy-bench-sink\");\n+    let sink_path = temp_path.join(\"file-copy-bench-sink\");\n     let mut sink = crate::fs::OpenOptions::new()\n         .create(true)\n         .truncate(true)\n@@ -97,7 +98,8 @@ fn bench_file_to_file_copy(b: &mut test::Bencher) {\n #[bench]\n fn bench_file_to_socket_copy(b: &mut test::Bencher) {\n     const BYTES: usize = 128 * 1024;\n-    let src_path = temp_dir().join(\"pipe-copy-bench-src\");\n+    let temp_path = tmpdir();\n+    let src_path = temp_path.join(\"pipe-copy-bench-src\");\n     let mut src = OpenOptions::new()\n         .create(true)\n         .truncate(true)\n@@ -128,7 +130,8 @@ fn bench_file_to_socket_copy(b: &mut test::Bencher) {\n #[bench]\n fn bench_file_to_uds_copy(b: &mut test::Bencher) {\n     const BYTES: usize = 128 * 1024;\n-    let src_path = temp_dir().join(\"uds-copy-bench-src\");\n+    let temp_path = tmpdir();\n+    let src_path = temp_path.join(\"uds-copy-bench-src\");\n     let mut src = OpenOptions::new()\n         .create(true)\n         .truncate(true)"}]}