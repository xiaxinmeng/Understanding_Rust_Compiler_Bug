{"sha": "49048eab47b2bb6cbba518c6477d0054cc3fc780", "node_id": "C_kwDOAAsO6NoAKDQ5MDQ4ZWFiNDdiMmJiNmNiYmE1MThjNjQ3N2QwMDU0Y2MzZmM3ODA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-18T06:41:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-18T06:41:15Z"}, "message": "Rollup merge of #96378 - compiler-errors:trait-upcast-error, r=nagisa\n\nMention traits and types involved in unstable trait upcasting\n\nFixes #95972  by printing the traits being upcasted and the types being coerced that cause that upcasting...\n\n---\n\nthe poor span mentioned in the original issue has nothing to do with trait upcasting diagnostic here...\n\n>  The original example I had that made me run into this issue had an even longer expression there (multiple chained\niterator methods) which just got all highlighted as one big block saying \"somewhere here trait coercion is used and it's not allowed\".\n\nI don't think I can solve that issue in general without fixing the ObligationCauseCode and span that gets passed into Coerce.", "tree": {"sha": "84a6f61c4fa407f3b9f0801d96ab834c396bfa6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84a6f61c4fa407f3b9f0801d96ab834c396bfa6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49048eab47b2bb6cbba518c6477d0054cc3fc780", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJihJUMCRBK7hj4Ov3rIwAAuvEIACU+GGp9KdjFevkTcoToXp/Y\nkxmp3g7gwo1DoTrHZhOOJw1vnsr22ffWG7+AtWCGhT7EAkANGB6yu8OqIDOXB9x/\nCwRvHSOPEloXg9AEIY0v30ute8GvGRRf+f4qTa7RpVl7PYCSAiPePTb7cdkMo9OO\nOOmfq3tCSCfwJNzFsWOEFIZ75EmamjZMmSzdYIYc/DSdg1/Dmz1JKTr3larIQpCf\nCAIFzDeD8FKj90CDjY7p31w2Vb1XOfsx25y1NZZwFstipFE2h+iKmLlDWBKpsLUo\nG3uMmloTOZRkjr63CDXxmD4JGzBWE+3b1F9UZ2k16aGYB1OhHnvX0AleKQZ+mNI=\n=MpMY\n-----END PGP SIGNATURE-----\n", "payload": "tree 84a6f61c4fa407f3b9f0801d96ab834c396bfa6c\nparent 04f903859a8a1b82a25b6bba7301beb06ad145d2\nparent 0de7568e417ae001a45ae0a85b8bc2067a5f9c46\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1652856075 +0200\ncommitter GitHub <noreply@github.com> 1652856075 +0200\n\nRollup merge of #96378 - compiler-errors:trait-upcast-error, r=nagisa\n\nMention traits and types involved in unstable trait upcasting\n\nFixes #95972  by printing the traits being upcasted and the types being coerced that cause that upcasting...\n\n---\n\nthe poor span mentioned in the original issue has nothing to do with trait upcasting diagnostic here...\n\n>  The original example I had that made me run into this issue had an even longer expression there (multiple chained\niterator methods) which just got all highlighted as one big block saying \"somewhere here trait coercion is used and it's not allowed\".\n\nI don't think I can solve that issue in general without fixing the ObligationCauseCode and span that gets passed into Coerce.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49048eab47b2bb6cbba518c6477d0054cc3fc780", "html_url": "https://github.com/rust-lang/rust/commit/49048eab47b2bb6cbba518c6477d0054cc3fc780", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49048eab47b2bb6cbba518c6477d0054cc3fc780/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04f903859a8a1b82a25b6bba7301beb06ad145d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/04f903859a8a1b82a25b6bba7301beb06ad145d2", "html_url": "https://github.com/rust-lang/rust/commit/04f903859a8a1b82a25b6bba7301beb06ad145d2"}, {"sha": "0de7568e417ae001a45ae0a85b8bc2067a5f9c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/0de7568e417ae001a45ae0a85b8bc2067a5f9c46", "html_url": "https://github.com/rust-lang/rust/commit/0de7568e417ae001a45ae0a85b8bc2067a5f9c46"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "71957a2d1b07649cdaa8f7e406993da1dd59cfdf", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/49048eab47b2bb6cbba518c6477d0054cc3fc780/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49048eab47b2bb6cbba518c6477d0054cc3fc780/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=49048eab47b2bb6cbba518c6477d0054cc3fc780", "patch": "@@ -616,7 +616,7 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n         )];\n \n         let mut has_unsized_tuple_coercion = false;\n-        let mut has_trait_upcasting_coercion = false;\n+        let mut has_trait_upcasting_coercion = None;\n \n         // Keep resolving `CoerceUnsized` and `Unsize` predicates to avoid\n         // emitting a coercion in cases like `Foo<$1>` -> `Foo<$2>`, where\n@@ -636,7 +636,7 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n                             && data_a.principal_def_id() != data_b.principal_def_id()\n                         {\n                             debug!(\"coerce_unsized: found trait upcasting coercion\");\n-                            has_trait_upcasting_coercion = true;\n+                            has_trait_upcasting_coercion = Some((self_ty, unsize_ty));\n                         }\n                         if let ty::Tuple(..) = unsize_ty.kind() {\n                             debug!(\"coerce_unsized: found unsized tuple coercion\");\n@@ -707,14 +707,19 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n             .emit();\n         }\n \n-        if has_trait_upcasting_coercion && !self.tcx().features().trait_upcasting {\n-            feature_err(\n+        if let Some((sub, sup)) = has_trait_upcasting_coercion\n+            && !self.tcx().features().trait_upcasting\n+        {\n+            // Renders better when we erase regions, since they're not really the point here.\n+            let (sub, sup) = self.tcx.erase_regions((sub, sup));\n+            let mut err = feature_err(\n                 &self.tcx.sess.parse_sess,\n                 sym::trait_upcasting,\n                 self.cause.span,\n-                \"trait upcasting coercion is experimental\",\n-            )\n-            .emit();\n+                &format!(\"cannot cast `{sub}` to `{sup}`, trait upcasting coercion is experimental\"),\n+            );\n+            err.note(&format!(\"required when coercing `{source}` into `{target}`\"));\n+            err.emit();\n         }\n \n         Ok(coercion)"}, {"sha": "93afa78459d3da72ca90891af547f6f47523ff9b", "filename": "src/test/ui/feature-gates/feature-gate-trait_upcasting.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49048eab47b2bb6cbba518c6477d0054cc3fc780/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait_upcasting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49048eab47b2bb6cbba518c6477d0054cc3fc780/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait_upcasting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait_upcasting.stderr?ref=49048eab47b2bb6cbba518c6477d0054cc3fc780", "patch": "@@ -1,11 +1,12 @@\n-error[E0658]: trait upcasting coercion is experimental\n+error[E0658]: cannot cast `dyn Bar` to `dyn Foo`, trait upcasting coercion is experimental\n   --> $DIR/feature-gate-trait_upcasting.rs:11:25\n    |\n LL |     let foo: &dyn Foo = bar;\n    |                         ^^^\n    |\n    = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n    = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n+   = note: required when coercing `&dyn Bar` into `&dyn Foo`\n \n error: aborting due to previous error\n "}, {"sha": "17bfae2a4e46bdd33fa983a2d29f512a92579916", "filename": "src/test/ui/issues/issue-11515.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49048eab47b2bb6cbba518c6477d0054cc3fc780/src%2Ftest%2Fui%2Fissues%2Fissue-11515.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49048eab47b2bb6cbba518c6477d0054cc3fc780/src%2Ftest%2Fui%2Fissues%2Fissue-11515.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11515.stderr?ref=49048eab47b2bb6cbba518c6477d0054cc3fc780", "patch": "@@ -1,11 +1,12 @@\n-error[E0658]: trait upcasting coercion is experimental\n+error[E0658]: cannot cast `dyn Fn()` to `dyn FnMut()`, trait upcasting coercion is experimental\n   --> $DIR/issue-11515.rs:9:33\n    |\n LL |     let test = box Test { func: closure };\n    |                                 ^^^^^^^\n    |\n    = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n    = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n+   = note: required when coercing `Box<(dyn Fn() + 'static)>` into `Box<(dyn FnMut() + 'static)>`\n \n error: aborting due to previous error\n "}]}