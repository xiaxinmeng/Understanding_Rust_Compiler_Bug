{"sha": "e77a55b5d91a7876e4ba23179d15ed0ce4affeb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3N2E1NWI1ZDkxYTc4NzZlNGJhMjMxNzlkMTVlZDBjZTRhZmZlYjc=", "commit": {"author": {"name": "Matthew Healy", "email": "matthew.healy@soundcloud.com", "date": "2019-12-17T22:41:55Z"}, "committer": {"name": "Matthew Healy", "email": "matthew.healy@soundcloud.com", "date": "2019-12-17T22:41:55Z"}, "message": "Remove outdated references to @T from comments", "tree": {"sha": "2fd38a6da5d6da6039111b87c35c95286c793647", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fd38a6da5d6da6039111b87c35c95286c793647"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e77a55b5d91a7876e4ba23179d15ed0ce4affeb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e77a55b5d91a7876e4ba23179d15ed0ce4affeb7", "html_url": "https://github.com/rust-lang/rust/commit/e77a55b5d91a7876e4ba23179d15ed0ce4affeb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e77a55b5d91a7876e4ba23179d15ed0ce4affeb7/comments", "author": null, "committer": null, "parents": [{"sha": "99b89533d4cdf7682ea4054ad0ee36c351d05df1", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b89533d4cdf7682ea4054ad0ee36c351d05df1", "html_url": "https://github.com/rust-lang/rust/commit/99b89533d4cdf7682ea4054ad0ee36c351d05df1"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "e75cc8b1756d15cbac9260e0ee2066cedad00ebc", "filename": "src/libsyntax/ptr.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e77a55b5d91a7876e4ba23179d15ed0ce4affeb7/src%2Flibsyntax%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77a55b5d91a7876e4ba23179d15ed0ce4affeb7/src%2Flibsyntax%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fptr.rs?ref=e77a55b5d91a7876e4ba23179d15ed0ce4affeb7", "patch": "@@ -1,17 +1,12 @@\n //! The AST pointer.\n //!\n-//! Provides `P<T>`, a frozen owned smart pointer, as a replacement for `@T` in\n-//! the AST.\n+//! Provides `P<T>`, a frozen owned smart pointer.\n //!\n //! # Motivations and benefits\n //!\n //! * **Identity**: sharing AST nodes is problematic for the various analysis\n //!   passes (e.g., one may be able to bypass the borrow checker with a shared\n-//!   `ExprKind::AddrOf` node taking a mutable borrow). The only reason `@T` in the\n-//!   AST hasn't caused issues is because of inefficient folding passes which\n-//!   would always deduplicate any such shared nodes. Even if the AST were to\n-//!   switch to an arena, this would still hold, i.e., it couldn't use `&'a T`,\n-//!   but rather a wrapper like `P<'a, T>`.\n+//!   `ExprKind::AddrOf` node taking a mutable borrow).\n //!\n //! * **Immutability**: `P<T>` disallows mutating its inner `T`, unlike `Box<T>`\n //!   (unless it contains an `Unsafe` interior, but that may be denied later)."}]}