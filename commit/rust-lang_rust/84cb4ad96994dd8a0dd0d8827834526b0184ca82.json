{"sha": "84cb4ad96994dd8a0dd0d8827834526b0184ca82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0Y2I0YWQ5Njk5NGRkOGEwZGQwZDg4Mjc4MzQ1MjZiMDE4NGNhODI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-08T02:29:43Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-09T00:24:39Z"}, "message": "Fix a bug where macros in expression position don't have expansion inidices in their spans", "tree": {"sha": "326006cdcd3ebd6dde97cd014895b77058b973f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/326006cdcd3ebd6dde97cd014895b77058b973f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84cb4ad96994dd8a0dd0d8827834526b0184ca82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84cb4ad96994dd8a0dd0d8827834526b0184ca82", "html_url": "https://github.com/rust-lang/rust/commit/84cb4ad96994dd8a0dd0d8827834526b0184ca82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84cb4ad96994dd8a0dd0d8827834526b0184ca82/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ac0bce64eba7c3433a481d78b617baf62eaac47", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac0bce64eba7c3433a481d78b617baf62eaac47", "html_url": "https://github.com/rust-lang/rust/commit/8ac0bce64eba7c3433a481d78b617baf62eaac47"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "a4855ddcb25d26f32e1338f4d2d71a803e881ce8", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/84cb4ad96994dd8a0dd0d8827834526b0184ca82/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84cb4ad96994dd8a0dd0d8827834526b0184ca82/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=84cb4ad96994dd8a0dd0d8827834526b0184ca82", "patch": "@@ -60,14 +60,14 @@ pub fn expand_expr(e: P<ast::Expr>, fld: &mut MacroExpander) -> P<ast::Expr> {\n             };\n \n             // Keep going, outside-in.\n-            //\n             let fully_expanded = fld.fold_expr(expanded_expr);\n+            let span = fld.new_span(span); \n             fld.cx.bt_pop();\n \n             fully_expanded.map(|e| ast::Expr {\n                 id: ast::DUMMY_NODE_ID,\n                 node: e.node,\n-                span: fld.new_span(span),\n+                span: span,\n             })\n         }\n \n@@ -367,7 +367,8 @@ pub fn expand_expr(e: P<ast::Expr>, fld: &mut MacroExpander) -> P<ast::Expr> {\n /// of expansion and the mark which must be applied to the result.\n /// Our current interface doesn't allow us to apply the mark to the\n /// result until after calling make_expr, make_items, etc.\n-fn expand_mac_invoc<T, F, G>(mac: ast::Mac, span: codemap::Span,\n+fn expand_mac_invoc<T, F, G>(mac: ast::Mac,\n+                             span: codemap::Span,\n                              parse_thunk: F,\n                              mark_thunk: G,\n                              fld: &mut MacroExpander)"}]}