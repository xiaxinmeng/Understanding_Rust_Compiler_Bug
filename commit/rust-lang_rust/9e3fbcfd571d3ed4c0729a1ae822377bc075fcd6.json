{"sha": "9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllM2ZiY2ZkNTcxZDNlZDRjMDcyOWExYWU4MjIzNzdiYzA3NWZjZDY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-11T14:17:08Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T07:52:35Z"}, "message": "Merge `StaticMut` and `Static` logic", "tree": {"sha": "8668da7fd272dbfa789d4ed0369ba7f4722b9151", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8668da7fd272dbfa789d4ed0369ba7f4722b9151"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6", "html_url": "https://github.com/rust-lang/rust/commit/9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6fa4070bea1cf94b6fbab5028057d5604c600ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6fa4070bea1cf94b6fbab5028057d5604c600ee", "html_url": "https://github.com/rust-lang/rust/commit/d6fa4070bea1cf94b6fbab5028057d5604c600ee"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c450e3be1dda1c5d988aecc65ab49a851a7bccda", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=9e3fbcfd571d3ed4c0729a1ae822377bc075fcd6", "patch": "@@ -44,9 +44,9 @@ struct InternVisitor<'rt, 'a: 'rt, 'mir: 'rt, 'tcx: 'a+'rt+'mir> {\n \n #[derive(Copy, Clone, Debug, PartialEq, Hash, Eq)]\n enum InternMode {\n-    /// Mutable references don't change the `mutability` field to `Immutable`\n-    StaticMut,\n-    /// Mutable references must in fact be immutable due to their surrounding immutability\n+    /// Mutable references must in fact be immutable due to their surrounding immutability in a\n+    /// `static`. In a `static mut` we start out as mutable and thus can also contain further `&mtu`\n+    /// that will actually be treated as mutable.\n     Static,\n     /// UnsafeCell is OK in the value of a constant, but not behind references in a constant\n     ConstBase,\n@@ -171,10 +171,10 @@ for\n                 // This is not an inherent limitation, but one that we know to be true, because\n                 // const qualification enforces it. We can lift it in the future.\n                 match (self.mode, mutability) {\n-                    // all is \"good and well\" in the unsoundness of `static mut`\n-                    (InternMode::StaticMut, _) => {},\n                     // immutable references are fine everywhere\n                     (_, hir::Mutability::MutImmutable) => {},\n+                    // all is \"good and well\" in the unsoundness of `static mut`\n+\n                     // mutable references are ok in `static`. Either they are treated as immutable\n                     // because they are behind an immutable one, or they are behind an `UnsafeCell`\n                     // and thus ok.\n@@ -251,7 +251,7 @@ pub fn intern_const_alloc_recursive(\n         Some(hir::Mutability::MutImmutable) => (Mutability::Immutable, InternMode::Static),\n         None => (Mutability::Immutable, InternMode::ConstBase),\n         // `static mut` doesn't care about interior mutability, it's mutable anyway\n-        Some(hir::Mutability::MutMutable) => (Mutability::Mutable, InternMode::StaticMut),\n+        Some(hir::Mutability::MutMutable) => (Mutability::Mutable, InternMode::Static),\n     };\n \n     // type based interning"}]}